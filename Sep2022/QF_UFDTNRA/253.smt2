(set-option :print-success false)
(set-option :produce-models true)
(set-logic QF_UFDTNRA)
(declare-fun uninterp_frac (Real Real) Real)
(define-fun axiom_frac_bound ((d1 Real) (d2 Real)) Bool (and (=> (> d2 0) (and (<= 0.0 (uninterp_frac d1 d2)) (< (uninterp_frac d1 d2) 1.0))) (=> (< d2 0) (and (>= 0.0 (uninterp_frac d1 d2)) (> (uninterp_frac d1 d2) (- 1.0))))))
(define-fun axiom_frac_zero ((d1 Real) (d2 Real) (m1 Real) (m2 Real) (e Real)) Bool (=> (and (= d1 (* m1 m2)) (or (= d2 m1) (= d2 m2))) (= e 0)))
(define-fun uninterp_mod ((x Real) (m Real)) Real (ite (and (>= x 0) (< x m)) x (ite (and (>= x m) (< x (+ m m))) (- x m) (ite (and (>= x (- m)) (< x 0)) (+ x m) (* m (uninterp_frac x m))))))
(define-fun axiom_int_approximation ((x Real)) Bool (or (= x 0) (>= x 1) (<= x (- 1))))
(declare-datatypes ((x930 0)) (((x1366 (x1663 x930) (x181 x930) (x178 Real)) (x631 (x687 x930) (x1096 Real)) (x1258 (x1545 Real)))))
(declare-fun x947 () Bool)
(declare-fun x87 () Real)
(declare-fun x587 () Real)
(declare-fun x889 () Real)
(declare-fun x1350 () Bool)
(declare-fun x111 (Real) Real)
(declare-fun x1649 () Real)
(declare-fun x1080 () Bool)
(declare-fun x1685 () Real)
(declare-fun x1340 () Bool)
(declare-fun x389 () Real)
(declare-fun x1135 () Bool)
(declare-fun x824 () Bool)
(declare-fun x1151 () Real)
(declare-fun x1084 () Bool)
(declare-fun x584 () Bool)
(declare-fun x878 () Real)
(declare-fun x10 () Bool)
(declare-fun x258 () Bool)
(declare-fun x379 () Bool)
(declare-fun x310 () Bool)
(declare-fun x1612 () Real)
(declare-fun x1794 () Bool)
(declare-fun x1478 () Real)
(declare-fun x833 () Bool)
(declare-fun x88 () Bool)
(declare-fun x625 () Real)
(declare-fun x689 (Real) Real)
(declare-fun x594 () Real)
(declare-fun x756 (Real) Real)
(declare-fun x729 () Real)
(declare-fun x1024 () Bool)
(declare-fun x1193 () Real)
(declare-fun x726 () Real)
(declare-fun x1652 (Real) Real)
(declare-fun x1849 () Real)
(declare-fun x1007 () Real)
(declare-fun x1680 () Bool)
(declare-fun x770 () Real)
(declare-fun x415 () Real)
(declare-fun x849 () Real)
(declare-fun x1406 () Bool)
(declare-fun x1292 () Bool)
(declare-fun x1127 () Bool)
(declare-fun x1410 () Bool)
(declare-fun x1089 () Real)
(declare-fun x1254 () Real)
(declare-fun x1695 () Bool)
(declare-fun x809 () Real)
(declare-fun x440 (Real) Real)
(declare-fun x1435 () Real)
(declare-fun x1088 () Bool)
(declare-fun x75 () Real)
(declare-fun x365 () Bool)
(declare-fun x1782 () Bool)
(declare-fun x1604 () Bool)
(declare-fun x956 () Real)
(declare-fun x1590 () Real)
(declare-fun x1187 () Real)
(declare-fun x573 () Real)
(declare-fun x129 () Real)
(declare-fun x667 () Real)
(declare-fun x695 () Real)
(declare-fun x264 () Bool)
(declare-fun x313 (Real) Real)
(declare-fun x1493 () Bool)
(declare-fun x1211 () Bool)
(declare-fun x921 () Real)
(declare-fun x1759 () Real)
(declare-fun x1717 () Real)
(declare-fun x1223 () Real)
(declare-fun x1198 () Bool)
(declare-fun x256 () Real)
(declare-fun x1104 () Real)
(declare-fun x422 () x930)
(declare-fun x1621 () Real)
(declare-fun x60 () Real)
(declare-fun x1732 () Real)
(declare-fun x503 () Bool)
(declare-fun x217 (Real) Real)
(declare-fun x886 () Bool)
(declare-fun x811 () Real)
(declare-fun x834 () Real)
(declare-fun x546 () x930)
(declare-fun x279 (Real) Real)
(declare-fun x555 () Real)
(declare-fun x1437 () Bool)
(declare-fun x1502 () Real)
(declare-fun x1840 () Bool)
(declare-fun x105 () Bool)
(declare-fun x1194 (Real) Real)
(declare-fun x757 () Bool)
(declare-fun x1479 () Real)
(declare-fun x1710 () Bool)
(declare-fun x723 () Bool)
(declare-fun x1233 () Bool)
(declare-fun x670 (Real) Real)
(declare-fun x823 () Bool)
(declare-fun x1409 () Real)
(declare-fun x911 () Bool)
(declare-fun x1065 () Real)
(declare-fun x1259 () Real)
(declare-fun x692 () Real)
(declare-fun x1646 () Real)
(declare-fun x794 () x930)
(declare-fun x1659 () Real)
(declare-fun x902 () Bool)
(declare-fun x226 () Real)
(declare-fun x522 () Bool)
(declare-fun x817 () Bool)
(declare-fun x1584 () Bool)
(declare-fun x319 () Real)
(declare-fun x1081 () Real)
(declare-fun x1297 () Bool)
(declare-fun x628 () Bool)
(declare-fun x270 () Real)
(declare-fun x1373 () Bool)
(declare-fun x768 () Bool)
(declare-fun x528 () Real)
(declare-fun x1564 () Real)
(declare-fun x1041 () Real)
(declare-fun x1444 () Bool)
(declare-fun x166 () Bool)
(declare-fun x1230 () Real)
(declare-fun x961 () Real)
(declare-fun x163 () Real)
(declare-fun x919 () Bool)
(declare-fun x812 () Real)
(declare-fun x47 () Real)
(declare-fun x1010 () Real)
(declare-fun x425 () Real)
(declare-fun x1640 () Real)
(declare-fun x610 () Bool)
(declare-fun x286 () Real)
(declare-fun x1536 () Real)
(declare-fun x992 (x930) Real)
(declare-fun x442 () Bool)
(declare-fun x1019 () Bool)
(declare-fun x1814 () Real)
(declare-fun x1745 () Bool)
(declare-fun x1363 () Real)
(declare-fun x182 () Bool)
(declare-fun x1847 () Bool)
(declare-fun x765 () Bool)
(declare-fun x283 (Real) Real)
(declare-fun x102 () Bool)
(declare-fun x1260 () Real)
(declare-fun x1562 () Real)
(declare-fun x301 () Bool)
(declare-fun x1243 () Real)
(declare-fun x245 () Real)
(declare-fun x1349 () Bool)
(declare-fun x1173 () Bool)
(declare-fun x1881 () Bool)
(declare-fun x378 () Bool)
(declare-fun x1368 () Bool)
(declare-fun x1314 () Bool)
(declare-fun x1116 () Bool)
(declare-fun x929 () Real)
(declare-fun x417 () Real)
(declare-fun x321 () Bool)
(declare-fun x148 () Bool)
(declare-fun x92 () Real)
(declare-fun x686 () Real)
(declare-fun x799 () Bool)
(declare-fun x774 () Bool)
(declare-fun x865 () Real)
(declare-fun x152 () Real)
(declare-fun x1616 () Real)
(declare-fun x1675 () Bool)
(declare-fun x1282 (Real) Real)
(declare-fun x441 () Real)
(declare-fun x1178 () Real)
(declare-fun x450 () x930)
(declare-fun x1816 () Real)
(declare-fun x120 () Bool)
(declare-fun x1191 () Bool)
(declare-fun x82 () x930)
(declare-fun x1755 () Bool)
(declare-fun x1204 () Bool)
(declare-fun x1780 (Real) Real)
(declare-fun x35 () Real)
(declare-fun x202 () Real)
(declare-fun x1150 () Real)
(declare-fun x336 () Real)
(declare-fun x1568 () Bool)
(declare-fun x932 () Bool)
(declare-fun x1389 () Real)
(declare-fun x259 () Real)
(declare-fun x946 (Real) Real)
(declare-fun x1645 () Bool)
(declare-fun x1309 () Real)
(declare-fun x273 () Bool)
(declare-fun x1252 () Real)
(declare-fun x212 () Real)
(declare-fun x1512 () Real)
(declare-fun x1763 () Bool)
(declare-fun x1772 () Real)
(declare-fun x334 () Real)
(declare-fun x896 () Bool)
(declare-fun x560 () Real)
(declare-fun x1709 () Real)
(declare-fun x295 () Bool)
(declare-fun x397 () Real)
(declare-fun x281 () Real)
(declare-fun x1860 () Bool)
(declare-fun x914 () Real)
(declare-fun x1804 () Real)
(declare-fun x679 () Real)
(declare-fun x449 () Real)
(declare-fun x1436 () Bool)
(declare-fun x1810 (Real) Real)
(declare-fun x869 () Real)
(declare-fun x1305 () Bool)
(declare-fun x1391 (Real) Real)
(declare-fun x1303 () Bool)
(declare-fun x1429 () Bool)
(declare-fun x632 () Bool)
(declare-fun x945 () Real)
(declare-fun x1850 () Bool)
(declare-fun x1813 () Bool)
(declare-fun x1690 () Real)
(declare-fun x1737 () x930)
(declare-fun x197 () Bool)
(declare-fun x1149 () Bool)
(declare-fun x1460 () Bool)
(declare-fun x1829 () Real)
(declare-fun x1195 () Bool)
(declare-fun x1237 (Real) Real)
(declare-fun x1482 () Bool)
(declare-fun x1 () Real)
(declare-fun x170 () Real)
(declare-fun x1535 () Real)
(declare-fun x711 () Bool)
(declare-fun x1885 (Real) Real)
(declare-fun x1073 () Real)
(declare-fun x128 () x930)
(declare-fun x1308 () Real)
(declare-fun x526 () Real)
(declare-fun x1302 () Real)
(declare-fun x1457 () Bool)
(declare-fun x1666 () Real)
(declare-fun x1631 () Bool)
(declare-fun x516 () Bool)
(declare-fun x227 () Real)
(declare-fun x891 () Bool)
(declare-fun x826 () Real)
(declare-fun x538 () Real)
(declare-fun x328 () Real)
(declare-fun x16 () Bool)
(declare-fun x868 () Bool)
(declare-fun x165 () Bool)
(declare-fun x532 () Bool)
(declare-fun x521 () Bool)
(declare-fun x662 () Real)
(declare-fun x646 () Real)
(declare-fun x38 (Real) Real)
(declare-fun x478 (Real) Real)
(declare-fun x62 () Real)
(declare-fun x1030 () Real)
(declare-fun x253 () Real)
(declare-fun x1877 () Real)
(declare-fun x564 () Bool)
(declare-fun x835 () Real)
(declare-fun x9 () Bool)
(declare-fun x1768 () Real)
(declare-fun x106 () Real)
(declare-fun x967 () Bool)
(declare-fun x1684 () Real)
(declare-fun x874 () Bool)
(declare-fun x981 () Real)
(declare-fun x95 () Real)
(declare-fun x262 () Bool)
(declare-fun x832 () Bool)
(declare-fun x1109 () Bool)
(declare-fun x1487 () Real)
(declare-fun x1706 () Real)
(declare-fun x805 () Real)
(declare-fun x1324 () Real)
(declare-fun x511 () Bool)
(declare-fun x951 () Real)
(declare-fun x1095 () x930)
(declare-fun x533 (Real) Real)
(declare-fun x784 () Real)
(declare-fun x1803 () Bool)
(declare-fun x214 () Real)
(declare-fun x1603 () Real)
(declare-fun x973 () Bool)
(declare-fun x1619 () Real)
(declare-fun x847 () Real)
(declare-fun x859 () Bool)
(declare-fun x888 () Bool)
(declare-fun x558 () Bool)
(declare-fun x1476 () Real)
(declare-fun x656 (Real) Real)
(declare-fun x386 (Real) Real)
(declare-fun x1342 () Real)
(declare-fun x1176 () Real)
(declare-fun x727 () Bool)
(declare-fun x1886 () Real)
(declare-fun x14 () Bool)
(declare-fun x1637 () Bool)
(declare-fun x249 () x930)
(declare-fun x509 () Real)
(declare-fun x925 () Bool)
(declare-fun x48 () Real)
(declare-fun x557 () Bool)
(declare-fun x710 () Real)
(declare-fun x1856 () Real)
(declare-fun x161 () Bool)
(declare-fun x1605 () Real)
(declare-fun x354 () Bool)
(declare-fun x1327 (x930) Real)
(declare-fun x1573 () Real)
(declare-fun x228 () Bool)
(declare-fun x13 () Real)
(declare-fun x1524 () Real)
(declare-fun x1586 () Bool)
(declare-fun x798 () Real)
(declare-fun x1434 () Bool)
(declare-fun x149 () Bool)
(declare-fun x292 () Bool)
(declare-fun x1161 () Bool)
(declare-fun x995 () Bool)
(declare-fun x1477 () Real)
(declare-fun x271 () Bool)
(declare-fun x1239 () Bool)
(declare-fun x599 () Real)
(declare-fun x235 () Real)
(declare-fun x1235 () Bool)
(declare-fun x1446 () Real)
(declare-fun x463 () Real)
(declare-fun x785 (x930) Real)
(declare-fun x1032 () Bool)
(declare-fun x136 (Real) Real)
(declare-fun x1475 (Real) Real)
(declare-fun x944 () Bool)
(declare-fun x1770 () Real)
(declare-fun x383 () Real)
(declare-fun x1589 () Bool)
(declare-fun x315 () Real)
(declare-fun x588 (Real) Real)
(declare-fun x1060 () Bool)
(declare-fun x1227 () Real)
(declare-fun x636 () Real)
(declare-fun x661 () Real)
(declare-fun x486 () Bool)
(declare-fun x704 (Real) Real)
(declare-fun x115 () Real)
(declare-fun x1271 () Bool)
(declare-fun x840 () Real)
(declare-fun x1045 () Bool)
(declare-fun x367 () Real)
(declare-fun x1667 () Bool)
(declare-fun x758 () Bool)
(declare-fun x541 () Real)
(declare-fun x709 () Bool)
(declare-fun x821 () Bool)
(declare-fun x140 () Bool)
(declare-fun x1656 () Real)
(declare-fun x743 () Bool)
(declare-fun x660 (x930) Real)
(declare-fun x39 () x930)
(declare-fun x109 () Real)
(declare-fun x1047 () Real)
(declare-fun x423 () Real)
(declare-fun x447 () Real)
(declare-fun x719 () Bool)
(declare-fun x569 () Bool)
(declare-fun x749 () Real)
(declare-fun x1398 () Real)
(declare-fun x1606 () Bool)
(declare-fun x1635 () Bool)
(declare-fun x1091 () Real)
(declare-fun x183 () Real)
(declare-fun x620 () Real)
(declare-fun x701 () Bool)
(declare-fun x1725 () x930)
(declare-fun x698 () Real)
(declare-fun x1904 () Bool)
(declare-fun x1822 () Bool)
(declare-fun x1137 () Real)
(declare-fun x6 () Real)
(declare-fun x1029 () Bool)
(declare-fun x265 () Bool)
(declare-fun x1808 (Real) Real)
(declare-fun x860 () Real)
(declare-fun x1379 () Bool)
(declare-fun x1301 () Real)
(declare-fun x409 () Real)
(declare-fun x1686 () Real)
(declare-fun x747 () Bool)
(declare-fun x551 () Bool)
(declare-fun x1571 () Real)
(declare-fun x70 () Real)
(declare-fun x1105 (Real) Real)
(declare-fun x1124 (Real) Real)
(declare-fun x892 () Real)
(declare-fun x1839 (Real) Real)
(declare-fun x600 () Bool)
(declare-fun x1415 () Real)
(declare-fun x1375 (x930) Real)
(declare-fun x1174 () Real)
(declare-fun x1858 () Bool)
(declare-fun x1320 () Real)
(declare-fun x1244 () Real)
(declare-fun x1889 () Bool)
(declare-fun x1099 () Real)
(declare-fun x1196 () Real)
(declare-fun x240 () Real)
(declare-fun x1898 (Real) Real)
(declare-fun x987 () Real)
(declare-fun x680 () Bool)
(declare-fun x1747 () Real)
(declare-fun x1283 () Real)
(declare-fun x1792 () Real)
(declare-fun x1595 () Real)
(declare-fun x1053 () Real)
(declare-fun x669 () x930)
(declare-fun x1902 () Real)
(declare-fun x731 () Bool)
(declare-fun x1185 () Bool)
(declare-fun x707 () Bool)
(declare-fun x716 () Real)
(declare-fun x1209 () Bool)
(declare-fun x1224 () Real)
(declare-fun x435 (Real) Real)
(declare-fun x1472 () Real)
(declare-fun x22 () Bool)
(declare-fun x1501 (Real) Real)
(declare-fun x107 () Real)
(declare-fun x613 () Bool)
(declare-fun x1555 () x930)
(declare-fun x1617 () Bool)
(declare-fun x966 () Real)
(declare-fun x858 () Bool)
(declare-fun x678 () Bool)
(declare-fun x1624 () Real)
(declare-fun x1744 () Real)
(declare-fun x384 () Bool)
(declare-fun x4 () Bool)
(declare-fun x508 () Real)
(declare-fun x1278 () Real)
(declare-fun x405 () Real)
(declare-fun x494 () Bool)
(declare-fun x110 () Real)
(declare-fun x900 () Bool)
(declare-fun x1038 () Bool)
(declare-fun x820 () Bool)
(declare-fun x155 () Bool)
(declare-fun x499 () Real)
(declare-fun x1263 () Real)
(declare-fun x1704 () Real)
(declare-fun x8 () Real)
(declare-fun x1654 () Bool)
(declare-fun x1699 () Real)
(declare-fun x1783 () x930)
(declare-fun x1256 () Bool)
(declare-fun x167 () Real)
(declare-fun x1121 () Bool)
(declare-fun x380 () Real)
(declare-fun x237 () Bool)
(declare-fun x635 () Real)
(declare-fun x300 () Bool)
(declare-fun x845 () Real)
(declare-fun x1071 () x930)
(declare-fun x368 () Bool)
(declare-fun x851 () Bool)
(declare-fun x1132 () Real)
(declare-fun x1888 () Real)
(declare-fun x1328 () Real)
(declare-fun x231 () Real)
(declare-fun x1018 (x930) Real)
(declare-fun x298 () Real)
(declare-fun x373 () Bool)
(declare-fun x143 () Real)
(declare-fun x581 () Bool)
(declare-fun x1544 () Bool)
(declare-fun x972 () Bool)
(declare-fun x1838 () Real)
(declare-fun x467 () Real)
(declare-fun x936 () Real)
(declare-fun x127 (Real) Real)
(declare-fun x374 () Real)
(declare-fun x883 () Real)
(declare-fun x1171 () Real)
(declare-fun x527 () x930)
(declare-fun x901 () Bool)
(declare-fun x990 () Real)
(declare-fun x1806 () Bool)
(declare-fun x843 (Real) Real)
(declare-fun x1304 () Bool)
(declare-fun x369 () Real)
(declare-fun x534 () Bool)
(declare-fun x1576 () Bool)
(declare-fun x1556 () Bool)
(declare-fun x787 () Real)
(declare-fun x1217 () Real)
(declare-fun x1092 () Real)
(declare-fun x941 () Bool)
(declare-fun x457 () Real)
(declare-fun x759 () Bool)
(declare-fun x1694 () x930)
(declare-fun x1157 (Real) Real)
(declare-fun x1526 () Real)
(declare-fun x841 () Bool)
(declare-fun x276 () Real)
(declare-fun x1853 () Real)
(declare-fun x1097 () x930)
(declare-fun x1641 () Bool)
(declare-fun x818 () Real)
(declare-fun x1844 () Bool)
(declare-fun x1587 () Bool)
(declare-fun x1746 (Real) Real)
(declare-fun x1199 () Bool)
(declare-fun x1716 () Real)
(declare-fun x1607 () Bool)
(declare-fun x1042 () Bool)
(declare-fun x1376 () Bool)
(declare-fun x552 () Real)
(declare-fun x1113 () Bool)
(declare-fun x151 () x930)
(declare-fun x1323 () Real)
(declare-fun x1393 () Real)
(declare-fun x876 () Real)
(declare-fun x1801 () Bool)
(declare-fun x752 () Bool)
(declare-fun x1025 (Real) Real)
(declare-fun x939 (Real) Real)
(declare-fun x1118 () Real)
(declare-fun x1913 () Bool)
(declare-fun x1170 () Real)
(declare-fun x838 () Real)
(declare-fun x436 () Bool)
(declare-fun x693 (Real) Real)
(declare-fun x1412 () Bool)
(declare-fun x1697 () Real)
(declare-fun x1184 () Bool)
(declare-fun x1672 () Bool)
(declare-fun x1559 () Bool)
(declare-fun x316 () Real)
(declare-fun x326 (Real) Real)
(declare-fun x619 () Real)
(declare-fun x420 () Bool)
(declare-fun x1139 () Bool)
(declare-fun x853 () Real)
(declare-fun x329 () Bool)
(declare-fun x1791 () Real)
(declare-fun x1208 () Bool)
(declare-fun x1611 () Real)
(declare-fun x1516 () Real)
(declare-fun x1863 () Real)
(declare-fun x1664 () Real)
(declare-fun x856 () Bool)
(declare-fun x312 () Bool)
(declare-fun x1225 (Real) Real)
(declare-fun x130 () Bool)
(declare-fun x395 () Real)
(declare-fun x561 () Real)
(declare-fun x700 () Real)
(declare-fun x1343 () Bool)
(declare-fun x1102 (x930) Real)
(declare-fun x1365 () Real)
(declare-fun x1251 () Bool)
(declare-fun x1425 (x930) Real)
(declare-fun x1715 () Bool)
(declare-fun x1703 () Real)
(declare-fun x7 () Real)
(declare-fun x879 () x930)
(declare-fun x1264 () Bool)
(declare-fun x1671 () Real)
(declare-fun x1414 () Bool)
(declare-fun x21 () Bool)
(declare-fun x195 () Real)
(declare-fun x745 () Bool)
(declare-fun x1215 () Bool)
(declare-fun x1299 () Bool)
(declare-fun x1818 () Real)
(declare-fun x831 () Real)
(declare-fun x965 () Bool)
(declare-fun x79 () Bool)
(declare-fun x696 () Real)
(declare-fun x1248 () Bool)
(declare-fun x1787 () Bool)
(declare-fun x318 () Real)
(declare-fun x1423 () Real)
(declare-fun x207 () Bool)
(declare-fun x1142 () x930)
(declare-fun x937 () Real)
(declare-fun x1662 () Bool)
(declare-fun x924 () Real)
(declare-fun x622 () Real)
(declare-fun x56 () Bool)
(declare-fun x1668 () Bool)
(declare-fun x434 (Real) Real)
(declare-fun x401 () Bool)
(declare-fun x1339 (Real) Real)
(declare-fun x1689 () Bool)
(declare-fun x340 () x930)
(declare-fun x1633 () Real)
(declare-fun x893 () Real)
(declare-fun x55 () Real)
(declare-fun x1453 () Real)
(declare-fun x337 () Bool)
(declare-fun x1459 () Real)
(declare-fun x1761 () Real)
(declare-fun x100 () Real)
(declare-fun x46 () Bool)
(declare-fun x1008 () Bool)
(declare-fun x786 () Real)
(declare-fun x1175 () Real)
(declare-fun x647 () Bool)
(declare-fun x1841 () Real)
(declare-fun x307 (Real) Real)
(declare-fun x728 (Real) Real)
(declare-fun x1831 () Real)
(declare-fun x1751 () Real)
(declare-fun x674 () Real)
(declare-fun x514 (Real) Real)
(declare-fun x1381 () Real)
(declare-fun x306 () Real)
(declare-fun x1743 () Bool)
(declare-fun x1160 () Bool)
(declare-fun x201 () Real)
(declare-fun x592 () Bool)
(declare-fun x1011 () x930)
(declare-fun x1585 () Real)
(declare-fun x1392 (Real) Real)
(declare-fun x1288 () Real)
(declare-fun x894 () Real)
(declare-fun x1742 () Bool)
(declare-fun x827 () Bool)
(declare-fun x1528 () Bool)
(declare-fun x476 () Real)
(declare-fun x1722 () Bool)
(declare-fun x162 () Bool)
(declare-fun x1903 () Real)
(declare-fun x706 () Bool)
(declare-fun x74 () Bool)
(declare-fun x1399 (Real) Real)
(declare-fun x1546 () Real)
(declare-fun x530 () Bool)
(declare-fun x994 () Bool)
(declare-fun x1003 () Bool)
(declare-fun x156 () Real)
(declare-fun x1144 () Real)
(declare-fun x309 (Real) Real)
(declare-fun x194 () Bool)
(declare-fun x872 () Bool)
(declare-fun x1272 () Bool)
(declare-fun x387 (Real) Real)
(declare-fun x1158 () Real)
(declare-fun x241 () Bool)
(declare-fun x239 () Real)
(declare-fun x1279 () Real)
(declare-fun x1422 () Bool)
(declare-fun x1560 () Real)
(declare-fun x629 () Real)
(declare-fun x1249 () Bool)
(declare-fun x1484 () Bool)
(declare-fun x1802 () Real)
(declare-fun x124 () Bool)
(declare-fun x1122 () Bool)
(declare-fun x1786 () Real)
(declare-fun x320 () Bool)
(declare-fun x1872 () Bool)
(declare-fun x1370 (Real) Real)
(declare-fun x1419 () Bool)
(declare-fun x1811 () Real)
(declare-fun x867 () Real)
(declare-fun x1317 () Real)
(declare-fun x568 () Bool)
(declare-fun x848 (x930) Real)
(declare-fun x563 () Real)
(declare-fun x1488 () Real)
(declare-fun x1207 (x930) Real)
(declare-fun x1123 () Bool)
(declare-fun x1767 () Real)
(declare-fun x905 () Real)
(declare-fun x1777 () Bool)
(declare-fun x621 () Bool)
(declare-fun x1354 (Real) Real)
(declare-fun x1509 () Bool)
(declare-fun x1788 (Real) Real)
(declare-fun x338 () Bool)
(declare-fun x1148 () Real)
(declare-fun x1461 () Bool)
(declare-fun x864 (Real) Real)
(declare-fun x643 () Real)
(declare-fun x325 () Bool)
(declare-fun x1296 () Real)
(declare-fun x536 () Real)
(declare-fun x1310 () Real)
(declare-fun x1293 () Real)
(declare-fun x1880 () Real)
(declare-fun x26 () Real)
(declare-fun x1894 () Real)
(declare-fun x1471 () Real)
(declare-fun x1579 () Real)
(declare-fun x657 () Real)
(declare-fun x668 () Real)
(declare-fun x617 () Bool)
(declare-fun x1201 () Bool)
(declare-fun x191 () Bool)
(declare-fun x1653 () Bool)
(declare-fun x1156 () Bool)
(declare-fun x1470 () Bool)
(declare-fun x1825 () Real)
(declare-fun x1834 () Bool)
(declare-fun x404 (Real) Real)
(declare-fun x1795 () Bool)
(declare-fun x80 () Bool)
(declare-fun x518 () x930)
(declare-fun x1873 () Real)
(declare-fun x940 () Bool)
(declare-fun x982 () Real)
(declare-fun x1140 () Real)
(declare-fun x630 () Real)
(declare-fun x816 () Real)
(declare-fun x1265 () Real)
(declare-fun x1789 () Real)
(declare-fun x857 (Real) Real)
(declare-fun x138 () Bool)
(declare-fun x179 () Bool)
(declare-fun x1090 () Bool)
(declare-fun x146 () Bool)
(declare-fun x718 () Real)
(declare-fun x996 () Real)
(declare-fun x738 (Real) Real)
(declare-fun x257 () Real)
(declare-fun x255 () Bool)
(declare-fun x208 () Real)
(declare-fun x1549 () Bool)
(declare-fun x1051 () Bool)
(declare-fun x1657 () Bool)
(declare-fun x52 () Real)
(declare-fun x1325 () Real)
(declare-fun x822 () Bool)
(declare-fun x976 () Bool)
(declare-fun x681 () Real)
(declare-fun x1377 () Bool)
(declare-fun x190 () Real)
(declare-fun x550 () Real)
(declare-fun x49 () Bool)
(declare-fun x1337 () Real)
(declare-fun x1295 () Bool)
(declare-fun x73 () Bool)
(declare-fun x219 () Real)
(declare-fun x1181 () Bool)
(declare-fun x1205 () x930)
(declare-fun x1210 () Real)
(declare-fun x598 () Bool)
(declare-fun x1463 () Real)
(declare-fun x979 () Real)
(declare-fun x839 () Real)
(declare-fun x1448 () Real)
(declare-fun x1796 () Real)
(declare-fun x1550 () Real)
(declare-fun x1665 () Bool)
(declare-fun x673 () Real)
(declare-fun x1833 () x930)
(declare-fun x1426 () Real)
(declare-fun x490 () Real)
(declare-fun x1809 () Bool)
(declare-fun x36 (x930) Real)
(declare-fun x200 () Real)
(declare-fun x1861 () Bool)
(declare-fun x1651 () Real)
(declare-fun x376 () Real)
(declare-fun x1492 () Bool)
(declare-fun x150 () Bool)
(declare-fun x1043 () Real)
(declare-fun x1334 () Real)
(declare-fun x875 () Bool)
(declare-fun x1432 () Real)
(declare-fun x764 () Bool)
(declare-fun x791 () x930)
(declare-fun x1812 () Real)
(declare-fun x1629 () Real)
(declare-fun x1384 () Real)
(declare-fun x1395 () x930)
(declare-fun x525 () Bool)
(declare-fun x1828 () Real)
(declare-fun x1115 () Bool)
(declare-fun x488 () Bool)
(declare-fun x1219 () Real)
(declare-fun x804 () Real)
(declare-fun x1401 () x930)
(declare-fun x1669 () Real)
(declare-fun x750 () Bool)
(declare-fun x382 () Bool)
(declare-fun x803 (Real) Real)
(declare-fun x1500 () Bool)
(declare-fun x918 () Real)
(declare-fun x1506 () Real)
(declare-fun x863 () Bool)
(declare-fun x31 () Bool)
(declare-fun x1773 () Bool)
(declare-fun x1385 () Real)
(declare-fun x1236 () x930)
(declare-fun x118 () Real)
(declare-fun x1503 (Real) Real)
(declare-fun x1359 () Bool)
(declare-fun x364 () Bool)
(declare-fun x1232 () Real)
(declare-fun x2 () Bool)
(declare-fun x1261 () Real)
(declare-fun x1110 () Real)
(declare-fun x1424 () Real)
(declare-fun x1865 () Bool)
(declare-fun x1040 (Real) Real)
(declare-fun x1899 () Bool)
(declare-fun x53 () Bool)
(declare-fun x713 () Real)
(declare-fun x343 () Real)
(declare-fun x1313 () Bool)
(declare-fun x1712 () Real)
(declare-fun x1068 () Bool)
(declare-fun x99 () Real)
(declare-fun x1133 () Real)
(declare-fun x1129 () Bool)
(declare-fun x609 () Real)
(declare-fun x1529 () Bool)
(declare-fun x1341 () Real)
(declare-fun x460 () Real)
(declare-fun x29 () Real)
(declare-fun x1338 () Real)
(declare-fun x1566 () Bool)
(declare-fun x1319 () Real)
(declare-fun x1906 () x930)
(declare-fun x1276 () Real)
(declare-fun x1867 () Real)
(declare-fun x360 (Real) Real)
(declare-fun x1692 (Real) Real)
(declare-fun x1228 () Real)
(declare-fun x1911 () Real)
(declare-fun x691 () Real)
(declare-fun x714 (Real) Real)
(declare-fun x1322 () Bool)
(declare-fun x938 () Bool)
(declare-fun x1404 () x930)
(declare-fun x28 () Real)
(declare-fun x451 () Real)
(declare-fun x1890 () Real)
(declare-fun x314 () Real)
(declare-fun x1125 () Bool)
(declare-fun x736 () Bool)
(declare-fun x1290 () Bool)
(declare-fun x1382 () Bool)
(declare-fun x986 () Real)
(declare-fun x469 () Bool)
(declare-fun x895 () Bool)
(declare-fun x322 () Bool)
(declare-fun x697 () Real)
(declare-fun x502 () Real)
(declare-fun x1182 () Real)
(declare-fun x556 () Real)
(declare-fun x899 () Real)
(declare-fun x1270 () Bool)
(declare-fun x1734 () Real)
(declare-fun x650 () Bool)
(declare-fun x915 () Real)
(declare-fun x121 () Bool)
(declare-fun x1348 () Real)
(declare-fun x1086 () Bool)
(declare-fun x357 () Bool)
(declare-fun x591 () Real)
(declare-fun x1394 () Bool)
(declare-fun x1602 () Real)
(declare-fun x720 () Real)
(declare-fun x1155 () Real)
(declare-fun x907 () Real)
(declare-fun x1346 () Bool)
(declare-fun x574 (Real) Real)
(declare-fun x746 () Bool)
(declare-fun x287 () Real)
(declare-fun x123 () Bool)
(declare-fun x1613 () Bool)
(declare-fun x1581 () Bool)
(declare-fun x705 () x930)
(declare-fun x1868 () Real)
(declare-fun x1439 () Bool)
(declare-fun x1016 () Bool)
(declare-fun x1070 () Bool)
(declare-fun x1758 () Bool)
(declare-fun x1691 () Bool)
(declare-fun x1887 () Bool)
(declare-fun x549 () Real)
(declare-fun x642 () Bool)
(declare-fun x1650 () Bool)
(declare-fun x1798 () Bool)
(declare-fun x1026 () Bool)
(declare-fun x1451 () Real)
(declare-fun x285 () Bool)
(declare-fun x353 () Bool)
(declare-fun x1688 () Bool)
(declare-fun x977 () Bool)
(declare-fun x1004 (Real) Real)
(declare-fun x1718 () Real)
(declare-fun x175 () Bool)
(declare-fun x602 () Real)
(declare-fun x333 () Bool)
(declare-fun x454 () Real)
(declare-fun x186 () Real)
(declare-fun x1203 () Bool)
(declare-fun x377 (Real Real) Real)
(declare-fun x998 () Bool)
(declare-fun x520 (x930) Real)
(declare-fun x1220 () x930)
(declare-fun x134 () Real)
(declare-fun x830 () x930)
(declare-fun x793 () Bool)
(declare-fun x1082 () Real)
(declare-fun x773 () Real)
(declare-fun x1473 () Real)
(declare-fun x399 () Bool)
(declare-fun x885 () Bool)
(declare-fun x1101 () Real)
(declare-fun x513 (Real) Real)
(declare-fun x492 () Bool)
(declare-fun x465 () Bool)
(declare-fun x682 () Real)
(declare-fun x1111 () Bool)
(declare-fun x223 () Bool)
(declare-fun x1386 () Bool)
(declare-fun x1034 () Bool)
(declare-fun x962 () Bool)
(declare-fun x1774 () Real)
(declare-fun x1189 () x930)
(declare-fun x1504 (Real) Real)
(declare-fun x861 () Real)
(declare-fun x771 (Real) Real)
(declare-fun x432 () Real)
(declare-fun x1757 () Bool)
(declare-fun x1447 () Bool)
(declare-fun x1670 () Real)
(declare-fun x1421 () x930)
(declare-fun x1598 () Real)
(declare-fun x1427 () Real)
(declare-fun x1294 () Bool)
(declare-fun x1021 () Real)
(declare-fun x424 () Bool)
(declare-fun x1702 () Real)
(declare-fun x776 () Bool)
(declare-fun x1749 () Real)
(declare-fun x484 () Bool)
(declare-fun x1854 () Real)
(declare-fun x1707 () Bool)
(declare-fun x991 () Bool)
(declare-fun x755 () Bool)
(declare-fun x126 () Real)
(declare-fun x948 () Bool)
(declare-fun x844 () Real)
(declare-fun x542 () Real)
(declare-fun x248 (Real) Real)
(declare-fun x1390 () Bool)
(declare-fun x1266 () Bool)
(declare-fun x209 () Real)
(declare-fun x751 () Real)
(declare-fun x33 () Real)
(declare-fun x1355 () Bool)
(declare-fun x927 () Real)
(declare-fun x772 (Real) Real)
(declare-fun x487 () Bool)
(declare-fun x157 () Real)
(declare-fun x1696 () Real)
(declare-fun x800 (Real) Real)
(declare-fun x1250 () Real)
(declare-fun x1143 () Real)
(declare-fun x1312 () Real)
(declare-fun x1736 () Bool)
(declare-fun x1714 () Bool)
(declare-fun x1441 () Real)
(declare-fun x732 () Real)
(declare-fun x1711 () Real)
(declare-fun x1790 () Bool)
(declare-fun x1357 () Bool)
(declare-fun x1020 () Real)
(declare-fun x1533 () Real)
(declare-fun x1764 () Real)
(declare-fun x1799 () Bool)
(declare-fun x500 (Real) Real)
(declare-fun x428 () Real)
(declare-fun x1454 () Bool)
(declare-fun x583 () Bool)
(declare-fun x1720 () Bool)
(declare-fun x763 () Real)
(declare-fun x510 () Bool)
(declare-fun x1221 () Real)
(declare-fun x396 () Bool)
(declare-fun x1046 () Real)
(declare-fun x725 () Real)
(declare-fun x1413 () Bool)
(declare-fun x455 () Bool)
(declare-fun x690 () Real)
(declare-fun x296 () Real)
(declare-fun x280 () Bool)
(declare-fun x1900 () Real)
(declare-fun x1481 () Bool)
(declare-fun x819 () Real)
(declare-fun x1724 (Real) Real)
(declare-fun x577 () Bool)
(declare-fun x1567 () Real)
(declare-fun x1374 () Bool)
(declare-fun x1700 () Real)
(declare-fun x275 () Bool)
(declare-fun x11 () Real)
(declare-fun x1490 () Real)
(declare-fun x391 () Real)
(declare-fun x427 () Bool)
(declare-fun x1291 () Real)
(declare-fun x638 (Real) Real)
(declare-fun x288 () Real)
(declare-fun x1835 () Real)
(declare-fun x101 () Bool)
(declare-fun x64 () Bool)
(declare-fun x1112 () Real)
(declare-fun x531 () Bool)
(declare-fun x160 () Real)
(declare-fun x1311 () Real)
(declare-fun x1647 () Bool)
(declare-fun x616 () Real)
(declare-fun x1255 () Real)
(declare-fun x904 () Bool)
(declare-fun x252 () Real)
(declare-fun x311 () Bool)
(declare-fun x664 () Real)
(declare-fun x1539 () Real)
(declare-fun x489 () Bool)
(declare-fun x132 () Real)
(declare-fun x1388 () Real)
(declare-fun x539 () Bool)
(declare-fun x1166 () Real)
(declare-fun x1846 () Bool)
(declare-fun x104 () Bool)
(declare-fun x1464 () Bool)
(declare-fun x330 () Real)
(declare-fun x1458 () Real)
(declare-fun x1778 () Bool)
(declare-fun x618 (Real) Real)
(declare-fun x1417 () Bool)
(declare-fun x544 () Bool)
(declare-fun x1525 () Bool)
(declare-fun x188 () Bool)
(declare-fun x495 () Real)
(declare-fun x519 (Real) Real)
(declare-fun x960 () Real)
(declare-fun x665 () Bool)
(declare-fun x1130 () Real)
(declare-fun x983 () Real)
(declare-fun x1793 () Bool)
(declare-fun x90 () Real)
(declare-fun x922 () Real)
(declare-fun x477 () Real)
(declare-fun x1513 (Real) Real)
(declare-fun x1608 () Real)
(declare-fun x61 () Bool)
(declare-fun x41 () Real)
(declare-fun x345 () x930)
(declare-fun x1807 () Bool)
(declare-fun x1164 () Real)
(declare-fun x63 () x930)
(declare-fun x89 () Bool)
(declare-fun x1538 () x930)
(declare-fun x595 () Real)
(declare-fun x866 () Bool)
(declare-fun x855 () Real)
(declare-fun x1333 () Real)
(declare-fun x93 () Bool)
(declare-fun x1152 () Bool)
(declare-fun x783 (Real) Real)
(declare-fun x1300 () x930)
(declare-fun x335 () Real)
(declare-fun x1061 () Real)
(declare-fun x806 () Real)
(declare-fun x1226 () Bool)
(declare-fun x471 () Real)
(declare-fun x407 () Bool)
(declare-fun x117 () Real)
(declare-fun x654 () Real)
(declare-fun x5 () Bool)
(declare-fun x1054 () Real)
(declare-fun x1362 () Bool)
(declare-fun x1781 () Real)
(declare-fun x808 () Bool)
(declare-fun x640 () Real)
(declare-fun x20 () Real)
(declare-fun x676 () Real)
(declare-fun x797 () Bool)
(declare-fun x1557 () Real)
(declare-fun x1483 () Bool)
(declare-fun x754 () Real)
(declare-fun x418 () Real)
(declare-fun x559 () Bool)
(declare-fun x1378 () Bool)
(declare-fun x141 () Real)
(declare-fun x411 () Real)
(declare-fun x323 () Real)
(declare-fun x1462 (Real) Real)
(declare-fun x1609 () Bool)
(declare-fun x1852 () Real)
(declare-fun x299 () Real)
(declare-fun x1837 () Real)
(declare-fun x247 () Real)
(declare-fun x433 () Real)
(declare-fun x1583 () Bool)
(declare-fun x116 () Bool)
(declare-fun x246 () Real)
(declare-fun x652 () Real)
(declare-fun x94 () Bool)
(declare-fun x1766 () Bool)
(declare-fun x1698 () Bool)
(declare-fun x1756 () Real)
(declare-fun x324 () Real)
(declare-fun x462 (Real) Real)
(declare-fun x1884 () x930)
(declare-fun x565 () Bool)
(declare-fun x1356 () Real)
(declare-fun x1824 () Bool)
(declare-fun x19 () Bool)
(declare-fun x1530 () Bool)
(declare-fun x1289 () Real)
(declare-fun x392 () Real)
(declare-fun x1136 () Real)
(declare-fun x268 () Real)
(declare-fun x1682 () Bool)
(declare-fun x1551 () Bool)
(declare-fun x1485 () Bool)
(declare-fun x1876 () Bool)
(declare-fun x1683 () Real)
(declare-fun x242 () Bool)
(declare-fun x1871 () Bool)
(declare-fun x649 () Real)
(declare-fun x1874 () Real)
(declare-fun x1805 () Real)
(declare-fun x1875 () Bool)
(declare-fun x789 () Bool)
(declare-fun x1050 () Real)
(declare-fun x446 () Bool)
(declare-fun x356 () Bool)
(declare-fun x1103 () Bool)
(declare-fun x1620 (Real) Real)
(declare-fun x980 (Real) Real)
(declare-fun x1495 () Real)
(declare-fun x570 () Real)
(declare-fun x1642 () Bool)
(declare-fun x1862 () Bool)
(declare-fun x342 () Bool)
(declare-fun x203 () Bool)
(declare-fun x1866 () Real)
(declare-fun x243 () Bool)
(declare-fun x671 () Bool)
(declare-fun x828 (Real) Real)
(declare-fun x1134 () Bool)
(declare-fun x553 () Real)
(declare-fun x1655 () Bool)
(declare-fun x1531 () Real)
(declare-fun x1347 () Bool)
(declare-fun x1498 () Real)
(declare-fun x1592 () Bool)
(declare-fun x1287 () Bool)
(declare-fun x142 () Bool)
(declare-fun x505 () Real)
(declare-fun x1179 () Bool)
(declare-fun x1634 () Real)
(declare-fun x1009 () Real)
(declare-fun x480 () Real)
(declare-fun x147 () Real)
(declare-fun x58 () Bool)
(declare-fun x580 () Real)
(declare-fun x1588 () Real)
(declare-fun x524 () Real)
(declare-fun x341 () Bool)
(declare-fun x1077 () Bool)
(declare-fun x1727 () Real)
(declare-fun x1031 () Bool)
(declare-fun x1336 () x930)
(declare-fun x366 () Bool)
(declare-fun x1625 () Real)
(declare-fun x958 () Real)
(declare-fun x870 () Bool)
(declare-fun x112 () Real)
(declare-fun x923 () Bool)
(declare-fun x1596 () Bool)
(declare-fun x1268 () Real)
(declare-fun x1245 (x930) Real)
(declare-fun x906 () Bool)
(declare-fun x1022 () Bool)
(declare-fun x1599 () Real)
(declare-fun x1023 () Bool)
(declare-fun x1893 () Bool)
(declare-fun x473 () Real)
(declare-fun x1033 () Real)
(declare-fun x807 () Real)
(declare-fun x1507 () Real)
(declare-fun x412 () Real)
(declare-fun x1580 () Real)
(declare-fun x293 () Real)
(declare-fun x18 () Real)
(declare-fun x332 () Bool)
(declare-fun x760 () Real)
(declare-fun x1072 () Bool)
(declare-fun x43 () x930)
(declare-fun x358 () Bool)
(declare-fun x1165 () Bool)
(declare-fun x529 () Real)
(declare-fun x84 () Bool)
(declare-fun x1543 () Bool)
(declare-fun x1552 () Bool)
(declare-fun x1541 () Bool)
(declare-fun x603 () Bool)
(declare-fun x694 () Real)
(declare-fun x1750 () Bool)
(declare-fun x1505 (Real) Real)
(declare-fun x91 () Real)
(declare-fun x1407 () Real)
(declare-fun x1679 () Bool)
(declare-fun x1723 (Real) Real)
(declare-fun x1752 () Real)
(declare-fun x796 () Real)
(declare-fun x1039 () Real)
(declare-fun x1480 () Real)
(declare-fun x717 () Real)
(declare-fun x677 () Real)
(declare-fun x604 () Real)
(declare-fun x571 (Real) Real)
(declare-fun x999 () Real)
(declare-fun x66 () Bool)
(declare-fun x997 () Real)
(declare-fun x24 () Real)
(declare-fun x1726 () Real)
(declare-fun x1396 () Bool)
(declare-fun x308 () Real)
(declare-fun x1049 () Real)
(declare-fun x910 () Real)
(declare-fun x144 () Bool)
(declare-fun x351 () Real)
(declare-fun x579 () Real)
(declare-fun x198 () Bool)
(declare-fun x176 () Bool)
(declare-fun x1673 (Real) Real)
(declare-fun x882 () Bool)
(declare-fun x730 () Bool)
(declare-fun x1905 () Real)
(declare-fun x1013 () Real)
(declare-fun x1231 () Bool)
(declare-fun x1078 () Bool)
(declare-fun x261 () Real)
(declare-fun x744 () Real)
(declare-fun x515 (Real) Real)
(declare-fun x639 () Bool)
(declare-fun x1450 () Real)
(declare-fun x1206 () Real)
(declare-fun x1891 () Bool)
(declare-fun x926 () Bool)
(declare-fun x1285 () Bool)
(declare-fun x1027 () Real)
(declare-fun x1540 (Real) Real)
(declare-fun x1361 () Real)
(declare-fun x781 () Bool)
(declare-fun x1069 () Real)
(declare-fun x1882 () Bool)
(declare-fun x943 () Bool)
(declare-fun x1428 (Real) x930)
(declare-fun x85 () x930)
(declare-fun x83 () Real)
(declare-fun x683 () Real)
(declare-fun x1553 () Bool)
(declare-fun x1190 () Bool)
(declare-fun x653 () Bool)
(declare-fun x1879 () Real)
(declare-fun x1708 () Real)
(declare-fun x734 () Real)
(declare-fun x916 () Real)
(declare-fun x699 () Bool)
(declare-fun x703 () Bool)
(declare-fun x305 () Real)
(declare-fun x372 () Real)
(declare-fun x244 (Real) Real)
(declare-fun x1212 (Real) Real)
(declare-fun x880 (x930) Real)
(declare-fun x218 () Bool)
(declare-fun x220 () Real)
(declare-fun x1817 (Real) Real)
(declare-fun x645 () Real)
(declare-fun x1762 () Bool)
(declare-fun x131 () Real)
(declare-fun x1836 () Real)
(declare-fun x344 () Bool)
(declare-fun x349 () Real)
(declare-fun x294 () Bool)
(declare-fun x414 () Bool)
(declare-fun x97 () Real)
(declare-fun x1418 () Bool)
(declare-fun x920 () Real)
(declare-fun x974 () x930)
(declare-fun x482 () Real)
(declare-fun x1558 () Bool)
(declare-fun x801 () Real)
(declare-fun x1821 () Real)
(declare-fun x903 () Bool)
(declare-fun x464 () Real)
(declare-fun x1628 () Bool)
(declare-fun x266 () Bool)
(declare-fun x815 () Bool)
(declare-fun x504 () Real)
(declare-fun x1554 () Bool)
(declare-fun x1638 () Real)
(declare-fun x1397 () Real)
(declare-fun x359 () Real)
(declare-fun x1548 () Real)
(declare-fun x1593 () Bool)
(declare-fun x593 () Real)
(declare-fun x1901 (Real) Real)
(declare-fun x1765 () Real)
(declare-fun x1532 (Real Real) Real)
(declare-fun x479 () Real)
(declare-fun x67 (Real) Real)
(declare-fun x1729 () Real)
(declare-fun x221 () Real)
(declare-fun x232 () Real)
(declare-fun x205 () Real)
(declare-fun x408 () Bool)
(declare-fun x1106 () Bool)
(declare-fun x1405 () Bool)
(declare-fun x971 () Real)
(declare-fun x1059 () Bool)
(declare-fun x575 () Bool)
(declare-fun x1114 () Bool)
(declare-fun x590 () Real)
(declare-fun x1001 () Real)
(declare-fun x1353 () x930)
(declare-fun x15 (Real) Real)
(declare-fun x1600 () Real)
(declare-fun x269 () Bool)
(declare-fun x576 () Real)
(declare-fun x1172 () Real)
(declare-fun x1912 () Real)
(declare-fun x1321 () Bool)
(declare-fun x304 () Real)
(declare-fun x154 () Real)
(declare-fun x1075 () Real)
(declare-fun x347 () Bool)
(declare-fun x1486 () Real)
(declare-fun x1570 () Bool)
(declare-fun x42 () Real)
(declare-fun x1489 () Real)
(declare-fun x230 () Real)
(declare-fun x1848 (Real) Real)
(declare-fun x1058 () Real)
(declare-fun x71 (Real) Real)
(declare-fun x837 () Real)
(declare-fun x133 () Real)
(declare-fun x461 () Real)
(declare-fun x493 () Bool)
(declare-fun x712 () Bool)
(declare-fun x1141 () Real)
(declare-fun x1681 () Real)
(declare-fun x184 (x930) Real)
(declare-fun x438 () Bool)
(declare-fun x740 () x930)
(declare-fun x606 () Real)
(declare-fun x1280 () Real)
(declare-fun x1048 () Bool)
(declare-fun x1547 () Real)
(declare-fun x1701 () Real)
(declare-fun x125 () Real)
(declare-fun x507 () Bool)
(declare-fun x1247 () Bool)
(declare-fun x582 () Bool)
(declare-fun x263 () Real)
(declare-fun x1456 (x930) Real)
(declare-fun x624 () Bool)
(declare-fun x1496 () Real)
(declare-fun x1909 () Real)
(declare-fun x1284 () Bool)
(declare-fun x1358 () Real)
(declare-fun x452 () Real)
(declare-fun x1465 () Bool)
(declare-fun x1177 () Real)
(declare-fun x429 (Real) Real)
(declare-fun x1843 () Real)
(declare-fun x472 () Bool)
(declare-fun x850 () Real)
(declare-fun x854 (Real) Real)
(declare-fun x215 () Bool)
(declare-fun x1632 () Real)
(declare-fun x361 () Real)
(declare-fun x506 (Real) Real)
(declare-fun x1093 () Real)
(declare-fun x1523 () Bool)
(declare-fun x596 () Real)
(declare-fun x1842 () Real)
(declare-fun x297 () Real)
(declare-fun x862 () Real)
(declare-fun x1222 () Real)
(declare-fun x935 () Bool)
(declare-fun x1830 () Bool)
(declare-fun x277 () Real)
(declare-fun x234 () Bool)
(declare-fun x185 () Real)
(declare-fun x1162 () x930)
(declare-fun x648 () Real)
(declare-fun x65 () Bool)
(declare-fun x554 () Real)
(declare-fun x739 () Real)
(declare-fun x1623 () Bool)
(declare-fun x1094 () Real)
(declare-fun x1364 () Real)
(declare-fun x211 () Bool)
(declare-fun x950 () Bool)
(declare-fun x459 () Real)
(declare-fun x1087 () Real)
(declare-fun x119 () Real)
(declare-fun x1878 () Bool)
(declare-fun x637 () Real)
(declare-fun x72 () Bool)
(declare-fun x953 () Bool)
(declare-fun x1738 () Real)
(declare-fun x51 () Bool)
(declare-fun x254 () Real)
(declare-fun x496 () Real)
(declare-fun x1240 () Bool)
(declare-fun x54 () Real)
(declare-fun x795 () Bool)
(declare-fun x1753 () Bool)
(declare-fun x1098 () Real)
(declare-fun x963 () Real)
(declare-fun x1169 () Real)
(declare-fun x1896 () Bool)
(declare-fun x1719 () Bool)
(declare-fun x1408 () Real)
(declare-fun x437 () Real)
(declare-fun x1534 () Real)
(declare-fun x388 () Bool)
(declare-fun x766 () Real)
(declare-fun x969 () Real)
(declare-fun x222 () Bool)
(declare-fun x890 () Bool)
(declare-fun x260 () Real)
(declare-fun x1639 () x930)
(declare-fun x1630 () Bool)
(declare-fun x1286 () Bool)
(declare-fun x792 () Real)
(declare-fun x1079 () Bool)
(declare-fun x1864 () Bool)
(declare-fun x224 () Bool)
(declare-fun x887 () Real)
(declare-fun x658 () Real)
(declare-fun x1241 () Bool)
(declare-fun x1733 () Bool)
(declare-fun x1908 () Bool)
(declare-fun x1713 () Bool)
(declare-fun x615 () Bool)
(declare-fun x355 () Bool)
(declare-fun x1202 () Real)
(declare-fun x1332 () Bool)
(declare-fun x810 () Real)
(declare-fun x1520 () Bool)
(declare-fun x672 () Bool)
(declare-fun x1859 () Real)
(declare-fun x933 () Real)
(declare-fun x1760 () Bool)
(declare-fun x498 () x930)
(declare-fun x985 () Real)
(declare-fun x601 () Real)
(declare-fun x1138 () Real)
(declare-fun x122 () Real)
(declare-fun x1827 () Real)
(declare-fun x1636 () Real)
(declare-fun x1067 () Real)
(declare-fun x1213 (Real) Real)
(declare-fun x778 () Bool)
(declare-fun x1705 (Real) Real)
(declare-fun x1057 () Bool)
(declare-fun x3 () Real)
(declare-fun x1735 () Real)
(declare-fun x814 (Real Real) Real)
(declare-fun x1754 () Bool)
(declare-fun x1776 () Bool)
(declare-fun x1622 () Bool)
(declare-fun x1188 () Real)
(declare-fun x236 (Real) Real)
(declare-fun x1100 () Real)
(declare-fun x753 () Bool)
(declare-fun x612 () Real)
(declare-fun x1740 () Real)
(declare-fun x1055 (x930) Real)
(declare-fun x1200 () Bool)
(declare-fun x238 () Bool)
(declare-fun x548 (Real) Real)
(declare-fun x485 () Real)
(declare-fun x363 () Bool)
(declare-fun x1002 () Bool)
(declare-fun x475 (Real) Real)
(declare-fun x171 () Real)
(declare-fun x1883 () Bool)
(declare-fun x327 () Bool)
(declare-fun x1273 () Real)
(declare-fun x1331 () Bool)
(declare-fun x410 () Real)
(declare-fun x1687 () Real)
(declare-fun x1466 (Real) Real)
(declare-fun x339 () Real)
(declare-fun x1815 () Bool)
(declare-fun x1257 () Bool)
(declare-fun x540 () Real)
(declare-fun x375 () Bool)
(declare-fun x684 () Bool)
(declare-fun x164 () Bool)
(declare-fun x76 () Real)
(declare-fun x1037 () Real)
(declare-fun x547 () Real)
(declare-fun x917 () Bool)
(declare-fun x913 () Real)
(declare-fun x1895 () Bool)
(declare-fun x145 () Real)
(declare-fun x23 () Real)
(declare-fun x1012 () Real)
(declare-fun x1693 () Bool)
(declare-fun x633 () Real)
(declare-fun x416 () Real)
(declare-fun x180 () Bool)
(declare-fun x614 () Bool)
(declare-fun x1661 () Real)
(declare-fun x68 () Real)
(declare-fun x1730 () Bool)
(declare-fun x825 () Real)
(declare-fun x1907 () Real)
(declare-fun x1062 () Real)
(declare-fun x1326 () Real)
(declare-fun x1402 () Real)
(declare-fun x96 () Real)
(declare-fun x40 () Bool)
(declare-fun x1832 () Real)
(declare-fun x443 () Real)
(declare-fun x431 () Bool)
(declare-fun x1017 () Real)
(declare-fun x406 () Real)
(declare-fun x187 () Real)
(declare-fun x78 () Bool)
(declare-fun x98 () Real)
(declare-fun x381 () Real)
(declare-fun x113 () Bool)
(declare-fun x1510 () Real)
(define-fun x842 ((x930 x930) (x873 Real)) x930 (ite ((_ is x631) x930) (x631 (x687 x930) (+ (x1096 x930) x873)) (ite ((_ is x1366) x930) (x1366 (x1663 x930) (x181 x930) (+ x873 (x178 x930))) (x1258 (+ (x1545 x930) x873)))))
(define-fun x1163 ((x1474 Real)) Real (ite (and (< x1474 115792089237316195423570985008687907853269984665640564039457584007913129639936) (>= x1474 0)) x1474 (- x1474 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(define-fun x1897 ((x1474 Real)) Real (ite (and (> 0 x1474) (>= x1474 (- 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (+ 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1474) x1474))
(define-fun x172 ((x393 Real)) Bool (and (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 x393) (<= 0 x393)))
(define-fun x1005 ((x1269 Real)) Real (x864 x1269))
(define-fun x1154 ((x1269 Real)) Real (ite (and (< x1269 (+ 28 4)) (<= 28 x1269)) (x864 (+ 0 (- x1269 28))) (x506 x1269)))
(define-fun x1076 ((x1269 Real)) Real (ite (= x1269 640) 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x1154 x1269)))
(define-fun x1192 ((x1269 Real)) Real (ite (= 672 x1269) x1013 (x1076 x1269)))
(define-fun x210 ((x1269 Real)) Real (ite (= x1269 704) 1 (x1192 x1269)))
(define-fun x483 ((x1269 Real)) Real (ite (= x1269 160) x1013 (x500 x1269)))
(define-fun x959 ((x1269 Real)) Real (ite (= 128 x1269) 7 (x483 x1269)))
(define-fun x1330 ((x1269 Real)) Real (ite (= x1269 736) x1358 (x959 x1269)))
(define-fun x1052 ((x1269 Real)) Real (ite (and (not x1672) x300) (x500 x1269) (x1330 x1269)))
(define-fun x1775 ((x1269 Real)) Real (ite (= x1269 160) x1013 (x1052 x1269)))
(define-fun x1572 ((x1269 Real)) Real (ite (= 128 x1269) 7 (x1775 x1269)))
(define-fun x282 ((x1269 Real)) Real (ite (= x1269 800) x1009 (x111 x1269)))
(define-fun x1491 ((x1269 Real)) Real (ite (= 224 x1269) 1889567281 (x111 x1269)))
(define-fun x1578 ((x1269 Real)) Real (ite (and (>= x1269 224) (> (+ 224 32) x1269)) (x638 (+ 0 (- x1269 224))) (x244 x1269)))
(define-fun x1601 ((x1269 Real)) Real (ite (and x10 x300 x262) (x1578 x1269) (x244 x1269)))
(define-fun x666 ((x1269 Real)) Real (ite (= x1269 288) x1053 (x1601 x1269)))
(define-fun x1440 ((x1269 Real)) Real (ite (= x1269 320) 0 (x1692 x1269)))
(define-fun x702 ((x1269 Real)) Real (ite (= 256 x1269) x110 (x1692 x1269)))
(define-fun x1511 ((x1269 Real)) Real (ite (= 320 x1269) x646 (x702 x1269)))
(define-fun x1367 ((x1269 Real)) Real (ite (and x354 x10 x300) (x1511 x1269) (x1440 x1269)))
(define-fun x1855 ((x1269 Real)) Real (ite (= x1269 384) x674 (x1367 x1269)))
(define-fun x1677 ((x1269 Real)) Real (ite (= x1269 800) x1432 (x1855 x1269)))
(define-fun x634 ((x1269 Real)) Real (ite (and (not x10) x300) (x282 x1269) (x1677 x1269)))
(define-fun x225 ((x1269 Real)) Real (ite (= x1269 768) x96 (x634 x1269)))
(define-fun x1574 ((x1269 Real)) Real (ite (= x1269 800) 1889567281 (x225 x1269)))
(define-fun x975 ((x1269 Real)) Real (ite (and (> (+ 800 32) x1269) (<= 800 x1269)) (x1025 (+ 0 (- x1269 800))) (x828 x1269)))
(define-fun x1648 ((x1269 Real)) Real (ite (= 864 x1269) 0 (x1399 x1269)))
(define-fun x25 ((x1269 Real)) Real (ite (= x1269 928) 0 (x1648 x1269)))
(define-fun x1262 ((x1269 Real)) Real (ite (= 992 x1269) 1889567281 (x386 x1269)))
(define-fun x523 ((x1269 Real)) Real (ite (and (> (+ 32 992) x1269) (>= x1269 992)) (x1540 (+ 0 (- x1269 992))) (x283 x1269)))
(define-fun x1660 ((x1269 x930)) Real (ite (and x337 (not x896)) (x785 x1269) (x848 x1269)))
(define-fun x1857 ((x1269 x930)) Real (ite (= x1269 x1395) x1765 (x1245 x1269)))
(define-fun x1146 ((x1269 x930)) Real (ite (= (x1258 39) x1269) x160 (x1857 x1269)))
(define-fun x1615 ((x1269 x930)) Real (ite (and x624 x569 x575 (not x207) x1715 x1549) (x1245 x1269) (ite (and x569 x1715 x575 x207 x624) (x1245 x1269) (x1146 x1269))))
(define-fun x1214 ((x1269 x930)) Real (ite (= x63 x1269) x1334 (x1615 x1269)))
(define-fun x585 ((x1269 x930)) Real (ite (= x1639 x1269) x1112 (x1214 x1269)))
(define-fun x733 ((x1269 x930)) Real (ite (= (x1258 40) x1269) x409 (x585 x1269)))
(define-fun x775 ((x1269 x930)) Real (ite (and x575 x569 x624 (not x1715)) (x1245 x1269) (x733 x1269)))
(define-fun x767 ((x1269 x930)) Real (ite (= x1269 x546) x253 (x775 x1269)))
(define-fun x400 ((x1269 x930)) Real (ite (= x1269 (x1258 40)) x580 (x767 x1269)))
(define-fun x289 ((x1269 x930)) Real (ite (and x569 x575 x624) (x400 x1269) (x1245 x1269)))
(define-fun x1006 ((x1269 Real)) Real (ite (and x1552 x896 x337) (x523 x1269) (x283 x1269)))
(define-fun x623 ((x1269 Real)) Real (ite (= x1269 992) x1039 (x1505 x1269)))
(define-fun x413 ((x1269 Real)) Real (ite (= 160 x1269) x1049 (x623 x1269)))
(define-fun x158 ((x1269 Real)) Real (ite (= 128 x1269) 16 (x413 x1269)))
(define-fun x1785 ((x1269 Real)) Real (ite (= x1269 1056) 773487949 (x1724 x1269)))
(define-fun x1329 ((x1269 Real)) Real (ite (and (>= x1269 1056) (> (+ 1056 32) x1269)) (x571 (+ (- x1269 1056) 0)) (x1105 x1269)))
(define-fun x1784 ((x1269 Real)) Real (ite (and x569 x890 x624 x575) (x1329 x1269) (x1105 x1269)))
(define-fun x474 ((x1269 Real)) Real (ite (= 1024 x1269) x1837 (x1784 x1269)))
(define-fun x735 ((x1269 Real)) Real (ite (= x1269 1088) 1889567281 (x474 x1269)))
(define-fun x1494 ((x1269 Real)) Real (ite (and (< x1269 (+ 32 1088)) (<= 1088 x1269)) (x478 (+ 0 (- x1269 1088))) (x1124 x1269)))
(define-fun x688 ((x1269 Real)) Real (ite (and x575 x1583 x624 x569) (x1494 x1269) (x1124 x1269)))
(define-fun x724 ((x1269 Real)) Real (ite (= 768 x1269) x219 (x1898 x1269)))
(define-fun x627 ((x1269 Real)) Real (ite (= 864 x1269) x505 (x724 x1269)))
(define-fun x1275 ((x1269 Real)) Real (ite (= x1269 224) x143 (x627 x1269)))
(define-fun x912 ((x1269 Real)) Real (ite (= 256 x1269) x834 (x1275 x1269)))
(define-fun x456 ((x1269 Real)) Real (ite (= 160 x1269) x1868 (x912 x1269)))
(define-fun x371 ((x1269 Real)) Real (ite (= 128 x1269) 16 (x456 x1269)))
(define-fun x1369 ((x1269 Real)) Real (ite (= x1269 160) x1612 (x1848 x1269)))
(define-fun x50 ((x1269 Real)) Real (ite (= 128 x1269) 16 (x1369 x1269)))
(define-fun x1281 ((x1269 Real)) Real (ite (= x1269 160) x1089 (x326 x1269)))
(define-fun x1345 ((x1269 Real)) Real (ite (= 128 x1269) 16 (x1281 x1269)))
(define-fun x1845 ((x1269 Real)) Real (ite (and x575 x624 x1715 x569 x1549 (not x207)) (x326 x1269) (ite (and x575 x624 x569 x1715 x207) (x1848 x1269) (x1345 x1269))))
(define-fun x1569 ((x1269 Real)) Real (ite (= x1269 160) x202 (x1845 x1269)))
(define-fun x12 ((x1269 Real)) Real (ite (= 128 x1269) 16 (x1569 x1269)))
(define-fun x267 ((x1269 Real)) Real (ite (= x1269 160) x679 (x12 x1269)))
(define-fun x1246 ((x1269 Real)) Real (ite (= x1269 128) 16 (x267 x1269)))
(define-fun x1108 ((x1269 Real)) Real (ite (and (not x1715) x575 x569 x624) (x1898 x1269) (x1246 x1269)))
(define-fun x675 ((x1269 Real)) Real (ite (= x1269 160) x428 (x1108 x1269)))
(define-fun x448 ((x1269 Real)) Real (ite (= 128 x1269) 16 (x675 x1269)))
(define-fun x1497 ((x1269 Real)) Real (ite (and x569 x624 x575) (x448 x1269) (x1724 x1269)))
(define-fun x1147 ((x1269 x930)) Real (ite (and x228 x817) (x289 x1269) (ite (and (not x575) x624) (x1245 x1269) (ite (and (not x896) x337) (x1245 x1269) (x289 x1269)))))
(define-fun x168 ((x1269 Real)) Real (ite (= x1269 896) x1751 (x387 x1269)))
(define-fun x86 ((x1269 Real)) Real (ite (and x817 x228) (x387 x1269) (ite (and (not x575) x624) (x1505 x1269) (ite (and x337 (not x896)) (x386 x1269) (x168 x1269)))))
(define-fun x908 ((x1269 Real)) Real (ite (= x1269 928) 1889567281 (x86 x1269)))
(define-fun x1469 ((x1269 Real)) Real (ite (and (<= 928 x1269) (< x1269 (+ 32 928))) (x946 (+ (- x1269 928) 0)) (x15 x1269)))
(define-fun x1120 ((x1269 Real)) Real (ite (and x639 x203) (x1469 x1269) (x15 x1269)))
(define-fun x1433 ((x1269 Real)) Real (ite (= 768 x1269) x109 (x1504 x1269)))
(define-fun x881 ((x1269 Real)) Real (ite (= x1269 352) x676 (x1433 x1269)))
(define-fun x1597 ((x1269 Real)) Real (ite (= 224 x1269) 1889567281 (x881 x1269)))
(define-fun x543 ((x1269 Real)) Real (ite (and (< x1269 (+ 224 32)) (>= x1269 224)) (x803 (+ 0 (- x1269 224))) (x1475 x1269)))
(define-fun x430 ((x1269 Real)) Real (ite (and x902 x639 x357) (x543 x1269) (x1475 x1269)))
(define-fun x535 ((x1269 Real)) Real (ite (= 288 x1269) x1182 (x430 x1269)))
(define-fun x466 ((x1269 Real)) Real (ite (= 320 x1269) 0 (x1392 x1269)))
(define-fun x17 ((x1269 Real)) Real (ite (= x1269 256) x560 (x1392 x1269)))
(define-fun x1074 ((x1269 Real)) Real (ite (= x1269 320) x1717 (x17 x1269)))
(define-fun x964 ((x1269 Real)) Real (ite (and x902 x532 x639) (x1074 x1269) (x466 x1269)))
(define-fun x1277 ((x1269 Real)) Real (ite (= x1269 416) x406 (x964 x1269)))
(define-fun x159 ((x1269 Real)) Real (ite (= x1269 928) 0 (x440 x1269)))
(define-fun x685 ((x1269 Real)) Real (ite (= 928 x1269) x1263 (x440 x1269)))
(define-fun x1748 ((x1269 Real)) Real (ite (and x902 x379 x639) (x685 x1269) (x159 x1269)))
(define-fun x761 ((x1269 Real)) Real (ite (= 736 x1269) x381 (x1748 x1269)))
(define-fun x1056 ((x1269 Real)) Real (ite (and (not x902) x639) (x1504 x1269) (x761 x1269)))
(define-fun x1721 ((x1269 x930)) Real (ite (and (not x1003) x1019) (x1245 x1269) (x1147 x1269)))
(define-fun x1820 ((x1269 x930)) Real (ite (and (not x1003) x1019) (x785 x1269) (ite (and x817 x228) (x848 x1269) (ite (and x624 (not x575)) (x785 x1269) (x1660 x1269)))))
(define-fun x468 ((x1269 Real)) Real (ite (and x1019 (not x1003)) (x1399 x1269) (x1056 x1269)))
(define-fun x1468 ((x1269 x930)) Real (ite (= (x1258 9) x1269) x1683 (x1721 x1269)))
(define-fun x1000 ((x1269 Real)) Real (ite (= 160 x1269) x1013 (x468 x1269)))
(define-fun x1238 ((x1269 Real)) Real (ite (= 128 x1269) 7 (x1000 x1269)))
(define-fun x1514 ((x1269 x930)) Real (ite (= x1097 x1269) x1539 (x1468 x1269)))
(define-fun x651 ((x1269 Real)) Real (ite (= x1269 800) x744 (x1238 x1269)))
(define-fun x1522 ((x1269 Real)) Real (ite (= x1269 224) x296 (x651 x1269)))
(define-fun x1594 ((x1269 Real)) Real (ite (= x1269 256) x449 (x1522 x1269)))
(define-fun x1771 ((x1269 Real)) Real (ite (= 288 x1269) x927 (x1594 x1269)))
(define-fun x403 ((x1269 Real)) Real (ite (= 384 x1269) 4 (x1771 x1269)))
(define-fun x586 ((x1269 Real)) Real (ite (and (< x1269 (+ 480 4)) (<= 480 x1269)) (x843 (+ 0 (- x1269 480))) (x1462 x1269)))
(define-fun x439 ((x1269 Real)) Real (ite (and x1405 x88) (x586 x1269) (x1462 x1269)))
(define-fun x1107 ((x1269 Real)) Real (ite (= x630 x1269) x1148 (x439 x1269)))
(define-fun x1741 ((x1269 Real)) Real (ite (= x423 x1269) x397 (x1107 x1269)))
(define-fun x491 ((x1269 Real)) Real (ite (and (<= 608 x1269) (> (+ 608 32) x1269)) (x1705 (+ 0 (- x1269 608))) (x689 x1269)))
(define-fun x641 ((x1269 Real)) Real (ite (and x1184 x88) (x491 x1269) (x689 x1269)))
(define-fun x385 ((x1269 Real)) Real (ite (and (> (+ 320 x117) x1269) (>= x1269 320)) (x670 (+ 0 (- x1269 320))) (x1780 x1269)))
(define-fun x108 ((x1269 Real)) Real (ite (and x88 x1653) (x385 x1269) (x1780 x1269)))
(define-fun x27 ((x1269 Real)) Real (ite (= 800 x1269) x1852 (x108 x1269)))
(define-fun x1542 ((x1269 Real)) Real (ite (= x1269 832) x555 (x27 x1269)))
(define-fun x173 ((x1269 Real)) Real (ite (= 800 x1269) x1265 (x1542 x1269)))
(define-fun x790 ((x1269 Real)) Real (x1673 x1269))
(define-fun x884 ((x1269 Real)) Real (ite (and (< x1269 (+ 4 28)) (>= x1269 28)) (x1673 (+ (- x1269 28) 0)) (x854 x1269)))
(define-fun x1618 ((x1269 Real)) Real (ite (= x1269 640) 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x884 x1269)))
(define-fun x1676 ((x1269 Real)) Real (ite (= x1269 672) x54 (x1618 x1269)))
(define-fun x769 ((x1269 Real)) Real (ite (= 704 x1269) 1 (x1676 x1269)))
(define-fun x1344 ((x1269 Real)) Real (ite (= 160 x1269) x54 (x1213 x1269)))
(define-fun x348 ((x1269 Real)) Real (ite (= x1269 128) 7 (x1344 x1269)))
(define-fun x1126 ((x1269 Real)) Real (ite (= 736 x1269) x1408 (x348 x1269)))
(define-fun x57 ((x1269 Real)) Real (ite (and (not x4) x88) (x1213 x1269) (x1126 x1269)))
(define-fun x394 ((x1269 Real)) Real (ite (= 160 x1269) x54 (x57 x1269)))
(define-fun x196 ((x1269 Real)) Real (ite (= x1269 128) 7 (x394 x1269)))
(define-fun x174 ((x1269 Real)) Real (ite (= x1269 800) x461 (x1225 x1269)))
(define-fun x1643 ((x1269 Real)) Real (ite (= 224 x1269) 1889567281 (x1225 x1269)))
(define-fun x970 ((x1269 Real)) Real (ite (and (>= x1269 224) (> (+ 224 32) x1269)) (x1817 (+ (- x1269 224) 0)) (x1040 x1269)))
(define-fun x741 ((x1269 Real)) Real (ite (and x1707 x88 x1394) (x970 x1269) (x1040 x1269)))
(define-fun x1218 ((x1269 Real)) Real (ite (= 288 x1269) x412 (x741 x1269)))
(define-fun x444 ((x1269 Real)) Real (ite (= x1269 320) 0 (x279 x1269)))
(define-fun x1892 ((x1269 Real)) Real (ite (= 256 x1269) x1659 (x279 x1269)))
(define-fun x303 ((x1269 Real)) Real (ite (= x1269 320) x47 (x1892 x1269)))
(define-fun x762 ((x1269 Real)) Real (ite (and x1707 x88 x727) (x303 x1269) (x444 x1269)))
(define-fun x1518 ((x1269 Real)) Real (ite (= 384 x1269) x1911 (x762 x1269)))
(define-fun x1153 ((x1269 Real)) Real (ite (= x1269 800) x185 (x1518 x1269)))
(define-fun x1253 ((x1269 Real)) Real (ite (and (not x1707) x88) (x174 x1269) (x1153 x1269)))
(define-fun x626 ((x1269 Real)) Real (ite (= x1269 768) x451 (x1253 x1269)))
(define-fun x934 ((x1269 Real)) Real (ite (= 800 x1269) 1889567281 (x626 x1269)))
(define-fun x1910 ((x1269 Real)) Real (ite (and (>= x1269 800) (> (+ 800 32) x1269)) (x714 (+ (- x1269 800) 0)) (x1212 x1269)))
(define-fun x1064 ((x1269 Real)) Real (ite (= 864 x1269) 0 (x236 x1269)))
(define-fun x597 ((x1269 Real)) Real (ite (= 928 x1269) 0 (x1064 x1269)))
(define-fun x1014 ((x1269 Real)) Real (ite (= 992 x1269) 1889567281 (x1839 x1269)))
(define-fun x177 ((x1269 Real)) Real (ite (and (> (+ 32 992) x1269) (>= x1269 992)) (x435 (+ 0 (- x1269 992))) (x1370 x1269)))
(define-fun x1352 ((x1269 x930)) Real (ite (and (not x917) x312) (x785 x1269) (x1102 x1269)))
(define-fun x1627 ((x1269 Real)) Real (ite (and x917 x1444 x312) (x177 x1269) (x1370 x1269)))
(define-fun x189 ((x1269 Real)) Real (ite (= 992 x1269) x905 (x1004 x1269)))
(define-fun x931 ((x1269 Real)) Real (ite (= 160 x1269) x862 (x189 x1269)))
(define-fun x512 ((x1269 Real)) Real (ite (= x1269 128) 16 (x931 x1269)))
(define-fun x1242 ((x1269 Real)) Real (ite (= 1056 x1269) 773487949 (x1788 x1269)))
(define-fun x501 ((x1269 Real)) Real (ite (and (> (+ 32 1056) x1269) (<= 1056 x1269)) (x704 (+ (- x1269 1056) 0)) (x404 x1269)))
(define-fun x748 ((x1269 Real)) Real (ite (and x885 x613 x1256 x1127) (x501 x1269) (x404 x1269)))
(define-fun x608 ((x1269 Real)) Real (ite (= 1024 x1269) x70 (x748 x1269)))
(define-fun x216 ((x1269 Real)) Real (ite (= x1269 1088) 1889567281 (x608 x1269)))
(define-fun x1128 ((x1269 Real)) Real (ite (and (<= 1088 x1269) (< x1269 (+ 1088 32))) (x67 (+ (- x1269 1088) 0)) (x980 x1269)))
(define-fun x274 ((x1269 Real)) Real (ite (and x1528 x613 x1127 x1256) (x1128 x1269) (x980 x1269)))
(define-fun x77 ((x1269 Real)) Real (ite (= x1269 768) x1699 (x1157 x1269)))
(define-fun x1420 ((x1269 Real)) Real (ite (= 864 x1269) x524 (x77 x1269)))
(define-fun x32 ((x1269 Real)) Real (ite (= x1269 224) x1144 (x1420 x1269)))
(define-fun x1499 ((x1269 Real)) Real (ite (= 256 x1269) x141 (x32 x1269)))
(define-fun x1455 ((x1269 Real)) Real (ite (= x1269 160) x1828 (x1499 x1269)))
(define-fun x968 ((x1269 Real)) Real (ite (= x1269 128) 16 (x1455 x1269)))
(define-fun x139 ((x1269 Real)) Real (ite (= 160 x1269) x1498 (x1339 x1269)))
(define-fun x153 ((x1269 Real)) Real (ite (= 128 x1269) 16 (x139 x1269)))
(define-fun x1117 ((x1269 Real)) Real (ite (= 160 x1269) x839 (x1652 x1269)))
(define-fun x331 ((x1269 Real)) Real (ite (= x1269 128) 16 (x1117 x1269)))
(define-fun x1445 ((x1269 Real)) Real (ite (and (not x271) x1865 x1256 x1127 x1871 x613) (x1652 x1269) (ite (and x1256 x271 x1871 x1127 x613) (x1339 x1269) (x331 x1269))))
(define-fun x1316 ((x1269 Real)) Real (ite (= x1269 160) x1768 (x1445 x1269)))
(define-fun x1411 ((x1269 Real)) Real (ite (= x1269 128) 16 (x1316 x1269)))
(define-fun x169 ((x1269 Real)) Real (ite (= 160 x1269) x1427 (x1411 x1269)))
(define-fun x1739 ((x1269 Real)) Real (ite (= 128 x1269) 16 (x169 x1269)))
(define-fun x1527 ((x1269 Real)) Real (ite (and x613 x1127 (not x1871) x1256) (x1157 x1269) (x1739 x1269)))
(define-fun x1644 ((x1269 Real)) Real (ite (= x1269 160) x804 (x1527 x1269)))
(define-fun x1036 ((x1269 Real)) Real (ite (= 128 x1269) 16 (x1644 x1269)))
(define-fun x497 ((x1269 Real)) Real (ite (and x1256 x1127 x613) (x1036 x1269) (x1788 x1269)))
(define-fun x233 ((x1269 x930)) Real (ite (= x1353 x1269) x850 (x1055 x1269)))
(define-fun x1561 ((x1269 x930)) Real (ite (= x1269 (x1258 39)) x502 (x233 x1269)))
(define-fun x1167 ((x1269 x930)) Real (ite (and x1256 x1871 x1865 (not x271) x1127 x613) (x1055 x1269) (ite (and x1127 x271 x613 x1871 x1256) (x1055 x1269) (x1561 x1269))))
(define-fun x605 ((x1269 x930)) Real (ite (= x1236 x1269) x869 (x1167 x1269)))
(define-fun x988 ((x1269 x930)) Real (ite (= x1011 x1269) x1027 (x605 x1269)))
(define-fun x362 ((x1269 x930)) Real (ite (= x1269 (x1258 40)) x996 (x988 x1269)))
(define-fun x1085 ((x1269 x930)) Real (ite (and x1127 x1256 x613 (not x1871)) (x1055 x1269) (x362 x1269)))
(define-fun x1452 ((x1269 x930)) Real (ite (= x1205 x1269) x1789 (x1085 x1269)))
(define-fun x1565 ((x1269 x930)) Real (ite (= x1269 (x1258 40)) x476 (x1452 x1269)))
(define-fun x829 ((x1269 x930)) Real (ite (and x1127 x613 x1256) (x1565 x1269) (x1055 x1269)))
(define-fun x802 ((x1269 Real)) Real (ite (= 896 x1269) x380 (x1237 x1269)))
(define-fun x993 ((x1269 Real)) Real (ite (and x56 x932) (x1237 x1269) (ite (and x613 (not x1127)) (x1004 x1269) (ite (and (not x917) x312) (x1839 x1269) (x802 x1269)))))
(define-fun x1318 ((x1269 x930)) Real (ite (and x932 x56) (x829 x1269) (ite (and (not x1127) x613) (x1055 x1269) (ite (and (not x917) x312) (x1055 x1269) (x829 x1269)))))
(define-fun x663 ((x1269 Real)) Real (ite (= x1269 928) 1889567281 (x993 x1269)))
(define-fun x421 ((x1269 Real)) Real (ite (and (<= 928 x1269) (< x1269 (+ 32 928))) (x136 (+ (- x1269 928) 0)) (x772 x1269)))
(define-fun x1229 ((x1269 Real)) Real (ite (and x1824 x1650) (x421 x1269) (x772 x1269)))
(define-fun x302 ((x1269 Real)) Real (ite (= 768 x1269) x1836 (x1746 x1269)))
(define-fun x1674 ((x1269 Real)) Real (ite (= x1269 352) x773 (x302 x1269)))
(define-fun x1870 ((x1269 Real)) Real (ite (= x1269 224) 1889567281 (x1674 x1269)))
(define-fun x199 ((x1269 Real)) Real (ite (and (>= x1269 224) (> (+ 224 32) x1269)) (x462 (+ (- x1269 224) 0)) (x1620 x1269)))
(define-fun x846 ((x1269 Real)) Real (ite (and x1695 x1824 x341) (x199 x1269) (x1620 x1269)))
(define-fun x928 ((x1269 Real)) Real (ite (= 288 x1269) x550 (x846 x1269)))
(define-fun x644 ((x1269 Real)) Real (ite (= 320 x1269) 0 (x1901 x1269)))
(define-fun x1431 ((x1269 Real)) Real (ite (= x1269 256) x878 (x1901 x1269)))
(define-fun x229 ((x1269 Real)) Real (ite (= x1269 320) x1670 (x1431 x1269)))
(define-fun x1537 ((x1269 Real)) Real (ite (and x472 x1695 x1824) (x229 x1269) (x644 x1269)))
(define-fun x135 ((x1269 Real)) Real (ite (= 416 x1269) x658 (x1537 x1269)))
(define-fun x780 ((x1269 Real)) Real (ite (= 928 x1269) 0 (x360 x1269)))
(define-fun x1274 ((x1269 Real)) Real (ite (= 928 x1269) x1685 (x360 x1269)))
(define-fun x813 ((x1269 Real)) Real (ite (and x1305 x1824 x1695) (x1274 x1269) (x780 x1269)))
(define-fun x37 ((x1269 Real)) Real (ite (= x1269 736) x921 (x813 x1269)))
(define-fun x1066 ((x1269 Real)) Real (ite (and x1824 (not x1695)) (x1746 x1269) (x37 x1269)))
(define-fun x453 ((x1269 Real)) Real (ite (and x1541 (not x868)) (x236 x1269) (x1066 x1269)))
(define-fun x782 ((x1269 x930)) Real (ite (and (not x868) x1541) (x1055 x1269) (x1318 x1269)))
(define-fun x897 ((x1269 x930)) Real (ite (and x1541 (not x868)) (x785 x1269) (ite (and x932 x56) (x1102 x1269) (ite (and x613 (not x1127)) (x785 x1269) (x1352 x1269)))))
(define-fun x1035 ((x1269 x930)) Real (ite (= (x1258 9) x1269) x33 (x782 x1269)))
(define-fun x1449 ((x1269 Real)) Real (ite (= 160 x1269) x54 (x453 x1269)))
(define-fun x877 ((x1269 Real)) Real (ite (= 128 x1269) 7 (x1449 x1269)))
(define-fun x1298 ((x1269 x930)) Real (ite (= x1269 x1555) x855 (x1035 x1269)))
(define-fun x402 ((x1269 Real)) Real (ite (= x1269 800) x599 (x877 x1269)))
(define-fun x114 ((x1269 Real)) Real (ite (= x1269 224) x1732 (x402 x1269)))
(define-fun x978 ((x1269 Real)) Real (ite (= x1269 256) x1633 (x114 x1269)))
(define-fun x1467 ((x1269 Real)) Real (ite (= x1269 288) x68 (x978 x1269)))
(define-fun x788 ((x1269 Real)) Real (ite (= x1269 384) 4 (x1467 x1269)))
(define-fun x204 ((x1269 Real)) Real (ite (and (<= 480 x1269) (< x1269 (+ 480 4))) (x728 (+ 0 (- x1269 480))) (x656 x1269)))
(define-fun x1430 ((x1269 Real)) Real (ite (and x211 x1568) (x204 x1269) (x656 x1269)))
(define-fun x871 ((x1269 Real)) Real (ite (= x969 x1269) x1317 (x1430 x1269)))
(define-fun x1869 ((x1269 Real)) Real (ite (= x1646 x1269) x637 (x871 x1269)))
(define-fun x44 ((x1269 Real)) Real (ite (and (>= x1269 608) (> (+ 608 32) x1269)) (x313 (+ (- x1269 608) 0)) (x738 x1269)))
(define-fun x1145 ((x1269 Real)) Real (ite (and x1156 x1568) (x44 x1269) (x738 x1269)))
(define-fun x1400 ((x1269 Real)) Real (ite (and (>= x1269 320) (> (+ 320 x1268) x1269)) (x71 (+ 0 (- x1269 320))) (x588 x1269)))
(define-fun x346 ((x1269 Real)) Real (ite (and x1568 x875) (x1400 x1269) (x588 x1269)))
(define-fun x1515 ((x1269 Real)) Real (ite (= 800 x1269) x563 (x346 x1269)))
(define-fun x291 ((x1269 Real)) Real (ite (= 832 x1269) x152 (x1515 x1269)))
(define-fun x1826 ((x1269 Real)) Real (ite (= x1269 800) x1187 (x291 x1269)))
(define-fun x957 ((x1269 x930)) Real (ite (= (x1258 0) x1269) 0 (x1298 x1269)))
(define-fun x30 ((x1269 Real)) Real (x864 x1269))
(define-fun x578 ((x1269 Real)) Real (ite (and (<= 28 x1269) (> (+ 28 4) x1269)) (x864 (+ 0 (- x1269 28))) (x857 x1269)))
(define-fun x1517 ((x1269 Real)) Real (ite (= x1269 640) 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x578 x1269)))
(define-fun x137 ((x1269 Real)) Real (ite (= 672 x1269) x1013 (x1517 x1269)))
(define-fun x1731 ((x1269 Real)) Real (ite (= 704 x1269) 1 (x137 x1269)))
(define-fun x562 ((x1269 Real)) Real (ite (= 160 x1269) x1013 (x1194 x1269)))
(define-fun x1443 ((x1269 Real)) Real (ite (= x1269 128) 7 (x562 x1269)))
(define-fun x611 ((x1269 Real)) Real (ite (= x1269 736) x1478 (x1443 x1269)))
(define-fun x1563 ((x1269 Real)) Real (ite (and (not x1016) (not x1410) x84) (x1194 x1269) (x611 x1269)))
(define-fun x1800 ((x1269 Real)) Real (ite (= x1269 160) x1013 (x1563 x1269)))
(define-fun x1197 ((x1269 Real)) Real (ite (= x1269 128) 7 (x1800 x1269)))
(define-fun x1267 ((x1269 Real)) Real (ite (= x1269 800) x1859 (x514 x1269)))
(define-fun x59 ((x1269 Real)) Real (ite (= 224 x1269) 1889567281 (x514 x1269)))
(define-fun x470 ((x1269 Real)) Real (ite (and (> (+ 224 32) x1269) (<= 224 x1269)) (x434 (+ (- x1269 224) 0)) (x1503 x1269)))
(define-fun x1610 ((x1269 Real)) Real (ite (and x967 x1294 x1766) (x470 x1269) (x1503 x1269)))
(define-fun x955 ((x1269 Real)) Real (ite (= 288 x1269) x570 (x1610 x1269)))
(define-fun x572 ((x1269 Real)) Real (ite (= x1269 256) x1296 (x127 x1269)))
(define-fun x290 ((x1269 Real)) Real (ite (= 320 x1269) x392 (x572 x1269)))
(define-fun x1521 ((x1269 Real)) Real (ite (= 320 x1269) 0 (x127 x1269)))
(define-fun x272 ((x1269 Real)) Real (ite (and (not x943) x615) (x290 x1269) (x1521 x1269)))
(define-fun x1626 ((x1269 Real)) Real (ite (= 384 x1269) x1704 (x272 x1269)))
(define-fun x566 ((x1269 Real)) Real (ite (= x1269 800) x48 (x1626 x1269)))
(define-fun x192 ((x1269 Real)) Real (ite (and x706 (not x650)) (x566 x1269) (x1267 x1269)))
(define-fun x1577 ((x1269 Real)) Real (ite (= 768 x1269) x417 (x192 x1269)))
(define-fun x81 ((x1269 Real)) Real (ite (= x1269 800) 1889567281 (x1577 x1269)))
(define-fun x722 ((x1269 Real)) Real (ite (and (<= 800 x1269) (< x1269 (+ 800 32))) (x307 (+ (- x1269 800) 0)) (x771 x1269)))
(define-fun x1769 ((x1269 Real)) Real (ite (= x1269 864) 0 (x1354 x1269)))
(define-fun x1797 ((x1269 Real)) Real (ite (= 928 x1269) 0 (x1769 x1269)))
(define-fun x715 ((x1269 Real)) Real (ite (= 992 x1269) 1889567281 (x475 x1269)))
(define-fun x34 ((x1269 Real)) Real (ite (and (>= x1269 992) (> (+ 32 992) x1269)) (x1513 (+ (- x1269 992) 0)) (x548 x1269)))
(define-fun x1403 ((x1269 x930)) Real (ite (and (not x1086) x1203) (x1018 x1269) (x880 x1269)))
(define-fun x1383 ((x1269 Real)) Real (ite (and x1086 x1203 x522) (x34 x1269) (x548 x1269)))
(define-fun x1387 ((x1269 Real)) Real (ite (= 992 x1269) x1393 (x1282 x1269)))
(define-fun x1575 ((x1269 Real)) Real (ite (= 160 x1269) x1531 (x1387 x1269)))
(define-fun x1335 ((x1269 Real)) Real (ite (= x1269 128) 16 (x1575 x1269)))
(define-fun x545 ((x1269 Real)) Real (ite (= x1269 1056) 773487949 (x1808 x1269)))
(define-fun x942 ((x1269 Real)) Real (ite (and (< x1269 (+ 1056 32)) (<= 1056 x1269)) (x519 (+ 0 (- x1269 1056))) (x693 x1269)))
(define-fun x1186 ((x1269 Real)) Real (ite (and x1134 x1272 x1357) (x942 x1269) (x693 x1269)))
(define-fun x909 ((x1269 Real)) Real (ite (= 1024 x1269) x1323 (x1186 x1269)))
(define-fun x1119 ((x1269 Real)) Real (ite (= x1269 1088) 1889567281 (x909 x1269)))
(define-fun x1442 ((x1269 Real)) Real (ite (and (>= x1269 1088) (> (+ 1088 32) x1269)) (x1466 (+ 0 (- x1269 1088))) (x1885 x1269)))
(define-fun x1728 ((x1269 Real)) Real (ite (and x1558 x1114 x584) (x1442 x1269) (x1885 x1269)))
(define-fun x213 ((x1269 Real)) Real (ite (= 768 x1269) x293 (x618 x1269)))
(define-fun x984 ((x1269 Real)) Real (ite (= 864 x1269) x1774 (x213 x1269)))
(define-fun x537 ((x1269 Real)) Real (ite (= 224 x1269) x860 (x984 x1269)))
(define-fun x1306 ((x1269 Real)) Real (ite (= 256 x1269) x28 (x537 x1269)))
(define-fun x1823 ((x1269 Real)) Real (ite (= 160 x1269) x372 (x1306 x1269)))
(define-fun x517 ((x1269 Real)) Real (ite (= 128 x1269) 16 (x1823 x1269)))
(define-fun x1168 ((x1269 Real)) Real (ite (= x1269 160) x195 (x1501 x1269)))
(define-fun x836 ((x1269 Real)) Real (ite (= x1269 128) 16 (x1168 x1269)))
(define-fun x1131 ((x1269 Real)) Real (ite (= 160 x1269) x190 (x513 x1269)))
(define-fun x1183 ((x1269 Real)) Real (ite (= 128 x1269) 16 (x1131 x1269)))
(define-fun x350 ((x1269 Real)) Real (ite (and x469 x1713) (x513 x1269) (ite (and x856 x1782) (x1501 x1269) (x1183 x1269))))
(define-fun x370 ((x1269 Real)) Real (ite (= 160 x1269) x1827 (x350 x1269)))
(define-fun x1416 ((x1269 Real)) Real (ite (= 128 x1269) 16 (x370 x1269)))
(define-fun x1216 ((x1269 Real)) Real (ite (= 160 x1269) x1301 (x1416 x1269)))
(define-fun x1351 ((x1269 Real)) Real (ite (= x1269 128) 16 (x1216 x1269)))
(define-fun x1234 ((x1269 Real)) Real (ite (and x1525 (not x994)) (x618 x1269) (x1351 x1269)))
(define-fun x1180 ((x1269 x930)) Real (ite (= x85 x1269) x1598 (x1425 x1269)))
(define-fun x721 ((x1269 x930)) Real (ite (= x1269 (x1258 39)) x1046 (x1180 x1269)))
(define-fun x954 ((x1269 x930)) Real (ite (and x1713 x469) (x1425 x1269) (ite (and x1782 x856) (x1425 x1269) (x721 x1269))))
(define-fun x1307 ((x1269 x930)) Real (ite (= x1269 x1220) x990 (x954 x1269)))
(define-fun x1063 ((x1269 x930)) Real (ite (= x705 x1269) x1488 (x1307 x1269)))
(define-fun x317 ((x1269 x930)) Real (ite (= x1269 (x1258 40)) x1172 (x1063 x1269)))
(define-fun x898 ((x1269 x930)) Real (ite (and x1525 (not x994)) (x1425 x1269) (x317 x1269)))
(define-fun x1779 ((x1269 Real)) Real (ite (= 160 x1269) x62 (x1234 x1269)))
(define-fun x284 ((x1269 Real)) Real (ite (= x1269 128) 16 (x1779 x1269)))
(define-fun x949 ((x1269 x930)) Real (ite (= x1401 x1269) x1611 (x898 x1269)))
(define-fun x45 ((x1269 x930)) Real (ite (= x1269 (x1258 40)) x1651 (x949 x1269)))
(define-fun x419 ((x1269 Real)) Real (ite (and (not x1861) x1321) (x284 x1269) (x1808 x1269)))
(define-fun x445 ((x1269 x930)) Real (ite (and x1321 (not x1861)) (x45 x1269) (x1425 x1269)))
(define-fun x206 ((x1269 Real)) Real (ite (= 896 x1269) x1043 (x756 x1269)))
(define-fun x1159 ((x1269 Real)) Real (ite (and x378 x950) (x756 x1269) (ite (and x72 (not x1698)) (x1282 x1269) (ite (and x1203 (not x1086)) (x475 x1269) (x206 x1269)))))
(define-fun x567 ((x1269 x930)) Real (ite (and x950 x378) (x445 x1269) (ite (and x72 (not x1698)) (x1425 x1269) (ite (and (not x1086) x1203) (x1425 x1269) (x445 x1269)))))
(define-fun x1508 ((x1269 Real)) Real (ite (= 928 x1269) 1889567281 (x1159 x1269)))
(define-fun x1438 ((x1269 Real)) Real (ite (and (> (+ 32 928) x1269) (<= 928 x1269)) (x38 (+ 0 (- x1269 928))) (x1723 x1269)))
(define-fun x589 ((x1269 Real)) Real (ite (and x671 x1304) (x1438 x1269) (x1723 x1269)))
(define-fun x1591 ((x1269 Real)) Real (ite (= x1269 768) x1361 (x939 x1269)))
(define-fun x1614 ((x1269 Real)) Real (ite (= x1269 352) x405 (x1591 x1269)))
(define-fun x742 ((x1269 Real)) Real (ite (= 224 x1269) 1889567281 (x1614 x1269)))
(define-fun x481 ((x1269 Real)) Real (ite (and (>= x1269 224) (< x1269 (+ 224 32))) (x533 (+ (- x1269 224) 0)) (x217 x1269)))
(define-fun x390 ((x1269 Real)) Real (ite (and x1215 x1872 (not x1292)) (x481 x1269) (x217 x1269)))
(define-fun x1044 ((x1269 Real)) Real (ite (= 288 x1269) x299 (x390 x1269)))
(define-fun x103 ((x1269 Real)) Real (ite (= x1269 256) x1219 (x429 x1269)))
(define-fun x1658 ((x1269 Real)) Real (ite (= x1269 320) x126 (x103 x1269)))
(define-fun x1028 ((x1269 Real)) Real (ite (= 320 x1269) 0 (x429 x1269)))
(define-fun x458 ((x1269 Real)) Real (ite (and x823 (not x310)) (x1658 x1269) (x1028 x1269)))
(define-fun x989 ((x1269 Real)) Real (ite (= x1269 416) x1781 (x458 x1269)))
(define-fun x426 ((x1269 Real)) Real (ite (= 928 x1269) x645 (x783 x1269)))
(define-fun x278 ((x1269 Real)) Real (ite (= 928 x1269) 0 (x783 x1269)))
(define-fun x708 ((x1269 Real)) Real (ite (and (not x1233) x1799) (x426 x1269) (x278 x1269)))
(define-fun x777 ((x1269 Real)) Real (ite (= x1269 736) x1137 (x708 x1269)))
(define-fun x1519 ((x1269 Real)) Real (ite (and x1493 (not x743)) (x777 x1269) (x939 x1269)))
(define-fun x607 ((x1269 Real)) Real (ite (and (not x1762) x338) (x1519 x1269) (x1354 x1269)))
(define-fun x1360 ((x1269 x930)) Real (ite (and x338 (not x1762)) (ite (and x950 x378) (x880 x1269) (ite (and (not x1698) x72) (x1018 x1269) (x1403 x1269))) (x1018 x1269)))
(define-fun x1819 ((x1269 x930)) Real (ite (and x338 (not x1762)) (x567 x1269) (x1425 x1269)))
(define-fun x1015 ((x1269 x930)) Real (ite (= (x1258 9) x1269) x1567 (x1819 x1269)))
(define-fun x352 ((x1269 Real)) Real (ite (= x1269 160) x1013 (x607 x1269)))
(define-fun x250 ((x1269 Real)) Real (ite (= 128 x1269) 7 (x352 x1269)))
(define-fun x398 ((x1269 x930)) Real (ite (= x1269 x345) x374 (x1015 x1269)))
(define-fun x1315 ((x1269 Real)) Real (ite (= x1269 800) x616 (x250 x1269)))
(define-fun x69 ((x1269 Real)) Real (ite (= 224 x1269) x982 (x1315 x1269)))
(define-fun x1083 ((x1269 Real)) Real (ite (= 256 x1269) x1681 (x69 x1269)))
(define-fun x779 ((x1269 Real)) Real (ite (= x1269 288) x328 (x1083 x1269)))
(define-fun x251 ((x1269 Real)) Real (ite (= x1269 384) 4 (x779 x1269)))
(define-fun x737 ((x1269 Real)) Real (ite (and (> (+ 480 4) x1269) (<= 480 x1269)) (x309 (+ (- x1269 480) 0)) (x515 x1269)))
(define-fun x1851 ((x1269 Real)) Real (ite (and x1465 x1657 (not x764)) (x737 x1269) (x515 x1269)))
(define-fun x1372 ((x1269 Real)) Real (ite (= x1900 x1269) x1132 (x1851 x1269)))
(define-fun x1582 ((x1269 Real)) Real (ite (= x1269 x1718) x154 (x1372 x1269)))
(define-fun x1371 ((x1269 Real)) Real (ite (and (< x1269 (+ 32 608)) (<= 608 x1269)) (x800 (+ 0 (- x1269 608))) (x574 x1269)))
(define-fun x852 ((x1269 Real)) Real (ite (and (not x764) x759 x1465) (x1371 x1269) (x574 x1269)))
(define-fun x952 ((x1269 Real)) Real (ite (and (< x1269 (+ x1701 320)) (<= 320 x1269)) (x1391 (+ (- x1269 320) 0)) (x248 x1269)))
(define-fun x193 ((x1269 Real)) Real (ite (and x1719 x373 x614) (x952 x1269) (x248 x1269)))
(define-fun x1678 ((x1269 Real)) Real (ite (= 800 x1269) x966 (x193 x1269)))
(define-fun x1380 ((x1269 Real)) Real (ite (= 832 x1269) x1712 (x1678 x1269)))
(define-fun x659 ((x1269 Real)) Real (ite (= 800 x1269) x18 (x1380 x1269)))
(define-fun x655 ((x393 Real)) Bool (=> (and (not (= 2209625481 x393)) (> x393 10000) (not (= 1000000000000000000 x393)) (not (= x393 1401663147)) (not (= 157198259 x393)) (not (= x393 3065339685)) (not (= x393 3184006219)) (not (= x393 1461501637330902918203684832716283019655932542975)) (not (= 4294967296 x393)) (not (= 1851080549 x393)) (not (= x393 3296657447)) (not (= x393 1888058147)) (not (= 2835717307 x393)) (not (= 1020253707 x393)) (not (= 629314576 x393)) (not (= 348537858 x393)) (not (= x393 274184521717934524641157099916833587200)) (not (= 1977493762 x393)) (not (= 2757214935 x393)) (not (= x393 76450787359836037641860180984291677749980919077056822294353438043884394381312)) (not (= x393 3567397854)) (not (= x393 599290589)) (not (= x393 961581905)) (not (= 3092021830 x393)) (not (= x393 464926286)) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x393)) (not (= 3963136098 x393)) (not (= 1889567281 x393)) (not (= x393 2869116585)) (not (= 2780307423 x393)) (not (= x393 773487949)) (not (= x393 2316151882)) (not (= x393 3504541104)) (not (= 596573372 x393)) (not (= x393 2052391781)) (not (= x393 4267106866)) (not (= 2681579215 x393)) (not (= x393 2484372501)) (not (= x393 31576340))) (not ((_ is x1258) (x1428 x393)))))
(assert (axiom_frac_bound (* 8 x619) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (* 8 x619) 115792089237316195423570985008687907853269984665640564039457584007913129639936 8 x619 (uninterp_frac (* 8 x619) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 8 x619) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1075 x1453 (uninterp_frac (* 8 x619) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 8 x619) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1140 x147 (uninterp_frac (* 8 x619) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 8 x619) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1171 x1671 (uninterp_frac (* 8 x619) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 8 x619) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1217 x635 (uninterp_frac (* 8 x619) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 8 x619) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1228 x1 (uninterp_frac (* 8 x619) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 8 x619) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1320 x221 (uninterp_frac (* 8 x619) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 8 x619) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x134 8 (uninterp_frac (* 8 x619) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 8 x619) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1341 x240 (uninterp_frac (* 8 x619) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 8 x619) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1397 x297 (uninterp_frac (* 8 x619) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 8 x619) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1450 x447 (uninterp_frac (* 8 x619) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 8 x619) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1489 x915 (uninterp_frac (* 8 x619) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 8 x619) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1634 x1506 (uninterp_frac (* 8 x619) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 8 x619) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1661 x1729 (uninterp_frac (* 8 x619) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 8 x619) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x167 x1348 (uninterp_frac (* 8 x619) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 8 x619) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1744 x334 (uninterp_frac (* 8 x619) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 8 x619) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1866 x579 (uninterp_frac (* 8 x619) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 8 x619) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1890 x690 (uninterp_frac (* 8 x619) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 8 x619) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x200 x1310 (uninterp_frac (* 8 x619) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 8 x619) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x239 8 (uninterp_frac (* 8 x619) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 8 x619) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x42 x132 (uninterp_frac (* 8 x619) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 8 x619) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x526 x983 (uninterp_frac (* 8 x619) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 8 x619) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x591 x717 (uninterp_frac (* 8 x619) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 8 x619) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x609 x1319 (uninterp_frac (* 8 x619) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 8 x619) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x691 x1176 (uninterp_frac (* 8 x619) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 8 x619) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x732 x437 (uninterp_frac (* 8 x619) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 8 x619) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x910 x1747 (uninterp_frac (* 8 x619) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (* x1075 x1453) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (* x1075 x1453) 115792089237316195423570985008687907853269984665640564039457584007913129639936 8 x619 (uninterp_frac (* x1075 x1453) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1075 x1453) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1075 x1453 (uninterp_frac (* x1075 x1453) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1075 x1453) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1140 x147 (uninterp_frac (* x1075 x1453) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1075 x1453) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1171 x1671 (uninterp_frac (* x1075 x1453) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1075 x1453) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1217 x635 (uninterp_frac (* x1075 x1453) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1075 x1453) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1228 x1 (uninterp_frac (* x1075 x1453) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1075 x1453) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1320 x221 (uninterp_frac (* x1075 x1453) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1075 x1453) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x134 8 (uninterp_frac (* x1075 x1453) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1075 x1453) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1341 x240 (uninterp_frac (* x1075 x1453) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1075 x1453) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1397 x297 (uninterp_frac (* x1075 x1453) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1075 x1453) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1450 x447 (uninterp_frac (* x1075 x1453) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1075 x1453) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1489 x915 (uninterp_frac (* x1075 x1453) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1075 x1453) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1634 x1506 (uninterp_frac (* x1075 x1453) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1075 x1453) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1661 x1729 (uninterp_frac (* x1075 x1453) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1075 x1453) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x167 x1348 (uninterp_frac (* x1075 x1453) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1075 x1453) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1744 x334 (uninterp_frac (* x1075 x1453) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1075 x1453) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1866 x579 (uninterp_frac (* x1075 x1453) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1075 x1453) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1890 x690 (uninterp_frac (* x1075 x1453) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1075 x1453) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x200 x1310 (uninterp_frac (* x1075 x1453) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1075 x1453) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x239 8 (uninterp_frac (* x1075 x1453) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1075 x1453) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x42 x132 (uninterp_frac (* x1075 x1453) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1075 x1453) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x526 x983 (uninterp_frac (* x1075 x1453) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1075 x1453) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x591 x717 (uninterp_frac (* x1075 x1453) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1075 x1453) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x609 x1319 (uninterp_frac (* x1075 x1453) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1075 x1453) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x691 x1176 (uninterp_frac (* x1075 x1453) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1075 x1453) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x732 x437 (uninterp_frac (* x1075 x1453) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1075 x1453) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x910 x1747 (uninterp_frac (* x1075 x1453) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (* x1140 x147) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (* x1140 x147) 115792089237316195423570985008687907853269984665640564039457584007913129639936 8 x619 (uninterp_frac (* x1140 x147) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1140 x147) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1075 x1453 (uninterp_frac (* x1140 x147) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1140 x147) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1140 x147 (uninterp_frac (* x1140 x147) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1140 x147) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1171 x1671 (uninterp_frac (* x1140 x147) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1140 x147) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1217 x635 (uninterp_frac (* x1140 x147) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1140 x147) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1228 x1 (uninterp_frac (* x1140 x147) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1140 x147) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1320 x221 (uninterp_frac (* x1140 x147) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1140 x147) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x134 8 (uninterp_frac (* x1140 x147) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1140 x147) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1341 x240 (uninterp_frac (* x1140 x147) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1140 x147) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1397 x297 (uninterp_frac (* x1140 x147) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1140 x147) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1450 x447 (uninterp_frac (* x1140 x147) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1140 x147) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1489 x915 (uninterp_frac (* x1140 x147) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1140 x147) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1634 x1506 (uninterp_frac (* x1140 x147) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1140 x147) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1661 x1729 (uninterp_frac (* x1140 x147) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1140 x147) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x167 x1348 (uninterp_frac (* x1140 x147) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1140 x147) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1744 x334 (uninterp_frac (* x1140 x147) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1140 x147) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1866 x579 (uninterp_frac (* x1140 x147) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1140 x147) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1890 x690 (uninterp_frac (* x1140 x147) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1140 x147) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x200 x1310 (uninterp_frac (* x1140 x147) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1140 x147) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x239 8 (uninterp_frac (* x1140 x147) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1140 x147) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x42 x132 (uninterp_frac (* x1140 x147) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1140 x147) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x526 x983 (uninterp_frac (* x1140 x147) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1140 x147) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x591 x717 (uninterp_frac (* x1140 x147) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1140 x147) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x609 x1319 (uninterp_frac (* x1140 x147) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1140 x147) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x691 x1176 (uninterp_frac (* x1140 x147) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1140 x147) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x732 x437 (uninterp_frac (* x1140 x147) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1140 x147) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x910 x1747 (uninterp_frac (* x1140 x147) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (* x1171 x1671) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (* x1171 x1671) 115792089237316195423570985008687907853269984665640564039457584007913129639936 8 x619 (uninterp_frac (* x1171 x1671) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1171 x1671) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1075 x1453 (uninterp_frac (* x1171 x1671) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1171 x1671) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1140 x147 (uninterp_frac (* x1171 x1671) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1171 x1671) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1171 x1671 (uninterp_frac (* x1171 x1671) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1171 x1671) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1217 x635 (uninterp_frac (* x1171 x1671) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1171 x1671) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1228 x1 (uninterp_frac (* x1171 x1671) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1171 x1671) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1320 x221 (uninterp_frac (* x1171 x1671) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1171 x1671) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x134 8 (uninterp_frac (* x1171 x1671) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1171 x1671) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1341 x240 (uninterp_frac (* x1171 x1671) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1171 x1671) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1397 x297 (uninterp_frac (* x1171 x1671) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1171 x1671) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1450 x447 (uninterp_frac (* x1171 x1671) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1171 x1671) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1489 x915 (uninterp_frac (* x1171 x1671) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1171 x1671) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1634 x1506 (uninterp_frac (* x1171 x1671) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1171 x1671) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1661 x1729 (uninterp_frac (* x1171 x1671) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1171 x1671) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x167 x1348 (uninterp_frac (* x1171 x1671) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1171 x1671) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1744 x334 (uninterp_frac (* x1171 x1671) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1171 x1671) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1866 x579 (uninterp_frac (* x1171 x1671) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1171 x1671) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1890 x690 (uninterp_frac (* x1171 x1671) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1171 x1671) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x200 x1310 (uninterp_frac (* x1171 x1671) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1171 x1671) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x239 8 (uninterp_frac (* x1171 x1671) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1171 x1671) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x42 x132 (uninterp_frac (* x1171 x1671) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1171 x1671) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x526 x983 (uninterp_frac (* x1171 x1671) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1171 x1671) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x591 x717 (uninterp_frac (* x1171 x1671) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1171 x1671) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x609 x1319 (uninterp_frac (* x1171 x1671) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1171 x1671) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x691 x1176 (uninterp_frac (* x1171 x1671) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1171 x1671) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x732 x437 (uninterp_frac (* x1171 x1671) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1171 x1671) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x910 x1747 (uninterp_frac (* x1171 x1671) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (* x1217 x635) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (* x1217 x635) 115792089237316195423570985008687907853269984665640564039457584007913129639936 8 x619 (uninterp_frac (* x1217 x635) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1217 x635) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1075 x1453 (uninterp_frac (* x1217 x635) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1217 x635) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1140 x147 (uninterp_frac (* x1217 x635) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1217 x635) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1171 x1671 (uninterp_frac (* x1217 x635) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1217 x635) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1217 x635 (uninterp_frac (* x1217 x635) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1217 x635) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1228 x1 (uninterp_frac (* x1217 x635) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1217 x635) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1320 x221 (uninterp_frac (* x1217 x635) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1217 x635) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x134 8 (uninterp_frac (* x1217 x635) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1217 x635) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1341 x240 (uninterp_frac (* x1217 x635) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1217 x635) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1397 x297 (uninterp_frac (* x1217 x635) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1217 x635) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1450 x447 (uninterp_frac (* x1217 x635) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1217 x635) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1489 x915 (uninterp_frac (* x1217 x635) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1217 x635) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1634 x1506 (uninterp_frac (* x1217 x635) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1217 x635) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1661 x1729 (uninterp_frac (* x1217 x635) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1217 x635) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x167 x1348 (uninterp_frac (* x1217 x635) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1217 x635) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1744 x334 (uninterp_frac (* x1217 x635) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1217 x635) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1866 x579 (uninterp_frac (* x1217 x635) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1217 x635) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1890 x690 (uninterp_frac (* x1217 x635) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1217 x635) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x200 x1310 (uninterp_frac (* x1217 x635) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1217 x635) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x239 8 (uninterp_frac (* x1217 x635) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1217 x635) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x42 x132 (uninterp_frac (* x1217 x635) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1217 x635) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x526 x983 (uninterp_frac (* x1217 x635) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1217 x635) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x591 x717 (uninterp_frac (* x1217 x635) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1217 x635) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x609 x1319 (uninterp_frac (* x1217 x635) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1217 x635) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x691 x1176 (uninterp_frac (* x1217 x635) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1217 x635) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x732 x437 (uninterp_frac (* x1217 x635) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1217 x635) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x910 x1747 (uninterp_frac (* x1217 x635) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (* x1228 x1) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (* x1228 x1) 115792089237316195423570985008687907853269984665640564039457584007913129639936 8 x619 (uninterp_frac (* x1228 x1) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1228 x1) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1075 x1453 (uninterp_frac (* x1228 x1) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1228 x1) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1140 x147 (uninterp_frac (* x1228 x1) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1228 x1) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1171 x1671 (uninterp_frac (* x1228 x1) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1228 x1) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1217 x635 (uninterp_frac (* x1228 x1) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1228 x1) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1228 x1 (uninterp_frac (* x1228 x1) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1228 x1) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1320 x221 (uninterp_frac (* x1228 x1) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1228 x1) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x134 8 (uninterp_frac (* x1228 x1) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1228 x1) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1341 x240 (uninterp_frac (* x1228 x1) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1228 x1) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1397 x297 (uninterp_frac (* x1228 x1) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1228 x1) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1450 x447 (uninterp_frac (* x1228 x1) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1228 x1) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1489 x915 (uninterp_frac (* x1228 x1) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1228 x1) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1634 x1506 (uninterp_frac (* x1228 x1) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1228 x1) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1661 x1729 (uninterp_frac (* x1228 x1) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1228 x1) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x167 x1348 (uninterp_frac (* x1228 x1) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1228 x1) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1744 x334 (uninterp_frac (* x1228 x1) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1228 x1) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1866 x579 (uninterp_frac (* x1228 x1) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1228 x1) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1890 x690 (uninterp_frac (* x1228 x1) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1228 x1) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x200 x1310 (uninterp_frac (* x1228 x1) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1228 x1) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x239 8 (uninterp_frac (* x1228 x1) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1228 x1) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x42 x132 (uninterp_frac (* x1228 x1) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1228 x1) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x526 x983 (uninterp_frac (* x1228 x1) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1228 x1) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x591 x717 (uninterp_frac (* x1228 x1) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1228 x1) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x609 x1319 (uninterp_frac (* x1228 x1) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1228 x1) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x691 x1176 (uninterp_frac (* x1228 x1) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1228 x1) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x732 x437 (uninterp_frac (* x1228 x1) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1228 x1) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x910 x1747 (uninterp_frac (* x1228 x1) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (* x1320 x221) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (* x1320 x221) 115792089237316195423570985008687907853269984665640564039457584007913129639936 8 x619 (uninterp_frac (* x1320 x221) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1320 x221) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1075 x1453 (uninterp_frac (* x1320 x221) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1320 x221) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1140 x147 (uninterp_frac (* x1320 x221) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1320 x221) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1171 x1671 (uninterp_frac (* x1320 x221) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1320 x221) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1217 x635 (uninterp_frac (* x1320 x221) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1320 x221) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1228 x1 (uninterp_frac (* x1320 x221) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1320 x221) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1320 x221 (uninterp_frac (* x1320 x221) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1320 x221) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x134 8 (uninterp_frac (* x1320 x221) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1320 x221) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1341 x240 (uninterp_frac (* x1320 x221) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1320 x221) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1397 x297 (uninterp_frac (* x1320 x221) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1320 x221) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1450 x447 (uninterp_frac (* x1320 x221) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1320 x221) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1489 x915 (uninterp_frac (* x1320 x221) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1320 x221) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1634 x1506 (uninterp_frac (* x1320 x221) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1320 x221) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1661 x1729 (uninterp_frac (* x1320 x221) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1320 x221) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x167 x1348 (uninterp_frac (* x1320 x221) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1320 x221) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1744 x334 (uninterp_frac (* x1320 x221) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1320 x221) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1866 x579 (uninterp_frac (* x1320 x221) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1320 x221) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1890 x690 (uninterp_frac (* x1320 x221) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1320 x221) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x200 x1310 (uninterp_frac (* x1320 x221) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1320 x221) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x239 8 (uninterp_frac (* x1320 x221) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1320 x221) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x42 x132 (uninterp_frac (* x1320 x221) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1320 x221) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x526 x983 (uninterp_frac (* x1320 x221) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1320 x221) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x591 x717 (uninterp_frac (* x1320 x221) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1320 x221) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x609 x1319 (uninterp_frac (* x1320 x221) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1320 x221) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x691 x1176 (uninterp_frac (* x1320 x221) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1320 x221) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x732 x437 (uninterp_frac (* x1320 x221) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1320 x221) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x910 x1747 (uninterp_frac (* x1320 x221) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (* x134 8) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (* x134 8) 115792089237316195423570985008687907853269984665640564039457584007913129639936 8 x619 (uninterp_frac (* x134 8) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x134 8) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1075 x1453 (uninterp_frac (* x134 8) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x134 8) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1140 x147 (uninterp_frac (* x134 8) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x134 8) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1171 x1671 (uninterp_frac (* x134 8) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x134 8) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1217 x635 (uninterp_frac (* x134 8) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x134 8) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1228 x1 (uninterp_frac (* x134 8) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x134 8) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1320 x221 (uninterp_frac (* x134 8) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x134 8) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x134 8 (uninterp_frac (* x134 8) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x134 8) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1341 x240 (uninterp_frac (* x134 8) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x134 8) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1397 x297 (uninterp_frac (* x134 8) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x134 8) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1450 x447 (uninterp_frac (* x134 8) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x134 8) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1489 x915 (uninterp_frac (* x134 8) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x134 8) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1634 x1506 (uninterp_frac (* x134 8) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x134 8) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1661 x1729 (uninterp_frac (* x134 8) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x134 8) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x167 x1348 (uninterp_frac (* x134 8) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x134 8) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1744 x334 (uninterp_frac (* x134 8) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x134 8) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1866 x579 (uninterp_frac (* x134 8) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x134 8) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1890 x690 (uninterp_frac (* x134 8) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x134 8) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x200 x1310 (uninterp_frac (* x134 8) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x134 8) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x239 8 (uninterp_frac (* x134 8) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x134 8) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x42 x132 (uninterp_frac (* x134 8) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x134 8) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x526 x983 (uninterp_frac (* x134 8) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x134 8) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x591 x717 (uninterp_frac (* x134 8) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x134 8) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x609 x1319 (uninterp_frac (* x134 8) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x134 8) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x691 x1176 (uninterp_frac (* x134 8) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x134 8) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x732 x437 (uninterp_frac (* x134 8) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x134 8) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x910 x1747 (uninterp_frac (* x134 8) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (* x1341 x240) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (* x1341 x240) 115792089237316195423570985008687907853269984665640564039457584007913129639936 8 x619 (uninterp_frac (* x1341 x240) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1341 x240) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1075 x1453 (uninterp_frac (* x1341 x240) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1341 x240) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1140 x147 (uninterp_frac (* x1341 x240) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1341 x240) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1171 x1671 (uninterp_frac (* x1341 x240) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1341 x240) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1217 x635 (uninterp_frac (* x1341 x240) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1341 x240) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1228 x1 (uninterp_frac (* x1341 x240) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1341 x240) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1320 x221 (uninterp_frac (* x1341 x240) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1341 x240) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x134 8 (uninterp_frac (* x1341 x240) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1341 x240) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1341 x240 (uninterp_frac (* x1341 x240) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1341 x240) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1397 x297 (uninterp_frac (* x1341 x240) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1341 x240) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1450 x447 (uninterp_frac (* x1341 x240) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1341 x240) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1489 x915 (uninterp_frac (* x1341 x240) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1341 x240) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1634 x1506 (uninterp_frac (* x1341 x240) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1341 x240) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1661 x1729 (uninterp_frac (* x1341 x240) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1341 x240) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x167 x1348 (uninterp_frac (* x1341 x240) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1341 x240) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1744 x334 (uninterp_frac (* x1341 x240) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1341 x240) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1866 x579 (uninterp_frac (* x1341 x240) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1341 x240) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1890 x690 (uninterp_frac (* x1341 x240) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1341 x240) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x200 x1310 (uninterp_frac (* x1341 x240) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1341 x240) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x239 8 (uninterp_frac (* x1341 x240) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1341 x240) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x42 x132 (uninterp_frac (* x1341 x240) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1341 x240) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x526 x983 (uninterp_frac (* x1341 x240) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1341 x240) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x591 x717 (uninterp_frac (* x1341 x240) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1341 x240) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x609 x1319 (uninterp_frac (* x1341 x240) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1341 x240) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x691 x1176 (uninterp_frac (* x1341 x240) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1341 x240) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x732 x437 (uninterp_frac (* x1341 x240) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1341 x240) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x910 x1747 (uninterp_frac (* x1341 x240) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (* x1397 x297) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (* x1397 x297) 115792089237316195423570985008687907853269984665640564039457584007913129639936 8 x619 (uninterp_frac (* x1397 x297) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1397 x297) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1075 x1453 (uninterp_frac (* x1397 x297) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1397 x297) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1140 x147 (uninterp_frac (* x1397 x297) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1397 x297) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1171 x1671 (uninterp_frac (* x1397 x297) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1397 x297) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1217 x635 (uninterp_frac (* x1397 x297) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1397 x297) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1228 x1 (uninterp_frac (* x1397 x297) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1397 x297) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1320 x221 (uninterp_frac (* x1397 x297) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1397 x297) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x134 8 (uninterp_frac (* x1397 x297) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1397 x297) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1341 x240 (uninterp_frac (* x1397 x297) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1397 x297) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1397 x297 (uninterp_frac (* x1397 x297) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1397 x297) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1450 x447 (uninterp_frac (* x1397 x297) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1397 x297) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1489 x915 (uninterp_frac (* x1397 x297) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1397 x297) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1634 x1506 (uninterp_frac (* x1397 x297) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1397 x297) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1661 x1729 (uninterp_frac (* x1397 x297) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1397 x297) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x167 x1348 (uninterp_frac (* x1397 x297) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1397 x297) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1744 x334 (uninterp_frac (* x1397 x297) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1397 x297) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1866 x579 (uninterp_frac (* x1397 x297) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1397 x297) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1890 x690 (uninterp_frac (* x1397 x297) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1397 x297) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x200 x1310 (uninterp_frac (* x1397 x297) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1397 x297) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x239 8 (uninterp_frac (* x1397 x297) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1397 x297) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x42 x132 (uninterp_frac (* x1397 x297) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1397 x297) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x526 x983 (uninterp_frac (* x1397 x297) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1397 x297) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x591 x717 (uninterp_frac (* x1397 x297) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1397 x297) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x609 x1319 (uninterp_frac (* x1397 x297) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1397 x297) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x691 x1176 (uninterp_frac (* x1397 x297) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1397 x297) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x732 x437 (uninterp_frac (* x1397 x297) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1397 x297) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x910 x1747 (uninterp_frac (* x1397 x297) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (* x1450 x447) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (* x1450 x447) 115792089237316195423570985008687907853269984665640564039457584007913129639936 8 x619 (uninterp_frac (* x1450 x447) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1450 x447) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1075 x1453 (uninterp_frac (* x1450 x447) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1450 x447) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1140 x147 (uninterp_frac (* x1450 x447) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1450 x447) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1171 x1671 (uninterp_frac (* x1450 x447) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1450 x447) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1217 x635 (uninterp_frac (* x1450 x447) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1450 x447) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1228 x1 (uninterp_frac (* x1450 x447) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1450 x447) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1320 x221 (uninterp_frac (* x1450 x447) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1450 x447) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x134 8 (uninterp_frac (* x1450 x447) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1450 x447) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1341 x240 (uninterp_frac (* x1450 x447) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1450 x447) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1397 x297 (uninterp_frac (* x1450 x447) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1450 x447) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1450 x447 (uninterp_frac (* x1450 x447) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1450 x447) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1489 x915 (uninterp_frac (* x1450 x447) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1450 x447) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1634 x1506 (uninterp_frac (* x1450 x447) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1450 x447) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1661 x1729 (uninterp_frac (* x1450 x447) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1450 x447) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x167 x1348 (uninterp_frac (* x1450 x447) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1450 x447) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1744 x334 (uninterp_frac (* x1450 x447) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1450 x447) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1866 x579 (uninterp_frac (* x1450 x447) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1450 x447) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1890 x690 (uninterp_frac (* x1450 x447) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1450 x447) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x200 x1310 (uninterp_frac (* x1450 x447) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1450 x447) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x239 8 (uninterp_frac (* x1450 x447) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1450 x447) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x42 x132 (uninterp_frac (* x1450 x447) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1450 x447) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x526 x983 (uninterp_frac (* x1450 x447) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1450 x447) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x591 x717 (uninterp_frac (* x1450 x447) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1450 x447) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x609 x1319 (uninterp_frac (* x1450 x447) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1450 x447) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x691 x1176 (uninterp_frac (* x1450 x447) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1450 x447) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x732 x437 (uninterp_frac (* x1450 x447) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1450 x447) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x910 x1747 (uninterp_frac (* x1450 x447) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (* x1489 x915) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (* x1489 x915) 115792089237316195423570985008687907853269984665640564039457584007913129639936 8 x619 (uninterp_frac (* x1489 x915) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1489 x915) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1075 x1453 (uninterp_frac (* x1489 x915) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1489 x915) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1140 x147 (uninterp_frac (* x1489 x915) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1489 x915) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1171 x1671 (uninterp_frac (* x1489 x915) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1489 x915) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1217 x635 (uninterp_frac (* x1489 x915) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1489 x915) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1228 x1 (uninterp_frac (* x1489 x915) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1489 x915) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1320 x221 (uninterp_frac (* x1489 x915) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1489 x915) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x134 8 (uninterp_frac (* x1489 x915) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1489 x915) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1341 x240 (uninterp_frac (* x1489 x915) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1489 x915) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1397 x297 (uninterp_frac (* x1489 x915) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1489 x915) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1450 x447 (uninterp_frac (* x1489 x915) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1489 x915) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1489 x915 (uninterp_frac (* x1489 x915) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1489 x915) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1634 x1506 (uninterp_frac (* x1489 x915) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1489 x915) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1661 x1729 (uninterp_frac (* x1489 x915) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1489 x915) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x167 x1348 (uninterp_frac (* x1489 x915) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1489 x915) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1744 x334 (uninterp_frac (* x1489 x915) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1489 x915) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1866 x579 (uninterp_frac (* x1489 x915) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1489 x915) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1890 x690 (uninterp_frac (* x1489 x915) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1489 x915) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x200 x1310 (uninterp_frac (* x1489 x915) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1489 x915) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x239 8 (uninterp_frac (* x1489 x915) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1489 x915) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x42 x132 (uninterp_frac (* x1489 x915) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1489 x915) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x526 x983 (uninterp_frac (* x1489 x915) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1489 x915) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x591 x717 (uninterp_frac (* x1489 x915) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1489 x915) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x609 x1319 (uninterp_frac (* x1489 x915) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1489 x915) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x691 x1176 (uninterp_frac (* x1489 x915) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1489 x915) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x732 x437 (uninterp_frac (* x1489 x915) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1489 x915) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x910 x1747 (uninterp_frac (* x1489 x915) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (* x1634 x1506) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (* x1634 x1506) 115792089237316195423570985008687907853269984665640564039457584007913129639936 8 x619 (uninterp_frac (* x1634 x1506) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1634 x1506) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1075 x1453 (uninterp_frac (* x1634 x1506) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1634 x1506) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1140 x147 (uninterp_frac (* x1634 x1506) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1634 x1506) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1171 x1671 (uninterp_frac (* x1634 x1506) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1634 x1506) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1217 x635 (uninterp_frac (* x1634 x1506) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1634 x1506) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1228 x1 (uninterp_frac (* x1634 x1506) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1634 x1506) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1320 x221 (uninterp_frac (* x1634 x1506) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1634 x1506) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x134 8 (uninterp_frac (* x1634 x1506) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1634 x1506) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1341 x240 (uninterp_frac (* x1634 x1506) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1634 x1506) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1397 x297 (uninterp_frac (* x1634 x1506) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1634 x1506) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1450 x447 (uninterp_frac (* x1634 x1506) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1634 x1506) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1489 x915 (uninterp_frac (* x1634 x1506) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1634 x1506) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1634 x1506 (uninterp_frac (* x1634 x1506) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1634 x1506) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1661 x1729 (uninterp_frac (* x1634 x1506) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1634 x1506) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x167 x1348 (uninterp_frac (* x1634 x1506) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1634 x1506) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1744 x334 (uninterp_frac (* x1634 x1506) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1634 x1506) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1866 x579 (uninterp_frac (* x1634 x1506) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1634 x1506) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1890 x690 (uninterp_frac (* x1634 x1506) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1634 x1506) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x200 x1310 (uninterp_frac (* x1634 x1506) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1634 x1506) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x239 8 (uninterp_frac (* x1634 x1506) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1634 x1506) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x42 x132 (uninterp_frac (* x1634 x1506) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1634 x1506) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x526 x983 (uninterp_frac (* x1634 x1506) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1634 x1506) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x591 x717 (uninterp_frac (* x1634 x1506) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1634 x1506) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x609 x1319 (uninterp_frac (* x1634 x1506) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1634 x1506) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x691 x1176 (uninterp_frac (* x1634 x1506) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1634 x1506) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x732 x437 (uninterp_frac (* x1634 x1506) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1634 x1506) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x910 x1747 (uninterp_frac (* x1634 x1506) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (* x1661 x1729) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (* x1661 x1729) 115792089237316195423570985008687907853269984665640564039457584007913129639936 8 x619 (uninterp_frac (* x1661 x1729) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1661 x1729) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1075 x1453 (uninterp_frac (* x1661 x1729) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1661 x1729) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1140 x147 (uninterp_frac (* x1661 x1729) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1661 x1729) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1171 x1671 (uninterp_frac (* x1661 x1729) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1661 x1729) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1217 x635 (uninterp_frac (* x1661 x1729) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1661 x1729) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1228 x1 (uninterp_frac (* x1661 x1729) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1661 x1729) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1320 x221 (uninterp_frac (* x1661 x1729) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1661 x1729) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x134 8 (uninterp_frac (* x1661 x1729) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1661 x1729) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1341 x240 (uninterp_frac (* x1661 x1729) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1661 x1729) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1397 x297 (uninterp_frac (* x1661 x1729) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1661 x1729) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1450 x447 (uninterp_frac (* x1661 x1729) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1661 x1729) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1489 x915 (uninterp_frac (* x1661 x1729) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1661 x1729) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1634 x1506 (uninterp_frac (* x1661 x1729) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1661 x1729) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1661 x1729 (uninterp_frac (* x1661 x1729) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1661 x1729) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x167 x1348 (uninterp_frac (* x1661 x1729) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1661 x1729) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1744 x334 (uninterp_frac (* x1661 x1729) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1661 x1729) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1866 x579 (uninterp_frac (* x1661 x1729) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1661 x1729) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1890 x690 (uninterp_frac (* x1661 x1729) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1661 x1729) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x200 x1310 (uninterp_frac (* x1661 x1729) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1661 x1729) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x239 8 (uninterp_frac (* x1661 x1729) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1661 x1729) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x42 x132 (uninterp_frac (* x1661 x1729) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1661 x1729) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x526 x983 (uninterp_frac (* x1661 x1729) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1661 x1729) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x591 x717 (uninterp_frac (* x1661 x1729) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1661 x1729) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x609 x1319 (uninterp_frac (* x1661 x1729) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1661 x1729) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x691 x1176 (uninterp_frac (* x1661 x1729) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1661 x1729) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x732 x437 (uninterp_frac (* x1661 x1729) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1661 x1729) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x910 x1747 (uninterp_frac (* x1661 x1729) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (* x167 x1348) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (* x167 x1348) 115792089237316195423570985008687907853269984665640564039457584007913129639936 8 x619 (uninterp_frac (* x167 x1348) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x167 x1348) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1075 x1453 (uninterp_frac (* x167 x1348) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x167 x1348) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1140 x147 (uninterp_frac (* x167 x1348) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x167 x1348) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1171 x1671 (uninterp_frac (* x167 x1348) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x167 x1348) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1217 x635 (uninterp_frac (* x167 x1348) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x167 x1348) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1228 x1 (uninterp_frac (* x167 x1348) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x167 x1348) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1320 x221 (uninterp_frac (* x167 x1348) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x167 x1348) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x134 8 (uninterp_frac (* x167 x1348) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x167 x1348) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1341 x240 (uninterp_frac (* x167 x1348) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x167 x1348) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1397 x297 (uninterp_frac (* x167 x1348) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x167 x1348) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1450 x447 (uninterp_frac (* x167 x1348) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x167 x1348) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1489 x915 (uninterp_frac (* x167 x1348) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x167 x1348) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1634 x1506 (uninterp_frac (* x167 x1348) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x167 x1348) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1661 x1729 (uninterp_frac (* x167 x1348) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x167 x1348) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x167 x1348 (uninterp_frac (* x167 x1348) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x167 x1348) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1744 x334 (uninterp_frac (* x167 x1348) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x167 x1348) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1866 x579 (uninterp_frac (* x167 x1348) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x167 x1348) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1890 x690 (uninterp_frac (* x167 x1348) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x167 x1348) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x200 x1310 (uninterp_frac (* x167 x1348) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x167 x1348) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x239 8 (uninterp_frac (* x167 x1348) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x167 x1348) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x42 x132 (uninterp_frac (* x167 x1348) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x167 x1348) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x526 x983 (uninterp_frac (* x167 x1348) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x167 x1348) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x591 x717 (uninterp_frac (* x167 x1348) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x167 x1348) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x609 x1319 (uninterp_frac (* x167 x1348) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x167 x1348) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x691 x1176 (uninterp_frac (* x167 x1348) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x167 x1348) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x732 x437 (uninterp_frac (* x167 x1348) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x167 x1348) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x910 x1747 (uninterp_frac (* x167 x1348) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (* x1744 x334) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (* x1744 x334) 115792089237316195423570985008687907853269984665640564039457584007913129639936 8 x619 (uninterp_frac (* x1744 x334) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1744 x334) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1075 x1453 (uninterp_frac (* x1744 x334) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1744 x334) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1140 x147 (uninterp_frac (* x1744 x334) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1744 x334) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1171 x1671 (uninterp_frac (* x1744 x334) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1744 x334) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1217 x635 (uninterp_frac (* x1744 x334) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1744 x334) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1228 x1 (uninterp_frac (* x1744 x334) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1744 x334) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1320 x221 (uninterp_frac (* x1744 x334) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1744 x334) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x134 8 (uninterp_frac (* x1744 x334) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1744 x334) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1341 x240 (uninterp_frac (* x1744 x334) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1744 x334) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1397 x297 (uninterp_frac (* x1744 x334) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1744 x334) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1450 x447 (uninterp_frac (* x1744 x334) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1744 x334) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1489 x915 (uninterp_frac (* x1744 x334) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1744 x334) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1634 x1506 (uninterp_frac (* x1744 x334) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1744 x334) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1661 x1729 (uninterp_frac (* x1744 x334) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1744 x334) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x167 x1348 (uninterp_frac (* x1744 x334) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1744 x334) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1744 x334 (uninterp_frac (* x1744 x334) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1744 x334) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1866 x579 (uninterp_frac (* x1744 x334) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1744 x334) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1890 x690 (uninterp_frac (* x1744 x334) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1744 x334) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x200 x1310 (uninterp_frac (* x1744 x334) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1744 x334) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x239 8 (uninterp_frac (* x1744 x334) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1744 x334) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x42 x132 (uninterp_frac (* x1744 x334) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1744 x334) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x526 x983 (uninterp_frac (* x1744 x334) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1744 x334) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x591 x717 (uninterp_frac (* x1744 x334) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1744 x334) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x609 x1319 (uninterp_frac (* x1744 x334) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1744 x334) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x691 x1176 (uninterp_frac (* x1744 x334) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1744 x334) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x732 x437 (uninterp_frac (* x1744 x334) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1744 x334) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x910 x1747 (uninterp_frac (* x1744 x334) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (* x1866 x579) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (* x1866 x579) 115792089237316195423570985008687907853269984665640564039457584007913129639936 8 x619 (uninterp_frac (* x1866 x579) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1866 x579) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1075 x1453 (uninterp_frac (* x1866 x579) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1866 x579) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1140 x147 (uninterp_frac (* x1866 x579) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1866 x579) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1171 x1671 (uninterp_frac (* x1866 x579) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1866 x579) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1217 x635 (uninterp_frac (* x1866 x579) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1866 x579) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1228 x1 (uninterp_frac (* x1866 x579) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1866 x579) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1320 x221 (uninterp_frac (* x1866 x579) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1866 x579) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x134 8 (uninterp_frac (* x1866 x579) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1866 x579) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1341 x240 (uninterp_frac (* x1866 x579) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1866 x579) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1397 x297 (uninterp_frac (* x1866 x579) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1866 x579) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1450 x447 (uninterp_frac (* x1866 x579) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1866 x579) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1489 x915 (uninterp_frac (* x1866 x579) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1866 x579) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1634 x1506 (uninterp_frac (* x1866 x579) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1866 x579) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1661 x1729 (uninterp_frac (* x1866 x579) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1866 x579) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x167 x1348 (uninterp_frac (* x1866 x579) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1866 x579) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1744 x334 (uninterp_frac (* x1866 x579) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1866 x579) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1866 x579 (uninterp_frac (* x1866 x579) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1866 x579) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1890 x690 (uninterp_frac (* x1866 x579) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1866 x579) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x200 x1310 (uninterp_frac (* x1866 x579) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1866 x579) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x239 8 (uninterp_frac (* x1866 x579) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1866 x579) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x42 x132 (uninterp_frac (* x1866 x579) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1866 x579) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x526 x983 (uninterp_frac (* x1866 x579) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1866 x579) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x591 x717 (uninterp_frac (* x1866 x579) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1866 x579) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x609 x1319 (uninterp_frac (* x1866 x579) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1866 x579) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x691 x1176 (uninterp_frac (* x1866 x579) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1866 x579) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x732 x437 (uninterp_frac (* x1866 x579) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1866 x579) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x910 x1747 (uninterp_frac (* x1866 x579) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (* x1890 x690) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (* x1890 x690) 115792089237316195423570985008687907853269984665640564039457584007913129639936 8 x619 (uninterp_frac (* x1890 x690) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1890 x690) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1075 x1453 (uninterp_frac (* x1890 x690) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1890 x690) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1140 x147 (uninterp_frac (* x1890 x690) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1890 x690) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1171 x1671 (uninterp_frac (* x1890 x690) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1890 x690) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1217 x635 (uninterp_frac (* x1890 x690) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1890 x690) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1228 x1 (uninterp_frac (* x1890 x690) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1890 x690) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1320 x221 (uninterp_frac (* x1890 x690) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1890 x690) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x134 8 (uninterp_frac (* x1890 x690) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1890 x690) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1341 x240 (uninterp_frac (* x1890 x690) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1890 x690) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1397 x297 (uninterp_frac (* x1890 x690) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1890 x690) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1450 x447 (uninterp_frac (* x1890 x690) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1890 x690) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1489 x915 (uninterp_frac (* x1890 x690) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1890 x690) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1634 x1506 (uninterp_frac (* x1890 x690) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1890 x690) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1661 x1729 (uninterp_frac (* x1890 x690) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1890 x690) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x167 x1348 (uninterp_frac (* x1890 x690) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1890 x690) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1744 x334 (uninterp_frac (* x1890 x690) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1890 x690) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1866 x579 (uninterp_frac (* x1890 x690) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1890 x690) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1890 x690 (uninterp_frac (* x1890 x690) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1890 x690) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x200 x1310 (uninterp_frac (* x1890 x690) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1890 x690) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x239 8 (uninterp_frac (* x1890 x690) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1890 x690) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x42 x132 (uninterp_frac (* x1890 x690) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1890 x690) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x526 x983 (uninterp_frac (* x1890 x690) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1890 x690) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x591 x717 (uninterp_frac (* x1890 x690) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1890 x690) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x609 x1319 (uninterp_frac (* x1890 x690) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1890 x690) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x691 x1176 (uninterp_frac (* x1890 x690) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1890 x690) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x732 x437 (uninterp_frac (* x1890 x690) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1890 x690) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x910 x1747 (uninterp_frac (* x1890 x690) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (* x200 x1310) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (* x200 x1310) 115792089237316195423570985008687907853269984665640564039457584007913129639936 8 x619 (uninterp_frac (* x200 x1310) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x200 x1310) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1075 x1453 (uninterp_frac (* x200 x1310) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x200 x1310) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1140 x147 (uninterp_frac (* x200 x1310) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x200 x1310) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1171 x1671 (uninterp_frac (* x200 x1310) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x200 x1310) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1217 x635 (uninterp_frac (* x200 x1310) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x200 x1310) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1228 x1 (uninterp_frac (* x200 x1310) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x200 x1310) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1320 x221 (uninterp_frac (* x200 x1310) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x200 x1310) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x134 8 (uninterp_frac (* x200 x1310) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x200 x1310) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1341 x240 (uninterp_frac (* x200 x1310) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x200 x1310) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1397 x297 (uninterp_frac (* x200 x1310) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x200 x1310) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1450 x447 (uninterp_frac (* x200 x1310) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x200 x1310) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1489 x915 (uninterp_frac (* x200 x1310) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x200 x1310) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1634 x1506 (uninterp_frac (* x200 x1310) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x200 x1310) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1661 x1729 (uninterp_frac (* x200 x1310) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x200 x1310) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x167 x1348 (uninterp_frac (* x200 x1310) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x200 x1310) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1744 x334 (uninterp_frac (* x200 x1310) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x200 x1310) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1866 x579 (uninterp_frac (* x200 x1310) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x200 x1310) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1890 x690 (uninterp_frac (* x200 x1310) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x200 x1310) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x200 x1310 (uninterp_frac (* x200 x1310) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x200 x1310) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x239 8 (uninterp_frac (* x200 x1310) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x200 x1310) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x42 x132 (uninterp_frac (* x200 x1310) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x200 x1310) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x526 x983 (uninterp_frac (* x200 x1310) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x200 x1310) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x591 x717 (uninterp_frac (* x200 x1310) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x200 x1310) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x609 x1319 (uninterp_frac (* x200 x1310) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x200 x1310) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x691 x1176 (uninterp_frac (* x200 x1310) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x200 x1310) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x732 x437 (uninterp_frac (* x200 x1310) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x200 x1310) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x910 x1747 (uninterp_frac (* x200 x1310) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (* x239 8) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (* x239 8) 115792089237316195423570985008687907853269984665640564039457584007913129639936 8 x619 (uninterp_frac (* x239 8) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x239 8) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1075 x1453 (uninterp_frac (* x239 8) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x239 8) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1140 x147 (uninterp_frac (* x239 8) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x239 8) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1171 x1671 (uninterp_frac (* x239 8) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x239 8) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1217 x635 (uninterp_frac (* x239 8) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x239 8) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1228 x1 (uninterp_frac (* x239 8) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x239 8) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1320 x221 (uninterp_frac (* x239 8) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x239 8) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x134 8 (uninterp_frac (* x239 8) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x239 8) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1341 x240 (uninterp_frac (* x239 8) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x239 8) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1397 x297 (uninterp_frac (* x239 8) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x239 8) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1450 x447 (uninterp_frac (* x239 8) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x239 8) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1489 x915 (uninterp_frac (* x239 8) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x239 8) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1634 x1506 (uninterp_frac (* x239 8) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x239 8) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1661 x1729 (uninterp_frac (* x239 8) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x239 8) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x167 x1348 (uninterp_frac (* x239 8) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x239 8) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1744 x334 (uninterp_frac (* x239 8) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x239 8) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1866 x579 (uninterp_frac (* x239 8) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x239 8) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1890 x690 (uninterp_frac (* x239 8) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x239 8) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x200 x1310 (uninterp_frac (* x239 8) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x239 8) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x239 8 (uninterp_frac (* x239 8) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x239 8) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x42 x132 (uninterp_frac (* x239 8) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x239 8) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x526 x983 (uninterp_frac (* x239 8) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x239 8) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x591 x717 (uninterp_frac (* x239 8) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x239 8) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x609 x1319 (uninterp_frac (* x239 8) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x239 8) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x691 x1176 (uninterp_frac (* x239 8) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x239 8) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x732 x437 (uninterp_frac (* x239 8) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x239 8) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x910 x1747 (uninterp_frac (* x239 8) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (* x42 x132) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (* x42 x132) 115792089237316195423570985008687907853269984665640564039457584007913129639936 8 x619 (uninterp_frac (* x42 x132) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x42 x132) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1075 x1453 (uninterp_frac (* x42 x132) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x42 x132) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1140 x147 (uninterp_frac (* x42 x132) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x42 x132) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1171 x1671 (uninterp_frac (* x42 x132) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x42 x132) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1217 x635 (uninterp_frac (* x42 x132) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x42 x132) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1228 x1 (uninterp_frac (* x42 x132) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x42 x132) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1320 x221 (uninterp_frac (* x42 x132) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x42 x132) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x134 8 (uninterp_frac (* x42 x132) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x42 x132) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1341 x240 (uninterp_frac (* x42 x132) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x42 x132) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1397 x297 (uninterp_frac (* x42 x132) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x42 x132) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1450 x447 (uninterp_frac (* x42 x132) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x42 x132) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1489 x915 (uninterp_frac (* x42 x132) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x42 x132) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1634 x1506 (uninterp_frac (* x42 x132) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x42 x132) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1661 x1729 (uninterp_frac (* x42 x132) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x42 x132) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x167 x1348 (uninterp_frac (* x42 x132) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x42 x132) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1744 x334 (uninterp_frac (* x42 x132) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x42 x132) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1866 x579 (uninterp_frac (* x42 x132) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x42 x132) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1890 x690 (uninterp_frac (* x42 x132) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x42 x132) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x200 x1310 (uninterp_frac (* x42 x132) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x42 x132) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x239 8 (uninterp_frac (* x42 x132) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x42 x132) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x42 x132 (uninterp_frac (* x42 x132) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x42 x132) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x526 x983 (uninterp_frac (* x42 x132) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x42 x132) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x591 x717 (uninterp_frac (* x42 x132) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x42 x132) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x609 x1319 (uninterp_frac (* x42 x132) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x42 x132) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x691 x1176 (uninterp_frac (* x42 x132) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x42 x132) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x732 x437 (uninterp_frac (* x42 x132) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x42 x132) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x910 x1747 (uninterp_frac (* x42 x132) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (* x526 x983) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (* x526 x983) 115792089237316195423570985008687907853269984665640564039457584007913129639936 8 x619 (uninterp_frac (* x526 x983) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x526 x983) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1075 x1453 (uninterp_frac (* x526 x983) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x526 x983) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1140 x147 (uninterp_frac (* x526 x983) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x526 x983) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1171 x1671 (uninterp_frac (* x526 x983) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x526 x983) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1217 x635 (uninterp_frac (* x526 x983) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x526 x983) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1228 x1 (uninterp_frac (* x526 x983) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x526 x983) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1320 x221 (uninterp_frac (* x526 x983) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x526 x983) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x134 8 (uninterp_frac (* x526 x983) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x526 x983) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1341 x240 (uninterp_frac (* x526 x983) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x526 x983) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1397 x297 (uninterp_frac (* x526 x983) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x526 x983) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1450 x447 (uninterp_frac (* x526 x983) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x526 x983) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1489 x915 (uninterp_frac (* x526 x983) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x526 x983) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1634 x1506 (uninterp_frac (* x526 x983) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x526 x983) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1661 x1729 (uninterp_frac (* x526 x983) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x526 x983) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x167 x1348 (uninterp_frac (* x526 x983) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x526 x983) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1744 x334 (uninterp_frac (* x526 x983) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x526 x983) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1866 x579 (uninterp_frac (* x526 x983) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x526 x983) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1890 x690 (uninterp_frac (* x526 x983) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x526 x983) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x200 x1310 (uninterp_frac (* x526 x983) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x526 x983) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x239 8 (uninterp_frac (* x526 x983) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x526 x983) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x42 x132 (uninterp_frac (* x526 x983) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x526 x983) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x526 x983 (uninterp_frac (* x526 x983) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x526 x983) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x591 x717 (uninterp_frac (* x526 x983) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x526 x983) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x609 x1319 (uninterp_frac (* x526 x983) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x526 x983) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x691 x1176 (uninterp_frac (* x526 x983) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x526 x983) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x732 x437 (uninterp_frac (* x526 x983) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x526 x983) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x910 x1747 (uninterp_frac (* x526 x983) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (* x591 x717) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (* x591 x717) 115792089237316195423570985008687907853269984665640564039457584007913129639936 8 x619 (uninterp_frac (* x591 x717) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x591 x717) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1075 x1453 (uninterp_frac (* x591 x717) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x591 x717) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1140 x147 (uninterp_frac (* x591 x717) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x591 x717) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1171 x1671 (uninterp_frac (* x591 x717) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x591 x717) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1217 x635 (uninterp_frac (* x591 x717) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x591 x717) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1228 x1 (uninterp_frac (* x591 x717) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x591 x717) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1320 x221 (uninterp_frac (* x591 x717) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x591 x717) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x134 8 (uninterp_frac (* x591 x717) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x591 x717) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1341 x240 (uninterp_frac (* x591 x717) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x591 x717) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1397 x297 (uninterp_frac (* x591 x717) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x591 x717) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1450 x447 (uninterp_frac (* x591 x717) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x591 x717) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1489 x915 (uninterp_frac (* x591 x717) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x591 x717) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1634 x1506 (uninterp_frac (* x591 x717) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x591 x717) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1661 x1729 (uninterp_frac (* x591 x717) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x591 x717) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x167 x1348 (uninterp_frac (* x591 x717) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x591 x717) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1744 x334 (uninterp_frac (* x591 x717) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x591 x717) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1866 x579 (uninterp_frac (* x591 x717) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x591 x717) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1890 x690 (uninterp_frac (* x591 x717) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x591 x717) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x200 x1310 (uninterp_frac (* x591 x717) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x591 x717) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x239 8 (uninterp_frac (* x591 x717) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x591 x717) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x42 x132 (uninterp_frac (* x591 x717) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x591 x717) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x526 x983 (uninterp_frac (* x591 x717) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x591 x717) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x591 x717 (uninterp_frac (* x591 x717) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x591 x717) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x609 x1319 (uninterp_frac (* x591 x717) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x591 x717) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x691 x1176 (uninterp_frac (* x591 x717) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x591 x717) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x732 x437 (uninterp_frac (* x591 x717) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x591 x717) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x910 x1747 (uninterp_frac (* x591 x717) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (* x609 x1319) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (* x609 x1319) 115792089237316195423570985008687907853269984665640564039457584007913129639936 8 x619 (uninterp_frac (* x609 x1319) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x609 x1319) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1075 x1453 (uninterp_frac (* x609 x1319) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x609 x1319) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1140 x147 (uninterp_frac (* x609 x1319) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x609 x1319) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1171 x1671 (uninterp_frac (* x609 x1319) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x609 x1319) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1217 x635 (uninterp_frac (* x609 x1319) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x609 x1319) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1228 x1 (uninterp_frac (* x609 x1319) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x609 x1319) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1320 x221 (uninterp_frac (* x609 x1319) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x609 x1319) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x134 8 (uninterp_frac (* x609 x1319) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x609 x1319) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1341 x240 (uninterp_frac (* x609 x1319) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x609 x1319) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1397 x297 (uninterp_frac (* x609 x1319) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x609 x1319) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1450 x447 (uninterp_frac (* x609 x1319) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x609 x1319) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1489 x915 (uninterp_frac (* x609 x1319) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x609 x1319) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1634 x1506 (uninterp_frac (* x609 x1319) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x609 x1319) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1661 x1729 (uninterp_frac (* x609 x1319) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x609 x1319) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x167 x1348 (uninterp_frac (* x609 x1319) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x609 x1319) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1744 x334 (uninterp_frac (* x609 x1319) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x609 x1319) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1866 x579 (uninterp_frac (* x609 x1319) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x609 x1319) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1890 x690 (uninterp_frac (* x609 x1319) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x609 x1319) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x200 x1310 (uninterp_frac (* x609 x1319) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x609 x1319) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x239 8 (uninterp_frac (* x609 x1319) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x609 x1319) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x42 x132 (uninterp_frac (* x609 x1319) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x609 x1319) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x526 x983 (uninterp_frac (* x609 x1319) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x609 x1319) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x591 x717 (uninterp_frac (* x609 x1319) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x609 x1319) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x609 x1319 (uninterp_frac (* x609 x1319) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x609 x1319) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x691 x1176 (uninterp_frac (* x609 x1319) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x609 x1319) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x732 x437 (uninterp_frac (* x609 x1319) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x609 x1319) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x910 x1747 (uninterp_frac (* x609 x1319) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (* x691 x1176) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (* x691 x1176) 115792089237316195423570985008687907853269984665640564039457584007913129639936 8 x619 (uninterp_frac (* x691 x1176) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x691 x1176) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1075 x1453 (uninterp_frac (* x691 x1176) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x691 x1176) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1140 x147 (uninterp_frac (* x691 x1176) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x691 x1176) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1171 x1671 (uninterp_frac (* x691 x1176) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x691 x1176) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1217 x635 (uninterp_frac (* x691 x1176) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x691 x1176) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1228 x1 (uninterp_frac (* x691 x1176) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x691 x1176) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1320 x221 (uninterp_frac (* x691 x1176) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x691 x1176) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x134 8 (uninterp_frac (* x691 x1176) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x691 x1176) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1341 x240 (uninterp_frac (* x691 x1176) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x691 x1176) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1397 x297 (uninterp_frac (* x691 x1176) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x691 x1176) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1450 x447 (uninterp_frac (* x691 x1176) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x691 x1176) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1489 x915 (uninterp_frac (* x691 x1176) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x691 x1176) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1634 x1506 (uninterp_frac (* x691 x1176) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x691 x1176) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1661 x1729 (uninterp_frac (* x691 x1176) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x691 x1176) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x167 x1348 (uninterp_frac (* x691 x1176) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x691 x1176) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1744 x334 (uninterp_frac (* x691 x1176) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x691 x1176) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1866 x579 (uninterp_frac (* x691 x1176) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x691 x1176) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1890 x690 (uninterp_frac (* x691 x1176) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x691 x1176) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x200 x1310 (uninterp_frac (* x691 x1176) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x691 x1176) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x239 8 (uninterp_frac (* x691 x1176) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x691 x1176) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x42 x132 (uninterp_frac (* x691 x1176) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x691 x1176) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x526 x983 (uninterp_frac (* x691 x1176) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x691 x1176) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x591 x717 (uninterp_frac (* x691 x1176) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x691 x1176) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x609 x1319 (uninterp_frac (* x691 x1176) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x691 x1176) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x691 x1176 (uninterp_frac (* x691 x1176) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x691 x1176) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x732 x437 (uninterp_frac (* x691 x1176) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x691 x1176) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x910 x1747 (uninterp_frac (* x691 x1176) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (* x732 x437) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (* x732 x437) 115792089237316195423570985008687907853269984665640564039457584007913129639936 8 x619 (uninterp_frac (* x732 x437) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x732 x437) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1075 x1453 (uninterp_frac (* x732 x437) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x732 x437) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1140 x147 (uninterp_frac (* x732 x437) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x732 x437) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1171 x1671 (uninterp_frac (* x732 x437) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x732 x437) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1217 x635 (uninterp_frac (* x732 x437) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x732 x437) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1228 x1 (uninterp_frac (* x732 x437) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x732 x437) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1320 x221 (uninterp_frac (* x732 x437) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x732 x437) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x134 8 (uninterp_frac (* x732 x437) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x732 x437) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1341 x240 (uninterp_frac (* x732 x437) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x732 x437) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1397 x297 (uninterp_frac (* x732 x437) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x732 x437) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1450 x447 (uninterp_frac (* x732 x437) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x732 x437) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1489 x915 (uninterp_frac (* x732 x437) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x732 x437) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1634 x1506 (uninterp_frac (* x732 x437) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x732 x437) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1661 x1729 (uninterp_frac (* x732 x437) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x732 x437) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x167 x1348 (uninterp_frac (* x732 x437) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x732 x437) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1744 x334 (uninterp_frac (* x732 x437) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x732 x437) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1866 x579 (uninterp_frac (* x732 x437) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x732 x437) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1890 x690 (uninterp_frac (* x732 x437) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x732 x437) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x200 x1310 (uninterp_frac (* x732 x437) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x732 x437) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x239 8 (uninterp_frac (* x732 x437) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x732 x437) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x42 x132 (uninterp_frac (* x732 x437) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x732 x437) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x526 x983 (uninterp_frac (* x732 x437) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x732 x437) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x591 x717 (uninterp_frac (* x732 x437) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x732 x437) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x609 x1319 (uninterp_frac (* x732 x437) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x732 x437) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x691 x1176 (uninterp_frac (* x732 x437) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x732 x437) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x732 x437 (uninterp_frac (* x732 x437) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x732 x437) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x910 x1747 (uninterp_frac (* x732 x437) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (* x910 x1747) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (* x910 x1747) 115792089237316195423570985008687907853269984665640564039457584007913129639936 8 x619 (uninterp_frac (* x910 x1747) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x910 x1747) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1075 x1453 (uninterp_frac (* x910 x1747) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x910 x1747) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1140 x147 (uninterp_frac (* x910 x1747) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x910 x1747) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1171 x1671 (uninterp_frac (* x910 x1747) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x910 x1747) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1217 x635 (uninterp_frac (* x910 x1747) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x910 x1747) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1228 x1 (uninterp_frac (* x910 x1747) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x910 x1747) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1320 x221 (uninterp_frac (* x910 x1747) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x910 x1747) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x134 8 (uninterp_frac (* x910 x1747) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x910 x1747) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1341 x240 (uninterp_frac (* x910 x1747) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x910 x1747) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1397 x297 (uninterp_frac (* x910 x1747) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x910 x1747) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1450 x447 (uninterp_frac (* x910 x1747) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x910 x1747) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1489 x915 (uninterp_frac (* x910 x1747) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x910 x1747) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1634 x1506 (uninterp_frac (* x910 x1747) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x910 x1747) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1661 x1729 (uninterp_frac (* x910 x1747) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x910 x1747) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x167 x1348 (uninterp_frac (* x910 x1747) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x910 x1747) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1744 x334 (uninterp_frac (* x910 x1747) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x910 x1747) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1866 x579 (uninterp_frac (* x910 x1747) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x910 x1747) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1890 x690 (uninterp_frac (* x910 x1747) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x910 x1747) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x200 x1310 (uninterp_frac (* x910 x1747) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x910 x1747) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x239 8 (uninterp_frac (* x910 x1747) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x910 x1747) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x42 x132 (uninterp_frac (* x910 x1747) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x910 x1747) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x526 x983 (uninterp_frac (* x910 x1747) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x910 x1747) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x591 x717 (uninterp_frac (* x910 x1747) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x910 x1747) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x609 x1319 (uninterp_frac (* x910 x1747) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x910 x1747) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x691 x1176 (uninterp_frac (* x910 x1747) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x910 x1747) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x732 x437 (uninterp_frac (* x910 x1747) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x910 x1747) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x910 x1747 (uninterp_frac (* x910 x1747) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound x1001 10000))
(assert (axiom_frac_zero x1001 10000 8 x619 (uninterp_frac x1001 10000)))
(assert (axiom_frac_zero x1001 10000 x1075 x1453 (uninterp_frac x1001 10000)))
(assert (axiom_frac_zero x1001 10000 x1140 x147 (uninterp_frac x1001 10000)))
(assert (axiom_frac_zero x1001 10000 x1171 x1671 (uninterp_frac x1001 10000)))
(assert (axiom_frac_zero x1001 10000 x1217 x635 (uninterp_frac x1001 10000)))
(assert (axiom_frac_zero x1001 10000 x1228 x1 (uninterp_frac x1001 10000)))
(assert (axiom_frac_zero x1001 10000 x1320 x221 (uninterp_frac x1001 10000)))
(assert (axiom_frac_zero x1001 10000 x134 8 (uninterp_frac x1001 10000)))
(assert (axiom_frac_zero x1001 10000 x1341 x240 (uninterp_frac x1001 10000)))
(assert (axiom_frac_zero x1001 10000 x1397 x297 (uninterp_frac x1001 10000)))
(assert (axiom_frac_zero x1001 10000 x1450 x447 (uninterp_frac x1001 10000)))
(assert (axiom_frac_zero x1001 10000 x1489 x915 (uninterp_frac x1001 10000)))
(assert (axiom_frac_zero x1001 10000 x1634 x1506 (uninterp_frac x1001 10000)))
(assert (axiom_frac_zero x1001 10000 x1661 x1729 (uninterp_frac x1001 10000)))
(assert (axiom_frac_zero x1001 10000 x167 x1348 (uninterp_frac x1001 10000)))
(assert (axiom_frac_zero x1001 10000 x1744 x334 (uninterp_frac x1001 10000)))
(assert (axiom_frac_zero x1001 10000 x1866 x579 (uninterp_frac x1001 10000)))
(assert (axiom_frac_zero x1001 10000 x1890 x690 (uninterp_frac x1001 10000)))
(assert (axiom_frac_zero x1001 10000 x200 x1310 (uninterp_frac x1001 10000)))
(assert (axiom_frac_zero x1001 10000 x239 8 (uninterp_frac x1001 10000)))
(assert (axiom_frac_zero x1001 10000 x42 x132 (uninterp_frac x1001 10000)))
(assert (axiom_frac_zero x1001 10000 x526 x983 (uninterp_frac x1001 10000)))
(assert (axiom_frac_zero x1001 10000 x591 x717 (uninterp_frac x1001 10000)))
(assert (axiom_frac_zero x1001 10000 x609 x1319 (uninterp_frac x1001 10000)))
(assert (axiom_frac_zero x1001 10000 x691 x1176 (uninterp_frac x1001 10000)))
(assert (axiom_frac_zero x1001 10000 x732 x437 (uninterp_frac x1001 10000)))
(assert (axiom_frac_zero x1001 10000 x910 x1747 (uninterp_frac x1001 10000)))
(assert (axiom_frac_bound x1001 x297))
(assert (axiom_frac_zero x1001 x297 8 x619 (uninterp_frac x1001 x297)))
(assert (axiom_frac_zero x1001 x297 x1075 x1453 (uninterp_frac x1001 x297)))
(assert (axiom_frac_zero x1001 x297 x1140 x147 (uninterp_frac x1001 x297)))
(assert (axiom_frac_zero x1001 x297 x1171 x1671 (uninterp_frac x1001 x297)))
(assert (axiom_frac_zero x1001 x297 x1217 x635 (uninterp_frac x1001 x297)))
(assert (axiom_frac_zero x1001 x297 x1228 x1 (uninterp_frac x1001 x297)))
(assert (axiom_frac_zero x1001 x297 x1320 x221 (uninterp_frac x1001 x297)))
(assert (axiom_frac_zero x1001 x297 x134 8 (uninterp_frac x1001 x297)))
(assert (axiom_frac_zero x1001 x297 x1341 x240 (uninterp_frac x1001 x297)))
(assert (axiom_frac_zero x1001 x297 x1397 x297 (uninterp_frac x1001 x297)))
(assert (axiom_frac_zero x1001 x297 x1450 x447 (uninterp_frac x1001 x297)))
(assert (axiom_frac_zero x1001 x297 x1489 x915 (uninterp_frac x1001 x297)))
(assert (axiom_frac_zero x1001 x297 x1634 x1506 (uninterp_frac x1001 x297)))
(assert (axiom_frac_zero x1001 x297 x1661 x1729 (uninterp_frac x1001 x297)))
(assert (axiom_frac_zero x1001 x297 x167 x1348 (uninterp_frac x1001 x297)))
(assert (axiom_frac_zero x1001 x297 x1744 x334 (uninterp_frac x1001 x297)))
(assert (axiom_frac_zero x1001 x297 x1866 x579 (uninterp_frac x1001 x297)))
(assert (axiom_frac_zero x1001 x297 x1890 x690 (uninterp_frac x1001 x297)))
(assert (axiom_frac_zero x1001 x297 x200 x1310 (uninterp_frac x1001 x297)))
(assert (axiom_frac_zero x1001 x297 x239 8 (uninterp_frac x1001 x297)))
(assert (axiom_frac_zero x1001 x297 x42 x132 (uninterp_frac x1001 x297)))
(assert (axiom_frac_zero x1001 x297 x526 x983 (uninterp_frac x1001 x297)))
(assert (axiom_frac_zero x1001 x297 x591 x717 (uninterp_frac x1001 x297)))
(assert (axiom_frac_zero x1001 x297 x609 x1319 (uninterp_frac x1001 x297)))
(assert (axiom_frac_zero x1001 x297 x691 x1176 (uninterp_frac x1001 x297)))
(assert (axiom_frac_zero x1001 x297 x732 x437 (uninterp_frac x1001 x297)))
(assert (axiom_frac_zero x1001 x297 x910 x1747 (uninterp_frac x1001 x297)))
(assert (axiom_frac_bound x1030 (x377 2 x183)))
(assert (axiom_frac_zero x1030 (x377 2 x183) 8 x619 (uninterp_frac x1030 (x377 2 x183))))
(assert (axiom_frac_zero x1030 (x377 2 x183) x1075 x1453 (uninterp_frac x1030 (x377 2 x183))))
(assert (axiom_frac_zero x1030 (x377 2 x183) x1140 x147 (uninterp_frac x1030 (x377 2 x183))))
(assert (axiom_frac_zero x1030 (x377 2 x183) x1171 x1671 (uninterp_frac x1030 (x377 2 x183))))
(assert (axiom_frac_zero x1030 (x377 2 x183) x1217 x635 (uninterp_frac x1030 (x377 2 x183))))
(assert (axiom_frac_zero x1030 (x377 2 x183) x1228 x1 (uninterp_frac x1030 (x377 2 x183))))
(assert (axiom_frac_zero x1030 (x377 2 x183) x1320 x221 (uninterp_frac x1030 (x377 2 x183))))
(assert (axiom_frac_zero x1030 (x377 2 x183) x134 8 (uninterp_frac x1030 (x377 2 x183))))
(assert (axiom_frac_zero x1030 (x377 2 x183) x1341 x240 (uninterp_frac x1030 (x377 2 x183))))
(assert (axiom_frac_zero x1030 (x377 2 x183) x1397 x297 (uninterp_frac x1030 (x377 2 x183))))
(assert (axiom_frac_zero x1030 (x377 2 x183) x1450 x447 (uninterp_frac x1030 (x377 2 x183))))
(assert (axiom_frac_zero x1030 (x377 2 x183) x1489 x915 (uninterp_frac x1030 (x377 2 x183))))
(assert (axiom_frac_zero x1030 (x377 2 x183) x1634 x1506 (uninterp_frac x1030 (x377 2 x183))))
(assert (axiom_frac_zero x1030 (x377 2 x183) x1661 x1729 (uninterp_frac x1030 (x377 2 x183))))
(assert (axiom_frac_zero x1030 (x377 2 x183) x167 x1348 (uninterp_frac x1030 (x377 2 x183))))
(assert (axiom_frac_zero x1030 (x377 2 x183) x1744 x334 (uninterp_frac x1030 (x377 2 x183))))
(assert (axiom_frac_zero x1030 (x377 2 x183) x1866 x579 (uninterp_frac x1030 (x377 2 x183))))
(assert (axiom_frac_zero x1030 (x377 2 x183) x1890 x690 (uninterp_frac x1030 (x377 2 x183))))
(assert (axiom_frac_zero x1030 (x377 2 x183) x200 x1310 (uninterp_frac x1030 (x377 2 x183))))
(assert (axiom_frac_zero x1030 (x377 2 x183) x239 8 (uninterp_frac x1030 (x377 2 x183))))
(assert (axiom_frac_zero x1030 (x377 2 x183) x42 x132 (uninterp_frac x1030 (x377 2 x183))))
(assert (axiom_frac_zero x1030 (x377 2 x183) x526 x983 (uninterp_frac x1030 (x377 2 x183))))
(assert (axiom_frac_zero x1030 (x377 2 x183) x591 x717 (uninterp_frac x1030 (x377 2 x183))))
(assert (axiom_frac_zero x1030 (x377 2 x183) x609 x1319 (uninterp_frac x1030 (x377 2 x183))))
(assert (axiom_frac_zero x1030 (x377 2 x183) x691 x1176 (uninterp_frac x1030 (x377 2 x183))))
(assert (axiom_frac_zero x1030 (x377 2 x183) x732 x437 (uninterp_frac x1030 (x377 2 x183))))
(assert (axiom_frac_zero x1030 (x377 2 x183) x910 x1747 (uninterp_frac x1030 (x377 2 x183))))
(assert (axiom_frac_bound x122 1000000000000000000))
(assert (axiom_frac_zero x122 1000000000000000000 8 x619 (uninterp_frac x122 1000000000000000000)))
(assert (axiom_frac_zero x122 1000000000000000000 x1075 x1453 (uninterp_frac x122 1000000000000000000)))
(assert (axiom_frac_zero x122 1000000000000000000 x1140 x147 (uninterp_frac x122 1000000000000000000)))
(assert (axiom_frac_zero x122 1000000000000000000 x1171 x1671 (uninterp_frac x122 1000000000000000000)))
(assert (axiom_frac_zero x122 1000000000000000000 x1217 x635 (uninterp_frac x122 1000000000000000000)))
(assert (axiom_frac_zero x122 1000000000000000000 x1228 x1 (uninterp_frac x122 1000000000000000000)))
(assert (axiom_frac_zero x122 1000000000000000000 x1320 x221 (uninterp_frac x122 1000000000000000000)))
(assert (axiom_frac_zero x122 1000000000000000000 x134 8 (uninterp_frac x122 1000000000000000000)))
(assert (axiom_frac_zero x122 1000000000000000000 x1341 x240 (uninterp_frac x122 1000000000000000000)))
(assert (axiom_frac_zero x122 1000000000000000000 x1397 x297 (uninterp_frac x122 1000000000000000000)))
(assert (axiom_frac_zero x122 1000000000000000000 x1450 x447 (uninterp_frac x122 1000000000000000000)))
(assert (axiom_frac_zero x122 1000000000000000000 x1489 x915 (uninterp_frac x122 1000000000000000000)))
(assert (axiom_frac_zero x122 1000000000000000000 x1634 x1506 (uninterp_frac x122 1000000000000000000)))
(assert (axiom_frac_zero x122 1000000000000000000 x1661 x1729 (uninterp_frac x122 1000000000000000000)))
(assert (axiom_frac_zero x122 1000000000000000000 x167 x1348 (uninterp_frac x122 1000000000000000000)))
(assert (axiom_frac_zero x122 1000000000000000000 x1744 x334 (uninterp_frac x122 1000000000000000000)))
(assert (axiom_frac_zero x122 1000000000000000000 x1866 x579 (uninterp_frac x122 1000000000000000000)))
(assert (axiom_frac_zero x122 1000000000000000000 x1890 x690 (uninterp_frac x122 1000000000000000000)))
(assert (axiom_frac_zero x122 1000000000000000000 x200 x1310 (uninterp_frac x122 1000000000000000000)))
(assert (axiom_frac_zero x122 1000000000000000000 x239 8 (uninterp_frac x122 1000000000000000000)))
(assert (axiom_frac_zero x122 1000000000000000000 x42 x132 (uninterp_frac x122 1000000000000000000)))
(assert (axiom_frac_zero x122 1000000000000000000 x526 x983 (uninterp_frac x122 1000000000000000000)))
(assert (axiom_frac_zero x122 1000000000000000000 x591 x717 (uninterp_frac x122 1000000000000000000)))
(assert (axiom_frac_zero x122 1000000000000000000 x609 x1319 (uninterp_frac x122 1000000000000000000)))
(assert (axiom_frac_zero x122 1000000000000000000 x691 x1176 (uninterp_frac x122 1000000000000000000)))
(assert (axiom_frac_zero x122 1000000000000000000 x732 x437 (uninterp_frac x122 1000000000000000000)))
(assert (axiom_frac_zero x122 1000000000000000000 x910 x1747 (uninterp_frac x122 1000000000000000000)))
(assert (axiom_frac_bound x122 x1))
(assert (axiom_frac_zero x122 x1 8 x619 (uninterp_frac x122 x1)))
(assert (axiom_frac_zero x122 x1 x1075 x1453 (uninterp_frac x122 x1)))
(assert (axiom_frac_zero x122 x1 x1140 x147 (uninterp_frac x122 x1)))
(assert (axiom_frac_zero x122 x1 x1171 x1671 (uninterp_frac x122 x1)))
(assert (axiom_frac_zero x122 x1 x1217 x635 (uninterp_frac x122 x1)))
(assert (axiom_frac_zero x122 x1 x1228 x1 (uninterp_frac x122 x1)))
(assert (axiom_frac_zero x122 x1 x1320 x221 (uninterp_frac x122 x1)))
(assert (axiom_frac_zero x122 x1 x134 8 (uninterp_frac x122 x1)))
(assert (axiom_frac_zero x122 x1 x1341 x240 (uninterp_frac x122 x1)))
(assert (axiom_frac_zero x122 x1 x1397 x297 (uninterp_frac x122 x1)))
(assert (axiom_frac_zero x122 x1 x1450 x447 (uninterp_frac x122 x1)))
(assert (axiom_frac_zero x122 x1 x1489 x915 (uninterp_frac x122 x1)))
(assert (axiom_frac_zero x122 x1 x1634 x1506 (uninterp_frac x122 x1)))
(assert (axiom_frac_zero x122 x1 x1661 x1729 (uninterp_frac x122 x1)))
(assert (axiom_frac_zero x122 x1 x167 x1348 (uninterp_frac x122 x1)))
(assert (axiom_frac_zero x122 x1 x1744 x334 (uninterp_frac x122 x1)))
(assert (axiom_frac_zero x122 x1 x1866 x579 (uninterp_frac x122 x1)))
(assert (axiom_frac_zero x122 x1 x1890 x690 (uninterp_frac x122 x1)))
(assert (axiom_frac_zero x122 x1 x200 x1310 (uninterp_frac x122 x1)))
(assert (axiom_frac_zero x122 x1 x239 8 (uninterp_frac x122 x1)))
(assert (axiom_frac_zero x122 x1 x42 x132 (uninterp_frac x122 x1)))
(assert (axiom_frac_zero x122 x1 x526 x983 (uninterp_frac x122 x1)))
(assert (axiom_frac_zero x122 x1 x591 x717 (uninterp_frac x122 x1)))
(assert (axiom_frac_zero x122 x1 x609 x1319 (uninterp_frac x122 x1)))
(assert (axiom_frac_zero x122 x1 x691 x1176 (uninterp_frac x122 x1)))
(assert (axiom_frac_zero x122 x1 x732 x437 (uninterp_frac x122 x1)))
(assert (axiom_frac_zero x122 x1 x910 x1747 (uninterp_frac x122 x1)))
(assert (axiom_frac_bound x1279 x437))
(assert (axiom_frac_zero x1279 x437 8 x619 (uninterp_frac x1279 x437)))
(assert (axiom_frac_zero x1279 x437 x1075 x1453 (uninterp_frac x1279 x437)))
(assert (axiom_frac_zero x1279 x437 x1140 x147 (uninterp_frac x1279 x437)))
(assert (axiom_frac_zero x1279 x437 x1171 x1671 (uninterp_frac x1279 x437)))
(assert (axiom_frac_zero x1279 x437 x1217 x635 (uninterp_frac x1279 x437)))
(assert (axiom_frac_zero x1279 x437 x1228 x1 (uninterp_frac x1279 x437)))
(assert (axiom_frac_zero x1279 x437 x1320 x221 (uninterp_frac x1279 x437)))
(assert (axiom_frac_zero x1279 x437 x134 8 (uninterp_frac x1279 x437)))
(assert (axiom_frac_zero x1279 x437 x1341 x240 (uninterp_frac x1279 x437)))
(assert (axiom_frac_zero x1279 x437 x1397 x297 (uninterp_frac x1279 x437)))
(assert (axiom_frac_zero x1279 x437 x1450 x447 (uninterp_frac x1279 x437)))
(assert (axiom_frac_zero x1279 x437 x1489 x915 (uninterp_frac x1279 x437)))
(assert (axiom_frac_zero x1279 x437 x1634 x1506 (uninterp_frac x1279 x437)))
(assert (axiom_frac_zero x1279 x437 x1661 x1729 (uninterp_frac x1279 x437)))
(assert (axiom_frac_zero x1279 x437 x167 x1348 (uninterp_frac x1279 x437)))
(assert (axiom_frac_zero x1279 x437 x1744 x334 (uninterp_frac x1279 x437)))
(assert (axiom_frac_zero x1279 x437 x1866 x579 (uninterp_frac x1279 x437)))
(assert (axiom_frac_zero x1279 x437 x1890 x690 (uninterp_frac x1279 x437)))
(assert (axiom_frac_zero x1279 x437 x200 x1310 (uninterp_frac x1279 x437)))
(assert (axiom_frac_zero x1279 x437 x239 8 (uninterp_frac x1279 x437)))
(assert (axiom_frac_zero x1279 x437 x42 x132 (uninterp_frac x1279 x437)))
(assert (axiom_frac_zero x1279 x437 x526 x983 (uninterp_frac x1279 x437)))
(assert (axiom_frac_zero x1279 x437 x591 x717 (uninterp_frac x1279 x437)))
(assert (axiom_frac_zero x1279 x437 x609 x1319 (uninterp_frac x1279 x437)))
(assert (axiom_frac_zero x1279 x437 x691 x1176 (uninterp_frac x1279 x437)))
(assert (axiom_frac_zero x1279 x437 x732 x437 (uninterp_frac x1279 x437)))
(assert (axiom_frac_zero x1279 x437 x910 x1747 (uninterp_frac x1279 x437)))
(assert (axiom_frac_bound x1289 x1138))
(assert (axiom_frac_zero x1289 x1138 8 x619 (uninterp_frac x1289 x1138)))
(assert (axiom_frac_zero x1289 x1138 x1075 x1453 (uninterp_frac x1289 x1138)))
(assert (axiom_frac_zero x1289 x1138 x1140 x147 (uninterp_frac x1289 x1138)))
(assert (axiom_frac_zero x1289 x1138 x1171 x1671 (uninterp_frac x1289 x1138)))
(assert (axiom_frac_zero x1289 x1138 x1217 x635 (uninterp_frac x1289 x1138)))
(assert (axiom_frac_zero x1289 x1138 x1228 x1 (uninterp_frac x1289 x1138)))
(assert (axiom_frac_zero x1289 x1138 x1320 x221 (uninterp_frac x1289 x1138)))
(assert (axiom_frac_zero x1289 x1138 x134 8 (uninterp_frac x1289 x1138)))
(assert (axiom_frac_zero x1289 x1138 x1341 x240 (uninterp_frac x1289 x1138)))
(assert (axiom_frac_zero x1289 x1138 x1397 x297 (uninterp_frac x1289 x1138)))
(assert (axiom_frac_zero x1289 x1138 x1450 x447 (uninterp_frac x1289 x1138)))
(assert (axiom_frac_zero x1289 x1138 x1489 x915 (uninterp_frac x1289 x1138)))
(assert (axiom_frac_zero x1289 x1138 x1634 x1506 (uninterp_frac x1289 x1138)))
(assert (axiom_frac_zero x1289 x1138 x1661 x1729 (uninterp_frac x1289 x1138)))
(assert (axiom_frac_zero x1289 x1138 x167 x1348 (uninterp_frac x1289 x1138)))
(assert (axiom_frac_zero x1289 x1138 x1744 x334 (uninterp_frac x1289 x1138)))
(assert (axiom_frac_zero x1289 x1138 x1866 x579 (uninterp_frac x1289 x1138)))
(assert (axiom_frac_zero x1289 x1138 x1890 x690 (uninterp_frac x1289 x1138)))
(assert (axiom_frac_zero x1289 x1138 x200 x1310 (uninterp_frac x1289 x1138)))
(assert (axiom_frac_zero x1289 x1138 x239 8 (uninterp_frac x1289 x1138)))
(assert (axiom_frac_zero x1289 x1138 x42 x132 (uninterp_frac x1289 x1138)))
(assert (axiom_frac_zero x1289 x1138 x526 x983 (uninterp_frac x1289 x1138)))
(assert (axiom_frac_zero x1289 x1138 x591 x717 (uninterp_frac x1289 x1138)))
(assert (axiom_frac_zero x1289 x1138 x609 x1319 (uninterp_frac x1289 x1138)))
(assert (axiom_frac_zero x1289 x1138 x691 x1176 (uninterp_frac x1289 x1138)))
(assert (axiom_frac_zero x1289 x1138 x732 x437 (uninterp_frac x1289 x1138)))
(assert (axiom_frac_zero x1289 x1138 x910 x1747 (uninterp_frac x1289 x1138)))
(assert (axiom_frac_bound x1289 x1744))
(assert (axiom_frac_zero x1289 x1744 8 x619 (uninterp_frac x1289 x1744)))
(assert (axiom_frac_zero x1289 x1744 x1075 x1453 (uninterp_frac x1289 x1744)))
(assert (axiom_frac_zero x1289 x1744 x1140 x147 (uninterp_frac x1289 x1744)))
(assert (axiom_frac_zero x1289 x1744 x1171 x1671 (uninterp_frac x1289 x1744)))
(assert (axiom_frac_zero x1289 x1744 x1217 x635 (uninterp_frac x1289 x1744)))
(assert (axiom_frac_zero x1289 x1744 x1228 x1 (uninterp_frac x1289 x1744)))
(assert (axiom_frac_zero x1289 x1744 x1320 x221 (uninterp_frac x1289 x1744)))
(assert (axiom_frac_zero x1289 x1744 x134 8 (uninterp_frac x1289 x1744)))
(assert (axiom_frac_zero x1289 x1744 x1341 x240 (uninterp_frac x1289 x1744)))
(assert (axiom_frac_zero x1289 x1744 x1397 x297 (uninterp_frac x1289 x1744)))
(assert (axiom_frac_zero x1289 x1744 x1450 x447 (uninterp_frac x1289 x1744)))
(assert (axiom_frac_zero x1289 x1744 x1489 x915 (uninterp_frac x1289 x1744)))
(assert (axiom_frac_zero x1289 x1744 x1634 x1506 (uninterp_frac x1289 x1744)))
(assert (axiom_frac_zero x1289 x1744 x1661 x1729 (uninterp_frac x1289 x1744)))
(assert (axiom_frac_zero x1289 x1744 x167 x1348 (uninterp_frac x1289 x1744)))
(assert (axiom_frac_zero x1289 x1744 x1744 x334 (uninterp_frac x1289 x1744)))
(assert (axiom_frac_zero x1289 x1744 x1866 x579 (uninterp_frac x1289 x1744)))
(assert (axiom_frac_zero x1289 x1744 x1890 x690 (uninterp_frac x1289 x1744)))
(assert (axiom_frac_zero x1289 x1744 x200 x1310 (uninterp_frac x1289 x1744)))
(assert (axiom_frac_zero x1289 x1744 x239 8 (uninterp_frac x1289 x1744)))
(assert (axiom_frac_zero x1289 x1744 x42 x132 (uninterp_frac x1289 x1744)))
(assert (axiom_frac_zero x1289 x1744 x526 x983 (uninterp_frac x1289 x1744)))
(assert (axiom_frac_zero x1289 x1744 x591 x717 (uninterp_frac x1289 x1744)))
(assert (axiom_frac_zero x1289 x1744 x609 x1319 (uninterp_frac x1289 x1744)))
(assert (axiom_frac_zero x1289 x1744 x691 x1176 (uninterp_frac x1289 x1744)))
(assert (axiom_frac_zero x1289 x1744 x732 x437 (uninterp_frac x1289 x1744)))
(assert (axiom_frac_zero x1289 x1744 x910 x1747 (uninterp_frac x1289 x1744)))
(assert (axiom_frac_bound x1337 (x377 2 x541)))
(assert (axiom_frac_zero x1337 (x377 2 x541) 8 x619 (uninterp_frac x1337 (x377 2 x541))))
(assert (axiom_frac_zero x1337 (x377 2 x541) x1075 x1453 (uninterp_frac x1337 (x377 2 x541))))
(assert (axiom_frac_zero x1337 (x377 2 x541) x1140 x147 (uninterp_frac x1337 (x377 2 x541))))
(assert (axiom_frac_zero x1337 (x377 2 x541) x1171 x1671 (uninterp_frac x1337 (x377 2 x541))))
(assert (axiom_frac_zero x1337 (x377 2 x541) x1217 x635 (uninterp_frac x1337 (x377 2 x541))))
(assert (axiom_frac_zero x1337 (x377 2 x541) x1228 x1 (uninterp_frac x1337 (x377 2 x541))))
(assert (axiom_frac_zero x1337 (x377 2 x541) x1320 x221 (uninterp_frac x1337 (x377 2 x541))))
(assert (axiom_frac_zero x1337 (x377 2 x541) x134 8 (uninterp_frac x1337 (x377 2 x541))))
(assert (axiom_frac_zero x1337 (x377 2 x541) x1341 x240 (uninterp_frac x1337 (x377 2 x541))))
(assert (axiom_frac_zero x1337 (x377 2 x541) x1397 x297 (uninterp_frac x1337 (x377 2 x541))))
(assert (axiom_frac_zero x1337 (x377 2 x541) x1450 x447 (uninterp_frac x1337 (x377 2 x541))))
(assert (axiom_frac_zero x1337 (x377 2 x541) x1489 x915 (uninterp_frac x1337 (x377 2 x541))))
(assert (axiom_frac_zero x1337 (x377 2 x541) x1634 x1506 (uninterp_frac x1337 (x377 2 x541))))
(assert (axiom_frac_zero x1337 (x377 2 x541) x1661 x1729 (uninterp_frac x1337 (x377 2 x541))))
(assert (axiom_frac_zero x1337 (x377 2 x541) x167 x1348 (uninterp_frac x1337 (x377 2 x541))))
(assert (axiom_frac_zero x1337 (x377 2 x541) x1744 x334 (uninterp_frac x1337 (x377 2 x541))))
(assert (axiom_frac_zero x1337 (x377 2 x541) x1866 x579 (uninterp_frac x1337 (x377 2 x541))))
(assert (axiom_frac_zero x1337 (x377 2 x541) x1890 x690 (uninterp_frac x1337 (x377 2 x541))))
(assert (axiom_frac_zero x1337 (x377 2 x541) x200 x1310 (uninterp_frac x1337 (x377 2 x541))))
(assert (axiom_frac_zero x1337 (x377 2 x541) x239 8 (uninterp_frac x1337 (x377 2 x541))))
(assert (axiom_frac_zero x1337 (x377 2 x541) x42 x132 (uninterp_frac x1337 (x377 2 x541))))
(assert (axiom_frac_zero x1337 (x377 2 x541) x526 x983 (uninterp_frac x1337 (x377 2 x541))))
(assert (axiom_frac_zero x1337 (x377 2 x541) x591 x717 (uninterp_frac x1337 (x377 2 x541))))
(assert (axiom_frac_zero x1337 (x377 2 x541) x609 x1319 (uninterp_frac x1337 (x377 2 x541))))
(assert (axiom_frac_zero x1337 (x377 2 x541) x691 x1176 (uninterp_frac x1337 (x377 2 x541))))
(assert (axiom_frac_zero x1337 (x377 2 x541) x732 x437 (uninterp_frac x1337 (x377 2 x541))))
(assert (axiom_frac_zero x1337 (x377 2 x541) x910 x1747 (uninterp_frac x1337 (x377 2 x541))))
(assert (axiom_frac_bound x1381 x1661))
(assert (axiom_frac_zero x1381 x1661 8 x619 (uninterp_frac x1381 x1661)))
(assert (axiom_frac_zero x1381 x1661 x1075 x1453 (uninterp_frac x1381 x1661)))
(assert (axiom_frac_zero x1381 x1661 x1140 x147 (uninterp_frac x1381 x1661)))
(assert (axiom_frac_zero x1381 x1661 x1171 x1671 (uninterp_frac x1381 x1661)))
(assert (axiom_frac_zero x1381 x1661 x1217 x635 (uninterp_frac x1381 x1661)))
(assert (axiom_frac_zero x1381 x1661 x1228 x1 (uninterp_frac x1381 x1661)))
(assert (axiom_frac_zero x1381 x1661 x1320 x221 (uninterp_frac x1381 x1661)))
(assert (axiom_frac_zero x1381 x1661 x134 8 (uninterp_frac x1381 x1661)))
(assert (axiom_frac_zero x1381 x1661 x1341 x240 (uninterp_frac x1381 x1661)))
(assert (axiom_frac_zero x1381 x1661 x1397 x297 (uninterp_frac x1381 x1661)))
(assert (axiom_frac_zero x1381 x1661 x1450 x447 (uninterp_frac x1381 x1661)))
(assert (axiom_frac_zero x1381 x1661 x1489 x915 (uninterp_frac x1381 x1661)))
(assert (axiom_frac_zero x1381 x1661 x1634 x1506 (uninterp_frac x1381 x1661)))
(assert (axiom_frac_zero x1381 x1661 x1661 x1729 (uninterp_frac x1381 x1661)))
(assert (axiom_frac_zero x1381 x1661 x167 x1348 (uninterp_frac x1381 x1661)))
(assert (axiom_frac_zero x1381 x1661 x1744 x334 (uninterp_frac x1381 x1661)))
(assert (axiom_frac_zero x1381 x1661 x1866 x579 (uninterp_frac x1381 x1661)))
(assert (axiom_frac_zero x1381 x1661 x1890 x690 (uninterp_frac x1381 x1661)))
(assert (axiom_frac_zero x1381 x1661 x200 x1310 (uninterp_frac x1381 x1661)))
(assert (axiom_frac_zero x1381 x1661 x239 8 (uninterp_frac x1381 x1661)))
(assert (axiom_frac_zero x1381 x1661 x42 x132 (uninterp_frac x1381 x1661)))
(assert (axiom_frac_zero x1381 x1661 x526 x983 (uninterp_frac x1381 x1661)))
(assert (axiom_frac_zero x1381 x1661 x591 x717 (uninterp_frac x1381 x1661)))
(assert (axiom_frac_zero x1381 x1661 x609 x1319 (uninterp_frac x1381 x1661)))
(assert (axiom_frac_zero x1381 x1661 x691 x1176 (uninterp_frac x1381 x1661)))
(assert (axiom_frac_zero x1381 x1661 x732 x437 (uninterp_frac x1381 x1661)))
(assert (axiom_frac_zero x1381 x1661 x910 x1747 (uninterp_frac x1381 x1661)))
(assert (axiom_frac_bound x1471 1000000000000000000))
(assert (axiom_frac_zero x1471 1000000000000000000 8 x619 (uninterp_frac x1471 1000000000000000000)))
(assert (axiom_frac_zero x1471 1000000000000000000 x1075 x1453 (uninterp_frac x1471 1000000000000000000)))
(assert (axiom_frac_zero x1471 1000000000000000000 x1140 x147 (uninterp_frac x1471 1000000000000000000)))
(assert (axiom_frac_zero x1471 1000000000000000000 x1171 x1671 (uninterp_frac x1471 1000000000000000000)))
(assert (axiom_frac_zero x1471 1000000000000000000 x1217 x635 (uninterp_frac x1471 1000000000000000000)))
(assert (axiom_frac_zero x1471 1000000000000000000 x1228 x1 (uninterp_frac x1471 1000000000000000000)))
(assert (axiom_frac_zero x1471 1000000000000000000 x1320 x221 (uninterp_frac x1471 1000000000000000000)))
(assert (axiom_frac_zero x1471 1000000000000000000 x134 8 (uninterp_frac x1471 1000000000000000000)))
(assert (axiom_frac_zero x1471 1000000000000000000 x1341 x240 (uninterp_frac x1471 1000000000000000000)))
(assert (axiom_frac_zero x1471 1000000000000000000 x1397 x297 (uninterp_frac x1471 1000000000000000000)))
(assert (axiom_frac_zero x1471 1000000000000000000 x1450 x447 (uninterp_frac x1471 1000000000000000000)))
(assert (axiom_frac_zero x1471 1000000000000000000 x1489 x915 (uninterp_frac x1471 1000000000000000000)))
(assert (axiom_frac_zero x1471 1000000000000000000 x1634 x1506 (uninterp_frac x1471 1000000000000000000)))
(assert (axiom_frac_zero x1471 1000000000000000000 x1661 x1729 (uninterp_frac x1471 1000000000000000000)))
(assert (axiom_frac_zero x1471 1000000000000000000 x167 x1348 (uninterp_frac x1471 1000000000000000000)))
(assert (axiom_frac_zero x1471 1000000000000000000 x1744 x334 (uninterp_frac x1471 1000000000000000000)))
(assert (axiom_frac_zero x1471 1000000000000000000 x1866 x579 (uninterp_frac x1471 1000000000000000000)))
(assert (axiom_frac_zero x1471 1000000000000000000 x1890 x690 (uninterp_frac x1471 1000000000000000000)))
(assert (axiom_frac_zero x1471 1000000000000000000 x200 x1310 (uninterp_frac x1471 1000000000000000000)))
(assert (axiom_frac_zero x1471 1000000000000000000 x239 8 (uninterp_frac x1471 1000000000000000000)))
(assert (axiom_frac_zero x1471 1000000000000000000 x42 x132 (uninterp_frac x1471 1000000000000000000)))
(assert (axiom_frac_zero x1471 1000000000000000000 x526 x983 (uninterp_frac x1471 1000000000000000000)))
(assert (axiom_frac_zero x1471 1000000000000000000 x591 x717 (uninterp_frac x1471 1000000000000000000)))
(assert (axiom_frac_zero x1471 1000000000000000000 x609 x1319 (uninterp_frac x1471 1000000000000000000)))
(assert (axiom_frac_zero x1471 1000000000000000000 x691 x1176 (uninterp_frac x1471 1000000000000000000)))
(assert (axiom_frac_zero x1471 1000000000000000000 x732 x437 (uninterp_frac x1471 1000000000000000000)))
(assert (axiom_frac_zero x1471 1000000000000000000 x910 x1747 (uninterp_frac x1471 1000000000000000000)))
(assert (axiom_frac_bound x1471 x1348))
(assert (axiom_frac_zero x1471 x1348 8 x619 (uninterp_frac x1471 x1348)))
(assert (axiom_frac_zero x1471 x1348 x1075 x1453 (uninterp_frac x1471 x1348)))
(assert (axiom_frac_zero x1471 x1348 x1140 x147 (uninterp_frac x1471 x1348)))
(assert (axiom_frac_zero x1471 x1348 x1171 x1671 (uninterp_frac x1471 x1348)))
(assert (axiom_frac_zero x1471 x1348 x1217 x635 (uninterp_frac x1471 x1348)))
(assert (axiom_frac_zero x1471 x1348 x1228 x1 (uninterp_frac x1471 x1348)))
(assert (axiom_frac_zero x1471 x1348 x1320 x221 (uninterp_frac x1471 x1348)))
(assert (axiom_frac_zero x1471 x1348 x134 8 (uninterp_frac x1471 x1348)))
(assert (axiom_frac_zero x1471 x1348 x1341 x240 (uninterp_frac x1471 x1348)))
(assert (axiom_frac_zero x1471 x1348 x1397 x297 (uninterp_frac x1471 x1348)))
(assert (axiom_frac_zero x1471 x1348 x1450 x447 (uninterp_frac x1471 x1348)))
(assert (axiom_frac_zero x1471 x1348 x1489 x915 (uninterp_frac x1471 x1348)))
(assert (axiom_frac_zero x1471 x1348 x1634 x1506 (uninterp_frac x1471 x1348)))
(assert (axiom_frac_zero x1471 x1348 x1661 x1729 (uninterp_frac x1471 x1348)))
(assert (axiom_frac_zero x1471 x1348 x167 x1348 (uninterp_frac x1471 x1348)))
(assert (axiom_frac_zero x1471 x1348 x1744 x334 (uninterp_frac x1471 x1348)))
(assert (axiom_frac_zero x1471 x1348 x1866 x579 (uninterp_frac x1471 x1348)))
(assert (axiom_frac_zero x1471 x1348 x1890 x690 (uninterp_frac x1471 x1348)))
(assert (axiom_frac_zero x1471 x1348 x200 x1310 (uninterp_frac x1471 x1348)))
(assert (axiom_frac_zero x1471 x1348 x239 8 (uninterp_frac x1471 x1348)))
(assert (axiom_frac_zero x1471 x1348 x42 x132 (uninterp_frac x1471 x1348)))
(assert (axiom_frac_zero x1471 x1348 x526 x983 (uninterp_frac x1471 x1348)))
(assert (axiom_frac_zero x1471 x1348 x591 x717 (uninterp_frac x1471 x1348)))
(assert (axiom_frac_zero x1471 x1348 x609 x1319 (uninterp_frac x1471 x1348)))
(assert (axiom_frac_zero x1471 x1348 x691 x1176 (uninterp_frac x1471 x1348)))
(assert (axiom_frac_zero x1471 x1348 x732 x437 (uninterp_frac x1471 x1348)))
(assert (axiom_frac_zero x1471 x1348 x910 x1747 (uninterp_frac x1471 x1348)))
(assert (axiom_frac_bound x1546 x1217))
(assert (axiom_frac_zero x1546 x1217 8 x619 (uninterp_frac x1546 x1217)))
(assert (axiom_frac_zero x1546 x1217 x1075 x1453 (uninterp_frac x1546 x1217)))
(assert (axiom_frac_zero x1546 x1217 x1140 x147 (uninterp_frac x1546 x1217)))
(assert (axiom_frac_zero x1546 x1217 x1171 x1671 (uninterp_frac x1546 x1217)))
(assert (axiom_frac_zero x1546 x1217 x1217 x635 (uninterp_frac x1546 x1217)))
(assert (axiom_frac_zero x1546 x1217 x1228 x1 (uninterp_frac x1546 x1217)))
(assert (axiom_frac_zero x1546 x1217 x1320 x221 (uninterp_frac x1546 x1217)))
(assert (axiom_frac_zero x1546 x1217 x134 8 (uninterp_frac x1546 x1217)))
(assert (axiom_frac_zero x1546 x1217 x1341 x240 (uninterp_frac x1546 x1217)))
(assert (axiom_frac_zero x1546 x1217 x1397 x297 (uninterp_frac x1546 x1217)))
(assert (axiom_frac_zero x1546 x1217 x1450 x447 (uninterp_frac x1546 x1217)))
(assert (axiom_frac_zero x1546 x1217 x1489 x915 (uninterp_frac x1546 x1217)))
(assert (axiom_frac_zero x1546 x1217 x1634 x1506 (uninterp_frac x1546 x1217)))
(assert (axiom_frac_zero x1546 x1217 x1661 x1729 (uninterp_frac x1546 x1217)))
(assert (axiom_frac_zero x1546 x1217 x167 x1348 (uninterp_frac x1546 x1217)))
(assert (axiom_frac_zero x1546 x1217 x1744 x334 (uninterp_frac x1546 x1217)))
(assert (axiom_frac_zero x1546 x1217 x1866 x579 (uninterp_frac x1546 x1217)))
(assert (axiom_frac_zero x1546 x1217 x1890 x690 (uninterp_frac x1546 x1217)))
(assert (axiom_frac_zero x1546 x1217 x200 x1310 (uninterp_frac x1546 x1217)))
(assert (axiom_frac_zero x1546 x1217 x239 8 (uninterp_frac x1546 x1217)))
(assert (axiom_frac_zero x1546 x1217 x42 x132 (uninterp_frac x1546 x1217)))
(assert (axiom_frac_zero x1546 x1217 x526 x983 (uninterp_frac x1546 x1217)))
(assert (axiom_frac_zero x1546 x1217 x591 x717 (uninterp_frac x1546 x1217)))
(assert (axiom_frac_zero x1546 x1217 x609 x1319 (uninterp_frac x1546 x1217)))
(assert (axiom_frac_zero x1546 x1217 x691 x1176 (uninterp_frac x1546 x1217)))
(assert (axiom_frac_zero x1546 x1217 x732 x437 (uninterp_frac x1546 x1217)))
(assert (axiom_frac_zero x1546 x1217 x910 x1747 (uninterp_frac x1546 x1217)))
(assert (axiom_frac_bound x1546 x1843))
(assert (axiom_frac_zero x1546 x1843 8 x619 (uninterp_frac x1546 x1843)))
(assert (axiom_frac_zero x1546 x1843 x1075 x1453 (uninterp_frac x1546 x1843)))
(assert (axiom_frac_zero x1546 x1843 x1140 x147 (uninterp_frac x1546 x1843)))
(assert (axiom_frac_zero x1546 x1843 x1171 x1671 (uninterp_frac x1546 x1843)))
(assert (axiom_frac_zero x1546 x1843 x1217 x635 (uninterp_frac x1546 x1843)))
(assert (axiom_frac_zero x1546 x1843 x1228 x1 (uninterp_frac x1546 x1843)))
(assert (axiom_frac_zero x1546 x1843 x1320 x221 (uninterp_frac x1546 x1843)))
(assert (axiom_frac_zero x1546 x1843 x134 8 (uninterp_frac x1546 x1843)))
(assert (axiom_frac_zero x1546 x1843 x1341 x240 (uninterp_frac x1546 x1843)))
(assert (axiom_frac_zero x1546 x1843 x1397 x297 (uninterp_frac x1546 x1843)))
(assert (axiom_frac_zero x1546 x1843 x1450 x447 (uninterp_frac x1546 x1843)))
(assert (axiom_frac_zero x1546 x1843 x1489 x915 (uninterp_frac x1546 x1843)))
(assert (axiom_frac_zero x1546 x1843 x1634 x1506 (uninterp_frac x1546 x1843)))
(assert (axiom_frac_zero x1546 x1843 x1661 x1729 (uninterp_frac x1546 x1843)))
(assert (axiom_frac_zero x1546 x1843 x167 x1348 (uninterp_frac x1546 x1843)))
(assert (axiom_frac_zero x1546 x1843 x1744 x334 (uninterp_frac x1546 x1843)))
(assert (axiom_frac_zero x1546 x1843 x1866 x579 (uninterp_frac x1546 x1843)))
(assert (axiom_frac_zero x1546 x1843 x1890 x690 (uninterp_frac x1546 x1843)))
(assert (axiom_frac_zero x1546 x1843 x200 x1310 (uninterp_frac x1546 x1843)))
(assert (axiom_frac_zero x1546 x1843 x239 8 (uninterp_frac x1546 x1843)))
(assert (axiom_frac_zero x1546 x1843 x42 x132 (uninterp_frac x1546 x1843)))
(assert (axiom_frac_zero x1546 x1843 x526 x983 (uninterp_frac x1546 x1843)))
(assert (axiom_frac_zero x1546 x1843 x591 x717 (uninterp_frac x1546 x1843)))
(assert (axiom_frac_zero x1546 x1843 x609 x1319 (uninterp_frac x1546 x1843)))
(assert (axiom_frac_zero x1546 x1843 x691 x1176 (uninterp_frac x1546 x1843)))
(assert (axiom_frac_zero x1546 x1843 x732 x437 (uninterp_frac x1546 x1843)))
(assert (axiom_frac_zero x1546 x1843 x910 x1747 (uninterp_frac x1546 x1843)))
(assert (axiom_frac_bound x1690 x485))
(assert (axiom_frac_zero x1690 x485 8 x619 (uninterp_frac x1690 x485)))
(assert (axiom_frac_zero x1690 x485 x1075 x1453 (uninterp_frac x1690 x485)))
(assert (axiom_frac_zero x1690 x485 x1140 x147 (uninterp_frac x1690 x485)))
(assert (axiom_frac_zero x1690 x485 x1171 x1671 (uninterp_frac x1690 x485)))
(assert (axiom_frac_zero x1690 x485 x1217 x635 (uninterp_frac x1690 x485)))
(assert (axiom_frac_zero x1690 x485 x1228 x1 (uninterp_frac x1690 x485)))
(assert (axiom_frac_zero x1690 x485 x1320 x221 (uninterp_frac x1690 x485)))
(assert (axiom_frac_zero x1690 x485 x134 8 (uninterp_frac x1690 x485)))
(assert (axiom_frac_zero x1690 x485 x1341 x240 (uninterp_frac x1690 x485)))
(assert (axiom_frac_zero x1690 x485 x1397 x297 (uninterp_frac x1690 x485)))
(assert (axiom_frac_zero x1690 x485 x1450 x447 (uninterp_frac x1690 x485)))
(assert (axiom_frac_zero x1690 x485 x1489 x915 (uninterp_frac x1690 x485)))
(assert (axiom_frac_zero x1690 x485 x1634 x1506 (uninterp_frac x1690 x485)))
(assert (axiom_frac_zero x1690 x485 x1661 x1729 (uninterp_frac x1690 x485)))
(assert (axiom_frac_zero x1690 x485 x167 x1348 (uninterp_frac x1690 x485)))
(assert (axiom_frac_zero x1690 x485 x1744 x334 (uninterp_frac x1690 x485)))
(assert (axiom_frac_zero x1690 x485 x1866 x579 (uninterp_frac x1690 x485)))
(assert (axiom_frac_zero x1690 x485 x1890 x690 (uninterp_frac x1690 x485)))
(assert (axiom_frac_zero x1690 x485 x200 x1310 (uninterp_frac x1690 x485)))
(assert (axiom_frac_zero x1690 x485 x239 8 (uninterp_frac x1690 x485)))
(assert (axiom_frac_zero x1690 x485 x42 x132 (uninterp_frac x1690 x485)))
(assert (axiom_frac_zero x1690 x485 x526 x983 (uninterp_frac x1690 x485)))
(assert (axiom_frac_zero x1690 x485 x591 x717 (uninterp_frac x1690 x485)))
(assert (axiom_frac_zero x1690 x485 x609 x1319 (uninterp_frac x1690 x485)))
(assert (axiom_frac_zero x1690 x485 x691 x1176 (uninterp_frac x1690 x485)))
(assert (axiom_frac_zero x1690 x485 x732 x437 (uninterp_frac x1690 x485)))
(assert (axiom_frac_zero x1690 x485 x910 x1747 (uninterp_frac x1690 x485)))
(assert (axiom_frac_bound x1690 x609))
(assert (axiom_frac_zero x1690 x609 8 x619 (uninterp_frac x1690 x609)))
(assert (axiom_frac_zero x1690 x609 x1075 x1453 (uninterp_frac x1690 x609)))
(assert (axiom_frac_zero x1690 x609 x1140 x147 (uninterp_frac x1690 x609)))
(assert (axiom_frac_zero x1690 x609 x1171 x1671 (uninterp_frac x1690 x609)))
(assert (axiom_frac_zero x1690 x609 x1217 x635 (uninterp_frac x1690 x609)))
(assert (axiom_frac_zero x1690 x609 x1228 x1 (uninterp_frac x1690 x609)))
(assert (axiom_frac_zero x1690 x609 x1320 x221 (uninterp_frac x1690 x609)))
(assert (axiom_frac_zero x1690 x609 x134 8 (uninterp_frac x1690 x609)))
(assert (axiom_frac_zero x1690 x609 x1341 x240 (uninterp_frac x1690 x609)))
(assert (axiom_frac_zero x1690 x609 x1397 x297 (uninterp_frac x1690 x609)))
(assert (axiom_frac_zero x1690 x609 x1450 x447 (uninterp_frac x1690 x609)))
(assert (axiom_frac_zero x1690 x609 x1489 x915 (uninterp_frac x1690 x609)))
(assert (axiom_frac_zero x1690 x609 x1634 x1506 (uninterp_frac x1690 x609)))
(assert (axiom_frac_zero x1690 x609 x1661 x1729 (uninterp_frac x1690 x609)))
(assert (axiom_frac_zero x1690 x609 x167 x1348 (uninterp_frac x1690 x609)))
(assert (axiom_frac_zero x1690 x609 x1744 x334 (uninterp_frac x1690 x609)))
(assert (axiom_frac_zero x1690 x609 x1866 x579 (uninterp_frac x1690 x609)))
(assert (axiom_frac_zero x1690 x609 x1890 x690 (uninterp_frac x1690 x609)))
(assert (axiom_frac_zero x1690 x609 x200 x1310 (uninterp_frac x1690 x609)))
(assert (axiom_frac_zero x1690 x609 x239 8 (uninterp_frac x1690 x609)))
(assert (axiom_frac_zero x1690 x609 x42 x132 (uninterp_frac x1690 x609)))
(assert (axiom_frac_zero x1690 x609 x526 x983 (uninterp_frac x1690 x609)))
(assert (axiom_frac_zero x1690 x609 x591 x717 (uninterp_frac x1690 x609)))
(assert (axiom_frac_zero x1690 x609 x609 x1319 (uninterp_frac x1690 x609)))
(assert (axiom_frac_zero x1690 x609 x691 x1176 (uninterp_frac x1690 x609)))
(assert (axiom_frac_zero x1690 x609 x732 x437 (uninterp_frac x1690 x609)))
(assert (axiom_frac_zero x1690 x609 x910 x1747 (uninterp_frac x1690 x609)))
(assert (axiom_frac_bound x170 1000000000000000000))
(assert (axiom_frac_zero x170 1000000000000000000 8 x619 (uninterp_frac x170 1000000000000000000)))
(assert (axiom_frac_zero x170 1000000000000000000 x1075 x1453 (uninterp_frac x170 1000000000000000000)))
(assert (axiom_frac_zero x170 1000000000000000000 x1140 x147 (uninterp_frac x170 1000000000000000000)))
(assert (axiom_frac_zero x170 1000000000000000000 x1171 x1671 (uninterp_frac x170 1000000000000000000)))
(assert (axiom_frac_zero x170 1000000000000000000 x1217 x635 (uninterp_frac x170 1000000000000000000)))
(assert (axiom_frac_zero x170 1000000000000000000 x1228 x1 (uninterp_frac x170 1000000000000000000)))
(assert (axiom_frac_zero x170 1000000000000000000 x1320 x221 (uninterp_frac x170 1000000000000000000)))
(assert (axiom_frac_zero x170 1000000000000000000 x134 8 (uninterp_frac x170 1000000000000000000)))
(assert (axiom_frac_zero x170 1000000000000000000 x1341 x240 (uninterp_frac x170 1000000000000000000)))
(assert (axiom_frac_zero x170 1000000000000000000 x1397 x297 (uninterp_frac x170 1000000000000000000)))
(assert (axiom_frac_zero x170 1000000000000000000 x1450 x447 (uninterp_frac x170 1000000000000000000)))
(assert (axiom_frac_zero x170 1000000000000000000 x1489 x915 (uninterp_frac x170 1000000000000000000)))
(assert (axiom_frac_zero x170 1000000000000000000 x1634 x1506 (uninterp_frac x170 1000000000000000000)))
(assert (axiom_frac_zero x170 1000000000000000000 x1661 x1729 (uninterp_frac x170 1000000000000000000)))
(assert (axiom_frac_zero x170 1000000000000000000 x167 x1348 (uninterp_frac x170 1000000000000000000)))
(assert (axiom_frac_zero x170 1000000000000000000 x1744 x334 (uninterp_frac x170 1000000000000000000)))
(assert (axiom_frac_zero x170 1000000000000000000 x1866 x579 (uninterp_frac x170 1000000000000000000)))
(assert (axiom_frac_zero x170 1000000000000000000 x1890 x690 (uninterp_frac x170 1000000000000000000)))
(assert (axiom_frac_zero x170 1000000000000000000 x200 x1310 (uninterp_frac x170 1000000000000000000)))
(assert (axiom_frac_zero x170 1000000000000000000 x239 8 (uninterp_frac x170 1000000000000000000)))
(assert (axiom_frac_zero x170 1000000000000000000 x42 x132 (uninterp_frac x170 1000000000000000000)))
(assert (axiom_frac_zero x170 1000000000000000000 x526 x983 (uninterp_frac x170 1000000000000000000)))
(assert (axiom_frac_zero x170 1000000000000000000 x591 x717 (uninterp_frac x170 1000000000000000000)))
(assert (axiom_frac_zero x170 1000000000000000000 x609 x1319 (uninterp_frac x170 1000000000000000000)))
(assert (axiom_frac_zero x170 1000000000000000000 x691 x1176 (uninterp_frac x170 1000000000000000000)))
(assert (axiom_frac_zero x170 1000000000000000000 x732 x437 (uninterp_frac x170 1000000000000000000)))
(assert (axiom_frac_zero x170 1000000000000000000 x910 x1747 (uninterp_frac x170 1000000000000000000)))
(assert (axiom_frac_bound x170 x132))
(assert (axiom_frac_zero x170 x132 8 x619 (uninterp_frac x170 x132)))
(assert (axiom_frac_zero x170 x132 x1075 x1453 (uninterp_frac x170 x132)))
(assert (axiom_frac_zero x170 x132 x1140 x147 (uninterp_frac x170 x132)))
(assert (axiom_frac_zero x170 x132 x1171 x1671 (uninterp_frac x170 x132)))
(assert (axiom_frac_zero x170 x132 x1217 x635 (uninterp_frac x170 x132)))
(assert (axiom_frac_zero x170 x132 x1228 x1 (uninterp_frac x170 x132)))
(assert (axiom_frac_zero x170 x132 x1320 x221 (uninterp_frac x170 x132)))
(assert (axiom_frac_zero x170 x132 x134 8 (uninterp_frac x170 x132)))
(assert (axiom_frac_zero x170 x132 x1341 x240 (uninterp_frac x170 x132)))
(assert (axiom_frac_zero x170 x132 x1397 x297 (uninterp_frac x170 x132)))
(assert (axiom_frac_zero x170 x132 x1450 x447 (uninterp_frac x170 x132)))
(assert (axiom_frac_zero x170 x132 x1489 x915 (uninterp_frac x170 x132)))
(assert (axiom_frac_zero x170 x132 x1634 x1506 (uninterp_frac x170 x132)))
(assert (axiom_frac_zero x170 x132 x1661 x1729 (uninterp_frac x170 x132)))
(assert (axiom_frac_zero x170 x132 x167 x1348 (uninterp_frac x170 x132)))
(assert (axiom_frac_zero x170 x132 x1744 x334 (uninterp_frac x170 x132)))
(assert (axiom_frac_zero x170 x132 x1866 x579 (uninterp_frac x170 x132)))
(assert (axiom_frac_zero x170 x132 x1890 x690 (uninterp_frac x170 x132)))
(assert (axiom_frac_zero x170 x132 x200 x1310 (uninterp_frac x170 x132)))
(assert (axiom_frac_zero x170 x132 x239 8 (uninterp_frac x170 x132)))
(assert (axiom_frac_zero x170 x132 x42 x132 (uninterp_frac x170 x132)))
(assert (axiom_frac_zero x170 x132 x526 x983 (uninterp_frac x170 x132)))
(assert (axiom_frac_zero x170 x132 x591 x717 (uninterp_frac x170 x132)))
(assert (axiom_frac_zero x170 x132 x609 x1319 (uninterp_frac x170 x132)))
(assert (axiom_frac_zero x170 x132 x691 x1176 (uninterp_frac x170 x132)))
(assert (axiom_frac_zero x170 x132 x732 x437 (uninterp_frac x170 x132)))
(assert (axiom_frac_zero x170 x132 x910 x1747 (uninterp_frac x170 x132)))
(assert (axiom_frac_bound x1703 x1230))
(assert (axiom_frac_zero x1703 x1230 8 x619 (uninterp_frac x1703 x1230)))
(assert (axiom_frac_zero x1703 x1230 x1075 x1453 (uninterp_frac x1703 x1230)))
(assert (axiom_frac_zero x1703 x1230 x1140 x147 (uninterp_frac x1703 x1230)))
(assert (axiom_frac_zero x1703 x1230 x1171 x1671 (uninterp_frac x1703 x1230)))
(assert (axiom_frac_zero x1703 x1230 x1217 x635 (uninterp_frac x1703 x1230)))
(assert (axiom_frac_zero x1703 x1230 x1228 x1 (uninterp_frac x1703 x1230)))
(assert (axiom_frac_zero x1703 x1230 x1320 x221 (uninterp_frac x1703 x1230)))
(assert (axiom_frac_zero x1703 x1230 x134 8 (uninterp_frac x1703 x1230)))
(assert (axiom_frac_zero x1703 x1230 x1341 x240 (uninterp_frac x1703 x1230)))
(assert (axiom_frac_zero x1703 x1230 x1397 x297 (uninterp_frac x1703 x1230)))
(assert (axiom_frac_zero x1703 x1230 x1450 x447 (uninterp_frac x1703 x1230)))
(assert (axiom_frac_zero x1703 x1230 x1489 x915 (uninterp_frac x1703 x1230)))
(assert (axiom_frac_zero x1703 x1230 x1634 x1506 (uninterp_frac x1703 x1230)))
(assert (axiom_frac_zero x1703 x1230 x1661 x1729 (uninterp_frac x1703 x1230)))
(assert (axiom_frac_zero x1703 x1230 x167 x1348 (uninterp_frac x1703 x1230)))
(assert (axiom_frac_zero x1703 x1230 x1744 x334 (uninterp_frac x1703 x1230)))
(assert (axiom_frac_zero x1703 x1230 x1866 x579 (uninterp_frac x1703 x1230)))
(assert (axiom_frac_zero x1703 x1230 x1890 x690 (uninterp_frac x1703 x1230)))
(assert (axiom_frac_zero x1703 x1230 x200 x1310 (uninterp_frac x1703 x1230)))
(assert (axiom_frac_zero x1703 x1230 x239 8 (uninterp_frac x1703 x1230)))
(assert (axiom_frac_zero x1703 x1230 x42 x132 (uninterp_frac x1703 x1230)))
(assert (axiom_frac_zero x1703 x1230 x526 x983 (uninterp_frac x1703 x1230)))
(assert (axiom_frac_zero x1703 x1230 x591 x717 (uninterp_frac x1703 x1230)))
(assert (axiom_frac_zero x1703 x1230 x609 x1319 (uninterp_frac x1703 x1230)))
(assert (axiom_frac_zero x1703 x1230 x691 x1176 (uninterp_frac x1703 x1230)))
(assert (axiom_frac_zero x1703 x1230 x732 x437 (uninterp_frac x1703 x1230)))
(assert (axiom_frac_zero x1703 x1230 x910 x1747 (uninterp_frac x1703 x1230)))
(assert (axiom_frac_bound x1703 x221))
(assert (axiom_frac_zero x1703 x221 8 x619 (uninterp_frac x1703 x221)))
(assert (axiom_frac_zero x1703 x221 x1075 x1453 (uninterp_frac x1703 x221)))
(assert (axiom_frac_zero x1703 x221 x1140 x147 (uninterp_frac x1703 x221)))
(assert (axiom_frac_zero x1703 x221 x1171 x1671 (uninterp_frac x1703 x221)))
(assert (axiom_frac_zero x1703 x221 x1217 x635 (uninterp_frac x1703 x221)))
(assert (axiom_frac_zero x1703 x221 x1228 x1 (uninterp_frac x1703 x221)))
(assert (axiom_frac_zero x1703 x221 x1320 x221 (uninterp_frac x1703 x221)))
(assert (axiom_frac_zero x1703 x221 x134 8 (uninterp_frac x1703 x221)))
(assert (axiom_frac_zero x1703 x221 x1341 x240 (uninterp_frac x1703 x221)))
(assert (axiom_frac_zero x1703 x221 x1397 x297 (uninterp_frac x1703 x221)))
(assert (axiom_frac_zero x1703 x221 x1450 x447 (uninterp_frac x1703 x221)))
(assert (axiom_frac_zero x1703 x221 x1489 x915 (uninterp_frac x1703 x221)))
(assert (axiom_frac_zero x1703 x221 x1634 x1506 (uninterp_frac x1703 x221)))
(assert (axiom_frac_zero x1703 x221 x1661 x1729 (uninterp_frac x1703 x221)))
(assert (axiom_frac_zero x1703 x221 x167 x1348 (uninterp_frac x1703 x221)))
(assert (axiom_frac_zero x1703 x221 x1744 x334 (uninterp_frac x1703 x221)))
(assert (axiom_frac_zero x1703 x221 x1866 x579 (uninterp_frac x1703 x221)))
(assert (axiom_frac_zero x1703 x221 x1890 x690 (uninterp_frac x1703 x221)))
(assert (axiom_frac_zero x1703 x221 x200 x1310 (uninterp_frac x1703 x221)))
(assert (axiom_frac_zero x1703 x221 x239 8 (uninterp_frac x1703 x221)))
(assert (axiom_frac_zero x1703 x221 x42 x132 (uninterp_frac x1703 x221)))
(assert (axiom_frac_zero x1703 x221 x526 x983 (uninterp_frac x1703 x221)))
(assert (axiom_frac_zero x1703 x221 x591 x717 (uninterp_frac x1703 x221)))
(assert (axiom_frac_zero x1703 x221 x609 x1319 (uninterp_frac x1703 x221)))
(assert (axiom_frac_zero x1703 x221 x691 x1176 (uninterp_frac x1703 x221)))
(assert (axiom_frac_zero x1703 x221 x732 x437 (uninterp_frac x1703 x221)))
(assert (axiom_frac_zero x1703 x221 x910 x1747 (uninterp_frac x1703 x221)))
(assert (axiom_frac_bound x187 1000000000000000000))
(assert (axiom_frac_zero x187 1000000000000000000 8 x619 (uninterp_frac x187 1000000000000000000)))
(assert (axiom_frac_zero x187 1000000000000000000 x1075 x1453 (uninterp_frac x187 1000000000000000000)))
(assert (axiom_frac_zero x187 1000000000000000000 x1140 x147 (uninterp_frac x187 1000000000000000000)))
(assert (axiom_frac_zero x187 1000000000000000000 x1171 x1671 (uninterp_frac x187 1000000000000000000)))
(assert (axiom_frac_zero x187 1000000000000000000 x1217 x635 (uninterp_frac x187 1000000000000000000)))
(assert (axiom_frac_zero x187 1000000000000000000 x1228 x1 (uninterp_frac x187 1000000000000000000)))
(assert (axiom_frac_zero x187 1000000000000000000 x1320 x221 (uninterp_frac x187 1000000000000000000)))
(assert (axiom_frac_zero x187 1000000000000000000 x134 8 (uninterp_frac x187 1000000000000000000)))
(assert (axiom_frac_zero x187 1000000000000000000 x1341 x240 (uninterp_frac x187 1000000000000000000)))
(assert (axiom_frac_zero x187 1000000000000000000 x1397 x297 (uninterp_frac x187 1000000000000000000)))
(assert (axiom_frac_zero x187 1000000000000000000 x1450 x447 (uninterp_frac x187 1000000000000000000)))
(assert (axiom_frac_zero x187 1000000000000000000 x1489 x915 (uninterp_frac x187 1000000000000000000)))
(assert (axiom_frac_zero x187 1000000000000000000 x1634 x1506 (uninterp_frac x187 1000000000000000000)))
(assert (axiom_frac_zero x187 1000000000000000000 x1661 x1729 (uninterp_frac x187 1000000000000000000)))
(assert (axiom_frac_zero x187 1000000000000000000 x167 x1348 (uninterp_frac x187 1000000000000000000)))
(assert (axiom_frac_zero x187 1000000000000000000 x1744 x334 (uninterp_frac x187 1000000000000000000)))
(assert (axiom_frac_zero x187 1000000000000000000 x1866 x579 (uninterp_frac x187 1000000000000000000)))
(assert (axiom_frac_zero x187 1000000000000000000 x1890 x690 (uninterp_frac x187 1000000000000000000)))
(assert (axiom_frac_zero x187 1000000000000000000 x200 x1310 (uninterp_frac x187 1000000000000000000)))
(assert (axiom_frac_zero x187 1000000000000000000 x239 8 (uninterp_frac x187 1000000000000000000)))
(assert (axiom_frac_zero x187 1000000000000000000 x42 x132 (uninterp_frac x187 1000000000000000000)))
(assert (axiom_frac_zero x187 1000000000000000000 x526 x983 (uninterp_frac x187 1000000000000000000)))
(assert (axiom_frac_zero x187 1000000000000000000 x591 x717 (uninterp_frac x187 1000000000000000000)))
(assert (axiom_frac_zero x187 1000000000000000000 x609 x1319 (uninterp_frac x187 1000000000000000000)))
(assert (axiom_frac_zero x187 1000000000000000000 x691 x1176 (uninterp_frac x187 1000000000000000000)))
(assert (axiom_frac_zero x187 1000000000000000000 x732 x437 (uninterp_frac x187 1000000000000000000)))
(assert (axiom_frac_zero x187 1000000000000000000 x910 x1747 (uninterp_frac x187 1000000000000000000)))
(assert (axiom_frac_bound x187 x691))
(assert (axiom_frac_zero x187 x691 8 x619 (uninterp_frac x187 x691)))
(assert (axiom_frac_zero x187 x691 x1075 x1453 (uninterp_frac x187 x691)))
(assert (axiom_frac_zero x187 x691 x1140 x147 (uninterp_frac x187 x691)))
(assert (axiom_frac_zero x187 x691 x1171 x1671 (uninterp_frac x187 x691)))
(assert (axiom_frac_zero x187 x691 x1217 x635 (uninterp_frac x187 x691)))
(assert (axiom_frac_zero x187 x691 x1228 x1 (uninterp_frac x187 x691)))
(assert (axiom_frac_zero x187 x691 x1320 x221 (uninterp_frac x187 x691)))
(assert (axiom_frac_zero x187 x691 x134 8 (uninterp_frac x187 x691)))
(assert (axiom_frac_zero x187 x691 x1341 x240 (uninterp_frac x187 x691)))
(assert (axiom_frac_zero x187 x691 x1397 x297 (uninterp_frac x187 x691)))
(assert (axiom_frac_zero x187 x691 x1450 x447 (uninterp_frac x187 x691)))
(assert (axiom_frac_zero x187 x691 x1489 x915 (uninterp_frac x187 x691)))
(assert (axiom_frac_zero x187 x691 x1634 x1506 (uninterp_frac x187 x691)))
(assert (axiom_frac_zero x187 x691 x1661 x1729 (uninterp_frac x187 x691)))
(assert (axiom_frac_zero x187 x691 x167 x1348 (uninterp_frac x187 x691)))
(assert (axiom_frac_zero x187 x691 x1744 x334 (uninterp_frac x187 x691)))
(assert (axiom_frac_zero x187 x691 x1866 x579 (uninterp_frac x187 x691)))
(assert (axiom_frac_zero x187 x691 x1890 x690 (uninterp_frac x187 x691)))
(assert (axiom_frac_zero x187 x691 x200 x1310 (uninterp_frac x187 x691)))
(assert (axiom_frac_zero x187 x691 x239 8 (uninterp_frac x187 x691)))
(assert (axiom_frac_zero x187 x691 x42 x132 (uninterp_frac x187 x691)))
(assert (axiom_frac_zero x187 x691 x526 x983 (uninterp_frac x187 x691)))
(assert (axiom_frac_zero x187 x691 x591 x717 (uninterp_frac x187 x691)))
(assert (axiom_frac_zero x187 x691 x609 x1319 (uninterp_frac x187 x691)))
(assert (axiom_frac_zero x187 x691 x691 x1176 (uninterp_frac x187 x691)))
(assert (axiom_frac_zero x187 x691 x732 x437 (uninterp_frac x187 x691)))
(assert (axiom_frac_zero x187 x691 x910 x1747 (uninterp_frac x187 x691)))
(assert (axiom_frac_bound x1907 x1634))
(assert (axiom_frac_zero x1907 x1634 8 x619 (uninterp_frac x1907 x1634)))
(assert (axiom_frac_zero x1907 x1634 x1075 x1453 (uninterp_frac x1907 x1634)))
(assert (axiom_frac_zero x1907 x1634 x1140 x147 (uninterp_frac x1907 x1634)))
(assert (axiom_frac_zero x1907 x1634 x1171 x1671 (uninterp_frac x1907 x1634)))
(assert (axiom_frac_zero x1907 x1634 x1217 x635 (uninterp_frac x1907 x1634)))
(assert (axiom_frac_zero x1907 x1634 x1228 x1 (uninterp_frac x1907 x1634)))
(assert (axiom_frac_zero x1907 x1634 x1320 x221 (uninterp_frac x1907 x1634)))
(assert (axiom_frac_zero x1907 x1634 x134 8 (uninterp_frac x1907 x1634)))
(assert (axiom_frac_zero x1907 x1634 x1341 x240 (uninterp_frac x1907 x1634)))
(assert (axiom_frac_zero x1907 x1634 x1397 x297 (uninterp_frac x1907 x1634)))
(assert (axiom_frac_zero x1907 x1634 x1450 x447 (uninterp_frac x1907 x1634)))
(assert (axiom_frac_zero x1907 x1634 x1489 x915 (uninterp_frac x1907 x1634)))
(assert (axiom_frac_zero x1907 x1634 x1634 x1506 (uninterp_frac x1907 x1634)))
(assert (axiom_frac_zero x1907 x1634 x1661 x1729 (uninterp_frac x1907 x1634)))
(assert (axiom_frac_zero x1907 x1634 x167 x1348 (uninterp_frac x1907 x1634)))
(assert (axiom_frac_zero x1907 x1634 x1744 x334 (uninterp_frac x1907 x1634)))
(assert (axiom_frac_zero x1907 x1634 x1866 x579 (uninterp_frac x1907 x1634)))
(assert (axiom_frac_zero x1907 x1634 x1890 x690 (uninterp_frac x1907 x1634)))
(assert (axiom_frac_zero x1907 x1634 x200 x1310 (uninterp_frac x1907 x1634)))
(assert (axiom_frac_zero x1907 x1634 x239 8 (uninterp_frac x1907 x1634)))
(assert (axiom_frac_zero x1907 x1634 x42 x132 (uninterp_frac x1907 x1634)))
(assert (axiom_frac_zero x1907 x1634 x526 x983 (uninterp_frac x1907 x1634)))
(assert (axiom_frac_zero x1907 x1634 x591 x717 (uninterp_frac x1907 x1634)))
(assert (axiom_frac_zero x1907 x1634 x609 x1319 (uninterp_frac x1907 x1634)))
(assert (axiom_frac_zero x1907 x1634 x691 x1176 (uninterp_frac x1907 x1634)))
(assert (axiom_frac_zero x1907 x1634 x732 x437 (uninterp_frac x1907 x1634)))
(assert (axiom_frac_zero x1907 x1634 x910 x1747 (uninterp_frac x1907 x1634)))
(assert (axiom_frac_bound x247 1000000000000000000))
(assert (axiom_frac_zero x247 1000000000000000000 8 x619 (uninterp_frac x247 1000000000000000000)))
(assert (axiom_frac_zero x247 1000000000000000000 x1075 x1453 (uninterp_frac x247 1000000000000000000)))
(assert (axiom_frac_zero x247 1000000000000000000 x1140 x147 (uninterp_frac x247 1000000000000000000)))
(assert (axiom_frac_zero x247 1000000000000000000 x1171 x1671 (uninterp_frac x247 1000000000000000000)))
(assert (axiom_frac_zero x247 1000000000000000000 x1217 x635 (uninterp_frac x247 1000000000000000000)))
(assert (axiom_frac_zero x247 1000000000000000000 x1228 x1 (uninterp_frac x247 1000000000000000000)))
(assert (axiom_frac_zero x247 1000000000000000000 x1320 x221 (uninterp_frac x247 1000000000000000000)))
(assert (axiom_frac_zero x247 1000000000000000000 x134 8 (uninterp_frac x247 1000000000000000000)))
(assert (axiom_frac_zero x247 1000000000000000000 x1341 x240 (uninterp_frac x247 1000000000000000000)))
(assert (axiom_frac_zero x247 1000000000000000000 x1397 x297 (uninterp_frac x247 1000000000000000000)))
(assert (axiom_frac_zero x247 1000000000000000000 x1450 x447 (uninterp_frac x247 1000000000000000000)))
(assert (axiom_frac_zero x247 1000000000000000000 x1489 x915 (uninterp_frac x247 1000000000000000000)))
(assert (axiom_frac_zero x247 1000000000000000000 x1634 x1506 (uninterp_frac x247 1000000000000000000)))
(assert (axiom_frac_zero x247 1000000000000000000 x1661 x1729 (uninterp_frac x247 1000000000000000000)))
(assert (axiom_frac_zero x247 1000000000000000000 x167 x1348 (uninterp_frac x247 1000000000000000000)))
(assert (axiom_frac_zero x247 1000000000000000000 x1744 x334 (uninterp_frac x247 1000000000000000000)))
(assert (axiom_frac_zero x247 1000000000000000000 x1866 x579 (uninterp_frac x247 1000000000000000000)))
(assert (axiom_frac_zero x247 1000000000000000000 x1890 x690 (uninterp_frac x247 1000000000000000000)))
(assert (axiom_frac_zero x247 1000000000000000000 x200 x1310 (uninterp_frac x247 1000000000000000000)))
(assert (axiom_frac_zero x247 1000000000000000000 x239 8 (uninterp_frac x247 1000000000000000000)))
(assert (axiom_frac_zero x247 1000000000000000000 x42 x132 (uninterp_frac x247 1000000000000000000)))
(assert (axiom_frac_zero x247 1000000000000000000 x526 x983 (uninterp_frac x247 1000000000000000000)))
(assert (axiom_frac_zero x247 1000000000000000000 x591 x717 (uninterp_frac x247 1000000000000000000)))
(assert (axiom_frac_zero x247 1000000000000000000 x609 x1319 (uninterp_frac x247 1000000000000000000)))
(assert (axiom_frac_zero x247 1000000000000000000 x691 x1176 (uninterp_frac x247 1000000000000000000)))
(assert (axiom_frac_zero x247 1000000000000000000 x732 x437 (uninterp_frac x247 1000000000000000000)))
(assert (axiom_frac_zero x247 1000000000000000000 x910 x1747 (uninterp_frac x247 1000000000000000000)))
(assert (axiom_frac_bound x247 x1866))
(assert (axiom_frac_zero x247 x1866 8 x619 (uninterp_frac x247 x1866)))
(assert (axiom_frac_zero x247 x1866 x1075 x1453 (uninterp_frac x247 x1866)))
(assert (axiom_frac_zero x247 x1866 x1140 x147 (uninterp_frac x247 x1866)))
(assert (axiom_frac_zero x247 x1866 x1171 x1671 (uninterp_frac x247 x1866)))
(assert (axiom_frac_zero x247 x1866 x1217 x635 (uninterp_frac x247 x1866)))
(assert (axiom_frac_zero x247 x1866 x1228 x1 (uninterp_frac x247 x1866)))
(assert (axiom_frac_zero x247 x1866 x1320 x221 (uninterp_frac x247 x1866)))
(assert (axiom_frac_zero x247 x1866 x134 8 (uninterp_frac x247 x1866)))
(assert (axiom_frac_zero x247 x1866 x1341 x240 (uninterp_frac x247 x1866)))
(assert (axiom_frac_zero x247 x1866 x1397 x297 (uninterp_frac x247 x1866)))
(assert (axiom_frac_zero x247 x1866 x1450 x447 (uninterp_frac x247 x1866)))
(assert (axiom_frac_zero x247 x1866 x1489 x915 (uninterp_frac x247 x1866)))
(assert (axiom_frac_zero x247 x1866 x1634 x1506 (uninterp_frac x247 x1866)))
(assert (axiom_frac_zero x247 x1866 x1661 x1729 (uninterp_frac x247 x1866)))
(assert (axiom_frac_zero x247 x1866 x167 x1348 (uninterp_frac x247 x1866)))
(assert (axiom_frac_zero x247 x1866 x1744 x334 (uninterp_frac x247 x1866)))
(assert (axiom_frac_zero x247 x1866 x1866 x579 (uninterp_frac x247 x1866)))
(assert (axiom_frac_zero x247 x1866 x1890 x690 (uninterp_frac x247 x1866)))
(assert (axiom_frac_zero x247 x1866 x200 x1310 (uninterp_frac x247 x1866)))
(assert (axiom_frac_zero x247 x1866 x239 8 (uninterp_frac x247 x1866)))
(assert (axiom_frac_zero x247 x1866 x42 x132 (uninterp_frac x247 x1866)))
(assert (axiom_frac_zero x247 x1866 x526 x983 (uninterp_frac x247 x1866)))
(assert (axiom_frac_zero x247 x1866 x591 x717 (uninterp_frac x247 x1866)))
(assert (axiom_frac_zero x247 x1866 x609 x1319 (uninterp_frac x247 x1866)))
(assert (axiom_frac_zero x247 x1866 x691 x1176 (uninterp_frac x247 x1866)))
(assert (axiom_frac_zero x247 x1866 x732 x437 (uninterp_frac x247 x1866)))
(assert (axiom_frac_zero x247 x1866 x910 x1747 (uninterp_frac x247 x1866)))
(assert (axiom_frac_bound x349 x147))
(assert (axiom_frac_zero x349 x147 8 x619 (uninterp_frac x349 x147)))
(assert (axiom_frac_zero x349 x147 x1075 x1453 (uninterp_frac x349 x147)))
(assert (axiom_frac_zero x349 x147 x1140 x147 (uninterp_frac x349 x147)))
(assert (axiom_frac_zero x349 x147 x1171 x1671 (uninterp_frac x349 x147)))
(assert (axiom_frac_zero x349 x147 x1217 x635 (uninterp_frac x349 x147)))
(assert (axiom_frac_zero x349 x147 x1228 x1 (uninterp_frac x349 x147)))
(assert (axiom_frac_zero x349 x147 x1320 x221 (uninterp_frac x349 x147)))
(assert (axiom_frac_zero x349 x147 x134 8 (uninterp_frac x349 x147)))
(assert (axiom_frac_zero x349 x147 x1341 x240 (uninterp_frac x349 x147)))
(assert (axiom_frac_zero x349 x147 x1397 x297 (uninterp_frac x349 x147)))
(assert (axiom_frac_zero x349 x147 x1450 x447 (uninterp_frac x349 x147)))
(assert (axiom_frac_zero x349 x147 x1489 x915 (uninterp_frac x349 x147)))
(assert (axiom_frac_zero x349 x147 x1634 x1506 (uninterp_frac x349 x147)))
(assert (axiom_frac_zero x349 x147 x1661 x1729 (uninterp_frac x349 x147)))
(assert (axiom_frac_zero x349 x147 x167 x1348 (uninterp_frac x349 x147)))
(assert (axiom_frac_zero x349 x147 x1744 x334 (uninterp_frac x349 x147)))
(assert (axiom_frac_zero x349 x147 x1866 x579 (uninterp_frac x349 x147)))
(assert (axiom_frac_zero x349 x147 x1890 x690 (uninterp_frac x349 x147)))
(assert (axiom_frac_zero x349 x147 x200 x1310 (uninterp_frac x349 x147)))
(assert (axiom_frac_zero x349 x147 x239 8 (uninterp_frac x349 x147)))
(assert (axiom_frac_zero x349 x147 x42 x132 (uninterp_frac x349 x147)))
(assert (axiom_frac_zero x349 x147 x526 x983 (uninterp_frac x349 x147)))
(assert (axiom_frac_zero x349 x147 x591 x717 (uninterp_frac x349 x147)))
(assert (axiom_frac_zero x349 x147 x609 x1319 (uninterp_frac x349 x147)))
(assert (axiom_frac_zero x349 x147 x691 x1176 (uninterp_frac x349 x147)))
(assert (axiom_frac_zero x349 x147 x732 x437 (uninterp_frac x349 x147)))
(assert (axiom_frac_zero x349 x147 x910 x1747 (uninterp_frac x349 x147)))
(assert (axiom_frac_bound x35 x447))
(assert (axiom_frac_zero x35 x447 8 x619 (uninterp_frac x35 x447)))
(assert (axiom_frac_zero x35 x447 x1075 x1453 (uninterp_frac x35 x447)))
(assert (axiom_frac_zero x35 x447 x1140 x147 (uninterp_frac x35 x447)))
(assert (axiom_frac_zero x35 x447 x1171 x1671 (uninterp_frac x35 x447)))
(assert (axiom_frac_zero x35 x447 x1217 x635 (uninterp_frac x35 x447)))
(assert (axiom_frac_zero x35 x447 x1228 x1 (uninterp_frac x35 x447)))
(assert (axiom_frac_zero x35 x447 x1320 x221 (uninterp_frac x35 x447)))
(assert (axiom_frac_zero x35 x447 x134 8 (uninterp_frac x35 x447)))
(assert (axiom_frac_zero x35 x447 x1341 x240 (uninterp_frac x35 x447)))
(assert (axiom_frac_zero x35 x447 x1397 x297 (uninterp_frac x35 x447)))
(assert (axiom_frac_zero x35 x447 x1450 x447 (uninterp_frac x35 x447)))
(assert (axiom_frac_zero x35 x447 x1489 x915 (uninterp_frac x35 x447)))
(assert (axiom_frac_zero x35 x447 x1634 x1506 (uninterp_frac x35 x447)))
(assert (axiom_frac_zero x35 x447 x1661 x1729 (uninterp_frac x35 x447)))
(assert (axiom_frac_zero x35 x447 x167 x1348 (uninterp_frac x35 x447)))
(assert (axiom_frac_zero x35 x447 x1744 x334 (uninterp_frac x35 x447)))
(assert (axiom_frac_zero x35 x447 x1866 x579 (uninterp_frac x35 x447)))
(assert (axiom_frac_zero x35 x447 x1890 x690 (uninterp_frac x35 x447)))
(assert (axiom_frac_zero x35 x447 x200 x1310 (uninterp_frac x35 x447)))
(assert (axiom_frac_zero x35 x447 x239 8 (uninterp_frac x35 x447)))
(assert (axiom_frac_zero x35 x447 x42 x132 (uninterp_frac x35 x447)))
(assert (axiom_frac_zero x35 x447 x526 x983 (uninterp_frac x35 x447)))
(assert (axiom_frac_zero x35 x447 x591 x717 (uninterp_frac x35 x447)))
(assert (axiom_frac_zero x35 x447 x609 x1319 (uninterp_frac x35 x447)))
(assert (axiom_frac_zero x35 x447 x691 x1176 (uninterp_frac x35 x447)))
(assert (axiom_frac_zero x35 x447 x732 x437 (uninterp_frac x35 x447)))
(assert (axiom_frac_zero x35 x447 x910 x1747 (uninterp_frac x35 x447)))
(assert (axiom_frac_bound x351 x480))
(assert (axiom_frac_zero x351 x480 8 x619 (uninterp_frac x351 x480)))
(assert (axiom_frac_zero x351 x480 x1075 x1453 (uninterp_frac x351 x480)))
(assert (axiom_frac_zero x351 x480 x1140 x147 (uninterp_frac x351 x480)))
(assert (axiom_frac_zero x351 x480 x1171 x1671 (uninterp_frac x351 x480)))
(assert (axiom_frac_zero x351 x480 x1217 x635 (uninterp_frac x351 x480)))
(assert (axiom_frac_zero x351 x480 x1228 x1 (uninterp_frac x351 x480)))
(assert (axiom_frac_zero x351 x480 x1320 x221 (uninterp_frac x351 x480)))
(assert (axiom_frac_zero x351 x480 x134 8 (uninterp_frac x351 x480)))
(assert (axiom_frac_zero x351 x480 x1341 x240 (uninterp_frac x351 x480)))
(assert (axiom_frac_zero x351 x480 x1397 x297 (uninterp_frac x351 x480)))
(assert (axiom_frac_zero x351 x480 x1450 x447 (uninterp_frac x351 x480)))
(assert (axiom_frac_zero x351 x480 x1489 x915 (uninterp_frac x351 x480)))
(assert (axiom_frac_zero x351 x480 x1634 x1506 (uninterp_frac x351 x480)))
(assert (axiom_frac_zero x351 x480 x1661 x1729 (uninterp_frac x351 x480)))
(assert (axiom_frac_zero x351 x480 x167 x1348 (uninterp_frac x351 x480)))
(assert (axiom_frac_zero x351 x480 x1744 x334 (uninterp_frac x351 x480)))
(assert (axiom_frac_zero x351 x480 x1866 x579 (uninterp_frac x351 x480)))
(assert (axiom_frac_zero x351 x480 x1890 x690 (uninterp_frac x351 x480)))
(assert (axiom_frac_zero x351 x480 x200 x1310 (uninterp_frac x351 x480)))
(assert (axiom_frac_zero x351 x480 x239 8 (uninterp_frac x351 x480)))
(assert (axiom_frac_zero x351 x480 x42 x132 (uninterp_frac x351 x480)))
(assert (axiom_frac_zero x351 x480 x526 x983 (uninterp_frac x351 x480)))
(assert (axiom_frac_zero x351 x480 x591 x717 (uninterp_frac x351 x480)))
(assert (axiom_frac_zero x351 x480 x609 x1319 (uninterp_frac x351 x480)))
(assert (axiom_frac_zero x351 x480 x691 x1176 (uninterp_frac x351 x480)))
(assert (axiom_frac_zero x351 x480 x732 x437 (uninterp_frac x351 x480)))
(assert (axiom_frac_zero x351 x480 x910 x1747 (uninterp_frac x351 x480)))
(assert (axiom_frac_bound x351 x910))
(assert (axiom_frac_zero x351 x910 8 x619 (uninterp_frac x351 x910)))
(assert (axiom_frac_zero x351 x910 x1075 x1453 (uninterp_frac x351 x910)))
(assert (axiom_frac_zero x351 x910 x1140 x147 (uninterp_frac x351 x910)))
(assert (axiom_frac_zero x351 x910 x1171 x1671 (uninterp_frac x351 x910)))
(assert (axiom_frac_zero x351 x910 x1217 x635 (uninterp_frac x351 x910)))
(assert (axiom_frac_zero x351 x910 x1228 x1 (uninterp_frac x351 x910)))
(assert (axiom_frac_zero x351 x910 x1320 x221 (uninterp_frac x351 x910)))
(assert (axiom_frac_zero x351 x910 x134 8 (uninterp_frac x351 x910)))
(assert (axiom_frac_zero x351 x910 x1341 x240 (uninterp_frac x351 x910)))
(assert (axiom_frac_zero x351 x910 x1397 x297 (uninterp_frac x351 x910)))
(assert (axiom_frac_zero x351 x910 x1450 x447 (uninterp_frac x351 x910)))
(assert (axiom_frac_zero x351 x910 x1489 x915 (uninterp_frac x351 x910)))
(assert (axiom_frac_zero x351 x910 x1634 x1506 (uninterp_frac x351 x910)))
(assert (axiom_frac_zero x351 x910 x1661 x1729 (uninterp_frac x351 x910)))
(assert (axiom_frac_zero x351 x910 x167 x1348 (uninterp_frac x351 x910)))
(assert (axiom_frac_zero x351 x910 x1744 x334 (uninterp_frac x351 x910)))
(assert (axiom_frac_zero x351 x910 x1866 x579 (uninterp_frac x351 x910)))
(assert (axiom_frac_zero x351 x910 x1890 x690 (uninterp_frac x351 x910)))
(assert (axiom_frac_zero x351 x910 x200 x1310 (uninterp_frac x351 x910)))
(assert (axiom_frac_zero x351 x910 x239 8 (uninterp_frac x351 x910)))
(assert (axiom_frac_zero x351 x910 x42 x132 (uninterp_frac x351 x910)))
(assert (axiom_frac_zero x351 x910 x526 x983 (uninterp_frac x351 x910)))
(assert (axiom_frac_zero x351 x910 x591 x717 (uninterp_frac x351 x910)))
(assert (axiom_frac_zero x351 x910 x609 x1319 (uninterp_frac x351 x910)))
(assert (axiom_frac_zero x351 x910 x691 x1176 (uninterp_frac x351 x910)))
(assert (axiom_frac_zero x351 x910 x732 x437 (uninterp_frac x351 x910)))
(assert (axiom_frac_zero x351 x910 x910 x1747 (uninterp_frac x351 x910)))
(assert (axiom_frac_bound x376 10000))
(assert (axiom_frac_zero x376 10000 8 x619 (uninterp_frac x376 10000)))
(assert (axiom_frac_zero x376 10000 x1075 x1453 (uninterp_frac x376 10000)))
(assert (axiom_frac_zero x376 10000 x1140 x147 (uninterp_frac x376 10000)))
(assert (axiom_frac_zero x376 10000 x1171 x1671 (uninterp_frac x376 10000)))
(assert (axiom_frac_zero x376 10000 x1217 x635 (uninterp_frac x376 10000)))
(assert (axiom_frac_zero x376 10000 x1228 x1 (uninterp_frac x376 10000)))
(assert (axiom_frac_zero x376 10000 x1320 x221 (uninterp_frac x376 10000)))
(assert (axiom_frac_zero x376 10000 x134 8 (uninterp_frac x376 10000)))
(assert (axiom_frac_zero x376 10000 x1341 x240 (uninterp_frac x376 10000)))
(assert (axiom_frac_zero x376 10000 x1397 x297 (uninterp_frac x376 10000)))
(assert (axiom_frac_zero x376 10000 x1450 x447 (uninterp_frac x376 10000)))
(assert (axiom_frac_zero x376 10000 x1489 x915 (uninterp_frac x376 10000)))
(assert (axiom_frac_zero x376 10000 x1634 x1506 (uninterp_frac x376 10000)))
(assert (axiom_frac_zero x376 10000 x1661 x1729 (uninterp_frac x376 10000)))
(assert (axiom_frac_zero x376 10000 x167 x1348 (uninterp_frac x376 10000)))
(assert (axiom_frac_zero x376 10000 x1744 x334 (uninterp_frac x376 10000)))
(assert (axiom_frac_zero x376 10000 x1866 x579 (uninterp_frac x376 10000)))
(assert (axiom_frac_zero x376 10000 x1890 x690 (uninterp_frac x376 10000)))
(assert (axiom_frac_zero x376 10000 x200 x1310 (uninterp_frac x376 10000)))
(assert (axiom_frac_zero x376 10000 x239 8 (uninterp_frac x376 10000)))
(assert (axiom_frac_zero x376 10000 x42 x132 (uninterp_frac x376 10000)))
(assert (axiom_frac_zero x376 10000 x526 x983 (uninterp_frac x376 10000)))
(assert (axiom_frac_zero x376 10000 x591 x717 (uninterp_frac x376 10000)))
(assert (axiom_frac_zero x376 10000 x609 x1319 (uninterp_frac x376 10000)))
(assert (axiom_frac_zero x376 10000 x691 x1176 (uninterp_frac x376 10000)))
(assert (axiom_frac_zero x376 10000 x732 x437 (uninterp_frac x376 10000)))
(assert (axiom_frac_zero x376 10000 x910 x1747 (uninterp_frac x376 10000)))
(assert (axiom_frac_bound x376 x983))
(assert (axiom_frac_zero x376 x983 8 x619 (uninterp_frac x376 x983)))
(assert (axiom_frac_zero x376 x983 x1075 x1453 (uninterp_frac x376 x983)))
(assert (axiom_frac_zero x376 x983 x1140 x147 (uninterp_frac x376 x983)))
(assert (axiom_frac_zero x376 x983 x1171 x1671 (uninterp_frac x376 x983)))
(assert (axiom_frac_zero x376 x983 x1217 x635 (uninterp_frac x376 x983)))
(assert (axiom_frac_zero x376 x983 x1228 x1 (uninterp_frac x376 x983)))
(assert (axiom_frac_zero x376 x983 x1320 x221 (uninterp_frac x376 x983)))
(assert (axiom_frac_zero x376 x983 x134 8 (uninterp_frac x376 x983)))
(assert (axiom_frac_zero x376 x983 x1341 x240 (uninterp_frac x376 x983)))
(assert (axiom_frac_zero x376 x983 x1397 x297 (uninterp_frac x376 x983)))
(assert (axiom_frac_zero x376 x983 x1450 x447 (uninterp_frac x376 x983)))
(assert (axiom_frac_zero x376 x983 x1489 x915 (uninterp_frac x376 x983)))
(assert (axiom_frac_zero x376 x983 x1634 x1506 (uninterp_frac x376 x983)))
(assert (axiom_frac_zero x376 x983 x1661 x1729 (uninterp_frac x376 x983)))
(assert (axiom_frac_zero x376 x983 x167 x1348 (uninterp_frac x376 x983)))
(assert (axiom_frac_zero x376 x983 x1744 x334 (uninterp_frac x376 x983)))
(assert (axiom_frac_zero x376 x983 x1866 x579 (uninterp_frac x376 x983)))
(assert (axiom_frac_zero x376 x983 x1890 x690 (uninterp_frac x376 x983)))
(assert (axiom_frac_zero x376 x983 x200 x1310 (uninterp_frac x376 x983)))
(assert (axiom_frac_zero x376 x983 x239 8 (uninterp_frac x376 x983)))
(assert (axiom_frac_zero x376 x983 x42 x132 (uninterp_frac x376 x983)))
(assert (axiom_frac_zero x376 x983 x526 x983 (uninterp_frac x376 x983)))
(assert (axiom_frac_zero x376 x983 x591 x717 (uninterp_frac x376 x983)))
(assert (axiom_frac_zero x376 x983 x609 x1319 (uninterp_frac x376 x983)))
(assert (axiom_frac_zero x376 x983 x691 x1176 (uninterp_frac x376 x983)))
(assert (axiom_frac_zero x376 x983 x732 x437 (uninterp_frac x376 x983)))
(assert (axiom_frac_zero x376 x983 x910 x1747 (uninterp_frac x376 x983)))
(assert (axiom_frac_bound x495 x1075))
(assert (axiom_frac_zero x495 x1075 8 x619 (uninterp_frac x495 x1075)))
(assert (axiom_frac_zero x495 x1075 x1075 x1453 (uninterp_frac x495 x1075)))
(assert (axiom_frac_zero x495 x1075 x1140 x147 (uninterp_frac x495 x1075)))
(assert (axiom_frac_zero x495 x1075 x1171 x1671 (uninterp_frac x495 x1075)))
(assert (axiom_frac_zero x495 x1075 x1217 x635 (uninterp_frac x495 x1075)))
(assert (axiom_frac_zero x495 x1075 x1228 x1 (uninterp_frac x495 x1075)))
(assert (axiom_frac_zero x495 x1075 x1320 x221 (uninterp_frac x495 x1075)))
(assert (axiom_frac_zero x495 x1075 x134 8 (uninterp_frac x495 x1075)))
(assert (axiom_frac_zero x495 x1075 x1341 x240 (uninterp_frac x495 x1075)))
(assert (axiom_frac_zero x495 x1075 x1397 x297 (uninterp_frac x495 x1075)))
(assert (axiom_frac_zero x495 x1075 x1450 x447 (uninterp_frac x495 x1075)))
(assert (axiom_frac_zero x495 x1075 x1489 x915 (uninterp_frac x495 x1075)))
(assert (axiom_frac_zero x495 x1075 x1634 x1506 (uninterp_frac x495 x1075)))
(assert (axiom_frac_zero x495 x1075 x1661 x1729 (uninterp_frac x495 x1075)))
(assert (axiom_frac_zero x495 x1075 x167 x1348 (uninterp_frac x495 x1075)))
(assert (axiom_frac_zero x495 x1075 x1744 x334 (uninterp_frac x495 x1075)))
(assert (axiom_frac_zero x495 x1075 x1866 x579 (uninterp_frac x495 x1075)))
(assert (axiom_frac_zero x495 x1075 x1890 x690 (uninterp_frac x495 x1075)))
(assert (axiom_frac_zero x495 x1075 x200 x1310 (uninterp_frac x495 x1075)))
(assert (axiom_frac_zero x495 x1075 x239 8 (uninterp_frac x495 x1075)))
(assert (axiom_frac_zero x495 x1075 x42 x132 (uninterp_frac x495 x1075)))
(assert (axiom_frac_zero x495 x1075 x526 x983 (uninterp_frac x495 x1075)))
(assert (axiom_frac_zero x495 x1075 x591 x717 (uninterp_frac x495 x1075)))
(assert (axiom_frac_zero x495 x1075 x609 x1319 (uninterp_frac x495 x1075)))
(assert (axiom_frac_zero x495 x1075 x691 x1176 (uninterp_frac x495 x1075)))
(assert (axiom_frac_zero x495 x1075 x732 x437 (uninterp_frac x495 x1075)))
(assert (axiom_frac_zero x495 x1075 x910 x1747 (uninterp_frac x495 x1075)))
(assert (axiom_frac_bound x629 10000))
(assert (axiom_frac_zero x629 10000 8 x619 (uninterp_frac x629 10000)))
(assert (axiom_frac_zero x629 10000 x1075 x1453 (uninterp_frac x629 10000)))
(assert (axiom_frac_zero x629 10000 x1140 x147 (uninterp_frac x629 10000)))
(assert (axiom_frac_zero x629 10000 x1171 x1671 (uninterp_frac x629 10000)))
(assert (axiom_frac_zero x629 10000 x1217 x635 (uninterp_frac x629 10000)))
(assert (axiom_frac_zero x629 10000 x1228 x1 (uninterp_frac x629 10000)))
(assert (axiom_frac_zero x629 10000 x1320 x221 (uninterp_frac x629 10000)))
(assert (axiom_frac_zero x629 10000 x134 8 (uninterp_frac x629 10000)))
(assert (axiom_frac_zero x629 10000 x1341 x240 (uninterp_frac x629 10000)))
(assert (axiom_frac_zero x629 10000 x1397 x297 (uninterp_frac x629 10000)))
(assert (axiom_frac_zero x629 10000 x1450 x447 (uninterp_frac x629 10000)))
(assert (axiom_frac_zero x629 10000 x1489 x915 (uninterp_frac x629 10000)))
(assert (axiom_frac_zero x629 10000 x1634 x1506 (uninterp_frac x629 10000)))
(assert (axiom_frac_zero x629 10000 x1661 x1729 (uninterp_frac x629 10000)))
(assert (axiom_frac_zero x629 10000 x167 x1348 (uninterp_frac x629 10000)))
(assert (axiom_frac_zero x629 10000 x1744 x334 (uninterp_frac x629 10000)))
(assert (axiom_frac_zero x629 10000 x1866 x579 (uninterp_frac x629 10000)))
(assert (axiom_frac_zero x629 10000 x1890 x690 (uninterp_frac x629 10000)))
(assert (axiom_frac_zero x629 10000 x200 x1310 (uninterp_frac x629 10000)))
(assert (axiom_frac_zero x629 10000 x239 8 (uninterp_frac x629 10000)))
(assert (axiom_frac_zero x629 10000 x42 x132 (uninterp_frac x629 10000)))
(assert (axiom_frac_zero x629 10000 x526 x983 (uninterp_frac x629 10000)))
(assert (axiom_frac_zero x629 10000 x591 x717 (uninterp_frac x629 10000)))
(assert (axiom_frac_zero x629 10000 x609 x1319 (uninterp_frac x629 10000)))
(assert (axiom_frac_zero x629 10000 x691 x1176 (uninterp_frac x629 10000)))
(assert (axiom_frac_zero x629 10000 x732 x437 (uninterp_frac x629 10000)))
(assert (axiom_frac_zero x629 10000 x910 x1747 (uninterp_frac x629 10000)))
(assert (axiom_frac_bound x629 x1341))
(assert (axiom_frac_zero x629 x1341 8 x619 (uninterp_frac x629 x1341)))
(assert (axiom_frac_zero x629 x1341 x1075 x1453 (uninterp_frac x629 x1341)))
(assert (axiom_frac_zero x629 x1341 x1140 x147 (uninterp_frac x629 x1341)))
(assert (axiom_frac_zero x629 x1341 x1171 x1671 (uninterp_frac x629 x1341)))
(assert (axiom_frac_zero x629 x1341 x1217 x635 (uninterp_frac x629 x1341)))
(assert (axiom_frac_zero x629 x1341 x1228 x1 (uninterp_frac x629 x1341)))
(assert (axiom_frac_zero x629 x1341 x1320 x221 (uninterp_frac x629 x1341)))
(assert (axiom_frac_zero x629 x1341 x134 8 (uninterp_frac x629 x1341)))
(assert (axiom_frac_zero x629 x1341 x1341 x240 (uninterp_frac x629 x1341)))
(assert (axiom_frac_zero x629 x1341 x1397 x297 (uninterp_frac x629 x1341)))
(assert (axiom_frac_zero x629 x1341 x1450 x447 (uninterp_frac x629 x1341)))
(assert (axiom_frac_zero x629 x1341 x1489 x915 (uninterp_frac x629 x1341)))
(assert (axiom_frac_zero x629 x1341 x1634 x1506 (uninterp_frac x629 x1341)))
(assert (axiom_frac_zero x629 x1341 x1661 x1729 (uninterp_frac x629 x1341)))
(assert (axiom_frac_zero x629 x1341 x167 x1348 (uninterp_frac x629 x1341)))
(assert (axiom_frac_zero x629 x1341 x1744 x334 (uninterp_frac x629 x1341)))
(assert (axiom_frac_zero x629 x1341 x1866 x579 (uninterp_frac x629 x1341)))
(assert (axiom_frac_zero x629 x1341 x1890 x690 (uninterp_frac x629 x1341)))
(assert (axiom_frac_zero x629 x1341 x200 x1310 (uninterp_frac x629 x1341)))
(assert (axiom_frac_zero x629 x1341 x239 8 (uninterp_frac x629 x1341)))
(assert (axiom_frac_zero x629 x1341 x42 x132 (uninterp_frac x629 x1341)))
(assert (axiom_frac_zero x629 x1341 x526 x983 (uninterp_frac x629 x1341)))
(assert (axiom_frac_zero x629 x1341 x591 x717 (uninterp_frac x629 x1341)))
(assert (axiom_frac_zero x629 x1341 x609 x1319 (uninterp_frac x629 x1341)))
(assert (axiom_frac_zero x629 x1341 x691 x1176 (uninterp_frac x629 x1341)))
(assert (axiom_frac_zero x629 x1341 x732 x437 (uninterp_frac x629 x1341)))
(assert (axiom_frac_zero x629 x1341 x910 x1747 (uninterp_frac x629 x1341)))
(assert (axiom_frac_bound x654 x1533))
(assert (axiom_frac_zero x654 x1533 8 x619 (uninterp_frac x654 x1533)))
(assert (axiom_frac_zero x654 x1533 x1075 x1453 (uninterp_frac x654 x1533)))
(assert (axiom_frac_zero x654 x1533 x1140 x147 (uninterp_frac x654 x1533)))
(assert (axiom_frac_zero x654 x1533 x1171 x1671 (uninterp_frac x654 x1533)))
(assert (axiom_frac_zero x654 x1533 x1217 x635 (uninterp_frac x654 x1533)))
(assert (axiom_frac_zero x654 x1533 x1228 x1 (uninterp_frac x654 x1533)))
(assert (axiom_frac_zero x654 x1533 x1320 x221 (uninterp_frac x654 x1533)))
(assert (axiom_frac_zero x654 x1533 x134 8 (uninterp_frac x654 x1533)))
(assert (axiom_frac_zero x654 x1533 x1341 x240 (uninterp_frac x654 x1533)))
(assert (axiom_frac_zero x654 x1533 x1397 x297 (uninterp_frac x654 x1533)))
(assert (axiom_frac_zero x654 x1533 x1450 x447 (uninterp_frac x654 x1533)))
(assert (axiom_frac_zero x654 x1533 x1489 x915 (uninterp_frac x654 x1533)))
(assert (axiom_frac_zero x654 x1533 x1634 x1506 (uninterp_frac x654 x1533)))
(assert (axiom_frac_zero x654 x1533 x1661 x1729 (uninterp_frac x654 x1533)))
(assert (axiom_frac_zero x654 x1533 x167 x1348 (uninterp_frac x654 x1533)))
(assert (axiom_frac_zero x654 x1533 x1744 x334 (uninterp_frac x654 x1533)))
(assert (axiom_frac_zero x654 x1533 x1866 x579 (uninterp_frac x654 x1533)))
(assert (axiom_frac_zero x654 x1533 x1890 x690 (uninterp_frac x654 x1533)))
(assert (axiom_frac_zero x654 x1533 x200 x1310 (uninterp_frac x654 x1533)))
(assert (axiom_frac_zero x654 x1533 x239 8 (uninterp_frac x654 x1533)))
(assert (axiom_frac_zero x654 x1533 x42 x132 (uninterp_frac x654 x1533)))
(assert (axiom_frac_zero x654 x1533 x526 x983 (uninterp_frac x654 x1533)))
(assert (axiom_frac_zero x654 x1533 x591 x717 (uninterp_frac x654 x1533)))
(assert (axiom_frac_zero x654 x1533 x609 x1319 (uninterp_frac x654 x1533)))
(assert (axiom_frac_zero x654 x1533 x691 x1176 (uninterp_frac x654 x1533)))
(assert (axiom_frac_zero x654 x1533 x732 x437 (uninterp_frac x654 x1533)))
(assert (axiom_frac_zero x654 x1533 x910 x1747 (uninterp_frac x654 x1533)))
(assert (axiom_frac_bound x654 x200))
(assert (axiom_frac_zero x654 x200 8 x619 (uninterp_frac x654 x200)))
(assert (axiom_frac_zero x654 x200 x1075 x1453 (uninterp_frac x654 x200)))
(assert (axiom_frac_zero x654 x200 x1140 x147 (uninterp_frac x654 x200)))
(assert (axiom_frac_zero x654 x200 x1171 x1671 (uninterp_frac x654 x200)))
(assert (axiom_frac_zero x654 x200 x1217 x635 (uninterp_frac x654 x200)))
(assert (axiom_frac_zero x654 x200 x1228 x1 (uninterp_frac x654 x200)))
(assert (axiom_frac_zero x654 x200 x1320 x221 (uninterp_frac x654 x200)))
(assert (axiom_frac_zero x654 x200 x134 8 (uninterp_frac x654 x200)))
(assert (axiom_frac_zero x654 x200 x1341 x240 (uninterp_frac x654 x200)))
(assert (axiom_frac_zero x654 x200 x1397 x297 (uninterp_frac x654 x200)))
(assert (axiom_frac_zero x654 x200 x1450 x447 (uninterp_frac x654 x200)))
(assert (axiom_frac_zero x654 x200 x1489 x915 (uninterp_frac x654 x200)))
(assert (axiom_frac_zero x654 x200 x1634 x1506 (uninterp_frac x654 x200)))
(assert (axiom_frac_zero x654 x200 x1661 x1729 (uninterp_frac x654 x200)))
(assert (axiom_frac_zero x654 x200 x167 x1348 (uninterp_frac x654 x200)))
(assert (axiom_frac_zero x654 x200 x1744 x334 (uninterp_frac x654 x200)))
(assert (axiom_frac_zero x654 x200 x1866 x579 (uninterp_frac x654 x200)))
(assert (axiom_frac_zero x654 x200 x1890 x690 (uninterp_frac x654 x200)))
(assert (axiom_frac_zero x654 x200 x200 x1310 (uninterp_frac x654 x200)))
(assert (axiom_frac_zero x654 x200 x239 8 (uninterp_frac x654 x200)))
(assert (axiom_frac_zero x654 x200 x42 x132 (uninterp_frac x654 x200)))
(assert (axiom_frac_zero x654 x200 x526 x983 (uninterp_frac x654 x200)))
(assert (axiom_frac_zero x654 x200 x591 x717 (uninterp_frac x654 x200)))
(assert (axiom_frac_zero x654 x200 x609 x1319 (uninterp_frac x654 x200)))
(assert (axiom_frac_zero x654 x200 x691 x1176 (uninterp_frac x654 x200)))
(assert (axiom_frac_zero x654 x200 x732 x437 (uninterp_frac x654 x200)))
(assert (axiom_frac_zero x654 x200 x910 x1747 (uninterp_frac x654 x200)))
(assert (axiom_frac_bound x686 (x377 2 x1786)))
(assert (axiom_frac_zero x686 (x377 2 x1786) 8 x619 (uninterp_frac x686 (x377 2 x1786))))
(assert (axiom_frac_zero x686 (x377 2 x1786) x1075 x1453 (uninterp_frac x686 (x377 2 x1786))))
(assert (axiom_frac_zero x686 (x377 2 x1786) x1140 x147 (uninterp_frac x686 (x377 2 x1786))))
(assert (axiom_frac_zero x686 (x377 2 x1786) x1171 x1671 (uninterp_frac x686 (x377 2 x1786))))
(assert (axiom_frac_zero x686 (x377 2 x1786) x1217 x635 (uninterp_frac x686 (x377 2 x1786))))
(assert (axiom_frac_zero x686 (x377 2 x1786) x1228 x1 (uninterp_frac x686 (x377 2 x1786))))
(assert (axiom_frac_zero x686 (x377 2 x1786) x1320 x221 (uninterp_frac x686 (x377 2 x1786))))
(assert (axiom_frac_zero x686 (x377 2 x1786) x134 8 (uninterp_frac x686 (x377 2 x1786))))
(assert (axiom_frac_zero x686 (x377 2 x1786) x1341 x240 (uninterp_frac x686 (x377 2 x1786))))
(assert (axiom_frac_zero x686 (x377 2 x1786) x1397 x297 (uninterp_frac x686 (x377 2 x1786))))
(assert (axiom_frac_zero x686 (x377 2 x1786) x1450 x447 (uninterp_frac x686 (x377 2 x1786))))
(assert (axiom_frac_zero x686 (x377 2 x1786) x1489 x915 (uninterp_frac x686 (x377 2 x1786))))
(assert (axiom_frac_zero x686 (x377 2 x1786) x1634 x1506 (uninterp_frac x686 (x377 2 x1786))))
(assert (axiom_frac_zero x686 (x377 2 x1786) x1661 x1729 (uninterp_frac x686 (x377 2 x1786))))
(assert (axiom_frac_zero x686 (x377 2 x1786) x167 x1348 (uninterp_frac x686 (x377 2 x1786))))
(assert (axiom_frac_zero x686 (x377 2 x1786) x1744 x334 (uninterp_frac x686 (x377 2 x1786))))
(assert (axiom_frac_zero x686 (x377 2 x1786) x1866 x579 (uninterp_frac x686 (x377 2 x1786))))
(assert (axiom_frac_zero x686 (x377 2 x1786) x1890 x690 (uninterp_frac x686 (x377 2 x1786))))
(assert (axiom_frac_zero x686 (x377 2 x1786) x200 x1310 (uninterp_frac x686 (x377 2 x1786))))
(assert (axiom_frac_zero x686 (x377 2 x1786) x239 8 (uninterp_frac x686 (x377 2 x1786))))
(assert (axiom_frac_zero x686 (x377 2 x1786) x42 x132 (uninterp_frac x686 (x377 2 x1786))))
(assert (axiom_frac_zero x686 (x377 2 x1786) x526 x983 (uninterp_frac x686 (x377 2 x1786))))
(assert (axiom_frac_zero x686 (x377 2 x1786) x591 x717 (uninterp_frac x686 (x377 2 x1786))))
(assert (axiom_frac_zero x686 (x377 2 x1786) x609 x1319 (uninterp_frac x686 (x377 2 x1786))))
(assert (axiom_frac_zero x686 (x377 2 x1786) x691 x1176 (uninterp_frac x686 (x377 2 x1786))))
(assert (axiom_frac_zero x686 (x377 2 x1786) x732 x437 (uninterp_frac x686 (x377 2 x1786))))
(assert (axiom_frac_zero x686 (x377 2 x1786) x910 x1747 (uninterp_frac x686 (x377 2 x1786))))
(assert (axiom_frac_bound x725 x1276))
(assert (axiom_frac_zero x725 x1276 8 x619 (uninterp_frac x725 x1276)))
(assert (axiom_frac_zero x725 x1276 x1075 x1453 (uninterp_frac x725 x1276)))
(assert (axiom_frac_zero x725 x1276 x1140 x147 (uninterp_frac x725 x1276)))
(assert (axiom_frac_zero x725 x1276 x1171 x1671 (uninterp_frac x725 x1276)))
(assert (axiom_frac_zero x725 x1276 x1217 x635 (uninterp_frac x725 x1276)))
(assert (axiom_frac_zero x725 x1276 x1228 x1 (uninterp_frac x725 x1276)))
(assert (axiom_frac_zero x725 x1276 x1320 x221 (uninterp_frac x725 x1276)))
(assert (axiom_frac_zero x725 x1276 x134 8 (uninterp_frac x725 x1276)))
(assert (axiom_frac_zero x725 x1276 x1341 x240 (uninterp_frac x725 x1276)))
(assert (axiom_frac_zero x725 x1276 x1397 x297 (uninterp_frac x725 x1276)))
(assert (axiom_frac_zero x725 x1276 x1450 x447 (uninterp_frac x725 x1276)))
(assert (axiom_frac_zero x725 x1276 x1489 x915 (uninterp_frac x725 x1276)))
(assert (axiom_frac_zero x725 x1276 x1634 x1506 (uninterp_frac x725 x1276)))
(assert (axiom_frac_zero x725 x1276 x1661 x1729 (uninterp_frac x725 x1276)))
(assert (axiom_frac_zero x725 x1276 x167 x1348 (uninterp_frac x725 x1276)))
(assert (axiom_frac_zero x725 x1276 x1744 x334 (uninterp_frac x725 x1276)))
(assert (axiom_frac_zero x725 x1276 x1866 x579 (uninterp_frac x725 x1276)))
(assert (axiom_frac_zero x725 x1276 x1890 x690 (uninterp_frac x725 x1276)))
(assert (axiom_frac_zero x725 x1276 x200 x1310 (uninterp_frac x725 x1276)))
(assert (axiom_frac_zero x725 x1276 x239 8 (uninterp_frac x725 x1276)))
(assert (axiom_frac_zero x725 x1276 x42 x132 (uninterp_frac x725 x1276)))
(assert (axiom_frac_zero x725 x1276 x526 x983 (uninterp_frac x725 x1276)))
(assert (axiom_frac_zero x725 x1276 x591 x717 (uninterp_frac x725 x1276)))
(assert (axiom_frac_zero x725 x1276 x609 x1319 (uninterp_frac x725 x1276)))
(assert (axiom_frac_zero x725 x1276 x691 x1176 (uninterp_frac x725 x1276)))
(assert (axiom_frac_zero x725 x1276 x732 x437 (uninterp_frac x725 x1276)))
(assert (axiom_frac_zero x725 x1276 x910 x1747 (uninterp_frac x725 x1276)))
(assert (axiom_frac_bound x725 x915))
(assert (axiom_frac_zero x725 x915 8 x619 (uninterp_frac x725 x915)))
(assert (axiom_frac_zero x725 x915 x1075 x1453 (uninterp_frac x725 x915)))
(assert (axiom_frac_zero x725 x915 x1140 x147 (uninterp_frac x725 x915)))
(assert (axiom_frac_zero x725 x915 x1171 x1671 (uninterp_frac x725 x915)))
(assert (axiom_frac_zero x725 x915 x1217 x635 (uninterp_frac x725 x915)))
(assert (axiom_frac_zero x725 x915 x1228 x1 (uninterp_frac x725 x915)))
(assert (axiom_frac_zero x725 x915 x1320 x221 (uninterp_frac x725 x915)))
(assert (axiom_frac_zero x725 x915 x134 8 (uninterp_frac x725 x915)))
(assert (axiom_frac_zero x725 x915 x1341 x240 (uninterp_frac x725 x915)))
(assert (axiom_frac_zero x725 x915 x1397 x297 (uninterp_frac x725 x915)))
(assert (axiom_frac_zero x725 x915 x1450 x447 (uninterp_frac x725 x915)))
(assert (axiom_frac_zero x725 x915 x1489 x915 (uninterp_frac x725 x915)))
(assert (axiom_frac_zero x725 x915 x1634 x1506 (uninterp_frac x725 x915)))
(assert (axiom_frac_zero x725 x915 x1661 x1729 (uninterp_frac x725 x915)))
(assert (axiom_frac_zero x725 x915 x167 x1348 (uninterp_frac x725 x915)))
(assert (axiom_frac_zero x725 x915 x1744 x334 (uninterp_frac x725 x915)))
(assert (axiom_frac_zero x725 x915 x1866 x579 (uninterp_frac x725 x915)))
(assert (axiom_frac_zero x725 x915 x1890 x690 (uninterp_frac x725 x915)))
(assert (axiom_frac_zero x725 x915 x200 x1310 (uninterp_frac x725 x915)))
(assert (axiom_frac_zero x725 x915 x239 8 (uninterp_frac x725 x915)))
(assert (axiom_frac_zero x725 x915 x42 x132 (uninterp_frac x725 x915)))
(assert (axiom_frac_zero x725 x915 x526 x983 (uninterp_frac x725 x915)))
(assert (axiom_frac_zero x725 x915 x591 x717 (uninterp_frac x725 x915)))
(assert (axiom_frac_zero x725 x915 x609 x1319 (uninterp_frac x725 x915)))
(assert (axiom_frac_zero x725 x915 x691 x1176 (uninterp_frac x725 x915)))
(assert (axiom_frac_zero x725 x915 x732 x437 (uninterp_frac x725 x915)))
(assert (axiom_frac_zero x725 x915 x910 x1747 (uninterp_frac x725 x915)))
(assert (axiom_frac_bound x792 x1571))
(assert (axiom_frac_zero x792 x1571 8 x619 (uninterp_frac x792 x1571)))
(assert (axiom_frac_zero x792 x1571 x1075 x1453 (uninterp_frac x792 x1571)))
(assert (axiom_frac_zero x792 x1571 x1140 x147 (uninterp_frac x792 x1571)))
(assert (axiom_frac_zero x792 x1571 x1171 x1671 (uninterp_frac x792 x1571)))
(assert (axiom_frac_zero x792 x1571 x1217 x635 (uninterp_frac x792 x1571)))
(assert (axiom_frac_zero x792 x1571 x1228 x1 (uninterp_frac x792 x1571)))
(assert (axiom_frac_zero x792 x1571 x1320 x221 (uninterp_frac x792 x1571)))
(assert (axiom_frac_zero x792 x1571 x134 8 (uninterp_frac x792 x1571)))
(assert (axiom_frac_zero x792 x1571 x1341 x240 (uninterp_frac x792 x1571)))
(assert (axiom_frac_zero x792 x1571 x1397 x297 (uninterp_frac x792 x1571)))
(assert (axiom_frac_zero x792 x1571 x1450 x447 (uninterp_frac x792 x1571)))
(assert (axiom_frac_zero x792 x1571 x1489 x915 (uninterp_frac x792 x1571)))
(assert (axiom_frac_zero x792 x1571 x1634 x1506 (uninterp_frac x792 x1571)))
(assert (axiom_frac_zero x792 x1571 x1661 x1729 (uninterp_frac x792 x1571)))
(assert (axiom_frac_zero x792 x1571 x167 x1348 (uninterp_frac x792 x1571)))
(assert (axiom_frac_zero x792 x1571 x1744 x334 (uninterp_frac x792 x1571)))
(assert (axiom_frac_zero x792 x1571 x1866 x579 (uninterp_frac x792 x1571)))
(assert (axiom_frac_zero x792 x1571 x1890 x690 (uninterp_frac x792 x1571)))
(assert (axiom_frac_zero x792 x1571 x200 x1310 (uninterp_frac x792 x1571)))
(assert (axiom_frac_zero x792 x1571 x239 8 (uninterp_frac x792 x1571)))
(assert (axiom_frac_zero x792 x1571 x42 x132 (uninterp_frac x792 x1571)))
(assert (axiom_frac_zero x792 x1571 x526 x983 (uninterp_frac x792 x1571)))
(assert (axiom_frac_zero x792 x1571 x591 x717 (uninterp_frac x792 x1571)))
(assert (axiom_frac_zero x792 x1571 x609 x1319 (uninterp_frac x792 x1571)))
(assert (axiom_frac_zero x792 x1571 x691 x1176 (uninterp_frac x792 x1571)))
(assert (axiom_frac_zero x792 x1571 x732 x437 (uninterp_frac x792 x1571)))
(assert (axiom_frac_zero x792 x1571 x910 x1747 (uninterp_frac x792 x1571)))
(assert (axiom_frac_bound x792 x690))
(assert (axiom_frac_zero x792 x690 8 x619 (uninterp_frac x792 x690)))
(assert (axiom_frac_zero x792 x690 x1075 x1453 (uninterp_frac x792 x690)))
(assert (axiom_frac_zero x792 x690 x1140 x147 (uninterp_frac x792 x690)))
(assert (axiom_frac_zero x792 x690 x1171 x1671 (uninterp_frac x792 x690)))
(assert (axiom_frac_zero x792 x690 x1217 x635 (uninterp_frac x792 x690)))
(assert (axiom_frac_zero x792 x690 x1228 x1 (uninterp_frac x792 x690)))
(assert (axiom_frac_zero x792 x690 x1320 x221 (uninterp_frac x792 x690)))
(assert (axiom_frac_zero x792 x690 x134 8 (uninterp_frac x792 x690)))
(assert (axiom_frac_zero x792 x690 x1341 x240 (uninterp_frac x792 x690)))
(assert (axiom_frac_zero x792 x690 x1397 x297 (uninterp_frac x792 x690)))
(assert (axiom_frac_zero x792 x690 x1450 x447 (uninterp_frac x792 x690)))
(assert (axiom_frac_zero x792 x690 x1489 x915 (uninterp_frac x792 x690)))
(assert (axiom_frac_zero x792 x690 x1634 x1506 (uninterp_frac x792 x690)))
(assert (axiom_frac_zero x792 x690 x1661 x1729 (uninterp_frac x792 x690)))
(assert (axiom_frac_zero x792 x690 x167 x1348 (uninterp_frac x792 x690)))
(assert (axiom_frac_zero x792 x690 x1744 x334 (uninterp_frac x792 x690)))
(assert (axiom_frac_zero x792 x690 x1866 x579 (uninterp_frac x792 x690)))
(assert (axiom_frac_zero x792 x690 x1890 x690 (uninterp_frac x792 x690)))
(assert (axiom_frac_zero x792 x690 x200 x1310 (uninterp_frac x792 x690)))
(assert (axiom_frac_zero x792 x690 x239 8 (uninterp_frac x792 x690)))
(assert (axiom_frac_zero x792 x690 x42 x132 (uninterp_frac x792 x690)))
(assert (axiom_frac_zero x792 x690 x526 x983 (uninterp_frac x792 x690)))
(assert (axiom_frac_zero x792 x690 x591 x717 (uninterp_frac x792 x690)))
(assert (axiom_frac_zero x792 x690 x609 x1319 (uninterp_frac x792 x690)))
(assert (axiom_frac_zero x792 x690 x691 x1176 (uninterp_frac x792 x690)))
(assert (axiom_frac_zero x792 x690 x732 x437 (uninterp_frac x792 x690)))
(assert (axiom_frac_zero x792 x690 x910 x1747 (uninterp_frac x792 x690)))
(assert (axiom_frac_bound x816 1000000000000000000))
(assert (axiom_frac_zero x816 1000000000000000000 8 x619 (uninterp_frac x816 1000000000000000000)))
(assert (axiom_frac_zero x816 1000000000000000000 x1075 x1453 (uninterp_frac x816 1000000000000000000)))
(assert (axiom_frac_zero x816 1000000000000000000 x1140 x147 (uninterp_frac x816 1000000000000000000)))
(assert (axiom_frac_zero x816 1000000000000000000 x1171 x1671 (uninterp_frac x816 1000000000000000000)))
(assert (axiom_frac_zero x816 1000000000000000000 x1217 x635 (uninterp_frac x816 1000000000000000000)))
(assert (axiom_frac_zero x816 1000000000000000000 x1228 x1 (uninterp_frac x816 1000000000000000000)))
(assert (axiom_frac_zero x816 1000000000000000000 x1320 x221 (uninterp_frac x816 1000000000000000000)))
(assert (axiom_frac_zero x816 1000000000000000000 x134 8 (uninterp_frac x816 1000000000000000000)))
(assert (axiom_frac_zero x816 1000000000000000000 x1341 x240 (uninterp_frac x816 1000000000000000000)))
(assert (axiom_frac_zero x816 1000000000000000000 x1397 x297 (uninterp_frac x816 1000000000000000000)))
(assert (axiom_frac_zero x816 1000000000000000000 x1450 x447 (uninterp_frac x816 1000000000000000000)))
(assert (axiom_frac_zero x816 1000000000000000000 x1489 x915 (uninterp_frac x816 1000000000000000000)))
(assert (axiom_frac_zero x816 1000000000000000000 x1634 x1506 (uninterp_frac x816 1000000000000000000)))
(assert (axiom_frac_zero x816 1000000000000000000 x1661 x1729 (uninterp_frac x816 1000000000000000000)))
(assert (axiom_frac_zero x816 1000000000000000000 x167 x1348 (uninterp_frac x816 1000000000000000000)))
(assert (axiom_frac_zero x816 1000000000000000000 x1744 x334 (uninterp_frac x816 1000000000000000000)))
(assert (axiom_frac_zero x816 1000000000000000000 x1866 x579 (uninterp_frac x816 1000000000000000000)))
(assert (axiom_frac_zero x816 1000000000000000000 x1890 x690 (uninterp_frac x816 1000000000000000000)))
(assert (axiom_frac_zero x816 1000000000000000000 x200 x1310 (uninterp_frac x816 1000000000000000000)))
(assert (axiom_frac_zero x816 1000000000000000000 x239 8 (uninterp_frac x816 1000000000000000000)))
(assert (axiom_frac_zero x816 1000000000000000000 x42 x132 (uninterp_frac x816 1000000000000000000)))
(assert (axiom_frac_zero x816 1000000000000000000 x526 x983 (uninterp_frac x816 1000000000000000000)))
(assert (axiom_frac_zero x816 1000000000000000000 x591 x717 (uninterp_frac x816 1000000000000000000)))
(assert (axiom_frac_zero x816 1000000000000000000 x609 x1319 (uninterp_frac x816 1000000000000000000)))
(assert (axiom_frac_zero x816 1000000000000000000 x691 x1176 (uninterp_frac x816 1000000000000000000)))
(assert (axiom_frac_zero x816 1000000000000000000 x732 x437 (uninterp_frac x816 1000000000000000000)))
(assert (axiom_frac_zero x816 1000000000000000000 x910 x1747 (uninterp_frac x816 1000000000000000000)))
(assert (axiom_frac_bound x816 x1171))
(assert (axiom_frac_zero x816 x1171 8 x619 (uninterp_frac x816 x1171)))
(assert (axiom_frac_zero x816 x1171 x1075 x1453 (uninterp_frac x816 x1171)))
(assert (axiom_frac_zero x816 x1171 x1140 x147 (uninterp_frac x816 x1171)))
(assert (axiom_frac_zero x816 x1171 x1171 x1671 (uninterp_frac x816 x1171)))
(assert (axiom_frac_zero x816 x1171 x1217 x635 (uninterp_frac x816 x1171)))
(assert (axiom_frac_zero x816 x1171 x1228 x1 (uninterp_frac x816 x1171)))
(assert (axiom_frac_zero x816 x1171 x1320 x221 (uninterp_frac x816 x1171)))
(assert (axiom_frac_zero x816 x1171 x134 8 (uninterp_frac x816 x1171)))
(assert (axiom_frac_zero x816 x1171 x1341 x240 (uninterp_frac x816 x1171)))
(assert (axiom_frac_zero x816 x1171 x1397 x297 (uninterp_frac x816 x1171)))
(assert (axiom_frac_zero x816 x1171 x1450 x447 (uninterp_frac x816 x1171)))
(assert (axiom_frac_zero x816 x1171 x1489 x915 (uninterp_frac x816 x1171)))
(assert (axiom_frac_zero x816 x1171 x1634 x1506 (uninterp_frac x816 x1171)))
(assert (axiom_frac_zero x816 x1171 x1661 x1729 (uninterp_frac x816 x1171)))
(assert (axiom_frac_zero x816 x1171 x167 x1348 (uninterp_frac x816 x1171)))
(assert (axiom_frac_zero x816 x1171 x1744 x334 (uninterp_frac x816 x1171)))
(assert (axiom_frac_zero x816 x1171 x1866 x579 (uninterp_frac x816 x1171)))
(assert (axiom_frac_zero x816 x1171 x1890 x690 (uninterp_frac x816 x1171)))
(assert (axiom_frac_zero x816 x1171 x200 x1310 (uninterp_frac x816 x1171)))
(assert (axiom_frac_zero x816 x1171 x239 8 (uninterp_frac x816 x1171)))
(assert (axiom_frac_zero x816 x1171 x42 x132 (uninterp_frac x816 x1171)))
(assert (axiom_frac_zero x816 x1171 x526 x983 (uninterp_frac x816 x1171)))
(assert (axiom_frac_zero x816 x1171 x591 x717 (uninterp_frac x816 x1171)))
(assert (axiom_frac_zero x816 x1171 x609 x1319 (uninterp_frac x816 x1171)))
(assert (axiom_frac_zero x816 x1171 x691 x1176 (uninterp_frac x816 x1171)))
(assert (axiom_frac_zero x816 x1171 x732 x437 (uninterp_frac x816 x1171)))
(assert (axiom_frac_zero x816 x1171 x910 x1747 (uninterp_frac x816 x1171)))
(assert (axiom_frac_bound x95 x287))
(assert (axiom_frac_zero x95 x287 8 x619 (uninterp_frac x95 x287)))
(assert (axiom_frac_zero x95 x287 x1075 x1453 (uninterp_frac x95 x287)))
(assert (axiom_frac_zero x95 x287 x1140 x147 (uninterp_frac x95 x287)))
(assert (axiom_frac_zero x95 x287 x1171 x1671 (uninterp_frac x95 x287)))
(assert (axiom_frac_zero x95 x287 x1217 x635 (uninterp_frac x95 x287)))
(assert (axiom_frac_zero x95 x287 x1228 x1 (uninterp_frac x95 x287)))
(assert (axiom_frac_zero x95 x287 x1320 x221 (uninterp_frac x95 x287)))
(assert (axiom_frac_zero x95 x287 x134 8 (uninterp_frac x95 x287)))
(assert (axiom_frac_zero x95 x287 x1341 x240 (uninterp_frac x95 x287)))
(assert (axiom_frac_zero x95 x287 x1397 x297 (uninterp_frac x95 x287)))
(assert (axiom_frac_zero x95 x287 x1450 x447 (uninterp_frac x95 x287)))
(assert (axiom_frac_zero x95 x287 x1489 x915 (uninterp_frac x95 x287)))
(assert (axiom_frac_zero x95 x287 x1634 x1506 (uninterp_frac x95 x287)))
(assert (axiom_frac_zero x95 x287 x1661 x1729 (uninterp_frac x95 x287)))
(assert (axiom_frac_zero x95 x287 x167 x1348 (uninterp_frac x95 x287)))
(assert (axiom_frac_zero x95 x287 x1744 x334 (uninterp_frac x95 x287)))
(assert (axiom_frac_zero x95 x287 x1866 x579 (uninterp_frac x95 x287)))
(assert (axiom_frac_zero x95 x287 x1890 x690 (uninterp_frac x95 x287)))
(assert (axiom_frac_zero x95 x287 x200 x1310 (uninterp_frac x95 x287)))
(assert (axiom_frac_zero x95 x287 x239 8 (uninterp_frac x95 x287)))
(assert (axiom_frac_zero x95 x287 x42 x132 (uninterp_frac x95 x287)))
(assert (axiom_frac_zero x95 x287 x526 x983 (uninterp_frac x95 x287)))
(assert (axiom_frac_zero x95 x287 x591 x717 (uninterp_frac x95 x287)))
(assert (axiom_frac_zero x95 x287 x609 x1319 (uninterp_frac x95 x287)))
(assert (axiom_frac_zero x95 x287 x691 x1176 (uninterp_frac x95 x287)))
(assert (axiom_frac_zero x95 x287 x732 x437 (uninterp_frac x95 x287)))
(assert (axiom_frac_zero x95 x287 x910 x1747 (uninterp_frac x95 x287)))
(assert (axiom_frac_bound x95 x717))
(assert (axiom_frac_zero x95 x717 8 x619 (uninterp_frac x95 x717)))
(assert (axiom_frac_zero x95 x717 x1075 x1453 (uninterp_frac x95 x717)))
(assert (axiom_frac_zero x95 x717 x1140 x147 (uninterp_frac x95 x717)))
(assert (axiom_frac_zero x95 x717 x1171 x1671 (uninterp_frac x95 x717)))
(assert (axiom_frac_zero x95 x717 x1217 x635 (uninterp_frac x95 x717)))
(assert (axiom_frac_zero x95 x717 x1228 x1 (uninterp_frac x95 x717)))
(assert (axiom_frac_zero x95 x717 x1320 x221 (uninterp_frac x95 x717)))
(assert (axiom_frac_zero x95 x717 x134 8 (uninterp_frac x95 x717)))
(assert (axiom_frac_zero x95 x717 x1341 x240 (uninterp_frac x95 x717)))
(assert (axiom_frac_zero x95 x717 x1397 x297 (uninterp_frac x95 x717)))
(assert (axiom_frac_zero x95 x717 x1450 x447 (uninterp_frac x95 x717)))
(assert (axiom_frac_zero x95 x717 x1489 x915 (uninterp_frac x95 x717)))
(assert (axiom_frac_zero x95 x717 x1634 x1506 (uninterp_frac x95 x717)))
(assert (axiom_frac_zero x95 x717 x1661 x1729 (uninterp_frac x95 x717)))
(assert (axiom_frac_zero x95 x717 x167 x1348 (uninterp_frac x95 x717)))
(assert (axiom_frac_zero x95 x717 x1744 x334 (uninterp_frac x95 x717)))
(assert (axiom_frac_zero x95 x717 x1866 x579 (uninterp_frac x95 x717)))
(assert (axiom_frac_zero x95 x717 x1890 x690 (uninterp_frac x95 x717)))
(assert (axiom_frac_zero x95 x717 x200 x1310 (uninterp_frac x95 x717)))
(assert (axiom_frac_zero x95 x717 x239 8 (uninterp_frac x95 x717)))
(assert (axiom_frac_zero x95 x717 x42 x132 (uninterp_frac x95 x717)))
(assert (axiom_frac_zero x95 x717 x526 x983 (uninterp_frac x95 x717)))
(assert (axiom_frac_zero x95 x717 x591 x717 (uninterp_frac x95 x717)))
(assert (axiom_frac_zero x95 x717 x609 x1319 (uninterp_frac x95 x717)))
(assert (axiom_frac_zero x95 x717 x691 x1176 (uninterp_frac x95 x717)))
(assert (axiom_frac_zero x95 x717 x732 x437 (uninterp_frac x95 x717)))
(assert (axiom_frac_zero x95 x717 x910 x1747 (uninterp_frac x95 x717)))
(assert (axiom_int_approximation x1))
(assert (axiom_int_approximation x100))
(assert (axiom_int_approximation x1001))
(assert (axiom_int_approximation x1007))
(assert (axiom_int_approximation x1009))
(assert (axiom_int_approximation x1010))
(assert (axiom_int_approximation x1012))
(assert (axiom_int_approximation x1013))
(assert (axiom_int_approximation x1017))
(assert (axiom_int_approximation x1020))
(assert (axiom_int_approximation x1021))
(assert (axiom_int_approximation x1027))
(assert (axiom_int_approximation x1030))
(assert (axiom_int_approximation x1033))
(assert (axiom_int_approximation x1037))
(assert (axiom_int_approximation x1039))
(assert (axiom_int_approximation x1041))
(assert (axiom_int_approximation x1043))
(assert (axiom_int_approximation x1046))
(assert (axiom_int_approximation x1047))
(assert (axiom_int_approximation x1049))
(assert (axiom_int_approximation x1050))
(assert (axiom_int_approximation x1053))
(assert (axiom_int_approximation x1054))
(assert (axiom_int_approximation x1058))
(assert (axiom_int_approximation x106))
(assert (axiom_int_approximation x1061))
(assert (axiom_int_approximation x1062))
(assert (axiom_int_approximation x1065))
(assert (axiom_int_approximation x1067))
(assert (axiom_int_approximation x1069))
(assert (axiom_int_approximation x107))
(assert (axiom_int_approximation x1073))
(assert (axiom_int_approximation x1075))
(assert (axiom_int_approximation x1081))
(assert (axiom_int_approximation x1082))
(assert (axiom_int_approximation x1087))
(assert (axiom_int_approximation x1089))
(assert (axiom_int_approximation x109))
(assert (axiom_int_approximation x1091))
(assert (axiom_int_approximation x1092))
(assert (axiom_int_approximation x1093))
(assert (axiom_int_approximation x1094))
(assert (axiom_int_approximation x1098))
(assert (axiom_int_approximation x1099))
(assert (axiom_int_approximation x11))
(assert (axiom_int_approximation x110))
(assert (axiom_int_approximation x1100))
(assert (axiom_int_approximation x1101))
(assert (axiom_int_approximation x1104))
(assert (axiom_int_approximation x1110))
(assert (axiom_int_approximation x1112))
(assert (axiom_int_approximation x1118))
(assert (axiom_int_approximation x112))
(assert (axiom_int_approximation x1130))
(assert (axiom_int_approximation x1132))
(assert (axiom_int_approximation x1133))
(assert (axiom_int_approximation x1136))
(assert (axiom_int_approximation x1137))
(assert (axiom_int_approximation x1138))
(assert (axiom_int_approximation x1140))
(assert (axiom_int_approximation x1141))
(assert (axiom_int_approximation x1143))
(assert (axiom_int_approximation x1144))
(assert (axiom_int_approximation x1148))
(assert (axiom_int_approximation x115))
(assert (axiom_int_approximation x1150))
(assert (axiom_int_approximation x1151))
(assert (axiom_int_approximation x1155))
(assert (axiom_int_approximation x1158))
(assert (axiom_int_approximation x1164))
(assert (axiom_int_approximation x1166))
(assert (axiom_int_approximation x1169))
(assert (axiom_int_approximation x117))
(assert (axiom_int_approximation x1170))
(assert (axiom_int_approximation x1171))
(assert (axiom_int_approximation x1172))
(assert (axiom_int_approximation x1174))
(assert (axiom_int_approximation x1175))
(assert (axiom_int_approximation x1176))
(assert (axiom_int_approximation x1177))
(assert (axiom_int_approximation x1178))
(assert (axiom_int_approximation x118))
(assert (axiom_int_approximation x1182))
(assert (axiom_int_approximation x1187))
(assert (axiom_int_approximation x1188))
(assert (axiom_int_approximation x119))
(assert (axiom_int_approximation x1193))
(assert (axiom_int_approximation x1196))
(assert (axiom_int_approximation x1202))
(assert (axiom_int_approximation x1206))
(assert (axiom_int_approximation x1210))
(assert (axiom_int_approximation x1217))
(assert (axiom_int_approximation x1219))
(assert (axiom_int_approximation x122))
(assert (axiom_int_approximation x1221))
(assert (axiom_int_approximation x1222))
(assert (axiom_int_approximation x1223))
(assert (axiom_int_approximation x1224))
(assert (axiom_int_approximation x1227))
(assert (axiom_int_approximation x1228))
(assert (axiom_int_approximation x1230))
(assert (axiom_int_approximation x1232))
(assert (axiom_int_approximation x1243))
(assert (axiom_int_approximation x1244))
(assert (axiom_int_approximation x125))
(assert (axiom_int_approximation x1250))
(assert (axiom_int_approximation x1252))
(assert (axiom_int_approximation x1254))
(assert (axiom_int_approximation x1255))
(assert (axiom_int_approximation x1259))
(assert (axiom_int_approximation x126))
(assert (axiom_int_approximation x1260))
(assert (axiom_int_approximation x1261))
(assert (axiom_int_approximation x1263))
(assert (axiom_int_approximation x1265))
(assert (axiom_int_approximation x1268))
(assert (axiom_int_approximation x1273))
(assert (axiom_int_approximation x1276))
(assert (axiom_int_approximation x1278))
(assert (axiom_int_approximation x1279))
(assert (axiom_int_approximation x1280))
(assert (axiom_int_approximation x1283))
(assert (axiom_int_approximation x1288))
(assert (axiom_int_approximation x1289))
(assert (axiom_int_approximation x129))
(assert (axiom_int_approximation x1291))
(assert (axiom_int_approximation x1293))
(assert (axiom_int_approximation x1296))
(assert (axiom_int_approximation x13))
(assert (axiom_int_approximation x1301))
(assert (axiom_int_approximation x1302))
(assert (axiom_int_approximation x1308))
(assert (axiom_int_approximation x1309))
(assert (axiom_int_approximation x131))
(assert (axiom_int_approximation x1310))
(assert (axiom_int_approximation x1311))
(assert (axiom_int_approximation x1312))
(assert (axiom_int_approximation x1317))
(assert (axiom_int_approximation x1319))
(assert (axiom_int_approximation x132))
(assert (axiom_int_approximation x1320))
(assert (axiom_int_approximation x1323))
(assert (axiom_int_approximation x1324))
(assert (axiom_int_approximation x1325))
(assert (axiom_int_approximation x1326))
(assert (axiom_int_approximation x1328))
(assert (axiom_int_approximation x133))
(assert (axiom_int_approximation x1333))
(assert (axiom_int_approximation x1334))
(assert (axiom_int_approximation x1337))
(assert (axiom_int_approximation x1338))
(assert (axiom_int_approximation x134))
(assert (axiom_int_approximation x1341))
(assert (axiom_int_approximation x1342))
(assert (axiom_int_approximation x1348))
(assert (axiom_int_approximation x1356))
(assert (axiom_int_approximation x1358))
(assert (axiom_int_approximation x1361))
(assert (axiom_int_approximation x1363))
(assert (axiom_int_approximation x1364))
(assert (axiom_int_approximation x1365))
(assert (axiom_int_approximation x1381))
(assert (axiom_int_approximation x1384))
(assert (axiom_int_approximation x1385))
(assert (axiom_int_approximation x1388))
(assert (axiom_int_approximation x1389))
(assert (axiom_int_approximation x1393))
(assert (axiom_int_approximation x1397))
(assert (axiom_int_approximation x1398))
(assert (axiom_int_approximation x1402))
(assert (axiom_int_approximation x1407))
(assert (axiom_int_approximation x1408))
(assert (axiom_int_approximation x1409))
(assert (axiom_int_approximation x141))
(assert (axiom_int_approximation x1415))
(assert (axiom_int_approximation x1423))
(assert (axiom_int_approximation x1424))
(assert (axiom_int_approximation x1426))
(assert (axiom_int_approximation x1427))
(assert (axiom_int_approximation x143))
(assert (axiom_int_approximation x1432))
(assert (axiom_int_approximation x1435))
(assert (axiom_int_approximation x1441))
(assert (axiom_int_approximation x1446))
(assert (axiom_int_approximation x1448))
(assert (axiom_int_approximation x145))
(assert (axiom_int_approximation x1450))
(assert (axiom_int_approximation x1451))
(assert (axiom_int_approximation x1453))
(assert (axiom_int_approximation x1458))
(assert (axiom_int_approximation x1459))
(assert (axiom_int_approximation x1463))
(assert (axiom_int_approximation x147))
(assert (axiom_int_approximation x1471))
(assert (axiom_int_approximation x1472))
(assert (axiom_int_approximation x1473))
(assert (axiom_int_approximation x1476))
(assert (axiom_int_approximation x1477))
(assert (axiom_int_approximation x1478))
(assert (axiom_int_approximation x1479))
(assert (axiom_int_approximation x1480))
(assert (axiom_int_approximation x1486))
(assert (axiom_int_approximation x1487))
(assert (axiom_int_approximation x1488))
(assert (axiom_int_approximation x1489))
(assert (axiom_int_approximation x1490))
(assert (axiom_int_approximation x1495))
(assert (axiom_int_approximation x1496))
(assert (axiom_int_approximation x1498))
(assert (axiom_int_approximation x1502))
(assert (axiom_int_approximation x1506))
(assert (axiom_int_approximation x1507))
(assert (axiom_int_approximation x1510))
(assert (axiom_int_approximation x1512))
(assert (axiom_int_approximation x1516))
(assert (axiom_int_approximation x152))
(assert (axiom_int_approximation x1524))
(assert (axiom_int_approximation x1526))
(assert (axiom_int_approximation x1531))
(assert (axiom_int_approximation x1533))
(assert (axiom_int_approximation x1534))
(assert (axiom_int_approximation x1535))
(assert (axiom_int_approximation x1536))
(assert (axiom_int_approximation x1539))
(assert (axiom_int_approximation x154))
(assert (axiom_int_approximation x1546))
(assert (axiom_int_approximation x1547))
(assert (axiom_int_approximation x1548))
(assert (axiom_int_approximation x1550))
(assert (axiom_int_approximation x1557))
(assert (axiom_int_approximation x156))
(assert (axiom_int_approximation x1560))
(assert (axiom_int_approximation x1562))
(assert (axiom_int_approximation x1564))
(assert (axiom_int_approximation x1567))
(assert (axiom_int_approximation x157))
(assert (axiom_int_approximation x1571))
(assert (axiom_int_approximation x1573))
(assert (axiom_int_approximation x1579))
(assert (axiom_int_approximation x1580))
(assert (axiom_int_approximation x1585))
(assert (axiom_int_approximation x1588))
(assert (axiom_int_approximation x1590))
(assert (axiom_int_approximation x1595))
(assert (axiom_int_approximation x1598))
(assert (axiom_int_approximation x1599))
(assert (axiom_int_approximation x160))
(assert (axiom_int_approximation x1600))
(assert (axiom_int_approximation x1602))
(assert (axiom_int_approximation x1603))
(assert (axiom_int_approximation x1605))
(assert (axiom_int_approximation x1608))
(assert (axiom_int_approximation x1611))
(assert (axiom_int_approximation x1612))
(assert (axiom_int_approximation x1616))
(assert (axiom_int_approximation x1619))
(assert (axiom_int_approximation x1621))
(assert (axiom_int_approximation x1624))
(assert (axiom_int_approximation x1625))
(assert (axiom_int_approximation x1629))
(assert (axiom_int_approximation x163))
(assert (axiom_int_approximation x1632))
(assert (axiom_int_approximation x1633))
(assert (axiom_int_approximation x1634))
(assert (axiom_int_approximation x1636))
(assert (axiom_int_approximation x1638))
(assert (axiom_int_approximation x1640))
(assert (axiom_int_approximation x1646))
(assert (axiom_int_approximation x1649))
(assert (axiom_int_approximation x1651))
(assert (axiom_int_approximation x1656))
(assert (axiom_int_approximation x1659))
(assert (axiom_int_approximation x1661))
(assert (axiom_int_approximation x1664))
(assert (axiom_int_approximation x1666))
(assert (axiom_int_approximation x1669))
(assert (axiom_int_approximation x167))
(assert (axiom_int_approximation x1670))
(assert (axiom_int_approximation x1671))
(assert (axiom_int_approximation x1681))
(assert (axiom_int_approximation x1683))
(assert (axiom_int_approximation x1684))
(assert (axiom_int_approximation x1685))
(assert (axiom_int_approximation x1686))
(assert (axiom_int_approximation x1687))
(assert (axiom_int_approximation x1690))
(assert (axiom_int_approximation x1696))
(assert (axiom_int_approximation x1697))
(assert (axiom_int_approximation x1699))
(assert (axiom_int_approximation x170))
(assert (axiom_int_approximation x1700))
(assert (axiom_int_approximation x1701))
(assert (axiom_int_approximation x1702))
(assert (axiom_int_approximation x1703))
(assert (axiom_int_approximation x1704))
(assert (axiom_int_approximation x1706))
(assert (axiom_int_approximation x1708))
(assert (axiom_int_approximation x1709))
(assert (axiom_int_approximation x171))
(assert (axiom_int_approximation x1711))
(assert (axiom_int_approximation x1712))
(assert (axiom_int_approximation x1716))
(assert (axiom_int_approximation x1717))
(assert (axiom_int_approximation x1718))
(assert (axiom_int_approximation x1726))
(assert (axiom_int_approximation x1727))
(assert (axiom_int_approximation x1729))
(assert (axiom_int_approximation x1732))
(assert (axiom_int_approximation x1734))
(assert (axiom_int_approximation x1735))
(assert (axiom_int_approximation x1738))
(assert (axiom_int_approximation x1740))
(assert (axiom_int_approximation x1744))
(assert (axiom_int_approximation x1747))
(assert (axiom_int_approximation x1749))
(assert (axiom_int_approximation x1751))
(assert (axiom_int_approximation x1752))
(assert (axiom_int_approximation x1756))
(assert (axiom_int_approximation x1759))
(assert (axiom_int_approximation x1761))
(assert (axiom_int_approximation x1764))
(assert (axiom_int_approximation x1765))
(assert (axiom_int_approximation x1767))
(assert (axiom_int_approximation x1768))
(assert (axiom_int_approximation x1770))
(assert (axiom_int_approximation x1772))
(assert (axiom_int_approximation x1774))
(assert (axiom_int_approximation x1781))
(assert (axiom_int_approximation x1786))
(assert (axiom_int_approximation x1789))
(assert (axiom_int_approximation x1791))
(assert (axiom_int_approximation x1792))
(assert (axiom_int_approximation x1796))
(assert (axiom_int_approximation x18))
(assert (axiom_int_approximation x1802))
(assert (axiom_int_approximation x1804))
(assert (axiom_int_approximation x1805))
(assert (axiom_int_approximation x1811))
(assert (axiom_int_approximation x1812))
(assert (axiom_int_approximation x1814))
(assert (axiom_int_approximation x1816))
(assert (axiom_int_approximation x1818))
(assert (axiom_int_approximation x1821))
(assert (axiom_int_approximation x1825))
(assert (axiom_int_approximation x1827))
(assert (axiom_int_approximation x1828))
(assert (axiom_int_approximation x1829))
(assert (axiom_int_approximation x183))
(assert (axiom_int_approximation x1831))
(assert (axiom_int_approximation x1832))
(assert (axiom_int_approximation x1835))
(assert (axiom_int_approximation x1836))
(assert (axiom_int_approximation x1837))
(assert (axiom_int_approximation x1838))
(assert (axiom_int_approximation x1841))
(assert (axiom_int_approximation x1842))
(assert (axiom_int_approximation x1843))
(assert (axiom_int_approximation x1849))
(assert (axiom_int_approximation x185))
(assert (axiom_int_approximation x1852))
(assert (axiom_int_approximation x1853))
(assert (axiom_int_approximation x1854))
(assert (axiom_int_approximation x1856))
(assert (axiom_int_approximation x1859))
(assert (axiom_int_approximation x186))
(assert (axiom_int_approximation x1863))
(assert (axiom_int_approximation x1866))
(assert (axiom_int_approximation x1867))
(assert (axiom_int_approximation x1868))
(assert (axiom_int_approximation x187))
(assert (axiom_int_approximation x1873))
(assert (axiom_int_approximation x1874))
(assert (axiom_int_approximation x1877))
(assert (axiom_int_approximation x1879))
(assert (axiom_int_approximation x1880))
(assert (axiom_int_approximation x1886))
(assert (axiom_int_approximation x1888))
(assert (axiom_int_approximation x1890))
(assert (axiom_int_approximation x1894))
(assert (axiom_int_approximation x190))
(assert (axiom_int_approximation x1900))
(assert (axiom_int_approximation x1902))
(assert (axiom_int_approximation x1903))
(assert (axiom_int_approximation x1905))
(assert (axiom_int_approximation x1907))
(assert (axiom_int_approximation x1909))
(assert (axiom_int_approximation x1911))
(assert (axiom_int_approximation x1912))
(assert (axiom_int_approximation x195))
(assert (axiom_int_approximation x20))
(assert (axiom_int_approximation x200))
(assert (axiom_int_approximation x201))
(assert (axiom_int_approximation x202))
(assert (axiom_int_approximation x205))
(assert (axiom_int_approximation x208))
(assert (axiom_int_approximation x209))
(assert (axiom_int_approximation x212))
(assert (axiom_int_approximation x214))
(assert (axiom_int_approximation x219))
(assert (axiom_int_approximation x220))
(assert (axiom_int_approximation x221))
(assert (axiom_int_approximation x226))
(assert (axiom_int_approximation x227))
(assert (axiom_int_approximation x23))
(assert (axiom_int_approximation x230))
(assert (axiom_int_approximation x231))
(assert (axiom_int_approximation x232))
(assert (axiom_int_approximation x235))
(assert (axiom_int_approximation x239))
(assert (axiom_int_approximation x24))
(assert (axiom_int_approximation x240))
(assert (axiom_int_approximation x245))
(assert (axiom_int_approximation x246))
(assert (axiom_int_approximation x247))
(assert (axiom_int_approximation x252))
(assert (axiom_int_approximation x253))
(assert (axiom_int_approximation x254))
(assert (axiom_int_approximation x256))
(assert (axiom_int_approximation x257))
(assert (axiom_int_approximation x259))
(assert (axiom_int_approximation x26))
(assert (axiom_int_approximation x260))
(assert (axiom_int_approximation x261))
(assert (axiom_int_approximation x263))
(assert (axiom_int_approximation x268))
(assert (axiom_int_approximation x270))
(assert (axiom_int_approximation x276))
(assert (axiom_int_approximation x277))
(assert (axiom_int_approximation x28))
(assert (axiom_int_approximation x281))
(assert (axiom_int_approximation x286))
(assert (axiom_int_approximation x287))
(assert (axiom_int_approximation x288))
(assert (axiom_int_approximation x29))
(assert (axiom_int_approximation x293))
(assert (axiom_int_approximation x296))
(assert (axiom_int_approximation x297))
(assert (axiom_int_approximation x298))
(assert (axiom_int_approximation x299))
(assert (axiom_int_approximation x3))
(assert (axiom_int_approximation x304))
(assert (axiom_int_approximation x305))
(assert (axiom_int_approximation x306))
(assert (axiom_int_approximation x308))
(assert (axiom_int_approximation x314))
(assert (axiom_int_approximation x315))
(assert (axiom_int_approximation x316))
(assert (axiom_int_approximation x318))
(assert (axiom_int_approximation x319))
(assert (axiom_int_approximation x323))
(assert (axiom_int_approximation x324))
(assert (axiom_int_approximation x328))
(assert (axiom_int_approximation x33))
(assert (axiom_int_approximation x330))
(assert (axiom_int_approximation x334))
(assert (axiom_int_approximation x335))
(assert (axiom_int_approximation x336))
(assert (axiom_int_approximation x339))
(assert (axiom_int_approximation x343))
(assert (axiom_int_approximation x349))
(assert (axiom_int_approximation x35))
(assert (axiom_int_approximation x351))
(assert (axiom_int_approximation x359))
(assert (axiom_int_approximation x361))
(assert (axiom_int_approximation x367))
(assert (axiom_int_approximation x369))
(assert (axiom_int_approximation x372))
(assert (axiom_int_approximation x374))
(assert (axiom_int_approximation x376))
(assert (axiom_int_approximation x380))
(assert (axiom_int_approximation x381))
(assert (axiom_int_approximation x383))
(assert (axiom_int_approximation x389))
(assert (axiom_int_approximation x391))
(assert (axiom_int_approximation x392))
(assert (axiom_int_approximation x395))
(assert (axiom_int_approximation x397))
(assert (axiom_int_approximation x405))
(assert (axiom_int_approximation x406))
(assert (axiom_int_approximation x409))
(assert (axiom_int_approximation x41))
(assert (axiom_int_approximation x410))
(assert (axiom_int_approximation x411))
(assert (axiom_int_approximation x412))
(assert (axiom_int_approximation x415))
(assert (axiom_int_approximation x416))
(assert (axiom_int_approximation x417))
(assert (axiom_int_approximation x418))
(assert (axiom_int_approximation x42))
(assert (axiom_int_approximation x423))
(assert (axiom_int_approximation x425))
(assert (axiom_int_approximation x428))
(assert (axiom_int_approximation x432))
(assert (axiom_int_approximation x433))
(assert (axiom_int_approximation x437))
(assert (axiom_int_approximation x441))
(assert (axiom_int_approximation x443))
(assert (axiom_int_approximation x447))
(assert (axiom_int_approximation x449))
(assert (axiom_int_approximation x451))
(assert (axiom_int_approximation x452))
(assert (axiom_int_approximation x454))
(assert (axiom_int_approximation x457))
(assert (axiom_int_approximation x459))
(assert (axiom_int_approximation x460))
(assert (axiom_int_approximation x461))
(assert (axiom_int_approximation x463))
(assert (axiom_int_approximation x464))
(assert (axiom_int_approximation x467))
(assert (axiom_int_approximation x47))
(assert (axiom_int_approximation x471))
(assert (axiom_int_approximation x473))
(assert (axiom_int_approximation x476))
(assert (axiom_int_approximation x477))
(assert (axiom_int_approximation x479))
(assert (axiom_int_approximation x48))
(assert (axiom_int_approximation x480))
(assert (axiom_int_approximation x482))
(assert (axiom_int_approximation x485))
(assert (axiom_int_approximation x490))
(assert (axiom_int_approximation x495))
(assert (axiom_int_approximation x496))
(assert (axiom_int_approximation x499))
(assert (axiom_int_approximation x502))
(assert (axiom_int_approximation x504))
(assert (axiom_int_approximation x505))
(assert (axiom_int_approximation x508))
(assert (axiom_int_approximation x509))
(assert (axiom_int_approximation x52))
(assert (axiom_int_approximation x524))
(assert (axiom_int_approximation x526))
(assert (axiom_int_approximation x528))
(assert (axiom_int_approximation x529))
(assert (axiom_int_approximation x536))
(assert (axiom_int_approximation x538))
(assert (axiom_int_approximation x54))
(assert (axiom_int_approximation x540))
(assert (axiom_int_approximation x541))
(assert (axiom_int_approximation x542))
(assert (axiom_int_approximation x547))
(assert (axiom_int_approximation x549))
(assert (axiom_int_approximation x55))
(assert (axiom_int_approximation x550))
(assert (axiom_int_approximation x552))
(assert (axiom_int_approximation x553))
(assert (axiom_int_approximation x554))
(assert (axiom_int_approximation x555))
(assert (axiom_int_approximation x556))
(assert (axiom_int_approximation x560))
(assert (axiom_int_approximation x561))
(assert (axiom_int_approximation x563))
(assert (axiom_int_approximation x570))
(assert (axiom_int_approximation x573))
(assert (axiom_int_approximation x576))
(assert (axiom_int_approximation x579))
(assert (axiom_int_approximation x580))
(assert (axiom_int_approximation x587))
(assert (axiom_int_approximation x590))
(assert (axiom_int_approximation x591))
(assert (axiom_int_approximation x593))
(assert (axiom_int_approximation x594))
(assert (axiom_int_approximation x595))
(assert (axiom_int_approximation x596))
(assert (axiom_int_approximation x599))
(assert (axiom_int_approximation x6))
(assert (axiom_int_approximation x60))
(assert (axiom_int_approximation x601))
(assert (axiom_int_approximation x602))
(assert (axiom_int_approximation x604))
(assert (axiom_int_approximation x606))
(assert (axiom_int_approximation x609))
(assert (axiom_int_approximation x612))
(assert (axiom_int_approximation x616))
(assert (axiom_int_approximation x619))
(assert (axiom_int_approximation x62))
(assert (axiom_int_approximation x620))
(assert (axiom_int_approximation x622))
(assert (axiom_int_approximation x625))
(assert (axiom_int_approximation x629))
(assert (axiom_int_approximation x630))
(assert (axiom_int_approximation x633))
(assert (axiom_int_approximation x635))
(assert (axiom_int_approximation x636))
(assert (axiom_int_approximation x637))
(assert (axiom_int_approximation x640))
(assert (axiom_int_approximation x643))
(assert (axiom_int_approximation x645))
(assert (axiom_int_approximation x646))
(assert (axiom_int_approximation x648))
(assert (axiom_int_approximation x649))
(assert (axiom_int_approximation x652))
(assert (axiom_int_approximation x654))
(assert (axiom_int_approximation x657))
(assert (axiom_int_approximation x658))
(assert (axiom_int_approximation x661))
(assert (axiom_int_approximation x662))
(assert (axiom_int_approximation x664))
(assert (axiom_int_approximation x667))
(assert (axiom_int_approximation x668))
(assert (axiom_int_approximation x673))
(assert (axiom_int_approximation x674))
(assert (axiom_int_approximation x676))
(assert (axiom_int_approximation x677))
(assert (axiom_int_approximation x679))
(assert (axiom_int_approximation x68))
(assert (axiom_int_approximation x681))
(assert (axiom_int_approximation x682))
(assert (axiom_int_approximation x683))
(assert (axiom_int_approximation x686))
(assert (axiom_int_approximation x690))
(assert (axiom_int_approximation x691))
(assert (axiom_int_approximation x692))
(assert (axiom_int_approximation x694))
(assert (axiom_int_approximation x695))
(assert (axiom_int_approximation x696))
(assert (axiom_int_approximation x697))
(assert (axiom_int_approximation x698))
(assert (axiom_int_approximation x7))
(assert (axiom_int_approximation x70))
(assert (axiom_int_approximation x700))
(assert (axiom_int_approximation x710))
(assert (axiom_int_approximation x713))
(assert (axiom_int_approximation x716))
(assert (axiom_int_approximation x717))
(assert (axiom_int_approximation x718))
(assert (axiom_int_approximation x720))
(assert (axiom_int_approximation x725))
(assert (axiom_int_approximation x726))
(assert (axiom_int_approximation x729))
(assert (axiom_int_approximation x732))
(assert (axiom_int_approximation x734))
(assert (axiom_int_approximation x739))
(assert (axiom_int_approximation x744))
(assert (axiom_int_approximation x749))
(assert (axiom_int_approximation x75))
(assert (axiom_int_approximation x751))
(assert (axiom_int_approximation x754))
(assert (axiom_int_approximation x76))
(assert (axiom_int_approximation x760))
(assert (axiom_int_approximation x763))
(assert (axiom_int_approximation x766))
(assert (axiom_int_approximation x770))
(assert (axiom_int_approximation x773))
(assert (axiom_int_approximation x784))
(assert (axiom_int_approximation x786))
(assert (axiom_int_approximation x787))
(assert (axiom_int_approximation x792))
(assert (axiom_int_approximation x796))
(assert (axiom_int_approximation x798))
(assert (axiom_int_approximation x8))
(assert (axiom_int_approximation x801))
(assert (axiom_int_approximation x804))
(assert (axiom_int_approximation x805))
(assert (axiom_int_approximation x806))
(assert (axiom_int_approximation x807))
(assert (axiom_int_approximation x809))
(assert (axiom_int_approximation x810))
(assert (axiom_int_approximation x811))
(assert (axiom_int_approximation x812))
(assert (axiom_int_approximation x816))
(assert (axiom_int_approximation x818))
(assert (axiom_int_approximation x819))
(assert (axiom_int_approximation x825))
(assert (axiom_int_approximation x826))
(assert (axiom_int_approximation x83))
(assert (axiom_int_approximation x831))
(assert (axiom_int_approximation x834))
(assert (axiom_int_approximation x835))
(assert (axiom_int_approximation x837))
(assert (axiom_int_approximation x838))
(assert (axiom_int_approximation x839))
(assert (axiom_int_approximation x840))
(assert (axiom_int_approximation x844))
(assert (axiom_int_approximation x845))
(assert (axiom_int_approximation x847))
(assert (axiom_int_approximation x849))
(assert (axiom_int_approximation x850))
(assert (axiom_int_approximation x853))
(assert (axiom_int_approximation x855))
(assert (axiom_int_approximation x860))
(assert (axiom_int_approximation x861))
(assert (axiom_int_approximation x862))
(assert (axiom_int_approximation x865))
(assert (axiom_int_approximation x867))
(assert (axiom_int_approximation x869))
(assert (axiom_int_approximation x87))
(assert (axiom_int_approximation x876))
(assert (axiom_int_approximation x878))
(assert (axiom_int_approximation x883))
(assert (axiom_int_approximation x887))
(assert (axiom_int_approximation x889))
(assert (axiom_int_approximation x892))
(assert (axiom_int_approximation x893))
(assert (axiom_int_approximation x894))
(assert (axiom_int_approximation x899))
(assert (axiom_int_approximation x90))
(assert (axiom_int_approximation x905))
(assert (axiom_int_approximation x907))
(assert (axiom_int_approximation x91))
(assert (axiom_int_approximation x910))
(assert (axiom_int_approximation x913))
(assert (axiom_int_approximation x914))
(assert (axiom_int_approximation x915))
(assert (axiom_int_approximation x916))
(assert (axiom_int_approximation x918))
(assert (axiom_int_approximation x92))
(assert (axiom_int_approximation x920))
(assert (axiom_int_approximation x921))
(assert (axiom_int_approximation x922))
(assert (axiom_int_approximation x924))
(assert (axiom_int_approximation x927))
(assert (axiom_int_approximation x929))
(assert (axiom_int_approximation x933))
(assert (axiom_int_approximation x936))
(assert (axiom_int_approximation x937))
(assert (axiom_int_approximation x945))
(assert (axiom_int_approximation x95))
(assert (axiom_int_approximation x951))
(assert (axiom_int_approximation x956))
(assert (axiom_int_approximation x958))
(assert (axiom_int_approximation x96))
(assert (axiom_int_approximation x960))
(assert (axiom_int_approximation x961))
(assert (axiom_int_approximation x963))
(assert (axiom_int_approximation x966))
(assert (axiom_int_approximation x969))
(assert (axiom_int_approximation x97))
(assert (axiom_int_approximation x971))
(assert (axiom_int_approximation x979))
(assert (axiom_int_approximation x98))
(assert (axiom_int_approximation x981))
(assert (axiom_int_approximation x982))
(assert (axiom_int_approximation x983))
(assert (axiom_int_approximation x985))
(assert (axiom_int_approximation x986))
(assert (axiom_int_approximation x987))
(assert (axiom_int_approximation x99))
(assert (axiom_int_approximation x990))
(assert (axiom_int_approximation x996))
(assert (axiom_int_approximation x997))
(assert (axiom_int_approximation x999))
(assert (x172 x1486))
(assert (x172 x801))
(assert (= (x1119 864) (x1885 864)))
(assert (= (x1383 672) (x1282 672)))
(assert (= (x783 352) (x989 352)))
(assert (x172 x1560))
(assert (x172 x635))
(assert (= (x1258 1020253707) (x1428 1020253707)))
(assert (= (x1501 256) (x517 256)))
(assert (x172 x1562))
(assert (= (+ (x660 x1071) 8) (x660 (x842 x1071 8))))
(assert (x172 x287))
(assert (=> (< (- (x1345 160) 1) 10000) (= (x1428 (x1345 160)) (x1258 (x1345 160)))))
(assert (x172 x1143))
(assert (= x1406 (=> (and (not (= 1851080549 x1772)) (not (= 961581905 x1772)) (not (= 2484372501 x1772)) (not (= 3963136098 x1772)) (not (= 2209625481 x1772)) (not (= 3296657447 x1772)) (not (= x1772 2757214935)) (not (= 464926286 x1772)) (not (= 3092021830 x1772)) (= (< 0 x389) x882) (not (= x1772 596573372)) (not (= 2681579215 x1772)) (not (= x1772 1888058147)) (not (= 3065339685 x1772)) (not (= x1772 3504541104)) (not (= 629314576 x1772)) (not (= x1772 1401663147)) (not (= 3567397854 x1772)) (= x1772 1020253707) (= x389 (x957 (x1258 0))) (not (= x1772 2835717307)) (not (= 31576340 x1772)) (not (= x1772 348537858)) (not (= 4267106866 x1772)) (not (= 2869116585 x1772)) (not (= x1772 157198259)) (not (= 1977493762 x1772)) (not (= 2052391781 x1772)) (not (= x1772 599290589)) (not (= x1772 2780307423)) (not (= 2316151882 x1772)) (not (= x1772 3184006219))) (and (=> x882 x891) (=> (not x882) x1090)))))
(assert (x172 x1365))
(assert (x655 (x512 160)))
(assert (= (ite (= (x1258 0) x1205) 1 (x520 x1205)) (x1055 x1205)))
(assert (= (x1692 640) (x666 640)))
(assert (x172 x1894))
(assert (= (x1746 320) (x1229 320)))
(assert (= (x513 864) (x836 864)))
(assert (=> (> (+ 10000 1) (x512 128)) (= (x1258 (x512 128)) (x1428 (x512 128)))))
(assert (= (x715 320) (x548 320)))
(assert (= (x836 288) (x513 288)))
(assert (x172 x509))
(assert (= (x908 320) (x15 320)))
(assert (= (x1370 704) (x1014 704)))
(assert (= (x386 352) (x25 352)))
(assert (= (x1425 x527) (ite (= x527 (x1258 0)) 1 (x957 x527))))
(assert (= (=> (and (= (not (< 0 x1252)) x972) (= x115 (x1163 (+ x471 17))) (= x380 (x829 (x1428 x115))) (= (x802 896) x1252) (= (x1237 928) x471)) (and x487 x972)) x872))
(assert (x172 x1089))
(assert (x655 (x158 128)))
(assert (x172 x143))
(assert (= (and x1057 x583) x102))
(assert (x172 x226))
(assert (= x215 x144))
(assert (x172 x590))
(assert (= (x1428 3963136098) (x1258 3963136098)))
(assert (x172 x555))
(assert (= (x618 352) (x1728 352)))
(assert (x172 x692))
(assert (=> (> (+ 10000 1) (x1739 160)) (= (x1428 (x1739 160)) (x1258 (x1739 160)))))
(assert (= (x1898 320) (x688 320)))
(assert (= (x1124 736) (x735 736)))
(assert (= (x989 704) (x783 704)))
(assert (= (x244 224) (x1491 224)))
(assert (= (x1335 704) (x1808 704)))
(assert (x172 x921))
(assert (= (ite (and x624 x569 x575) (ite (and x624 x575 x569 x890) (x1375 (x1428 274184521717934524641157099916833587200)) (x785 (x1428 274184521717934524641157099916833587200))) (x785 (x1428 274184521717934524641157099916833587200))) (x848 (x1428 274184521717934524641157099916833587200))))
(assert (x172 x1302))
(assert (= (x158 768) (x1724 768)))
(assert (x172 x812))
(assert (x172 x725))
(assert (x172 x1311))
(assert (= x1248 (=> (and (= (< x1424 x636) x1698) (= (x1282 768) x636) (= x1206 (x1383 992)) (= (x1282 960) x1424)) (and (=> x1698 x179) (=> (not x1698) x215)))))
(assert (= x1841 (x1652 320)))
(assert (x172 x524))
(assert (x172 x999))
(assert (x172 x1599))
(assert (x172 x6))
(assert (x172 x914))
(assert (x172 x459))
(assert (= (x1335 640) (x1808 640)))
(assert (= (x618 736) (x1728 736)))
(assert (= x1500 (=> (and (= x276 (x939 768)) (= x1847 (< x1804 x276)) (= (x589 928) x1573) (= x1804 (x939 896))) (and (=> (not x1847) x525) (=> x1847 x384)))))
(assert (x172 x695))
(assert (x172 x819))
(assert (x172 x395))
(assert (x172 x1118))
(assert (= (ite (= (x1258 10) (x1258 0)) 1 (x957 (x1258 10))) (x1425 (x1258 10))))
(assert (= x1255 (x1194 736)))
(assert (x172 x751))
(assert (x172 x1796))
(assert (x172 x376))
(assert (x172 x1310))
(assert (=> (< (- (x1335 128) 1) 10000) (= (x1428 (x1335 128)) (x1258 (x1335 128)))))
(assert (x172 x838))
(assert (x172 x1490))
(assert (= x113 (=> (= x1057 (> x298 31)) (and (=> x1057 x1584) (=> (not x1057) x891)))))
(assert (= x1312 (x1848 288)))
(assert (= (x660 (x842 x82 6)) (+ (x660 x82) 6)))
(assert (x655 (x1416 128)))
(assert (= (ite (and x1160 x325) (x722 640) (x771 640)) (x1354 640)))
(assert (x172 x1243))
(assert (x655 (x153 160)))
(assert (= (x283 992) (x1262 992)))
(assert (= (x1643 352) (x1040 352)))
(assert (=> (> (+ 10000 1) (x153 160)) (= (x1258 (x153 160)) (x1428 (x153 160)))))
(assert (x172 x433))
(assert (x172 x595))
(assert (= (x939 864) (x589 864)))
(assert (= (x1157 896) (x274 896)))
(assert (= (x1620 864) (x1870 864)))
(assert (x172 x1101))
(assert (= (x1869 736) (x738 736)))
(assert (= (x1797 352) (x475 352)))
(assert (x172 x334))
(assert (= (x512 352) (x1788 352)))
(assert (=> (< (- (x331 160) 1) 10000) (= (x1258 (x331 160)) (x1428 (x331 160)))))
(assert (=> (< (- x1033 1) 10000) (= (x1258 x1033) (x1428 x1033))))
(assert (x172 x1697))
(assert (x172 x479))
(assert (= (x1728 1024) (x618 1024)))
(assert (= (x1582 736) (x574 736)))
(assert (= (x475 672) (x1797 672)))
(assert (x172 x804))
(assert (x655 (x1246 160)))
(assert (= (x771 768) (x81 768)))
(assert (= (x1428 464926286) (x1258 464926286)))
(assert (= (x660 (x1258 3184006219)) 3184006219))
(assert (= (ite (= (x1258 0) (x1428 x209)) 1 (x520 (x1428 x209))) (x1055 (x1428 x209))))
(assert (= (x1741 320) (x689 320)))
(assert (x172 x1605))
(assert (= (=> (and (= (> x306 0) x671) (or (and (> 4294967296 x1629) (= 1 x8) x671) (and (not x671) (= x306 x8)))) x1152) x215))
(assert (= (and x789 x1613) x1382))
(assert (x172 x296))
(assert (= (x1724 704) (x158 704)))
(assert (= (x1848 928) (x371 928)))
(assert (= (x153 928) (x1652 928)))
(assert (x172 x1488))
(assert (= (x236 768) (ite (and x1529 x88) (x1910 768) (x1212 768))))
(assert (=> (> (+ 10000 1) (x836 128)) (= (x1258 (x836 128)) (x1428 (x836 128)))))
(assert (= x1680 (or (and x935 x65) (and (not x242) x621) (and x944 x223) (and x746 (not x642)) (and (not x1057) x583) (and x1493 x743) (and x1016 x84) (and x310 x823) (and (not x218) x142) (and (not x789) x1613) (and x911 x1623) (and x1042 x1795) (and x1665 x1483) (and x1872 x1292) (and x489 x755) (and x1321 x1861) (and x321 x947) (and x1382 (not x1803)) (and x1899 x1631) (and x94 x1844) (and x188 x1758) (and x102 x765) (and x925 x938) (and x364 (not x521)) (and x1776 x1116) (and x327 x1350) (and x851 x559) (and x1034 x1834) (and x1876 (not x672)) (and x706 x650) (and (not x1114) x584) (and x764 x1465) (and x615 x943) (and x870 x285) (and x1554 x266) (and x632 x1813) (and x1295 x701) (and (not x1077) x776) (and (not x719) x1198) (and x1135 x539) (and x484 x1454) (and (not x275) x194) (and x1799 x1233) (and x1733 x1461) (and x507 (not x1596)) (and x241 x827) (and x338 x1762) (and x1417 x280) (and x1103 x1191) (and x882 x863) (and x1313 x1204) (and x322 (not x1604)) (and x1211 x1190) (and x399 x191) (and (not x736) x1368) (and (not x1753) x1682) (and x1858 x752) (and x373 (not x1719)))))
(assert (x172 x1268))
(assert (x172 x1818))
(assert (x172 x1666))
(assert (= (and x285 (not x870)) x1813))
(assert (= (x934 800) (x1212 800)))
(assert (x172 x134))
(assert (= (x1282 864) (x1383 864)))
(assert (= (x1006 928) (x1505 928)))
(assert (= (x403 224) (x1462 224)))
(assert (= (x1124 352) (x735 352)))
(assert (x172 x185))
(assert (= (x1723 736) (x1508 736)))
(assert (= (+ 2 (x660 x1404)) (x660 (x842 x1404 2))))
(assert (= (+ 6 (x660 x1884)) (x660 (x842 x1884 6))))
(assert (x655 (x1351 160)))
(assert (= (x1582 768) (x574 768)))
(assert (x172 x232))
(assert (= (and x752 (not x1858)) x1713))
(assert (= (x515 288) (x251 288)))
(assert (= (x1425 x345) (ite (= x345 (x1258 0)) 1 (x957 x345))))
(assert (x172 x304))
(assert (x172 x480))
(assert (= (ite (= (x1258 0) (x1258 9)) 1 (x520 (x1258 9))) (x1055 (x1258 9))))
(assert (x172 x425))
(assert (= (x618 1056) x257))
(assert (x172 x1816))
(assert (= (x934 640) (x1212 640)))
(assert (x172 x1260))
(assert (x172 x1224))
(assert (= (x1652 640) (x153 640)))
(assert (= (x660 (x1258 2484372501)) 2484372501))
(assert (=> (< (- (x877 160) 1) 10000) (= (x1258 (x877 160)) (x1428 (x877 160)))))
(assert (= (x828 320) (x1574 320)))
(assert (= (x386 768) (x25 768)))
(assert (x172 x502))
(assert (x172 x1291))
(assert (= (x1157 864) (x274 864)))
(assert (= (x248 352) (x852 352)))
(assert (= (ite (= (x1258 44) (x1258 0)) 1 (x520 (x1258 44))) (x1245 (x1258 44))))
(assert (x172 x1309))
(assert (= (ite (and x1568 x1156) (x1207 (x1428 x129)) (x897 (x1428 x129))) (x1018 (x1428 x129))))
(assert (x172 x41))
(assert (= (x880 (x1428 274184521717934524641157099916833587200)) (ite (and x1321 (not x1861)) (ite (and x1134 x1357 x1272) (x36 (x1428 274184521717934524641157099916833587200)) (x1018 (x1428 274184521717934524641157099916833587200))) (x1018 (x1428 274184521717934524641157099916833587200)))))
(assert (= (x236 640) (ite (and x1529 x88) (x1910 640) (x1212 640))))
(assert (= (x326 352) (x50 352)))
(assert (= x1465 (and (not x188) x1758)))
(assert (= (x689 736) (x1741 736)))
(assert (x172 x476))
(assert (= (=> (and (= (x1425 (x1258 9)) x766) (= x1766 (> x766 0)) (= x131 (x1197 736))) (and (=> (and (= x1859 (x514 352)) (not x1766)) x1347) (=> (and (or (and (< x214 4294967296) (= 1 x1702) x967) (and (not x967) (= x1702 x1402))) (= (x514 352) x1744) (= x967 (> x1402 0)) x1766) x758))) x703))
(assert (= (x771 640) (x81 640)))
(assert (= x1883 (=> (= x1077 (< 31 x214)) (and (=> x1077 x224) (=> (not x1077) x891)))))
(assert (x172 x809))
(assert (x172 x845))
(assert (x172 x987))
(assert (= (x660 (x1428 (x1238 128))) (x1238 128)))
(assert (x172 x1172))
(assert (= (x1425 x1538) (ite (= x1538 (x1258 0)) 1 (x957 x1538))))
(assert (= (x877 160) (x660 (x1428 (x877 160)))))
(assert (= x1454 (and x1413 x1887)))
(assert (= (x1120 704) (x1504 704)))
(assert (= (=> (and (= (= x1348 0) x1840) (= x167 (x572 256)) (= x1471 (uninterp_mod (* x167 x1348) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= x925 (= 0 (ite x1647 1 0))) (= (x1425 (x1258 43)) x1296) (= x1616 (- (/ x1471 x1348) (uninterp_frac x1471 x1348))) (= (or x1840 x1492) x1647) (= (= x1616 x167) x1492) (= (x572 256) x819) (= x1348 (x572 224))) (and (=> (not x925) x61) (=> x925 x891))) x1742))
(assert (= x894 (x588 576)))
(assert (= (=> (and (= (uninterp_mod (* x1171 x1671) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x816) (= x484 (= 0 (ite x906 1 0))) (= x1846 (= x1473 x1671)) (= (= x1171 0) x991) (= x1473 (- (/ x816 x1171) (uninterp_frac x816 x1171))) (= (x103 256) x1407) (= (x103 256) x1671) (= (x103 224) x1171) (= x1219 (x567 (x1258 43))) (= x906 (or x1846 x991))) (and (=> x484 x891) (=> (not x484) x1908))) x51))
(assert (x655 x129))
(assert (=> (< (- (x348 128) 1) 10000) (= (x1428 (x348 128)) (x1258 (x348 128)))))
(assert (x172 x1458))
(assert (x172 x1534))
(assert (x172 x147))
(assert (= (x660 (x1258 961581905)) 961581905))
(assert (x172 x157))
(assert (= (x158 736) (x1724 736)))
(assert (x172 x1137))
(assert (x172 x240))
(assert (= (x513 736) (x836 736)))
(assert (= (x1119 640) (x1885 640)))
(assert (x172 x1177))
(assert (= (x512 128) (x660 (x1428 (x512 128)))))
(assert (= (x1508 640) (x1723 640)))
(assert (= (=> (and (= (< 0 x227) x896) (= (x1163 (+ x1388 17)) x1856) (= x1388 (x25 928)) (= (x1245 (x1428 x1856)) x1091) (= x227 (x386 896))) (and (=> (not x896) x166) (=> (and (or (and (= x1759 x643) (not x1552)) (and x1552 (= 1 x643) (< x1486 4294967296))) x896 (= (> x1759 0) x1552)) x420))) x1689))
(assert (x172 x1696))
(assert (= (x788 768) (x656 768)))
(assert (x172 x1867))
(assert (= (x660 (x1428 (x12 160))) (x12 160)))
(assert (x172 x1158))
(assert (x172 x1293))
(assert (= x72 (and x521 x364)))
(assert (x172 x1130))
(assert (x172 x297))
(assert (x172 x1319))
(assert (x172 x867))
(assert (x172 x1062))
(assert (x172 x1729))
(assert (= (x545 928) (x693 928)))
(assert (x172 x24))
(assert (= (x1055 x1236) (ite (= (x1258 0) x1236) 1 (x520 x1236))))
(assert (= x1175 (x783 384)))
(assert (x655 x209))
(assert (= (x1501 640) (x517 640)))
(assert (= (x1258 1889567281) (x1428 1889567281)))
(assert (x172 x1866))
(assert (x172 x593))
(assert (= (x1354 768) (ite (and x1160 x325) (x722 768) (x771 768))))
(assert (= x312 (and x868 x1541)))
(assert (= (x688 928) (x1898 928)))
(assert (= (x1788 768) (x512 768)))
(assert (x655 (x1238 160)))
(assert (= (x153 224) (x1652 224)))
(assert (x172 x208))
(assert (x172 x1451))
(assert (= (x618 672) (x1728 672)))
(assert (= (x968 928) (x1339 928)))
(assert (x655 x1033))
(assert (= (x772 768) (x663 768)))
(assert (= (x1462 352) (x403 352)))
(assert (= (x1245 x1097) (ite (= (x1258 0) x1097) 1 (x520 x1097))))
(assert (= (x1839 320) (x597 320)))
(assert (x172 x924))
(assert (= (x588 768) (x1145 768)))
(assert (x172 x1718))
(assert (= x364 (and x1596 x507)))
(assert (= (x1237 736) (x497 736)))
(assert (= (x1475 352) (x1597 352)))
(assert (= (ite (= x151 (x1258 0)) 1 (x520 x151)) (x1055 x151)))
(assert (= (x475 736) (x1797 736)))
(assert (= (x326 640) (x50 640)))
(assert (= (x1582 224) (x574 224)))
(assert (x172 x850))
(assert (= x325 x142))
(assert (= (x1335 320) (x1808 320)))
(assert (= (x386 864) (x25 864)))
(assert (= (x1724 960) (x158 960)))
(assert (x172 x314))
(assert (= (x1501 736) (x517 736)))
(assert (x172 x966))
(assert (x172 x1398))
(assert (x172 x667))
(assert (= (x1258 3296657447) (x1428 3296657447)))
(assert (= (ite (= (x1258 0) x518) 1 (x520 x518)) (x1245 x518)))
(assert (x172 x1856))
(assert (= (ite (= (x1258 0) x546) 1 (x520 x546)) (x1245 x546)))
(assert (= (x980 960) (x216 960)))
(assert (= (x660 (x842 x669 2)) (+ 2 (x660 x669))))
(assert (= (x1746 768) (x1229 768)))
(assert (=> (> (+ 10000 1) x115) (= (x1258 x115) (x1428 x115))))
(assert (= (x660 (x1428 (x371 160))) (x371 160)))
(assert (x172 x760))
(assert (x172 x1092))
(assert (x172 x541))
(assert (= (x217 672) (x742 672)))
(assert (= (x788 224) (x656 224)))
(assert (x172 x773))
(assert (= (x1416 160) (x660 (x1428 (x1416 160)))))
(assert (= (x387 320) (x1497 320)))
(assert (x172 x209))
(assert (= 596573372 (x660 (x1258 596573372))))
(assert (x172 x1600))
(assert (= (x1504 352) (x1120 352)))
(assert (= (x660 (x842 x128 2)) (+ (x660 x128) 2)))
(assert (x172 x76))
(assert (x172 x1526))
(assert (= (=> (and (= (x1897 (- x1224 x1738)) x1611) (= x1734 (x949 (x1258 40))) (= x1861 (< x1734 x1602)) (= (x284 1056) x1602)) (and (=> x1861 x891) (=> (and (= (x1897 (- x1734 x1602)) x1651) (not x1861)) x356))) x1434))
(assert (x172 x1012))
(assert (x172 x60))
(assert (x172 x1573))
(assert (= (x783 768) (x989 768)))
(assert (x172 x11))
(assert (x172 x1686))
(assert (= (x1218 672) (x279 672)))
(assert (= (x660 (x1258 2209625481)) 2209625481))
(assert (= (x660 (x1258 1020253707)) 1020253707))
(assert (x172 x1841))
(assert (= (x153 352) (x1652 352)))
(assert (= (x660 (x842 x1162 8)) (+ (x660 x1162) 8)))
(assert (x172 x1324))
(assert (= (x1354 672) (ite (and x325 x1160) (x722 672) (x771 672))))
(assert (= (x771 800) (x81 800)))
(assert (x172 x115))
(assert (= (x1428 31576340) (x1258 31576340)))
(assert (= (x371 736) (x1848 736)))
(assert (= (ite (= x63 (x1258 0)) 1 (x520 x63)) (x1245 x63)))
(assert (= (x404 928) (x1242 928)))
(assert (x172 x1547))
(assert (= (x1242 896) (x404 896)))
(assert (x172 x451))
(assert (x172 x654))
(assert (=> (> (+ 10000 1) (x331 128)) (= (x1258 (x331 128)) (x1428 (x331 128)))))
(assert (x172 x1388))
(assert (x172 x683))
(assert (= x327 (and x1713 (not x469))))
(assert (x172 x648))
(assert (x172 x410))
(assert (x172 x152))
(assert (= (x429 352) (x1044 352)))
(assert (x172 x969))
(assert (x172 x696))
(assert (=> (< (- (x196 160) 1) 10000) (= (x1428 (x196 160)) (x1258 (x196 160)))))
(assert (= x1304 (or (and x950 x378) x1622 (and x72 (not x1698)))))
(assert (x655 (x1411 128)))
(assert (= (x589 672) (x939 672)))
(assert (x172 x961))
(assert (x172 x1075))
(assert (= (x515 768) (x251 768)))
(assert (= (x1370 736) (x1014 736)))
(assert (x172 x787))
(assert (= (x135 320) (x360 320)))
(assert (= (x756 864) (x419 864)))
(assert (x172 x784))
(assert (x172 x834))
(assert (= (x783 672) (x989 672)))
(assert (= (x1870 352) (x1620 352)))
(assert (x172 x1027))
(assert (x172 x1487))
(assert (= (x50 768) (x326 768)))
(assert (= (x153 672) (x1652 672)))
(assert (= x900 (=> (= (< 0 x1098) x642) (and (=> (not x642) x891) (=> x642 x1822)))))
(assert (x172 x391))
(assert (x172 x369))
(assert (x172 x1144))
(assert (x172 x1624))
(assert (x172 x1323))
(assert (x172 x83))
(assert (= (x1497 736) (x387 736)))
(assert (= (x1723 352) (x1508 352)))
(assert (= (x1508 864) (x1723 864)))
(assert (x172 x1874))
(assert (=> (< (- (x448 128) 1) 10000) (= (x1258 (x448 128)) (x1428 (x448 128)))))
(assert (x172 x1535))
(assert (= (x955 736) (x127 736)))
(assert (= (x1225 736) (x196 736)))
(assert (x172 x1219))
(assert (= (x517 320) (x1501 320)))
(assert (= (x928 704) (x1901 704)))
(assert (= (x1885 704) (x1119 704)))
(assert (x172 x98))
(assert (= (x127 352) (x955 352)))
(assert (x172 x1832))
(assert (= (=> (and (not (>= (+ x55 x463) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= x463 (x1056 768)) (= x1283 (x1056 864)) (= (= x1110 x1397) x1285) (= x807 (- (/ x1001 10000) (uninterp_frac x1001 10000))) (= (x1163 (+ x55 x463)) x1397) (or (and (< x698 4294967296) x203 (= 1 x1863)) (and (= x1472 x1863) (not x203))) (= (- (/ x1001 x297) (uninterp_frac x1001 x297)) x1110) (> x1863 0) (= x55 (x1056 864)) (= x1012 (x1504 768)) (or (not x902) (and (not (> x918 x1825)) (= x918 (x964 320)) (= x1381 (uninterp_mod (* x1661 x1729) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= (x1277 416) x883) (= x1067 (ite x558 1 0)) (= x676 (x1163 (+ x1324 x1047))) (= x532 (> 1000000000000000000 x963)) (= (x1433 768) x1324) (= x1661 (x1897 (- x981 x1625))) (= x379 (< 0 x1477)) (= x963 (x1392 224)) (= x109 (x1504 896)) (= x726 (- (/ x1381 x1661) (uninterp_frac x1381 x1661))) (= (x1147 (x1258 44)) x1729) (= (x761 640) x473) (> x145 31) (not (> x1886 x473)) (= x558 (or x731 x1484)) (= (x440 384) x1477) (not (<= 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x457 x958))) (not (>= (+ x1047 x1324) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= x1625 (x1147 (x1258 41))) (or (not x379) (and (= (= 0 x1217) x1235) (= x1543 (or x1235 x105)) (= (uninterp_mod (* x1217 x635) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x1546) (= (ite x1543 1 0) x75) (= x1263 (- (/ x1546 x1843) (uninterp_frac x1546 x1843))) (= x1050 (- (/ x1546 x1217) (uninterp_frac x1546 x1217))) (= (x440 384) x1843) (= (= x1050 x635) x105) x379 (= x1217 (x440 352)) (not (= x1843 0)) (= (x1147 (x1258 9)) x635) (not (= 0 x75)))) (= (x535 288) x1825) (= (x1748 928) x381) (> x415 0) (= (x761 736) x1886) (= (x1897 (- x1825 x918)) x406) (or (and (= (x1897 (- x1669 x1092)) x1717) (= x1669 (x17 256)) (= (x17 256) x579) (= x1557 (ite x1038 1 0)) (= x180 (= x749 x579)) (= x1866 (x17 224)) (= x1830 (= x1866 0)) (= x749 (- (/ x247 x1866) (uninterp_frac x247 x1866))) (not (< x1669 x1092)) (= x247 (uninterp_mod (* x1866 x579) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) x532 (= (- (/ x247 1000000000000000000) (uninterp_frac x247 1000000000000000000)) x1092) (= x1038 (or x1830 x180)) (= x560 (x1147 (x1258 43))) (not (= x1557 0))) (not x532)) (= (x1147 (x1258 40)) x958) (= x1484 (= 0 x1661)) (= x1182 (x1163 (+ x457 x958))) (= (x430 224) x457) (or (and (not x357) (= x119 x415)) (and (> 4294967296 x145) (= 1 x415) x357)) (not (> x1625 x7)) (= (= x1729 x726) x731) (= (x1433 864) x1047) (not (= x1067 0)) x902 (= (> x119 0) x357))) (> x698 31) (= x203 (< 0 x1472)) (= x1398 (x1504 896)) (not (= 0 x496)) (= (ite x1386 1 0) x496) (= (< x1398 x1012) x902) (= (x1056 704) x297) (= x89 (= x297 0)) (= (uninterp_mod (* x1397 x297) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x1001) (= (x1120 928) x929) (not (> x1283 x807)) (= (or x89 x1285) x1386)) x1322) x1793))
(assert (= (x1225 672) (x196 672)))
(assert (= (x1475 768) (x1597 768)))
(assert (= (x1212 320) (x934 320)))
(assert (= (x1504 864) (x1120 864)))
(assert (= (x1014 768) (x1370 768)))
(assert (= (x1197 640) (x514 640)))
(assert (= (x1504 736) (x1120 736)))
(assert (= (x735 896) (x1124 896)))
(assert (= (x1237 768) (x497 768)))
(assert (= (x1739 160) (x660 (x1428 (x1739 160)))))
(assert (x172 x1767))
(assert (= (x1848 1056) (x371 1056)))
(assert (= (=> (and (= (x1897 (- x1363 x1423)) x257) (= x459 (x618 1024)) (= (> x459 0) x994)) (and (=> (not x994) x820) (=> x994 x795))) x1264))
(assert (= (x1428 2484372501) (x1258 2484372501)))
(assert (= (x1746 736) (x1229 736)))
(assert (x172 x1836))
(assert (x172 x1317))
(assert (= (x771 672) (x81 672)))
(assert (= (x660 (x842 x340 6)) (+ 6 (x660 x340))))
(assert (x172 x679))
(assert (= (x852 768) (x248 768)))
(assert (x172 x1471))
(assert (x172 x1263))
(assert (= (x1392 704) (x535 704)))
(assert (= (x59 640) (x1503 640)))
(assert (x172 x141))
(assert (= x115 (x660 (x1428 x115))))
(assert (= x373 (and x1465 (not x764))))
(assert (x172 x496))
(assert (= (x1212 352) (x934 352)))
(assert (= (x589 768) (x939 768)))
(assert (= (x1258 348537858) (x1428 348537858)))
(assert (x172 x937))
(assert (x172 x807))
(assert (= (=> (and (= x649 (x458 320)) (= (> x649 x454) x1554)) (and (=> x1554 x891) (=> (not x1554) x822))) x859))
(assert (= x1321 (and (not x223) x944)))
(assert (x172 x133))
(assert (x172 x316))
(assert (= (x1723 704) (x1508 704)))
(assert (x172 x732))
(assert (= (ite (= (x1258 0) x450) 1 (x520 x450)) (x1245 x450)))
(assert (x172 x806))
(assert (x172 x1283))
(assert (= x817 (and x575 x624)))
(assert (= x1573 (x939 896)))
(assert (x172 x1415))
(assert (x172 x256))
(assert (= (x1503 672) (x59 672)))
(assert (= (x1870 224) (x1620 224)))
(assert (= (x404 960) (x1242 960)))
(assert (x172 x29))
(assert (x172 x315))
(assert (x172 x92))
(assert (=> (< (- (x1351 160) 1) 10000) (= (x1428 (x1351 160)) (x1258 (x1351 160)))))
(assert (x172 x805))
(assert (x172 x335))
(assert (= x665 x1668))
(assert (= (x1339 896) (x968 896)))
(assert (= (x663 672) (x772 672)))
(assert (x172 x990))
(assert (x655 (x836 128)))
(assert (= (x135 864) (x360 864)))
(assert (= (x1258 1461501637330902918203684832716283019655932542975) (x1428 1461501637330902918203684832716283019655932542975)))
(assert (= (x968 736) (x1339 736)))
(assert (= x91 (x1839 896)))
(assert (x172 x361))
(assert (x655 x1821))
(assert (= x1662 (or (and (not x896) x337) x1396)))
(assert (x172 x1749))
(assert (x172 x536))
(assert (= x1007 (x1788 992)))
(assert (x172 x1082))
(assert (= (x1124 960) (x735 960)))
(assert (x172 x529))
(assert (= (ite (and x1160 x325) (x722 800) (x771 800)) (x1354 800)))
(assert (= x325 (or (and x1294 (not x1766)) (and x706 (not x650)))))
(assert (=> (< (- (x959 160) 1) 10000) (= (x1428 (x959 160)) (x1258 (x959 160)))))
(assert (= (x656 288) (x788 288)))
(assert (= (x1491 736) (x244 736)))
(assert (= (ite (= (x1258 0) (x1258 41)) 1 (x520 (x1258 41))) (x1055 (x1258 41))))
(assert (= (x1055 x1555) (ite (= (x1258 0) x1555) 1 (x520 x1555))))
(assert (= (x1898 864) (x688 864)))
(assert (= x1907 (x429 224)))
(assert (x172 x330))
(assert (x172 x477))
(assert (= (x1780 576) x1770))
(assert (x172 x392))
(assert (=> (< (- (x1335 160) 1) 10000) (= (x1428 (x1335 160)) (x1258 (x1335 160)))))
(assert (= (x788 320) (x656 320)))
(assert (= (x660 (x1428 x1708)) x1708))
(assert (x172 x1001))
(assert (x172 x1325))
(assert (= (x1788 640) (x512 640)))
(assert (= (x15 768) (x908 768)))
(assert (= (and x817 (not x228)) x1396))
(assert (= (x663 864) (x772 864)))
(assert (= (x1102 (x1428 x809)) (ite (and x1256 x1127 x613) (ite (and x613 x1127 x1256 x885) (x992 (x1428 x809)) (x785 (x1428 x809))) (x785 (x1428 x809)))))
(assert (= (x1119 960) (x1885 960)))
(assert (= (x660 (x1258 2869116585)) 2869116585))
(assert (=> (< (- (x959 128) 1) 10000) (= (x1428 (x959 128)) (x1258 (x959 128)))))
(assert (= x624 (and x896 x337)))
(assert (x172 x916))
(assert (x172 x1132))
(assert (x172 x1873))
(assert (=> (> (+ 10000 1) (x371 128)) (= (x1428 (x371 128)) (x1258 (x371 128)))))
(assert (= (ite (= (x1258 0) (x1258 39)) 1 (x520 (x1258 39))) (x1055 (x1258 39))))
(assert (x172 x1868))
(assert (= (x15 864) (x908 864)))
(assert (x172 x561))
(assert (x172 x1333))
(assert (= (x111 672) (x1572 672)))
(assert (x172 x1278))
(assert (= x490 (x1898 1056)))
(assert (= x300 x1019))
(assert (x172 x1409))
(assert (=> (> (+ 10000 1) (x196 128)) (= (x1258 (x196 128)) (x1428 (x196 128)))))
(assert (x172 x1058))
(assert (= (x1428 2780307423) (x1258 2780307423)))
(assert (= x1190 (and x1077 x776)))
(assert (= (x1370 864) (x1014 864)))
(assert (=> (> (+ 10000 1) (x284 160)) (= (x1258 (x284 160)) (x1428 (x284 160)))))
(assert (x172 x594))
(assert (= (x1197 672) (x514 672)))
(assert (=> (> (+ 10000 1) x1708) (= (x1258 x1708) (x1428 x1708))))
(assert (x172 x1770))
(assert (=> (> (+ 10000 1) x739) (= (x1428 x739) (x1258 x739))))
(assert (=> (< (- (x1036 128) 1) 10000) (= (x1258 (x1036 128)) (x1428 (x1036 128)))))
(assert (x172 x1301))
(assert (x172 x1734))
(assert (= (x283 768) (x1262 768)))
(assert (= (x939 640) (x589 640)))
(assert (= (x1848 320) (x371 320)))
(assert (x172 x766))
(assert (x172 x1602))
(assert (x172 x1432))
(assert (= (x1282 928) (x1383 928)))
(assert (x172 x1567))
(assert (= (x589 736) (x939 736)))
(assert (= (x660 (x1428 (x1246 128))) (x1246 128)))
(assert (x172 x1254))
(assert (= x1447 (=> (and (= (x1163 (+ x1603 x1767)) x1774) (= x372 (x1306 224)) (= (x984 896) x860) (= x28 (x537 1024)) (= (x1501 288) x595) (= x1700 (x1501 256)) (= (x842 x1737 6) x1725) (= x1849 (x1425 x1725)) (= (< x595 x1700) x1034) (= (x1366 (x1428 (x517 128)) (x1428 (x517 160)) 0) x1737)) (and (=> (not x1034) x1048) (=> x1034 x891)))))
(assert (= (x15 736) (x908 736)))
(assert (= 1000000000000000000 (x660 (x1258 1000000000000000000))))
(assert (= (x1335 896) (x1808 896)))
(assert (= (or (and x1713 x469) (and x1116 (not x1776)) (and x1782 x856)) x241))
(assert (= (x641 352) (x1780 352)))
(assert (x172 x464))
(assert (= (=> (and (>= 1461501637330902918203684832716283019655932542975 x106) (not (= 2757214935 x252)) (= true (<= x112 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (not (= 3184006219 x252)) (not (= x252 2780307423)) (not (= x252 1888058147)) (>= 1461501637330902918203684832716283019655932542975 x554) (= x83 x1550) (>= x1223 0) (= x118 (x785 (x1428 274184521717934524641157099916833587200))) (= x1013 x831) (<= 0 x825) (>= 1461501637330902918203684832716283019655932542975 x1709) (not (= x252 157198259)) (= (x1572 736) x633) (>= x554 0) (not (= 2484372501 x252)) (= x235 (x1327 (x1428 274184521717934524641157099916833587200))) (= false x162) (>= 1461501637330902918203684832716283019655932542975 x825) (not (< 10000 x1222)) (not (= x252 31576340)) (not (= x252 3296657447)) (= x438 (< 0 (x1327 (x1428 274184521717934524641157099916833587200)))) (<= x1223 1461501637330902918203684832716283019655932542975) (not (= x252 1977493762)) x438 (not (= 629314576 x252)) (= x252 1020253707) (not (< 0 x1550)) (not (= 2835717307 x252)) (= x1013 x318) (= (x210 640) x452) (>= x118 0) (= 1020253707 x987) (not (= 464926286 x252)) (= x740 (x1366 (x1428 (x1572 128)) (x1428 (x1572 160)) 0)) (< 3 x112) (not (= 3092021830 x252)) (= (x1572 736) x826) (not (= 348537858 x252)) (<= 0 x1709) (= x1709 x1261) (= (x634 800) x96) (or (not x1672) (and (= x422 (x1366 (x1428 (x959 128)) (x1428 (x959 160)) 0)) (= x1358 (x1245 x422)) x1672)) (not (= 4267106866 x252)) (= x1331 (< 0 x971)) (<= x831 1461501637330902918203684832716283019655932542975) (or (and (= x163 x971) (not x1331)) (and (< x986 4294967296) x1331 (= x163 1))) (not (= 2209625481 x252)) (not (= 3504541104 x252)) (not (= x252 599290589)) (> x1193 0) (= x1544 false) (<= 0 x106) (= x1223 x1118) (= (x500 736) x754) (not (= 1401663147 x252)) (= x1222 (x500 704)) (= x1672 (= x754 115792089237316195423570985008687907853269984665640564039457584007913129639935)) (>= x831 0) (= (x1245 x740) x1684) (not (< 0 x696)) (= x7 x981) (= x106 x1013) (= x10 (< 0 x1164)) (> x235 0) (not (= x252 3065339685)) x1586 (not (= 961581905 x252)) (= x1193 (x1572 736)) (not (= 2052391781 x252)) (not (= x252 3567397854)) (= false x1414) (not (> 4 x112)) (not (= x252 596573372)) (= x1293 0) (= x1586 (= x1261 x318)) (= x1118 x556) (not (= 2316151882 x252)) (= (x1245 (x1258 9)) x1164) (not (= x252 2681579215)) (not (= 3963136098 x252)) (not (= 2869116585 x252)) (= x696 (x520 (x1258 0))) (or (and (= x1009 (x111 352)) (not x10)) (and (= x1796 (x666 288)) (= x1279 (uninterp_mod (* x732 x437) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= (= x732 x441) x22) x10 (or (not x354) (and (= x230 (x702 256)) (= x110 (x1245 (x1258 43))) (= x620 (- (/ x187 1000000000000000000) (uninterp_frac x187 1000000000000000000))) (= (x1897 (- x230 x620)) x646) (= x1176 (x702 256)) x354 (= (ite x1299 1 0) x1041) (= x1299 (or x1750 x707)) (= x707 (= x100 x1176)) (= (x702 224) x691) (= (= 0 x691) x1750) (not (> x620 x230)) (= (uninterp_mod (* x691 x1176) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x187) (= x100 (- (/ x187 x691) (uninterp_frac x187 x691))) (not (= x1041 0)))) (= x1373 (= x690 0)) (not (< x1796 x1749)) (= x1053 (x1163 (+ x304 x553))) (= x1080 (or x120 x22)) (= x792 (uninterp_mod (* x1890 x690) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= (x1245 (x1258 44)) x732) (= (ite x821 1 0) x805) (not (= 0 x1571)) (not (= 0 x1716)) (= x441 (- (/ x1279 x437) (uninterp_frac x1279 x437))) (= x553 (x1245 (x1258 40))) (= (- (/ x792 x1571) (uninterp_frac x792 x1571)) x1432) (not (>= (+ x304 x553) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= (x1367 320) x1749) (or (and (= x1507 x1697) (not x262)) (and (= 1 x1507) (< x1888 4294967296) x262)) (< 31 x1888) (not (< x7 x1288)) (= (x1897 (- x1796 x1749)) x674) (= (x1245 (x1258 41)) x1288) (= x120 (= 0 x437)) (= x690 (x111 352)) (> x1507 0) (= x1259 (x1692 224)) (= (x1601 224) x304) (= x262 (> x1697 0)) (= x1716 (ite x1080 1 0)) (= (- (/ x792 x690) (uninterp_frac x792 x690)) x1093) (= (< x1259 1000000000000000000) x354) (not (= 0 x805)) (= x437 (x1897 (- x981 x1288))) (= (x1245 (x1258 9)) x1571) (= (or x1373 x492) x821) (= (= x1890 x1093) x492) (= (x1855 384) x1890))) (not (< x1684 x633)) (= x265 false) (not (= 1851080549 x252)) (= x1062 x554)) x1266) x365))
(assert (x655 (x158 160)))
(assert (x172 x117))
(assert (= x146 (=> (= x1596 (> x1595 0)) (and (=> x1596 x592) (=> (not x1596) x891)))))
(assert (= (x1105 672) (x1785 672)))
(assert (x172 x718))
(assert (= (x440 704) (x1277 704)))
(assert (=> (< (- (x1443 160) 1) 10000) (= (x1428 (x1443 160)) (x1258 (x1443 160)))))
(assert (x172 x1054))
(assert (x172 x887))
(assert (= (ite (= (x1258 0) (x1428 x125)) 1 (x957 (x1428 x125))) (x1425 (x1428 x125))))
(assert (= x781 (or x941 (and (not x917) x312))))
(assert (x172 x252))
(assert (x172 x606))
(assert (= (x1425 (x1258 39)) (ite (= (x1258 39) (x1258 0)) 1 (x957 (x1258 39)))))
(assert (x172 x1356))
(assert (x172 x1524))
(assert (x172 x1533))
(assert (=> (< (- (x50 128) 1) 10000) (= (x1258 (x50 128)) (x1428 (x50 128)))))
(assert (x172 x1338))
(assert (= (x1901 224) x349))
(assert (x172 x1747))
(assert (= (x1724 992) x801))
(assert (= x1379 (=> (and (= x1033 (x1163 (+ x339 17))) (= x1547 (x206 896)) (= (x445 (x1428 x1033)) x1043) (= (not (> x1547 0)) x1113) (= x339 (x756 928))) (and x1113 x144))))
(assert (= (x1014 896) (x1370 896)))
(assert (x172 x1603))
(assert (x172 x457))
(assert (x172 x328))
(assert (x172 x260))
(assert (= (x1157 928) (x274 928)))
(assert (= (ite (= (x1258 41) (x1258 0)) 1 (x520 (x1258 41))) (x1245 (x1258 41))))
(assert (x172 x844))
(assert (= (x1428 1888058147) (x1258 1888058147)))
(assert (x172 x1708))
(assert (x172 x1608))
(assert (= (x1808 672) (x1335 672)))
(assert (x172 x1141))
(assert (x172 x1735))
(assert (= (x693 736) (x545 736)))
(assert (= (x283 864) (x1262 864)))
(assert (= (=> (= x1803 (> x1629 31)) (and (=> (not x1803) x891) (=> x1803 x1500))) x1241))
(assert (= (x545 352) (x693 352)))
(assert (= (x968 128) (x660 (x1428 (x968 128)))))
(assert (x172 x676))
(assert (x172 x1099))
(assert (= (x688 640) (x1898 640)))
(assert (= 0 (x857 320)))
(assert (= (x1124 768) (x735 768)))
(assert (= (x660 (x1428 (x877 128))) (x877 128)))
(assert (= (x693 896) (x545 896)))
(assert (x172 x637))
(assert (= x932 (and x613 x1127)))
(assert (= (x326 288) (x50 288)))
(assert (x172 x1590))
(assert (= (x548 640) (x715 640)))
(assert (= (x597 864) (x1839 864)))
(assert (= x266 (or (and x1413 (not x1887)) (and x823 (not x310)))))
(assert (x172 x810))
(assert (= (x1339 320) (x968 320)))
(assert (x172 x1670))
(assert (= (x854 320) 0))
(assert (x172 x505))
(assert (= x1679 (=> (and (= x467 (x1819 (x1258 9))) (= (x607 736) x260) (= (> x260 x467) x188)) (and (=> x188 x891) (=> (not x188) x1060)))))
(assert (x172 x28))
(assert (= x525 (=> (and (= x1459 (x1519 864)) (= x1232 (x1163 (+ x1459 x1338))) (= x1844 (> x1338 x1232)) (= (x1519 704) x983) (= (x1519 768) x1338)) (and (=> (not x1844) x799) (=> x1844 x891)))))
(assert (= (x217 352) (x742 352)))
(assert (= (x59 704) (x1503 704)))
(assert (= (and (not x1795) x1042) x1834))
(assert (= (x735 640) (x1124 640)))
(assert (= 2052391781 (x660 (x1258 2052391781))))
(assert (x172 x201))
(assert (x172 x485))
(assert (x172 x1230))
(assert (=> (> (+ 10000 1) (x1416 128)) (= (x1258 (x1416 128)) (x1428 (x1416 128)))))
(assert (= (x1258 3567397854) (x1428 3567397854)))
(assert (= (x429 768) (x1044 768)))
(assert (= x1876 (and x218 x142)))
(assert (= (x1462 320) (x403 320)))
(assert (x172 x214))
(assert (= x1290 (and x266 (not x1554))))
(assert (x172 x1716))
(assert (x172 x576))
(assert (x172 x1423))
(assert (= (x1018 (x1428 274184521717934524641157099916833587200)) (ite (and x1568 x1156) (x1207 (x1428 274184521717934524641157099916833587200)) (x897 (x1428 274184521717934524641157099916833587200)))))
(assert (= (=> (and (= (= 0 x1075) x866) (= x495 (uninterp_mod (* x1075 x1453) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= (x1425 (x1258 44)) x1453) (= (x1897 (- x981 x837)) x1075) (= (or x866 x815) x333) (= (= x1453 x1451) x815) (= x1313 (= (ite x333 1 0) 0)) (= x1451 (- (/ x495 x1075) (uninterp_frac x495 x1075)))) (and (=> x1313 x891) (=> (not x1313) x436))) x1809))
(assert (=> (> (+ 10000 1) (x1411 160)) (= (x1258 (x1411 160)) (x1428 (x1411 160)))))
(assert (= (x735 864) (x1124 864)))
(assert (x172 x1110))
(assert (x172 x1193))
(assert (x655 274184521717934524641157099916833587200))
(assert (= (x1245 x1395) (ite (= (x1258 0) x1395) 1 (x520 x1395))))
(assert (= (x326 256) (x50 256)))
(assert (= (x660 (x842 x1336 6)) (+ 6 (x660 x1336))))
(assert (= (x419 640) (x756 640)))
(assert (x172 x454))
(assert (x172 x652))
(assert (= (or (and x817 x228) x1662 (and (not x575) x624)) x639))
(assert (x172 x13))
(assert (= (x387 352) (x1497 352)))
(assert (= (and x736 x1368) x583))
(assert (x172 x418))
(assert (= (x440 384) x883))
(assert (x172 x1828))
(assert (= (x216 864) (x980 864)))
(assert (x172 x560))
(assert (= (x1120 768) (x1504 768)))
(assert (= (x210 672) (x500 672)))
(assert (= (x1197 736) (x514 736)))
(assert (= (x1055 x1694) (ite (= x1694 (x1258 0)) 1 (x520 x1694))))
(assert (x172 x1244))
(assert (= (x1258 1851080549) (x1428 1851080549)))
(assert (= (x660 (x1428 x209)) x209))
(assert (x172 x1814))
(assert (= (x1652 736) (x153 736)))
(assert (x172 x231))
(assert (= (x1785 320) (x1105 320)))
(assert (x172 x1098))
(assert (= (x326 864) (x50 864)))
(assert (x172 x899))
(assert (x172 x1279))
(assert (x172 x95))
(assert (= (x1212 736) (x934 736)))
(assert (= (x448 160) (x660 (x1428 (x448 160)))))
(assert (x172 x915))
(assert (x172 x1588))
(assert (x172 x277))
(assert (x172 x1448))
(assert (= x826 (x111 352)))
(assert (= (x1258 1977493762) (x1428 1977493762)))
(assert (= (x1229 352) (x1746 352)))
(assert (= (=> (and (= (= 0 x200) x1045) (= (= x1310 x865) x1247) (= (- (/ x654 x200) (uninterp_frac x654 x200)) x865) (= x1165 (or x1247 x1045)) (= (= (ite x1165 1 0) 0) x1733) (= (x783 352) x200) (= x1310 (x567 (x1258 9))) (= (uninterp_mod (* x200 x1310) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x654)) (and (=> x1733 x891) (=> (not x1733) x1730))) x414))
(assert (= (x660 (x842 x791 6)) (+ 6 (x660 x791))))
(assert (x172 x697))
(assert (x172 x220))
(assert (= (ite (= x1906 (x1258 0)) 1 (x520 x1906)) (x1055 x1906)))
(assert (=> (> (+ 10000 1) (x158 160)) (= (x1428 (x158 160)) (x1258 (x158 160)))))
(assert (= (x660 (x1258 599290589)) 599290589))
(assert (= x1060 (=> (and (= (> x330 x1792) x764) (= x330 (x250 736)) (= x345 (x1366 (x1428 (x250 128)) (x1428 (x250 160)) 0)) (= x1567 (x1897 (- x467 x260))) (= x1792 (x1015 x345))) (and (=> (and (= x154 (x1372 288)) (= (x1897 (- x1792 x330)) x374) (= x1718 (x1163 (+ x1158 512))) (= x1132 (x1851 256)) (= (x250 736) x616) (= (x398 (x1258 10)) x982) (= (x1163 (+ x1158 64)) x997) (= x1158 (x1851 384)) (or (and x164 x1359 (= (x1360 (x1428 274184521717934524641157099916833587200)) x594) (> 4294967296 x713) (= x164 (= (x1456 (x1428 x739)) x1632)) (= (<= x594 (x1456 (x1428 274184521717934524641157099916833587200))) x1359) x759 (= x1632 (x1360 (x1428 x739)))) (not x759)) (= x759 (> x1664 0)) (= (x69 672) x1681) (= x739 (x574 224)) (= (> x538 0) x1657) (not x764) (or (and x1657 (< x208 4294967296)) (not x1657)) (= x1900 (x1163 (+ x1158 480))) (= x328 (x1083 768))) x1556) (=> x764 x891)))))
(assert (x172 x629))
(assert (= x384 (=> (and (= (< x270 x11) x1292) (= x1361 (x939 896)) (= (x1591 864) x482) (= x11 (x1591 768)) (= x270 (x1163 (+ x11 x482)))) (and (=> (and (= x1215 (> x1909 0)) (or (and (= 1 x316) x1215 (< x1291 4294967296)) (and (not x1215) (= x1909 x316))) (not x1292) (= x405 (x1163 (+ x482 x11)))) x14) (=> x1292 x891)))))
(assert (= 773487949 (x660 (x1258 773487949))))
(assert (x172 x490))
(assert (x172 x920))
(assert (= (ite (and x325 x1160) (x722 352) (x771 352)) (x1354 352)))
(assert (= (x1119 1024) (x1885 1024)))
(assert (= x1103 (and (not x947) x321)))
(assert (= (x771 320) (x81 320)))
(assert (= (x1055 x1401) (ite (= x1401 (x1258 0)) 1 (x520 x1401))))
(assert (x172 x658))
(assert (x172 x1289))
(assert (x655 (x959 128)))
(assert (= (x274 640) (x1157 640)))
(assert (x172 x547))
(assert (x172 x1498))
(assert (= (x515 384) (x251 384)))
(assert (x172 x1579))
(assert (x172 x219))
(assert (x172 x892))
(assert (= (x660 (x842 x498 6)) (+ 6 (x660 x498))))
(assert (x172 x460))
(assert (= (x1055 x85) (ite (= (x1258 0) x85) 1 (x520 x85))))
(assert (= (x196 704) (x1225 704)))
(assert (x172 x913))
(assert (x655 x739))
(assert (= (x928 768) (x1901 768)))
(assert (= (x1282 896) (x1383 896)))
(assert (= (x371 672) (x1848 672)))
(assert (=> (> (+ 10000 1) (x50 160)) (= (x1428 (x50 160)) (x1258 (x50 160)))))
(assert (= (=> (and (= x125 (x1163 (+ x1342 17))) (= (< 0 x1873) x1086) (= (x1425 (x1428 x125)) x1811) (= x1873 (x475 896)) (= (x1797 928) x1342)) (and (=> (and x1086 (= x522 (> x1764 0)) (or (and x522 (= x1595 1) (< x1727 4294967296)) (and (not x522) (= x1595 x1764)))) x146) (=> (not x1086) x144))) x568))
(assert (= (x1262 896) (x283 896)))
(assert (x172 x1039))
(assert (= (x279 352) (x1218 352)))
(assert (= (=> (= (< 31 x844) x1114) (and (=> (not x1114) x891) (=> (and (= (> x552 0) x1558) x1114 (or (and (not x1558) (= x552 x893)) (and x1558 (= x893 1) (> 4294967296 x298))) (= x1323 (x1186 1056))) x1051))) x1822))
(assert (x655 (x196 160)))
(assert (x172 x601))
(assert (= (x1044 672) (x429 672)))
(assert (x172 x1651))
(assert (= (and (not x935) x65) x706))
(assert (x172 x319))
(assert (= (x236 352) (ite (and x88 x1529) (x1910 352) (x1212 352))))
(assert (x172 x1176))
(assert (= (x1383 640) (x1282 640)))
(assert (x172 x1619))
(assert (x172 x1669))
(assert (= (x512 160) (x660 (x1428 (x512 160)))))
(assert (= (x1497 864) (x387 864)))
(assert (= (x512 960) (x1788 960)))
(assert (= (=> (and (= x911 (< x1210 x20)) (= x20 (x618 1024)) (= (x618 768) x1210)) (and (=> x911 x891) (=> (not x911) x1349))) x795))
(assert (= (x1258 961581905) (x1428 961581905)))
(assert (= (x959 128) (x660 (x1428 (x959 128)))))
(assert (= x1824 (or (and x56 x932) (and x613 (not x1127)) x781)))
(assert (= (x513 1056) (x836 1056)))
(assert (x172 x1047))
(assert (= (x1282 704) (x1383 704)))
(assert (= (x1145 320) (x588 320)))
(assert (= (x217 640) (x742 640)))
(assert (= (x1728 768) (x618 768)))
(assert (= (x1258 773487949) (x1428 773487949)))
(assert (x172 x261))
(assert (= (x1212 704) (x934 704)))
(assert (x172 x1476))
(assert (= (and (not x1733) x1461) x1799))
(assert (= x938 (and x1860 x407)))
(assert (= (x660 (x1258 3065339685)) 3065339685))
(assert (= (x738 352) (x1869 352)))
(assert (x655 (x1036 160)))
(assert (= (x1225 640) (x196 640)))
(assert (x172 x1636))
(assert (x172 x68))
(assert (= (x274 672) (x1157 672)))
(assert (= (x955 704) (x127 704)))
(assert (x172 x163))
(assert (x172 x239))
(assert (x172 x1480))
(assert (x172 x308))
(assert (= x799 (=> (and (= x539 (= (ite x824 1 0) 0)) (= (- (/ x376 x983) (uninterp_frac x376 x983)) x667) (= (= 0 x983) x1881) (= x526 (x1163 (+ x1338 x1459))) (= x1008 (= x667 x526)) (= x376 (uninterp_mod (* x526 x983) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= x824 (or x1881 x1008))) (and (=> (not x539) x1755) (=> x539 x891)))))
(assert (x172 x997))
(assert (x172 x1912))
(assert (x172 x18))
(assert (= (x513 352) (x836 352)))
(assert (x172 x1909))
(assert (= (x1532 x686 x1786) (- (/ x686 (x377 2 x1786)) (uninterp_frac x686 (x377 2 x1786)))))
(assert (=> (< (- (x153 128) 1) 10000) (= (x1428 (x153 128)) (x1258 (x153 128)))))
(assert (= (x403 768) (x1462 768)))
(assert (= (x1425 x1401) (ite (= (x1258 0) x1401) 1 (x957 x1401))))
(assert (= x863 (and x489 (not x755))))
(assert (= (x660 (x842 x249 6)) (+ 6 (x660 x249))))
(assert (= (x656 384) (x788 384)))
(assert (= (x1213 672) (x769 672)))
(assert (= (x980 1024) (x216 1024)))
(assert (x172 x538))
(assert (= (x513 672) (x836 672)))
(assert (= 1461501637330902918203684832716283019655932542975 (x660 (x1258 1461501637330902918203684832716283019655932542975))))
(assert (x655 (x371 160)))
(assert (= (x440 320) (x1277 320)))
(assert (= (x1462 288) (x403 288)))
(assert (= (x828 800) (x1574 800)))
(assert (= (x25 736) (x386 736)))
(assert (x655 x809))
(assert (= (and x1757 x1847) x1872))
(assert (x172 x869))
(assert (= (x769 320) (x1213 320)))
(assert (= (x1505 704) (x1006 704)))
(assert (= x739 (x660 (x1428 x739))))
(assert (x655 (x348 128)))
(assert (= (x513 896) (x836 896)))
(assert (= (x1788 896) (x512 896)))
(assert (= (x1504 320) (x1120 320)))
(assert (= (x1741 768) (x689 768)))
(assert (= (x660 (x1428 (x50 128))) (x50 128)))
(assert (= (x158 864) (x1724 864)))
(assert (x655 (x448 160)))
(assert (x172 x1880))
(assert (x172 x281))
(assert (= (x1242 320) (x404 320)))
(assert (= (x660 (x1258 31576340)) 31576340))
(assert (= (x1428 596573372) (x1258 596573372)))
(assert (x172 x1020))
(assert (x172 x1223))
(assert (= (=> (and (= (x1197 736) x1879) (= x1753 (< 0 x1879))) (and (=> x1753 x703) (=> (not x1753) x891))) x1026))
(assert (= (x514 704) (x1197 704)))
(assert (= (x1652 864) (x153 864)))
(assert (= (x1885 1088) (x1119 1088)))
(assert (= x920 (x326 320)))
(assert (= (and x1876 x672) x1606))
(assert (x172 x1276))
(assert (= (x217 864) (x742 864)))
(assert (= (x980 704) (x216 704)))
(assert (x172 x657))
(assert (x172 x649))
(assert (not x365))
(assert (= (x360 768) (x135 768)))
(assert (= (x660 (x1428 (x1411 128))) (x1411 128)))
(assert (x172 x221))
(assert (x172 x1829))
(assert (= (x980 1088) (x216 1088)))
(assert (= x1381 (x1392 224)))
(assert (= (x50 160) (x660 (x1428 (x50 160)))))
(assert (= (x1245 x830) (ite (= x830 (x1258 0)) 1 (x520 x830))))
(assert (= (x1505 768) (x1006 768)))
(assert (= x1376 (=> (and (= (- (/ x1289 x1744) (uninterp_frac x1289 x1744)) x760) (= (x1626 384) x334) (= (= 0 (ite x494 1 0)) x935) (= x1314 (= x334 x760)) (= (x1897 (- x876 x892)) x1704) (= (= 0 x1744) x1778) (= (or x1314 x1778) x494) (= (uninterp_mod (* x1744 x334) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x1289)) (and (=> (not x935) x709) (=> x935 x891)))))
(assert (= (x1245 (x1258 10)) (ite (= (x1258 10) (x1258 0)) 1 (x520 (x1258 10)))))
(assert (x172 x1450))
(assert (x172 x1727))
(assert (x172 x1738))
(assert (x172 x860))
(assert (x172 x855))
(assert (=> (> (+ 10000 1) (x1183 128)) (= (x1428 (x1183 128)) (x1258 (x1183 128)))))
(assert (x172 x1342))
(assert (x172 x1835))
(assert (= (x1785 640) (x1105 640)))
(assert (= (x1258 2681579215) (x1428 2681579215)))
(assert (= (x1339 672) (x968 672)))
(assert (= (x535 864) (x1392 864)))
(assert (= (x1044 704) (x429 704)))
(assert (= (x908 672) (x15 672)))
(assert (x172 x1646))
(assert (= (x283 320) (x1262 320)))
(assert (= (x660 (x1428 (x1572 160))) (x1572 160)))
(assert (x172 x983))
(assert (= (and x84 (not x1016)) x399))
(assert (= (x1808 768) (x1335 768)))
(assert (=> (< (- (x1246 160) 1) 10000) (= (x1428 (x1246 160)) (x1258 (x1246 160)))))
(assert (= (x15 928) (x908 928)))
(assert (x172 x508))
(assert (= (x1898 672) (x688 672)))
(assert (x172 x1364))
(assert (= (x1277 768) (x440 768)))
(assert (x172 x343))
(assert (x172 x596))
(assert (= x322 (and x194 x275)))
(assert (x172 x839))
(assert (x172 x1852))
(assert (x172 x154))
(assert (x172 x1472))
(assert (= (x419 736) (x756 736)))
(assert (= (and x1003 x1019) x337))
(assert (x172 x1348))
(assert (x172 x471))
(assert (= (x1572 704) (x111 704)))
(assert (= (x1728 928) (x618 928)))
(assert (=> (< (- (x512 160) 1) 10000) (= (x1258 (x512 160)) (x1428 (x512 160)))))
(assert (x172 x540))
(assert (= (x1242 1056) (x404 1056)))
(assert (= (x934 672) (x1212 672)))
(assert (= (x589 320) (x939 320)))
(assert (= x730 (=> (and (= x1858 (= x287 0)) (= x287 (x1425 (x1258 40)))) (and (=> (not x1858) x1378) (=> x1858 x891)))))
(assert (x172 x447))
(assert (= (x742 704) (x217 704)))
(assert (= (x908 640) (x15 640)))
(assert (x172 x591))
(assert (= (+ (x660 x39) 6) (x660 (x842 x39 6))))
(assert (x172 x1030))
(assert (x172 x23))
(assert (= (x1335 928) (x1808 928)))
(assert (= (x1345 160) (x660 (x1428 (x1345 160)))))
(assert (= (x589 352) (x939 352)))
(assert (= 2835717307 (x660 (x1258 2835717307))))
(assert (= (x1040 640) (x1643 640)))
(assert (x172 x907))
(assert (= (x475 768) (x1797 768)))
(assert (x172 x230))
(assert (x172 x75))
(assert (x172 x1629))
(assert (= (ite (and x1331 x300) (x975 800) (x828 800)) (x1399 800)))
(assert (= (x512 928) (x1788 928)))
(assert (x172 x770))
(assert (= (x1237 320) (x497 320)))
(assert (x172 x526))
(assert (= true x300))
(assert (x172 x186))
(assert (= (and (not x559) x851) x65))
(assert (= (x1508 320) (x1723 320)))
(assert (x172 x1150))
(assert (= (x1102 (x1428 274184521717934524641157099916833587200)) (ite (and x613 x1127 x1256) (ite (and x1127 x613 x1256 x885) (x992 (x1428 274184521717934524641157099916833587200)) (x785 (x1428 274184521717934524641157099916833587200))) (x785 (x1428 274184521717934524641157099916833587200)))))
(assert (= (x158 896) (x1724 896)))
(assert (= (x251 224) (x515 224)))
(assert (x172 x8))
(assert (= (x618 864) (x1728 864)))
(assert (= (=> (and (= x1590 (x783 384)) (= (x1897 (- x454 x649)) x1781) (= (< 0 x1590) x1801) (= x1175 (x989 416))) (and (=> x1801 x414) (=> (not x1801) x493))) x822))
(assert (= (x1124 672) (x735 672)))
(assert (= (x788 352) (x656 352)))
(assert (= (x1339 352) (x968 352)))
(assert (x172 x1879))
(assert (x172 x861))
(assert (x172 x1138))
(assert (= (x1425 x1906) (ite (= (x1258 0) x1906) 1 (x957 x1906))))
(assert (x172 x263))
(assert (x655 (x1197 128)))
(assert (= (x1574 704) (x828 704)))
(assert (= (x1870 768) (x1620 768)))
(assert (x172 x619))
(assert (x172 x1792))
(assert (x172 x1463))
(assert (x172 x1838))
(assert (= x1562 (x1746 896)))
(assert (x172 x1805))
(assert (= x495 (x127 224)))
(assert (= (x1505 352) (x1006 352)))
(assert (x172 x52))
(assert (x172 x1265))
(assert (x172 x90))
(assert (x172 x831))
(assert (= (x1741 352) (x689 352)))
(assert (=> (< (- (x348 160) 1) 10000) (= (x1258 (x348 160)) (x1428 (x348 160)))))
(assert (= (x1194 704) (x1731 704)))
(assert (= (x279 704) (x1218 704)))
(assert (= (x1788 320) (x512 320)))
(assert (= (x283 352) (x1262 352)))
(assert (x172 x739))
(assert (= (x1731 672) (x1194 672)))
(assert (= (x1157 736) (x274 736)))
(assert (= (x1885 768) (x1119 768)))
(assert (x172 x1516))
(assert (x172 x1073))
(assert (x172 x1010))
(assert (x172 x1507))
(assert (x655 x125))
(assert (= x88 x1541))
(assert (= (x326 672) (x50 672)))
(assert (= (x475 864) (x1797 864)))
(assert (= (x1724 672) (x158 672)))
(assert (= (x517 224) (x1501 224)))
(assert (= (x1425 (x1258 41)) (ite (= (x1258 41) (x1258 0)) 1 (x957 (x1258 41)))))
(assert (= (x1119 352) (x1885 352)))
(assert (= (x1006 864) (x1505 864)))
(assert (= (ite (= x1725 (x1258 0)) 1 (x957 x1725)) (x1425 x1725)))
(assert (x172 x47))
(assert (x172 x1164))
(assert (x172 x1112))
(assert (= (=> (and (= (x1425 (x1258 41)) x837) (= x876 (x955 288)) (= x570 (x1163 (+ x395 x536))) (= x1631 (> x837 x981))) (and (=> x1631 x891) (=> (not x1631) x1809))) x222))
(assert (= (x1746 672) (x1229 672)))
(assert (x172 x847))
(assert (= (x1692 672) (x666 672)))
(assert (x172 x409))
(assert (x172 x636))
(assert (= x1904 (=> (and (= (< x961 x1585) x1127) (> x528 31) (= (x1627 992) x1278) (= x961 (x1004 960)) (> x812 0) (= x1585 (x1004 768))) (and (=> (and (= (x842 x39 6) x43) (= (< 0 x1104) x1256) (= x1104 (x1788 992)) (not (> x867 x416)) (= (x1055 x43) x1812) (= (x1004 768) x416) (= (x189 896) x862) (= x867 (x1004 960)) (= (x1366 (x1428 (x512 128)) (x1428 (x512 160)) 0) x39) (or (not x1256) (and (= (< 0 x840) x885) (= x1789 (x1897 (- x622 x798))) (= x1528 (> x1816 0)) (or (and x1871 (not (< x263 x246)) (not (< x133 x1202)) (= (x1420 896) x1144) (= x1073 (x77 864)) (not (> x245 x700)) (not (<= 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x508 x1073))) (= (x1897 (- x700 x245)) x1027) (= x974 (x842 x82 6)) (= x323 (x1055 x974)) (= (x1499 224) x1828) (not (> x1880 x1874)) (= x869 (x1163 (+ x335 x1141))) (= (x1157 768) x1874) (= x133 (x988 (x1258 40))) (= x1011 (x842 x1336 6)) (= x246 (x1339 256)) (= x1427 (x1411 224)) (or x271 (and (= (= 0 x1831) x1865) (= (uninterp_mod (* x1489 x915) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x725) (= (x1055 x1694) x1250) (= x1276 (x1055 (x1258 40))) (= x1489 (x1055 (x1258 39))) (or (and (= x1095 (x1366 (x1428 (x331 128)) (x1428 (x331 160)) 0)) (= (x1897 (- x1170 x810)) x850) (not (> x1696 x1244)) (= (x233 (x1258 39)) x1244) (not x1865) (= (x1897 (- x1244 x1696)) x502) (= (x331 320) x810) (= (x1055 x1353) x1170) (not (> x810 x1170)) (= x839 (x1652 224)) (= (x331 320) x1696) (= (x842 x1095 2) x1353)) x1865) (= (- (/ x725 x915) (uninterp_frac x725 x915)) x308) (not (= x1243 0)) (= (x1366 (x1428 (x153 128)) (x1428 (x153 160)) 0) x669) (= x1694 (x842 x669 2)) (= (x1652 320) x1831) (= (x1339 224) x1498) (= x1243 (ite x1422 1 0)) (= x1422 (or x1645 x1655)) (= x1645 (= 0 x915)) (= (x1339 256) x915) (= x1686 (- (/ x725 x1276) (uninterp_frac x725 x1276))) (not x271) (not (= 0 x1276)) (= (= x1489 x308) x1655) (= (ite (< x1250 x1686) x1250 x1686) x1841))) (= x271 (= x99 0)) (= x1336 (x1366 (x1428 (x1739 128)) (x1428 (x1739 160)) 0)) (= x1202 (x1739 256)) (= (x1055 (x1258 39)) x99) (= x141 (x32 1024)) (= x245 (x1411 256)) (= x1768 (x1445 224)) (= x335 (x1411 256)) (= (x1897 (- x133 x1202)) x996) (= (x1411 288) x700) (= x1236 (x842 x1162 8)) (= (x1157 1024) x1880) (= (x1366 (x1428 (x968 128)) (x1428 (x968 160)) 0) x82) (= x263 (x1339 288)) (= x1141 (x1167 x1236)) (= (x1366 (x1428 (x1411 128)) (x1428 (x1411 160)) 0) x1162) (not (<= 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x1141 x335))) (= x508 (x77 1024)) (= (x1163 (+ x1073 x508)) x524) (= (x1897 (- x1874 x1880)) x1699)) (not x1871)) (< 0 x840) (= x1205 (x842 x791 6)) (= x1871 (< 0 x1912)) (= x791 (x1366 (x1428 (x1036 128)) (x1428 (x1036 160)) 0)) (or (not x885) (and (= x606 (x785 (x1428 274184521717934524641157099916833587200))) (= x1356 (x785 (x1428 x1821))) (> 4294967296 x1791) x885 (= (= (x992 (x1428 x1821)) x1356) x1115) x1115 x1485 (= (<= x606 (x992 (x1428 274184521717934524641157099916833587200))) x1485))) (= (x1242 992) x561) (or (and x1528 (< x1624 4294967296) (= 1 x889)) (and (not x1528) (= x1816 x889))) (> x1791 31) (= x1821 (x404 896)) (= x1426 (x1036 1056)) (= x622 (x1085 x1205)) (not (< x622 x798)) (= x1912 (x1157 1024)) (= (x1897 (- x1020 x1328)) x1054) (< 0 x889) (= x277 (x1452 (x1258 40))) (= (x748 1056) x70) (not (< x277 x1426)) (= x798 (x1036 1056)) (= x1328 (x274 960)) (not (< x1020 x1328)) (= x804 (x1527 896)) (> x1624 31) (= x476 (x1897 (- x277 x1426))) x1256 (= x1020 (x274 1088)))) (= x1007 (ite (> x1902 x1812) x1812 x1902)) (= x905 (x1897 (- x416 x867))) x1127 (= x1902 (x189 992))) x1109) (=> (not x1127) x774)))))
(assert (= (x1277 672) (x440 672)))
(assert (x172 x786))
(assert (= (x506 320) 0))
(assert (x172 x927))
(assert (x172 x1473))
(assert (= (x1643 672) (x1040 672)))
(assert (= (x660 (x1428 (x196 160))) (x196 160)))
(assert (x655 (x959 160)))
(assert (x172 x674))
(assert (= x1294 (and x1682 x1753)))
(assert (= (and x312 x917) x613))
(assert (=> (> (+ 10000 1) (x1183 160)) (= (x1258 (x1183 160)) (x1428 (x1183 160)))))
(assert (= (x693 704) (x545 704)))
(assert (x172 x1408))
(assert (x655 x648))
(assert (= (x1036 160) (x660 (x1428 (x1036 160)))))
(assert (x172 x473))
(assert (x172 x339))
(assert (= (x1282 320) (x1383 320)))
(assert (= (x59 736) (x1503 736)))
(assert (= (x153 1056) (x1652 1056)))
(assert (= (x25 672) (x386 672)))
(assert (= (x1505 640) (x1006 640)))
(assert (= (x660 (x842 x1783 8)) (+ (x660 x1783) 8)))
(assert (x172 x646))
(assert (= (x1383 768) (x1282 768)))
(assert (= 464926286 (x660 (x1258 464926286))))
(assert (= (x597 672) (x1839 672)))
(assert (x172 x1043))
(assert (= (x1428 2316151882) (x1258 2316151882)))
(assert (x172 x1328))
(assert (= (x1808 736) (x1335 736)))
(assert (= (x756 704) (x419 704)))
(assert (= (x1462 736) (x403 736)))
(assert (x172 x1061))
(assert (= (x1505 960) x504))
(assert (= (x1848 224) (x371 224)))
(assert (x172 x1900))
(assert (= (x660 (x1428 (x1238 160))) (x1238 160)))
(assert (x172 x1811))
(assert (= x182 (=> (and (= (not x1470) x610) (= x1470 x711) (= x1239 x610)) x1239)))
(assert (= (x248 576) x443))
(assert (= (=> (= x218 (< 0 x41)) (and (=> (not x218) x891) (=> x218 x1551))) x745))
(assert (x655 (x12 128)))
(assert (x172 x1863))
(assert (x172 x996))
(assert (= (x497 704) (x1237 704)))
(assert (=> (> (+ 10000 1) (x1739 128)) (= (x1258 (x1739 128)) (x1428 (x1739 128)))))
(assert (= (x1597 224) (x1475 224)))
(assert (x655 (x1416 160)))
(assert (= (x828 640) (x1574 640)))
(assert (x172 x235))
(assert (= x179 (=> (and (= x1254 (x1282 960)) (= x280 (> x1254 x1588)) (= x1588 (x1282 768))) (and (=> (not x280) x1553) (=> x280 x891)))))
(assert (x172 x99))
(assert (x172 x1726))
(assert (x172 x616))
(assert (x172 x423))
(assert (= x1413 (and x1483 (not x1665))))
(assert (= (x660 (x842 x794 6)) (+ 6 (x660 x794))))
(assert (= (x1505 672) (x1006 672)))
(assert (= x1297 (=> (and (= (x236 768) x818) (< 0 x811) (= x868 (> x818 x601)) (< 31 x1010) (= (x236 800) x601)) (and (=> x868 x1377) (=> (not x868) x647)))))
(assert (x172 x145))
(assert (= (x693 1056) (x545 1056)))
(assert (= (ite (and x1529 x88) (x1910 736) (x1212 736)) (x236 736)))
(assert (= x709 (=> (and (= x1138 (x1425 (x1258 9))) (= (= 0 x1138) x650)) (and (=> (and (not x650) (= (- (/ x1289 x1138) (uninterp_frac x1289 x1138)) x48)) x1347) (=> x650 x891)))))
(assert (= (ite (and x300 x1331) (x975 640) (x828 640)) (x1399 640)))
(assert (x172 x1196))
(assert (= (x1014 320) (x1370 320)))
(assert (= 3296657447 (x660 (x1258 3296657447))))
(assert (x172 x1768))
(assert (x172 x894))
(assert (= (+ 2 (x660 x1095)) (x660 (x842 x1095 2))))
(assert (= (x515 736) (x251 736)))
(assert (= (x1501 896) (x517 896)))
(assert (x172 x1701))
(assert (= x1378 (=> (and (= (- (/ x95 x287) (uninterp_frac x95 x287)) x1512) (= (x1501 224) x195) (= (= x1842 0) x469) (= (x1366 (x1428 (x836 128)) (x1428 (x836 160)) 0) x1189) (= (x842 x1189 2) x151) (= x770 (ite (> x1512 x1094) x1094 x1512)) (= x1094 (x1425 x151)) (= x1842 (x513 320))) (and (=> (not x469) x355) (=> x469 x1630)))))
(assert (x172 x1033))
(assert (x172 x1221))
(assert (x172 x1506))
(assert (= (x371 864) (x1848 864)))
(assert (= (ite (= x422 (x1258 0)) 1 (x520 x422)) (x1245 x422)))
(assert (= x950 (or (and x1321 (not x1861)) (and (not x1134) x1272))))
(assert (= (=> (and (= (x1163 (+ 1 x1101)) x937) (= (x497 928) x1101) (= (= 20 x937) x56)) (and (=> (not x56) x872) (=> x56 x774))) x1109))
(assert (x172 x1495))
(assert (x655 x1856))
(assert (= (x660 (x1428 (x1246 160))) (x1246 160)))
(assert (= x61 (=> (and (= (> x1409 x819) x943) (= (- (/ x1471 1000000000000000000) (uninterp_frac x1471 1000000000000000000)) x1409)) (and (=> (and (= (x1897 (- x819 x1409)) x392) (not x943)) x176) (=> x943 x891)))))
(assert (x172 x1557))
(assert (= (x448 128) (x660 (x1428 (x448 128)))))
(assert (= (x968 640) (x1339 640)))
(assert (= x774 (=> (and (< 0 x849) (= x1743 (= x418 x240)) (= x841 (= x1341 0)) (= x186 (ite x1581 1 0)) (not (> x625 x838)) (= x838 (- (/ x629 10000) (uninterp_frac x629 10000))) (= x1695 (< x1510 x847)) (= (x1746 896) x1510) (or (and x1650 (< x1130 4294967296) (= x849 1)) (and (= x1273 x849) (not x1650))) (= x1562 (x1229 928)) (= (- (/ x629 x1341) (uninterp_frac x629 x1341)) x418) (= (x1066 864) x625) (= x254 (x1066 768)) (= x734 (x1066 864)) (= x847 (x1746 768)) (= x1581 (or x841 x1743)) (or (and (= (= x1446 x1140) x78) (= x773 (x1163 (+ x479 x787))) (= (x1318 (x1258 40)) x861) (= (x928 288) x661) (> x1548 0) (= (x37 736) x1082) (= (x1318 (x1258 41)) x1621) (= (ite x64 1 0) x1564) (not (> x1082 x1600)) (not (= 0 x1564)) (or (and (= x1548 x913) (not x341)) (and (= 1 x1548) (> 4294967296 x1326) x341)) (= (x1897 (- x1069 x1621)) x147) (= x64 (or x1412 x78)) (not (> x1621 x1309)) (= x472 (> 1000000000000000000 x1903)) (= (> x1814 0) x1305) (= x1600 (x37 640)) (= x24 (x135 416)) (= x1802 (x846 224)) (or (not x1305) (and (not (= 0 x951)) (= x1230 (x360 384)) (= x294 (or x1635 x1270)) (= (uninterp_mod (* x1320 x221) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x1703) (= (x360 352) x221) (= x1685 (- (/ x1703 x1230) (uninterp_frac x1703 x1230))) (= (= x1726 x1320) x1635) (= x1320 (x1318 (x1258 9))) (= (ite x294 1 0) x951) (= x1726 (- (/ x1703 x221) (uninterp_frac x1703 x221))) x1305 (not (= 0 x1230)) (= x1270 (= x221 0)))) (= (x813 928) x921) (= (< 0 x913) x341) (= (x1537 320) x835) (= (x1163 (+ x1802 x861)) x550) (= x1412 (= 0 x147)) (not (<= 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x787 x479))) (= (x1897 (- x661 x835)) x658) (= x1903 (x1901 224)) (not (< x661 x835)) (not (<= 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x861 x1802))) (= (x360 384) x1814) (= (uninterp_mod (* x1140 x147) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x349) (= x479 (x302 768)) (= x787 (x302 864)) (or (not x472) (and (= x1649 (- (/ x122 x1) (uninterp_frac x122 x1))) (= x122 (uninterp_mod (* x1228 x1) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= (- (/ x122 1000000000000000000) (uninterp_frac x122 1000000000000000000)) x1805) x472 (= (= 0 x1) x1070) (not (= x1221 0)) (not (> x1805 x92)) (= x66 (= x1649 x1228)) (= x1760 (or x1070 x66)) (= x92 (x1431 256)) (= x1221 (ite x1760 1 0)) (= x1 (x1431 224)) (= (x1318 (x1258 43)) x878) (= x1670 (x1897 (- x92 x1805))) (= x1228 (x1431 256)))) (= (x1318 (x1258 44)) x1140) (= x1836 (x1746 896)) x1695 (> x1326 31) (= (- (/ x349 x147) (uninterp_frac x349 x147)) x1446)) (not x1695)) (> x1130 31) (not (<= 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x254 x734))) (= (x1163 (+ x734 x254)) x240) (not (= x186 0)) (= x629 (uninterp_mod (* x1341 x240) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= x1650 (< 0 x1273)) (= x1341 (x1066 704))) x647)))
(assert (x172 x91))
(assert (x172 x1320))
(assert (x172 x1837))
(assert (=> (< (- (x1416 160) 1) 10000) (= (x1428 (x1416 160)) (x1258 (x1416 160)))))
(assert (= (=> (and (= (x390 224) x1761) (= (x567 (x1258 40)) x924) (= x226 (x1163 (+ x924 x1761))) (= x947 (> x1761 x226))) (and (=> (not x947) x197) (=> x947 x891))) x965))
(assert (= (=> (and (= (> x268 x1608) x1003) (= (x1399 800) x1608) (< 0 x163) (> x986 31) (= x268 (x1399 768))) (and (=> (not x1003) x1322) (=> x1003 x1689))) x1266))
(assert (x172 x690))
(assert (= (x1124 320) (x735 320)))
(assert (x172 x754))
(assert (x172 x602))
(assert (= (x1788 864) (x512 864)))
(assert (= (x386 704) (x25 704)))
(assert (= (x1055 x1353) (ite (= x1353 (x1258 0)) 1 (x520 x1353))))
(assert (= x1682 (and (not x191) x399)))
(assert (x172 x1585))
(assert (= (x783 640) (x989 640)))
(assert (x172 x1625))
(assert (x172 x1539))
(assert (= (ite (= (x1258 43) (x1258 0)) 1 (x520 (x1258 43))) (x1055 (x1258 43))))
(assert (x172 x563))
(assert (= (x210 640) (x500 640)))
(assert (= (x15 352) (x908 352)))
(assert (=> (> (+ 10000 1) (x1238 160)) (= (x1428 (x1238 160)) (x1258 (x1238 160)))))
(assert (= (x1501 768) (x517 768)))
(assert (x655 (x1183 128)))
(assert (x655 (x196 128)))
(assert (x172 x1827))
(assert (x172 x1616))
(assert (= (x548 928) (x715 928)))
(assert (= x14 (=> (= (< 0 x316) x275) (and (=> x275 x973) (=> (not x275) x891)))))
(assert (x172 x580))
(assert (x172 x1))
(assert (= (x588 352) (x1145 352)))
(assert (x172 x428))
(assert (= (x660 (x1428 (x348 128))) (x348 128)))
(assert (x655 (x1739 160)))
(assert (x172 x1081))
(assert (= (x660 (x1258 4267106866)) 4267106866))
(assert (= (x517 704) (x1501 704)))
(assert (= (x1105 960) (x1785 960)))
(assert (= (and (not x1844) x94) x1135))
(assert (= (x1258 115792089237316195423570985008687907853269984665640564039457584007913129639935) (x1428 115792089237316195423570985008687907853269984665640564039457584007913129639935)))
(assert (= (x660 (x1258 2316151882)) 2316151882))
(assert (x172 x156))
(assert (= (x1428 274184521717934524641157099916833587200) (x1258 274184521717934524641157099916833587200)))
(assert (x172 x1804))
(assert (x172 x212))
(assert (= (=> (and (= x1196 (x1416 256)) (= x827 (< x1325 x1580)) (= (x350 224) x1827) (= x1071 (x1366 (x1428 (x1416 128)) (x1428 (x1416 160)) 0)) (= (x1163 (+ x1196 x1580)) x1325) (= x1580 (x954 x1220)) (= x1220 (x842 x1071 8))) (and (=> x827 x891) (=> (not x827) x1460))) x1630))
(assert (x172 x686))
(assert (= (x1370 640) (x1014 640)))
(assert (= (x1501 1056) (x517 1056)))
(assert (x172 x1759))
(assert (= 2780307423 (x660 (x1258 2780307423))))
(assert (= (x1475 704) (x1597 704)))
(assert (= x891 (=> (= x711 true) x793)))
(assert (x172 x556))
(assert (x172 x549))
(assert (= (x158 928) (x1724 928)))
(assert (= (x1354 704) (ite (and x1160 x325) (x722 704) (x771 704))))
(assert (= (x1898 736) (x688 736)))
(assert (x172 x1013))
(assert (= (x597 704) (x1839 704)))
(assert (= (x1728 896) (x618 896)))
(assert (= (=> (and (= (< x876 x892) x559) (= (x272 320) x892)) (and (=> x559 x891) (=> (not x559) x1376))) x176))
(assert (= x35 (x279 224)))
(assert (x172 x1849))
(assert (x655 (x1572 128)))
(assert (= (x1040 736) (x1643 736)))
(assert (= (and x1417 (not x280)) x1272))
(assert (x172 x48))
(assert (= (x1627 640) (x1004 640)))
(assert (= x1279 (x1692 224)))
(assert (= (=> (and (= (< x1407 x612) x310) (= (- (/ x816 1000000000000000000) (uninterp_frac x816 1000000000000000000)) x612)) (and (=> (and (= x126 (x1897 (- x1407 x612))) (not x310)) x859) (=> x310 x891))) x1908))
(assert (= (x1785 768) (x1105 768)))
(assert (x172 x323))
(assert (x172 x570))
(assert (= (x989 320) (x783 320)))
(assert (= (x1055 x43) (ite (= (x1258 0) x43) 1 (x520 x43))))
(assert (= (=> (and (= (- (/ x95 x717) (uninterp_frac x95 x717)) x573) (= (x1425 (x1258 39)) x591) (= x1807 (or x21 x1072)) (= (= 0 x717) x1072) (= (= x573 x591) x21) (= (uninterp_mod (* x591 x717) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x95) (= (x1501 256) x717) (= x1295 (= (ite x1807 1 0) 0))) (and (=> (not x1295) x730) (=> x1295 x891))) x1895))
(assert (x655 (x512 128)))
(assert (= x1304 x1613))
(assert (= (x517 864) (x1501 864)))
(assert (x172 x412))
(assert (x172 x865))
(assert (x172 x550))
(assert (x655 (x250 160)))
(assert (= (x1785 352) (x1105 352)))
(assert (x172 x936))
(assert (x655 (x877 160)))
(assert (= (x419 320) (x756 320)))
(assert (x172 x1166))
(assert (= (x660 (x1258 3504541104)) 3504541104))
(assert (= x88 (or (and x1019 (not x1003)) x639)))
(assert (= (x514 320) (x1197 320)))
(assert (x172 x1550))
(assert (x655 (x1443 160)))
(assert (= (x1652 896) (x153 896)))
(assert (x172 x1564))
(assert (= (x1055 (x1428 x115)) (ite (= (x1428 x115) (x1258 0)) 1 (x520 (x1428 x115)))))
(assert (= x198 (and x1719 x373)))
(assert (= (x244 352) (x1491 352)))
(assert (= (x331 160) (x660 (x1428 (x331 160)))))
(assert (= (x244 672) (x1491 672)))
(assert (x172 x1312))
(assert (x172 x1781))
(assert (= (x656 256) (x788 256)))
(assert (= (x1339 256) (x968 256)))
(assert (x172 x826))
(assert (= (x1724 320) (x158 320)))
(assert (= (and x322 x1604) x321))
(assert (= x592 (=> (= (> x1727 31) x521) (and (=> (not x521) x891) (=> x521 x1248)))))
(assert (x172 x437))
(assert (= (x1428 2835717307) (x1258 2835717307)))
(assert (x172 x1479))
(assert (x172 x299))
(assert (= (ite (= (x1258 0) x151) 1 (x957 x151)) (x1425 x151)))
(assert (= (x158 128) (x660 (x1428 (x158 128)))))
(assert (= x1568 (or (and (not x868) x1541) x1824)))
(assert (= (x1370 928) (x1014 928)))
(assert (= x809 (x660 (x1428 x809))))
(assert (x172 x1021))
(assert (x172 x1477))
(assert (= (x1213 640) (x769 640)))
(assert (= (x968 1056) (x1339 1056)))
(assert (=> (> (+ 10000 1) (x1443 128)) (= (x1428 (x1443 128)) (x1258 (x1443 128)))))
(assert (= (x660 (x1428 (x1183 128))) (x1183 128)))
(assert (= (x660 (x1428 (x1335 128))) (x1335 128)))
(assert (= (x660 (x1428 (x836 128))) (x836 128)))
(assert (x172 x1053))
(assert (x172 x1902))
(assert (= (x968 704) (x1339 704)))
(assert (x172 x1453))
(assert (x172 x482))
(assert (= (x1869 224) (x738 224)))
(assert (x172 x1612))
(assert (= (ite (= x974 (x1258 0)) 1 (x520 x974)) (x1055 x974)))
(assert (x655 (x371 128)))
(assert (= (and x746 x642) x584))
(assert (x172 x1656))
(assert (= (x1124 1024) (x735 1024)))
(assert (= (x1262 672) (x283 672)))
(assert (= (x50 896) (x326 896)))
(assert (= (x1225 352) x1017))
(assert (= (x1055 (x1258 44)) (ite (= (x1258 44) (x1258 0)) 1 (x520 (x1258 44)))))
(assert (x172 x42))
(assert (= (x1574 768) (x828 768)))
(assert (x172 x1384))
(assert (= (x1040 224) (x1643 224)))
(assert (=> (> (+ 10000 1) (x1572 128)) (= (x1258 (x1572 128)) (x1428 (x1572 128)))))
(assert (x172 x372))
(assert (x172 x1100))
(assert (x172 x1361))
(assert (x172 x288))
(assert (x172 x200))
(assert (x172 x1341))
(assert (x172 x645))
(assert (x172 x681))
(assert (= (x1839 768) (x597 768)))
(assert (x655 (x968 160)))
(assert (= (x1572 640) (x111 640)))
(assert (= (x548 896) (x715 896)))
(assert (= (x1428 629314576) (x1258 629314576)))
(assert (= x489 x1568))
(assert (x655 (x1036 128)))
(assert (= x1051 (=> (= (> x893 0) x736) (and (=> x736 x113) (=> (not x736) x891)))))
(assert (x172 x982))
(assert (x172 x1250))
(assert (= (and x1203 x1086) x507))
(assert (= (x1157 1024) (x274 1024)))
(assert (x655 (x1411 160)))
(assert (x172 x1580))
(assert (x172 x1496))
(assert (x655 (x1739 128)))
(assert (= (x1055 (x1258 40)) (ite (= (x1258 0) (x1258 40)) 1 (x520 (x1258 40)))))
(assert (= (x1218 736) (x279 736)))
(assert (x172 x579))
(assert (= x1377 (=> (and (= (x597 928) x960) (= (x1055 (x1428 x209)) x91) (= x209 (x1163 (+ 17 x960))) (= (x1839 896) x1560) (= x917 (> x1560 0))) (and (=> (and (= x1444 (> x1666 0)) x917 (or (and (not x1444) (= x1666 x812)) (and (= x812 1) (< x528 4294967296) x1444))) x1904) (=> (not x917) x487)))))
(assert (x172 x26))
(assert (x172 x1704))
(assert (x172 x1789))
(assert (x172 x905))
(assert (x172 x1764))
(assert (x172 x112))
(assert (= (x880 (x1428 x739)) (ite (and (not x1861) x1321) (ite (and x1272 x1357 x1134) (x36 (x1428 x739)) (x1018 (x1428 x739))) (x1018 (x1428 x739)))))
(assert (= (x1242 352) (x404 352)))
(assert (= (x1004 352) (x1627 352)))
(assert (x655 (x153 128)))
(assert (= (ite (and x88 x1529) (x1910 320) (x1212 320)) (x236 320)))
(assert (= x1793 x166))
(assert (x172 x981))
(assert (= (x429 640) (x1044 640)))
(assert (x172 x227))
(assert (x172 x1288))
(assert (= (x360 704) (x135 704)))
(assert (x655 (x284 128)))
(assert (= (ite (= (x1258 0) (x1258 40)) 1 (x957 (x1258 40))) (x1425 (x1258 40))))
(assert (x172 x640))
(assert (= (x1004 864) (x1627 864)))
(assert (= (x693 768) (x545 768)))
(assert (x172 x553))
(assert (= (x248 736) (x852 736)))
(assert (= (x1055 x1725) (ite (= x1725 (x1258 0)) 1 (x520 x1725))))
(assert (= (x210 704) (x500 704)))
(assert (= (x663 736) (x772 736)))
(assert (= (x135 672) (x360 672)))
(assert (x172 x633))
(assert (= (x387 640) (x1497 640)))
(assert (x172 x612))
(assert (x655 (x1345 160)))
(assert (= x758 (=> (= (< 0 x1702) x242) (and (=> (not x242) x891) (=> x242 x1883)))))
(assert (= (x475 704) (x1797 704)))
(assert (x172 x336))
(assert (x172 x933))
(assert (= (x1428 2052391781) (x1258 2052391781)))
(assert (x172 x677))
(assert (x172 x171))
(assert (x655 (x1238 128)))
(assert (= x1033 (x660 (x1428 x1033))))
(assert (x172 x1907))
(assert (= (x1428 1401663147) (x1258 1401663147)))
(assert (x172 x1170))
(assert (x172 x878))
(assert (x655 (x517 128)))
(assert (x172 x1093))
(assert (x172 x1512))
(assert (x172 x1104))
(assert (= (x663 928) (x772 928)))
(assert (x655 x1708))
(assert (= (x1262 640) (x283 640)))
(assert (x172 x383))
(assert (= (x1105 1056) (x1785 1056)))
(assert (= (x216 768) (x980 768)))
(assert (= (=> (and (= (x1366 (x1428 (x1335 128)) (x1428 (x1335 160)) 0) x1421) (= x1599 (x1387 992)) (= x367 (ite (< x1100 x1599) x1100 x1599)) (= x1393 (x1897 (- x1588 x1254))) (= x460 (x1808 992)) (= x1538 (x842 x1421 6)) (= x1531 (x1387 896)) (= x1134 (> x460 0)) (= x1100 (x1425 x1538))) (and (=> (and (= x1357 (> x1098 0)) (= x129 (x693 896)) (or (and (= (x1018 (x1428 x129)) x1740) (= (>= (x36 (x1428 274184521717934524641157099916833587200)) x1877) x680) (= (= x1740 (x36 (x1428 x129))) x1209) (< x844 4294967296) x1357 x1209 (= x1877 (x1018 (x1428 274184521717934524641157099916833587200))) x680) (not x1357)) (= (x545 992) x985) x1134) x900) (=> (not x1134) x356))) x1553))
(assert (= (x828 736) (x1574 736)))
(assert (= (x1475 672) (x1597 672)))
(assert (=> (< (- (x877 128) 1) 10000) (= (x1258 (x877 128)) (x1428 (x877 128)))))
(assert (= x1860 (and x1204 (not x1313))))
(assert (= (x738 320) (x1869 320)))
(assert (x172 x1222))
(assert (x172 x1459))
(assert (= (x742 768) (x217 768)))
(assert (= (x656 736) (x788 736)))
(assert (x172 x1232))
(assert (= (ite (= (x1258 0) (x1428 x125)) 1 (x520 (x1428 x125))) (x1055 (x1428 x125))))
(assert (= (x1501 672) (x517 672)))
(assert (x172 x62))
(assert (= (x284 128) (x660 (x1428 (x284 128)))))
(assert (=> (< (- (x1036 160) 1) 10000) (= (x1428 (x1036 160)) (x1258 (x1036 160)))))
(assert (= (x1213 736) x336))
(assert (= (x283 704) (x1262 704)))
(assert (x172 x253))
(assert (x172 x1890))
(assert (x172 x504))
(assert (= (x1652 704) (x153 704)))
(assert (= (x1746 864) (x1229 864)))
(assert (= (x1848 640) (x371 640)))
(assert (= (ite (= (x1258 0) (x1258 44)) 1 (x957 (x1258 44))) (x1425 (x1258 44))))
(assert (=> (> (+ 10000 1) (x1197 128)) (= (x1428 (x1197 128)) (x1258 (x1197 128)))))
(assert (= (x1044 864) (x429 864)))
(assert (x172 x1687))
(assert (= (x1652 288) (x153 288)))
(assert (x172 x1595))
(assert (x172 x958))
(assert (= (x1428 3092021830) (x1258 3092021830)))
(assert (x172 x97))
(assert (= (x666 736) (x1692 736)))
(assert (= (x1848 768) (x371 768)))
(assert (x172 x542))
(assert (=> (< (- x1535 1) 10000) (= (x1258 x1535) (x1428 x1535))))
(assert (= (x1652 256) (x153 256)))
(assert (= 348537858 (x660 (x1258 348537858))))
(assert (= (=> (and (= (x1366 (x1428 (x1183 128)) (x1428 (x1183 160)) 0) x1404) (= (x1425 x85) x979) (= (x1183 320) x232) (= x190 (x513 224)) (= (< x979 x232) x1350) (= (x842 x1404 2) x85)) (and (=> x1350 x891) (=> (not x1350) x273))) x355))
(assert (x172 x20))
(assert (= (x1004 704) (x1627 704)))
(assert (= (x1870 704) (x1620 704)))
(assert (= (ite (= (x1258 10) (x1258 0)) 1 (x520 (x1258 10))) (x1055 (x1258 10))))
(assert (x655 (x250 128)))
(assert (= (=> (and (= (x429 224) x682) (= x1887 (< x682 1000000000000000000))) (and (=> (not x1887) x859) (=> x1887 x51))) x1436))
(assert (= (x331 128) (x660 (x1428 (x331 128)))))
(assert (=> (> (+ 10000 1) (x1238 128)) (= (x1428 (x1238 128)) (x1258 (x1238 128)))))
(assert (x172 x1050))
(assert (= (x660 (x1428 (x196 128))) (x196 128)))
(assert (x172 x726))
(assert (= 1888058147 (x660 (x1258 1888058147))))
(assert (= (x939 704) (x589 704)))
(assert (x172 x1478))
(assert (x172 x1435))
(assert (= (and x242 x621) x776))
(assert (x172 x293))
(assert (= (x1416 128) (x660 (x1428 (x1416 128)))))
(assert (x172 x1659))
(assert (= (x1335 352) (x1808 352)))
(assert (x172 x798))
(assert (x172 x1171))
(assert (= (ite (= x85 (x1258 0)) 1 (x957 x85)) (x1425 x85)))
(assert (x172 x246))
(assert (x172 x349))
(assert (= (x1245 (x1258 39)) (ite (= (x1258 0) (x1258 39)) 1 (x520 (x1258 39)))))
(assert (x172 x1334))
(assert (= (x660 (x1428 (x517 128))) (x517 128)))
(assert (= (x660 (x1258 1977493762)) 1977493762))
(assert (x172 x662))
(assert (= (x574 352) (x1582 352)))
(assert (x172 x1227))
(assert (= (- (/ x1030 (x377 2 x183)) (uninterp_frac x1030 (x377 2 x183))) (x1532 x1030 x183)))
(assert (x172 x1854))
(assert (= (x1504 896) x929))
(assert (= (x440 352) (x1277 352)))
(assert (x172 x1703))
(assert (x172 x1633))
(assert (x172 x1502))
(assert (x172 x698))
(assert (x172 x1155))
(assert (x655 (x1351 128)))
(assert (x172 x1843))
(assert (= (x513 320) x770))
(assert (= (x1724 640) (x158 640)))
(assert (x172 x951))
(assert (x172 x417))
(assert (x172 x324))
(assert (x172 x1210))
(assert (x172 x661))
(assert (x172 x367))
(assert (x172 x106))
(assert (x655 (x284 160)))
(assert (= (x660 (x842 x879 6)) (+ (x660 x879) 6)))
(assert (x172 x1133))
(assert (x172 x1548))
(assert (x172 x700))
(assert (= (x517 352) (x1501 352)))
(assert (= (x1245 (x1428 x648)) (ite (= (x1258 0) (x1428 x648)) 1 (x520 (x1428 x648)))))
(assert (x172 x1252))
(assert (= (x1885 928) (x1119 928)))
(assert (= (x1785 704) (x1105 704)))
(assert (= (x1370 992) (x1014 992)))
(assert (= (x574 320) (x1582 320)))
(assert (= (x660 (x1428 (x1739 128))) (x1739 128)))
(assert (= x285 (and x241 (not x827))))
(assert (= (ite (= (x1258 0) x1220) 1 (x957 x1220)) (x1425 x1220)))
(assert (= (x772 320) (x663 320)))
(assert (x172 x1296))
(assert (= (x1870 640) (x1620 640)))
(assert (= (x50 224) (x326 224)))
(assert (= (x1901 672) (x928 672)))
(assert (x172 x270))
(assert (= (x1055 x527) (ite (= x527 (x1258 0)) 1 (x520 x527))))
(assert (x172 x825))
(assert (x172 x381))
(assert (= (x127 640) (x955 640)))
(assert (= x1668 (or x9 x1680)))
(assert (x172 x554))
(assert (= (x158 352) (x1724 352)))
(assert (= (x955 672) (x127 672)))
(assert (x172 x599))
(assert (x172 x1046))
(assert (= (x980 352) (x216 352)))
(assert (= (x660 (x842 x1833 2)) (+ 2 (x660 x1833))))
(assert (= (x1785 928) (x1105 928)))
(assert (x172 x1821))
(assert (= (x1728 704) (x618 704)))
(assert (x655 x1535))
(assert (x172 x643))
(assert (x172 x125))
(assert (x172 x1069))
(assert (x655 (x1246 128)))
(assert (= (x1055 (x1428 x1033)) (ite (= (x1428 x1033) (x1258 0)) 1 (x520 (x1428 x1033)))))
(assert (=> (< (- (x284 128) 1) 10000) (= (x1258 (x284 128)) (x1428 (x284 128)))))
(assert (= (x1508 928) (x1723 928)))
(assert (and (= (x377 2 78) 302231454903657293676544) (= 1496577676626844588240573268701473812127674924007424 (x377 2 170)) (= 664613997892457936451903530140172288 (x377 2 119)) (= (x377 2 64) 18446744073709551616) (= 28269553036454149273332760011886696253239742350009903329945699220681916416 (x377 2 244)) (= (x377 2 241) 3533694129556768659166595001485837031654967793751237916243212402585239552) (= (x377 2 200) 1606938044258990275541962092341162602522202993782792835301376) (= (x377 2 201) 3213876088517980551083924184682325205044405987565585670602752) (= 1461501637330902918203684832716283019655932542976 (x377 2 160)) (= 105312291668557186697918027683670432318895095400549111254310977536 (x377 2 216)) (= 154742504910672534362390528 (x377 2 87)) (= (x377 2 152) 5708990770823839524233143877797980545530986496) (= (x377 2 210) 1645504557321206042154969182557350504982735865633579863348609024) (= (x377 2 96) 79228162514264337593543950336) (= (x377 2 249) 904625697166532776746648320380374280103671755200316906558262375061821325312) (= (x377 2 171) 2993155353253689176481146537402947624255349848014848) (= (x377 2 51) 2251799813685248) (= (x377 2 151) 2854495385411919762116571938898990272765493248) (= 102844034832575377634685573909834406561420991602098741459288064 (x377 2 206)) (= 128 (x377 2 7)) (= 13164036458569648337239753460458804039861886925068638906788872192 (x377 2 213)) (= (x377 2 128) 340282366920938463463374607431768211456) (= 5316911983139663491615228241121378304 (x377 2 122)) (= 45671926166590716193865151022383844364247891968 (x377 2 155)) (= 42535295865117307932921825928971026432 (x377 2 125)) (= 18889465931478580854784 (x377 2 74)) (= 32768 (x377 2 15)) (= 19807040628566084398385987584 (x377 2 94)) (= (x377 2 177) 191561942608236107294793378393788647952342390272950272) (= (x377 2 192) 6277101735386680763835789423207666416102355444464034512896) (= 140737488355328 (x377 2 47)) (= 401734511064747568885490523085290650630550748445698208825344 (x377 2 198)) (= 95780971304118053647396689196894323976171195136475136 (x377 2 176)) (= (x377 2 42) 4398046511104) (= (x377 2 90) 1237940039285380274899124224) (= (x377 2 85) 38685626227668133590597632) (= (x377 2 121) 2658455991569831745807614120560689152) (= (x377 2 186) 98079714615416886934934209737619787751599303819750539264) (= (x377 2 56) 72057594037927936) (= (x377 2 82) 4835703278458516698824704) (= 411376139330301510538742295639337626245683966408394965837152256 (x377 2 208)) (= 11150372599265311570767859136324180752990208 (x377 2 143)) (= (x377 2 31) 2147483648) (= 33554432 (x377 2 25)) (= 2 (x377 2 1)) (= 9671406556917033397649408 (x377 2 83)) (= (x377 2 226) 107839786668602559178668060348078522694548577690162289924414440996864) (= (x377 2 136) 87112285931760246646623899502532662132736) (= 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x377 2 256)) (= (x377 2 127) 170141183460469231731687303715884105728) (= 332306998946228968225951765070086144 (x377 2 118)) (= 12259964326927110866866776217202473468949912977468817408 (x377 2 183)) (= (x377 2 199) 803469022129495137770981046170581301261101496891396417650688) (= (x377 2 66) 73786976294838206464) (= 421249166674228746791672110734681729275580381602196445017243910144 (x377 2 218)) (= (x377 2 69) 590295810358705651712) (= 9903520314283042199192993792 (x377 2 93)) (= (x377 2 153) 11417981541647679048466287755595961091061972992) (= 4294967296 (x377 2 32)) (= (x377 2 0) 1) (= (x377 2 134) 21778071482940061661655974875633165533184) (= 256 (x377 2 8)) (= (x377 2 92) 4951760157141521099596496896) (= (x377 2 49) 562949953421312) (= (x377 2 73) 9444732965739290427392) (= (x377 2 149) 713623846352979940529142984724747568191373312) (= (x377 2 48) 281474976710656) (= 18014398509481984 (x377 2 54)) (= (x377 2 71) 2361183241434822606848) (= 11972621413014756705924586149611790497021399392059392 (x377 2 173)) (= 64 (x377 2 6)) (= 4 (x377 2 2)) (= (x377 2 169) 748288838313422294120286634350736906063837462003712) (= (x377 2 24) 16777216) (= 6129982163463555433433388108601236734474956488734408704 (x377 2 182)) (= 182687704666362864775460604089535377456991567872 (x377 2 157)) (= (x377 2 185) 49039857307708443467467104868809893875799651909875269632) (= 89202980794122492566142873090593446023921664 (x377 2 146)) (= 8589934592 (x377 2 33)) (= 5070602400912917605986812821504 (x377 2 102)) (= 19342813113834066795298816 (x377 2 84)) (= 1361129467683753853853498429727072845824 (x377 2 130)) (= 1569275433846670190958947355801916604025588861116008628224 (x377 2 190)) (= (x377 2 89) 618970019642690137449562112) (= 1393796574908163946345982392040522594123776 (x377 2 140)) (= 2417851639229258349412352 (x377 2 81)) (= (x377 2 70) 1180591620717411303424) (= 576460752303423488 (x377 2 59)) (= 5846006549323611672814739330865132078623730171904 (x377 2 162)) (= (x377 2 255) 57896044618658097711785492504343953926634992332820282019728792003956564819968) (= (x377 2 34) 17179869184) (= 46768052394588893382517914646921056628989841375232 (x377 2 165)) (= 431359146674410236714672241392314090778194310760649159697657763987456 (x377 2 228)) (= 65536 (x377 2 16)) (= 13479973333575319897333507543509815336818572211270286240551805124608 (x377 2 223)) (= 1073741824 (x377 2 30)) (= (x377 2 103) 10141204801825835211973625643008) (= 36028797018963968 (x377 2 55)) (= (x377 2 100) 1267650600228229401496703205376) (= 4096 (x377 2 12)) (= (x377 2 215) 52656145834278593348959013841835216159447547700274555627155488768) (= (x377 2 35) 34359738368) (= (x377 2 180) 1532495540865888858358347027150309183618739122183602176) (= 441711766194596082395824375185729628956870974218904739530401550323154944 (x377 2 238)) (= 1427247692705959881058285969449495136382746624 (x377 2 150)) (= 83076749736557242056487941267521536 (x377 2 116)) (= 633825300114114700748351602688 (x377 2 99)) (= 512 (x377 2 9)) (= (x377 2 110) 1298074214633706907132624082305024) (= (x377 2 214) 26328072917139296674479506920917608079723773850137277813577744384) (= 2048 (x377 2 11)) (= (x377 2 229) 862718293348820473429344482784628181556388621521298319395315527974912) (= (x377 2 77) 151115727451828646838272) (= (x377 2 14) 16384) (= (x377 2 250) 1809251394333065553493296640760748560207343510400633813116524750123642650624) (= (x377 2 203) 12855504354071922204335696738729300820177623950262342682411008) (= (x377 2 114) 20769187434139310514121985316880384) (= 41538374868278621028243970633760768 (x377 2 115)) (= (x377 2 46) 70368744177664) (= 3450873173395281893717377931138512726225554486085193277581262111899648 (x377 2 231)) (= 6427752177035961102167848369364650410088811975131171341205504 (x377 2 202)) (= (x377 2 174) 23945242826029513411849172299223580994042798784118784) (= 4194304 (x377 2 22)) (= 77371252455336267181195264 (x377 2 86)) (= 53919893334301279589334030174039261347274288845081144962207220498432 (x377 2 225)) (= 22300745198530623141535718272648361505980416 (x377 2 144)) (= (x377 2 139) 696898287454081973172991196020261297061888) (= (x377 2 41) 2199023255552) (= (x377 2 88) 309485009821345068724781056) (= 4503599627370496 (x377 2 52)) (= (x377 2 248) 452312848583266388373324160190187140051835877600158453279131187530910662656) (= 1152921504606846976 (x377 2 60)) (= 40564819207303340847894502572032 (x377 2 105)) (= (x377 2 75) 37778931862957161709568) (= 10633823966279326983230456482242756608 (x377 2 123)) (= 1048576 (x377 2 20)) (= 274877906944 (x377 2 38)) (= 3138550867693340381917894711603833208051177722232017256448 (x377 2 191)) (= 23384026197294446691258957323460528314494920687616 (x377 2 164)) (= 2305843009213693952 (x377 2 61)) (= 1208925819614629174706176 (x377 2 80)) (= (x377 2 63) 9223372036854775808) (= 842498333348457493583344221469363458551160763204392890034487820288 (x377 2 219)) (= 2475880078570760549798248448 (x377 2 91)) (= 1725436586697640946858688965569256363112777243042596638790631055949824 (x377 2 230)) (= (x377 2 175) 47890485652059026823698344598447161988085597568237568) (= 20282409603651670423947251286016 (x377 2 104)) (= (x377 2 39) 549755813888) (= 524288 (x377 2 19)) (= (x377 2 29) 536870912) (= (x377 2 168) 374144419156711147060143317175368453031918731001856) (= (x377 2 97) 158456325028528675187087900672) (= 1125899906842624 (x377 2 50)) (= (x377 2 197) 200867255532373784442745261542645325315275374222849104412672) (= (x377 2 27) 134217728) (= 56539106072908298546665520023773392506479484700019806659891398441363832832 (x377 2 245)) (= (x377 2 196) 100433627766186892221372630771322662657637687111424552206336) (= (x377 2 184) 24519928653854221733733552434404946937899825954937634816) (= 14474011154664524427946373126085988481658748083205070504932198000989141204992 (x377 2 253)) (= (x377 2 107) 162259276829213363391578010288128) (= 210624583337114373395836055367340864637790190801098222508621955072 (x377 2 217)) (= 316912650057057350374175801344 (x377 2 98)) (= 268435456 (x377 2 28)) (= 205688069665150755269371147819668813122841983204197482918576128 (x377 2 207)) (= (x377 2 237) 220855883097298041197912187592864814478435487109452369765200775161577472) (= 8796093022208 (x377 2 43)) (= 22835963083295358096932575511191922182123945984 (x377 2 154)) (= 196159429230833773869868419475239575503198607639501078528 (x377 2 187)) (= (x377 2 13) 8192) (= 44601490397061246283071436545296723011960832 (x377 2 145)) (= (x377 2 68) 295147905179352825856) (= 67108864 (x377 2 26)) (= (x377 2 227) 215679573337205118357336120696157045389097155380324579848828881993728) (= 2596148429267413814265248164610048 (x377 2 111)) (= (x377 2 156) 91343852333181432387730302044767688728495783936) (= (x377 2 242) 7067388259113537318333190002971674063309935587502475832486424805170479104) (= 35184372088832 (x377 2 45)) (= (x377 2 57) 144115188075855872) (= (x377 2 36) 68719476736) (= 174224571863520493293247799005065324265472 (x377 2 137)) (= 8388608 (x377 2 23)) (= (x377 2 62) 4611686018427387904) (= 5192296858534827628530496329220096 (x377 2 112)) (= (x377 2 221) 3369993333393829974333376885877453834204643052817571560137951281152) (= (x377 2 53) 9007199254740992) (= 604462909807314587353088 (x377 2 79)) (= 6739986666787659948666753771754907668409286105635143120275902562304 (x377 2 222)) (= (x377 2 204) 25711008708143844408671393477458601640355247900524685364822016) (= 5986310706507378352962293074805895248510699696029696 (x377 2 172)) (= 8 (x377 2 3)) (= 730750818665451459101842416358141509827966271488 (x377 2 159)) (= 21267647932558653966460912964485513216 (x377 2 124)) (= 1766847064778384329583297500742918515827483896875618958121606201292619776 (x377 2 240)) (= (x377 2 58) 288230376151711744) (= 226156424291633194186662080095093570025917938800079226639565593765455331328 (x377 2 247)) (= 1024 (x377 2 10)) (= 51422017416287688817342786954917203280710495801049370729644032 (x377 2 205)) (= 1684996666696914987166688442938726917102321526408785780068975640576 (x377 2 220)) (= (x377 2 161) 2923003274661805836407369665432566039311865085952) (= (x377 2 243) 14134776518227074636666380005943348126619871175004951664972849610340958208) (= 784637716923335095479473677900958302012794430558004314112 (x377 2 189)) (= 348449143727040986586495598010130648530944 (x377 2 138)) (= (x377 2 251) 3618502788666131106986593281521497120414687020801267626233049500247285301248) (= 113078212145816597093331040047546785012958969400039613319782796882727665664 (x377 2 246)) (= 137438953472 (x377 2 37)) (= 12554203470773361527671578846415332832204710888928069025792 (x377 2 193)) (= (x377 2 120) 1329227995784915872903807060280344576) (= 27606985387162255149739023449108101809804435888681546220650096895197184 (x377 2 234)) (= (x377 2 239) 883423532389192164791648750371459257913741948437809479060803100646309888) (= 36893488147419103232 (x377 2 65)) (= 383123885216472214589586756787577295904684780545900544 (x377 2 178)) (= (x377 2 113) 10384593717069655257060992658440192) (= (x377 2 141) 2787593149816327892691964784081045188247552) (= (x377 2 95) 39614081257132168796771975168) (= (x377 2 40) 1099511627776) (= (x377 2 106) 81129638414606681695789005144064) (= 75557863725914323419136 (x377 2 76)) (= (x377 2 17) 131072) (= (x377 2 72) 4722366482869645213696) (= (x377 2 252) 7237005577332262213973186563042994240829374041602535252466099000494570602496) (= 178405961588244985132285746181186892047843328 (x377 2 147)) (= 680564733841876926926749214863536422912 (x377 2 129)) (= (x377 2 211) 3291009114642412084309938365114701009965471731267159726697218048) (= (x377 2 21) 2097152) (= 93536104789177786765035829293842113257979682750464 (x377 2 166)) (= 32 (x377 2 5)) (= 166153499473114484112975882535043072 (x377 2 117)) (= (x377 2 181) 3064991081731777716716694054300618367237478244367204352) (= 11692013098647223345629478661730264157247460343808 (x377 2 163)) (= 2722258935367507707706996859454145691648 (x377 2 131)) (= 6582018229284824168619876730229402019930943462534319453394436096 (x377 2 212)) (= 365375409332725729550921208179070754913983135744 (x377 2 158)) (= 262144 (x377 2 18)) (= (x377 2 44) 17592186044416) (= 392318858461667547739736838950479151006397215279002157056 (x377 2 188)) (= 55213970774324510299478046898216203619608871777363092441300193790394368 (x377 2 235)) (= 187072209578355573530071658587684226515959365500928 (x377 2 167)) (= 16 (x377 2 4)) (= (x377 2 209) 822752278660603021077484591278675252491367932816789931674304512) (= (x377 2 109) 649037107316853453566312041152512) (= (x377 2 135) 43556142965880123323311949751266331066368) (= (x377 2 67) 147573952589676412928) (= 5575186299632655785383929568162090376495104 (x377 2 142)) (= (x377 2 254) 28948022309329048855892746252171976963317496166410141009864396001978282409984) (= 324518553658426726783156020576256 (x377 2 108)) (= 6901746346790563787434755862277025452451108972170386555162524223799296 (x377 2 232)) (= (x377 2 224) 26959946667150639794667015087019630673637144422540572481103610249216) (= (x377 2 101) 2535301200456458802993406410752) (= 50216813883093446110686315385661331328818843555712276103168 (x377 2 195)) (= (x377 2 194) 25108406941546723055343157692830665664409421777856138051584) (= 85070591730234615865843651857942052864 (x377 2 126)) (= (x377 2 148) 356811923176489970264571492362373784095686656) (= 13803492693581127574869511724554050904902217944340773110325048447598592 (x377 2 233)) (= 5444517870735015415413993718908291383296 (x377 2 132)) (= 766247770432944429179173513575154591809369561091801088 (x377 2 179)) (= (x377 2 236) 110427941548649020598956093796432407239217743554726184882600387580788736) (= 10889035741470030830827987437816582766592 (x377 2 133))))
(assert (x172 x411))
(assert (= (x660 (x1428 (x1351 128))) (x1351 128)))
(assert (= (x514 352) x131))
(assert (= (x1399 736) (ite (and x300 x1331) (x975 736) (x828 736))))
(assert (= (x660 (x1428 (x959 160))) (x959 160)))
(assert (= (x1335 960) (x1808 960)))
(assert (x655 (x836 160)))
(assert (x172 x259))
(assert (= (x517 928) (x1501 928)))
(assert (= (x1006 896) (x1505 896)))
(assert (= (x1462 256) (x403 256)))
(assert (= (x1869 768) (x738 768)))
(assert (x172 x1632))
(assert (x172 x1087))
(assert (= (x693 672) (x545 672)))
(assert (x172 x929))
(assert (= (x513 224) (x836 224)))
(assert (= x647 (=> (and (= (> x1166 0) x753) (or (not x1156) (and (> 4294967296 x596) (= x1195 (>= (x1207 (x1428 274184521717934524641157099916833587200)) x369)) x1195 (= x401 (= x673 (x1207 (x1428 x809)))) x401 (= x673 (x897 (x1428 x809))) (= (x897 (x1428 274184521717934524641157099916833587200)) x369) x1156)) (= x786 (x453 736)) (= (x1163 (+ 512 x1756)) x1646) (= x1732 (x1298 (x1258 10))) (= x1756 (x1430 384)) (= x1166 (x346 320)) (or (not x753) (and (= (x1897 (- 32 x1867)) x239) (= (uninterp_mod (* x239 8) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x183) x753 (= (x1532 x1030 x183) x1155) (> x1155 0) (= (x346 320) x1867) (= (x346 352) x1030))) (= (x1430 256) x1317) (= (x1515 768) x152) (or (not x875) (and (> 4294967296 x1177) x875)) (= (<= x112 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (< 3 x112) (not (> x1496 x411)) (= (x1035 x1555) x411) (>= 1461501637330902918203684832716283019655932542975 x1364) (= (< 0 x1636) x211) (not (< x1835 x786)) (= x599 (x877 736)) (= x1835 (x782 (x1258 9))) (= (x291 768) x1187) (= x1633 (x114 672)) (> x1463 0) (= x563 (x346 736)) (>= 1461501637330902918203684832716283019655932542975 x1280) (= (x1163 (+ x1756 480)) x969) (= (x588 576) x1487) (>= x425 0) (= x556 x231) (= x855 (x1897 (- x411 x1496))) (= x809 (x738 224)) (= (x1163 (+ x1487 32)) x1268) (>= 1461501637330902918203684832716283019655932542975 x425) (= (x1366 (x1428 (x877 128)) (x1428 (x877 160)) 0) x1555) (>= x1364 0) (or (and x211 (> 4294967296 x763)) (not x211)) (= (x1163 (+ x1756 64)) x319) (= x894 (ite (> 32 x596) x596 32)) (= (< 0 x1463) x1156) (= x1013 x425) (= x231 x1280) (= x1496 (x877 736)) (= (x1826 800) x1150) (= (x1897 (- x1835 x786)) x33) (>= x1280 0) (= (< 0 x1638) x875) (= (x978 768) x68) (= (x871 288) x637)) x557)))
(assert (= (x1723 768) (x1508 768)))
(assert (= (x1597 864) (x1475 864)))
(assert (x172 x1649))
(assert (= (x660 (x1428 (x968 160))) (x968 160)))
(assert (=> (> (+ 10000 1) (x1345 128)) (= (x1258 (x1345 128)) (x1428 (x1345 128)))))
(assert (= (x1627 736) (x1004 736)))
(assert (x172 x1407))
(assert (= (x1572 320) (x111 320)))
(assert (= (x1491 704) (x244 704)))
(assert (= (x1004 672) (x1627 672)))
(assert (= (ite (= x1142 (x1258 0)) 1 (x520 x1142)) (x1055 x1142)))
(assert (= (ite (= (x1258 40) (x1258 0)) 1 (x520 (x1258 40))) (x1245 (x1258 40))))
(assert (x172 x664))
(assert (= x1758 (or (and (not x1437) x1606) (and x338 (not x1762)))))
(assert (x655 x115))
(assert (= (x1504 640) (x1120 640)))
(assert (= (x660 (x1428 (x1443 160))) (x1443 160)))
(assert (= x1551 (=> (= x672 (< 31 x1605)) (and (=> x672 x1520) (=> (not x672) x891)))))
(assert (x172 x1690))
(assert (x172 x1842))
(assert (= x1856 (x660 (x1428 x1856))))
(assert (x172 x305))
(assert (x172 x1812))
(assert (x172 x673))
(assert (= 3567397854 (x660 (x1258 3567397854))))
(assert (x172 x1017))
(assert (= (x387 704) (x1497 704)))
(assert (= x1483 (and (not x1191) x1103)))
(assert (x172 x461))
(assert (= x1203 (and x1437 x1606)))
(assert (x655 (x1345 128)))
(assert (= (x660 (x842 x1189 2)) (+ 2 (x660 x1189))))
(assert (= (ite (= x1300 (x1258 0)) 1 (x520 x1300)) (x1055 x1300)))
(assert (= 274184521717934524641157099916833587200 (x660 (x1258 274184521717934524641157099916833587200))))
(assert (= (x1262 736) (x283 736)))
(assert (= (x236 672) (ite (and x1529 x88) (x1910 672) (x1212 672))))
(assert (= x1493 (or (and (not x1233) x1799) (and (not x1801) x1290))))
(assert (= (x513 704) (x836 704)))
(assert (x655 (x1335 160)))
(assert (= (x836 256) (x513 256)))
(assert (x172 x96))
(assert (x172 x956))
(assert (x172 x415))
(assert (= (x535 640) (x1392 640)))
(assert (x172 x1326))
(assert (=> (> (+ 10000 1) x125) (= (x1258 x125) (x1428 x125))))
(assert (x172 x963))
(assert (x172 x195))
(assert (= (x1788 736) (x512 736)))
(assert (x172 x205))
(assert (= (x660 (x1258 1401663147)) 1401663147))
(assert (x172 x1756))
(assert (=> (> (+ 10000 1) (x1351 128)) (= (x1428 (x1351 128)) (x1258 (x1351 128)))))
(assert (= (x1383 736) (x1282 736)))
(assert (= x557 (=> (and (not (> 4 x112)) (= (x1327 (x1428 274184521717934524641157099916833587200)) x1058) (= x755 (> x83 0)) (< 0 x1058)) (and (=> x755 x891) (=> (not x755) x1406)))))
(assert (= (x50 1056) (x326 1056)))
(assert (=> (> (+ 10000 1) (x1572 160)) (= (x1258 (x1572 160)) (x1428 (x1572 160)))))
(assert (x172 x3))
(assert (= (ite (= (x1258 43) (x1258 0)) 1 (x957 (x1258 43))) (x1425 (x1258 43))))
(assert (= (x660 (x1428 (x158 160))) (x158 160)))
(assert (= (x1354 736) (ite (and x1160 x325) (x722 736) (x771 736))))
(assert (= (x1237 352) (x497 352)))
(assert (=> (> (+ 10000 1) (x1197 160)) (= (x1258 (x1197 160)) (x1428 (x1197 160)))))
(assert (x172 x922))
(assert (= (x1004 896) (x1627 896)))
(assert (= (+ 6 (x660 x1737)) (x660 (x842 x1737 6))))
(assert (=> (< (- x129 1) 10000) (= (x1428 x129) (x1258 x129))))
(assert (= (x274 704) (x1157 704)))
(assert (= (x693 864) (x545 864)))
(assert (x172 x254))
(assert (x172 x122))
(assert (x172 x1385))
(assert (x172 x1381))
(assert (=> (< (- x809 1) 10000) (= (x1428 x809) (x1258 x809))))
(assert (= (x660 (x1258 1889567281)) 1889567281))
(assert (x172 x1389))
(assert (x172 x1752))
(assert (x172 x1706))
(assert (= (x348 160) (x660 (x1428 (x348 160)))))
(assert (= (ite (= (x1428 x1033) (x1258 0)) 1 (x957 (x1428 x1033))) (x1425 (x1428 x1033))))
(assert (= (and (not x1211) x1190) x1899))
(assert (x172 x1426))
(assert (x172 x1441))
(assert (= (x1258 76450787359836037641860180984291677749980919077056822294353438043884394381312) (x1428 76450787359836037641860180984291677749980919077056822294353438043884394381312)))
(assert (x172 x1598))
(assert (x172 x625))
(assert (= (x1124 1088) (x735 1088)))
(assert (= (x50 704) (x326 704)))
(assert (= (=> (and (= (< x716 x536) x1211) (= x716 (x1163 (+ x536 x395))) (= (x1425 (x1258 40)) x395) (= (x1610 224) x536)) (and (=> x1211 x891) (=> (not x1211) x222))) x224))
(assert (= (x500 320) (x210 320)))
(assert (x172 x620))
(assert (= (x1785 896) (x1105 896)))
(assert (= (x15 704) (x908 704)))
(assert (= (x1258 3504541104) (x1428 3504541104)))
(assert (x172 x1681))
(assert (= (x1245 (x1428 x1856)) (ite (= (x1428 x1856) (x1258 0)) 1 (x520 (x1428 x1856)))))
(assert (x172 x183))
(assert (= x1417 (and x72 x1698)))
(assert (x172 x1774))
(assert (x172 x1427))
(assert (= x1185 (=> (and (= (x1063 (x1258 40)) x432) (= (x1366 (x1428 (x1351 128)) (x1428 (x1351 160)) 0) x879) (= (x1351 256) x477) (= (x842 x879 6) x705) (= x632 (< x432 x477)) (= x1488 (x1897 (- x1524 x286))) (= (x1416 224) x1301)) (and (=> x632 x891) (=> (and (not x632) (= x1172 (x1897 (- x432 x477)))) x820)))))
(assert (x172 x1611))
(assert (= (x660 (x1428 (x284 160))) (x284 160)))
(assert (= (+ 6 (x660 x1421)) (x660 (x842 x1421 6))))
(assert (x172 x452))
(assert (x172 x1791))
(assert (= (=> (and (= (x1183 320) x718) (= x1598 (x1897 (- x979 x232))) (= (< x1143 x718) x1776) (= x1143 (x1180 (x1258 39)))) (and (=> (and (not x1776) (= x1046 (x1897 (- x1143 x718)))) x1630) (=> x1776 x891))) x273))
(assert (= (x980 928) (x216 928)))
(assert (= (x1399 768) (ite (and x1331 x300) (x975 768) (x828 768))))
(assert (= (x81 736) (x771 736)))
(assert (= (=> (and (= x23 (- (/ x376 10000) (uninterp_frac x376 10000))) (= (< x23 x1037) x1762) (= x1037 (x1519 864))) (and (=> (not x1762) x1679) (=> x1762 x891))) x1755))
(assert (= (x1258 2757214935) (x1428 2757214935)))
(assert (= (x386 896) x1091))
(assert (= (x196 320) (x1225 320)))
(assert (x172 x792))
(assert (x172 x1041))
(assert (x172 x380))
(assert (= (x1370 672) (x1014 672)))
(assert (x172 x397))
(assert (x172 x432))
(assert (= (x513 768) (x836 768)))
(assert (x172 x1424))
(assert (= (ite (and x624 x575 x569) (ite (and x575 x569 x890 x624) (x1375 (x1428 x1535)) (x785 (x1428 x1535))) (x785 (x1428 x1535))) (x848 (x1428 x1535))))
(assert (= x1782 (and x1834 (not x1034))))
(assert (= (=> (and (= (- (/ x1907 x1634) (uninterp_frac x1907 x1634)) x107) (= (x567 (x1258 44)) x1506) (= (= 0 (ite x486 1 0)) x1665) (= x1907 (uninterp_mod (* x1634 x1506) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= x1022 (= 0 x1634)) (= (or x778 x1022) x486) (= (x1897 (- x981 x509)) x1634) (= (= x107 x1506) x778)) (and (=> (not x1665) x1436) (=> x1665 x891))) x1745))
(assert (x172 x170))
(assert (x172 x1094))
(assert (x655 (x877 128)))
(assert (= (=> (= x1719 (> x1664 0)) (and (=> (not x1719) x891) (=> (and x1719 (or (not x614) (and x614 (< x359 4294967296))) (= (ite (> 32 x713) x713 32) x443) (= x1701 (x1163 (+ x1133 32))) (= x614 (> x1441 0)) (= (x248 576) x1133)) x1149))) x1556))
(assert (= x1757 (and x1382 x1803)))
(assert (x172 x1905))
(assert (= x1637 (and x950 (not x378))))
(assert (x172 x876))
(assert (x172 x587))
(assert (= x1587 (=> (and (= (x193 352) x1337) (= x134 (x1897 (- 32 x695))) (= (< 0 (x1532 x1337 x541)) x719) (= x541 (uninterp_mod (* x134 8) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= (x193 320) x695)) (and (=> (not x719) x891) (=> x719 x976)))))
(assert (= (x1055 x345) (ite (= x345 (x1258 0)) 1 (x520 x345))))
(assert (= (x440 864) (x1277 864)))
(assert (x172 x1621))
(assert (x172 x816))
(assert (x172 x910))
(assert (x172 x1228))
(assert (= (x371 256) (x1848 256)))
(assert (=> (> (+ 10000 1) (x517 128)) (= (x1428 (x517 128)) (x1258 (x517 128)))))
(assert (= (and (not x882) x863) x84))
(assert (= (x1197 128) (x660 (x1428 (x1197 128)))))
(assert (x172 x1337))
(assert (= (x660 (x1428 (x1183 160))) (x1183 160)))
(assert (= (x641 736) (x1780 736)))
(assert (= (=> (and (> x1486 31) (= x887 (x1505 960)) (= (x1505 768) x1174) (= x575 (< x887 x1174)) (> x643 0) (= x504 (x1006 992))) (and (=> (and (= (> x60 0) x569) (= x1039 (x1897 (- x1061 x1480))) (= (ite (< x1333 x529) x1333 x529) x801) (= x60 (x1724 992)) (or (not x569) (and (not (> x593 x602)) (= (x448 1056) x1490) (= (x1897 (- x602 x593)) x490) (= x498 (x1366 (x1428 (x448 128)) (x1428 (x448 160)) 0)) (not (> x1178 x845)) (= x1708 (x1105 896)) (< 0 x1458) (= (< 0 x1188) x1715) (= x845 (x767 (x1258 40))) (= x499 (x1785 992)) (= x1583 (> x640 0)) (= x1832 (x775 x546)) (= x890 (> x1415 0)) (= (x688 960) x593) (or (not x890) (and (< x1711 4294967296) (= x288 (x785 (x1428 274184521717934524641157099916833587200))) x874 (= x1099 (x785 (x1428 x1708))) x890 x1882 (= (= (x1375 (x1428 x1708)) x1099) x1882) (= (<= x288 (x1375 (x1428 274184521717934524641157099916833587200))) x874))) (not (< x1832 x1490)) (= x1178 (x448 1056)) (< 31 x1385) (= (x1784 1056) x1837) (= x546 (x842 x498 6)) (= x602 (x688 1088)) (> x1415 0) (= (x1897 (- x845 x1178)) x580) x569 (= x253 (x1897 (- x1832 x1490))) (> x1711 31) (= x428 (x1108 896)) (or (and (not x1583) (= x640 x1458)) (and (= x1458 1) x1583 (> 4294967296 x1385))) (or (not x1715) (and (not (> x1619 x29)) (= (x627 896) x143) (= x681 (x12 288)) (= (x12 256) x945) x1715 (= (x912 224) x1868) (= x547 (x585 (x1258 40))) (not (> x1735 x751)) (not (> x305 x681)) (= (x842 x340 6) x830) (= (x842 x1783 8) x63) (= (x724 1024) x549) (= x1516 (x1615 x63)) (= x324 (x1245 (x1258 39))) (= (= 0 x324) x207) (= (x1897 (- x681 x305)) x1112) (= x90 (x724 864)) (or (and (= x1612 (x1848 224)) (= x1024 (= x1747 x464)) (not (= x201 0)) (= x480 (x1245 (x1258 40))) (= (x326 320) x1448) (= x1549 (= 0 x1448)) (or (and (= (x1897 (- x52 x784)) x1765) (not (< x52 x784)) (= x13 (x1345 320)) (not x1549) (= x1089 (x326 224)) (= (x1857 (x1258 39)) x1853) (= x1395 (x842 x128 2)) (= (x1897 (- x1853 x13)) x160) (= x52 (x1245 x1395)) (= (x1366 (x1428 (x1345 128)) (x1428 (x1345 160)) 0) x128) (not (< x1853 x13)) (= (x1345 320) x784)) x1549) (= x368 (= x910 0)) (= x677 (x1245 x450)) (= x907 (- (/ x351 x480) (uninterp_frac x351 x480))) (= x201 (ite x74 1 0)) (= (x1245 (x1258 39)) x1747) (= (x842 x1833 2) x450) (not (= x480 0)) (= (uninterp_mod (* x910 x1747) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x351) (= x74 (or x1024 x368)) (= (x1366 (x1428 (x50 128)) (x1428 (x50 160)) 0) x1833) (= x920 (ite (> x907 x677) x677 x907)) (= (- (/ x351 x910) (uninterp_frac x351 x910)) x464) (not x207) (= x910 (x1848 256))) x207) (= (x1898 768) x751) (= (x1898 1024) x1735) (= (x1845 224) x202) (= (x1366 (x1428 (x12 128)) (x1428 (x12 160)) 0) x1783) (not (<= 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x549 x90))) (= x505 (x1163 (+ x549 x90))) (= x29 (x1848 288)) (= (x12 256) x305) (= (x1366 (x1428 (x1246 128)) (x1428 (x1246 160)) 0) x1884) (= (x12 224) x679) (= (x1366 (x1428 (x371 128)) (x1428 (x371 160)) 0) x340) (= (x1897 (- x547 x668)) x409) (not (>= (+ x1516 x945) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= (x1848 256) x1619) (= x219 (x1897 (- x751 x1735))) (= (x1245 x830) x1312) (not (> x668 x547)) (= x1639 (x842 x1884 6)) (= x1334 (x1163 (+ x945 x1516))) (= x834 (x1275 1024)) (= (x1246 256) x668))) (= (x1898 1024) x1188))) (= x1049 (x623 896)) (= x529 (x623 992)) (= (x1505 768) x1061) (= (x1366 (x1428 (x158 128)) (x1428 (x158 160)) 0) x249) (not (< x1061 x1480)) (= x1480 (x1505 960)) x575 (= x518 (x842 x249 6)) (= x1333 (x1245 x518))) x431) (=> (not x575) x1793))) x420))
(assert (x172 x118))
(assert (= (x1339 864) (x968 864)))
(assert (= (x1102 (x1428 x739)) (ite (and x1256 x1127 x613) (ite (and x1256 x1127 x885 x613) (x992 (x1428 x739)) (x785 (x1428 x739))) (x785 (x1428 x739)))))
(assert (x172 x1393))
(assert (= (x1627 320) (x1004 320)))
(assert (= (x1040 704) (x1643 704)))
(assert (= (x1157 1056) x1054))
(assert (= (ite (and x1256 x613 x1127) (ite (and x1256 x613 x1127 x885) (x992 (x1428 x129)) (x785 (x1428 x129))) (x785 (x1428 x129))) (x1102 (x1428 x129))))
(assert (= (x660 (x1428 (x250 128))) (x250 128)))
(assert (= x820 (=> (and (= x223 (< x1224 x1738)) (= (x842 x794 6) x1401) (= (x1234 896) x62) (= (x898 x1401) x1224) (= (x284 1056) x1738) (= x794 (x1366 (x1428 (x284 128)) (x1428 (x284 160)) 0))) (and (=> (not x223) x1434) (=> x223 x891)))))
(assert (x172 x1188))
(assert (= (x660 (x1428 (x1345 128))) (x1345 128)))
(assert (= (x1788 672) (x512 672)))
(assert (x172 x55))
(assert (= (and (not x925) x938) x615))
(assert (x172 x306))
(assert (= (x360 640) (x135 640)))
(assert (x172 x713))
(assert (x172 x449))
(assert (x172 x979))
(assert (x172 x710))
(assert (= (x660 (x1428 (x371 128))) (x371 128)))
(assert (= (x1475 640) (x1597 640)))
(assert (x172 x1877))
(assert (= (=> (and (= x1021 (x777 640)) (= x743 (> x1656 x1021)) (= (x708 928) x1137) (= (x777 736) x1656)) (and (=> x743 x891) (=> (not x743) x525))) x493))
(assert (= x1584 (=> (and (= (> x1423 x1363) x765) (= (x1728 960) x1423) (= (x1728 1088) x1363)) (and (=> x765 x891) (=> (not x765) x1264)))))
(assert (= x1322 (=> (and (= x423 (x1163 (+ 512 x1081))) (= (x196 736) x1017) (or (and (= (x1225 352) x461) (not x1707)) (and (= (ite x901 1 0) x1526) (= x1690 (uninterp_mod (* x609 x1319) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (not (<= 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x171 x664))) (= (- (/ x1690 x609) (uninterp_frac x1690 x609)) x1308) (not (= 0 x485)) (= (x279 224) x433) (= x1319 (x1518 384)) (= x412 (x1163 (+ x171 x664))) (< 31 x361) (= (= x1319 x1308) x243) (< 0 x542) (= x609 (x1225 352)) (or (and x727 (= (ite x1332 1 0) x1687) (= x47 (x1897 (- x1476 x1479))) (= (uninterp_mod (* x42 x132) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x170) (= x132 (x1892 224)) (= (x1892 256) x42) (= (or x53 x1875) x1332) (= x1875 (= 0 x132)) (= x53 (= x1435 x42)) (= (- (/ x170 x132) (uninterp_frac x170 x132)) x1435) (not (> x1479 x1476)) (not (= 0 x1687)) (= (x1055 (x1258 43)) x1659) (= x1479 (- (/ x170 1000000000000000000) (uninterp_frac x170 1000000000000000000))) (= x1476 (x1892 256))) (not x727)) (not (< x1309 x590)) (= x1450 (x1055 (x1258 44))) (= (= x609 0) x1714) (= x1201 (= x447 0)) (= (or x243 x1714) x998) (= (- (/ x1690 x485) (uninterp_frac x1690 x485)) x185) (not (< x1151 x410)) (= x901 (or x1201 x2)) (= x485 (x1055 (x1258 9))) (= (x1897 (- x1151 x410)) x1911) (= (> x220 0) x1394) x1707 (not (= x1526 0)) (= (x741 224) x664) (not (= 0 x1065)) (= x922 (- (/ x35 x447) (uninterp_frac x35 x447))) (= (x1055 (x1258 41)) x590) (= (< x433 1000000000000000000) x727) (= x2 (= x1450 x922)) (or (and (not x1394) (= x220 x542)) (and x1394 (= x542 1) (< x361 4294967296))) (= x171 (x1055 (x1258 40))) (= x447 (x1897 (- x1069 x590))) (= (ite x998 1 0) x1065) (= (x1218 288) x1151) (= x410 (x762 320)) (= x35 (uninterp_mod (* x1450 x447) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (not (< x710 x6)) (or (not x1405) (and (< x1838 4294967296) x1405)) (= (x1594 768) x927) (not (= x999 2484372501)) (> x1534 0) (not (= x999 2835717307)) (not (= 3567397854 x999)) (not (= 3065339685 x999)) (= (x1780 576) x1495) (not (= x999 629314576)) (or (and (= (x1055 x1142) x1408) x4 (= (x1366 (x1428 (x348 128)) (x1428 (x348 160)) 0) x1142)) (not x4)) (= x662 (x1163 (+ 64 x1081))) (or (and (= x811 x1136) (not x1529)) (and (< x1010 4294967296) (= 1 x811) x1529)) (= x729 x1389) (not (< x683 4)) (or (and (= (>= (x184 (x1428 274184521717934524641157099916833587200)) x914) x750) x598 (= (x1820 (x1428 x1535)) x259) x1184 x750 (= (x1820 (x1428 274184521717934524641157099916833587200)) x914) (= (= (x184 (x1428 x1535)) x259) x598) (< x604 4294967296)) (not x1184)) (not (= 961581905 x999)) (= x54 x1854) (= true (<= x683 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (= x744 (x1238 736)) (= (x27 768) x555) (= x383 (x1327 (x1428 274184521717934524641157099916833587200))) (not (> x281 x587)) (= (x1107 288) x397) (not (< x212 x806)) (= (< 0 x1502) x1653) (not (< 0 x1894)) (= (x1468 x1097) x587) (= x396 false) (= (x439 384) x1081) (= x212 (x1055 x1300)) (not (= 1888058147 x999)) (or (not x1653) (and (> 4294967296 x652) x1653)) (not (= 3504541104 x999)) (= x1707 (> x1260 0)) (not (= x999 2209625481)) (not (= 3092021830 x999)) (= (x108 736) x1852) (>= 1461501637330902918203684832716283019655932542975 x1384) (= x336 (x769 640)) (or (and (= (x108 352) x686) (= x314 (x108 320)) x600 (= (uninterp_mod (* 8 x619) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x1786) (> x936 0) (= (x1897 (- 32 x314)) x619) (= (x1532 x686 x1786) x936)) (not x600)) (= (x196 736) x806) (not (< 10000 x540)) (= x449 (x1522 672)) (= (x108 320) x720) (= (x1542 768) x1265) (not (= x999 2052391781)) (not (= x999 2780307423)) (not (= x999 2316151882)) (= x296 (x1514 (x1258 10))) (> x383 0) (= (x1055 (x1258 9)) x1260) (= (x173 800) x1302) (= x451 (x1253 800)) (= x26 x1384) (= (x468 736) x6) (= (x1897 (- x587 x281)) x1539) (not (= x999 464926286)) (not (= x999 2869116585)) (= x1148 (x439 256)) (= (> x1534 0) x1184) (= (x1213 704) x540) (not (= 2757214935 x999)) (not (= x999 1977493762)) (= x710 (x1721 (x1258 9))) (not (> x729 0)) (<= 0 x1854) (= x4 (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1829)) (>= x1087 0) (= x796 x1013) (= x692 x54) (not (= 3184006219 x999)) (= (> x720 0) x600) (<= 0 x3) (<= 0 x692) (= x1300 (x1366 (x1428 (x196 128)) (x1428 (x196 160)) 0)) (not (= x999 348537858)) (not (= x999 1851080549)) (= x281 (x1238 736)) (= x117 (x1163 (+ 32 x1495))) (<= 0 x1384) (= (x520 (x1258 0)) x1894) (not (= 3296657447 x999)) (= x1829 (x1213 736)) (= x295 true) (< 0 x343) (not (= x999 2681579215)) (not (= x999 4267106866)) (= (< 0 x1365) x1405) (= (< 0 x1136) x1529) (<= x3 1461501637330902918203684832716283019655932542975) (not (= x999 596573372)) (= x54 x694) (= x697 x1087) (= (x196 736) x343) (>= 1461501637330902918203684832716283019655932542975 x1854) x1031 (= (not (= x694 x796)) x1031) (not (= x999 3963136098)) (= x999 1020253707) (not (= 599290589 x999)) (> x683 3) (not (= 157198259 x999)) (not (= 1401663147 x999)) (= (x1163 (+ x1081 480)) x630) (= x956 x26) (= x1770 (ite (> 32 x604) x604 32)) (= (x1366 (x1428 (x1238 128)) (x1428 (x1238 160)) 0) x1097) (not (= x999 31576340)) (= (x689 224) x1535) (<= x692 1461501637330902918203684832716283019655932542975) (= (x1897 (- x710 x6)) x1683) (>= 1461501637330902918203684832716283019655932542975 x1087) (= x1309 x1069)) x1297)))
(assert (= (x660 (x1428 x129)) x129))
(assert (x172 x1786))
(assert (x172 x1802))
(assert (= (x660 (x1258 2757214935)) 2757214935))
(assert (= (x1339 224) (x968 224)))
(assert (= (x1503 352) (x59 352)))
(assert (= (x1157 320) (x274 320)))
(assert (= (ite (= (x1258 0) (x1258 9)) 1 (x520 (x1258 9))) (x1245 (x1258 9))))
(assert (x172 x35))
(assert (x172 x849))
(assert (= x155 (=> (and (= (x387 928) x853) (= x648 (x1163 (+ x853 17))) (= (not (< 0 x1579)) x903) (= (x168 896) x1579) (= (x289 (x1428 x648)) x1751)) (and x903 x166))))
(assert (= x1461 (and x1290 x1801)))
(assert (x172 x1187))
(assert (x172 x1684))
(assert (x172 x1761))
(assert (= x1116 (and x327 (not x1350))))
(assert (x172 x268))
(assert (= (x588 736) (x1145 736)))
(assert (= (x1885 320) (x1119 320)))
(assert (x172 x717))
(assert (x172 x1853))
(assert (= (x497 672) (x1237 672)))
(assert (= (and (not x856) x1782) x701))
(assert (x172 x716))
(assert (= 274184521717934524641157099916833587200 (x660 (x1428 274184521717934524641157099916833587200))))
(assert (= (x663 704) (x772 704)))
(assert (= (=> (and (= x1355 (< 0 x576)) (= (x193 320) x576)) (and (=> x1355 x1587) (=> (not x1355) x976))) x1149))
(assert (= (x216 320) (x980 320)))
(assert (x172 x691))
(assert (= (x548 704) (x715 704)))
(assert (= x1349 (=> (and (= x1795 (< x76 x1767)) (= (x213 1024) x1603) (= (x1163 (+ x1603 x1767)) x76) (= (x1897 (- x1210 x20)) x293) (= (x213 864) x1767)) (and (=> x1795 x891) (=> (not x1795) x1447)))))
(assert (= (x660 (x1428 x1821)) x1821))
(assert (x172 x985))
(assert (x172 x247))
(assert (= (x1428 2209625481) (x1258 2209625481)))
(assert (= (and x1135 (not x539)) x338))
(assert (x172 x945))
(assert (x172 x1067))
(assert (= (x404 736) (x1242 736)))
(assert (= (and x1134 x1272) x746))
(assert (= (x1245 x740) (ite (= x740 (x1258 0)) 1 (x520 x740))))
(assert (= (or (and (not x1847) x1757) (and (not x743) x1493)) x94))
(assert (= (x689 224) (x1741 224)))
(assert (= (x153 160) (x660 (x1428 (x153 160)))))
(assert (= x944 (or (and (not x632) x1813) (and x1525 (not x994)))))
(assert (= x197 (=> (and (= x1191 (> x509 x981)) (= (x1044 288) x454) (= (x1163 (+ x924 x1761)) x299) (= x509 (x567 (x1258 41)))) (and (=> (not x1191) x1745) (=> x1191 x891)))))
(assert (x172 x837))
(assert (= (x1120 672) (x1504 672)))
(assert (= (x475 320) (x1797 320)))
(assert (x172 x495))
(assert (= (x1392 768) (x535 768)))
(assert (= (x419 352) (x756 352)))
(assert (x172 x318))
(assert (x172 x463))
(assert (x172 x1751))
(assert (x172 x1536))
(assert (= (x360 352) (x135 352)))
(assert (= (x1746 704) (x1229 704)))
(assert (= (x1242 864) (x404 864)))
(assert (x172 x109))
(assert (x655 (x331 128)))
(assert (= (x1194 640) (x1731 640)))
(assert (x172 x1825))
(assert (= (x1428 2869116585) (x1258 2869116585)))
(assert (x172 x960))
(assert (=> (< (- (x371 160) 1) 10000) (= (x1258 (x371 160)) (x1428 (x371 160)))))
(assert (= x125 (x660 (x1428 x125))))
(assert (= (x980 640) (x216 640)))
(assert (= (=> (and (= x1016 (> x98 10000)) (= x1255 (x1731 640)) (= x98 (x1194 704))) (and (=> (and (not x1016) (= (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1311) x1410) (= (x1194 736) x1311) (or (and x1410 (= (x1425 x527) x1478) (= (x1366 (x1428 (x1443 128)) (x1428 (x1443 160)) 0) x527)) (not x1410))) x1891) (=> x1016 x891))) x1090))
(assert (= x851 (or (and x615 (not x943)) (and x1860 (not x407)))))
(assert (= (x1262 928) (x283 928)))
(assert (x172 x1702))
(assert (= (x326 928) (x50 928)))
(assert (= (ite (and x300 x1331) (x975 320) (x828 320)) (x1399 320)))
(assert (= (x1105 864) (x1785 864)))
(assert (= (x1119 736) (x1885 736)))
(assert (= (x1443 128) (x660 (x1428 (x1443 128)))))
(assert (x172 x245))
(assert (= (x660 (x1428 (x836 160))) (x836 160)))
(assert (= (x660 (x1428 (x1411 160))) (x1411 160)))
(assert (= (x660 (x1428 x1535)) x1535))
(assert (= (x497 640) (x1237 640)))
(assert (x172 x1712))
(assert (x172 x1709))
(assert (x172 x883))
(assert (= (x153 128) (x660 (x1428 (x153 128)))))
(assert (x172 x359))
(assert (= (x660 (x1258 629314576)) 629314576))
(assert (x172 x443))
(assert (x172 x811))
(assert (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x660 (x1258 115792089237316195423570985008687907853269984665640564039457584007913129639935))))
(assert (x655 (x1443 128)))
(assert (=> (< (- (x968 128) 1) 10000) (= (x1428 (x968 128)) (x1258 (x968 128)))))
(assert (x172 x1206))
(assert (= (x1258 3184006219) (x1428 3184006219)))
(assert (= (x828 352) (x1574 352)))
(assert (=> (< (- (x1246 128) 1) 10000) (= (x1428 (x1246 128)) (x1258 (x1246 128)))))
(assert (= (x1339 288) x323))
(assert (= (x641 768) (x1780 768)))
(assert (= (x1428 157198259) (x1258 157198259)))
(assert (= (and (not x911) x1623) x1042))
(assert (= (=> (= (< 0 x8) x789) (and (=> x789 x1241) (=> (not x789) x891))) x1152))
(assert (= (x771 704) (x81 704)))
(assert (x172 x668))
(assert (= (and x1899 (not x1631)) x1204))
(assert (x172 x119))
(assert (x172 x1772))
(assert (x172 x1182))
(assert (= x1891 (=> (and (= (x1425 x1906) x933) (= (> x657 x933) x191) (= (x1366 (x1428 (x1197 128)) (x1428 (x1197 160)) 0) x1906) (= (x1197 736) x657)) (and (=> (not x191) x1026) (=> x191 x891)))))
(assert (x172 x694))
(assert (x172 x630))
(assert (= (=> (and (= x256 (x659 800)) (= false x711) (= (x193 736) x966) (= x18 (x1380 768)) (= (x1678 768) x1712)) x793) x976))
(assert (= (x693 640) (x545 640)))
(assert (= (x688 896) (x1898 896)))
(assert (=> (< (- (x448 160) 1) 10000) (= (x1258 (x448 160)) (x1428 (x448 160)))))
(assert (= x1278 (x1004 960)))
(assert (= (x251 352) (x515 352)))
(assert (= (x1282 352) (x1383 352)))
(assert (= (x618 640) (x1728 640)))
(assert (=> (> (+ 10000 1) (x250 160)) (= (x1258 (x250 160)) (x1428 (x250 160)))))
(assert (= (x1839 640) (x597 640)))
(assert (=> (> (+ 10000 1) (x250 128)) (= (x1428 (x250 128)) (x1258 (x250 128)))))
(assert (= (ite (= (x1258 0) (x1258 43)) 1 (x520 (x1258 43))) (x1245 (x1258 43))))
(assert (x172 x1683))
(assert (x655 (x1183 160)))
(assert (x172 x1571))
(assert (x172 x1308))
(assert (= (x497 864) (x1237 864)))
(assert (= (x1785 736) (x1105 736)))
(assert (= (x1258 599290589) (x1428 599290589)))
(assert (= (x1354 320) (ite (and x1160 x325) (x722 320) (x771 320))))
(assert (x172 x374))
(assert (x172 x1148))
(assert (x172 x889))
(assert (= (x769 704) (x1213 704)))
(assert (=> (> (+ 10000 1) (x12 160)) (= (x1258 (x12 160)) (x1428 (x12 160)))))
(assert (= x1368 (and x1114 x584)))
(assert (= (ite (and x1529 x88) (x1910 704) (x1212 704)) (x236 704)))
(assert (= (x545 320) (x693 320)))
(assert (= (x475 928) (x1797 928)))
(assert (= (x403 384) (x1462 384)))
(assert (x172 x1640))
(assert (= (x1218 640) (x279 640)))
(assert (= (x371 704) (x1848 704)))
(assert (x172 x1009))
(assert (= (x1574 672) (x828 672)))
(assert (= (x1229 640) (x1746 640)))
(assert (x172 x720))
(assert (x172 x1744))
(assert (x172 x1510))
(assert (x172 x7))
(assert (= (x1036 128) (x660 (x1428 (x1036 128)))))
(assert (= (x1212 768) (x934 768)))
(assert (= (x1351 160) (x660 (x1428 (x1351 160)))))
(assert (x172 x1091))
(assert (x172 x1397))
(assert (= x182 x793))
(assert (= (x715 768) (x548 768)))
(assert (= (ite (and x1568 x1156) (x1207 (x1428 x739)) (x897 (x1428 x739))) (x1018 (x1428 x739))))
(assert (= (ite (and x1331 x300) (x975 352) (x828 352)) (x1399 352)))
(assert (x655 (x1197 160)))
(assert (x172 x573))
(assert (= x24 (x360 384)))
(assert (x655 (x1572 160)))
(assert (= (x512 704) (x1788 704)))
(assert (x172 x609))
(assert (= (x1501 288) x1849))
(assert (x172 x552))
(assert (= x431 (=> (and (= (= x1169 20) x228) (= x157 (x1497 928)) (= (x1163 (+ x157 1)) x1169)) (and (=> (not x228) x155) (=> x228 x1793)))))
(assert (x172 x1671))
(assert (x172 x1202))
(assert (= (x517 160) (x660 (x1428 (x517 160)))))
(assert (x172 x160))
(assert (x172 x132))
(assert (x172 x1217))
(assert (= x973 (=> (= x1604 (< 31 x1291)) (and (=> (not x1604) x891) (=> x1604 x965)))))
(assert (x172 x286))
(assert (= (x1428 4294967296) (x1258 4294967296)))
(assert (= (x852 320) (x248 320)))
(assert (= (x1848 352) (x371 352)))
(assert (x172 x1261))
(assert (= (x440 640) (x1277 640)))
(assert (x172 x187))
(assert (x172 x1174))
(assert (= (x1870 672) (x1620 672)))
(assert (= (x1392 672) (x535 672)))
(assert (= (x660 (x1258 157198259)) 157198259))
(assert (= (x1258 1000000000000000000) (x1428 1000000000000000000)))
(assert (= (x928 352) (x1901 352)))
(assert (= (x980 896) (x216 896)))
(assert (x172 x1273))
(assert (x172 x1259))
(assert (x172 x1831))
(assert (x172 x1037))
(assert (x172 x744))
(assert (x172 x1358))
(assert (x172 x1699))
(assert (= (x663 640) (x772 640)))
(assert (= (x1014 352) (x1370 352)))
(assert (x172 x893))
(assert (x172 x131))
(assert (x172 x734))
(assert (= (x756 768) (x419 768)))
(assert (x172 x682))
(assert (= (x688 704) (x1898 704)))
(assert (= (x1197 160) (x660 (x1428 (x1197 160)))))
(assert (=> (< (- x648 1) 10000) (= (x1428 x648) (x1258 x648))))
(assert (x655 (x331 160)))
(assert (= x823 (and x1454 (not x484))))
(assert (x172 x110))
(assert (= (x1652 768) (x153 768)))
(assert (= (x387 672) (x1497 672)))
(assert (= (x59 224) (x1503 224)))
(assert (x172 x1049))
(assert (= (x386 928) (x25 928)))
(assert (= (x1004 768) (x1627 768)))
(assert (= (x772 352) (x663 352)))
(assert (x172 x33))
(assert (x655 (x1335 128)))
(assert (=> (< (- (x1411 128) 1) 10000) (= (x1428 (x1411 128)) (x1258 (x1411 128)))))
(assert (x172 x190))
(assert (= x1206 (x1282 960)))
(assert (= (x1692 352) (x666 352)))
(assert (x172 x1546))
(assert (x172 x1255))
(assert (x172 x853))
(assert (x172 x1661))
(assert (x172 x499))
(assert (= x1811 (x475 896)))
(assert (= x1525 (and (not x765) x102)))
(assert (= (and x1525 x994) x1623))
(assert (x172 x1711))
(assert (=> (> (+ 10000 1) (x12 128)) (= (x1258 (x12 128)) (x1428 (x12 128)))))
(assert (= (x1258 3065339685) (x1428 3065339685)))
(assert (= (and x932 (not x56)) x941))
(assert (= (x715 736) (x548 736)))
(assert (= (x735 928) (x1124 928)))
(assert (x172 x70))
(assert (x172 x1911))
(assert (= (x597 928) (x1839 928)))
(assert (x172 x416))
(assert (= (x968 768) (x1339 768)))
(assert (= (x1055 x1220) (ite (= x1220 (x1258 0)) 1 (x520 x1220))))
(assert (x655 (x348 160)))
(assert (= (x660 (x1428 (x1572 128))) (x1572 128)))
(assert (x172 x100))
(assert (= (x688 352) (x1898 352)))
(assert (x172 x351))
(assert (= (x515 256) (x251 256)))
(assert (= (x618 320) (x1728 320)))
(assert (x172 x441))
(assert (x172 x835))
(assert (x172 x87))
(assert (=> (< (- (x517 160) 1) 10000) (= (x1428 (x517 160)) (x1258 (x517 160)))))
(assert (= (x387 928) x1169))
(assert (x172 x1531))
(assert (= (x1848 896) (x371 896)))
(assert (= (x1237 928) x937))
(assert (= (x548 352) (x715 352)))
(assert (= x9 (or (and x719 x1198) (and x198 (not x1355)))))
(assert (= (x660 (x1428 (x12 128))) (x12 128)))
(assert (x172 x1363))
(assert (= (x1885 896) (x1119 896)))
(assert (x172 x276))
(assert (= (x1497 768) (x387 768)))
(assert (x172 x763))
(assert (x172 x1007))
(assert (= (x1901 864) (x928 864)))
(assert (= (x688 1024) (x1898 1024)))
(assert (= (ite (and x1331 x300) (x975 672) (x828 672)) (x1399 672)))
(assert (x172 x467))
(assert (=> (< (- (x158 128) 1) 10000) (= (x1258 (x158 128)) (x1428 (x158 128)))))
(assert (= (and x1294 x1766) x621))
(assert (x655 (x517 160)))
(assert (= (or x1637 (and (not x1086) x1203)) x1622))
(assert (= 3963136098 (x660 (x1258 3963136098))))
(assert (= (x1157 768) (x274 768)))
(assert (= (x666 704) (x1692 704)))
(assert (= (x475 640) (x1797 640)))
(assert (= x367 (x1808 992)))
(assert (=> (< (- x1856 1) 10000) (= (x1428 x1856) (x1258 x1856))))
(assert (= (x404 704) (x1242 704)))
(assert (x172 x1765))
(assert (x172 x749))
(assert (x172 x986))
(assert (= (x326 736) (x50 736)))
(assert (x172 x840))
(assert (= (=> (and (= (= x315 0) x856) (= x315 (x1425 (x1258 39)))) (and (=> x856 x1630) (=> (not x856) x1895))) x1048))
(assert (= (x548 672) (x715 672)))
(assert (= (x928 640) (x1901 640)))
(assert (x172 x1638))
(assert (= (x244 640) (x1491 640)))
(assert (= 76450787359836037641860180984291677749980919077056822294353438043884394381312 (x660 (x1258 76450787359836037641860180984291677749980919077056822294353438043884394381312))))
(assert (= (x1194 320) (x1731 320)))
(assert (x172 x796))
(assert (= (x404 640) (x1242 640)))
(assert (x172 x622))
(assert (x172 x1685))
(assert (x655 (x448 128)))
(assert (= (x386 320) (x25 320)))
(assert (= (x81 352) (x771 352)))
(assert (x172 x54))
(assert (= (x216 672) (x980 672)))
(assert (x172 x1136))
(assert (= (x989 864) (x783 864)))
(assert (x172 x1140))
(assert (x172 x298))
(assert (= (x217 224) (x742 224)))
(assert (x172 x167))
(assert true)
(assert (x172 x1903))
(assert (x172 x406))
(assert (x172 x1888))
(assert (x172 x1740))
(assert (= (x1627 928) (x1004 928)))
(assert (= (x1898 768) (x688 768)))
(assert (=> (< (- (x836 160) 1) 10000) (= (x1258 (x836 160)) (x1428 (x836 160)))))
(assert (= (x1572 736) (x111 736)))
(assert (= x205 (x756 928)))
(assert (= (x513 640) (x836 640)))
(assert (x172 x971))
(assert (=> (< (- x209 1) 10000) (= (x1258 x209) (x1428 x209))))
(assert (= (=> (and (= (x783 384) x1533) (= x1233 (= 0 x1533))) (and (=> x1233 x891) (=> (and (= x645 (- (/ x654 x1533) (uninterp_frac x654 x1533))) (not x1233)) x493))) x1730))
(assert (x655 (x50 160)))
(assert (x172 x918))
(assert (= (x250 160) (x660 (x1428 (x250 160)))))
(assert (= x752 (and x701 (not x1295))))
(assert (x172 x528))
(assert (= (x1335 160) (x660 (x1428 (x1335 160)))))
(assert (=> (< (- (x968 160) 1) 10000) (= (x1258 (x968 160)) (x1428 (x968 160)))))
(assert (= (x1780 320) (x641 320)))
(assert (x172 x1886))
(assert (= (x1505 736) (x1006 736)))
(assert (= (x756 672) (x419 672)))
(assert (= (x1006 320) (x1505 320)))
(assert (x172 x107))
(assert (= (x1157 352) (x274 352)))
(assert (x172 x1859))
(assert (x172 x1634))
(assert (= (x545 960) (x693 960)))
(assert (= (x1428 4267106866) (x1258 4267106866)))
(assert (= x648 (x660 (x1428 x648))))
(assert (x172 x202))
(assert (and (= (x377 10 9) 1000000000) (= 10000000000 (x377 10 10)) (= 100000000000000000000 (x377 10 20)) (= (x377 10 3) 1000) (= (x377 10 6) 1000000) (= 10000000 (x377 10 7)) (= (x377 10 16) 10000000000000000) (= 1000000000000000000000 (x377 10 21)) (= (x377 10 26) 100000000000000000000000000) (= (x377 10 29) 100000000000000000000000000000) (= (x377 10 8) 100000000) (= 1000000000000000000 (x377 10 18)) (= 1000000000000000000000000 (x377 10 24)) (= (x377 10 30) 1000000000000000000000000000000) (= (x377 10 14) 100000000000000) (= 1 (x377 10 0)) (= 10000000000000 (x377 10 13)) (= 10000000000000000000 (x377 10 19)) (= (x377 10 2) 100) (= (x377 10 23) 100000000000000000000000) (= 100000 (x377 10 5)) (= 1000000000000000000000000000 (x377 10 27)) (= 1000000000000000 (x377 10 15)) (= (x377 10 11) 100000000000) (= (x377 10 28) 10000000000000000000000000000) (= 10 (x377 10 1)) (= 10000 (x377 10 4)) (= 1000000000000 (x377 10 12)) (= 10000000000000000000000 (x377 10 22)) (= (x377 10 17) 100000000000000000) (= 10000000000000000000000000 (x377 10 25))))
(assert (= (x548 864) (x715 864)))
(assert (= (x735 704) (x1124 704)))
(assert (= (x1055 x1538) (ite (= (x1258 0) x1538) 1 (x520 x1538))))
(assert (x172 x1700))
(assert (= (x386 640) (x25 640)))
(assert (=> (> (+ 10000 1) x1821) (= (x1258 x1821) (x1428 x1821))))
(assert (x172 x257))
(assert (= (x251 320) (x515 320)))
(assert (x655 (x12 160)))
(assert (= (=> (and (= x1160 (> x1227 0)) (or (and (= x41 1) x1160 (< x1605 4294967296)) (and (= x1227 x41) (not x1160))) (= x417 (x192 800))) x745) x1347))
(assert (= (x1808 864) (x1335 864)))
(assert (= (x836 928) (x513 928)))
(assert (= (and x1355 x198) x1198))
(assert (= (ite (and x300 x1331) (x975 704) (x828 704)) (x1399 704)))
(assert (= (x236 800) (ite (and x1529 x88) (x1910 800) (x1212 800))))
(assert (= (x216 736) (x980 736)))
(assert (= (x1532 x1337 x541) (- (/ x1337 (x377 2 x541)) (uninterp_frac x1337 (x377 2 x541)))))
(assert (x655 (x50 128)))
(assert (x172 x1717))
(assert (x655 (x968 128)))
(assert (x172 x1175))
(assert (= 4294967296 (x660 (x1258 4294967296))))
(assert (= 2681579215 (x660 (x1258 2681579215))))
(assert (x172 x129))
(assert (x172 x1732))
(assert (= (x404 768) (x1242 768)))
(assert (= x452 (x500 736)))
(assert (x172 x1446))
(assert (x172 x604))
(assert (= (x1425 (x1258 9)) (ite (= (x1258 9) (x1258 0)) 1 (x957 (x1258 9)))))
(assert (x172 x1489))
(assert (x172 x1402))
(assert (x172 x818))
(assert (x172 x389))
(assert (= (x1508 672) (x1723 672)))
(assert (= (=> (and (= (x419 928) x97) (= x205 (x1163 (+ 1 x97))) (= x378 (= x205 20))) (and (=> x378 x215) (=> (not x378) x1379))) x356))
(assert (= x774 x487))
(assert (= (x1839 736) (x597 736)))
(assert (= (x715 992) (x548 992)))
(assert (x172 x729))
(assert (= (x1839 352) (x597 352)))
(assert (= (=> (and (= x916 (x1354 800)) (= x1640 (x1354 768)) (= x1437 (> x1640 x916))) (and (=> (not x1437) x1679) (=> x1437 x568))) x1520))
(assert (= x436 (=> (and (= x87 (x127 224)) (= (> 1000000000000000000 x87) x407)) (and (=> (not x407) x176) (=> x407 x1742)))))
(assert (x172 x1151))
(assert (x172 x1065))
(assert (x172 x405))
(assert (= x194 (and (not x1292) x1872)))
(assert (= (=> (and (= x1524 (x1416 288)) (= (x1416 256) x286) (= (x1163 (+ x1580 x1196)) x990) (= (> x286 x1524) x870)) (and (=> x870 x891) (=> (not x870) x1185))) x1460))
(assert (= (x404 672) (x1242 672)))
(assert (= 1851080549 (x660 (x1258 1851080549))))
(assert (= (x1885 672) (x1119 672)))
(assert (x172 x1280))
(assert (= 3092021830 (x660 (x1258 3092021830))))
(assert (x172 x1178))
(assert (= (x1392 352) (x535 352)))
(assert (x172 x126))
(assert (x172 x1169))
(assert (x172 x862))
(assert (x172 x1664))
(check-sat)
