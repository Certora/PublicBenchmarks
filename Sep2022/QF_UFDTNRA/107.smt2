(set-option :print-success false)
(set-option :produce-models true)
(set-logic QF_UFDTNRA)
(declare-fun uninterp_frac (Real Real) Real)
(define-fun axiom_frac_bound ((d1 Real) (d2 Real)) Bool (and (=> (> d2 0) (and (<= 0.0 (uninterp_frac d1 d2)) (< (uninterp_frac d1 d2) 1.0))) (=> (< d2 0) (and (>= 0.0 (uninterp_frac d1 d2)) (> (uninterp_frac d1 d2) (- 1.0))))))
(define-fun axiom_frac_zero ((d1 Real) (d2 Real) (m1 Real) (m2 Real) (e Real)) Bool (=> (and (= d1 (* m1 m2)) (or (= d2 m1) (= d2 m2))) (= e 0)))
(define-fun uninterp_mod ((x Real) (m Real)) Real (ite (and (>= x 0) (< x m)) x (ite (and (>= x m) (< x (+ m m))) (- x m) (ite (and (>= x (- m)) (< x 0)) (+ x m) (* m (uninterp_frac x m))))))
(define-fun axiom_int_approximation ((x Real)) Bool (or (= x 0) (>= x 1) (<= x (- 1))))
(declare-datatypes ((x489 0)) (((x758 (x420 x489) (x1205 Real)) (x111 (x407 Real)) (x332 (x138 x489) (x1650 x489) (x946 Real)))))
(declare-fun x998 () Real)
(declare-fun x1752 () x489)
(declare-fun x691 () Real)
(declare-fun x1486 () Real)
(declare-fun x576 () Bool)
(declare-fun x924 () Real)
(declare-fun x1256 () Real)
(declare-fun x805 () x489)
(declare-fun x1648 () Bool)
(declare-fun x1102 () Real)
(declare-fun x532 () Real)
(declare-fun x1113 () Real)
(declare-fun x1270 () Real)
(declare-fun x913 () Bool)
(declare-fun x1014 () Real)
(declare-fun x1378 () Real)
(declare-fun x664 () Bool)
(declare-fun x1763 () Bool)
(declare-fun x1341 () x489)
(declare-fun x1003 () Bool)
(declare-fun x653 () Real)
(declare-fun x819 (Real) Real)
(declare-fun x1532 () Real)
(declare-fun x964 () Real)
(declare-fun x914 () x489)
(declare-fun x1306 () Real)
(declare-fun x518 (Real) Real)
(declare-fun x1114 () Real)
(declare-fun x1226 () Real)
(declare-fun x140 () x489)
(declare-fun x1691 () Bool)
(declare-fun x673 (Real) Real)
(declare-fun x29 () Real)
(declare-fun x1410 () Bool)
(declare-fun x619 () Real)
(declare-fun x939 () x489)
(declare-fun x1723 () Bool)
(declare-fun x313 () Real)
(declare-fun x1757 () Real)
(declare-fun x685 () Real)
(declare-fun x741 () Real)
(declare-fun x1631 (Real) Real)
(declare-fun x1594 () Real)
(declare-fun x1475 () Real)
(declare-fun x176 () Real)
(declare-fun x831 () Bool)
(declare-fun x863 () Bool)
(declare-fun x1013 () Real)
(declare-fun x812 () Bool)
(declare-fun x227 () x489)
(declare-fun x1314 (Real) Real)
(declare-fun x613 () Real)
(declare-fun x631 (Real) Real)
(declare-fun x587 () Bool)
(declare-fun x1206 () Bool)
(declare-fun x514 (x489) Real)
(declare-fun x956 () Real)
(declare-fun x1282 () Real)
(declare-fun x906 () Bool)
(declare-fun x792 () Real)
(declare-fun x1073 () x489)
(declare-fun x436 () x489)
(declare-fun x386 () Bool)
(declare-fun x813 () Bool)
(declare-fun x1358 () Bool)
(declare-fun x336 () Bool)
(declare-fun x1540 () Real)
(declare-fun x838 () Real)
(declare-fun x1291 () Real)
(declare-fun x1394 () Real)
(declare-fun x141 () Bool)
(declare-fun x917 () Real)
(declare-fun x355 () Bool)
(declare-fun x644 () Real)
(declare-fun x1234 () Bool)
(declare-fun x1382 () Real)
(declare-fun x6 () Real)
(declare-fun x749 () Real)
(declare-fun x1009 () Real)
(declare-fun x527 () x489)
(declare-fun x1611 () Bool)
(declare-fun x1468 () Real)
(declare-fun x68 (Real) Real)
(declare-fun x915 () Real)
(declare-fun x1188 () Real)
(declare-fun x63 () Real)
(declare-fun x1533 () Real)
(declare-fun x285 () Bool)
(declare-fun x12 () Bool)
(declare-fun x1770 () Real)
(declare-fun x98 () Real)
(declare-fun x104 () x489)
(declare-fun x315 () Real)
(declare-fun x1593 () x489)
(declare-fun x1497 () Real)
(declare-fun x702 () x489)
(declare-fun x1087 () Real)
(declare-fun x1005 () Bool)
(declare-fun x41 () Real)
(declare-fun x1614 () Real)
(declare-fun x1438 () Bool)
(declare-fun x1838 () x489)
(declare-fun x1815 () Real)
(declare-fun x933 () Bool)
(declare-fun x1759 () Real)
(declare-fun x1561 () Real)
(declare-fun x897 () Real)
(declare-fun x1454 () Bool)
(declare-fun x916 () Real)
(declare-fun x133 () Real)
(declare-fun x1150 () Real)
(declare-fun x1788 () Bool)
(declare-fun x1848 () Real)
(declare-fun x1477 () Bool)
(declare-fun x31 () Bool)
(declare-fun x455 () Real)
(declare-fun x1214 () Real)
(declare-fun x1725 () Bool)
(declare-fun x199 () Real)
(declare-fun x793 () Bool)
(declare-fun x1340 () Real)
(declare-fun x392 () Real)
(declare-fun x784 () Bool)
(declare-fun x1512 () Real)
(declare-fun x1796 () Bool)
(declare-fun x1069 () Real)
(declare-fun x907 (Real) Real)
(declare-fun x945 () Real)
(declare-fun x1332 () Real)
(declare-fun x253 () Bool)
(declare-fun x1754 () Real)
(declare-fun x1350 () x489)
(declare-fun x1539 () Real)
(declare-fun x166 () Real)
(declare-fun x667 () Bool)
(declare-fun x155 () Bool)
(declare-fun x1476 () Real)
(declare-fun x1860 () Bool)
(declare-fun x796 () Real)
(declare-fun x564 () Real)
(declare-fun x1857 () Real)
(declare-fun x733 () Bool)
(declare-fun x1804 (Real) Real)
(declare-fun x1789 () x489)
(declare-fun x1320 () Real)
(declare-fun x1365 () x489)
(declare-fun x743 () Bool)
(declare-fun x888 () Real)
(declare-fun x9 () Bool)
(declare-fun x1185 () Bool)
(declare-fun x821 () Real)
(declare-fun x1717 () x489)
(declare-fun x999 () Bool)
(declare-fun x1152 () Real)
(declare-fun x908 () Real)
(declare-fun x135 () Real)
(declare-fun x881 () Bool)
(declare-fun x338 () Bool)
(declare-fun x1680 () Real)
(declare-fun x1137 () Real)
(declare-fun x1503 () Real)
(declare-fun x1866 () Real)
(declare-fun x11 () Real)
(declare-fun x426 () Bool)
(declare-fun x1361 () Real)
(declare-fun x665 () Bool)
(declare-fun x588 () x489)
(declare-fun x204 () Real)
(declare-fun x1333 () Real)
(declare-fun x1520 () x489)
(declare-fun x322 () Bool)
(declare-fun x984 () Real)
(declare-fun x604 () x489)
(declare-fun x815 () Bool)
(declare-fun x1494 () Bool)
(declare-fun x1141 () Bool)
(declare-fun x981 () Real)
(declare-fun x382 () Bool)
(declare-fun x649 () Real)
(declare-fun x1192 () Bool)
(declare-fun x555 () x489)
(declare-fun x902 () Real)
(declare-fun x352 () Bool)
(declare-fun x559 (x489) Real)
(declare-fun x938 () Bool)
(declare-fun x351 () Real)
(declare-fun x1844 () Bool)
(declare-fun x782 () Real)
(declare-fun x324 () Real)
(declare-fun x396 () x489)
(declare-fun x238 () Bool)
(declare-fun x1716 () Bool)
(declare-fun x48 () Real)
(declare-fun x1457 () Real)
(declare-fun x484 () Bool)
(declare-fun x66 () x489)
(declare-fun x1529 () Real)
(declare-fun x292 () Real)
(declare-fun x93 () Real)
(declare-fun x1658 () Real)
(declare-fun x886 () x489)
(declare-fun x570 () x489)
(declare-fun x1099 () Bool)
(declare-fun x1596 () Real)
(declare-fun x1324 () Real)
(declare-fun x231 () Real)
(declare-fun x593 () Bool)
(declare-fun x861 () Bool)
(declare-fun x1140 () Real)
(declare-fun x1109 () Bool)
(declare-fun x1541 () Real)
(declare-fun x1513 () Real)
(declare-fun x438 () x489)
(declare-fun x1690 () Real)
(declare-fun x711 () Real)
(declare-fun x1104 () Bool)
(declare-fun x390 () Bool)
(declare-fun x1425 (x489) Real)
(declare-fun x58 () Bool)
(declare-fun x1563 () Real)
(declare-fun x1122 () Real)
(declare-fun x1182 (Real) Real)
(declare-fun x539 () Bool)
(declare-fun x333 () Real)
(declare-fun x740 () Bool)
(declare-fun x1675 () Real)
(declare-fun x1634 () Real)
(declare-fun x235 () Real)
(declare-fun x1816 () Real)
(declare-fun x1744 () Real)
(declare-fun x1012 () Bool)
(declare-fun x825 () Real)
(declare-fun x1827 () Real)
(declare-fun x1363 () Bool)
(declare-fun x1204 () Real)
(declare-fun x387 () Real)
(declare-fun x1264 (Real) Real)
(declare-fun x323 () Bool)
(declare-fun x848 () Bool)
(declare-fun x485 () x489)
(declare-fun x1317 () Bool)
(declare-fun x1326 () Real)
(declare-fun x871 () Real)
(declare-fun x1248 () x489)
(declare-fun x309 () Real)
(declare-fun x1231 () Real)
(declare-fun x1375 () Real)
(declare-fun x1505 () x489)
(declare-fun x223 () Real)
(declare-fun x1151 () Bool)
(declare-fun x1870 () Bool)
(declare-fun x503 () Real)
(declare-fun x1772 () x489)
(declare-fun x1228 () Real)
(declare-fun x1429 () x489)
(declare-fun x1040 () Real)
(declare-fun x1295 () Bool)
(declare-fun x1298 () Real)
(declare-fun x1504 () Real)
(declare-fun x210 () x489)
(declare-fun x127 (Real) Real)
(declare-fun x566 () x489)
(declare-fun x1337 () Real)
(declare-fun x883 () Real)
(declare-fun x118 () Real)
(declare-fun x1149 () Real)
(declare-fun x1329 () Bool)
(declare-fun x820 () x489)
(declare-fun x433 () Bool)
(declare-fun x1562 (Real) Real)
(declare-fun x460 () Real)
(declare-fun x1187 () Real)
(declare-fun x177 () Real)
(declare-fun x20 (x489) Real)
(declare-fun x967 () x489)
(declare-fun x1245 () Real)
(declare-fun x1459 () Bool)
(declare-fun x1054 () Real)
(declare-fun x882 (Real) Real)
(declare-fun x222 () Real)
(declare-fun x774 () Real)
(declare-fun x409 () x489)
(declare-fun x1639 () Real)
(declare-fun x1072 () Real)
(declare-fun x541 () x489)
(declare-fun x1730 () Real)
(declare-fun x1801 () Real)
(declare-fun x1554 () Real)
(declare-fun x1383 () Real)
(declare-fun x1370 () x489)
(declare-fun x1589 () x489)
(declare-fun x464 () Real)
(declare-fun x84 () Real)
(declare-fun x986 () Real)
(declare-fun x1845 (Real) Real)
(declare-fun x1606 () Bool)
(declare-fun x969 () Real)
(declare-fun x1135 () Real)
(declare-fun x197 () Bool)
(declare-fun x987 () Real)
(declare-fun x437 () Bool)
(declare-fun x1038 () Bool)
(declare-fun x1748 () Real)
(declare-fun x400 () Real)
(declare-fun x548 () Real)
(declare-fun x1817 () Real)
(declare-fun x1839 () Real)
(declare-fun x1810 () Real)
(declare-fun x1864 () Real)
(declare-fun x1671 () x489)
(declare-fun x456 () Bool)
(declare-fun x697 () Real)
(declare-fun x81 () x489)
(declare-fun x1427 () x489)
(declare-fun x1829 () Real)
(declare-fun x977 () Bool)
(declare-fun x679 () Real)
(declare-fun x851 () Bool)
(declare-fun x1077 () Bool)
(declare-fun x1267 () x489)
(declare-fun x44 () Real)
(declare-fun x448 () Real)
(declare-fun x1213 () Real)
(declare-fun x959 () x489)
(declare-fun x1515 () Real)
(declare-fun x1202 () Real)
(declare-fun x592 () Real)
(declare-fun x261 () Bool)
(declare-fun x165 () Real)
(declare-fun x857 () Real)
(declare-fun x1764 () Bool)
(declare-fun x903 () Real)
(declare-fun x206 () Bool)
(declare-fun x156 () Real)
(declare-fun x405 () Bool)
(declare-fun x1637 () Bool)
(declare-fun x615 (x489) Real)
(declare-fun x1751 () Real)
(declare-fun x1536 () x489)
(declare-fun x1572 (Real) Real)
(declare-fun x1737 () Real)
(declare-fun x791 (x489) Real)
(declare-fun x380 () Real)
(declare-fun x754 () Real)
(declare-fun x1309 () Real)
(declare-fun x153 () Real)
(declare-fun x1722 () Bool)
(declare-fun x1814 () x489)
(declare-fun x1217 () Real)
(declare-fun x763 () Real)
(declare-fun x1428 () Bool)
(declare-fun x623 () Real)
(declare-fun x545 () Real)
(declare-fun x1354 () Bool)
(declare-fun x1208 () Real)
(declare-fun x827 () Bool)
(declare-fun x1255 () Real)
(declare-fun x1028 () Bool)
(declare-fun x687 () x489)
(declare-fun x249 () Bool)
(declare-fun x693 () Real)
(declare-fun x96 () Real)
(declare-fun x557 () Real)
(declare-fun x1750 () Bool)
(declare-fun x1075 () Real)
(declare-fun x1798 () Bool)
(declare-fun x760 () Bool)
(declare-fun x1795 () x489)
(declare-fun x75 () Real)
(declare-fun x1621 () Real)
(declare-fun x1167 () Real)
(declare-fun x896 () Bool)
(declare-fun x216 () Real)
(declare-fun x459 () Real)
(declare-fun x951 () Bool)
(declare-fun x276 (x489) Real)
(declare-fun x1066 () Bool)
(declare-fun x207 () Bool)
(declare-fun x49 () Real)
(declare-fun x666 () x489)
(declare-fun x418 () Real)
(declare-fun x275 (Real) Real)
(declare-fun x927 () Real)
(declare-fun x78 () x489)
(declare-fun x1818 () Real)
(declare-fun x1004 () Real)
(declare-fun x1820 () Real)
(declare-fun x40 () x489)
(declare-fun x1784 () Bool)
(declare-fun x32 () Real)
(declare-fun x868 () Bool)
(declare-fun x1485 () Bool)
(declare-fun x1219 () Real)
(declare-fun x361 () Bool)
(declare-fun x1825 () Real)
(declare-fun x1335 () x489)
(declare-fun x1474 () Real)
(declare-fun x1664 () Real)
(declare-fun x378 () Real)
(declare-fun x1743 () Bool)
(declare-fun x288 () Real)
(declare-fun x269 () Bool)
(declare-fun x478 () Real)
(declare-fun x676 () Real)
(declare-fun x1696 () Bool)
(declare-fun x236 () Real)
(declare-fun x845 () Bool)
(declare-fun x1158 () Bool)
(declare-fun x654 () Bool)
(declare-fun x1120 () Real)
(declare-fun x353 () Real)
(declare-fun x1809 () Real)
(declare-fun x1351 () Bool)
(declare-fun x569 () Real)
(declare-fun x1847 () Bool)
(declare-fun x770 () x489)
(declare-fun x250 () Bool)
(declare-fun x52 () Real)
(declare-fun x773 () Real)
(declare-fun x989 () Bool)
(declare-fun x1300 () x489)
(declare-fun x1021 () Real)
(declare-fun x974 () Real)
(declare-fun x450 () Real)
(declare-fun x852 () Real)
(declare-fun x1480 () Real)
(declare-fun x211 () Bool)
(declare-fun x128 () Real)
(declare-fun x461 () Real)
(declare-fun x69 () Real)
(declare-fun x74 () x489)
(declare-fun x347 () Bool)
(declare-fun x354 () Real)
(declare-fun x1389 () Bool)
(declare-fun x810 () Bool)
(declare-fun x1783 (Real) Real)
(declare-fun x198 () Real)
(declare-fun x86 () Bool)
(declare-fun x401 () Bool)
(declare-fun x435 () Real)
(declare-fun x1442 () Real)
(declare-fun x1828 () x489)
(declare-fun x202 () Real)
(declare-fun x1090 () x489)
(declare-fun x1373 () Bool)
(declare-fun x1852 () Real)
(declare-fun x674 (Real) Real)
(declare-fun x262 () Real)
(declare-fun x1376 () x489)
(declare-fun x1840 () Real)
(declare-fun x738 () Real)
(declare-fun x268 () Bool)
(declare-fun x1349 () Real)
(declare-fun x404 () Bool)
(declare-fun x748 () Real)
(declare-fun x625 () x489)
(declare-fun x683 () Real)
(declare-fun x1586 () Bool)
(declare-fun x1745 () x489)
(declare-fun x316 () Real)
(declare-fun x585 (x489) Real)
(declare-fun x1559 () x489)
(declare-fun x892 () Real)
(declare-fun x293 () Real)
(declare-fun x1091 () Bool)
(declare-fun x1119 () Real)
(declare-fun x114 () Real)
(declare-fun x449 () Real)
(declare-fun x59 () x489)
(declare-fun x767 () Bool)
(declare-fun x787 () x489)
(declare-fun x10 () Real)
(declare-fun x1396 () Real)
(declare-fun x427 () Real)
(declare-fun x1085 () Bool)
(declare-fun x305 () Bool)
(declare-fun x1456 () Real)
(declare-fun x1518 () Bool)
(declare-fun x451 () Real)
(declare-fun x1462 () Real)
(declare-fun x1161 () Real)
(declare-fun x1078 (Real) Real)
(declare-fun x221 () Real)
(declare-fun x501 () Real)
(declare-fun x1266 () Bool)
(declare-fun x1677 () Bool)
(declare-fun x301 () Real)
(declare-fun x874 () Bool)
(declare-fun x1433 () Real)
(declare-fun x1074 () Bool)
(declare-fun x608 () Real)
(declare-fun x709 () Real)
(declare-fun x1726 () Real)
(declare-fun x225 () Bool)
(declare-fun x1534 () Real)
(declare-fun x558 (Real) Real)
(declare-fun x734 () Real)
(declare-fun x689 () Bool)
(declare-fun x1501 () Real)
(declare-fun x1057 () x489)
(declare-fun x1366 () Real)
(declare-fun x931 () x489)
(declare-fun x1212 () Bool)
(declare-fun x272 () Bool)
(declare-fun x553 () Real)
(declare-fun x993 () Real)
(declare-fun x480 () x489)
(declare-fun x1676 () x489)
(declare-fun x1408 () Real)
(declare-fun x280 () Real)
(declare-fun x1552 () Real)
(declare-fun x312 () Bool)
(declare-fun x1855 () Real)
(declare-fun x350 () Real)
(declare-fun x1211 () Bool)
(declare-fun x865 () Bool)
(declare-fun x1343 () Bool)
(declare-fun x1371 () Real)
(declare-fun x1466 () Real)
(declare-fun x1444 (Real) Real)
(declare-fun x1672 () Real)
(declare-fun x1278 (Real) Real)
(declare-fun x707 () Real)
(declare-fun x870 () Real)
(declare-fun x1175 () Bool)
(declare-fun x722 () Real)
(declare-fun x1134 () Bool)
(declare-fun x457 () Bool)
(declare-fun x258 () Real)
(declare-fun x1858 () Real)
(declare-fun x678 () Bool)
(declare-fun x296 (Real) Real)
(declare-fun x308 () Real)
(declare-fun x921 (x489) Real)
(declare-fun x1385 () Real)
(declare-fun x972 () Bool)
(declare-fun x1832 () Bool)
(declare-fun x1010 () Real)
(declare-fun x1849 () Real)
(declare-fun x300 () Real)
(declare-fun x1171 () x489)
(declare-fun x542 () Real)
(declare-fun x961 () x489)
(declare-fun x175 () Real)
(declare-fun x1364 (x489) Real)
(declare-fun x800 () Real)
(declare-fun x1694 () x489)
(declare-fun x988 () Real)
(declare-fun x220 () Real)
(declare-fun x877 () Bool)
(declare-fun x954 () x489)
(declare-fun x1434 () x489)
(declare-fun x331 () Real)
(declare-fun x117 () Real)
(declare-fun x122 () Real)
(declare-fun x864 () Real)
(declare-fun x80 () Real)
(declare-fun x1160 () Real)
(declare-fun x62 () Real)
(declare-fun x1749 () Real)
(declare-fun x1491 () Real)
(declare-fun x1148 (Real) Real)
(declare-fun x61 () Real)
(declare-fun x38 () Real)
(declare-fun x1719 () Bool)
(declare-fun x1619 () Bool)
(declare-fun x217 () Real)
(declare-fun x894 (Real) Real)
(declare-fun x612 () Bool)
(declare-fun x662 () x489)
(declare-fun x1538 () Real)
(declare-fun x1706 () Real)
(declare-fun x680 () Real)
(declare-fun x971 () Real)
(declare-fun x157 () Real)
(declare-fun x1130 () Real)
(declare-fun x105 () Bool)
(declare-fun x1578 () Real)
(declare-fun x858 () Real)
(declare-fun x1660 () x489)
(declare-fun x1339 () Real)
(declare-fun x115 () Real)
(declare-fun x192 () Bool)
(declare-fun x513 () Bool)
(declare-fun x120 () Real)
(declare-fun x1162 () x489)
(declare-fun x232 () Bool)
(declare-fun x411 () Real)
(declare-fun x1618 () Real)
(declare-fun x777 () Bool)
(declare-fun x487 () Real)
(declare-fun x498 () Real)
(declare-fun x1569 () Real)
(declare-fun x818 () Real)
(declare-fun x1667 () Real)
(declare-fun x1670 () Bool)
(declare-fun x1673 () Real)
(declare-fun x937 () Real)
(declare-fun x1481 () Bool)
(declare-fun x1380 () Real)
(declare-fun x853 () Real)
(declare-fun x1865 () Real)
(declare-fun x368 () Bool)
(declare-fun x1374 () Bool)
(declare-fun x243 () Real)
(declare-fun x573 () Real)
(declare-fun x675 (Real) Real)
(declare-fun x900 () Real)
(declare-fun x113 () Bool)
(declare-fun x949 () Real)
(declare-fun x1334 () Real)
(declare-fun x1492 () x489)
(declare-fun x1233 () Bool)
(declare-fun x1683 () Real)
(declare-fun x248 () Bool)
(declare-fun x1652 () Real)
(declare-fun x1230 () Real)
(declare-fun x344 (Real) Real)
(declare-fun x1348 () Real)
(declare-fun x263 () Real)
(declare-fun x1001 () Real)
(declare-fun x77 () Real)
(declare-fun x524 () Real)
(declare-fun x168 () Bool)
(declare-fun x399 () x489)
(declare-fun x1617 () Real)
(declare-fun x1813 () Real)
(declare-fun x694 () Bool)
(declare-fun x1615 () Real)
(declare-fun x639 () Bool)
(declare-fun x1107 () Bool)
(declare-fun x1144 () Real)
(declare-fun x5 () Real)
(declare-fun x137 () Real)
(declare-fun x307 () Real)
(declare-fun x1862 () Real)
(declare-fun x1153 () Bool)
(declare-fun x905 () Bool)
(declare-fun x492 () Bool)
(declare-fun x1584 () Real)
(declare-fun x363 () Bool)
(declare-fun x766 () Real)
(declare-fun x1347 () Real)
(declare-fun x1108 () Real)
(declare-fun x1112 (Real) Real)
(declare-fun x1106 () Real)
(declare-fun x1203 (x489) Real)
(declare-fun x1124 () Bool)
(declare-fun x1566 () Bool)
(declare-fun x284 () Real)
(declare-fun x1528 () Real)
(declare-fun x431 () Real)
(declare-fun x89 () Real)
(declare-fun x1685 () Real)
(declare-fun x1715 () Real)
(declare-fun x1873 () Real)
(declare-fun x1424 () Real)
(declare-fun x171 () Real)
(declare-fun x482 () Real)
(declare-fun x1239 () Bool)
(declare-fun x45 () x489)
(declare-fun x1835 (x489) Real)
(declare-fun x314 () x489)
(declare-fun x491 () Real)
(declare-fun x1500 (Real) Real)
(declare-fun x274 () Bool)
(declare-fun x590 () Real)
(declare-fun x878 () Bool)
(declare-fun x462 () Real)
(declare-fun x183 () Real)
(declare-fun x219 () Real)
(declare-fun x1806 () Bool)
(declare-fun x1432 () Bool)
(declare-fun x1604 () Real)
(declare-fun x510 () x489)
(declare-fun x1780 () Bool)
(declare-fun x1608 () Bool)
(declare-fun x761 () Bool)
(declare-fun x1549 () Real)
(declare-fun x1414 () Real)
(declare-fun x447 () Real)
(declare-fun x1871 () Real)
(declare-fun x25 () Real)
(declare-fun x1190 () Real)
(declare-fun x1705 () Real)
(declare-fun x713 () Bool)
(declare-fun x1131 () Bool)
(declare-fun x519 () Real)
(declare-fun x1799 () Real)
(declare-fun x237 () Real)
(declare-fun x1568 () Real)
(declare-fun x990 () Real)
(declare-fun x1254 () x489)
(declare-fun x657 () Real)
(declare-fun x1522 () Real)
(declare-fun x1570 () Real)
(declare-fun x669 () x489)
(declare-fun x500 () Real)
(declare-fun x1413 () Bool)
(declare-fun x744 (Real) Real)
(declare-fun x76 () Real)
(declare-fun x1636 () Real)
(declare-fun x816 () Real)
(declare-fun x899 () Real)
(declare-fun x779 () Bool)
(declare-fun x320 () Real)
(declare-fun x319 () Real)
(declare-fun x402 () Bool)
(declare-fun x833 () Real)
(declare-fun x1065 () x489)
(declare-fun x71 () Real)
(declare-fun x240 () Real)
(declare-fun x846 () Real)
(declare-fun x415 () x489)
(declare-fun x212 () Real)
(declare-fun x1097 () x489)
(declare-fun x1307 () Real)
(declare-fun x1603 (Real) Real)
(declare-fun x256 () Bool)
(declare-fun x1571 () Real)
(declare-fun x246 () Real)
(declare-fun x659 () Bool)
(declare-fun x1449 () Bool)
(declare-fun x1613 () Real)
(declare-fun x72 () Bool)
(declare-fun x1027 () Real)
(declare-fun x1259 () x489)
(declare-fun x1050 () Real)
(declare-fun x1049 () Real)
(declare-fun x1126 () Real)
(declare-fun x1560 () Real)
(declare-fun x383 () Bool)
(declare-fun x502 () Bool)
(declare-fun x1805 () Bool)
(declare-fun x1186 () Bool)
(declare-fun x1139 () Bool)
(declare-fun x891 () Real)
(declare-fun x388 () Real)
(declare-fun x1490 () Bool)
(declare-fun x834 () Real)
(declare-fun x1084 () x489)
(declare-fun x1826 () Real)
(declare-fun x445 (Real) Real)
(declare-fun x889 () Bool)
(declare-fun x1653 () x489)
(declare-fun x1224 () Real)
(declare-fun x191 () Bool)
(declare-fun x1405 () x489)
(declare-fun x1644 () Real)
(declare-fun x726 () Bool)
(declare-fun x652 () Real)
(declare-fun x424 () Bool)
(declare-fun x1096 () Real)
(declare-fun x860 () Bool)
(declare-fun x1610 () x489)
(declare-fun x1681 () Bool)
(declare-fun x1464 () Bool)
(declare-fun x22 () Real)
(declare-fun x841 () Real)
(declare-fun x162 () Real)
(declare-fun x1318 () Real)
(declare-fun x603 () Bool)
(declare-fun x736 () Bool)
(declare-fun x1823 () x489)
(declare-fun x1289 () x489)
(declare-fun x403 () Bool)
(declare-fun x668 () x489)
(declare-fun x1556 (Real) Real)
(declare-fun x1403 () Real)
(declare-fun x1392 () Real)
(declare-fun x795 () Real)
(declare-fun x1542 (Real) Real)
(declare-fun x732 () Real)
(declare-fun x302 () Bool)
(declare-fun x1367 () Real)
(declare-fun x286 () x489)
(declare-fun x1453 () Real)
(declare-fun x82 () Real)
(declare-fun x1729 () Bool)
(declare-fun x430 () Real)
(declare-fun x257 () Real)
(declare-fun x1647 () Bool)
(declare-fun x1286 () Bool)
(declare-fun x1703 () x489)
(declare-fun x173 () Real)
(declare-fun x568 () Real)
(declare-fun x413 () Bool)
(declare-fun x832 () Real)
(declare-fun x99 () Real)
(declare-fun x873 () x489)
(declare-fun x1701 () Real)
(declare-fun x1047 () Real)
(declare-fun x797 () Bool)
(declare-fun x582 () Real)
(declare-fun x281 () Real)
(declare-fun x148 () Bool)
(declare-fun x982 () Real)
(declare-fun x885 () Bool)
(declare-fun x1807 () Bool)
(declare-fun x289 () Real)
(declare-fun x1488 () Bool)
(declare-fun x614 () Real)
(declare-fun x814 () x489)
(declare-fun x1661 () Real)
(declare-fun x879 (Real) Real)
(declare-fun x1238 () Real)
(declare-fun x1221 () Real)
(declare-fun x1502 () Real)
(declare-fun x186 () x489)
(declare-fun x786 () Real)
(declare-fun x188 () Bool)
(declare-fun x771 () Real)
(declare-fun x855 () Bool)
(declare-fun x271 () Real)
(declare-fun x1447 () Real)
(declare-fun x1657 () Real)
(declare-fun x836 () Real)
(declare-fun x876 () x489)
(declare-fun x172 () Bool)
(declare-fun x208 () Real)
(declare-fun x51 () Real)
(declare-fun x622 () Real)
(declare-fun x145 () Real)
(declare-fun x895 () Real)
(declare-fun x267 () Real)
(declare-fun x1381 () x489)
(declare-fun x551 () Real)
(declare-fun x1460 () Real)
(declare-fun x823 () x489)
(declare-fun x1 () Bool)
(declare-fun x356 () Real)
(declare-fun x146 () Bool)
(declare-fun x875 () Real)
(declare-fun x1800 () Bool)
(declare-fun x164 () Real)
(declare-fun x1629 () x489)
(declare-fun x1626 () Real)
(declare-fun x517 () Real)
(declare-fun x1831 () Real)
(declare-fun x1268 () Bool)
(declare-fun x898 () Real)
(declare-fun x1601 () x489)
(declare-fun x1079 () Real)
(declare-fun x742 () Real)
(declare-fun x310 () Real)
(declare-fun x107 () Real)
(declare-fun x1467 () Real)
(declare-fun x1616 () Real)
(declare-fun x335 () Real)
(declare-fun x1142 () Real)
(declare-fun x1507 () Bool)
(declare-fun x1872 () Real)
(declare-fun x708 () Real)
(declare-fun x1592 () Real)
(declare-fun x1169 () Bool)
(declare-fun x1133 () Bool)
(declare-fun x389 () Real)
(declare-fun x458 () Real)
(declare-fun x1496 () Real)
(declare-fun x8 () Bool)
(declare-fun x556 () Real)
(declare-fun x1418 () Bool)
(declare-fun x1689 () Real)
(declare-fun x1458 (Real) Real)
(declare-fun x523 () Bool)
(declare-fun x1753 () Real)
(declare-fun x802 (Real Real) Real)
(declare-fun x1086 () Real)
(declare-fun x1519 () Real)
(declare-fun x1747 () Bool)
(declare-fun x1105 () Real)
(declare-fun x1550 () Real)
(declare-fun x1118 () Bool)
(declare-fun x1393 () Bool)
(declare-fun x1280 () Real)
(declare-fun x1567 () x489)
(declare-fun x1482 () Bool)
(declare-fun x393 () Real)
(declare-fun x1032 () Bool)
(declare-fun x3 () x489)
(declare-fun x1524 () Bool)
(declare-fun x1530 () Bool)
(declare-fun x30 () Real)
(declare-fun x1419 () Real)
(declare-fun x381 () Real)
(declare-fun x1761 () x489)
(declare-fun x330 () Real)
(declare-fun x867 () Real)
(declare-fun x1384 () Real)
(declare-fun x54 () Bool)
(declare-fun x24 () Real)
(declare-fun x270 () Real)
(declare-fun x1565 () Real)
(declare-fun x806 () Real)
(declare-fun x377 () Bool)
(declare-fun x228 () Real)
(declare-fun x606 () Real)
(declare-fun x1310 () x489)
(declare-fun x283 () Real)
(declare-fun x1516 () Bool)
(declare-fun x234 () Real)
(declare-fun x1019 () Real)
(declare-fun x1478 () x489)
(declare-fun x468 () x489)
(declare-fun x636 () Bool)
(declare-fun x611 () Bool)
(declare-fun x1055 () x489)
(declare-fun x980 () Bool)
(declare-fun x928 () Real)
(declare-fun x1732 () x489)
(declare-fun x1008 () Bool)
(declare-fun x1836 () Real)
(declare-fun x170 () Real)
(declare-fun x752 () Real)
(declare-fun x1284 () Real)
(declare-fun x1609 () Real)
(declare-fun x1415 () Real)
(declare-fun x690 () Bool)
(declare-fun x866 () Bool)
(declare-fun x1209 () Real)
(declare-fun x942 () Real)
(declare-fun x684 () Real)
(declare-fun x1110 () x489)
(declare-fun x394 () Bool)
(declare-fun x311 () Real)
(declare-fun x123 () Bool)
(declare-fun x1025 () Bool)
(declare-fun x412 () Bool)
(declare-fun x1577 () Real)
(declare-fun x511 () Real)
(declare-fun x1297 () Bool)
(declare-fun x1641 () Bool)
(declare-fun x1044 () Bool)
(declare-fun x661 () Real)
(declare-fun x1736 () x489)
(declare-fun x1776 () Bool)
(declare-fun x516 () Bool)
(declare-fun x1735 (Real) Real)
(declare-fun x1495 () Real)
(declare-fun x703 () Real)
(declare-fun x609 () Bool)
(declare-fun x1803 () Real)
(declare-fun x297 () Real)
(declare-fun x765 () Real)
(declare-fun x700 () Real)
(declare-fun x1640 () Bool)
(declare-fun x830 () Real)
(declare-fun x1082 () Real)
(declare-fun x554 () Bool)
(declare-fun x941 () Real)
(declare-fun x1292 () Real)
(declare-fun x1446 () Real)
(declare-fun x27 () Bool)
(declare-fun x1115 () x489)
(declare-fun x602 () Real)
(declare-fun x376 () Real)
(declare-fun x1359 () Real)
(declare-fun x862 () Real)
(declare-fun x724 () Real)
(declare-fun x575 () x489)
(declare-fun x718 () Real)
(declare-fun x672 () x489)
(declare-fun x1720 () Real)
(declare-fun x419 () Real)
(declare-fun x1346 () Bool)
(declare-fun x525 () Real)
(declare-fun x1628 () Bool)
(declare-fun x1338 () Real)
(declare-fun x686 () Bool)
(declare-fun x1026 (Real) Real)
(declare-fun x1543 () Bool)
(declare-fun x1301 () x489)
(declare-fun x19 () x489)
(declare-fun x1633 () x489)
(declare-fun x932 () Real)
(declare-fun x1200 () Real)
(declare-fun x1792 (Real) Real)
(declare-fun x1607 () x489)
(declare-fun x1627 () Real)
(declare-fun x1740 () Real)
(declare-fun x65 () Bool)
(declare-fun x1576 () Real)
(declare-fun x1316 () Bool)
(declare-fun x1630 () Real)
(declare-fun x1527 () Bool)
(declare-fun x1712 () Real)
(declare-fun x477 () Real)
(declare-fun x1787 () x489)
(declare-fun x147 () Real)
(declare-fun x366 () x489)
(declare-fun x727 () x489)
(declare-fun x266 () Real)
(declare-fun x1600 () Real)
(declare-fun x670 (Real) Real)
(declare-fun x1163 () Bool)
(declare-fun x167 () Real)
(declare-fun x1345 () Real)
(declare-fun x13 () Bool)
(declare-fun x856 () Real)
(declare-fun x1452 () Real)
(declare-fun x87 () Bool)
(declare-fun x1368 () x489)
(declare-fun x1553 () Real)
(declare-fun x978 () x489)
(declare-fun x717 () x489)
(declare-fun x721 () Real)
(declare-fun x1850 () Bool)
(declare-fun x1311 () x489)
(declare-fun x422 () Real)
(declare-fun x1766 () Bool)
(declare-fun x1125 () Real)
(declare-fun x55 () Real)
(declare-fun x1092 () Bool)
(declare-fun x731 () x489)
(declare-fun x1575 () x489)
(declare-fun x1089 () Real)
(declare-fun x747 () Real)
(declare-fun x1472 () Real)
(declare-fun x929 () Real)
(declare-fun x1128 () Real)
(declare-fun x329 () Bool)
(declare-fun x1678 () Real)
(declare-fun x290 () Real)
(declare-fun x92 () Real)
(declare-fun x1098 () Bool)
(declare-fun x1195 () Bool)
(declare-fun x1166 () Real)
(declare-fun x1537 (Real) Real)
(declare-fun x799 () Bool)
(declare-fun x259 () Bool)
(declare-fun x1710 () Real)
(declare-fun x1557 () x489)
(declare-fun x367 () Real)
(declare-fun x1465 () Bool)
(declare-fun x306 () Real)
(declare-fun x365 () Bool)
(declare-fun x1196 (Real) Real)
(declare-fun x213 () x489)
(declare-fun x434 () Real)
(declare-fun x1180 () Real)
(declare-fun x1145 () Real)
(declare-fun x745 () Bool)
(declare-fun x1451 () Bool)
(declare-fun x698 () Bool)
(declare-fun x139 () Real)
(declare-fun x132 () Real)
(declare-fun x1223 () Real)
(declare-fun x880 (Real) Real)
(declare-fun x550 () Real)
(declare-fun x1258 () Real)
(declare-fun x159 () x489)
(declare-fun x1545 () Real)
(declare-fun x1362 () Bool)
(declare-fun x1643 () Bool)
(declare-fun x1319 () Real)
(declare-fun x472 () Bool)
(declare-fun x589 () Real)
(declare-fun x1440 () Real)
(declare-fun x1768 () Real)
(declare-fun x955 () Bool)
(declare-fun x1668 (Real) Real)
(declare-fun x1269 () Bool)
(declare-fun x847 () Bool)
(declare-fun x1412 () Bool)
(declare-fun x1060 () Real)
(declare-fun x1760 () x489)
(declare-fun x1053 () Real)
(declare-fun x1588 () Real)
(declare-fun x944 () Bool)
(declare-fun x822 (Real) Real)
(declare-fun x1709 () Bool)
(declare-fun x467 () Real)
(declare-fun x1080 () Bool)
(declare-fun x750 () Bool)
(declare-fun x626 () Real)
(declare-fun x339 () Bool)
(declare-fun x174 () x489)
(declare-fun x1016 () Bool)
(declare-fun x637 () Real)
(declare-fun x884 (x489) Real)
(declare-fun x108 () Real)
(declare-fun x705 () x489)
(declare-fun x919 () Bool)
(declare-fun x776 () Real)
(declare-fun x719 () Real)
(declare-fun x1435 () Real)
(declare-fun x50 () Bool)
(declare-fun x255 () Real)
(declare-fun x1612 () Real)
(declare-fun x1797 () Real)
(declare-fun x1274 () x489)
(declare-fun x1727 () Bool)
(declare-fun x543 () Real)
(declare-fun x1853 () x489)
(declare-fun x1758 () Real)
(declare-fun x627 () Bool)
(declare-fun x150 () Real)
(declare-fun x775 () Real)
(declare-fun x205 (x489) Real)
(declare-fun x1177 () x489)
(declare-fun x414 () Bool)
(declare-fun x1344 () Real)
(declare-fun x181 () Real)
(declare-fun x47 () Real)
(declare-fun x465 () Real)
(declare-fun x423 () x489)
(declare-fun x1174 () Real)
(declare-fun x1398 () Real)
(declare-fun x1443 () x489)
(declare-fun x1778 (x489) Real)
(declare-fun x341 () Bool)
(declare-fun x1714 () x489)
(declare-fun x441 () Real)
(declare-fun x1819 () Real)
(declare-fun x1791 () Bool)
(declare-fun x940 () Real)
(declare-fun x1197 () Real)
(declare-fun x1585 () Bool)
(declare-fun x277 () Bool)
(declare-fun x620 () x489)
(declare-fun x1728 () Real)
(declare-fun x512 () Bool)
(declare-fun x79 () Real)
(declare-fun x1352 () x489)
(declare-fun x1285 () Real)
(declare-fun x348 () Bool)
(declare-fun x1227 () x489)
(declare-fun x1514 () Bool)
(declare-fun x1184 () Bool)
(declare-fun x143 () Real)
(declare-fun x798 () x489)
(declare-fun x1793 () x489)
(declare-fun x372 () Bool)
(declare-fun x505 () Real)
(declare-fun x762 () Bool)
(declare-fun x560 () Bool)
(declare-fun x1702 () Bool)
(declare-fun x803 () Bool)
(declare-fun x704 () Bool)
(declare-fun x1741 () Bool)
(declare-fun x1573 () Bool)
(declare-fun x1777 () Real)
(declare-fun x688 () Real)
(declare-fun x996 () x489)
(declare-fun x547 () Real)
(declare-fun x854 () Bool)
(declare-fun x83 () Bool)
(declare-fun x1649 () Real)
(declare-fun x218 () Real)
(declare-fun x1547 () Real)
(declare-fun x1199 () Real)
(declare-fun x746 () Real)
(declare-fun x1246 () Bool)
(declare-fun x979 () Real)
(declare-fun x1755 () Real)
(declare-fun x1252 () Real)
(declare-fun x616 () x489)
(declare-fun x184 () Real)
(declare-fun x326 () Bool)
(declare-fun x1579 (x489) Real)
(declare-fun x416 () Bool)
(declare-fun x926 () x489)
(declare-fun x385 () Bool)
(declare-fun x1437 () Real)
(declare-fun x474 () Real)
(declare-fun x817 () Bool)
(declare-fun x1068 () Real)
(declare-fun x1431 () Real)
(declare-fun x751 () Bool)
(declare-fun x840 () Bool)
(declare-fun x178 () Real)
(declare-fun x26 () Bool)
(declare-fun x321 () Bool)
(declare-fun x658 () Real)
(declare-fun x1700 () Real)
(declare-fun x1018 () x489)
(declare-fun x1116 () x489)
(declare-fun x824 () Bool)
(declare-fun x17 () Bool)
(declare-fun x829 () Real)
(declare-fun x922 () Bool)
(declare-fun x196 (Real) Real)
(declare-fun x580 () Bool)
(declare-fun x1043 () Real)
(declare-fun x375 () Bool)
(declare-fun x1172 () Real)
(declare-fun x1037 () Bool)
(declare-fun x1262 (Real) Real)
(declare-fun x1045 () Real)
(declare-fun x244 () Bool)
(declare-fun x1328 () Bool)
(declare-fun x660 () Bool)
(declare-fun x1411 () Real)
(declare-fun x1305 () Bool)
(declare-fun x1436 () Real)
(declare-fun x185 () Bool)
(declare-fun x201 () Real)
(declare-fun x1244 () Real)
(declare-fun x1655 () Bool)
(declare-fun x1312 (Real) Real)
(declare-fun x957 () Real)
(declare-fun x621 () Bool)
(declare-fun x934 () Real)
(declare-fun x1642 () Bool)
(declare-fun x579 (Real) Real)
(declare-fun x488 () Real)
(declare-fun x1281 () Real)
(declare-fun x1698 () Real)
(declare-fun x869 () Real)
(declare-fun x358 () Real)
(declare-fun x1000 (Real) Real)
(declare-fun x1812 () Real)
(declare-fun x1632 () Bool)
(declare-fun x1400 () Real)
(declare-fun x1409 () Real)
(declare-fun x95 () Real)
(declare-fun x1484 () Bool)
(declare-fun x671 () Bool)
(declare-fun x471 () Real)
(declare-fun x1544 () x489)
(declare-fun x682 () Real)
(declare-fun x1101 () Real)
(declare-fun x463 () Real)
(declare-fun x2 () Bool)
(declare-fun x1526 () Real)
(declare-fun x842 () x489)
(declare-fun x126 () Bool)
(declare-fun x843 () Bool)
(declare-fun x710 () Real)
(declare-fun x406 () Real)
(declare-fun x1859 () Real)
(declare-fun x1401 () x489)
(declare-fun x1083 () Real)
(declare-fun x245 () x489)
(declare-fun x440 () Real)
(declare-fun x1229 () Bool)
(declare-fun x453 () Real)
(declare-fun x1138 () Bool)
(declare-fun x94 () Real)
(declare-fun x1304 () Real)
(declare-fun x1330 () x489)
(declare-fun x1430 () Real)
(declare-fun x714 (Real) x489)
(declare-fun x106 () Real)
(declare-fun x475 (x489) Real)
(declare-fun x1581 (Real) Real)
(declare-fun x1718 () Real)
(declare-fun x346 () Bool)
(declare-fun x1402 () Real)
(declare-fun x1687 () Bool)
(declare-fun x1775 () Real)
(declare-fun x1499 () Real)
(declare-fun x470 () x489)
(declare-fun x1048 () Bool)
(declare-fun x161 () x489)
(declare-fun x788 () Bool)
(declare-fun x720 (Real) Real)
(declare-fun x1762 () Real)
(declare-fun x1360 () x489)
(declare-fun x36 () Real)
(declare-fun x446 () Real)
(declare-fun x1059 () Real)
(declare-fun x1094 () Real)
(declare-fun x1277 () Real)
(declare-fun x910 () Bool)
(declare-fun x209 () Real)
(declare-fun x1061 () Real)
(declare-fun x634 () Real)
(declare-fun x1042 () Real)
(declare-fun x214 () Real)
(declare-fun x397 () Real)
(declare-fun x1487 () Real)
(declare-fun x1391 () Real)
(declare-fun x1651 () x489)
(declare-fun x594 () x489)
(declare-fun x537 () Real)
(declare-fun x493 () Real)
(declare-fun x1790 () Bool)
(declare-fun x1654 () Real)
(declare-fun x583 () Real)
(declare-fun x357 () Real)
(declare-fun x1287 () Real)
(declare-fun x136 () Real)
(declare-fun x496 () Real)
(declare-fun x663 () Bool)
(declare-fun x1498 () Real)
(declare-fun x242 () Bool)
(declare-fun x97 () Bool)
(declare-fun x1811 (x489) Real)
(declare-fun x1176 () Bool)
(declare-fun x1597 () x489)
(declare-fun x384 () Real)
(declare-fun x948 () Real)
(declare-fun x725 () Real)
(declare-fun x349 () Real)
(declare-fun x1183 () Real)
(declare-fun x1851 () Bool)
(declare-fun x391 () Real)
(declare-fun x60 () Bool)
(declare-fun x428 () Real)
(declare-fun x37 () Bool)
(declare-fun x1773 () Real)
(declare-fun x110 () Real)
(declare-fun x1830 () Real)
(declare-fun x152 () Real)
(declare-fun x15 () Bool)
(declare-fun x247 () Real)
(declare-fun x444 () x489)
(declare-fun x1622 () Real)
(declare-fun x1624 () Real)
(declare-fun x1508 () Bool)
(declare-fun x374 () Bool)
(declare-fun x229 (Real) Real)
(declare-fun x130 () Real)
(declare-fun x1022 () Real)
(declare-fun x481 () Real)
(declare-fun x1493 () Real)
(declare-fun x530 () Real)
(declare-fun x299 () x489)
(declare-fun x1173 () Real)
(declare-fun x1288 () Real)
(declare-fun x1030 () Real)
(declare-fun x1734 () Real)
(declare-fun x1656 () Real)
(declare-fun x1299 () Real)
(declare-fun x1129 () Bool)
(declare-fun x507 () Real)
(declare-fun x1416 () Bool)
(declare-fun x67 () x489)
(declare-fun x807 () Real)
(declare-fun x526 () Real)
(declare-fun x1029 () Bool)
(declare-fun x1218 () x489)
(declare-fun x535 () Bool)
(declare-fun x890 () Real)
(declare-fun x421 () x489)
(declare-fun x318 () Bool)
(declare-fun x282 () Real)
(declare-fun x1582 () Real)
(declare-fun x839 () Bool)
(declare-fun x638 () Bool)
(declare-fun x1841 (x489) Real)
(declare-fun x1007 () Bool)
(declare-fun x371 () Bool)
(declare-fun x169 () Real)
(declare-fun x706 () Bool)
(declare-fun x1372 () Real)
(declare-fun x925 () Bool)
(declare-fun x291 () Real)
(declare-fun x1095 (Real) Real)
(declare-fun x887 () Real)
(declare-fun x729 () Real)
(declare-fun x598 () Bool)
(declare-fun x1867 () Real)
(declare-fun x521 () x489)
(declare-fun x904 () Bool)
(declare-fun x1666 () Real)
(declare-fun x1250 () Real)
(declare-fun x1272 () Real)
(declare-fun x790 (Real) Real)
(declare-fun x64 () Bool)
(declare-fun x844 () Real)
(declare-fun x759 () Real)
(declare-fun x1327 () Real)
(declare-fun x1034 () Real)
(declare-fun x226 () Bool)
(declare-fun x1665 () Real)
(declare-fun x373 () Real)
(declare-fun x655 () x489)
(declare-fun x1198 () Real)
(declare-fun x1313 () x489)
(declare-fun x607 () x489)
(declare-fun x1548 () Real)
(declare-fun x828 () Real)
(declare-fun x327 () Real)
(declare-fun x643 () Real)
(declare-fun x1336 () Real)
(declare-fun x1531 () Real)
(declare-fun x345 () Real)
(declare-fun x753 () Real)
(declare-fun x1679 () Real)
(declare-fun x681 () Real)
(declare-fun x102 () Real)
(declare-fun x1684 (Real) Real)
(declare-fun x923 () Real)
(declare-fun x520 () Bool)
(declare-fun x730 () Real)
(declare-fun x1767 () Real)
(declare-fun x241 () Real)
(declare-fun x1731 () x489)
(declare-fun x1303 () x489)
(declare-fun x395 () Real)
(declare-fun x43 () x489)
(declare-fun x561 () Real)
(declare-fun x1033 () Real)
(declare-fun x1558 () Real)
(declare-fun x1406 () Bool)
(declare-fun x182 () x489)
(declare-fun x1355 () Real)
(declare-fun x1294 () x489)
(declare-fun x973 () Real)
(declare-fun x992 () Real)
(declare-fun x794 () Bool)
(declare-fun x425 () Real)
(declare-fun x983 () x489)
(declare-fun x454 () x489)
(declare-fun x1253 () Real)
(declare-fun x23 () Real)
(declare-fun x737 () Real)
(declare-fun x1039 () Real)
(declare-fun x190 () Real)
(declare-fun x506 () x489)
(declare-fun x563 () Real)
(declare-fun x1439 () Bool)
(declare-fun x699 () Real)
(declare-fun x187 () Bool)
(declare-fun x912 () Bool)
(declare-fun x466 () Real)
(declare-fun x596 () Real)
(declare-fun x18 () x489)
(declare-fun x35 () Real)
(declare-fun x1035 () x489)
(declare-fun x646 () x489)
(declare-fun x193 () x489)
(declare-fun x618 () Bool)
(declare-fun x1620 () Bool)
(declare-fun x42 () Real)
(declare-fun x1834 () Real)
(declare-fun x1271 () Real)
(declare-fun x1521 () Bool)
(declare-fun x1031 (Real) Real)
(declare-fun x1769 () Real)
(declare-fun x960 () Real)
(declare-fun x1321 () Real)
(declare-fun x1283 (Real) Real)
(declare-fun x628 () x489)
(declare-fun x233 () Bool)
(declare-fun x1088 () x489)
(declare-fun x1136 () Bool)
(declare-fun x1242 () Real)
(declare-fun x1117 () Real)
(declare-fun x1583 () Real)
(declare-fun x1555 (x489) Real)
(declare-fun x1179 () Real)
(declare-fun x370 () Real)
(declare-fun x1236 () Real)
(declare-fun x1445 () x489)
(declare-fun x154 () Real)
(declare-fun x712 (Real) Real)
(declare-fun x429 () Real)
(declare-fun x343 (x489) Real)
(declare-fun x835 () Real)
(declare-fun x1523 () Real)
(declare-fun x142 () Real)
(declare-fun x134 () Bool)
(declare-fun x757 () Bool)
(declare-fun x1822 () Real)
(declare-fun x265 () Real)
(declare-fun x504 () Bool)
(declare-fun x1843 () Real)
(declare-fun x947 () Real)
(declare-fun x144 () Real)
(declare-fun x1623 () x489)
(declare-fun x158 () Real)
(declare-fun x33 (x489) Real)
(declare-fun x473 () x489)
(declare-fun x1388 () Bool)
(declare-fun x56 () Real)
(declare-fun x1682 () Bool)
(declare-fun x103 () Bool)
(declare-fun x1711 () Bool)
(declare-fun x1023 (Real Real) Real)
(declare-fun x1842 () Real)
(declare-fun x180 () Real)
(declare-fun x677 () Real)
(declare-fun x189 () x489)
(declare-fun x1674 (x489) Real)
(declare-fun x1699 () Real)
(declare-fun x483 () x489)
(declare-fun x1721 () Real)
(declare-fun x1293 () Real)
(declare-fun x610 () Real)
(declare-fun x641 () Bool)
(declare-fun x849 () Bool)
(declare-fun x1302 () Bool)
(declare-fun x1483 () Real)
(declare-fun x1395 () Bool)
(declare-fun x1599 () x489)
(declare-fun x1704 () Real)
(declare-fun x656 () Real)
(declare-fun x755 () Real)
(declare-fun x1659 () Real)
(declare-fun x756 () Real)
(declare-fun x1237 () Real)
(declare-fun x1011 (Real) Real)
(declare-fun x581 () Real)
(declare-fun x439 () Bool)
(declare-fun x544 () Real)
(declare-fun x46 () Real)
(declare-fun x642 () Real)
(declare-fun x597 () x489)
(declare-fun x1076 () Real)
(declare-fun x1469 () Real)
(declare-fun x549 () Real)
(declare-fun x629 () Real)
(declare-fun x909 () Bool)
(declare-fun x1070 () Real)
(declare-fun x1824 () Real)
(declare-fun x1785 () Bool)
(declare-fun x70 () Real)
(declare-fun x34 () Bool)
(declare-fun x1837 () Real)
(declare-fun x4 () Real)
(declare-fun x540 () Real)
(declare-fun x1635 () Real)
(declare-fun x476 () Bool)
(declare-fun x1463 () Real)
(declare-fun x965 () Real)
(declare-fun x953 () Bool)
(declare-fun x645 () x489)
(declare-fun x1461 () Real)
(declare-fun x1225 () Real)
(declare-fun x1591 () Bool)
(declare-fun x1808 () Bool)
(declare-fun x1249 () x489)
(declare-fun x131 () Bool)
(declare-fun x1170 () Bool)
(declare-fun x1397 () Real)
(declare-fun x91 () Bool)
(declare-fun x163 () Real)
(declare-fun x1103 () Bool)
(declare-fun x509 () Bool)
(declare-fun x1551 () Real)
(declare-fun x963 () Bool)
(declare-fun x595 () Bool)
(declare-fun x723 () Bool)
(declare-fun x100 (Real) Real)
(declare-fun x930 () Bool)
(declare-fun x522 () Bool)
(declare-fun x778 () x489)
(declare-fun x1756 () x489)
(declare-fun x1155 () Real)
(declare-fun x1765 () Real)
(declare-fun x1417 () Real)
(declare-fun x1470 () Real)
(declare-fun x215 (Real) Real)
(declare-fun x1263 () Real)
(declare-fun x1189 () Real)
(declare-fun x962 () Bool)
(declare-fun x601 () Bool)
(declare-fun x565 () Real)
(declare-fun x1240 () Real)
(declare-fun x515 () Real)
(declare-fun x872 () Real)
(declare-fun x1693 () Bool)
(declare-fun x968 () Real)
(declare-fun x14 () Real)
(declare-fun x1535 () Bool)
(declare-fun x360 () Real)
(declare-fun x1404 () Real)
(declare-fun x1121 (Real) Real)
(declare-fun x911 () Bool)
(declare-fun x640 () Real)
(declare-fun x1377 () Bool)
(declare-fun x1625 () Real)
(declare-fun x701 () Real)
(declare-fun x648 () Real)
(declare-fun x328 () Bool)
(declare-fun x1771 () Bool)
(declare-fun x279 () x489)
(declare-fun x1646 () Real)
(declare-fun x298 () Real)
(declare-fun x149 () x489)
(declare-fun x531 () Real)
(declare-fun x1692 () Real)
(declare-fun x1854 () Real)
(declare-fun x586 () Bool)
(declare-fun x109 () Real)
(declare-fun x764 () Real)
(declare-fun x1052 () x489)
(declare-fun x1846 () Bool)
(declare-fun x1353 () Real)
(declare-fun x116 () Real)
(declare-fun x452 () Real)
(declare-fun x783 () Real)
(declare-fun x1707 () Real)
(declare-fun x1041 () x489)
(declare-fun x1325 () Real)
(declare-fun x1602 () Bool)
(declare-fun x179 () Bool)
(declare-fun x203 () Bool)
(declare-fun x1165 () Real)
(declare-fun x1423 () Real)
(declare-fun x21 () Real)
(declare-fun x552 () Bool)
(declare-fun x1216 () Bool)
(declare-fun x304 () x489)
(declare-fun x121 () Real)
(declare-fun x578 () Real)
(declare-fun x692 () Bool)
(declare-fun x1746 () Real)
(declare-fun x239 () Real)
(declare-fun x695 () Real)
(declare-fun x574 () Real)
(declare-fun x1191 () Bool)
(declare-fun x224 () Real)
(declare-fun x811 () Real)
(declare-fun x494 () x489)
(declare-fun x1132 () Bool)
(declare-fun x1509 () Bool)
(declare-fun x781 () Real)
(declare-fun x1489 () Real)
(declare-fun x1356 () Bool)
(declare-fun x200 (Real) Real)
(declare-fun x1251 () Real)
(declare-fun x1275 () x489)
(declare-fun x809 () x489)
(declare-fun x1279 () Real)
(declare-fun x1215 () Bool)
(declare-fun x591 () Real)
(declare-fun x1062 () Real)
(declare-fun x1525 () Bool)
(declare-fun x859 () Bool)
(declare-fun x359 () Real)
(declare-fun x1232 () Real)
(declare-fun x495 () Real)
(declare-fun x789 () Real)
(declare-fun x417 () x489)
(declare-fun x1207 () Real)
(declare-fun x1222 () Bool)
(declare-fun x772 () Real)
(declare-fun x7 () Real)
(declare-fun x1064 (Real) Real)
(declare-fun x632 () Bool)
(declare-fun x1017 () x489)
(declare-fun x1241 () Real)
(declare-fun x571 () Real)
(declare-fun x1051 (Real) Real)
(declare-fun x1794 () Real)
(define-fun x1833 ((x489 x489) (x1168 Real)) x489 (ite ((_ is x758) x489) (x758 (x420 x489) (+ x1168 (x1205 x489))) (ite ((_ is x332) x489) (x332 (x138 x489) (x1650 x489) (+ x1168 (x946 x489))) (x111 (+ (x407 x489) x1168)))))
(define-fun x1669 ((x1143 Real)) Real (ite (and (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1143) (>= x1143 0)) x1143 (- x1143 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(define-fun x1448 ((x1143 Real)) Real (ite (and (>= x1143 (- 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (< x1143 0)) (+ 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1143) x1143))
(define-fun x317 ((x124 Real)) Bool (and (< x124 115792089237316195423570985008687907853269984665640564039457584007913129639936) (<= 0 x124)))
(define-fun x1420 ((x124 Real)) Bool (and (= x124 (x802 115792089237316195423570985008687907853269984665640564039457584007913129639935 x124)) (= x124 (x802 x124 115792089237316195423570985008687907853269984665640564039457584007913129639935))))
(define-fun x739 ((x124 Real)) Bool (and (= (x802 0 x124) 0) (= 0 (x802 x124 0))))
(define-fun x28 ((x124 Real)) Bool (= (x802 x124 x124) x124))
(define-fun x1407 ((x124 Real)) Bool (and (x28 x124) (x1420 x124) (x739 x124)))
(define-fun x1260 ((x124 Real)) Bool (= (x802 1461501637330902918203684832716283019655932542975 x124) (x802 1461501637330902918203684832716283019655932542975 (x802 1461501637330902918203684832716283019655932542975 x124))))
(define-fun x936 ((x124 Real)) Bool (=> (and (>= x124 0) (> 1461501637330902918203684832716283019655932542976 x124)) (= (x802 1461501637330902918203684832716283019655932542975 x124) x124)))
(define-fun x278 ((x124 Real)) Bool (=> (= x124 (x802 1461501637330902918203684832716283019655932542975 x124)) (and (> 1461501637330902918203684832716283019655932542976 x124) (>= x124 0))))
(define-fun x715 ((x124 Real)) Bool (=> (and (< x124 2923003274661805836407369665432566039311865085952) (<= 1461501637330902918203684832716283019655932542976 x124)) (= (x802 1461501637330902918203684832716283019655932542975 x124) (- x124 1461501637330902918203684832716283019655932542976))))
(define-fun x442 ((x124 Real) (x991 Real)) Bool (and (>= x991 0) (= (+ (x802 1461501637330902918203684832716283019655932542975 x124) (* 1461501637330902918203684832716283019655932542976 x991)) x124)))
(define-fun x1276 ((x124 Real) (x1193 Real)) Bool (and (x278 x124) (x936 x124) (x442 x124 x1193) (x1260 x124) (x715 x124)))
(define-fun x1686 ((x124 Real) (x991 Real)) Bool (= (x802 x124 x991) (x802 x991 x124)))
(define-fun x1802 ((x124 Real) (x991 Real)) Bool (and (=> (<= 0 x991) (<= (x802 x124 x991) x991)) (=> (>= x124 0) (<= (x802 x124 x991) x124)) (>= (x802 x124 x991) 0)))
(define-fun x1159 ((x124 Real) (x991 Real)) Bool (and (x1686 x124 x991) (x1802 x124 x991)))
(define-fun x785 ((x124 Real) (x1193 Real)) Bool (and (x1159 x124 1461501637330902918203684832716283019655932542975) (x1276 x124 x1193)))
(define-fun x728 ((x124 Real)) Bool (= (x802 26959946667150639794667015087019630673637144422540572481103610249215 (x802 26959946667150639794667015087019630673637144422540572481103610249215 x124)) (x802 26959946667150639794667015087019630673637144422540572481103610249215 x124)))
(define-fun x101 ((x124 Real)) Bool (=> (and (> 26959946667150639794667015087019630673637144422540572481103610249216 x124) (>= x124 0)) (= (x802 26959946667150639794667015087019630673637144422540572481103610249215 x124) x124)))
(define-fun x1546 ((x124 Real)) Bool (=> (= (x802 26959946667150639794667015087019630673637144422540572481103610249215 x124) x124) (and (> 26959946667150639794667015087019630673637144422540572481103610249216 x124) (<= 0 x124))))
(define-fun x295 ((x124 Real)) Bool (=> (and (< x124 53919893334301279589334030174039261347274288845081144962207220498432) (<= 26959946667150639794667015087019630673637144422540572481103610249216 x124)) (= (- x124 26959946667150639794667015087019630673637144422540572481103610249216) (x802 26959946667150639794667015087019630673637144422540572481103610249215 x124))))
(define-fun x287 ((x124 Real) (x991 Real)) Bool (and (<= 0 x991) (= (+ (x802 26959946667150639794667015087019630673637144422540572481103610249215 x124) (* x991 26959946667150639794667015087019630673637144422540572481103610249216)) x124)))
(define-fun x1738 ((x124 Real) (x1193 Real)) Bool (and (x287 x124 x1193) (x295 x124) (x1546 x124) (x728 x124) (x101 x124)))
(define-fun x536 ((x124 Real) (x1193 Real)) Bool (and (x1738 x124 x1193) (x1159 x124 26959946667150639794667015087019630673637144422540572481103610249215)))
(define-fun x125 ((x124 Real)) Bool (= (x802 115792089237316195423570985008687907853269984665640564039457584007913129639904 (x802 115792089237316195423570985008687907853269984665640564039457584007913129639904 x124)) (x802 115792089237316195423570985008687907853269984665640564039457584007913129639904 x124)))
(define-fun x1450 ((x124 Real)) Bool (=> (and (<= 0 x124) (> 32 x124)) (= 0 (x802 115792089237316195423570985008687907853269984665640564039457584007913129639904 x124))))
(define-fun x85 ((x124 Real) (x991 Real) (x1598 Real) (x529 Real)) Bool (and (> 1 x529) (>= x991 0) (>= x529 0) (= (* x1598 32) (x802 115792089237316195423570985008687907853269984665640564039457584007913129639904 x124)) (= (+ (* 32 x1598) x991 (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 x529)) x124) (>= x1598 0) (< x991 32) (< x1598 3618502788666131106986593281521497120414687020801267626233049500247285301248)))
(define-fun x533 ((x124 Real) (x850 Real) (x1821 Real) (x1713 Real)) Bool (and (x85 x124 x850 x1821 x1713) (x125 x124) (x1450 x124)))
(define-fun x1265 ((x124 Real) (x850 Real) (x1821 Real) (x1713 Real)) Bool (and (x533 x124 x850 x1821 x1713) (x1159 x124 115792089237316195423570985008687907853269984665640564039457584007913129639904)))
(define-fun x918 ((x379 Real)) Real (ite (> x331 x379) (x1262 x379) 0))
(define-fun x230 ((x379 Real)) Real (x1556 x379))
(define-fun x1235 ((x379 Real)) Real (x1556 x379))
(define-fun x1046 ((x379 Real)) Real (x100 x379))
(define-fun x1257 ((x379 Real)) Real (x100 x379))
(define-fun x650 ((x379 Real)) Real (x631 x379))
(define-fun x369 ((x379 Real)) Real (x631 x379))
(define-fun x1688 ((x379 Real)) Real (x675 x379))
(define-fun x1861 ((x379 Real)) Real (x675 x379))
(define-fun x39 ((x379 x489)) Real (ite (= x379 x668) x1122 (x1841 x379)))
(define-fun x935 ((x379 Real)) Real (ite (= 128 x379) x543 (x445 x379)))
(define-fun x1357 ((x379 Real)) Real (ite (= x379 160) x927 (x127 x379)))
(define-fun x194 ((x379 x489)) Real (ite (= x1714 x379) x1122 (x1841 x379)))
(define-fun x1638 ((x379 x489)) Real (ite (= x379 x555) x1075 (x791 x379)))
(define-fun x1733 ((x379 x489)) Real (ite (= x379 x1520) x1122 (x1841 x379)))
(define-fun x364 ((x379 x489)) Real (ite (and x1741 (not x1640) (not x31)) (x1733 x379) (ite (and x31 (not x1640) x1741) (x194 x379) (x39 x379))))
(define-fun x1081 ((x379 Real)) Real (ite (= x379 x818) x548 (x673 x379)))
(define-fun x780 ((x379 Real)) Real (ite (= x379 x1403) x135 (x1095 x379)))
(define-fun x1036 ((x379 x489)) Real (ite (= x805 x379) x1122 (x514 x379)))
(define-fun x1587 ((x379 x489)) Real (ite (= x1041 x379) x1584 (x1203 x379)))
(define-fun x1247 ((x379 x489)) Real (ite (= x379 x1116) x1122 (x514 x379)))
(define-fun x577 ((x379 x489)) Real (ite (= x140 x379) x461 (x921 x379)))
(define-fun x1774 ((x379 x489)) Real (ite (= x655 x379) x418 (x577 x379)))
(define-fun x1164 ((x379 x489)) Real (ite (= x1259 x379) x143 (x343 x379)))
(define-fun x1645 ((x379 x489)) Real (ite x659 (x1164 x379) (x343 x379)))
(define-fun x1071 ((x379 x489)) Real (ite (= (x714 274184521717934524641157099916833587206) x379) x7 (x1835 x379)))
(define-fun x995 ((x379 x489)) Real (ite (= (x714 x1391) x379) x828 (x1071 x379)))
(define-fun x195 ((x379 x489)) Real (ite (= x379 (x714 x1391)) x1385 (x995 x379)))
(define-fun x1455 ((x379 x489)) Real (ite (= (x714 274184521717934524641157099916833587206) x379) x1816 (x195 x379)))
(define-fun x251 ((x379 x489)) Real (ite x659 (x1455 x379) (x1835 x379)))
(define-fun x1781 ((x379 x489)) Real (ite (= x379 x1601) x652 (x1811 x379)))
(define-fun x1331 ((x379 x489)) Real (ite (= x1607 x379) x1382 (x1781 x379)))
(define-fun x985 ((x379 Real)) Real (ite (= x379 128) x1553 (x790 x379)))
(define-fun x943 ((x379 Real)) Real (ite (= x379 160) x796 (x1572 x379)))
(define-fun x1510 ((x379 x489)) Real (ite (= x1065 x379) x49 (x205 x379)))
(define-fun x952 ((x379 x489)) Real (ite (and x13 (not x305) (not x1566)) (x1510 x379) (x205 x379)))
(define-fun x1580 ((x379 x489)) Real (ite (and x1741 (not x1234)) (x1247 x379) (x1036 x379)))
(define-fun x1473 ((x379 Real)) Real (ite (= x157 x379) x1281 (x68 x379)))
(define-fun x808 ((x379 Real)) Real (ite (= x573 x379) x1496 (x744 x379)))
(define-fun x1006 ((x379 x489)) Real (ite (= x702 x379) x1253 (x884 x379)))
(define-fun x1695 ((x379 Real)) Real (ite (= x1730 x379) x453 (x1458 x379)))
(define-fun x1739 ((x379 Real)) Real (ite (= x379 x1489) x1533 (x1695 x379)))
(define-fun x497 ((x379 Real)) Real (ite (= x379 x1865) x216 (x215 x379)))
(define-fun x1323 ((x379 Real)) Real (ite (= x379 x1498) x1013 (x1739 x379)))
(define-fun x1220 ((x379 Real)) Real (ite (= x292 x379) x1232 (x196 x379)))
(define-fun x1426 ((x379 Real)) Real (ite (= x379 x1045) 0 (x1264 x379)))
(define-fun x1100 ((x379 Real)) Real (ite (and x913 (not x9) (not x1764)) (x1264 x379) (x1426 x379)))
(define-fun x975 ((x379 Real)) Real (ite (= 0 x379) 1 (x1542 x379)))
(define-fun x1595 ((x379 x489)) Real (ite (= x1838 x379) x1252 (x1555 x379)))
(define-fun x254 ((x379 x489)) Real (ite (= x379 x227) x1583 (x1595 x379)))
(define-fun x893 ((x379 x489)) Real (ite x1465 (ite (and x794 x1362) (x254 x379) (x1555 x379)) (x1555 x379)))
(define-fun x252 ((x379 x489)) Real (ite (= x1717 x379) x1244 (x475 x379)))
(define-fun x1273 ((x379 x489)) Real (ite (= x423 x379) x300 (x252 x379)))
(define-fun x469 ((x379 x489)) Real (ite x1465 (ite (and x1362 x794) (x475 x379) (x1273 x379)) (x475 x379)))
(define-fun x958 ((x379 x489)) Real (ite (and (not x1514) x13) (x1006 x379) (x884 x379)))
(define-fun x605 ((x379 Real)) Real (ite (= x1768 x379) x208 (x1121 x379)))
(define-fun x1387 ((x379 Real)) Real (ite (= x589 x379) x1862 (x605 x379)))
(define-fun x630 ((x379 Real)) Real (ite (= x379 x507) x243 (x1064 x379)))
(define-fun x534 ((x379 Real)) Real (ite (= x379 x1299) x772 (x1387 x379)))
(define-fun x633 ((x379 Real)) Real (ite (= x379 x1594) x973 (x579 x379)))
(define-fun x1243 ((x379 Real)) Real (ite (= x379 x614) 0 (x1845 x379)))
(define-fun x716 ((x379 Real)) Real (ite (and (not x831) (not x191) x65) (x1845 x379) (x1243 x379)))
(define-fun x1123 ((x379 x489)) Real (ite (= x379 (x714 274184521717934524641157099916833587206)) x1819 (x251 x379)))
(define-fun x479 ((x379 x489)) Real (ite (= (x714 x1770) x379) x864 (x1123 x379)))
(define-fun x837 ((x379 Real)) Real (ite (= 0 x379) 1 (x1735 x379)))
(define-fun x499 ((x379 Real)) Real (ite (= x379 128) 50942633119752846454219349998365661925608737367104304655302372697894809501696 (x894 x379)))
(define-fun x443 ((x379 Real)) Real (ite (= 0 x379) x1321 (x1314 x379)))
(define-fun x337 ((x379 Real)) Real (ite (= x379 128) x1321 (x1011 x379)))
(define-fun x950 ((x379 Real)) Real (ite (= x379 4) 128 (x918 x379)))
(define-fun x562 ((x379 Real)) Real (ite (= 36 x379) x1475 (x950 x379)))
(define-fun x769 ((x379 Real)) Real (ite (= 68 x379) x209 (x562 x379)))
(define-fun x1156 ((x379 Real)) Real (ite (= 100 x379) x218 (x769 x379)))
(define-fun x538 ((x379 Real)) Real (ite (= 132 x379) x1803 (x1156 x379)))
(define-fun x1147 ((x379 Real)) Real (ite (and (< x379 (+ x1113 164)) (>= x379 164)) (x1444 (+ (- x379 164) 0)) (x538 x379)))
(define-fun x129 ((x379 Real)) Real (ite (= x1033 x379) x154 (x1147 x379)))
(define-fun x572 ((x379 Real)) Real (ite (and (<= x51 x379) (< x379 (+ x467 x51))) (x1078 (+ (- x379 x51) 0)) (x129 x379)))
(define-fun x1111 ((x379 Real)) Real (ite (= x1375 x379) x319 (x572 x379)))
(define-fun x1315 ((x379 Real)) Real (ite (and (< x379 (+ x924 x1777)) (>= x379 x1777)) (x822 (+ 0 (- x379 x1777))) (x1111 x379)))
(define-fun x1868 ((x379 Real)) Real (ite (= x379 x1812) x478 (x1315 x379)))
(define-fun x970 ((x379 Real)) Real (ite (and (< x379 (+ x948 x1304)) (<= x1304 x379)) (x1278 (+ (- x379 x1304) 0)) (x1868 x379)))
(define-fun x1261 ((x379 x489)) Real (ite (= x1370 x379) x1122 (x1841 x379)))
(define-fun x1342 ((x379 Real)) Real (ite (= 128 x379) x1344 (x1603 x379)))
(define-fun x804 ((x379 Real)) Real (ite (= 160 x379) x756 (x1581 x379)))
(define-fun x160 ((x379 x489)) Real (ite (= x379 x1218) x1166 (x791 x379)))
(define-fun x112 ((x379 x489)) Real (ite (= x1756 x379) x1122 (x1841 x379)))
(define-fun x1708 ((x379 x489)) Real (ite (= x159 x379) x1122 (x1841 x379)))
(define-fun x1386 ((x379 Real)) Real (ite (and x1711 x26 x1747) (x1581 x379) (x804 x379)))
(define-fun x1067 ((x379 x489)) Real (ite (and x1711 x1747 x26) (x1261 x379) (ite (and x1711 (not x26) x1747 x535) (x1708 x379) (x112 x379))))
(define-fun x635 ((x379 Real)) Real (ite (and x1747 x26 x1711) (x1603 x379) (x1342 x379)))
(define-fun x1024 ((x379 Real)) Real (ite (= x379 x1380) x741 (x1631 x379)))
(define-fun x1590 ((x379 Real)) Real (ite (= x1654 x379) x1462 (x275 x379)))
(define-fun x1157 ((x379 x489)) Real (ite (= x379 x1732) x235 (x1203 x379)))
(define-fun x901 ((x379 x489)) Real (ite (= x1360 x379) x1122 (x514 x379)))
(define-fun x408 ((x379 x489)) Real (ite (= x379 x1289) x1122 (x514 x379)))
(define-fun x1015 ((x379 x489)) Real (ite (= x983 x379) x1014 (x921 x379)))
(define-fun x599 ((x379 x489)) Real (ite (= x1381 x379) x1855 (x1015 x379)))
(define-fun x73 ((x379 x489)) Real (ite (= x379 x1505) x1699 (x559 x379)))
(define-fun x966 ((x379 x489)) Real (ite (= x379 x1853) x1072 (x73 x379)))
(define-fun x273 ((x379 x489)) Real (ite (and x1222 x403) (x966 x379) (x559 x379)))
(define-fun x1308 ((x379 x489)) Real (ite (and (not x207) x268) (x559 x379) (ite (and x1711 (not x1747)) (x921 x379) (ite x1790 (x273 x379) (x559 x379)))))
(define-fun x1181 ((x379 x489)) Real (ite (= x1330 x379) x6 (x1811 x379)))
(define-fun x528 ((x379 x489)) Real (ite (= x379 x1557) x1047 (x1181 x379)))
(define-fun x1786 ((x379 x489)) Real (ite (= x510 x379) x47 (x1579 x379)))
(define-fun x432 ((x379 x489)) Real (ite (= x379 x1443) x1436 (x1786 x379)))
(define-fun x53 ((x379 x489)) Real (ite (and x403 x1222) (x1579 x379) (x432 x379)))
(define-fun x584 ((x379 x489)) Real (ite (and (not x207) x268) (x1579 x379) (ite (and x1711 (not x1747)) (x1811 x379) (ite x1790 (x53 x379) (x1579 x379)))))
(define-fun x1201 ((x379 x489)) Real (ite (= x279 x379) x984 (x1778 x379)))
(define-fun x1605 ((x379 x489)) Real (ite (and x268 (not x664) x207) (x1201 x379) (x1778 x379)))
(define-fun x334 ((x379 x489)) Real (ite (= x379 x1052) x1221 (x1364 x379)))
(define-fun x1093 ((x379 x489)) Real (ite (and (not x999) (not x1591) x207 x268) (x334 x379) (x1364 x379)))
(define-fun x486 ((x379 x489)) Real (ite (= x1828 x379) x108 (x343 x379)))
(define-fun x624 ((x379 x489)) Real (ite (and x148 x860) (x343 x379) (x486 x379)))
(define-fun x1422 ((x379 Real)) Real (ite (= x379 x1759) x32 (x674 x379)))
(define-fun x1564 ((x379 Real)) Real (ite (= x379 x89) x887 (x1422 x379)))
(define-fun x696 ((x379 Real)) Real (ite (= x1512 x379) x1773 (x1564 x379)))
(define-fun x16 ((x379 Real)) Real (ite (and x148 x860) (x674 x379) (x696 x379)))
(define-fun x398 ((x379 Real)) Real (ite (= x379 x1137) x649 (x16 x379)))
(define-fun x151 ((x379 Real)) Real (ite (= x709 x379) x1417 (x398 x379)))
(define-fun x303 ((x379 Real)) Real (ite (= x1173 x379) x981 (x1000 x379)))
(define-fun x340 ((x379 Real)) Real (ite (and x148 x860) (x1000 x379) (x303 x379)))
(define-fun x1194 ((x379 Real)) Real (ite (= x379 x498) x327 (x340 x379)))
(define-fun x1863 ((x379 Real)) Real (ite (= x379 x94) x871 (x151 x379)))
(define-fun x1782 ((x379 Real)) Real (ite (= x379 x42) x1659 (x670 x379)))
(define-fun x997 ((x379 Real)) Real (ite (= x379 x1214) 0 (x229 x379)))
(define-fun x264 ((x379 Real)) Real (ite (= x379 x1119) x1769 (x712 x379)))
(define-fun x1020 ((x379 Real)) Real (ite (= x379 x1119) x392 (x712 x379)))
(define-fun x546 ((x379 Real)) Real (ite (= x379 x1174) x354 (x200 x379)))
(define-fun x1663 ((x379 Real)) Real (ite (= x379 x1419) 0 (x1500 x379)))
(define-fun x976 ((x379 Real)) Real (ite (and (not x1266) x911 (not x1012)) (x1500 x379) (x1663 x379)))
(define-fun x735 ((x379 x489)) Real (ite (= x379 (x714 274184521717934524641157099916833587206)) x992 (x1835 x379)))
(define-fun x1390 ((x379 x489)) Real (ite (= x379 (x714 x1087)) x130 (x735 x379)))
(define-fun x1441 ((x379 x489)) Real (ite (= x379 (x714 x1087)) x1834 (x1390 x379)))
(define-fun x119 ((x379 x489)) Real (ite (= x379 (x714 274184521717934524641157099916833587206)) x1872 (x1441 x379)))
(define-fun x1322 ((x379 x489)) Real (ite (and x148 x860) (x1835 x379) (x119 x379)))
(define-fun x768 ((x379 x489)) Real (ite (= x379 (x714 274184521717934524641157099916833587206)) x1649 (x1322 x379)))
(define-fun x1002 ((x379 x489)) Real (ite (= x379 (x714 x351)) x132 (x768 x379)))
(define-fun x1511 ((x379 Real)) Real (ite (= x379 0) 1 (x819 x379)))
(define-fun x994 ((x379 Real)) Real (ite (= x1119 x379) x697 (x720 x379)))
(define-fun x600 ((x379 Real)) Real (ite (and (not x339) x1098) (x994 x379) (x720 x379)))
(define-fun x1369 ((x379 Real)) Real (ite (= x379 0) 1 (x1684 x379)))
(define-fun x88 ((x379 Real)) Real (ite (= x379 0) 1 (x1684 x379)))
(define-fun x647 ((x379 Real)) Real (ite (and x1195 x1682) (x1369 x379) (x88 x379)))
(define-fun x1127 ((x379 Real)) Real (ite (and (> (+ x697 x144) x379) (>= x379 x144)) (x647 (+ (- x379 x144) 0)) (x1312 x379)))
(define-fun x1506 ((x379 Real)) Real (ite (and x1098 (not x339)) (x1127 x379) (x1312 x379)))
(define-fun x567 ((x379 Real)) Real (ite (= x1398 x379) x1258 (x635 x379)))
(define-fun x1471 ((x379 Real)) Real (ite (= x511 x379) x1440 (x1386 x379)))
(define-fun x1697 ((x379 x489)) Real (ite (and x1747 x851 x1711) (x408 x379) (x901 x379)))
(define-fun x410 ((x379 Real)) Real (ite (= x1117 x379) x730 (x1024 x379)))
(define-fun x1869 ((x379 Real)) Real (ite (= x379 x22) x596 (x1590 x379)))
(define-fun x490 ((x379 Real)) Real (ite (= x379 128) 50942633119752846454219349998365661925608737367104304655302372697894809501696 (x1148 x379)))
(define-fun x1574 ((x379 Real)) Real (ite (= 0 x379) x384 (x1792 x379)))
(define-fun x294 ((x379 Real)) Real (ite (= x379 128) x384 (x1804 x379)))
(define-fun x1662 ((x379 Real)) Real (ite (= x379 0) 1 (x1542 x379)))
(define-fun x260 ((x379 Real)) Real (ite (= x379 0) 1 (x1735 x379)))
(define-fun x1479 ((x379 Real)) Real (ite (= 0 x379) x1563 (x1314 x379)))
(define-fun x1146 ((x379 Real)) Real (ite (= 128 x379) x1563 (x1011 x379)))
(define-fun x1290 ((x379 Real)) Real (ite (= x379 0) 1 (x819 x379)))
(define-fun x325 ((x379 Real)) Real (ite (= 0 x379) x451 (x1792 x379)))
(define-fun x1779 ((x379 Real)) Real (ite (= x379 128) x451 (x1804 x379)))
(define-fun x1421 ((x379 Real)) Real (ite (and x849 x1377) (x975 x379) (x1662 x379)))
(define-fun x57 ((x379 Real)) Real (ite (= x1513 x379) x1094 (x1668 x379)))
(define-fun x1058 ((x379 Real)) Real (ite (and (< x379 (+ x542 x1094)) (<= x542 x379)) (x1421 (+ 0 (- x379 x542))) (x558 x379)))
(define-fun x1379 ((x379 Real)) Real (ite (and x272 x659) (x558 x379) (x1058 x379)))
(define-fun x826 ((x379 Real)) Real (ite (and x272 x659) (x1668 x379) (x57 x379)))
(define-fun x1742 ((x379 Real)) Real (ite (and x1362 x794) (x837 x379) (x260 x379)))
(define-fun x1210 ((x379 x489)) Real (ite (= x379 (x714 x1770)) x430 (x479 x379)))
(define-fun x90 ((x379 Real)) Real (ite (= x379 x452) x774 (x907 x379)))
(define-fun x1856 ((x379 Real)) Real (ite (and (>= x379 x1495) (< x379 (+ x1495 x774))) (x1742 (+ (- x379 x1495) 0)) (x880 x379)))
(define-fun x1517 ((x379 Real)) Real (ite (and x1295 x1465) (x907 x379) (x90 x379)))
(define-fun x508 ((x379 Real)) Real (ite (and x1465 x1295) (x880 x379) (x1856 x379)))
(define-fun x801 ((x379 Real)) Real (ite (and x1525 x779) (x337 x379) (x1146 x379)))
(define-fun x1063 ((x379 Real)) Real (x1444 x379))
(define-fun x1296 ((x379 Real)) Real (x1078 x379))
(define-fun x617 ((x379 Real)) Real (x822 x379))
(define-fun x651 ((x379 Real)) Real (x1278 x379))
(define-fun x1178 ((x379 Real)) Real (ite (and x403 x1222) (x1511 x379) (x1290 x379)))
(define-fun x1724 ((x379 x489)) Real (ite (= (x714 x351) x379) x525 (x1002 x379)))
(define-fun x1154 ((x379 Real)) Real (ite (= x688 x379) x1348 (x1562 x379)))
(define-fun x362 ((x379 Real)) Real (ite (and (>= x379 x482) (> (+ x482 x1348) x379)) (x1178 (+ (- x379 x482) 0)) (x1783 x379)))
(define-fun x1399 ((x379 Real)) Real (ite (and x155 x1790) (x1562 x379) (x1154 x379)))
(define-fun x1056 ((x379 Real)) Real (ite (and x155 x1790) (x1783 x379) (x362 x379)))
(define-fun x342 ((x379 Real)) Real (ite (and x812 x598) (x294 x379) (x1779 x379)))
(define-fun x920 ((x124 Real)) Bool (=> (and (not (= x124 115792089237316195423570985008687907853269984665640564039457584007913129639935)) (not (= 87118632 x124)) (not (= x124 2293535753)) (not (= 274184521717934524641157099916833587214 x124)) (not (= 243137395 x124)) (not (= x124 1461501637330902918203684832716283019655932542975)) (not (= 759532456 x124)) (not (= x124 76450787359836037641860180984291677749980919077056822294353438043884394381312)) (not (= x124 50942633119752846454219349998365661925608737367104304655302372697894809501696)) (not (= 1000000000000000000 x124)) (not (= 911411945 x124)) (not (= x124 635128645)) (not (= 142201243 x124)) (not (= x124 115792089237316195423570985008687907853269984665640564039457584007913129639904)) (not (= 1889567281 x124)) (not (= x124 2835717307)) (not (= 2211524764 x124)) (not (= x124 604800)) (not (= 468353030 x124)) (not (= 1986467848 x124)) (not (= 1461501637330902918203684832716283019655932542976 x124)) (not (= 115792089237316195423570985008687907853269984665640564039457 x124)) (not (= x124 2258409472)) (not (= x124 69947311)) (not (= 842085797 x124)) (not (= 26959946667150639794667015087019630673637144422540572481103610249215 x124)) (not (= 274184521717934524641157099916833587206 x124)) (not (= 2061678023 x124)) (not (= x124 274184521717934524641157099916833587218)) (> x124 10000) (not (= 1968616202 x124)) (not (= x124 2514000705)) (not (= 18446744073709551615 x124)) (not (= x124 826074471)) (not (= x124 649617121))) (not ((_ is x111) (x714 x124)))))
(assert (axiom_frac_bound (* 1000000000000000000 x1540) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (* 1000000000000000000 x1540) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x1540 (uninterp_frac (* 1000000000000000000 x1540) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x1540) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x289 (uninterp_frac (* 1000000000000000000 x1540) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x1540) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1108 (uninterp_frac (* 1000000000000000000 x1540) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x1540) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1179 (uninterp_frac (* 1000000000000000000 x1540) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x1540) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1396 (uninterp_frac (* 1000000000000000000 x1540) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x1540) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1621 (uninterp_frac (* 1000000000000000000 x1540) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x1540) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1803 (uninterp_frac (* 1000000000000000000 x1540) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x1540) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x319 (uninterp_frac (* 1000000000000000000 x1540) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x1540) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x478 (uninterp_frac (* 1000000000000000000 x1540) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x1540) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x98 (uninterp_frac (* 1000000000000000000 x1540) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x1540) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x117 x1231 (uninterp_frac (* 1000000000000000000 x1540) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x1540) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1231 x117 (uninterp_frac (* 1000000000000000000 x1540) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x1540) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1470 x515 (uninterp_frac (* 1000000000000000000 x1540) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x1540) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1487 1000000000000000000 (uninterp_frac (* 1000000000000000000 x1540) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x1540) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x154 32 (uninterp_frac (* 1000000000000000000 x1540) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x1540) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1549 x406 (uninterp_frac (* 1000000000000000000 x1540) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x1540) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1803 32 (uninterp_frac (* 1000000000000000000 x1540) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x1540) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1829 1000000000000000000 (uninterp_frac (* 1000000000000000000 x1540) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x1540) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x183 x856 (uninterp_frac (* 1000000000000000000 x1540) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x1540) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x319 32 (uninterp_frac (* 1000000000000000000 x1540) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x1540) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x36 x1083 (uninterp_frac (* 1000000000000000000 x1540) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x1540) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x429 x1705 (uninterp_frac (* 1000000000000000000 x1540) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x1540) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x466 32 (uninterp_frac (* 1000000000000000000 x1540) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x1540) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x515 x1470 (uninterp_frac (* 1000000000000000000 x1540) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x1540) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x52 x24 (uninterp_frac (* 1000000000000000000 x1540) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x1540) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x530 x680 (uninterp_frac (* 1000000000000000000 x1540) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x1540) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x622 32 (uninterp_frac (* 1000000000000000000 x1540) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x1540) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x623 x1635 (uninterp_frac (* 1000000000000000000 x1540) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x1540) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x680 x530 (uninterp_frac (* 1000000000000000000 x1540) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x1540) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x749 x1285 (uninterp_frac (* 1000000000000000000 x1540) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x1540) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x759 x99 (uninterp_frac (* 1000000000000000000 x1540) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x1540) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x776 x1270 (uninterp_frac (* 1000000000000000000 x1540) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x1540) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x821 32 (uninterp_frac (* 1000000000000000000 x1540) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x1540) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x856 x183 (uninterp_frac (* 1000000000000000000 x1540) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x1540) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x99 x759 (uninterp_frac (* 1000000000000000000 x1540) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (* 1000000000000000000 x289) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (* 1000000000000000000 x289) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x1540 (uninterp_frac (* 1000000000000000000 x289) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x289) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x289 (uninterp_frac (* 1000000000000000000 x289) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x289) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1108 (uninterp_frac (* 1000000000000000000 x289) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x289) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1179 (uninterp_frac (* 1000000000000000000 x289) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x289) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1396 (uninterp_frac (* 1000000000000000000 x289) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x289) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1621 (uninterp_frac (* 1000000000000000000 x289) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x289) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1803 (uninterp_frac (* 1000000000000000000 x289) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x289) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x319 (uninterp_frac (* 1000000000000000000 x289) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x289) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x478 (uninterp_frac (* 1000000000000000000 x289) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x289) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x98 (uninterp_frac (* 1000000000000000000 x289) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x289) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x117 x1231 (uninterp_frac (* 1000000000000000000 x289) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x289) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1231 x117 (uninterp_frac (* 1000000000000000000 x289) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x289) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1470 x515 (uninterp_frac (* 1000000000000000000 x289) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x289) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1487 1000000000000000000 (uninterp_frac (* 1000000000000000000 x289) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x289) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x154 32 (uninterp_frac (* 1000000000000000000 x289) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x289) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1549 x406 (uninterp_frac (* 1000000000000000000 x289) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x289) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1803 32 (uninterp_frac (* 1000000000000000000 x289) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x289) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1829 1000000000000000000 (uninterp_frac (* 1000000000000000000 x289) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x289) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x183 x856 (uninterp_frac (* 1000000000000000000 x289) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x289) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x319 32 (uninterp_frac (* 1000000000000000000 x289) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x289) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x36 x1083 (uninterp_frac (* 1000000000000000000 x289) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x289) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x429 x1705 (uninterp_frac (* 1000000000000000000 x289) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x289) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x466 32 (uninterp_frac (* 1000000000000000000 x289) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x289) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x515 x1470 (uninterp_frac (* 1000000000000000000 x289) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x289) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x52 x24 (uninterp_frac (* 1000000000000000000 x289) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x289) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x530 x680 (uninterp_frac (* 1000000000000000000 x289) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x289) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x622 32 (uninterp_frac (* 1000000000000000000 x289) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x289) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x623 x1635 (uninterp_frac (* 1000000000000000000 x289) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x289) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x680 x530 (uninterp_frac (* 1000000000000000000 x289) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x289) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x749 x1285 (uninterp_frac (* 1000000000000000000 x289) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x289) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x759 x99 (uninterp_frac (* 1000000000000000000 x289) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x289) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x776 x1270 (uninterp_frac (* 1000000000000000000 x289) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x289) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x821 32 (uninterp_frac (* 1000000000000000000 x289) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x289) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x856 x183 (uninterp_frac (* 1000000000000000000 x289) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x289) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x99 x759 (uninterp_frac (* 1000000000000000000 x289) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (* 32 x1108) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (* 32 x1108) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x1540 (uninterp_frac (* 32 x1108) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1108) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x289 (uninterp_frac (* 32 x1108) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1108) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1108 (uninterp_frac (* 32 x1108) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1108) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1179 (uninterp_frac (* 32 x1108) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1108) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1396 (uninterp_frac (* 32 x1108) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1108) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1621 (uninterp_frac (* 32 x1108) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1108) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1803 (uninterp_frac (* 32 x1108) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1108) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x319 (uninterp_frac (* 32 x1108) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1108) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x478 (uninterp_frac (* 32 x1108) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1108) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x98 (uninterp_frac (* 32 x1108) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1108) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x117 x1231 (uninterp_frac (* 32 x1108) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1108) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1231 x117 (uninterp_frac (* 32 x1108) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1108) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1470 x515 (uninterp_frac (* 32 x1108) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1108) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1487 1000000000000000000 (uninterp_frac (* 32 x1108) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1108) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x154 32 (uninterp_frac (* 32 x1108) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1108) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1549 x406 (uninterp_frac (* 32 x1108) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1108) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1803 32 (uninterp_frac (* 32 x1108) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1108) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1829 1000000000000000000 (uninterp_frac (* 32 x1108) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1108) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x183 x856 (uninterp_frac (* 32 x1108) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1108) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x319 32 (uninterp_frac (* 32 x1108) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1108) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x36 x1083 (uninterp_frac (* 32 x1108) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1108) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x429 x1705 (uninterp_frac (* 32 x1108) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1108) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x466 32 (uninterp_frac (* 32 x1108) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1108) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x515 x1470 (uninterp_frac (* 32 x1108) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1108) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x52 x24 (uninterp_frac (* 32 x1108) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1108) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x530 x680 (uninterp_frac (* 32 x1108) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1108) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x622 32 (uninterp_frac (* 32 x1108) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1108) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x623 x1635 (uninterp_frac (* 32 x1108) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1108) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x680 x530 (uninterp_frac (* 32 x1108) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1108) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x749 x1285 (uninterp_frac (* 32 x1108) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1108) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x759 x99 (uninterp_frac (* 32 x1108) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1108) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x776 x1270 (uninterp_frac (* 32 x1108) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1108) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x821 32 (uninterp_frac (* 32 x1108) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1108) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x856 x183 (uninterp_frac (* 32 x1108) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1108) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x99 x759 (uninterp_frac (* 32 x1108) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (* 32 x1179) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (* 32 x1179) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x1540 (uninterp_frac (* 32 x1179) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1179) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x289 (uninterp_frac (* 32 x1179) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1179) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1108 (uninterp_frac (* 32 x1179) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1179) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1179 (uninterp_frac (* 32 x1179) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1179) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1396 (uninterp_frac (* 32 x1179) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1179) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1621 (uninterp_frac (* 32 x1179) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1179) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1803 (uninterp_frac (* 32 x1179) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1179) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x319 (uninterp_frac (* 32 x1179) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1179) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x478 (uninterp_frac (* 32 x1179) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1179) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x98 (uninterp_frac (* 32 x1179) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1179) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x117 x1231 (uninterp_frac (* 32 x1179) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1179) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1231 x117 (uninterp_frac (* 32 x1179) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1179) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1470 x515 (uninterp_frac (* 32 x1179) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1179) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1487 1000000000000000000 (uninterp_frac (* 32 x1179) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1179) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x154 32 (uninterp_frac (* 32 x1179) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1179) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1549 x406 (uninterp_frac (* 32 x1179) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1179) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1803 32 (uninterp_frac (* 32 x1179) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1179) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1829 1000000000000000000 (uninterp_frac (* 32 x1179) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1179) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x183 x856 (uninterp_frac (* 32 x1179) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1179) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x319 32 (uninterp_frac (* 32 x1179) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1179) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x36 x1083 (uninterp_frac (* 32 x1179) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1179) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x429 x1705 (uninterp_frac (* 32 x1179) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1179) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x466 32 (uninterp_frac (* 32 x1179) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1179) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x515 x1470 (uninterp_frac (* 32 x1179) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1179) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x52 x24 (uninterp_frac (* 32 x1179) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1179) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x530 x680 (uninterp_frac (* 32 x1179) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1179) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x622 32 (uninterp_frac (* 32 x1179) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1179) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x623 x1635 (uninterp_frac (* 32 x1179) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1179) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x680 x530 (uninterp_frac (* 32 x1179) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1179) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x749 x1285 (uninterp_frac (* 32 x1179) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1179) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x759 x99 (uninterp_frac (* 32 x1179) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1179) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x776 x1270 (uninterp_frac (* 32 x1179) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1179) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x821 32 (uninterp_frac (* 32 x1179) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1179) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x856 x183 (uninterp_frac (* 32 x1179) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1179) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x99 x759 (uninterp_frac (* 32 x1179) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (* 32 x1396) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (* 32 x1396) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x1540 (uninterp_frac (* 32 x1396) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1396) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x289 (uninterp_frac (* 32 x1396) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1396) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1108 (uninterp_frac (* 32 x1396) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1396) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1179 (uninterp_frac (* 32 x1396) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1396) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1396 (uninterp_frac (* 32 x1396) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1396) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1621 (uninterp_frac (* 32 x1396) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1396) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1803 (uninterp_frac (* 32 x1396) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1396) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x319 (uninterp_frac (* 32 x1396) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1396) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x478 (uninterp_frac (* 32 x1396) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1396) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x98 (uninterp_frac (* 32 x1396) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1396) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x117 x1231 (uninterp_frac (* 32 x1396) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1396) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1231 x117 (uninterp_frac (* 32 x1396) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1396) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1470 x515 (uninterp_frac (* 32 x1396) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1396) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1487 1000000000000000000 (uninterp_frac (* 32 x1396) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1396) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x154 32 (uninterp_frac (* 32 x1396) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1396) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1549 x406 (uninterp_frac (* 32 x1396) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1396) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1803 32 (uninterp_frac (* 32 x1396) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1396) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1829 1000000000000000000 (uninterp_frac (* 32 x1396) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1396) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x183 x856 (uninterp_frac (* 32 x1396) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1396) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x319 32 (uninterp_frac (* 32 x1396) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1396) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x36 x1083 (uninterp_frac (* 32 x1396) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1396) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x429 x1705 (uninterp_frac (* 32 x1396) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1396) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x466 32 (uninterp_frac (* 32 x1396) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1396) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x515 x1470 (uninterp_frac (* 32 x1396) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1396) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x52 x24 (uninterp_frac (* 32 x1396) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1396) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x530 x680 (uninterp_frac (* 32 x1396) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1396) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x622 32 (uninterp_frac (* 32 x1396) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1396) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x623 x1635 (uninterp_frac (* 32 x1396) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1396) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x680 x530 (uninterp_frac (* 32 x1396) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1396) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x749 x1285 (uninterp_frac (* 32 x1396) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1396) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x759 x99 (uninterp_frac (* 32 x1396) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1396) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x776 x1270 (uninterp_frac (* 32 x1396) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1396) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x821 32 (uninterp_frac (* 32 x1396) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1396) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x856 x183 (uninterp_frac (* 32 x1396) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1396) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x99 x759 (uninterp_frac (* 32 x1396) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (* 32 x1621) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (* 32 x1621) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x1540 (uninterp_frac (* 32 x1621) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1621) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x289 (uninterp_frac (* 32 x1621) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1621) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1108 (uninterp_frac (* 32 x1621) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1621) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1179 (uninterp_frac (* 32 x1621) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1621) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1396 (uninterp_frac (* 32 x1621) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1621) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1621 (uninterp_frac (* 32 x1621) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1621) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1803 (uninterp_frac (* 32 x1621) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1621) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x319 (uninterp_frac (* 32 x1621) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1621) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x478 (uninterp_frac (* 32 x1621) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1621) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x98 (uninterp_frac (* 32 x1621) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1621) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x117 x1231 (uninterp_frac (* 32 x1621) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1621) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1231 x117 (uninterp_frac (* 32 x1621) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1621) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1470 x515 (uninterp_frac (* 32 x1621) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1621) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1487 1000000000000000000 (uninterp_frac (* 32 x1621) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1621) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x154 32 (uninterp_frac (* 32 x1621) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1621) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1549 x406 (uninterp_frac (* 32 x1621) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1621) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1803 32 (uninterp_frac (* 32 x1621) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1621) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1829 1000000000000000000 (uninterp_frac (* 32 x1621) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1621) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x183 x856 (uninterp_frac (* 32 x1621) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1621) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x319 32 (uninterp_frac (* 32 x1621) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1621) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x36 x1083 (uninterp_frac (* 32 x1621) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1621) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x429 x1705 (uninterp_frac (* 32 x1621) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1621) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x466 32 (uninterp_frac (* 32 x1621) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1621) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x515 x1470 (uninterp_frac (* 32 x1621) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1621) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x52 x24 (uninterp_frac (* 32 x1621) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1621) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x530 x680 (uninterp_frac (* 32 x1621) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1621) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x622 32 (uninterp_frac (* 32 x1621) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1621) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x623 x1635 (uninterp_frac (* 32 x1621) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1621) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x680 x530 (uninterp_frac (* 32 x1621) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1621) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x749 x1285 (uninterp_frac (* 32 x1621) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1621) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x759 x99 (uninterp_frac (* 32 x1621) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1621) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x776 x1270 (uninterp_frac (* 32 x1621) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1621) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x821 32 (uninterp_frac (* 32 x1621) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1621) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x856 x183 (uninterp_frac (* 32 x1621) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1621) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x99 x759 (uninterp_frac (* 32 x1621) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (* 32 x1803) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (* 32 x1803) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x1540 (uninterp_frac (* 32 x1803) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1803) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x289 (uninterp_frac (* 32 x1803) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1803) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1108 (uninterp_frac (* 32 x1803) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1803) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1179 (uninterp_frac (* 32 x1803) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1803) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1396 (uninterp_frac (* 32 x1803) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1803) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1621 (uninterp_frac (* 32 x1803) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1803) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1803 (uninterp_frac (* 32 x1803) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1803) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x319 (uninterp_frac (* 32 x1803) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1803) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x478 (uninterp_frac (* 32 x1803) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1803) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x98 (uninterp_frac (* 32 x1803) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1803) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x117 x1231 (uninterp_frac (* 32 x1803) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1803) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1231 x117 (uninterp_frac (* 32 x1803) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1803) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1470 x515 (uninterp_frac (* 32 x1803) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1803) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1487 1000000000000000000 (uninterp_frac (* 32 x1803) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1803) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x154 32 (uninterp_frac (* 32 x1803) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1803) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1549 x406 (uninterp_frac (* 32 x1803) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1803) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1803 32 (uninterp_frac (* 32 x1803) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1803) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1829 1000000000000000000 (uninterp_frac (* 32 x1803) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1803) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x183 x856 (uninterp_frac (* 32 x1803) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1803) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x319 32 (uninterp_frac (* 32 x1803) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1803) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x36 x1083 (uninterp_frac (* 32 x1803) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1803) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x429 x1705 (uninterp_frac (* 32 x1803) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1803) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x466 32 (uninterp_frac (* 32 x1803) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1803) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x515 x1470 (uninterp_frac (* 32 x1803) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1803) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x52 x24 (uninterp_frac (* 32 x1803) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1803) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x530 x680 (uninterp_frac (* 32 x1803) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1803) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x622 32 (uninterp_frac (* 32 x1803) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1803) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x623 x1635 (uninterp_frac (* 32 x1803) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1803) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x680 x530 (uninterp_frac (* 32 x1803) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1803) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x749 x1285 (uninterp_frac (* 32 x1803) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1803) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x759 x99 (uninterp_frac (* 32 x1803) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1803) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x776 x1270 (uninterp_frac (* 32 x1803) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1803) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x821 32 (uninterp_frac (* 32 x1803) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1803) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x856 x183 (uninterp_frac (* 32 x1803) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1803) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x99 x759 (uninterp_frac (* 32 x1803) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (* 32 x319) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (* 32 x319) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x1540 (uninterp_frac (* 32 x319) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x319) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x289 (uninterp_frac (* 32 x319) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x319) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1108 (uninterp_frac (* 32 x319) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x319) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1179 (uninterp_frac (* 32 x319) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x319) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1396 (uninterp_frac (* 32 x319) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x319) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1621 (uninterp_frac (* 32 x319) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x319) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1803 (uninterp_frac (* 32 x319) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x319) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x319 (uninterp_frac (* 32 x319) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x319) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x478 (uninterp_frac (* 32 x319) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x319) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x98 (uninterp_frac (* 32 x319) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x319) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x117 x1231 (uninterp_frac (* 32 x319) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x319) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1231 x117 (uninterp_frac (* 32 x319) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x319) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1470 x515 (uninterp_frac (* 32 x319) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x319) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1487 1000000000000000000 (uninterp_frac (* 32 x319) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x319) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x154 32 (uninterp_frac (* 32 x319) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x319) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1549 x406 (uninterp_frac (* 32 x319) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x319) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1803 32 (uninterp_frac (* 32 x319) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x319) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1829 1000000000000000000 (uninterp_frac (* 32 x319) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x319) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x183 x856 (uninterp_frac (* 32 x319) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x319) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x319 32 (uninterp_frac (* 32 x319) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x319) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x36 x1083 (uninterp_frac (* 32 x319) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x319) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x429 x1705 (uninterp_frac (* 32 x319) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x319) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x466 32 (uninterp_frac (* 32 x319) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x319) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x515 x1470 (uninterp_frac (* 32 x319) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x319) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x52 x24 (uninterp_frac (* 32 x319) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x319) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x530 x680 (uninterp_frac (* 32 x319) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x319) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x622 32 (uninterp_frac (* 32 x319) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x319) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x623 x1635 (uninterp_frac (* 32 x319) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x319) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x680 x530 (uninterp_frac (* 32 x319) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x319) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x749 x1285 (uninterp_frac (* 32 x319) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x319) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x759 x99 (uninterp_frac (* 32 x319) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x319) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x776 x1270 (uninterp_frac (* 32 x319) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x319) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x821 32 (uninterp_frac (* 32 x319) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x319) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x856 x183 (uninterp_frac (* 32 x319) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x319) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x99 x759 (uninterp_frac (* 32 x319) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (* 32 x478) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (* 32 x478) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x1540 (uninterp_frac (* 32 x478) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x478) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x289 (uninterp_frac (* 32 x478) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x478) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1108 (uninterp_frac (* 32 x478) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x478) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1179 (uninterp_frac (* 32 x478) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x478) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1396 (uninterp_frac (* 32 x478) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x478) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1621 (uninterp_frac (* 32 x478) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x478) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1803 (uninterp_frac (* 32 x478) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x478) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x319 (uninterp_frac (* 32 x478) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x478) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x478 (uninterp_frac (* 32 x478) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x478) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x98 (uninterp_frac (* 32 x478) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x478) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x117 x1231 (uninterp_frac (* 32 x478) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x478) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1231 x117 (uninterp_frac (* 32 x478) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x478) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1470 x515 (uninterp_frac (* 32 x478) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x478) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1487 1000000000000000000 (uninterp_frac (* 32 x478) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x478) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x154 32 (uninterp_frac (* 32 x478) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x478) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1549 x406 (uninterp_frac (* 32 x478) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x478) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1803 32 (uninterp_frac (* 32 x478) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x478) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1829 1000000000000000000 (uninterp_frac (* 32 x478) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x478) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x183 x856 (uninterp_frac (* 32 x478) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x478) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x319 32 (uninterp_frac (* 32 x478) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x478) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x36 x1083 (uninterp_frac (* 32 x478) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x478) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x429 x1705 (uninterp_frac (* 32 x478) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x478) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x466 32 (uninterp_frac (* 32 x478) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x478) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x515 x1470 (uninterp_frac (* 32 x478) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x478) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x52 x24 (uninterp_frac (* 32 x478) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x478) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x530 x680 (uninterp_frac (* 32 x478) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x478) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x622 32 (uninterp_frac (* 32 x478) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x478) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x623 x1635 (uninterp_frac (* 32 x478) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x478) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x680 x530 (uninterp_frac (* 32 x478) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x478) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x749 x1285 (uninterp_frac (* 32 x478) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x478) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x759 x99 (uninterp_frac (* 32 x478) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x478) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x776 x1270 (uninterp_frac (* 32 x478) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x478) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x821 32 (uninterp_frac (* 32 x478) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x478) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x856 x183 (uninterp_frac (* 32 x478) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x478) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x99 x759 (uninterp_frac (* 32 x478) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (* 32 x98) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (* 32 x98) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x1540 (uninterp_frac (* 32 x98) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x98) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x289 (uninterp_frac (* 32 x98) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x98) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1108 (uninterp_frac (* 32 x98) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x98) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1179 (uninterp_frac (* 32 x98) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x98) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1396 (uninterp_frac (* 32 x98) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x98) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1621 (uninterp_frac (* 32 x98) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x98) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1803 (uninterp_frac (* 32 x98) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x98) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x319 (uninterp_frac (* 32 x98) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x98) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x478 (uninterp_frac (* 32 x98) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x98) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x98 (uninterp_frac (* 32 x98) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x98) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x117 x1231 (uninterp_frac (* 32 x98) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x98) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1231 x117 (uninterp_frac (* 32 x98) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x98) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1470 x515 (uninterp_frac (* 32 x98) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x98) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1487 1000000000000000000 (uninterp_frac (* 32 x98) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x98) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x154 32 (uninterp_frac (* 32 x98) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x98) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1549 x406 (uninterp_frac (* 32 x98) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x98) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1803 32 (uninterp_frac (* 32 x98) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x98) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1829 1000000000000000000 (uninterp_frac (* 32 x98) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x98) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x183 x856 (uninterp_frac (* 32 x98) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x98) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x319 32 (uninterp_frac (* 32 x98) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x98) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x36 x1083 (uninterp_frac (* 32 x98) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x98) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x429 x1705 (uninterp_frac (* 32 x98) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x98) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x466 32 (uninterp_frac (* 32 x98) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x98) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x515 x1470 (uninterp_frac (* 32 x98) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x98) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x52 x24 (uninterp_frac (* 32 x98) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x98) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x530 x680 (uninterp_frac (* 32 x98) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x98) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x622 32 (uninterp_frac (* 32 x98) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x98) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x623 x1635 (uninterp_frac (* 32 x98) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x98) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x680 x530 (uninterp_frac (* 32 x98) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x98) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x749 x1285 (uninterp_frac (* 32 x98) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x98) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x759 x99 (uninterp_frac (* 32 x98) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x98) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x776 x1270 (uninterp_frac (* 32 x98) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x98) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x821 32 (uninterp_frac (* 32 x98) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x98) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x856 x183 (uninterp_frac (* 32 x98) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x98) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x99 x759 (uninterp_frac (* 32 x98) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (* x1487 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (* x1487 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x1540 (uninterp_frac (* x1487 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1487 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x289 (uninterp_frac (* x1487 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1487 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1108 (uninterp_frac (* x1487 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1487 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1179 (uninterp_frac (* x1487 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1487 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1396 (uninterp_frac (* x1487 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1487 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1621 (uninterp_frac (* x1487 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1487 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1803 (uninterp_frac (* x1487 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1487 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x319 (uninterp_frac (* x1487 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1487 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x478 (uninterp_frac (* x1487 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1487 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x98 (uninterp_frac (* x1487 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1487 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x117 x1231 (uninterp_frac (* x1487 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1487 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1231 x117 (uninterp_frac (* x1487 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1487 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1470 x515 (uninterp_frac (* x1487 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1487 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1487 1000000000000000000 (uninterp_frac (* x1487 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1487 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x154 32 (uninterp_frac (* x1487 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1487 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1549 x406 (uninterp_frac (* x1487 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1487 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1803 32 (uninterp_frac (* x1487 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1487 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1829 1000000000000000000 (uninterp_frac (* x1487 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1487 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x183 x856 (uninterp_frac (* x1487 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1487 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x319 32 (uninterp_frac (* x1487 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1487 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x36 x1083 (uninterp_frac (* x1487 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1487 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x429 x1705 (uninterp_frac (* x1487 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1487 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x466 32 (uninterp_frac (* x1487 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1487 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x515 x1470 (uninterp_frac (* x1487 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1487 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x52 x24 (uninterp_frac (* x1487 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1487 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x530 x680 (uninterp_frac (* x1487 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1487 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x622 32 (uninterp_frac (* x1487 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1487 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x623 x1635 (uninterp_frac (* x1487 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1487 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x680 x530 (uninterp_frac (* x1487 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1487 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x749 x1285 (uninterp_frac (* x1487 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1487 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x759 x99 (uninterp_frac (* x1487 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1487 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x776 x1270 (uninterp_frac (* x1487 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1487 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x821 32 (uninterp_frac (* x1487 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1487 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x856 x183 (uninterp_frac (* x1487 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1487 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x99 x759 (uninterp_frac (* x1487 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (* x154 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (* x154 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x1540 (uninterp_frac (* x154 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x154 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x289 (uninterp_frac (* x154 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x154 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1108 (uninterp_frac (* x154 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x154 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1179 (uninterp_frac (* x154 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x154 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1396 (uninterp_frac (* x154 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x154 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1621 (uninterp_frac (* x154 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x154 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1803 (uninterp_frac (* x154 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x154 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x319 (uninterp_frac (* x154 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x154 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x478 (uninterp_frac (* x154 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x154 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x98 (uninterp_frac (* x154 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x154 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x117 x1231 (uninterp_frac (* x154 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x154 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1231 x117 (uninterp_frac (* x154 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x154 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1470 x515 (uninterp_frac (* x154 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x154 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1487 1000000000000000000 (uninterp_frac (* x154 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x154 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x154 32 (uninterp_frac (* x154 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x154 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1549 x406 (uninterp_frac (* x154 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x154 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1803 32 (uninterp_frac (* x154 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x154 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1829 1000000000000000000 (uninterp_frac (* x154 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x154 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x183 x856 (uninterp_frac (* x154 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x154 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x319 32 (uninterp_frac (* x154 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x154 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x36 x1083 (uninterp_frac (* x154 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x154 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x429 x1705 (uninterp_frac (* x154 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x154 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x466 32 (uninterp_frac (* x154 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x154 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x515 x1470 (uninterp_frac (* x154 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x154 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x52 x24 (uninterp_frac (* x154 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x154 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x530 x680 (uninterp_frac (* x154 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x154 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x622 32 (uninterp_frac (* x154 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x154 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x623 x1635 (uninterp_frac (* x154 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x154 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x680 x530 (uninterp_frac (* x154 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x154 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x749 x1285 (uninterp_frac (* x154 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x154 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x759 x99 (uninterp_frac (* x154 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x154 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x776 x1270 (uninterp_frac (* x154 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x154 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x821 32 (uninterp_frac (* x154 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x154 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x856 x183 (uninterp_frac (* x154 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x154 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x99 x759 (uninterp_frac (* x154 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (* x1803 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (* x1803 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x1540 (uninterp_frac (* x1803 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1803 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x289 (uninterp_frac (* x1803 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1803 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1108 (uninterp_frac (* x1803 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1803 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1179 (uninterp_frac (* x1803 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1803 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1396 (uninterp_frac (* x1803 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1803 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1621 (uninterp_frac (* x1803 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1803 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1803 (uninterp_frac (* x1803 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1803 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x319 (uninterp_frac (* x1803 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1803 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x478 (uninterp_frac (* x1803 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1803 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x98 (uninterp_frac (* x1803 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1803 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x117 x1231 (uninterp_frac (* x1803 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1803 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1231 x117 (uninterp_frac (* x1803 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1803 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1470 x515 (uninterp_frac (* x1803 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1803 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1487 1000000000000000000 (uninterp_frac (* x1803 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1803 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x154 32 (uninterp_frac (* x1803 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1803 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1549 x406 (uninterp_frac (* x1803 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1803 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1803 32 (uninterp_frac (* x1803 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1803 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1829 1000000000000000000 (uninterp_frac (* x1803 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1803 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x183 x856 (uninterp_frac (* x1803 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1803 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x319 32 (uninterp_frac (* x1803 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1803 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x36 x1083 (uninterp_frac (* x1803 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1803 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x429 x1705 (uninterp_frac (* x1803 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1803 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x466 32 (uninterp_frac (* x1803 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1803 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x515 x1470 (uninterp_frac (* x1803 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1803 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x52 x24 (uninterp_frac (* x1803 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1803 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x530 x680 (uninterp_frac (* x1803 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1803 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x622 32 (uninterp_frac (* x1803 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1803 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x623 x1635 (uninterp_frac (* x1803 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1803 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x680 x530 (uninterp_frac (* x1803 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1803 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x749 x1285 (uninterp_frac (* x1803 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1803 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x759 x99 (uninterp_frac (* x1803 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1803 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x776 x1270 (uninterp_frac (* x1803 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1803 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x821 32 (uninterp_frac (* x1803 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1803 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x856 x183 (uninterp_frac (* x1803 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1803 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x99 x759 (uninterp_frac (* x1803 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (* x1829 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (* x1829 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x1540 (uninterp_frac (* x1829 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1829 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x289 (uninterp_frac (* x1829 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1829 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1108 (uninterp_frac (* x1829 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1829 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1179 (uninterp_frac (* x1829 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1829 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1396 (uninterp_frac (* x1829 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1829 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1621 (uninterp_frac (* x1829 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1829 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1803 (uninterp_frac (* x1829 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1829 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x319 (uninterp_frac (* x1829 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1829 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x478 (uninterp_frac (* x1829 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1829 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x98 (uninterp_frac (* x1829 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1829 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x117 x1231 (uninterp_frac (* x1829 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1829 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1231 x117 (uninterp_frac (* x1829 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1829 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1470 x515 (uninterp_frac (* x1829 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1829 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1487 1000000000000000000 (uninterp_frac (* x1829 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1829 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x154 32 (uninterp_frac (* x1829 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1829 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1549 x406 (uninterp_frac (* x1829 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1829 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1803 32 (uninterp_frac (* x1829 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1829 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1829 1000000000000000000 (uninterp_frac (* x1829 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1829 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x183 x856 (uninterp_frac (* x1829 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1829 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x319 32 (uninterp_frac (* x1829 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1829 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x36 x1083 (uninterp_frac (* x1829 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1829 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x429 x1705 (uninterp_frac (* x1829 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1829 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x466 32 (uninterp_frac (* x1829 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1829 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x515 x1470 (uninterp_frac (* x1829 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1829 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x52 x24 (uninterp_frac (* x1829 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1829 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x530 x680 (uninterp_frac (* x1829 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1829 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x622 32 (uninterp_frac (* x1829 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1829 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x623 x1635 (uninterp_frac (* x1829 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1829 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x680 x530 (uninterp_frac (* x1829 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1829 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x749 x1285 (uninterp_frac (* x1829 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1829 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x759 x99 (uninterp_frac (* x1829 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1829 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x776 x1270 (uninterp_frac (* x1829 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1829 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x821 32 (uninterp_frac (* x1829 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1829 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x856 x183 (uninterp_frac (* x1829 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1829 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x99 x759 (uninterp_frac (* x1829 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (* x319 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (* x319 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x1540 (uninterp_frac (* x319 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x319 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x289 (uninterp_frac (* x319 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x319 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1108 (uninterp_frac (* x319 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x319 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1179 (uninterp_frac (* x319 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x319 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1396 (uninterp_frac (* x319 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x319 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1621 (uninterp_frac (* x319 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x319 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1803 (uninterp_frac (* x319 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x319 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x319 (uninterp_frac (* x319 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x319 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x478 (uninterp_frac (* x319 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x319 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x98 (uninterp_frac (* x319 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x319 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x117 x1231 (uninterp_frac (* x319 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x319 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1231 x117 (uninterp_frac (* x319 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x319 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1470 x515 (uninterp_frac (* x319 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x319 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1487 1000000000000000000 (uninterp_frac (* x319 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x319 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x154 32 (uninterp_frac (* x319 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x319 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1549 x406 (uninterp_frac (* x319 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x319 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1803 32 (uninterp_frac (* x319 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x319 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1829 1000000000000000000 (uninterp_frac (* x319 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x319 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x183 x856 (uninterp_frac (* x319 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x319 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x319 32 (uninterp_frac (* x319 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x319 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x36 x1083 (uninterp_frac (* x319 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x319 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x429 x1705 (uninterp_frac (* x319 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x319 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x466 32 (uninterp_frac (* x319 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x319 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x515 x1470 (uninterp_frac (* x319 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x319 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x52 x24 (uninterp_frac (* x319 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x319 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x530 x680 (uninterp_frac (* x319 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x319 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x622 32 (uninterp_frac (* x319 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x319 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x623 x1635 (uninterp_frac (* x319 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x319 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x680 x530 (uninterp_frac (* x319 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x319 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x749 x1285 (uninterp_frac (* x319 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x319 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x759 x99 (uninterp_frac (* x319 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x319 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x776 x1270 (uninterp_frac (* x319 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x319 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x821 32 (uninterp_frac (* x319 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x319 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x856 x183 (uninterp_frac (* x319 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x319 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x99 x759 (uninterp_frac (* x319 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (* x466 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (* x466 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x1540 (uninterp_frac (* x466 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x466 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x289 (uninterp_frac (* x466 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x466 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1108 (uninterp_frac (* x466 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x466 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1179 (uninterp_frac (* x466 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x466 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1396 (uninterp_frac (* x466 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x466 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1621 (uninterp_frac (* x466 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x466 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1803 (uninterp_frac (* x466 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x466 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x319 (uninterp_frac (* x466 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x466 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x478 (uninterp_frac (* x466 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x466 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x98 (uninterp_frac (* x466 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x466 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x117 x1231 (uninterp_frac (* x466 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x466 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1231 x117 (uninterp_frac (* x466 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x466 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1470 x515 (uninterp_frac (* x466 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x466 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1487 1000000000000000000 (uninterp_frac (* x466 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x466 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x154 32 (uninterp_frac (* x466 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x466 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1549 x406 (uninterp_frac (* x466 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x466 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1803 32 (uninterp_frac (* x466 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x466 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1829 1000000000000000000 (uninterp_frac (* x466 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x466 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x183 x856 (uninterp_frac (* x466 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x466 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x319 32 (uninterp_frac (* x466 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x466 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x36 x1083 (uninterp_frac (* x466 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x466 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x429 x1705 (uninterp_frac (* x466 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x466 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x466 32 (uninterp_frac (* x466 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x466 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x515 x1470 (uninterp_frac (* x466 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x466 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x52 x24 (uninterp_frac (* x466 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x466 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x530 x680 (uninterp_frac (* x466 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x466 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x622 32 (uninterp_frac (* x466 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x466 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x623 x1635 (uninterp_frac (* x466 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x466 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x680 x530 (uninterp_frac (* x466 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x466 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x749 x1285 (uninterp_frac (* x466 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x466 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x759 x99 (uninterp_frac (* x466 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x466 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x776 x1270 (uninterp_frac (* x466 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x466 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x821 32 (uninterp_frac (* x466 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x466 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x856 x183 (uninterp_frac (* x466 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x466 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x99 x759 (uninterp_frac (* x466 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (* x622 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (* x622 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x1540 (uninterp_frac (* x622 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x622 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x289 (uninterp_frac (* x622 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x622 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1108 (uninterp_frac (* x622 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x622 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1179 (uninterp_frac (* x622 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x622 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1396 (uninterp_frac (* x622 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x622 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1621 (uninterp_frac (* x622 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x622 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1803 (uninterp_frac (* x622 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x622 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x319 (uninterp_frac (* x622 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x622 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x478 (uninterp_frac (* x622 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x622 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x98 (uninterp_frac (* x622 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x622 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x117 x1231 (uninterp_frac (* x622 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x622 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1231 x117 (uninterp_frac (* x622 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x622 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1470 x515 (uninterp_frac (* x622 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x622 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1487 1000000000000000000 (uninterp_frac (* x622 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x622 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x154 32 (uninterp_frac (* x622 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x622 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1549 x406 (uninterp_frac (* x622 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x622 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1803 32 (uninterp_frac (* x622 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x622 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1829 1000000000000000000 (uninterp_frac (* x622 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x622 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x183 x856 (uninterp_frac (* x622 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x622 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x319 32 (uninterp_frac (* x622 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x622 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x36 x1083 (uninterp_frac (* x622 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x622 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x429 x1705 (uninterp_frac (* x622 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x622 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x466 32 (uninterp_frac (* x622 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x622 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x515 x1470 (uninterp_frac (* x622 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x622 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x52 x24 (uninterp_frac (* x622 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x622 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x530 x680 (uninterp_frac (* x622 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x622 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x622 32 (uninterp_frac (* x622 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x622 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x623 x1635 (uninterp_frac (* x622 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x622 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x680 x530 (uninterp_frac (* x622 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x622 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x749 x1285 (uninterp_frac (* x622 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x622 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x759 x99 (uninterp_frac (* x622 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x622 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x776 x1270 (uninterp_frac (* x622 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x622 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x821 32 (uninterp_frac (* x622 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x622 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x856 x183 (uninterp_frac (* x622 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x622 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x99 x759 (uninterp_frac (* x622 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (* x821 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (* x821 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x1540 (uninterp_frac (* x821 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x821 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x289 (uninterp_frac (* x821 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x821 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1108 (uninterp_frac (* x821 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x821 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1179 (uninterp_frac (* x821 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x821 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1396 (uninterp_frac (* x821 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x821 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1621 (uninterp_frac (* x821 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x821 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1803 (uninterp_frac (* x821 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x821 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x319 (uninterp_frac (* x821 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x821 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x478 (uninterp_frac (* x821 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x821 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x98 (uninterp_frac (* x821 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x821 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x117 x1231 (uninterp_frac (* x821 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x821 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1231 x117 (uninterp_frac (* x821 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x821 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1470 x515 (uninterp_frac (* x821 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x821 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1487 1000000000000000000 (uninterp_frac (* x821 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x821 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x154 32 (uninterp_frac (* x821 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x821 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1549 x406 (uninterp_frac (* x821 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x821 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1803 32 (uninterp_frac (* x821 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x821 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1829 1000000000000000000 (uninterp_frac (* x821 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x821 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x183 x856 (uninterp_frac (* x821 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x821 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x319 32 (uninterp_frac (* x821 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x821 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x36 x1083 (uninterp_frac (* x821 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x821 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x429 x1705 (uninterp_frac (* x821 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x821 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x466 32 (uninterp_frac (* x821 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x821 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x515 x1470 (uninterp_frac (* x821 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x821 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x52 x24 (uninterp_frac (* x821 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x821 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x530 x680 (uninterp_frac (* x821 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x821 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x622 32 (uninterp_frac (* x821 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x821 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x623 x1635 (uninterp_frac (* x821 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x821 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x680 x530 (uninterp_frac (* x821 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x821 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x749 x1285 (uninterp_frac (* x821 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x821 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x759 x99 (uninterp_frac (* x821 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x821 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x776 x1270 (uninterp_frac (* x821 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x821 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x821 32 (uninterp_frac (* x821 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x821 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x856 x183 (uninterp_frac (* x821 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x821 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x99 x759 (uninterp_frac (* x821 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (- (x1669 (+ (uninterp_mod (* 32 x478) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 32)) 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (- (x1669 (+ (uninterp_mod (* 32 x478) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 32)) 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x1540 (uninterp_frac (- (x1669 (+ (uninterp_mod (* 32 x478) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 32)) 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x1669 (+ (uninterp_mod (* 32 x478) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 32)) 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x289 (uninterp_frac (- (x1669 (+ (uninterp_mod (* 32 x478) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 32)) 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x1669 (+ (uninterp_mod (* 32 x478) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 32)) 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1108 (uninterp_frac (- (x1669 (+ (uninterp_mod (* 32 x478) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 32)) 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x1669 (+ (uninterp_mod (* 32 x478) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 32)) 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1179 (uninterp_frac (- (x1669 (+ (uninterp_mod (* 32 x478) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 32)) 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x1669 (+ (uninterp_mod (* 32 x478) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 32)) 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1396 (uninterp_frac (- (x1669 (+ (uninterp_mod (* 32 x478) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 32)) 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x1669 (+ (uninterp_mod (* 32 x478) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 32)) 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1621 (uninterp_frac (- (x1669 (+ (uninterp_mod (* 32 x478) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 32)) 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x1669 (+ (uninterp_mod (* 32 x478) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 32)) 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1803 (uninterp_frac (- (x1669 (+ (uninterp_mod (* 32 x478) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 32)) 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x1669 (+ (uninterp_mod (* 32 x478) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 32)) 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x319 (uninterp_frac (- (x1669 (+ (uninterp_mod (* 32 x478) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 32)) 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x1669 (+ (uninterp_mod (* 32 x478) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 32)) 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x478 (uninterp_frac (- (x1669 (+ (uninterp_mod (* 32 x478) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 32)) 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x1669 (+ (uninterp_mod (* 32 x478) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 32)) 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x98 (uninterp_frac (- (x1669 (+ (uninterp_mod (* 32 x478) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 32)) 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x1669 (+ (uninterp_mod (* 32 x478) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 32)) 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x117 x1231 (uninterp_frac (- (x1669 (+ (uninterp_mod (* 32 x478) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 32)) 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x1669 (+ (uninterp_mod (* 32 x478) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 32)) 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1231 x117 (uninterp_frac (- (x1669 (+ (uninterp_mod (* 32 x478) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 32)) 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x1669 (+ (uninterp_mod (* 32 x478) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 32)) 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1470 x515 (uninterp_frac (- (x1669 (+ (uninterp_mod (* 32 x478) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 32)) 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x1669 (+ (uninterp_mod (* 32 x478) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 32)) 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1487 1000000000000000000 (uninterp_frac (- (x1669 (+ (uninterp_mod (* 32 x478) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 32)) 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x1669 (+ (uninterp_mod (* 32 x478) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 32)) 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x154 32 (uninterp_frac (- (x1669 (+ (uninterp_mod (* 32 x478) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 32)) 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x1669 (+ (uninterp_mod (* 32 x478) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 32)) 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1549 x406 (uninterp_frac (- (x1669 (+ (uninterp_mod (* 32 x478) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 32)) 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x1669 (+ (uninterp_mod (* 32 x478) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 32)) 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1803 32 (uninterp_frac (- (x1669 (+ (uninterp_mod (* 32 x478) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 32)) 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x1669 (+ (uninterp_mod (* 32 x478) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 32)) 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1829 1000000000000000000 (uninterp_frac (- (x1669 (+ (uninterp_mod (* 32 x478) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 32)) 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x1669 (+ (uninterp_mod (* 32 x478) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 32)) 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x183 x856 (uninterp_frac (- (x1669 (+ (uninterp_mod (* 32 x478) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 32)) 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x1669 (+ (uninterp_mod (* 32 x478) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 32)) 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x319 32 (uninterp_frac (- (x1669 (+ (uninterp_mod (* 32 x478) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 32)) 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x1669 (+ (uninterp_mod (* 32 x478) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 32)) 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x36 x1083 (uninterp_frac (- (x1669 (+ (uninterp_mod (* 32 x478) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 32)) 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x1669 (+ (uninterp_mod (* 32 x478) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 32)) 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x429 x1705 (uninterp_frac (- (x1669 (+ (uninterp_mod (* 32 x478) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 32)) 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x1669 (+ (uninterp_mod (* 32 x478) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 32)) 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x466 32 (uninterp_frac (- (x1669 (+ (uninterp_mod (* 32 x478) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 32)) 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x1669 (+ (uninterp_mod (* 32 x478) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 32)) 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x515 x1470 (uninterp_frac (- (x1669 (+ (uninterp_mod (* 32 x478) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 32)) 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x1669 (+ (uninterp_mod (* 32 x478) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 32)) 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x52 x24 (uninterp_frac (- (x1669 (+ (uninterp_mod (* 32 x478) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 32)) 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x1669 (+ (uninterp_mod (* 32 x478) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 32)) 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x530 x680 (uninterp_frac (- (x1669 (+ (uninterp_mod (* 32 x478) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 32)) 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x1669 (+ (uninterp_mod (* 32 x478) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 32)) 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x622 32 (uninterp_frac (- (x1669 (+ (uninterp_mod (* 32 x478) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 32)) 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x1669 (+ (uninterp_mod (* 32 x478) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 32)) 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x623 x1635 (uninterp_frac (- (x1669 (+ (uninterp_mod (* 32 x478) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 32)) 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x1669 (+ (uninterp_mod (* 32 x478) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 32)) 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x680 x530 (uninterp_frac (- (x1669 (+ (uninterp_mod (* 32 x478) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 32)) 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x1669 (+ (uninterp_mod (* 32 x478) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 32)) 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x749 x1285 (uninterp_frac (- (x1669 (+ (uninterp_mod (* 32 x478) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 32)) 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x1669 (+ (uninterp_mod (* 32 x478) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 32)) 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x759 x99 (uninterp_frac (- (x1669 (+ (uninterp_mod (* 32 x478) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 32)) 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x1669 (+ (uninterp_mod (* 32 x478) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 32)) 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x776 x1270 (uninterp_frac (- (x1669 (+ (uninterp_mod (* 32 x478) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 32)) 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x1669 (+ (uninterp_mod (* 32 x478) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 32)) 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x821 32 (uninterp_frac (- (x1669 (+ (uninterp_mod (* 32 x478) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 32)) 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x1669 (+ (uninterp_mod (* 32 x478) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 32)) 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x856 x183 (uninterp_frac (- (x1669 (+ (uninterp_mod (* 32 x478) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 32)) 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x1669 (+ (uninterp_mod (* 32 x478) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 32)) 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x99 x759 (uninterp_frac (- (x1669 (+ (uninterp_mod (* 32 x478) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 32)) 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (- (x1669 (+ (uninterp_mod (* x1803 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 32)) 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (- (x1669 (+ (uninterp_mod (* x1803 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 32)) 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x1540 (uninterp_frac (- (x1669 (+ (uninterp_mod (* x1803 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 32)) 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x1669 (+ (uninterp_mod (* x1803 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 32)) 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x289 (uninterp_frac (- (x1669 (+ (uninterp_mod (* x1803 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 32)) 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x1669 (+ (uninterp_mod (* x1803 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 32)) 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1108 (uninterp_frac (- (x1669 (+ (uninterp_mod (* x1803 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 32)) 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x1669 (+ (uninterp_mod (* x1803 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 32)) 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1179 (uninterp_frac (- (x1669 (+ (uninterp_mod (* x1803 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 32)) 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x1669 (+ (uninterp_mod (* x1803 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 32)) 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1396 (uninterp_frac (- (x1669 (+ (uninterp_mod (* x1803 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 32)) 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x1669 (+ (uninterp_mod (* x1803 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 32)) 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1621 (uninterp_frac (- (x1669 (+ (uninterp_mod (* x1803 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 32)) 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x1669 (+ (uninterp_mod (* x1803 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 32)) 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1803 (uninterp_frac (- (x1669 (+ (uninterp_mod (* x1803 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 32)) 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x1669 (+ (uninterp_mod (* x1803 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 32)) 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x319 (uninterp_frac (- (x1669 (+ (uninterp_mod (* x1803 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 32)) 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x1669 (+ (uninterp_mod (* x1803 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 32)) 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x478 (uninterp_frac (- (x1669 (+ (uninterp_mod (* x1803 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 32)) 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x1669 (+ (uninterp_mod (* x1803 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 32)) 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x98 (uninterp_frac (- (x1669 (+ (uninterp_mod (* x1803 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 32)) 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x1669 (+ (uninterp_mod (* x1803 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 32)) 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x117 x1231 (uninterp_frac (- (x1669 (+ (uninterp_mod (* x1803 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 32)) 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x1669 (+ (uninterp_mod (* x1803 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 32)) 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1231 x117 (uninterp_frac (- (x1669 (+ (uninterp_mod (* x1803 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 32)) 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x1669 (+ (uninterp_mod (* x1803 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 32)) 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1470 x515 (uninterp_frac (- (x1669 (+ (uninterp_mod (* x1803 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 32)) 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x1669 (+ (uninterp_mod (* x1803 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 32)) 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1487 1000000000000000000 (uninterp_frac (- (x1669 (+ (uninterp_mod (* x1803 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 32)) 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x1669 (+ (uninterp_mod (* x1803 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 32)) 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x154 32 (uninterp_frac (- (x1669 (+ (uninterp_mod (* x1803 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 32)) 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x1669 (+ (uninterp_mod (* x1803 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 32)) 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1549 x406 (uninterp_frac (- (x1669 (+ (uninterp_mod (* x1803 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 32)) 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x1669 (+ (uninterp_mod (* x1803 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 32)) 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1803 32 (uninterp_frac (- (x1669 (+ (uninterp_mod (* x1803 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 32)) 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x1669 (+ (uninterp_mod (* x1803 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 32)) 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1829 1000000000000000000 (uninterp_frac (- (x1669 (+ (uninterp_mod (* x1803 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 32)) 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x1669 (+ (uninterp_mod (* x1803 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 32)) 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x183 x856 (uninterp_frac (- (x1669 (+ (uninterp_mod (* x1803 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 32)) 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x1669 (+ (uninterp_mod (* x1803 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 32)) 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x319 32 (uninterp_frac (- (x1669 (+ (uninterp_mod (* x1803 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 32)) 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x1669 (+ (uninterp_mod (* x1803 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 32)) 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x36 x1083 (uninterp_frac (- (x1669 (+ (uninterp_mod (* x1803 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 32)) 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x1669 (+ (uninterp_mod (* x1803 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 32)) 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x429 x1705 (uninterp_frac (- (x1669 (+ (uninterp_mod (* x1803 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 32)) 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x1669 (+ (uninterp_mod (* x1803 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 32)) 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x466 32 (uninterp_frac (- (x1669 (+ (uninterp_mod (* x1803 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 32)) 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x1669 (+ (uninterp_mod (* x1803 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 32)) 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x515 x1470 (uninterp_frac (- (x1669 (+ (uninterp_mod (* x1803 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 32)) 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x1669 (+ (uninterp_mod (* x1803 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 32)) 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x52 x24 (uninterp_frac (- (x1669 (+ (uninterp_mod (* x1803 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 32)) 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x1669 (+ (uninterp_mod (* x1803 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 32)) 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x530 x680 (uninterp_frac (- (x1669 (+ (uninterp_mod (* x1803 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 32)) 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x1669 (+ (uninterp_mod (* x1803 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 32)) 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x622 32 (uninterp_frac (- (x1669 (+ (uninterp_mod (* x1803 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 32)) 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x1669 (+ (uninterp_mod (* x1803 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 32)) 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x623 x1635 (uninterp_frac (- (x1669 (+ (uninterp_mod (* x1803 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 32)) 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x1669 (+ (uninterp_mod (* x1803 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 32)) 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x680 x530 (uninterp_frac (- (x1669 (+ (uninterp_mod (* x1803 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 32)) 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x1669 (+ (uninterp_mod (* x1803 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 32)) 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x749 x1285 (uninterp_frac (- (x1669 (+ (uninterp_mod (* x1803 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 32)) 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x1669 (+ (uninterp_mod (* x1803 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 32)) 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x759 x99 (uninterp_frac (- (x1669 (+ (uninterp_mod (* x1803 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 32)) 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x1669 (+ (uninterp_mod (* x1803 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 32)) 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x776 x1270 (uninterp_frac (- (x1669 (+ (uninterp_mod (* x1803 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 32)) 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x1669 (+ (uninterp_mod (* x1803 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 32)) 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x821 32 (uninterp_frac (- (x1669 (+ (uninterp_mod (* x1803 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 32)) 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x1669 (+ (uninterp_mod (* x1803 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 32)) 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x856 x183 (uninterp_frac (- (x1669 (+ (uninterp_mod (* x1803 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 32)) 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x1669 (+ (uninterp_mod (* x1803 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 32)) 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x99 x759 (uninterp_frac (- (x1669 (+ (uninterp_mod (* x1803 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 32)) 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (- (x1669 (+ 32 (uninterp_mod (* 32 x319) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (- (x1669 (+ 32 (uninterp_mod (* 32 x319) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x1540 (uninterp_frac (- (x1669 (+ 32 (uninterp_mod (* 32 x319) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x1669 (+ 32 (uninterp_mod (* 32 x319) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x289 (uninterp_frac (- (x1669 (+ 32 (uninterp_mod (* 32 x319) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x1669 (+ 32 (uninterp_mod (* 32 x319) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1108 (uninterp_frac (- (x1669 (+ 32 (uninterp_mod (* 32 x319) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x1669 (+ 32 (uninterp_mod (* 32 x319) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1179 (uninterp_frac (- (x1669 (+ 32 (uninterp_mod (* 32 x319) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x1669 (+ 32 (uninterp_mod (* 32 x319) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1396 (uninterp_frac (- (x1669 (+ 32 (uninterp_mod (* 32 x319) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x1669 (+ 32 (uninterp_mod (* 32 x319) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1621 (uninterp_frac (- (x1669 (+ 32 (uninterp_mod (* 32 x319) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x1669 (+ 32 (uninterp_mod (* 32 x319) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1803 (uninterp_frac (- (x1669 (+ 32 (uninterp_mod (* 32 x319) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x1669 (+ 32 (uninterp_mod (* 32 x319) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x319 (uninterp_frac (- (x1669 (+ 32 (uninterp_mod (* 32 x319) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x1669 (+ 32 (uninterp_mod (* 32 x319) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x478 (uninterp_frac (- (x1669 (+ 32 (uninterp_mod (* 32 x319) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x1669 (+ 32 (uninterp_mod (* 32 x319) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x98 (uninterp_frac (- (x1669 (+ 32 (uninterp_mod (* 32 x319) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x1669 (+ 32 (uninterp_mod (* 32 x319) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x117 x1231 (uninterp_frac (- (x1669 (+ 32 (uninterp_mod (* 32 x319) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x1669 (+ 32 (uninterp_mod (* 32 x319) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1231 x117 (uninterp_frac (- (x1669 (+ 32 (uninterp_mod (* 32 x319) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x1669 (+ 32 (uninterp_mod (* 32 x319) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1470 x515 (uninterp_frac (- (x1669 (+ 32 (uninterp_mod (* 32 x319) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x1669 (+ 32 (uninterp_mod (* 32 x319) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1487 1000000000000000000 (uninterp_frac (- (x1669 (+ 32 (uninterp_mod (* 32 x319) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x1669 (+ 32 (uninterp_mod (* 32 x319) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x154 32 (uninterp_frac (- (x1669 (+ 32 (uninterp_mod (* 32 x319) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x1669 (+ 32 (uninterp_mod (* 32 x319) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1549 x406 (uninterp_frac (- (x1669 (+ 32 (uninterp_mod (* 32 x319) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x1669 (+ 32 (uninterp_mod (* 32 x319) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1803 32 (uninterp_frac (- (x1669 (+ 32 (uninterp_mod (* 32 x319) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x1669 (+ 32 (uninterp_mod (* 32 x319) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1829 1000000000000000000 (uninterp_frac (- (x1669 (+ 32 (uninterp_mod (* 32 x319) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x1669 (+ 32 (uninterp_mod (* 32 x319) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x183 x856 (uninterp_frac (- (x1669 (+ 32 (uninterp_mod (* 32 x319) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x1669 (+ 32 (uninterp_mod (* 32 x319) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x319 32 (uninterp_frac (- (x1669 (+ 32 (uninterp_mod (* 32 x319) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x1669 (+ 32 (uninterp_mod (* 32 x319) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x36 x1083 (uninterp_frac (- (x1669 (+ 32 (uninterp_mod (* 32 x319) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x1669 (+ 32 (uninterp_mod (* 32 x319) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x429 x1705 (uninterp_frac (- (x1669 (+ 32 (uninterp_mod (* 32 x319) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x1669 (+ 32 (uninterp_mod (* 32 x319) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x466 32 (uninterp_frac (- (x1669 (+ 32 (uninterp_mod (* 32 x319) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x1669 (+ 32 (uninterp_mod (* 32 x319) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x515 x1470 (uninterp_frac (- (x1669 (+ 32 (uninterp_mod (* 32 x319) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x1669 (+ 32 (uninterp_mod (* 32 x319) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x52 x24 (uninterp_frac (- (x1669 (+ 32 (uninterp_mod (* 32 x319) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x1669 (+ 32 (uninterp_mod (* 32 x319) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x530 x680 (uninterp_frac (- (x1669 (+ 32 (uninterp_mod (* 32 x319) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x1669 (+ 32 (uninterp_mod (* 32 x319) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x622 32 (uninterp_frac (- (x1669 (+ 32 (uninterp_mod (* 32 x319) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x1669 (+ 32 (uninterp_mod (* 32 x319) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x623 x1635 (uninterp_frac (- (x1669 (+ 32 (uninterp_mod (* 32 x319) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x1669 (+ 32 (uninterp_mod (* 32 x319) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x680 x530 (uninterp_frac (- (x1669 (+ 32 (uninterp_mod (* 32 x319) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x1669 (+ 32 (uninterp_mod (* 32 x319) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x749 x1285 (uninterp_frac (- (x1669 (+ 32 (uninterp_mod (* 32 x319) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x1669 (+ 32 (uninterp_mod (* 32 x319) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x759 x99 (uninterp_frac (- (x1669 (+ 32 (uninterp_mod (* 32 x319) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x1669 (+ 32 (uninterp_mod (* 32 x319) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x776 x1270 (uninterp_frac (- (x1669 (+ 32 (uninterp_mod (* 32 x319) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x1669 (+ 32 (uninterp_mod (* 32 x319) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x821 32 (uninterp_frac (- (x1669 (+ 32 (uninterp_mod (* 32 x319) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x1669 (+ 32 (uninterp_mod (* 32 x319) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x856 x183 (uninterp_frac (- (x1669 (+ 32 (uninterp_mod (* 32 x319) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x1669 (+ 32 (uninterp_mod (* 32 x319) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x99 x759 (uninterp_frac (- (x1669 (+ 32 (uninterp_mod (* 32 x319) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (- (x1669 (+ 32 (uninterp_mod (* x154 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (- (x1669 (+ 32 (uninterp_mod (* x154 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x1540 (uninterp_frac (- (x1669 (+ 32 (uninterp_mod (* x154 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x1669 (+ 32 (uninterp_mod (* x154 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x289 (uninterp_frac (- (x1669 (+ 32 (uninterp_mod (* x154 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x1669 (+ 32 (uninterp_mod (* x154 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1108 (uninterp_frac (- (x1669 (+ 32 (uninterp_mod (* x154 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x1669 (+ 32 (uninterp_mod (* x154 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1179 (uninterp_frac (- (x1669 (+ 32 (uninterp_mod (* x154 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x1669 (+ 32 (uninterp_mod (* x154 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1396 (uninterp_frac (- (x1669 (+ 32 (uninterp_mod (* x154 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x1669 (+ 32 (uninterp_mod (* x154 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1621 (uninterp_frac (- (x1669 (+ 32 (uninterp_mod (* x154 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x1669 (+ 32 (uninterp_mod (* x154 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1803 (uninterp_frac (- (x1669 (+ 32 (uninterp_mod (* x154 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x1669 (+ 32 (uninterp_mod (* x154 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x319 (uninterp_frac (- (x1669 (+ 32 (uninterp_mod (* x154 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x1669 (+ 32 (uninterp_mod (* x154 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x478 (uninterp_frac (- (x1669 (+ 32 (uninterp_mod (* x154 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x1669 (+ 32 (uninterp_mod (* x154 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x98 (uninterp_frac (- (x1669 (+ 32 (uninterp_mod (* x154 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x1669 (+ 32 (uninterp_mod (* x154 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x117 x1231 (uninterp_frac (- (x1669 (+ 32 (uninterp_mod (* x154 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x1669 (+ 32 (uninterp_mod (* x154 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1231 x117 (uninterp_frac (- (x1669 (+ 32 (uninterp_mod (* x154 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x1669 (+ 32 (uninterp_mod (* x154 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1470 x515 (uninterp_frac (- (x1669 (+ 32 (uninterp_mod (* x154 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x1669 (+ 32 (uninterp_mod (* x154 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1487 1000000000000000000 (uninterp_frac (- (x1669 (+ 32 (uninterp_mod (* x154 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x1669 (+ 32 (uninterp_mod (* x154 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x154 32 (uninterp_frac (- (x1669 (+ 32 (uninterp_mod (* x154 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x1669 (+ 32 (uninterp_mod (* x154 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1549 x406 (uninterp_frac (- (x1669 (+ 32 (uninterp_mod (* x154 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x1669 (+ 32 (uninterp_mod (* x154 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1803 32 (uninterp_frac (- (x1669 (+ 32 (uninterp_mod (* x154 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x1669 (+ 32 (uninterp_mod (* x154 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1829 1000000000000000000 (uninterp_frac (- (x1669 (+ 32 (uninterp_mod (* x154 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x1669 (+ 32 (uninterp_mod (* x154 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x183 x856 (uninterp_frac (- (x1669 (+ 32 (uninterp_mod (* x154 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x1669 (+ 32 (uninterp_mod (* x154 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x319 32 (uninterp_frac (- (x1669 (+ 32 (uninterp_mod (* x154 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x1669 (+ 32 (uninterp_mod (* x154 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x36 x1083 (uninterp_frac (- (x1669 (+ 32 (uninterp_mod (* x154 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x1669 (+ 32 (uninterp_mod (* x154 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x429 x1705 (uninterp_frac (- (x1669 (+ 32 (uninterp_mod (* x154 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x1669 (+ 32 (uninterp_mod (* x154 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x466 32 (uninterp_frac (- (x1669 (+ 32 (uninterp_mod (* x154 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x1669 (+ 32 (uninterp_mod (* x154 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x515 x1470 (uninterp_frac (- (x1669 (+ 32 (uninterp_mod (* x154 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x1669 (+ 32 (uninterp_mod (* x154 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x52 x24 (uninterp_frac (- (x1669 (+ 32 (uninterp_mod (* x154 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x1669 (+ 32 (uninterp_mod (* x154 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x530 x680 (uninterp_frac (- (x1669 (+ 32 (uninterp_mod (* x154 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x1669 (+ 32 (uninterp_mod (* x154 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x622 32 (uninterp_frac (- (x1669 (+ 32 (uninterp_mod (* x154 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x1669 (+ 32 (uninterp_mod (* x154 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x623 x1635 (uninterp_frac (- (x1669 (+ 32 (uninterp_mod (* x154 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x1669 (+ 32 (uninterp_mod (* x154 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x680 x530 (uninterp_frac (- (x1669 (+ 32 (uninterp_mod (* x154 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x1669 (+ 32 (uninterp_mod (* x154 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x749 x1285 (uninterp_frac (- (x1669 (+ 32 (uninterp_mod (* x154 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x1669 (+ 32 (uninterp_mod (* x154 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x759 x99 (uninterp_frac (- (x1669 (+ 32 (uninterp_mod (* x154 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x1669 (+ 32 (uninterp_mod (* x154 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x776 x1270 (uninterp_frac (- (x1669 (+ 32 (uninterp_mod (* x154 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x1669 (+ 32 (uninterp_mod (* x154 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x821 32 (uninterp_frac (- (x1669 (+ 32 (uninterp_mod (* x154 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x1669 (+ 32 (uninterp_mod (* x154 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x856 x183 (uninterp_frac (- (x1669 (+ 32 (uninterp_mod (* x154 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x1669 (+ 32 (uninterp_mod (* x154 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x99 x759 (uninterp_frac (- (x1669 (+ 32 (uninterp_mod (* x154 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound x1009 x1337))
(assert (axiom_frac_zero x1009 x1337 1000000000000000000 x1540 (uninterp_frac x1009 x1337)))
(assert (axiom_frac_zero x1009 x1337 1000000000000000000 x289 (uninterp_frac x1009 x1337)))
(assert (axiom_frac_zero x1009 x1337 32 x1108 (uninterp_frac x1009 x1337)))
(assert (axiom_frac_zero x1009 x1337 32 x1179 (uninterp_frac x1009 x1337)))
(assert (axiom_frac_zero x1009 x1337 32 x1396 (uninterp_frac x1009 x1337)))
(assert (axiom_frac_zero x1009 x1337 32 x1621 (uninterp_frac x1009 x1337)))
(assert (axiom_frac_zero x1009 x1337 32 x1803 (uninterp_frac x1009 x1337)))
(assert (axiom_frac_zero x1009 x1337 32 x319 (uninterp_frac x1009 x1337)))
(assert (axiom_frac_zero x1009 x1337 32 x478 (uninterp_frac x1009 x1337)))
(assert (axiom_frac_zero x1009 x1337 32 x98 (uninterp_frac x1009 x1337)))
(assert (axiom_frac_zero x1009 x1337 x117 x1231 (uninterp_frac x1009 x1337)))
(assert (axiom_frac_zero x1009 x1337 x1231 x117 (uninterp_frac x1009 x1337)))
(assert (axiom_frac_zero x1009 x1337 x1470 x515 (uninterp_frac x1009 x1337)))
(assert (axiom_frac_zero x1009 x1337 x1487 1000000000000000000 (uninterp_frac x1009 x1337)))
(assert (axiom_frac_zero x1009 x1337 x154 32 (uninterp_frac x1009 x1337)))
(assert (axiom_frac_zero x1009 x1337 x1549 x406 (uninterp_frac x1009 x1337)))
(assert (axiom_frac_zero x1009 x1337 x1803 32 (uninterp_frac x1009 x1337)))
(assert (axiom_frac_zero x1009 x1337 x1829 1000000000000000000 (uninterp_frac x1009 x1337)))
(assert (axiom_frac_zero x1009 x1337 x183 x856 (uninterp_frac x1009 x1337)))
(assert (axiom_frac_zero x1009 x1337 x319 32 (uninterp_frac x1009 x1337)))
(assert (axiom_frac_zero x1009 x1337 x36 x1083 (uninterp_frac x1009 x1337)))
(assert (axiom_frac_zero x1009 x1337 x429 x1705 (uninterp_frac x1009 x1337)))
(assert (axiom_frac_zero x1009 x1337 x466 32 (uninterp_frac x1009 x1337)))
(assert (axiom_frac_zero x1009 x1337 x515 x1470 (uninterp_frac x1009 x1337)))
(assert (axiom_frac_zero x1009 x1337 x52 x24 (uninterp_frac x1009 x1337)))
(assert (axiom_frac_zero x1009 x1337 x530 x680 (uninterp_frac x1009 x1337)))
(assert (axiom_frac_zero x1009 x1337 x622 32 (uninterp_frac x1009 x1337)))
(assert (axiom_frac_zero x1009 x1337 x623 x1635 (uninterp_frac x1009 x1337)))
(assert (axiom_frac_zero x1009 x1337 x680 x530 (uninterp_frac x1009 x1337)))
(assert (axiom_frac_zero x1009 x1337 x749 x1285 (uninterp_frac x1009 x1337)))
(assert (axiom_frac_zero x1009 x1337 x759 x99 (uninterp_frac x1009 x1337)))
(assert (axiom_frac_zero x1009 x1337 x776 x1270 (uninterp_frac x1009 x1337)))
(assert (axiom_frac_zero x1009 x1337 x821 32 (uninterp_frac x1009 x1337)))
(assert (axiom_frac_zero x1009 x1337 x856 x183 (uninterp_frac x1009 x1337)))
(assert (axiom_frac_zero x1009 x1337 x99 x759 (uninterp_frac x1009 x1337)))
(assert (axiom_frac_bound x1027 1000000000000000000))
(assert (axiom_frac_zero x1027 1000000000000000000 1000000000000000000 x1540 (uninterp_frac x1027 1000000000000000000)))
(assert (axiom_frac_zero x1027 1000000000000000000 1000000000000000000 x289 (uninterp_frac x1027 1000000000000000000)))
(assert (axiom_frac_zero x1027 1000000000000000000 32 x1108 (uninterp_frac x1027 1000000000000000000)))
(assert (axiom_frac_zero x1027 1000000000000000000 32 x1179 (uninterp_frac x1027 1000000000000000000)))
(assert (axiom_frac_zero x1027 1000000000000000000 32 x1396 (uninterp_frac x1027 1000000000000000000)))
(assert (axiom_frac_zero x1027 1000000000000000000 32 x1621 (uninterp_frac x1027 1000000000000000000)))
(assert (axiom_frac_zero x1027 1000000000000000000 32 x1803 (uninterp_frac x1027 1000000000000000000)))
(assert (axiom_frac_zero x1027 1000000000000000000 32 x319 (uninterp_frac x1027 1000000000000000000)))
(assert (axiom_frac_zero x1027 1000000000000000000 32 x478 (uninterp_frac x1027 1000000000000000000)))
(assert (axiom_frac_zero x1027 1000000000000000000 32 x98 (uninterp_frac x1027 1000000000000000000)))
(assert (axiom_frac_zero x1027 1000000000000000000 x117 x1231 (uninterp_frac x1027 1000000000000000000)))
(assert (axiom_frac_zero x1027 1000000000000000000 x1231 x117 (uninterp_frac x1027 1000000000000000000)))
(assert (axiom_frac_zero x1027 1000000000000000000 x1470 x515 (uninterp_frac x1027 1000000000000000000)))
(assert (axiom_frac_zero x1027 1000000000000000000 x1487 1000000000000000000 (uninterp_frac x1027 1000000000000000000)))
(assert (axiom_frac_zero x1027 1000000000000000000 x154 32 (uninterp_frac x1027 1000000000000000000)))
(assert (axiom_frac_zero x1027 1000000000000000000 x1549 x406 (uninterp_frac x1027 1000000000000000000)))
(assert (axiom_frac_zero x1027 1000000000000000000 x1803 32 (uninterp_frac x1027 1000000000000000000)))
(assert (axiom_frac_zero x1027 1000000000000000000 x1829 1000000000000000000 (uninterp_frac x1027 1000000000000000000)))
(assert (axiom_frac_zero x1027 1000000000000000000 x183 x856 (uninterp_frac x1027 1000000000000000000)))
(assert (axiom_frac_zero x1027 1000000000000000000 x319 32 (uninterp_frac x1027 1000000000000000000)))
(assert (axiom_frac_zero x1027 1000000000000000000 x36 x1083 (uninterp_frac x1027 1000000000000000000)))
(assert (axiom_frac_zero x1027 1000000000000000000 x429 x1705 (uninterp_frac x1027 1000000000000000000)))
(assert (axiom_frac_zero x1027 1000000000000000000 x466 32 (uninterp_frac x1027 1000000000000000000)))
(assert (axiom_frac_zero x1027 1000000000000000000 x515 x1470 (uninterp_frac x1027 1000000000000000000)))
(assert (axiom_frac_zero x1027 1000000000000000000 x52 x24 (uninterp_frac x1027 1000000000000000000)))
(assert (axiom_frac_zero x1027 1000000000000000000 x530 x680 (uninterp_frac x1027 1000000000000000000)))
(assert (axiom_frac_zero x1027 1000000000000000000 x622 32 (uninterp_frac x1027 1000000000000000000)))
(assert (axiom_frac_zero x1027 1000000000000000000 x623 x1635 (uninterp_frac x1027 1000000000000000000)))
(assert (axiom_frac_zero x1027 1000000000000000000 x680 x530 (uninterp_frac x1027 1000000000000000000)))
(assert (axiom_frac_zero x1027 1000000000000000000 x749 x1285 (uninterp_frac x1027 1000000000000000000)))
(assert (axiom_frac_zero x1027 1000000000000000000 x759 x99 (uninterp_frac x1027 1000000000000000000)))
(assert (axiom_frac_zero x1027 1000000000000000000 x776 x1270 (uninterp_frac x1027 1000000000000000000)))
(assert (axiom_frac_zero x1027 1000000000000000000 x821 32 (uninterp_frac x1027 1000000000000000000)))
(assert (axiom_frac_zero x1027 1000000000000000000 x856 x183 (uninterp_frac x1027 1000000000000000000)))
(assert (axiom_frac_zero x1027 1000000000000000000 x99 x759 (uninterp_frac x1027 1000000000000000000)))
(assert (axiom_frac_bound x1217 x1240))
(assert (axiom_frac_zero x1217 x1240 1000000000000000000 x1540 (uninterp_frac x1217 x1240)))
(assert (axiom_frac_zero x1217 x1240 1000000000000000000 x289 (uninterp_frac x1217 x1240)))
(assert (axiom_frac_zero x1217 x1240 32 x1108 (uninterp_frac x1217 x1240)))
(assert (axiom_frac_zero x1217 x1240 32 x1179 (uninterp_frac x1217 x1240)))
(assert (axiom_frac_zero x1217 x1240 32 x1396 (uninterp_frac x1217 x1240)))
(assert (axiom_frac_zero x1217 x1240 32 x1621 (uninterp_frac x1217 x1240)))
(assert (axiom_frac_zero x1217 x1240 32 x1803 (uninterp_frac x1217 x1240)))
(assert (axiom_frac_zero x1217 x1240 32 x319 (uninterp_frac x1217 x1240)))
(assert (axiom_frac_zero x1217 x1240 32 x478 (uninterp_frac x1217 x1240)))
(assert (axiom_frac_zero x1217 x1240 32 x98 (uninterp_frac x1217 x1240)))
(assert (axiom_frac_zero x1217 x1240 x117 x1231 (uninterp_frac x1217 x1240)))
(assert (axiom_frac_zero x1217 x1240 x1231 x117 (uninterp_frac x1217 x1240)))
(assert (axiom_frac_zero x1217 x1240 x1470 x515 (uninterp_frac x1217 x1240)))
(assert (axiom_frac_zero x1217 x1240 x1487 1000000000000000000 (uninterp_frac x1217 x1240)))
(assert (axiom_frac_zero x1217 x1240 x154 32 (uninterp_frac x1217 x1240)))
(assert (axiom_frac_zero x1217 x1240 x1549 x406 (uninterp_frac x1217 x1240)))
(assert (axiom_frac_zero x1217 x1240 x1803 32 (uninterp_frac x1217 x1240)))
(assert (axiom_frac_zero x1217 x1240 x1829 1000000000000000000 (uninterp_frac x1217 x1240)))
(assert (axiom_frac_zero x1217 x1240 x183 x856 (uninterp_frac x1217 x1240)))
(assert (axiom_frac_zero x1217 x1240 x319 32 (uninterp_frac x1217 x1240)))
(assert (axiom_frac_zero x1217 x1240 x36 x1083 (uninterp_frac x1217 x1240)))
(assert (axiom_frac_zero x1217 x1240 x429 x1705 (uninterp_frac x1217 x1240)))
(assert (axiom_frac_zero x1217 x1240 x466 32 (uninterp_frac x1217 x1240)))
(assert (axiom_frac_zero x1217 x1240 x515 x1470 (uninterp_frac x1217 x1240)))
(assert (axiom_frac_zero x1217 x1240 x52 x24 (uninterp_frac x1217 x1240)))
(assert (axiom_frac_zero x1217 x1240 x530 x680 (uninterp_frac x1217 x1240)))
(assert (axiom_frac_zero x1217 x1240 x622 32 (uninterp_frac x1217 x1240)))
(assert (axiom_frac_zero x1217 x1240 x623 x1635 (uninterp_frac x1217 x1240)))
(assert (axiom_frac_zero x1217 x1240 x680 x530 (uninterp_frac x1217 x1240)))
(assert (axiom_frac_zero x1217 x1240 x749 x1285 (uninterp_frac x1217 x1240)))
(assert (axiom_frac_zero x1217 x1240 x759 x99 (uninterp_frac x1217 x1240)))
(assert (axiom_frac_zero x1217 x1240 x776 x1270 (uninterp_frac x1217 x1240)))
(assert (axiom_frac_zero x1217 x1240 x821 32 (uninterp_frac x1217 x1240)))
(assert (axiom_frac_zero x1217 x1240 x856 x183 (uninterp_frac x1217 x1240)))
(assert (axiom_frac_zero x1217 x1240 x99 x759 (uninterp_frac x1217 x1240)))
(assert (axiom_frac_bound x1324 1000000000000000000))
(assert (axiom_frac_zero x1324 1000000000000000000 1000000000000000000 x1540 (uninterp_frac x1324 1000000000000000000)))
(assert (axiom_frac_zero x1324 1000000000000000000 1000000000000000000 x289 (uninterp_frac x1324 1000000000000000000)))
(assert (axiom_frac_zero x1324 1000000000000000000 32 x1108 (uninterp_frac x1324 1000000000000000000)))
(assert (axiom_frac_zero x1324 1000000000000000000 32 x1179 (uninterp_frac x1324 1000000000000000000)))
(assert (axiom_frac_zero x1324 1000000000000000000 32 x1396 (uninterp_frac x1324 1000000000000000000)))
(assert (axiom_frac_zero x1324 1000000000000000000 32 x1621 (uninterp_frac x1324 1000000000000000000)))
(assert (axiom_frac_zero x1324 1000000000000000000 32 x1803 (uninterp_frac x1324 1000000000000000000)))
(assert (axiom_frac_zero x1324 1000000000000000000 32 x319 (uninterp_frac x1324 1000000000000000000)))
(assert (axiom_frac_zero x1324 1000000000000000000 32 x478 (uninterp_frac x1324 1000000000000000000)))
(assert (axiom_frac_zero x1324 1000000000000000000 32 x98 (uninterp_frac x1324 1000000000000000000)))
(assert (axiom_frac_zero x1324 1000000000000000000 x117 x1231 (uninterp_frac x1324 1000000000000000000)))
(assert (axiom_frac_zero x1324 1000000000000000000 x1231 x117 (uninterp_frac x1324 1000000000000000000)))
(assert (axiom_frac_zero x1324 1000000000000000000 x1470 x515 (uninterp_frac x1324 1000000000000000000)))
(assert (axiom_frac_zero x1324 1000000000000000000 x1487 1000000000000000000 (uninterp_frac x1324 1000000000000000000)))
(assert (axiom_frac_zero x1324 1000000000000000000 x154 32 (uninterp_frac x1324 1000000000000000000)))
(assert (axiom_frac_zero x1324 1000000000000000000 x1549 x406 (uninterp_frac x1324 1000000000000000000)))
(assert (axiom_frac_zero x1324 1000000000000000000 x1803 32 (uninterp_frac x1324 1000000000000000000)))
(assert (axiom_frac_zero x1324 1000000000000000000 x1829 1000000000000000000 (uninterp_frac x1324 1000000000000000000)))
(assert (axiom_frac_zero x1324 1000000000000000000 x183 x856 (uninterp_frac x1324 1000000000000000000)))
(assert (axiom_frac_zero x1324 1000000000000000000 x319 32 (uninterp_frac x1324 1000000000000000000)))
(assert (axiom_frac_zero x1324 1000000000000000000 x36 x1083 (uninterp_frac x1324 1000000000000000000)))
(assert (axiom_frac_zero x1324 1000000000000000000 x429 x1705 (uninterp_frac x1324 1000000000000000000)))
(assert (axiom_frac_zero x1324 1000000000000000000 x466 32 (uninterp_frac x1324 1000000000000000000)))
(assert (axiom_frac_zero x1324 1000000000000000000 x515 x1470 (uninterp_frac x1324 1000000000000000000)))
(assert (axiom_frac_zero x1324 1000000000000000000 x52 x24 (uninterp_frac x1324 1000000000000000000)))
(assert (axiom_frac_zero x1324 1000000000000000000 x530 x680 (uninterp_frac x1324 1000000000000000000)))
(assert (axiom_frac_zero x1324 1000000000000000000 x622 32 (uninterp_frac x1324 1000000000000000000)))
(assert (axiom_frac_zero x1324 1000000000000000000 x623 x1635 (uninterp_frac x1324 1000000000000000000)))
(assert (axiom_frac_zero x1324 1000000000000000000 x680 x530 (uninterp_frac x1324 1000000000000000000)))
(assert (axiom_frac_zero x1324 1000000000000000000 x749 x1285 (uninterp_frac x1324 1000000000000000000)))
(assert (axiom_frac_zero x1324 1000000000000000000 x759 x99 (uninterp_frac x1324 1000000000000000000)))
(assert (axiom_frac_zero x1324 1000000000000000000 x776 x1270 (uninterp_frac x1324 1000000000000000000)))
(assert (axiom_frac_zero x1324 1000000000000000000 x821 32 (uninterp_frac x1324 1000000000000000000)))
(assert (axiom_frac_zero x1324 1000000000000000000 x856 x183 (uninterp_frac x1324 1000000000000000000)))
(assert (axiom_frac_zero x1324 1000000000000000000 x99 x759 (uninterp_frac x1324 1000000000000000000)))
(assert (axiom_frac_bound x1624 x1840))
(assert (axiom_frac_zero x1624 x1840 1000000000000000000 x1540 (uninterp_frac x1624 x1840)))
(assert (axiom_frac_zero x1624 x1840 1000000000000000000 x289 (uninterp_frac x1624 x1840)))
(assert (axiom_frac_zero x1624 x1840 32 x1108 (uninterp_frac x1624 x1840)))
(assert (axiom_frac_zero x1624 x1840 32 x1179 (uninterp_frac x1624 x1840)))
(assert (axiom_frac_zero x1624 x1840 32 x1396 (uninterp_frac x1624 x1840)))
(assert (axiom_frac_zero x1624 x1840 32 x1621 (uninterp_frac x1624 x1840)))
(assert (axiom_frac_zero x1624 x1840 32 x1803 (uninterp_frac x1624 x1840)))
(assert (axiom_frac_zero x1624 x1840 32 x319 (uninterp_frac x1624 x1840)))
(assert (axiom_frac_zero x1624 x1840 32 x478 (uninterp_frac x1624 x1840)))
(assert (axiom_frac_zero x1624 x1840 32 x98 (uninterp_frac x1624 x1840)))
(assert (axiom_frac_zero x1624 x1840 x117 x1231 (uninterp_frac x1624 x1840)))
(assert (axiom_frac_zero x1624 x1840 x1231 x117 (uninterp_frac x1624 x1840)))
(assert (axiom_frac_zero x1624 x1840 x1470 x515 (uninterp_frac x1624 x1840)))
(assert (axiom_frac_zero x1624 x1840 x1487 1000000000000000000 (uninterp_frac x1624 x1840)))
(assert (axiom_frac_zero x1624 x1840 x154 32 (uninterp_frac x1624 x1840)))
(assert (axiom_frac_zero x1624 x1840 x1549 x406 (uninterp_frac x1624 x1840)))
(assert (axiom_frac_zero x1624 x1840 x1803 32 (uninterp_frac x1624 x1840)))
(assert (axiom_frac_zero x1624 x1840 x1829 1000000000000000000 (uninterp_frac x1624 x1840)))
(assert (axiom_frac_zero x1624 x1840 x183 x856 (uninterp_frac x1624 x1840)))
(assert (axiom_frac_zero x1624 x1840 x319 32 (uninterp_frac x1624 x1840)))
(assert (axiom_frac_zero x1624 x1840 x36 x1083 (uninterp_frac x1624 x1840)))
(assert (axiom_frac_zero x1624 x1840 x429 x1705 (uninterp_frac x1624 x1840)))
(assert (axiom_frac_zero x1624 x1840 x466 32 (uninterp_frac x1624 x1840)))
(assert (axiom_frac_zero x1624 x1840 x515 x1470 (uninterp_frac x1624 x1840)))
(assert (axiom_frac_zero x1624 x1840 x52 x24 (uninterp_frac x1624 x1840)))
(assert (axiom_frac_zero x1624 x1840 x530 x680 (uninterp_frac x1624 x1840)))
(assert (axiom_frac_zero x1624 x1840 x622 32 (uninterp_frac x1624 x1840)))
(assert (axiom_frac_zero x1624 x1840 x623 x1635 (uninterp_frac x1624 x1840)))
(assert (axiom_frac_zero x1624 x1840 x680 x530 (uninterp_frac x1624 x1840)))
(assert (axiom_frac_zero x1624 x1840 x749 x1285 (uninterp_frac x1624 x1840)))
(assert (axiom_frac_zero x1624 x1840 x759 x99 (uninterp_frac x1624 x1840)))
(assert (axiom_frac_zero x1624 x1840 x776 x1270 (uninterp_frac x1624 x1840)))
(assert (axiom_frac_zero x1624 x1840 x821 32 (uninterp_frac x1624 x1840)))
(assert (axiom_frac_zero x1624 x1840 x856 x183 (uninterp_frac x1624 x1840)))
(assert (axiom_frac_zero x1624 x1840 x99 x759 (uninterp_frac x1624 x1840)))
(assert (axiom_frac_bound x1630 x1453))
(assert (axiom_frac_zero x1630 x1453 1000000000000000000 x1540 (uninterp_frac x1630 x1453)))
(assert (axiom_frac_zero x1630 x1453 1000000000000000000 x289 (uninterp_frac x1630 x1453)))
(assert (axiom_frac_zero x1630 x1453 32 x1108 (uninterp_frac x1630 x1453)))
(assert (axiom_frac_zero x1630 x1453 32 x1179 (uninterp_frac x1630 x1453)))
(assert (axiom_frac_zero x1630 x1453 32 x1396 (uninterp_frac x1630 x1453)))
(assert (axiom_frac_zero x1630 x1453 32 x1621 (uninterp_frac x1630 x1453)))
(assert (axiom_frac_zero x1630 x1453 32 x1803 (uninterp_frac x1630 x1453)))
(assert (axiom_frac_zero x1630 x1453 32 x319 (uninterp_frac x1630 x1453)))
(assert (axiom_frac_zero x1630 x1453 32 x478 (uninterp_frac x1630 x1453)))
(assert (axiom_frac_zero x1630 x1453 32 x98 (uninterp_frac x1630 x1453)))
(assert (axiom_frac_zero x1630 x1453 x117 x1231 (uninterp_frac x1630 x1453)))
(assert (axiom_frac_zero x1630 x1453 x1231 x117 (uninterp_frac x1630 x1453)))
(assert (axiom_frac_zero x1630 x1453 x1470 x515 (uninterp_frac x1630 x1453)))
(assert (axiom_frac_zero x1630 x1453 x1487 1000000000000000000 (uninterp_frac x1630 x1453)))
(assert (axiom_frac_zero x1630 x1453 x154 32 (uninterp_frac x1630 x1453)))
(assert (axiom_frac_zero x1630 x1453 x1549 x406 (uninterp_frac x1630 x1453)))
(assert (axiom_frac_zero x1630 x1453 x1803 32 (uninterp_frac x1630 x1453)))
(assert (axiom_frac_zero x1630 x1453 x1829 1000000000000000000 (uninterp_frac x1630 x1453)))
(assert (axiom_frac_zero x1630 x1453 x183 x856 (uninterp_frac x1630 x1453)))
(assert (axiom_frac_zero x1630 x1453 x319 32 (uninterp_frac x1630 x1453)))
(assert (axiom_frac_zero x1630 x1453 x36 x1083 (uninterp_frac x1630 x1453)))
(assert (axiom_frac_zero x1630 x1453 x429 x1705 (uninterp_frac x1630 x1453)))
(assert (axiom_frac_zero x1630 x1453 x466 32 (uninterp_frac x1630 x1453)))
(assert (axiom_frac_zero x1630 x1453 x515 x1470 (uninterp_frac x1630 x1453)))
(assert (axiom_frac_zero x1630 x1453 x52 x24 (uninterp_frac x1630 x1453)))
(assert (axiom_frac_zero x1630 x1453 x530 x680 (uninterp_frac x1630 x1453)))
(assert (axiom_frac_zero x1630 x1453 x622 32 (uninterp_frac x1630 x1453)))
(assert (axiom_frac_zero x1630 x1453 x623 x1635 (uninterp_frac x1630 x1453)))
(assert (axiom_frac_zero x1630 x1453 x680 x530 (uninterp_frac x1630 x1453)))
(assert (axiom_frac_zero x1630 x1453 x749 x1285 (uninterp_frac x1630 x1453)))
(assert (axiom_frac_zero x1630 x1453 x759 x99 (uninterp_frac x1630 x1453)))
(assert (axiom_frac_zero x1630 x1453 x776 x1270 (uninterp_frac x1630 x1453)))
(assert (axiom_frac_zero x1630 x1453 x821 32 (uninterp_frac x1630 x1453)))
(assert (axiom_frac_zero x1630 x1453 x856 x183 (uninterp_frac x1630 x1453)))
(assert (axiom_frac_zero x1630 x1453 x99 x759 (uninterp_frac x1630 x1453)))
(assert (axiom_frac_bound x1658 1000000000000000000))
(assert (axiom_frac_zero x1658 1000000000000000000 1000000000000000000 x1540 (uninterp_frac x1658 1000000000000000000)))
(assert (axiom_frac_zero x1658 1000000000000000000 1000000000000000000 x289 (uninterp_frac x1658 1000000000000000000)))
(assert (axiom_frac_zero x1658 1000000000000000000 32 x1108 (uninterp_frac x1658 1000000000000000000)))
(assert (axiom_frac_zero x1658 1000000000000000000 32 x1179 (uninterp_frac x1658 1000000000000000000)))
(assert (axiom_frac_zero x1658 1000000000000000000 32 x1396 (uninterp_frac x1658 1000000000000000000)))
(assert (axiom_frac_zero x1658 1000000000000000000 32 x1621 (uninterp_frac x1658 1000000000000000000)))
(assert (axiom_frac_zero x1658 1000000000000000000 32 x1803 (uninterp_frac x1658 1000000000000000000)))
(assert (axiom_frac_zero x1658 1000000000000000000 32 x319 (uninterp_frac x1658 1000000000000000000)))
(assert (axiom_frac_zero x1658 1000000000000000000 32 x478 (uninterp_frac x1658 1000000000000000000)))
(assert (axiom_frac_zero x1658 1000000000000000000 32 x98 (uninterp_frac x1658 1000000000000000000)))
(assert (axiom_frac_zero x1658 1000000000000000000 x117 x1231 (uninterp_frac x1658 1000000000000000000)))
(assert (axiom_frac_zero x1658 1000000000000000000 x1231 x117 (uninterp_frac x1658 1000000000000000000)))
(assert (axiom_frac_zero x1658 1000000000000000000 x1470 x515 (uninterp_frac x1658 1000000000000000000)))
(assert (axiom_frac_zero x1658 1000000000000000000 x1487 1000000000000000000 (uninterp_frac x1658 1000000000000000000)))
(assert (axiom_frac_zero x1658 1000000000000000000 x154 32 (uninterp_frac x1658 1000000000000000000)))
(assert (axiom_frac_zero x1658 1000000000000000000 x1549 x406 (uninterp_frac x1658 1000000000000000000)))
(assert (axiom_frac_zero x1658 1000000000000000000 x1803 32 (uninterp_frac x1658 1000000000000000000)))
(assert (axiom_frac_zero x1658 1000000000000000000 x1829 1000000000000000000 (uninterp_frac x1658 1000000000000000000)))
(assert (axiom_frac_zero x1658 1000000000000000000 x183 x856 (uninterp_frac x1658 1000000000000000000)))
(assert (axiom_frac_zero x1658 1000000000000000000 x319 32 (uninterp_frac x1658 1000000000000000000)))
(assert (axiom_frac_zero x1658 1000000000000000000 x36 x1083 (uninterp_frac x1658 1000000000000000000)))
(assert (axiom_frac_zero x1658 1000000000000000000 x429 x1705 (uninterp_frac x1658 1000000000000000000)))
(assert (axiom_frac_zero x1658 1000000000000000000 x466 32 (uninterp_frac x1658 1000000000000000000)))
(assert (axiom_frac_zero x1658 1000000000000000000 x515 x1470 (uninterp_frac x1658 1000000000000000000)))
(assert (axiom_frac_zero x1658 1000000000000000000 x52 x24 (uninterp_frac x1658 1000000000000000000)))
(assert (axiom_frac_zero x1658 1000000000000000000 x530 x680 (uninterp_frac x1658 1000000000000000000)))
(assert (axiom_frac_zero x1658 1000000000000000000 x622 32 (uninterp_frac x1658 1000000000000000000)))
(assert (axiom_frac_zero x1658 1000000000000000000 x623 x1635 (uninterp_frac x1658 1000000000000000000)))
(assert (axiom_frac_zero x1658 1000000000000000000 x680 x530 (uninterp_frac x1658 1000000000000000000)))
(assert (axiom_frac_zero x1658 1000000000000000000 x749 x1285 (uninterp_frac x1658 1000000000000000000)))
(assert (axiom_frac_zero x1658 1000000000000000000 x759 x99 (uninterp_frac x1658 1000000000000000000)))
(assert (axiom_frac_zero x1658 1000000000000000000 x776 x1270 (uninterp_frac x1658 1000000000000000000)))
(assert (axiom_frac_zero x1658 1000000000000000000 x821 32 (uninterp_frac x1658 1000000000000000000)))
(assert (axiom_frac_zero x1658 1000000000000000000 x856 x183 (uninterp_frac x1658 1000000000000000000)))
(assert (axiom_frac_zero x1658 1000000000000000000 x99 x759 (uninterp_frac x1658 1000000000000000000)))
(assert (axiom_frac_bound x644 1000000000000000000))
(assert (axiom_frac_zero x644 1000000000000000000 1000000000000000000 x1540 (uninterp_frac x644 1000000000000000000)))
(assert (axiom_frac_zero x644 1000000000000000000 1000000000000000000 x289 (uninterp_frac x644 1000000000000000000)))
(assert (axiom_frac_zero x644 1000000000000000000 32 x1108 (uninterp_frac x644 1000000000000000000)))
(assert (axiom_frac_zero x644 1000000000000000000 32 x1179 (uninterp_frac x644 1000000000000000000)))
(assert (axiom_frac_zero x644 1000000000000000000 32 x1396 (uninterp_frac x644 1000000000000000000)))
(assert (axiom_frac_zero x644 1000000000000000000 32 x1621 (uninterp_frac x644 1000000000000000000)))
(assert (axiom_frac_zero x644 1000000000000000000 32 x1803 (uninterp_frac x644 1000000000000000000)))
(assert (axiom_frac_zero x644 1000000000000000000 32 x319 (uninterp_frac x644 1000000000000000000)))
(assert (axiom_frac_zero x644 1000000000000000000 32 x478 (uninterp_frac x644 1000000000000000000)))
(assert (axiom_frac_zero x644 1000000000000000000 32 x98 (uninterp_frac x644 1000000000000000000)))
(assert (axiom_frac_zero x644 1000000000000000000 x117 x1231 (uninterp_frac x644 1000000000000000000)))
(assert (axiom_frac_zero x644 1000000000000000000 x1231 x117 (uninterp_frac x644 1000000000000000000)))
(assert (axiom_frac_zero x644 1000000000000000000 x1470 x515 (uninterp_frac x644 1000000000000000000)))
(assert (axiom_frac_zero x644 1000000000000000000 x1487 1000000000000000000 (uninterp_frac x644 1000000000000000000)))
(assert (axiom_frac_zero x644 1000000000000000000 x154 32 (uninterp_frac x644 1000000000000000000)))
(assert (axiom_frac_zero x644 1000000000000000000 x1549 x406 (uninterp_frac x644 1000000000000000000)))
(assert (axiom_frac_zero x644 1000000000000000000 x1803 32 (uninterp_frac x644 1000000000000000000)))
(assert (axiom_frac_zero x644 1000000000000000000 x1829 1000000000000000000 (uninterp_frac x644 1000000000000000000)))
(assert (axiom_frac_zero x644 1000000000000000000 x183 x856 (uninterp_frac x644 1000000000000000000)))
(assert (axiom_frac_zero x644 1000000000000000000 x319 32 (uninterp_frac x644 1000000000000000000)))
(assert (axiom_frac_zero x644 1000000000000000000 x36 x1083 (uninterp_frac x644 1000000000000000000)))
(assert (axiom_frac_zero x644 1000000000000000000 x429 x1705 (uninterp_frac x644 1000000000000000000)))
(assert (axiom_frac_zero x644 1000000000000000000 x466 32 (uninterp_frac x644 1000000000000000000)))
(assert (axiom_frac_zero x644 1000000000000000000 x515 x1470 (uninterp_frac x644 1000000000000000000)))
(assert (axiom_frac_zero x644 1000000000000000000 x52 x24 (uninterp_frac x644 1000000000000000000)))
(assert (axiom_frac_zero x644 1000000000000000000 x530 x680 (uninterp_frac x644 1000000000000000000)))
(assert (axiom_frac_zero x644 1000000000000000000 x622 32 (uninterp_frac x644 1000000000000000000)))
(assert (axiom_frac_zero x644 1000000000000000000 x623 x1635 (uninterp_frac x644 1000000000000000000)))
(assert (axiom_frac_zero x644 1000000000000000000 x680 x530 (uninterp_frac x644 1000000000000000000)))
(assert (axiom_frac_zero x644 1000000000000000000 x749 x1285 (uninterp_frac x644 1000000000000000000)))
(assert (axiom_frac_zero x644 1000000000000000000 x759 x99 (uninterp_frac x644 1000000000000000000)))
(assert (axiom_frac_zero x644 1000000000000000000 x776 x1270 (uninterp_frac x644 1000000000000000000)))
(assert (axiom_frac_zero x644 1000000000000000000 x821 32 (uninterp_frac x644 1000000000000000000)))
(assert (axiom_frac_zero x644 1000000000000000000 x856 x183 (uninterp_frac x644 1000000000000000000)))
(assert (axiom_frac_zero x644 1000000000000000000 x99 x759 (uninterp_frac x644 1000000000000000000)))
(assert (axiom_int_approximation x10))
(assert (axiom_int_approximation x1001))
(assert (axiom_int_approximation x1004))
(assert (axiom_int_approximation x1009))
(assert (axiom_int_approximation x1010))
(assert (axiom_int_approximation x1013))
(assert (axiom_int_approximation x1014))
(assert (axiom_int_approximation x1019))
(assert (axiom_int_approximation x102))
(assert (axiom_int_approximation x1021))
(assert (axiom_int_approximation x1022))
(assert (axiom_int_approximation x1027))
(assert (axiom_int_approximation x1030))
(assert (axiom_int_approximation x1033))
(assert (axiom_int_approximation x1034))
(assert (axiom_int_approximation x1039))
(assert (axiom_int_approximation x1040))
(assert (axiom_int_approximation x1042))
(assert (axiom_int_approximation x1043))
(assert (axiom_int_approximation x1045))
(assert (axiom_int_approximation x1047))
(assert (axiom_int_approximation x1049))
(assert (axiom_int_approximation x1050))
(assert (axiom_int_approximation x1053))
(assert (axiom_int_approximation x1054))
(assert (axiom_int_approximation x1059))
(assert (axiom_int_approximation x106))
(assert (axiom_int_approximation x1060))
(assert (axiom_int_approximation x1061))
(assert (axiom_int_approximation x1062))
(assert (axiom_int_approximation x1068))
(assert (axiom_int_approximation x1069))
(assert (axiom_int_approximation x107))
(assert (axiom_int_approximation x1070))
(assert (axiom_int_approximation x1072))
(assert (axiom_int_approximation x1075))
(assert (axiom_int_approximation x1076))
(assert (axiom_int_approximation x1079))
(assert (axiom_int_approximation x108))
(assert (axiom_int_approximation x1082))
(assert (axiom_int_approximation x1083))
(assert (axiom_int_approximation x1086))
(assert (axiom_int_approximation x1087))
(assert (axiom_int_approximation x1089))
(assert (axiom_int_approximation x109))
(assert (axiom_int_approximation x1094))
(assert (axiom_int_approximation x1096))
(assert (axiom_int_approximation x11))
(assert (axiom_int_approximation x110))
(assert (axiom_int_approximation x1101))
(assert (axiom_int_approximation x1102))
(assert (axiom_int_approximation x1105))
(assert (axiom_int_approximation x1106))
(assert (axiom_int_approximation x1108))
(assert (axiom_int_approximation x1113))
(assert (axiom_int_approximation x1114))
(assert (axiom_int_approximation x1117))
(assert (axiom_int_approximation x1119))
(assert (axiom_int_approximation x1120))
(assert (axiom_int_approximation x1122))
(assert (axiom_int_approximation x1125))
(assert (axiom_int_approximation x1126))
(assert (axiom_int_approximation x1128))
(assert (axiom_int_approximation x1130))
(assert (axiom_int_approximation x1135))
(assert (axiom_int_approximation x1137))
(assert (axiom_int_approximation x114))
(assert (axiom_int_approximation x1140))
(assert (axiom_int_approximation x1142))
(assert (axiom_int_approximation x1144))
(assert (axiom_int_approximation x1145))
(assert (axiom_int_approximation x1149))
(assert (axiom_int_approximation x115))
(assert (axiom_int_approximation x1150))
(assert (axiom_int_approximation x1152))
(assert (axiom_int_approximation x1155))
(assert (axiom_int_approximation x116))
(assert (axiom_int_approximation x1160))
(assert (axiom_int_approximation x1161))
(assert (axiom_int_approximation x1165))
(assert (axiom_int_approximation x1166))
(assert (axiom_int_approximation x1167))
(assert (axiom_int_approximation x117))
(assert (axiom_int_approximation x1172))
(assert (axiom_int_approximation x1173))
(assert (axiom_int_approximation x1174))
(assert (axiom_int_approximation x1179))
(assert (axiom_int_approximation x118))
(assert (axiom_int_approximation x1180))
(assert (axiom_int_approximation x1183))
(assert (axiom_int_approximation x1187))
(assert (axiom_int_approximation x1188))
(assert (axiom_int_approximation x1189))
(assert (axiom_int_approximation x1190))
(assert (axiom_int_approximation x1197))
(assert (axiom_int_approximation x1198))
(assert (axiom_int_approximation x1199))
(assert (axiom_int_approximation x120))
(assert (axiom_int_approximation x1200))
(assert (axiom_int_approximation x1202))
(assert (axiom_int_approximation x1204))
(assert (axiom_int_approximation x1207))
(assert (axiom_int_approximation x1208))
(assert (axiom_int_approximation x1209))
(assert (axiom_int_approximation x121))
(assert (axiom_int_approximation x1213))
(assert (axiom_int_approximation x1214))
(assert (axiom_int_approximation x1217))
(assert (axiom_int_approximation x1219))
(assert (axiom_int_approximation x122))
(assert (axiom_int_approximation x1221))
(assert (axiom_int_approximation x1223))
(assert (axiom_int_approximation x1224))
(assert (axiom_int_approximation x1225))
(assert (axiom_int_approximation x1226))
(assert (axiom_int_approximation x1228))
(assert (axiom_int_approximation x1230))
(assert (axiom_int_approximation x1231))
(assert (axiom_int_approximation x1232))
(assert (axiom_int_approximation x1236))
(assert (axiom_int_approximation x1237))
(assert (axiom_int_approximation x1238))
(assert (axiom_int_approximation x1240))
(assert (axiom_int_approximation x1241))
(assert (axiom_int_approximation x1242))
(assert (axiom_int_approximation x1244))
(assert (axiom_int_approximation x1245))
(assert (axiom_int_approximation x1250))
(assert (axiom_int_approximation x1251))
(assert (axiom_int_approximation x1252))
(assert (axiom_int_approximation x1253))
(assert (axiom_int_approximation x1255))
(assert (axiom_int_approximation x1256))
(assert (axiom_int_approximation x1258))
(assert (axiom_int_approximation x1263))
(assert (axiom_int_approximation x1270))
(assert (axiom_int_approximation x1271))
(assert (axiom_int_approximation x1272))
(assert (axiom_int_approximation x1277))
(assert (axiom_int_approximation x1279))
(assert (axiom_int_approximation x128))
(assert (axiom_int_approximation x1280))
(assert (axiom_int_approximation x1281))
(assert (axiom_int_approximation x1282))
(assert (axiom_int_approximation x1284))
(assert (axiom_int_approximation x1285))
(assert (axiom_int_approximation x1287))
(assert (axiom_int_approximation x1288))
(assert (axiom_int_approximation x1291))
(assert (axiom_int_approximation x1292))
(assert (axiom_int_approximation x1293))
(assert (axiom_int_approximation x1298))
(assert (axiom_int_approximation x1299))
(assert (axiom_int_approximation x130))
(assert (axiom_int_approximation x1304))
(assert (axiom_int_approximation x1306))
(assert (axiom_int_approximation x1307))
(assert (axiom_int_approximation x1309))
(assert (axiom_int_approximation x1318))
(assert (axiom_int_approximation x1319))
(assert (axiom_int_approximation x132))
(assert (axiom_int_approximation x1320))
(assert (axiom_int_approximation x1321))
(assert (axiom_int_approximation x1324))
(assert (axiom_int_approximation x1325))
(assert (axiom_int_approximation x1326))
(assert (axiom_int_approximation x1327))
(assert (axiom_int_approximation x133))
(assert (axiom_int_approximation x1332))
(assert (axiom_int_approximation x1333))
(assert (axiom_int_approximation x1334))
(assert (axiom_int_approximation x1336))
(assert (axiom_int_approximation x1337))
(assert (axiom_int_approximation x1338))
(assert (axiom_int_approximation x1339))
(assert (axiom_int_approximation x1340))
(assert (axiom_int_approximation x1344))
(assert (axiom_int_approximation x1345))
(assert (axiom_int_approximation x1347))
(assert (axiom_int_approximation x1348))
(assert (axiom_int_approximation x1349))
(assert (axiom_int_approximation x135))
(assert (axiom_int_approximation x1353))
(assert (axiom_int_approximation x1355))
(assert (axiom_int_approximation x1359))
(assert (axiom_int_approximation x136))
(assert (axiom_int_approximation x1361))
(assert (axiom_int_approximation x1366))
(assert (axiom_int_approximation x1367))
(assert (axiom_int_approximation x137))
(assert (axiom_int_approximation x1371))
(assert (axiom_int_approximation x1372))
(assert (axiom_int_approximation x1375))
(assert (axiom_int_approximation x1378))
(assert (axiom_int_approximation x1380))
(assert (axiom_int_approximation x1382))
(assert (axiom_int_approximation x1383))
(assert (axiom_int_approximation x1384))
(assert (axiom_int_approximation x1385))
(assert (axiom_int_approximation x139))
(assert (axiom_int_approximation x1391))
(assert (axiom_int_approximation x1392))
(assert (axiom_int_approximation x1394))
(assert (axiom_int_approximation x1396))
(assert (axiom_int_approximation x1397))
(assert (axiom_int_approximation x1398))
(assert (axiom_int_approximation x14))
(assert (axiom_int_approximation x1400))
(assert (axiom_int_approximation x1402))
(assert (axiom_int_approximation x1403))
(assert (axiom_int_approximation x1404))
(assert (axiom_int_approximation x1408))
(assert (axiom_int_approximation x1409))
(assert (axiom_int_approximation x1411))
(assert (axiom_int_approximation x1414))
(assert (axiom_int_approximation x1415))
(assert (axiom_int_approximation x1417))
(assert (axiom_int_approximation x1419))
(assert (axiom_int_approximation x142))
(assert (axiom_int_approximation x1423))
(assert (axiom_int_approximation x1424))
(assert (axiom_int_approximation x143))
(assert (axiom_int_approximation x1430))
(assert (axiom_int_approximation x1431))
(assert (axiom_int_approximation x1433))
(assert (axiom_int_approximation x1435))
(assert (axiom_int_approximation x1436))
(assert (axiom_int_approximation x1437))
(assert (axiom_int_approximation x144))
(assert (axiom_int_approximation x1440))
(assert (axiom_int_approximation x1442))
(assert (axiom_int_approximation x1446))
(assert (axiom_int_approximation x1447))
(assert (axiom_int_approximation x145))
(assert (axiom_int_approximation x1452))
(assert (axiom_int_approximation x1453))
(assert (axiom_int_approximation x1456))
(assert (axiom_int_approximation x1457))
(assert (axiom_int_approximation x1460))
(assert (axiom_int_approximation x1461))
(assert (axiom_int_approximation x1462))
(assert (axiom_int_approximation x1463))
(assert (axiom_int_approximation x1466))
(assert (axiom_int_approximation x1467))
(assert (axiom_int_approximation x1468))
(assert (axiom_int_approximation x1469))
(assert (axiom_int_approximation x147))
(assert (axiom_int_approximation x1470))
(assert (axiom_int_approximation x1472))
(assert (axiom_int_approximation x1474))
(assert (axiom_int_approximation x1475))
(assert (axiom_int_approximation x1476))
(assert (axiom_int_approximation x1480))
(assert (axiom_int_approximation x1483))
(assert (axiom_int_approximation x1486))
(assert (axiom_int_approximation x1487))
(assert (axiom_int_approximation x1489))
(assert (axiom_int_approximation x1491))
(assert (axiom_int_approximation x1493))
(assert (axiom_int_approximation x1495))
(assert (axiom_int_approximation x1496))
(assert (axiom_int_approximation x1497))
(assert (axiom_int_approximation x1498))
(assert (axiom_int_approximation x1499))
(assert (axiom_int_approximation x150))
(assert (axiom_int_approximation x1501))
(assert (axiom_int_approximation x1502))
(assert (axiom_int_approximation x1503))
(assert (axiom_int_approximation x1504))
(assert (axiom_int_approximation x1512))
(assert (axiom_int_approximation x1513))
(assert (axiom_int_approximation x1515))
(assert (axiom_int_approximation x1519))
(assert (axiom_int_approximation x152))
(assert (axiom_int_approximation x1522))
(assert (axiom_int_approximation x1523))
(assert (axiom_int_approximation x1526))
(assert (axiom_int_approximation x1528))
(assert (axiom_int_approximation x1529))
(assert (axiom_int_approximation x153))
(assert (axiom_int_approximation x1531))
(assert (axiom_int_approximation x1532))
(assert (axiom_int_approximation x1533))
(assert (axiom_int_approximation x1534))
(assert (axiom_int_approximation x1538))
(assert (axiom_int_approximation x1539))
(assert (axiom_int_approximation x154))
(assert (axiom_int_approximation x1540))
(assert (axiom_int_approximation x1541))
(assert (axiom_int_approximation x1545))
(assert (axiom_int_approximation x1547))
(assert (axiom_int_approximation x1548))
(assert (axiom_int_approximation x1549))
(assert (axiom_int_approximation x1550))
(assert (axiom_int_approximation x1551))
(assert (axiom_int_approximation x1552))
(assert (axiom_int_approximation x1553))
(assert (axiom_int_approximation x1554))
(assert (axiom_int_approximation x1558))
(assert (axiom_int_approximation x156))
(assert (axiom_int_approximation x1560))
(assert (axiom_int_approximation x1561))
(assert (axiom_int_approximation x1563))
(assert (axiom_int_approximation x1565))
(assert (axiom_int_approximation x1568))
(assert (axiom_int_approximation x1569))
(assert (axiom_int_approximation x157))
(assert (axiom_int_approximation x1570))
(assert (axiom_int_approximation x1571))
(assert (axiom_int_approximation x1576))
(assert (axiom_int_approximation x1577))
(assert (axiom_int_approximation x1578))
(assert (axiom_int_approximation x158))
(assert (axiom_int_approximation x1582))
(assert (axiom_int_approximation x1583))
(assert (axiom_int_approximation x1584))
(assert (axiom_int_approximation x1588))
(assert (axiom_int_approximation x1592))
(assert (axiom_int_approximation x1594))
(assert (axiom_int_approximation x1596))
(assert (axiom_int_approximation x1600))
(assert (axiom_int_approximation x1604))
(assert (axiom_int_approximation x1609))
(assert (axiom_int_approximation x1612))
(assert (axiom_int_approximation x1613))
(assert (axiom_int_approximation x1614))
(assert (axiom_int_approximation x1615))
(assert (axiom_int_approximation x1616))
(assert (axiom_int_approximation x1617))
(assert (axiom_int_approximation x1618))
(assert (axiom_int_approximation x162))
(assert (axiom_int_approximation x1621))
(assert (axiom_int_approximation x1622))
(assert (axiom_int_approximation x1624))
(assert (axiom_int_approximation x1625))
(assert (axiom_int_approximation x1626))
(assert (axiom_int_approximation x1627))
(assert (axiom_int_approximation x163))
(assert (axiom_int_approximation x1630))
(assert (axiom_int_approximation x1634))
(assert (axiom_int_approximation x1635))
(assert (axiom_int_approximation x1636))
(assert (axiom_int_approximation x1639))
(assert (axiom_int_approximation x164))
(assert (axiom_int_approximation x1644))
(assert (axiom_int_approximation x1646))
(assert (axiom_int_approximation x1649))
(assert (axiom_int_approximation x165))
(assert (axiom_int_approximation x1652))
(assert (axiom_int_approximation x1654))
(assert (axiom_int_approximation x1656))
(assert (axiom_int_approximation x1657))
(assert (axiom_int_approximation x1658))
(assert (axiom_int_approximation x1659))
(assert (axiom_int_approximation x166))
(assert (axiom_int_approximation x1661))
(assert (axiom_int_approximation x1664))
(assert (axiom_int_approximation x1665))
(assert (axiom_int_approximation x1666))
(assert (axiom_int_approximation x1667))
(assert (axiom_int_approximation x167))
(assert (axiom_int_approximation x1672))
(assert (axiom_int_approximation x1673))
(assert (axiom_int_approximation x1675))
(assert (axiom_int_approximation x1678))
(assert (axiom_int_approximation x1679))
(assert (axiom_int_approximation x1680))
(assert (axiom_int_approximation x1683))
(assert (axiom_int_approximation x1685))
(assert (axiom_int_approximation x1689))
(assert (axiom_int_approximation x169))
(assert (axiom_int_approximation x1690))
(assert (axiom_int_approximation x1692))
(assert (axiom_int_approximation x1698))
(assert (axiom_int_approximation x1699))
(assert (axiom_int_approximation x170))
(assert (axiom_int_approximation x1700))
(assert (axiom_int_approximation x1701))
(assert (axiom_int_approximation x1704))
(assert (axiom_int_approximation x1705))
(assert (axiom_int_approximation x1706))
(assert (axiom_int_approximation x1707))
(assert (axiom_int_approximation x171))
(assert (axiom_int_approximation x1710))
(assert (axiom_int_approximation x1712))
(assert (axiom_int_approximation x1715))
(assert (axiom_int_approximation x1718))
(assert (axiom_int_approximation x1720))
(assert (axiom_int_approximation x1721))
(assert (axiom_int_approximation x1726))
(assert (axiom_int_approximation x1728))
(assert (axiom_int_approximation x173))
(assert (axiom_int_approximation x1730))
(assert (axiom_int_approximation x1734))
(assert (axiom_int_approximation x1737))
(assert (axiom_int_approximation x1740))
(assert (axiom_int_approximation x1744))
(assert (axiom_int_approximation x1746))
(assert (axiom_int_approximation x1748))
(assert (axiom_int_approximation x1749))
(assert (axiom_int_approximation x175))
(assert (axiom_int_approximation x1751))
(assert (axiom_int_approximation x1753))
(assert (axiom_int_approximation x1754))
(assert (axiom_int_approximation x1755))
(assert (axiom_int_approximation x1757))
(assert (axiom_int_approximation x1758))
(assert (axiom_int_approximation x1759))
(assert (axiom_int_approximation x176))
(assert (axiom_int_approximation x1762))
(assert (axiom_int_approximation x1765))
(assert (axiom_int_approximation x1767))
(assert (axiom_int_approximation x1768))
(assert (axiom_int_approximation x1769))
(assert (axiom_int_approximation x177))
(assert (axiom_int_approximation x1770))
(assert (axiom_int_approximation x1773))
(assert (axiom_int_approximation x1775))
(assert (axiom_int_approximation x1777))
(assert (axiom_int_approximation x178))
(assert (axiom_int_approximation x1794))
(assert (axiom_int_approximation x1797))
(assert (axiom_int_approximation x1799))
(assert (axiom_int_approximation x180))
(assert (axiom_int_approximation x1801))
(assert (axiom_int_approximation x1803))
(assert (axiom_int_approximation x1809))
(assert (axiom_int_approximation x181))
(assert (axiom_int_approximation x1810))
(assert (axiom_int_approximation x1812))
(assert (axiom_int_approximation x1813))
(assert (axiom_int_approximation x1815))
(assert (axiom_int_approximation x1816))
(assert (axiom_int_approximation x1817))
(assert (axiom_int_approximation x1818))
(assert (axiom_int_approximation x1819))
(assert (axiom_int_approximation x1820))
(assert (axiom_int_approximation x1822))
(assert (axiom_int_approximation x1824))
(assert (axiom_int_approximation x1825))
(assert (axiom_int_approximation x1826))
(assert (axiom_int_approximation x1827))
(assert (axiom_int_approximation x1829))
(assert (axiom_int_approximation x183))
(assert (axiom_int_approximation x1830))
(assert (axiom_int_approximation x1831))
(assert (axiom_int_approximation x1834))
(assert (axiom_int_approximation x1836))
(assert (axiom_int_approximation x1837))
(assert (axiom_int_approximation x1839))
(assert (axiom_int_approximation x184))
(assert (axiom_int_approximation x1840))
(assert (axiom_int_approximation x1842))
(assert (axiom_int_approximation x1843))
(assert (axiom_int_approximation x1848))
(assert (axiom_int_approximation x1849))
(assert (axiom_int_approximation x1852))
(assert (axiom_int_approximation x1854))
(assert (axiom_int_approximation x1855))
(assert (axiom_int_approximation x1857))
(assert (axiom_int_approximation x1858))
(assert (axiom_int_approximation x1859))
(assert (axiom_int_approximation x1862))
(assert (axiom_int_approximation x1864))
(assert (axiom_int_approximation x1865))
(assert (axiom_int_approximation x1866))
(assert (axiom_int_approximation x1867))
(assert (axiom_int_approximation x1871))
(assert (axiom_int_approximation x1872))
(assert (axiom_int_approximation x1873))
(assert (axiom_int_approximation x190))
(assert (axiom_int_approximation x198))
(assert (axiom_int_approximation x199))
(assert (axiom_int_approximation x201))
(assert (axiom_int_approximation x202))
(assert (axiom_int_approximation x204))
(assert (axiom_int_approximation x208))
(assert (axiom_int_approximation x209))
(assert (axiom_int_approximation x21))
(assert (axiom_int_approximation x212))
(assert (axiom_int_approximation x214))
(assert (axiom_int_approximation x216))
(assert (axiom_int_approximation x217))
(assert (axiom_int_approximation x218))
(assert (axiom_int_approximation x219))
(assert (axiom_int_approximation x22))
(assert (axiom_int_approximation x220))
(assert (axiom_int_approximation x221))
(assert (axiom_int_approximation x222))
(assert (axiom_int_approximation x223))
(assert (axiom_int_approximation x224))
(assert (axiom_int_approximation x228))
(assert (axiom_int_approximation x23))
(assert (axiom_int_approximation x231))
(assert (axiom_int_approximation x234))
(assert (axiom_int_approximation x235))
(assert (axiom_int_approximation x236))
(assert (axiom_int_approximation x237))
(assert (axiom_int_approximation x239))
(assert (axiom_int_approximation x24))
(assert (axiom_int_approximation x240))
(assert (axiom_int_approximation x241))
(assert (axiom_int_approximation x243))
(assert (axiom_int_approximation x246))
(assert (axiom_int_approximation x247))
(assert (axiom_int_approximation x25))
(assert (axiom_int_approximation x255))
(assert (axiom_int_approximation x257))
(assert (axiom_int_approximation x258))
(assert (axiom_int_approximation x262))
(assert (axiom_int_approximation x263))
(assert (axiom_int_approximation x265))
(assert (axiom_int_approximation x266))
(assert (axiom_int_approximation x267))
(assert (axiom_int_approximation x270))
(assert (axiom_int_approximation x271))
(assert (axiom_int_approximation x280))
(assert (axiom_int_approximation x281))
(assert (axiom_int_approximation x282))
(assert (axiom_int_approximation x283))
(assert (axiom_int_approximation x284))
(assert (axiom_int_approximation x288))
(assert (axiom_int_approximation x289))
(assert (axiom_int_approximation x29))
(assert (axiom_int_approximation x290))
(assert (axiom_int_approximation x291))
(assert (axiom_int_approximation x292))
(assert (axiom_int_approximation x293))
(assert (axiom_int_approximation x297))
(assert (axiom_int_approximation x298))
(assert (axiom_int_approximation x30))
(assert (axiom_int_approximation x300))
(assert (axiom_int_approximation x301))
(assert (axiom_int_approximation x306))
(assert (axiom_int_approximation x307))
(assert (axiom_int_approximation x308))
(assert (axiom_int_approximation x309))
(assert (axiom_int_approximation x310))
(assert (axiom_int_approximation x311))
(assert (axiom_int_approximation x313))
(assert (axiom_int_approximation x315))
(assert (axiom_int_approximation x316))
(assert (axiom_int_approximation x319))
(assert (axiom_int_approximation x32))
(assert (axiom_int_approximation x320))
(assert (axiom_int_approximation x324))
(assert (axiom_int_approximation x327))
(assert (axiom_int_approximation x330))
(assert (axiom_int_approximation x331))
(assert (axiom_int_approximation x333))
(assert (axiom_int_approximation x335))
(assert (axiom_int_approximation x345))
(assert (axiom_int_approximation x349))
(assert (axiom_int_approximation x35))
(assert (axiom_int_approximation x350))
(assert (axiom_int_approximation x351))
(assert (axiom_int_approximation x353))
(assert (axiom_int_approximation x354))
(assert (axiom_int_approximation x356))
(assert (axiom_int_approximation x357))
(assert (axiom_int_approximation x358))
(assert (axiom_int_approximation x359))
(assert (axiom_int_approximation x36))
(assert (axiom_int_approximation x360))
(assert (axiom_int_approximation x367))
(assert (axiom_int_approximation x370))
(assert (axiom_int_approximation x373))
(assert (axiom_int_approximation x376))
(assert (axiom_int_approximation x378))
(assert (axiom_int_approximation x38))
(assert (axiom_int_approximation x380))
(assert (axiom_int_approximation x381))
(assert (axiom_int_approximation x384))
(assert (axiom_int_approximation x387))
(assert (axiom_int_approximation x388))
(assert (axiom_int_approximation x389))
(assert (axiom_int_approximation x391))
(assert (axiom_int_approximation x392))
(assert (axiom_int_approximation x393))
(assert (axiom_int_approximation x395))
(assert (axiom_int_approximation x397))
(assert (axiom_int_approximation x4))
(assert (axiom_int_approximation x400))
(assert (axiom_int_approximation x406))
(assert (axiom_int_approximation x41))
(assert (axiom_int_approximation x411))
(assert (axiom_int_approximation x418))
(assert (axiom_int_approximation x419))
(assert (axiom_int_approximation x42))
(assert (axiom_int_approximation x422))
(assert (axiom_int_approximation x425))
(assert (axiom_int_approximation x427))
(assert (axiom_int_approximation x428))
(assert (axiom_int_approximation x429))
(assert (axiom_int_approximation x430))
(assert (axiom_int_approximation x431))
(assert (axiom_int_approximation x434))
(assert (axiom_int_approximation x435))
(assert (axiom_int_approximation x44))
(assert (axiom_int_approximation x440))
(assert (axiom_int_approximation x441))
(assert (axiom_int_approximation x446))
(assert (axiom_int_approximation x447))
(assert (axiom_int_approximation x448))
(assert (axiom_int_approximation x449))
(assert (axiom_int_approximation x450))
(assert (axiom_int_approximation x451))
(assert (axiom_int_approximation x452))
(assert (axiom_int_approximation x453))
(assert (axiom_int_approximation x455))
(assert (axiom_int_approximation x458))
(assert (axiom_int_approximation x459))
(assert (axiom_int_approximation x46))
(assert (axiom_int_approximation x460))
(assert (axiom_int_approximation x461))
(assert (axiom_int_approximation x462))
(assert (axiom_int_approximation x463))
(assert (axiom_int_approximation x464))
(assert (axiom_int_approximation x465))
(assert (axiom_int_approximation x466))
(assert (axiom_int_approximation x467))
(assert (axiom_int_approximation x47))
(assert (axiom_int_approximation x471))
(assert (axiom_int_approximation x474))
(assert (axiom_int_approximation x477))
(assert (axiom_int_approximation x478))
(assert (axiom_int_approximation x48))
(assert (axiom_int_approximation x481))
(assert (axiom_int_approximation x482))
(assert (axiom_int_approximation x487))
(assert (axiom_int_approximation x488))
(assert (axiom_int_approximation x49))
(assert (axiom_int_approximation x491))
(assert (axiom_int_approximation x493))
(assert (axiom_int_approximation x495))
(assert (axiom_int_approximation x496))
(assert (axiom_int_approximation x498))
(assert (axiom_int_approximation x5))
(assert (axiom_int_approximation x500))
(assert (axiom_int_approximation x501))
(assert (axiom_int_approximation x503))
(assert (axiom_int_approximation x505))
(assert (axiom_int_approximation x507))
(assert (axiom_int_approximation x51))
(assert (axiom_int_approximation x511))
(assert (axiom_int_approximation x515))
(assert (axiom_int_approximation x517))
(assert (axiom_int_approximation x519))
(assert (axiom_int_approximation x52))
(assert (axiom_int_approximation x524))
(assert (axiom_int_approximation x525))
(assert (axiom_int_approximation x526))
(assert (axiom_int_approximation x530))
(assert (axiom_int_approximation x531))
(assert (axiom_int_approximation x532))
(assert (axiom_int_approximation x537))
(assert (axiom_int_approximation x540))
(assert (axiom_int_approximation x542))
(assert (axiom_int_approximation x543))
(assert (axiom_int_approximation x544))
(assert (axiom_int_approximation x545))
(assert (axiom_int_approximation x547))
(assert (axiom_int_approximation x548))
(assert (axiom_int_approximation x549))
(assert (axiom_int_approximation x55))
(assert (axiom_int_approximation x550))
(assert (axiom_int_approximation x551))
(assert (axiom_int_approximation x553))
(assert (axiom_int_approximation x556))
(assert (axiom_int_approximation x557))
(assert (axiom_int_approximation x56))
(assert (axiom_int_approximation x561))
(assert (axiom_int_approximation x563))
(assert (axiom_int_approximation x564))
(assert (axiom_int_approximation x565))
(assert (axiom_int_approximation x568))
(assert (axiom_int_approximation x569))
(assert (axiom_int_approximation x571))
(assert (axiom_int_approximation x573))
(assert (axiom_int_approximation x574))
(assert (axiom_int_approximation x578))
(assert (axiom_int_approximation x581))
(assert (axiom_int_approximation x582))
(assert (axiom_int_approximation x583))
(assert (axiom_int_approximation x589))
(assert (axiom_int_approximation x590))
(assert (axiom_int_approximation x591))
(assert (axiom_int_approximation x592))
(assert (axiom_int_approximation x596))
(assert (axiom_int_approximation x6))
(assert (axiom_int_approximation x602))
(assert (axiom_int_approximation x606))
(assert (axiom_int_approximation x608))
(assert (axiom_int_approximation x61))
(assert (axiom_int_approximation x610))
(assert (axiom_int_approximation x613))
(assert (axiom_int_approximation x614))
(assert (axiom_int_approximation x619))
(assert (axiom_int_approximation x62))
(assert (axiom_int_approximation x622))
(assert (axiom_int_approximation x623))
(assert (axiom_int_approximation x626))
(assert (axiom_int_approximation x629))
(assert (axiom_int_approximation x63))
(assert (axiom_int_approximation x634))
(assert (axiom_int_approximation x637))
(assert (axiom_int_approximation x640))
(assert (axiom_int_approximation x642))
(assert (axiom_int_approximation x643))
(assert (axiom_int_approximation x644))
(assert (axiom_int_approximation x648))
(assert (axiom_int_approximation x649))
(assert (axiom_int_approximation x652))
(assert (axiom_int_approximation x653))
(assert (axiom_int_approximation x656))
(assert (axiom_int_approximation x657))
(assert (axiom_int_approximation x658))
(assert (axiom_int_approximation x661))
(assert (axiom_int_approximation x676))
(assert (axiom_int_approximation x677))
(assert (axiom_int_approximation x679))
(assert (axiom_int_approximation x680))
(assert (axiom_int_approximation x681))
(assert (axiom_int_approximation x682))
(assert (axiom_int_approximation x683))
(assert (axiom_int_approximation x684))
(assert (axiom_int_approximation x685))
(assert (axiom_int_approximation x688))
(assert (axiom_int_approximation x69))
(assert (axiom_int_approximation x691))
(assert (axiom_int_approximation x693))
(assert (axiom_int_approximation x695))
(assert (axiom_int_approximation x697))
(assert (axiom_int_approximation x699))
(assert (axiom_int_approximation x7))
(assert (axiom_int_approximation x70))
(assert (axiom_int_approximation x700))
(assert (axiom_int_approximation x701))
(assert (axiom_int_approximation x703))
(assert (axiom_int_approximation x707))
(assert (axiom_int_approximation x708))
(assert (axiom_int_approximation x709))
(assert (axiom_int_approximation x71))
(assert (axiom_int_approximation x710))
(assert (axiom_int_approximation x711))
(assert (axiom_int_approximation x718))
(assert (axiom_int_approximation x719))
(assert (axiom_int_approximation x721))
(assert (axiom_int_approximation x722))
(assert (axiom_int_approximation x724))
(assert (axiom_int_approximation x725))
(assert (axiom_int_approximation x729))
(assert (axiom_int_approximation x730))
(assert (axiom_int_approximation x732))
(assert (axiom_int_approximation x734))
(assert (axiom_int_approximation x737))
(assert (axiom_int_approximation x738))
(assert (axiom_int_approximation x741))
(assert (axiom_int_approximation x742))
(assert (axiom_int_approximation x746))
(assert (axiom_int_approximation x747))
(assert (axiom_int_approximation x748))
(assert (axiom_int_approximation x749))
(assert (axiom_int_approximation x75))
(assert (axiom_int_approximation x752))
(assert (axiom_int_approximation x753))
(assert (axiom_int_approximation x754))
(assert (axiom_int_approximation x755))
(assert (axiom_int_approximation x756))
(assert (axiom_int_approximation x759))
(assert (axiom_int_approximation x76))
(assert (axiom_int_approximation x763))
(assert (axiom_int_approximation x764))
(assert (axiom_int_approximation x765))
(assert (axiom_int_approximation x766))
(assert (axiom_int_approximation x77))
(assert (axiom_int_approximation x771))
(assert (axiom_int_approximation x772))
(assert (axiom_int_approximation x773))
(assert (axiom_int_approximation x774))
(assert (axiom_int_approximation x775))
(assert (axiom_int_approximation x776))
(assert (axiom_int_approximation x781))
(assert (axiom_int_approximation x782))
(assert (axiom_int_approximation x783))
(assert (axiom_int_approximation x786))
(assert (axiom_int_approximation x789))
(assert (axiom_int_approximation x79))
(assert (axiom_int_approximation x792))
(assert (axiom_int_approximation x795))
(assert (axiom_int_approximation x796))
(assert (axiom_int_approximation x80))
(assert (axiom_int_approximation x800))
(assert (axiom_int_approximation x806))
(assert (axiom_int_approximation x807))
(assert (axiom_int_approximation x811))
(assert (axiom_int_approximation x816))
(assert (axiom_int_approximation x818))
(assert (axiom_int_approximation x82))
(assert (axiom_int_approximation x821))
(assert (axiom_int_approximation x825))
(assert (axiom_int_approximation x828))
(assert (axiom_int_approximation x829))
(assert (axiom_int_approximation x830))
(assert (axiom_int_approximation x832))
(assert (axiom_int_approximation x833))
(assert (axiom_int_approximation x834))
(assert (axiom_int_approximation x835))
(assert (axiom_int_approximation x836))
(assert (axiom_int_approximation x838))
(assert (axiom_int_approximation x84))
(assert (axiom_int_approximation x841))
(assert (axiom_int_approximation x844))
(assert (axiom_int_approximation x846))
(assert (axiom_int_approximation x852))
(assert (axiom_int_approximation x853))
(assert (axiom_int_approximation x856))
(assert (axiom_int_approximation x857))
(assert (axiom_int_approximation x858))
(assert (axiom_int_approximation x862))
(assert (axiom_int_approximation x864))
(assert (axiom_int_approximation x867))
(assert (axiom_int_approximation x869))
(assert (axiom_int_approximation x870))
(assert (axiom_int_approximation x871))
(assert (axiom_int_approximation x872))
(assert (axiom_int_approximation x875))
(assert (axiom_int_approximation x883))
(assert (axiom_int_approximation x887))
(assert (axiom_int_approximation x888))
(assert (axiom_int_approximation x89))
(assert (axiom_int_approximation x890))
(assert (axiom_int_approximation x891))
(assert (axiom_int_approximation x892))
(assert (axiom_int_approximation x895))
(assert (axiom_int_approximation x897))
(assert (axiom_int_approximation x898))
(assert (axiom_int_approximation x899))
(assert (axiom_int_approximation x900))
(assert (axiom_int_approximation x902))
(assert (axiom_int_approximation x903))
(assert (axiom_int_approximation x908))
(assert (axiom_int_approximation x915))
(assert (axiom_int_approximation x916))
(assert (axiom_int_approximation x917))
(assert (axiom_int_approximation x92))
(assert (axiom_int_approximation x923))
(assert (axiom_int_approximation x924))
(assert (axiom_int_approximation x927))
(assert (axiom_int_approximation x928))
(assert (axiom_int_approximation x929))
(assert (axiom_int_approximation x93))
(assert (axiom_int_approximation x932))
(assert (axiom_int_approximation x934))
(assert (axiom_int_approximation x937))
(assert (axiom_int_approximation x94))
(assert (axiom_int_approximation x940))
(assert (axiom_int_approximation x941))
(assert (axiom_int_approximation x942))
(assert (axiom_int_approximation x945))
(assert (axiom_int_approximation x947))
(assert (axiom_int_approximation x948))
(assert (axiom_int_approximation x949))
(assert (axiom_int_approximation x95))
(assert (axiom_int_approximation x956))
(assert (axiom_int_approximation x957))
(assert (axiom_int_approximation x96))
(assert (axiom_int_approximation x960))
(assert (axiom_int_approximation x964))
(assert (axiom_int_approximation x965))
(assert (axiom_int_approximation x968))
(assert (axiom_int_approximation x969))
(assert (axiom_int_approximation x971))
(assert (axiom_int_approximation x973))
(assert (axiom_int_approximation x974))
(assert (axiom_int_approximation x979))
(assert (axiom_int_approximation x98))
(assert (axiom_int_approximation x981))
(assert (axiom_int_approximation x982))
(assert (axiom_int_approximation x984))
(assert (axiom_int_approximation x986))
(assert (axiom_int_approximation x987))
(assert (axiom_int_approximation x988))
(assert (axiom_int_approximation x99))
(assert (axiom_int_approximation x990))
(assert (axiom_int_approximation x992))
(assert (axiom_int_approximation x993))
(assert (axiom_int_approximation x998))
(assert (x317 x1604))
(assert (x317 x1480))
(assert (x317 x1699))
(assert (= (x675 (- x1532 x1304)) (x1278 (- x1532 x1304))))
(assert (= (ite x659 (ite (and x1377 x849) (x1811 x366) (x1331 x366)) (x1811 x366)) (x475 x366)))
(assert (=> (< (- x1040 1) 10000) (= (x111 x1040) (x714 x1040))))
(assert (=> (< (- x1531 1) 10000) (= (x714 x1531) (x111 x1531))))
(assert (x317 x237))
(assert (x317 x217))
(assert (x920 x1770))
(assert (x317 x832))
(assert (x317 x331))
(assert (= x1059 (x615 (x714 x1059))))
(assert (x317 x1770))
(assert (x1407 x239))
(assert (x317 x1135))
(assert (= x930 (and (not x794) x1362)))
(assert (= x1010 (x615 (x714 x1010))))
(assert (= (x884 x1787) (ite (and (not x1234) x1741) (x1587 x1787) (x1203 x1787))))
(assert (= x1521 (=> (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1183) (<= 0 x1183) (not (> x540 x1183)) (= (x332 (x714 x1076) (x111 5) 0) x66) (>= x1337 0) (= x540 (x624 x1341)) (= x1337 (x1605 x809)) (= (x1448 (- x1183 x540)) x1829) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x540) (= x1183 (x1093 x1335)) (= (x332 (x714 x1076) (x111 3) 0) x436) (= x1341 (x332 (x714 x351) x873 0)) (= x1266 (= 0 x1829)) (= x809 (x332 (x714 x1128) x66 0)) (= (x332 (x714 x1128) x978 0) x1434) (= (x332 (x714 x1076) (x111 4) 0) x978) (= (x332 (x714 x649) x1761 0) x1335) (>= x540 0) (= x873 (x332 (x714 x649) x1434 0)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1337) (= (x332 (x714 x1128) x436 0) x1761)) (and (=> (and (= (ite (< 115792089237316195423570985008687907853269984665640564039457 x1829) 1 0) x288) (>= x1231 0) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1231) (= x1009 (uninterp_mod (* x1829 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= 0 x116) (= x266 x1829) (not x1266) (= x94 (x1669 (+ x1117 96))) (= (x20 (x714 x351)) x613) (= (x1448 (- x335 32)) x327) (= x1752 (x332 (x714 x1076) (x111 11) 0)) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (* x1231 x117)) (= x120 0) (= (x1669 (+ x498 100)) x1068) x361 (= (x332 (x714 x1128) x967 0) x1795) (= (x1669 (+ x498 68)) x709) (or (and (= x1419 (x1669 (+ x688 x1704))) x1012) (not x1012)) (<= 0 x1219) (= x1760 (x332 (x714 x351) x213 0)) (= x1704 (x1194 x498)) (= x117 (- (/ x1009 x1337) (uninterp_frac x1009 x1337))) (= (x802 26959946667150639794667015087019630673637144422540572481103610249215 x1522) x431) (= (x802 x908 x288) x120) (= (x1669 (+ x1137 128)) x688) (= (x1669 (+ 76450787359836037641860180984291677749980919077056822294353438043884394381312 x431)) x871) (= (x585 x1760) x1231) (= (x332 (x714 x351) x1368 0) x1660) (= x1219 (x624 x1660)) (= x1417 (- (/ x644 1000000000000000000) (uninterp_frac x644 1000000000000000000))) (= x1219 x1082) (or (and (= 0 x1021) (not x1211)) (and x1211 (= (< 32 x1704) x777) (or (and (= 32 x1021) (not x777)) (and (= (x1669 (+ x498 64)) x1817) (or (and (= (x1863 x1576) x742) (= (< 96 x1704) x1428) (or (and (not x1428) (= 96 x1021)) (and (= x1393 (> x1704 128)) (not x1393) (= (x1863 x1700) x354) (= x1700 (x1669 (+ x498 128))) x1428 (= x1174 (x1669 (+ x1068 160))) (= 128 x1021))) x1131 (= (x1669 (+ 96 x498)) x1576) (= (x1669 (+ 128 x1068)) x657)) (and (= x1021 64) (not x1131))) (= x811 (x1863 x1817)) (= (< 64 x1704) x1131) (= x1758 (x1669 (+ 96 x1068))) x777)) (= x94 x755) (= x1263 (x1863 x755)) (= x688 x1582))) (= (x1669 (+ 100 x1117)) x1137) (= (x332 (x714 x649) x1795 0) x1368) (= x213 (x332 (x714 x1128) x1752 0)) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x1829 x1219)) (= (> x613 0) x361) (= x1012 (< x1704 x1021)) (= (* x117 x1231) x644) (= 1 x908) (= x1522 (x151 x94)) (<= x1219 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x967 (x332 (x714 x1076) (x111 4) 0)) (= x1211 (> x1704 0)) (= x949 (+ x266 x1082)) (> x1337 0) (= x335 (x1448 (- x1068 x498)))) x1518) (=> x1266 x322)))))
(assert (x317 x1167))
(assert (x920 x262))
(assert (x317 x742))
(assert (= (x631 (- x1740 x1777)) (x822 (- x1740 x1777))))
(assert (= (x615 (x714 x691)) x691))
(assert (= (and x1481 (not x338)) x86))
(assert (x317 x1621))
(assert (x317 x685))
(assert (x317 x1720))
(assert (= x168 x824))
(assert (x920 x1061))
(assert (x317 x1285))
(assert (x317 x1646))
(assert (x317 x77))
(assert (x317 x167))
(assert (= x185 (=> (= x207 (> x821 1)) (and (=> (not x207) x726) (=> (and (>= x596 0) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1277) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1277) (= (x1869 x22) x915) (= x1076 (x970 196)) (<= 0 x749) (<= x1277 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x515) (<= x1128 1461501637330902918203684832716283019655932542975) (>= 1461501637330902918203684832716283019655932542975 x649) (< 1 x1621) (= x664 (= x1470 0)) (= x1303 (x332 (x714 x1128) x931 0)) (not (> x1076 x1277)) (or (and (= x984 (+ x941 x1523)) (= (x1778 x279) x888) (< (* x515 x1470) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x888 x941) (= x1858 x166) (not x664) (<= x888 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= 0 x888) (< (+ x888 x1858) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= (x332 (x714 x1128) x521 0) x279) (= x521 (x332 (x714 x1076) (x111 5) 0)) (= x1523 x1858) (= (* x1470 x515) x166)) x664) (= x616 (x332 (x714 x1076) (x111 9) 0)) (> x1108 1) (>= x1019 0) (= x1591 (= x749 0)) (>= x730 0) (>= x1277 0) (= (x332 (x714 x1076) (x111 10) 0) x931) (= x872 (x1669 (+ 64 x929))) (= x1823 (x332 (x714 x1128) x616 0)) (< x1076 x1277) (not (< x1277 x1076)) (or (and (= (< x764 x1122) x1484) (= (= x1019 0) x1192) (= (x1869 x22) x764) (or (and (= (x1869 x22) x496) x1484 (= x838 x496)) (and (not x1484) (= x838 x1122))) x1025 (or (and (= (x1448 (- x838 x1019)) x857) (not (< x838 x1019)) (= (ite (> 604800 x857) x857 604800) x1683) (= x1470 x1683) (= x1086 604800) (not x1192)) (and x1192 (not (> x44 x838)) (= x892 (x1448 (- x838 x44))) (= x892 x1470) (= x44 (x410 x1117))))) (and (= x1470 0) (not x1025))) (= x566 (x332 (x714 x1076) (x111 6) 0)) (> x98 1) (<= 0 x515) (= (x1697 x286) x1019) (= (x970 x21) x649) (= (x1669 (+ 64 x1740)) x1532) (= x21 (x1669 (+ 64 x1452))) (<= x730 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= x351 1461501637330902918203684832716283019655932542975) (= (> x915 x1019) x1025) (= x498 (x1669 (+ 64 x1117))) (>= x1277 0) (= x438 (x1833 x1301 1)) (= (x970 x872) x1128) (= (x1669 (+ x1117 32)) x22) (= x473 (x332 (x714 x649) x1823 0)) (= x730 (x33 x1301)) (> x821 1) (or (and (= x1117 x1398) x1591) (and (= (x332 (x714 x649) x731 0) x1115) (= x182 (x1833 x876 1)) (or (and (or (and (= (x1471 x511) x1504) x1785 (= x1504 x177)) (and (not x1785) (= x177 x1122))) (or (and (= x1493 x1285) (= x503 (x1448 (- x177 x455))) (= (ite (> 604800 x503) x503 604800) x1493) (= 604800 x69) (not x1268) (not (> x455 x177))) (and (= (x1448 (- x177 x1101)) x255) (= (x567 x1398) x1101) (= x255 x1285) (not (< x177 x1101)) x1268)) (= (= 0 x455) x1268) (= x353 (x1471 x511)) (= x1785 (< x353 x1122)) x1074) (and (= 0 x1285) (not x1074))) (= (= x1285 0) x999) (= (x332 (x714 x1128) x1623 0) x731) (not x1591) (= (x1067 x1115) x455) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1440) (= (x1669 (+ 64 x1398)) x737) (<= x1258 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x391 (x1471 x511)) (= x1623 (x332 (x714 x1076) (x111 7) 0)) (<= 0 x455) (>= x1258 0) (= (x33 x876) x1258) (= (> x391 x455) x1074) (= x876 (x332 (x714 x1076) (x111 1) 0)) (= x1440 (x1425 x182)) (or (and x999 (= x737 x1117)) (and (= x45 (x332 (x714 x1128) x1793 0)) (= (* x749 x1285) x1545) (<= x783 115792089237316195423570985008687907853269984665640564039457584007913129639935) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (* x749 x1285)) (not x999) (= (x332 (x714 x649) x45 0) x1052) (= (x332 (x714 x1076) (x111 3) 0) x1793) (= x737 x1117) (<= 0 x783) (= (x1364 x1052) x783) (= x783 x284) (= x1221 (+ x284 x1461)) (< (+ x578 x783) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x1545 x578) (= x578 x1461))) (<= x455 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x511 (x1669 (+ x1398 32))) (>= x1440 0))) (= (x276 x473) x749) (= (x332 (x714 x1128) x566 0) x286) x207 (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1019) (= (x332 (x714 x1076) (x111 1) 0) x1301) (>= x1277 0) (= x596 (x1425 x438)) (<= x749 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x351 (x970 x1532)) (<= x596 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x515 (x1674 x1303))) x1521)))))
(assert (x317 x1398))
(assert (x317 x721))
(assert (= x322 (=> (and (not x859) (= (> x821 2) x859)) x726)))
(assert (x317 x162))
(assert (x317 x592))
(assert (x920 x1391))
(assert (x317 x568))
(assert (x317 x1667))
(assert (= (x714 1000000000000000000) (x111 1000000000000000000)))
(assert (= (x615 (x714 x1142)) x1142))
(assert (x317 x732))
(assert (x317 x1087))
(assert (x317 x1219))
(assert (x317 x1452))
(assert (x317 x1730))
(assert (x317 x940))
(assert (x317 x29))
(assert (x317 x1083))
(assert (x317 x1231))
(assert (= (x714 274184521717934524641157099916833587206) (x111 274184521717934524641157099916833587206)))
(assert (x317 x1497))
(assert (x317 x1504))
(assert (x1407 1461501637330902918203684832716283019655932542975))
(assert (= x13 (or (and x913 x9) x659)))
(assert (=> (< (- x990 1) 10000) (= (x111 x990) (x714 x990))))
(assert (x920 x359))
(assert (= (x822 (- x21 x1777)) (x631 (- x21 x1777))))
(assert (= (=> (and (or (and (= (x1669 (+ x1068 96)) x482) (not x155) (= x70 x688)) (and x155 (= x70 96))) (= x988 (x1399 x70)) (or (not x922) (and (not (or (> x175 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= true (<= x175 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (< x175 32)))) (= (x1399 x70) x175) x922 (= (= x800 0) x1141) (= x291 (x1669 (+ 32 x70))) (> x800 0) (= x800 x1726) (= x1389 (not x1141)) (= (ite x1389 1 0) x1726) (= (x1056 x291) x800))) (= x1870 (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1724 (x714 274184521717934524641157099916833587206)))) (= (> x988 0) x922) (= (x1002 (x714 x351)) x525) (= (= x1348 0) x155) (not (= 0 x725)) x1870) x322) x1784))
(assert (= (x615 (x714 x1757)) x1757))
(assert (x920 x841))
(assert (x317 x741))
(assert (x317 x856))
(assert (x317 x783))
(assert (x317 x613))
(assert (= 243137395 (x615 (x111 243137395))))
(assert (= (x111 649617121) (x714 649617121)))
(assert (x317 x1284))
(assert (= x225 (=> (and (not (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x732) (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x732)) (> 32 x732)))) (= x1644 x563) (= x1644 (x801 128)) (not (= x1466 0))) (=> (and (= x358 x1748) (= x524 x563) (= x1577 x1200) (= x319 x1179) (= x95 x267) (= x957 x1282) (= x466 x478) (= x622 x154) (= x1396 x1803)) x412))))
(assert (= x102 (x615 (x714 x102))))
(assert (x317 x1213))
(assert (= (x714 2061678023) (x111 2061678023)))
(assert (= x1490 (=> (and (= x1267 (x332 (x714 x1040) (x111 4) 0)) (>= x1526 0) (<= 0 x1840) (not (< x1526 x1251)) (= x1487 (x1448 (- x1526 x1251))) (<= 0 x1251) (= x148 (= 0 x1487)) (= x1311 (x332 (x714 x1857) x1267 0)) (= (x332 (x714 x32) x1177 0) x193) (= x314 (x332 (x714 x1040) (x111 3) 0)) (= (x332 (x714 x32) x1311 0) x415) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1840) (= (x1364 x193) x1526) (= x454 (x332 (x714 x1040) (x111 5) 0)) (= (x332 (x714 x1857) x314 0) x1177) (= (x332 (x714 x1087) x415 0) x1597) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1251) (= x1251 (x343 x1597)) (= x78 (x332 (x714 x1857) x454 0)) (= x1840 (x1778 x78)) (<= x1526 115792089237316195423570985008687907853269984665640564039457584007913129639935)) (and (=> (and (= x1773 (x1669 (+ 76450787359836037641860180984291677749980919077056822294353438043884394381312 x180))) x944 (= x1119 (x1669 (+ x1759 128))) (= x981 (x1448 (- x1397 32))) (= x43 (x332 (x714 x32) x494 0)) (= (x585 x672) x856) (= (x1669 (+ 96 x1380)) x1512) (= x672 (x332 (x714 x1087) x186 0)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x856) (= x1759 (x1669 (+ 100 x1380))) (= x1536 (x332 (x714 x1040) (x111 4) 0)) (= 0 x1801) (= (x332 (x714 x1040) (x111 11) 0) x705) (= (+ x746 x775) x108) (= x846 0) (< 0 x1840) (= x887 (- (/ x1658 1000000000000000000) (uninterp_frac x1658 1000000000000000000))) (= x1271 (x303 x1173)) (= x464 (x1564 x1512)) (= (> x106 x1271) x1029) (= (x1669 (+ 68 x1173)) x89) (>= x63 0) (= (x332 (x714 x1857) x705 0) x186) (< (+ x63 x1487) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (* x856 x183)) (= (x1669 (+ 100 x1173)) x419) (= x494 (x332 (x714 x1857) x1536 0)) (= x883 (x20 (x714 x1087))) (= x678 (> x1271 0)) (= x1801 (x802 x239 x1618)) (= (< 0 x883) x944) (or (and (= (x1669 (+ x1119 x1271)) x1214) x1029) (not x1029)) (= x1487 x746) (= x239 1) (= (x343 x1828) x63) (= x1624 (uninterp_mod (* x1487 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (not x148) (= x1397 (x1448 (- x419 x1173))) (= x183 (- (/ x1624 x1840) (uninterp_frac x1624 x1840))) (= x1618 (ite (< 115792089237316195423570985008687907853269984665640564039457 x1487) 1 0)) (= (* x183 x856) x1658) (or (and (not x678) (= x106 0)) (and (= x1497 (x696 x1836)) x678 (or (and (= x923 (x1669 (+ x1173 64))) (or (and (or (and (not x523) (= x106 96)) (and (= (x696 x1145) x1659) x523 (= (< 128 x1271) x382) (= x42 (x1669 (+ 160 x419))) (= 128 x106) (not x382) (= x1145 (x1669 (+ x1173 128))))) (= (x696 x1710) x753) (= (< 96 x1271) x523) (= x71 (x1669 (+ 128 x419))) x560 (= (x1669 (+ x1173 96)) x1710)) (and (= x106 64) (not x560))) (= (< 64 x1271) x560) (= x96 (x1669 (+ x419 96))) x552 (= x1596 (x696 x923))) (and (= 32 x106) (not x552))) (= x1512 x1836) (= x1119 x974) (= (> x1271 32) x552))) (= x63 x775) (= x180 (x802 26959946667150639794667015087019630673637144422540572481103610249215 x464)) (>= x856 0) (= (x332 (x714 x1087) x43 0) x1828) (<= x63 115792089237316195423570985008687907853269984665640564039457584007913129639935)) x671) (=> (and x148 (= x1173 x1398)) x185)))))
(assert (x317 x547))
(assert (x317 x102))
(assert (x317 x564))
(assert (x317 x764))
(assert (= x474 (x615 (x714 x474))))
(assert (= 0 (x907 x447)))
(assert (x317 x642))
(assert (= x912 (and x874 (not x405))))
(assert (= 2293535753 (x615 (x111 2293535753))))
(assert (x317 x300))
(assert (= (x111 274184521717934524641157099916833587214) (x714 274184521717934524641157099916833587214)))
(assert (x317 x288))
(assert (x317 x1304))
(assert (x317 x471))
(assert (= (x615 (x714 x1126)) x1126))
(assert (x317 x573))
(assert (= 0 (x880 x1411)))
(assert (=> (< (- x1765 1) 10000) (= (x111 x1765) (x714 x1765))))
(assert (= x1741 x913))
(assert (x317 x246))
(assert (x317 x858))
(assert (x317 x52))
(assert (= (x111 26959946667150639794667015087019630673637144422540572481103610249215) (x714 26959946667150639794667015087019630673637144422540572481103610249215)))
(assert (x317 x298))
(assert (x317 x11))
(assert (x317 x1251))
(assert (x317 x1319))
(assert (x317 x1353))
(assert (x317 x121))
(assert (x317 x1384))
(assert (x317 x356))
(assert (x317 x56))
(assert (x317 x1842))
(assert (x317 x353))
(assert (x317 x1609))
(assert (x317 x95))
(assert (x317 x209))
(assert (=> (< (- x703 1) 10000) (= (x111 x703) (x714 x703))))
(assert (x317 x707))
(assert (x317 x239))
(assert (= (x714 468353030) (x111 468353030)))
(assert (x317 x1864))
(assert (x317 x1340))
(assert (x317 x1113))
(assert (x317 x301))
(assert (x317 x608))
(assert (= (x1078 (- 164 x51)) (x100 (- 164 x51))))
(assert (= (x615 (x714 x153)) x153))
(assert (x920 x1765))
(assert (x317 x1765))
(assert (x317 x1042))
(assert (= (x615 (x714 x1767)) x1767))
(assert (x920 x1767))
(assert (x317 x1423))
(assert (x1407 x1612))
(assert (x317 x98))
(assert (x317 x1419))
(assert (x317 x169))
(assert (x317 x1223))
(assert (x317 x1332))
(assert (= true x750))
(assert (x1407 x789))
(assert (x317 x1715))
(assert (x317 x1565))
(assert (x317 x1810))
(assert (= 115792089237316195423570985008687907853269984665640564039457 (x615 (x111 115792089237316195423570985008687907853269984665640564039457))))
(assert (x317 x634))
(assert (= 1461501637330902918203684832716283019655932542976 (x615 (x111 1461501637330902918203684832716283019655932542976))))
(assert (x317 x545))
(assert (= 0 (x1458 x1498)))
(assert (= (x615 (x714 x703)) x703))
(assert (= x1472 (x615 (x714 x1472))))
(assert (x317 x542))
(assert (x317 x1034))
(assert (x317 x987))
(assert (x317 x459))
(assert (x317 x838))
(assert (x317 x70))
(assert (x317 x1712))
(assert (x317 x1189))
(assert (= (x615 (x714 x1325)) x1325))
(assert (x317 x1108))
(assert (= (x615 (x714 x1685)) x1685))
(assert (x317 x1187))
(assert (= (=> (and (= x397 468353030) (>= 1461501637330902918203684832716283019655932542975 x1701) (< x397 2293535753) (< x397 911411945) (= x773 128) (< 0 x202) (not (> 468353030 x397)) (>= 1461501637330902918203684832716283019655932542975 x656) (= (= 274184521717934524641157099916833587218 x1701) x779) (= (x20 (x714 274184521717934524641157099916833587206)) x202)) (and (=> (and (not x1477) (= (x893 x787) x1321) x779 (>= x1321 0) (<= x1321 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x787 (x332 (x714 x656) (x111 1) 0)) (= x732 32) (= x640 (x20 (x714 274184521717934524641157099916833587218))) (> x640 0) (not (= x459 826074471)) (<= x765 1461501637330902918203684832716283019655932542975) (= 36 x1707) (not (= 649617121 x459)) (= x1466 1) (= x212 50942633119752846454219349998365661925608737367104304655302372697894809501696) (= x765 x656) (= (x1448 (- x1707 4)) x115) (= x1707 36) (not (> 4 x1707)) (= 1889567281 x459) (= x1477 (or (and (= true (<= x115 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (< x115 32)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x115))) (not (> 649617121 x459))) x225) (=> (not x779) x1438))) x141))
(assert (=> (< (- x474 1) 10000) (= (x714 x474) (x111 x474))))
(assert (x317 x619))
(assert (x317 x1293))
(assert (x317 x1372))
(assert (= (and x930 (not x609)) x1432))
(assert (x317 x491))
(assert (x317 x697))
(assert (= (x1778 x809) (ite (and x851 x1747 x1711) (x1203 x809) (x1157 x809))))
(assert (= (x714 1986467848) (x111 1986467848)))
(assert (=> (< (- x153 1) 10000) (= (x714 x153) (x111 x153))))
(assert (x536 x1522 x917))
(assert (= 0 (x720 x70)))
(assert (x317 x1592))
(assert (= (x111 18446744073709551615) (x714 18446744073709551615)))
(assert (= (x615 (x714 x501)) x501))
(assert (x317 x1344))
(assert (x317 x1746))
(assert (= (x714 604800) (x111 604800)))
(assert (= (x615 (x714 x1318)) x1318))
(assert (x317 x289))
(assert (x317 x830))
(assert (= (x714 115792089237316195423570985008687907853269984665640564039457584007913129639935) (x111 115792089237316195423570985008687907853269984665640564039457584007913129639935)))
(assert (x317 x737))
(assert (x317 x1600))
(assert (= (x615 (x714 x792)) x792))
(assert (x317 x993))
(assert (x317 x51))
(assert (x317 x1165))
(assert (=> (< (- x1087 1) 10000) (= (x714 x1087) (x111 x1087))))
(assert (x317 x1871))
(assert (=> (< (- x1318 1) 10000) (= (x111 x1318) (x714 x1318))))
(assert (x317 x1160))
(assert (x317 x1622))
(assert (x317 x825))
(assert (x317 x968))
(assert (x317 x657))
(assert (= (x615 (x714 x685)) x685))
(assert (x317 x1815))
(assert (x317 x1489))
(assert (x317 x152))
(assert (x317 x482))
(assert (x317 x537))
(assert (x317 x899))
(assert (= (x615 (x714 x649)) x649))
(assert (x1407 x829))
(assert (x317 x1797))
(assert (= (x615 (x714 x262)) x262))
(assert (x317 x92))
(assert (x317 x1487))
(assert (x317 x1144))
(assert (x317 x450))
(assert (x317 x1822))
(assert (x317 x589))
(assert (= (x1555 x597) (ite x659 (ite (and x849 x1377) (x1774 x597) (x921 x597)) (x921 x597))))
(assert (x317 x1826))
(assert (= x268 (or x1098 (and x860 x148))))
(assert (x317 x679))
(assert (= x1359 (x615 (x714 x1359))))
(assert (=> (> (+ 10000 1) x1767) (= (x111 x1767) (x714 x1767))))
(assert (= (x822 (- x1532 x1777)) (x631 (- x1532 x1777))))
(assert (= (or x1790 (and x911 x1266)) x1507))
(assert (x317 x1453))
(assert (x317 x373))
(assert (x317 x661))
(assert (x920 x224))
(assert (x317 x1334))
(assert (= x1790 (or (and x338 x1481) (and x1222 x403))))
(assert (x317 x214))
(assert (x317 x357))
(assert (x1407 x531))
(assert (x317 x109))
(assert (= (and (not x238) x757) x1677))
(assert (x317 x1734))
(assert (x317 x1282))
(assert (x317 x1327))
(assert (x317 x163))
(assert (x317 x478))
(assert (x317 x1287))
(assert (x317 x1678))
(assert (x317 x887))
(assert (= x531 (x615 (x714 x531))))
(assert (= (and x268 x207) x911))
(assert (= (=> (= x609 (= x1770 274184521717934524641157099916833587214)) (and (=> (not x609) x131) (=> (and (= x1551 (x475 x366)) (= x1871 (x1448 (- x1236 4))) (= x1675 274184521717934524641157099916833587206) (not x641) (= 68 x1236) (= (x252 x814) x1106) (= x171 x449) (= (x20 (x714 274184521717934524641157099916833587214)) x247) (not x302) (= x171 x1560) (not (> 4 x1236)) (= 274184521717934524641157099916833587206 x648) (= (x332 (x714 274184521717934524641157099916833587206) (x111 1) 0) x1717) (not (= 1889567281 x241)) (<= x1757 1461501637330902918203684832716283019655932542975) (not x713) x609 (not x1413) (= x774 32) (= x1757 x345) (not (= x241 826074471)) (= x902 x1106) (not (= x241 649617121)) (= x449 x1862) (= x641 (or (and (< x1871 64) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1871) true)) (> x1871 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (= (x332 (x714 x1757) (x111 1) 0) x814) (> x247 0) (= x1822 x1236) (= x557 76450787359836037641860180984291677749980919077056822294353438043884394381312) (>= x1106 0) (= x423 (x332 (x714 x1757) (x111 1) 0)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1551) (= x208 x1757) (= x1244 (x1448 (- x1551 x449))) (= x241 2835717307) (>= x1551 0) (<= x1106 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x300 (+ x902 x1560)) (= x366 (x332 (x714 274184521717934524641157099916833587206) (x111 1) 0)) (= (< x1551 x171) x1413) (= x302 (<= 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x1106 x171))) (= x713 (> x449 x1551)) (not (> 649617121 x241)) (not (= x241 2514000705)) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x171 x1106)) (= x738 1)) x328))) x242))
(assert (x317 x1744))
(assert (x317 x495))
(assert (x317 x754))
(assert (= (x822 (- x465 x1777)) (x631 (- x465 x1777))))
(assert (x317 x916))
(assert (x317 x614))
(assert (x317 x1550))
(assert (x317 x135))
(assert (x317 x1244))
(assert (x317 x1768))
(assert (x317 x120))
(assert (x317 x1190))
(assert (x317 x759))
(assert (x1407 x1618))
(assert (x317 x1179))
(assert (x317 x1318))
(assert (x317 x1630))
(assert (x317 x1117))
(assert (x317 x150))
(assert (x317 x243))
(assert (x317 x1009))
(assert (x317 x571))
(assert (x317 x235))
(assert (x317 x1207))
(assert (x920 x1333))
(assert (x317 x548))
(assert (= 0 (x1668 x145)))
(assert (x317 x811))
(assert (x317 x1230))
(assert (x317 x335))
(assert (x317 x656))
(assert (= x990 (x615 (x714 x990))))
(assert (x317 x202))
(assert (= (x111 115792089237316195423570985008687907853269984665640564039457) (x714 115792089237316195423570985008687907853269984665640564039457)))
(assert (x317 x1237))
(assert (x920 x32))
(assert (= (=> (= (= x1701 274184521717934524641157099916833587214) x405) (and (=> (and (not x329) (= x1563 (x469 x1310)) (= (or (and (> 32 x1096) (= (<= x1096 57896044618658097711785492504343953926634992332820282019728792003956564819967) true)) (> x1096 57896044618658097711785492504343953926634992332820282019728792003956564819967)) x329) (= (x1448 (- x198 4)) x1096) (= x656 x1394) (> x163 0) (= (x332 (x714 x656) (x111 1) 0) x1310) (= 36 x198) (= 1 x1466) (= x163 (x20 (x714 274184521717934524641157099916833587214))) x405 (= 36 x198) (not (< x1319 649617121)) (<= 0 x1563) (not (= 649617121 x1319)) (not (= x1319 826074471)) (= x1423 50942633119752846454219349998365661925608737367104304655302372697894809501696) (<= x1563 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= 1889567281 x1319) (= 32 x732) (not (< x198 4)) (<= x1394 1461501637330902918203684832716283019655932542975)) x225) (=> (not x405) x520))) x1438))
(assert (x317 x747))
(assert (= (and x911 (not x1266)) x1222))
(assert (= x1005 (=> (and (= (> x795 0) x371) (= (x1441 (x714 274184521717934524641157099916833587206)) x1872) (= x350 x1398) (or (and (= (ite x8 1 0) x1859) (= (x1506 x1486) x968) (= x246 (x600 x320)) (= x1859 x968) x371 (= x1486 (x1669 (+ x320 32))) (not (or (and (= (<= x246 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (< x246 32)) (> x246 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (> x968 0) (= x8 (not x1530)) (= (= 0 x968) x1530)) (not x371)) (= x795 (x600 x320)) (= (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1441 (x714 274184521717934524641157099916833587206))) x989) (or (and (= (x802 115792089237316195423570985008687907853269984665640564039457584007913129639904 x77) x1060) (= x320 x1119) (= x350 x937) (= (x1669 (+ x1060 x1119)) x937) (= x144 (x1669 (+ 96 x419))) (= x77 (x1669 (+ x697 63))) (not x339)) (and (= x350 x1119) (= x320 96) x339)) (= x1834 (x1390 (x714 x1087))) (= x339 (= 0 x697)) x989 (not (= 0 x1706))) x185)))
(assert (x317 x789))
(assert (x317 x1812))
(assert (= (x615 (x714 274184521717934524641157099916833587206)) 274184521717934524641157099916833587206))
(assert (=> (< (- x637 1) 10000) (= (x714 x637) (x111 x637))))
(assert (x317 x1128))
(assert (x317 x1155))
(assert (x317 x870))
(assert (= (x714 2211524764) (x111 2211524764)))
(assert (= (x822 (- 132 x1777)) (x631 (- 132 x1777))))
(assert (= x682 (x615 (x714 x682))))
(assert (x317 x117))
(assert (not x368))
(assert (x317 x418))
(assert (x317 x1867))
(assert (x317 x449))
(assert (x317 x359))
(assert (x317 x281))
(assert (= (x822 (- 196 x1777)) (x631 (- 196 x1777))))
(assert (= (+ (x615 x19) 1) (x615 (x1833 x19 1))))
(assert (x785 x109 x833))
(assert (x317 x1563))
(assert (x920 x458))
(assert (x920 x1010))
(assert (x317 x1047))
(assert (x317 x330))
(assert (x920 x1040))
(assert (= (x615 (x714 x547)) x547))
(assert (x317 x263))
(assert (x317 x1854))
(assert (x317 x658))
(assert (= (x559 x1544) (ite (and x860 x148) (x921 x1544) (ite (and x1682 x1195) (x599 x1544) (x921 x1544)))))
(assert (x317 x1665))
(assert (x317 x1457))
(assert (x317 x498))
(assert (x317 x1440))
(assert (x317 x871))
(assert (= (x675 (- 132 x1304)) (x1278 (- 132 x1304))))
(assert (x317 x1837))
(assert (x317 x1825))
(assert (x317 x649))
(assert (x317 x1339))
(assert (x920 x637))
(assert (x317 x1033))
(assert (x317 x1829))
(assert (x317 x1618))
(assert (x785 x1519 x4))
(assert (x920 x1039))
(assert (= (x1458 x1202) 0))
(assert (= (x615 (x714 x1857)) x1857))
(assert (= x671 (=> (and (= x992 (x1835 (x714 274184521717934524641157099916833587206))) (= x233 (< (x735 (x714 x1087)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= x1195 (= 274184521717934524641157099916833587218 x1087)) (= (< x411 115792089237316195423570985008687907853269984665640564039457584007913129639936) x1297) (= x130 (x735 (x714 x1087))) (= (>= x1223 0) x1329) (= x199 x1271) x1329 x1297 (= (x1835 (x714 x1087)) x411) (= x1223 (x1835 (x714 274184521717934524641157099916833587206))) x233) (and (=> (and x1195 (not (< x1284 4)) (= x983 (x332 (x714 274184521717934524641157099916833587206) (x111 1) 0)) (= 1 x1706) (= (< x118 x932) x865) (= (x332 (x714 x32) (x111 1) 0) x1381) (> x80 0) (= x959 (x332 (x714 274184521717934524641157099916833587206) (x111 1) 0)) (not x690) (= 274184521717934524641157099916833587206 x1140) (= 2835717307 x1600) (= x661 x781) (>= x1831 0) (= x823 (x332 (x714 x32) (x111 1) 0)) (= x1831 (x1015 x823)) (= x690 (<= 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x661 x1831))) (= x697 32) (= x32 x1334) (= x932 x661) (>= x118 0) (= x887 x932) (= x634 (x1448 (- x1284 4))) (not (= 826074471 x1600)) (not x611) (not (= 1889567281 x1600)) (= x1855 (+ x771 x781)) (= x80 (x20 (x714 274184521717934524641157099916833587218))) (= x1014 (x1448 (- x118 x932))) (= x1280 274184521717934524641157099916833587206) (not (= 649617121 x1600)) (= x199 x1284) (not x847) (<= x118 115792089237316195423570985008687907853269984665640564039457584007913129639935) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x1831 x661)) (not (= 2514000705 x1600)) (= (< x118 x661) x611) (= x1284 68) (<= x1831 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x118 (x921 x959)) (= (or (> x634 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (< x634 64) (= true (<= x634 57896044618658097711785492504343953926634992332820282019728792003956564819967)))) x847) (= 76450787359836037641860180984291677749980919077056822294353438043884394381312 x1849) (= x1769 x201) (= x771 x1831) (not (> 649617121 x1600)) (>= 1461501637330902918203684832716283019655932542975 x1334) (not x865)) x1005) (=> (not x1195) x1048)))))
(assert (= x824 (or (and x757 x238) (and x812 x598))))
(assert (x317 x21))
(assert (x317 x219))
(assert (= (x615 (x111 142201243)) 142201243))
(assert (x317 x234))
(assert (x317 x1474))
(assert (x317 x1380))
(assert (x920 x681))
(assert (x317 x367))
(assert (x317 x524))
(assert (x317 x629))
(assert (= x659 (or (and x849 x1377) (and x1206 x134))))
(assert (x317 x240))
(assert (x317 x1045))
(assert (x317 x400))
(assert (x317 x872))
(assert (= (x615 (x714 x1213)) x1213))
(assert (x317 x1094))
(assert (= (x884 x702) (ite (and x1741 (not x1234)) (x1587 x702) (x1203 x702))))
(assert (= (x1458 x169) 0))
(assert (= x1672 (x615 (x714 x1672))))
(assert (x317 x75))
(assert (x317 x36))
(assert (= (x558 x309) 0))
(assert (=> (> (+ 10000 1) x590) (= (x714 x590) (x111 x590))))
(assert (=> (> (+ 10000 1) x109) (= (x714 x109) (x111 x109))))
(assert (x920 x1150))
(assert (x317 x154))
(assert (x920 x1142))
(assert (x317 x1859))
(assert (=> (< (- x178 1) 10000) (= (x714 x178) (x111 x178))))
(assert (x317 x158))
(assert (= x351 (x615 (x714 x351))))
(assert (x317 x800))
(assert (x317 x84))
(assert (x317 x451))
(assert (x317 x1199))
(assert (x317 x1326))
(assert (x317 x581))
(assert (x317 x153))
(assert (x317 x190))
(assert (= (x1078 (- x465 x51)) (x100 (- x465 x51))))
(assert (x317 x1513))
(assert (x317 x419))
(assert (x317 x1816))
(assert (= x504 true))
(assert (=> (> (+ 10000 1) x1237) (= (x111 x1237) (x714 x1237))))
(assert (x317 x1659))
(assert (x317 x63))
(assert (=> (< (- x1770 1) 10000) (= (x714 x1770) (x111 x1770))))
(assert (x317 x175))
(assert (x317 x1704))
(assert (= (x1458 x653) 0))
(assert (= (x631 (- x748 x1777)) (x822 (- x748 x1777))))
(assert (x317 x1707))
(assert (= (x1364 x193) (ite (and x1747 x1711 x26) (x791 x193) (ite (and x535 x1747 (not x26) x1711) (x791 x193) (x160 x193)))))
(assert (= (x1556 (- x872 164)) (x1444 (- x872 164))))
(assert (x317 x724))
(assert (x317 x1130))
(assert (= (=> (and (>= 1461501637330902918203684832716283019655932542975 x107) (> x1279 0) (> 2293535753 x434) (= x434 468353030) (= 128 x1349) (= x1279 (x20 (x714 274184521717934524641157099916833587206))) (< x434 911411945) (<= x1472 1461501637330902918203684832716283019655932542975) (= (= x107 274184521717934524641157099916833587218) x598) (not (< x434 468353030))) (and (=> (and (= x1172 (x1448 (- x1469 4))) (= x223 (x20 (x714 274184521717934524641157099916833587218))) (not x1007) (>= x384 0) (>= 1461501637330902918203684832716283019655932542975 x1827) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x384) (= x324 1) (not (= x1561 826074471)) (= x1190 50942633119752846454219349998365661925608737367104304655302372697894809501696) (= x1007 (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1172) (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1172)) (> 32 x1172)))) (not (< x1561 649617121)) (= x1561 1889567281) (= x384 (x1308 x645)) (not (= 649617121 x1561)) (= x979 32) (= (x332 (x714 x1472) (x111 1) 0) x645) (not (> 4 x1469)) (= 36 x1469) (= x1827 x1472) x598 (< 0 x223) (= x1469 36)) x1151) (=> (not x598) x274))) x704))
(assert (x317 x683))
(assert (x317 x157))
(assert (= (=> (and (= x422 x656) (= x807 x1701)) x141) x1163))
(assert (= (ite x659 (ite (and x1377 x849) (x1774 x1084) (x921 x1084)) (x921 x1084)) (x1555 x1084)))
(assert (= (x205 x778) (ite (and (not x1640) (not x31) x1741) (x1638 x778) (x791 x778))))
(assert (x317 x923))
(assert (x317 x557))
(assert (x317 x71))
(assert (= (x111 76450787359836037641860180984291677749980919077056822294353438043884394381312) (x714 76450787359836037641860180984291677749980919077056822294353438043884394381312)))
(assert (x317 x1685))
(assert (= (+ (x615 x1731) 1) (x615 (x1833 x1731 1))))
(assert (x317 x1225))
(assert (x920 x1813))
(assert (= (x675 (- x465 x1304)) (x1278 (- x465 x1304))))
(assert (x317 x1062))
(assert (x317 x1577))
(assert (x317 x986))
(assert (= (x1556 (- x465 164)) (x1444 (- x465 164))))
(assert (x317 x892))
(assert (= (x615 (x111 1889567281)) 1889567281))
(assert (x317 x1483))
(assert (= 0 (x674 x1836)))
(assert (x317 x937))
(assert (x317 x89))
(assert (=> (> (+ 10000 1) x656) (= (x714 x656) (x111 x656))))
(assert (x317 x1198))
(assert (=> (> (+ 10000 1) x351) (= (x714 x351) (x111 x351))))
(assert (= x860 (and x1747 x1711)))
(assert (= 274184521717934524641157099916833587218 (x615 (x714 274184521717934524641157099916833587218))))
(assert (x317 x212))
(assert (= 0 (x1121 x564)))
(assert (x317 x1321))
(assert (x317 x1120))
(assert (=> (> (+ 10000 1) x547) (= (x714 x547) (x111 x547))))
(assert (x317 x392))
(assert (x317 x315))
(assert (x317 x22))
(assert (x317 x458))
(assert (= (x615 (x714 x656)) x656))
(assert (= (x1444 0) (x1556 0)))
(assert (= (x714 50942633119752846454219349998365661925608737367104304655302372697894809501696) (x111 50942633119752846454219349998365661925608737367104304655302372697894809501696)))
(assert (x317 x1496))
(assert (= (x100 (- x1452 x51)) (x1078 (- x1452 x51))))
(assert (x317 x1202))
(assert (x920 x531))
(assert (x317 x606))
(assert (= (x1444 (- x1532 164)) (x1556 (- x1532 164))))
(assert (=> (> (+ 10000 1) x1061) (= (x714 x1061) (x111 x1061))))
(assert (x317 x915))
(assert (x317 x1584))
(assert (x317 x1411))
(assert (x1407 x293))
(assert (x317 x677))
(assert (= x1237 (x615 (x714 x1237))))
(assert (x317 x752))
(assert (= (x615 (x714 x488)) x488))
(assert (= (or (and (not x1747) x1711) (and x268 (not x207)) x1507) x694))
(assert (x317 x80))
(assert (= (x1121 x1299) 0))
(assert (= (x615 (x1833 x245 1)) (+ (x615 x245) 1)))
(assert (x317 x1675))
(assert (x317 x1096))
(assert (x317 x108))
(assert (x317 x853))
(assert (= (x111 142201243) (x714 142201243)))
(assert (=> (< (- x493 1) 10000) (= (x714 x493) (x111 x493))))
(assert (x317 x1661))
(assert (x317 x360))
(assert (= x757 (and x812 (not x598))))
(assert (x317 x1355))
(assert (= (x615 (x714 x1087)) x1087))
(assert (x317 x1532))
(assert (x317 x145))
(assert (x317 x1337))
(assert (x317 x297))
(assert (x317 x1402))
(assert (x1407 x77))
(assert (x317 x32))
(assert (x317 x1470))
(assert (x317 x703))
(assert (x317 x1571))
(assert (x317 x981))
(assert (x317 x228))
(assert (x317 x1635))
(assert (= x1129 x1741))
(assert (x317 x1224))
(assert (x317 x942))
(assert (x920 x1472))
(assert (= (x615 (x111 115792089237316195423570985008687907853269984665640564039457584007913129639935)) 115792089237316195423570985008687907853269984665640564039457584007913129639935))
(assert (x920 x1207))
(assert (x317 x1060))
(assert (x317 x1627))
(assert (x317 x411))
(assert (=> (< (- x488 1) 10000) (= (x111 x488) (x714 x488))))
(assert (x920 x682))
(assert (x920 x501))
(assert (x785 x184 x1366))
(assert (= (x615 (x714 x1061)) x1061))
(assert (x317 x990))
(assert (x317 x180))
(assert (= (x615 (x714 x1076)) x1076))
(assert (= (x615 (x714 x224)) x224))
(assert (x317 x1204))
(assert (x317 x680))
(assert (x317 x500))
(assert (x317 x1624))
(assert (x317 x464))
(assert (x317 x1436))
(assert (x317 x1221))
(assert (x317 x5))
(assert (x317 x1701))
(assert (x317 x927))
(assert (x317 x1404))
(assert (x317 x1001))
(assert (x920 x306))
(assert (x785 x1030 x862))
(assert (x317 x974))
(assert (x317 x653))
(assert (= (ite (and x148 x860) (x921 x961) (ite (and x1195 x1682) (x599 x961) (x921 x961))) (x559 x961)))
(assert (x317 x1180))
(assert (x317 x864))
(assert (=> (< (- x1857 1) 10000) (= (x111 x1857) (x714 x1857))))
(assert (x317 x1400))
(assert (= (x884 x607) (ite (and (not x1234) x1741) (x1587 x607) (x1203 x607))))
(assert (x317 x310))
(assert (x317 x1252))
(assert (x317 x96))
(assert (x317 x1277))
(assert (x317 x106))
(assert (x317 x1010))
(assert (x317 x107))
(assert (x317 x306))
(assert (= (x615 (x714 x1531)) x1531))
(assert (= x1040 (x615 (x714 x1040))))
(assert (= x1780 true))
(assert (= (=> (= x134 (= 274184521717934524641157099916833587214 x1391)) (and (=> (and (<= x1340 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= 1461501637330902918203684832716283019655932542975 x1767) (= x1094 32) (= (+ x1689 x165) x1382) (not x955) (not (< x519 4)) (= 274184521717934524641157099916833587206 x1446) (= x40 (x332 (x714 x1767) (x111 1) 0)) (= x1607 (x332 (x714 x1767) (x111 1) 0)) (>= x1340 0) (< (+ x1340 x1852) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= (x1448 (- x763 x1414)) x652) (= x261 (<= 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x1852 x1340))) (= x1533 x1414) (not (= 649617121 x1825)) (= x165 x1340) (not (= 2514000705 x1825)) (not (= x1825 826074471)) (= x1852 x1414) (= x1340 (x1781 x40)) (= x1852 x1689) (= x1825 2835717307) (not (= x1825 1889567281)) (= (or (> x1204 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (> 64 x1204) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1204) true))) x751) (= (x1811 x1350) x763) (not x839) (= x1692 274184521717934524641157099916833587206) (= x453 x1767) (= x519 68) (> x1353 0) (= x1601 (x332 (x714 274184521717934524641157099916833587206) (x111 1) 0)) (not x751) (= 76450787359836037641860180984291677749980919077056822294353438043884394381312 x313) (>= x763 0) (= x839 (< x763 x1852)) x134 (= (< x763 x1414) x955) (= 1 x754) (= (x332 (x714 274184521717934524641157099916833587206) (x111 1) 0) x1350) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x763) (= x315 x1767) (not (< x1825 649617121)) (not x261) (= x1353 (x20 (x714 274184521717934524641157099916833587214))) (= x1204 (x1448 (- x519 4))) (= x519 x1667)) x1316) (=> (not x134) x1780))) x1363))
(assert (x317 x1253))
(assert (= (x1556 (- x1740 164)) (x1444 (- x1740 164))))
(assert (x317 x1348))
(assert (= x694 x812))
(assert (x1159 x789 x1079))
(assert (= (x1556 (- x929 164)) (x1444 (- x929 164))))
(assert (x317 x1292))
(assert (x920 x178))
(assert (x317 x982))
(assert (x317 x376))
(assert (= (x714 1968616202) (x111 1968616202)))
(assert (x317 x1728))
(assert (x317 x1751))
(assert (=> (< (- x531 1) 10000) (= (x111 x531) (x714 x531))))
(assert (x317 x1873))
(assert (x317 x1228))
(assert (= x23 (x615 (x714 x23))))
(assert (= (x1556 32) (x1444 32)))
(assert (x920 x1128))
(assert (x317 x319))
(assert (x317 x596))
(assert (x317 x1299))
(assert (x317 x204))
(assert (x317 x1320))
(assert true)
(assert (x317 x988))
(assert (x317 x35))
(assert (x317 x1200))
(assert (x317 x693))
(assert (x317 x1333))
(assert (x317 x178))
(assert (x317 x1392))
(assert (x317 x867))
(assert (x317 x311))
(assert (x317 x1522))
(assert (= x1129 x750))
(assert (=> (< (- x691 1) 10000) (= (x714 x691) (x111 x691))))
(assert (x317 x1683))
(assert (x317 x1241))
(assert (= (=> (and (= x1864 x349) (= x580 (= x1617 x571)) (= x571 x524) (= x1864 x1617)) x580) x50))
(assert (x317 x38))
(assert (= (x205 x81) (ite (and (not x31) (not x1640) x1741) (x1638 x81) (x791 x81))))
(assert (= (x822 (- 164 x1777)) (x631 (- 164 x1777))))
(assert (x1159 x293 x1569))
(assert (x317 x41))
(assert (x317 x1114))
(assert (x317 x648))
(assert (x317 x327))
(assert (x317 x998))
(assert (=> (< (- x685 1) 10000) (= (x714 x685) (x111 x685))))
(assert (= (x111 243137395) (x714 243137395)))
(assert (x317 x688))
(assert (x317 x1137))
(assert (x317 x82))
(assert (x317 x452))
(assert (x317 x427))
(assert (= x368 (=> (and (>= x121 0) (<= 0 x891) x601 (= (> (x20 (x714 274184521717934524641157099916833587218)) 0) x60) (= x602 x1001) x60 (= x601 (> (x20 (x714 274184521717934524641157099916833587206)) 0)) (<= x807 1461501637330902918203684832716283019655932542975) (= x1228 (x1835 (x714 274184521717934524641157099916833587218))) (<= 0 x1224) (>= x1228 0) (<= x121 1461501637330902918203684832716283019655932542975) (<= 0 x422) (= x1070 x1685) (= x1224 (x1835 (x714 274184521717934524641157099916833587214))) (<= 0 x602) (<= 0 x807) x854 (<= 0 x834) (>= 1461501637330902918203684832716283019655932542975 x422) (>= 1461501637330902918203684832716283019655932542975 x602) (= x1318 x834) (= x301 x121) (= x891 (x1835 (x714 274184521717934524641157099916833587206))) (>= 1461501637330902918203684832716283019655932542975 x834) (= (< 0 (x20 (x714 274184521717934524641157099916833587214))) x854)) x576)))
(assert (x317 x1338))
(assert (x317 x565))
(assert (x317 x1553))
(assert (x317 x1498))
(assert (= (x111 1889567281) (x714 1889567281)))
(assert (=> (> (+ 10000 1) x1355) (= (x111 x1355) (x714 x1355))))
(assert (x317 x828))
(assert (x317 x897))
(assert (x920 x691))
(assert (x317 x164))
(assert (x317 x700))
(assert (x317 x177))
(assert (x317 x623))
(assert (x317 x44))
(assert (= (x674 x1700) 0))
(assert (= x1077 (and x1682 (not x1195))))
(assert (x317 x710))
(assert (x317 x1759))
(assert (x317 x1843))
(assert (x317 x1256))
(assert (x317 x110))
(assert (x317 x934))
(assert (x317 x773))
(assert (x920 274184521717934524641157099916833587214))
(assert (x317 x1502))
(assert (x317 x455))
(assert (x317 x1040))
(assert (x920 274184521717934524641157099916833587218))
(assert (x920 x1541))
(assert (x317 x507))
(assert (x317 x1431))
(assert (x317 x965))
(assert (x920 x1685))
(assert (x317 x1698))
(assert (x317 x1166))
(assert (x317 x1462))
(assert (=> (> (+ 10000 1) x458) (= (x111 x458) (x714 x458))))
(assert (x317 x591))
(assert (= (x615 (x111 2061678023)) 2061678023))
(assert (x317 x441))
(assert (x317 x786))
(assert (x317 x1857))
(assert (x317 x291))
(assert (x317 x1680))
(assert (= (x615 (x111 1461501637330902918203684832716283019655932542975)) 1461501637330902918203684832716283019655932542975))
(assert (x317 x1827))
(assert (= (x615 (x714 x1770)) x1770))
(assert (x920 x649))
(assert (x317 x755))
(assert (= (x674 x1512) 0))
(assert (= (x1556 (- x748 164)) (x1444 (- x748 164))))
(assert (= (x615 (x111 1986467848)) 1986467848))
(assert (= (x675 (- 164 x1304)) (x1278 (- 164 x1304))))
(assert (x920 x395))
(assert (x317 x93))
(assert (x317 x515))
(assert (x317 x1862))
(assert (= (x822 (- x1452 x1777)) (x631 (- x1452 x1777))))
(assert (x317 x699))
(assert (=> (> (+ 10000 1) x1256) (= (x111 x1256) (x714 x1256))))
(assert (= (x675 (- x532 x1304)) (x1278 (- x532 x1304))))
(assert (x920 x1857))
(assert (x317 x1692))
(assert (x317 x852))
(assert (x317 x569))
(assert (= 0 (x674 x923)))
(assert (x317 x1613))
(assert (x317 x1679))
(assert (x317 x1753))
(assert (= 468353030 (x615 (x111 468353030))))
(assert (= x900 (x615 (x714 x900))))
(assert (x1407 26959946667150639794667015087019630673637144422540572481103610249215))
(assert (x317 x1758))
(assert (x317 x718))
(assert (x317 x198))
(assert (x317 x1279))
(assert (x920 x102))
(assert (x317 x1072))
(assert (x920 x1672))
(assert (= (x615 (x111 18446744073709551615)) 18446744073709551615))
(assert (x317 x236))
(assert (x317 x1145))
(assert (x317 x1718))
(assert (x317 x1463))
(assert (x317 x1594))
(assert (x317 x496))
(assert (x317 x199))
(assert (=> (> (+ 10000 1) x1213) (= (x111 x1213) (x714 x1213))))
(assert (x317 x676))
(assert (x536 x464 x1347))
(assert (= (=> (and x810 (not (= x754 0)) (= x272 (= x1094 0)) (or (and (not x272) (= x145 x1513) (= (x1669 (+ x152 96)) x542)) (and (= x145 96) x272)) (= x1816 (x195 (x714 274184521717934524641157099916833587206))) (= x1044 (> x281 0)) (= x1385 (x995 (x714 x1391))) (= x281 (x826 x145)) (= x810 (< (x195 (x714 274184521717934524641157099916833587206)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (or (not x1044) (and (= x1665 x971) (= (ite x1092 1 0) x1665) (< 0 x971) (= x1625 (x826 x145)) (= (not x1124) x1092) x1044 (= (= 0 x971) x1124) (= (x1379 x309) x971) (not (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1625) (and (= true (<= x1625 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (> 32 x1625)))) (= x309 (x1669 (+ x145 32)))))) x745) x1316))
(assert (= x1170 true))
(assert (x1407 x288))
(assert (= x456 (=> (and (= x1539 x1822) (= (x251 (x714 274184521717934524641157099916833587206)) x1819) (= x1573 (<= 0 x870)) x1573 x374 (= x374 (< (x1123 (x714 x1770)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= (x251 (x714 274184521717934524641157099916833587206)) x870) (= (x1123 (x714 x1770)) x864) (= (x251 (x714 x1770)) x38) x27 (= x794 (= x1770 274184521717934524641157099916833587218)) (= (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 x38) x27)) (and (=> (and (= x597 (x332 (x714 274184521717934524641157099916833587206) (x111 1) 0)) (not (= 826074471 x1824)) (<= 0 x581) (= (x20 (x714 274184521717934524641157099916833587218)) x940) (= (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x158) (and (= true (<= x158 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (< x158 64))) x1641) (not x187) (<= 0 x858) (not (= 649617121 x1824)) (= x187 (< x581 x1483)) (= x1291 x858) (not (= x1824 1889567281)) (= x227 (x332 (x714 x1359) (x111 1) 0)) (= 68 x435) (= x1483 x380) (= (x1448 (- x435 4)) x158) (= x318 (> x380 x581)) (= 32 x774) (not x1641) (not (< x1824 649617121)) (= x738 1) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x858 x1483)) (not x318) (not (= x1824 2514000705)) (= x1862 x380) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x858) (= x208 x1359) (= (>= (+ x1483 x858) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x1373) (<= x1359 1461501637330902918203684832716283019655932542975) (> x940 0) x794 (not (< x435 4)) (= (x332 (x714 x1359) (x111 1) 0) x1084) (= x1824 2835717307) (= x1359 x1614) (= (x1555 x597) x581) (= 76450787359836037641860180984291677749980919077056822294353438043884394381312 x592) (= x825 274184521717934524641157099916833587206) (= x1838 (x332 (x714 274184521717934524641157099916833587206) (x111 1) 0)) (= x435 x1822) (not x1373) (= (x1595 x1084) x858) (= x1818 274184521717934524641157099916833587206) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x581) (= x1483 x869) (= x1583 (+ x869 x1291)) (= x1252 (x1448 (- x581 x380)))) x328) (=> (not x794) x242)))))
(assert (= 1968616202 (x615 (x111 1968616202))))
(assert (x317 x1383))
(assert (= x1525 x1608))
(assert (x317 x1375))
(assert (x317 x722))
(assert (x317 x387))
(assert (= 911411945 (x615 (x111 911411945))))
(assert (x317 x1533))
(assert (x317 x590))
(assert (= (x1078 (- x1532 x51)) (x100 (- x1532 x51))))
(assert (=> (> (+ 10000 1) x1126) (= (x111 x1126) (x714 x1126))))
(assert (=> (> (+ 10000 1) x1128) (= (x111 x1128) (x714 x1128))))
(assert (x1407 x1519))
(assert (x317 x1519))
(assert (x317 x25))
(assert (x920 x900))
(assert (x317 x1855))
(assert (= (x615 (x714 x841)) x841))
(assert (x317 x829))
(assert (= 115792089237316195423570985008687907853269984665640564039457584007913129639904 (x615 (x111 115792089237316195423570985008687907853269984665640564039457584007913129639904))))
(assert (x317 x313))
(assert (x317 x79))
(assert (x317 x772))
(assert (x317 x1858))
(assert (x317 x142))
(assert (x317 x682))
(assert (x317 x1476))
(assert (= (x1556 (- x532 164)) (x1444 (- x532 164))))
(assert (x317 x156))
(assert (= x1711 x1184))
(assert (x317 x1122))
(assert (x317 x46))
(assert (x317 x447))
(assert (x317 x1740))
(assert (x317 x932))
(assert (x317 x929))
(assert (x317 x836))
(assert (x317 x1569))
(assert (x920 x1318))
(assert (x317 x556))
(assert (x317 x1813))
(assert (x317 x1576))
(assert (=> (< (- x841 1) 10000) (= (x111 x841) (x714 x841))))
(assert (x317 x774))
(assert (= (x1278 (- 196 x1304)) (x675 (- 196 x1304))))
(assert (x317 x969))
(assert (x920 x474))
(assert (x317 x223))
(assert (x317 x1173))
(assert (x317 x1172))
(assert (= (x615 (x714 x553)) x553))
(assert (x317 x891))
(assert (x920 x1059))
(assert (x317 x1614))
(assert (x317 x1021))
(assert (x317 x763))
(assert (x1159 x908 x288))
(assert (x920 x547))
(assert (x317 x530))
(assert (x317 x511))
(assert (x317 x290))
(assert (x317 x55))
(assert (= 69947311 (x615 (x111 69947311))))
(assert (x920 x1531))
(assert (x317 x1456))
(assert (=> (< (- x649 1) 10000) (= (x714 x649) (x111 x649))))
(assert (x317 x1089))
(assert (x920 x228))
(assert (x317 x1208))
(assert (x317 x960))
(assert (x317 x582))
(assert (= (x714 1461501637330902918203684832716283019655932542976) (x111 1461501637330902918203684832716283019655932542976)))
(assert (= (ite (and x148 x860) (x720 x70) (x600 x70)) (x1562 x70)))
(assert (x317 x652))
(assert (x317 x1639))
(assert (=> (> (+ 10000 1) x1541) (= (x111 x1541) (x714 x1541))))
(assert (x317 x463))
(assert (=> (> (+ 10000 1) x1757) (= (x714 x1757) (x111 x1757))))
(assert (x317 x1466))
(assert (x317 x1499))
(assert (= (x615 (x1833 x876 1)) (+ (x615 x876) 1)))
(assert (x317 x1255))
(assert (x317 x147))
(assert (x317 x1424))
(assert (= (x714 87118632) (x111 87118632)))
(assert (x317 x806))
(assert (x920 x204))
(assert (x317 x924))
(assert (x317 x1547))
(assert (x1159 x239 x1618))
(assert (x317 x1263))
(assert (= (x100 (- x748 x51)) (x1078 (- x748 x51))))
(assert (= (x615 (x714 x1150)) x1150))
(assert (x317 x551))
(assert (x317 x1086))
(assert (x317 x62))
(assert (=> (> (+ 10000 1) x306) (= (x714 x306) (x111 x306))))
(assert (x317 x1391))
(assert (= (x1278 (- x21 x1304)) (x675 (- x21 x1304))))
(assert (x317 x1102))
(assert (= x32 (x615 (x714 x32))))
(assert (x317 x1848))
(assert (= (x1783 x291) (ite (and x148 x860) (x1312 x291) (x1506 x291))))
(assert (x317 x883))
(assert (x317 x1486))
(assert (x317 x1039))
(assert (= (x615 (x111 842085797)) 842085797))
(assert (= (x1312 x1486) 0))
(assert (x317 x354))
(assert (x317 x1075))
(assert (x317 x461))
(assert (x317 x1101))
(assert (= x1813 (x615 (x714 x1813))))
(assert (= (x822 (- x929 x1777)) (x631 (- x929 x1777))))
(assert (x317 x136))
(assert (x317 x948))
(assert (= (and x65 (not x191)) x1362))
(assert (x317 x1830))
(assert (x317 x1515))
(assert (= (x111 842085797) (x714 842085797)))
(assert (x317 x309))
(assert (x317 x460))
(assert (x317 x1775))
(assert (x920 x553))
(assert (= (x615 (x111 76450787359836037641860180984291677749980919077056822294353438043884394381312)) 76450787359836037641860180984291677749980919077056822294353438043884394381312))
(assert (x317 x1596))
(assert (=> (< (- x1150 1) 10000) (= (x111 x1150) (x714 x1150))))
(assert (x317 x782))
(assert (x317 x684))
(assert (x317 x1430))
(assert (= (=> (and (= (x1071 (x714 x1391)) x828) (= x1656 (x1835 (x714 274184521717934524641157099916833587206))) (= x387 (x1835 (x714 x1391))) (= x1186 (>= x1656 0)) x15 (= (x1835 (x714 274184521717934524641157099916833587206)) x7) (= x1719 (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 x387)) x1186 (= x782 x1667) (= (= 274184521717934524641157099916833587218 x1391) x1377) x1719 (= (< (x1071 (x714 x1391)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x15)) (and (=> (not x1377) x1363) (=> (and (= x1126 x1718) (= (x577 x506) x987) (= x1727 (or (> x25 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= (<= x25 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (> 64 x25)))) (not (= x897 649617121)) (= x453 x1126) (not (= 1889567281 x897)) (= (x332 (x714 274184521717934524641157099916833587206) (x111 1) 0) x1629) (= x1743 (> x481 x1491)) (= x655 (x332 (x714 x1126) (x111 1) 0)) (= (x20 (x714 274184521717934524641157099916833587218)) x450) (not (= x897 2514000705)) (not (> 649617121 x897)) (= x1094 32) (= (<= 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x481 x987)) x1066) (<= x987 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x754 1) (<= x1126 1461501637330902918203684832716283019655932542975) (= x506 (x332 (x714 x1126) (x111 1) 0)) (< (+ x481 x987) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x378 68) (= 274184521717934524641157099916833587206 x1292) (not x1395) (not (< x378 4)) (= (x1448 (- x1491 x1307)) x461) (not x1743) (= x1307 x1533) (= x25 (x1448 (- x378 4))) (<= 0 x1491) (= 76450787359836037641860180984291677749980919077056822294353438043884394381312 x934) (= x1395 (< x1491 x1307)) (= x481 x890) (= 274184521717934524641157099916833587206 x240) (= x418 (+ x890 x549)) (= x1667 x378) (not x1066) (not (= 826074471 x897)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1491) (> x450 0) (not x1727) (= x987 x549) (= (x332 (x714 274184521717934524641157099916833587206) (x111 1) 0) x140) (= x1307 x481) (= x897 2835717307) x1377 (>= x987 0) (= x1491 (x921 x1629))) x1316))) x323))
(assert (x920 x495))
(assert (x317 x1409))
(assert (=> (< (- x262 1) 10000) (= (x111 x262) (x714 x262))))
(assert (x317 x1654))
(assert (x317 x1414))
(assert (= x1333 (x615 (x714 x1333))))
(assert (x317 x1043))
(assert (x317 x1250))
(assert (x317 x184))
(assert (x317 x701))
(assert (x317 x844))
(assert (x317 x431))
(assert (x317 x94))
(assert (x317 x1664))
(assert (x317 x324))
(assert (= x849 (and x913 (not x9))))
(assert (= (x615 (x111 26959946667150639794667015087019630673637144422540572481103610249215)) 26959946667150639794667015087019630673637144422540572481103610249215))
(assert (x317 x1840))
(assert (= (=> (and (= x807 x107) (= x422 x1472)) x704) x726))
(assert (= 0 (x674 x1817)))
(assert (= (or (and x1362 x794) (and x930 x609)) x1465))
(assert (= 274184521717934524641157099916833587218 (x615 (x111 274184521717934524641157099916833587218))))
(assert (x317 x397))
(assert (x317 x1582))
(assert (= x637 (x615 (x714 x637))))
(assert (x317 x1817))
(assert (=> (> (+ 10000 1) x395) (= (x111 x395) (x714 x395))))
(assert (= (x615 (x111 649617121)) 649617121))
(assert (x317 x1226))
(assert (x317 x1749))
(assert (= (ite (and x1711 x26 x1747) (x791 x1335) (ite (and x1747 x535 x1711 (not x26)) (x791 x1335) (x160 x1335))) (x1364 x1335)))
(assert (x317 x258))
(assert (x317 x380))
(assert (x317 x308))
(assert (x317 x1298))
(assert (= 50942633119752846454219349998365661925608737367104304655302372697894809501696 (x615 (x111 50942633119752846454219349998365661925608737367104304655302372697894809501696))))
(assert (= (x720 x320) 0))
(assert (x317 x255))
(assert (= x1184 (or (and x405 x874) (and x779 x1525))))
(assert (= (x674 x1710) 0))
(assert (x317 x1142))
(assert (= (=> (and (= (x332 (x714 x1061) x67 0) x778) (= (x802 1461501637330902918203684832716283019655932542975 x109) x1256) (= (x332 (x714 x685) x541 0) x607) (<= x1453 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x662 (x332 (x714 x1207) x939 0)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1848) (= x1313 (x332 (x714 x1142) (x111 4) 0)) (= x939 (x332 (x714 x1256) x1313 0)) (= (x332 (x714 x1142) (x111 3) 0) x604) (= x67 (x332 (x714 x547) x604 0)) (not (< x1830 x1848)) (= (x958 x607) x1453) (>= x1848 0) (= x669 (x332 (x714 x1355) x662 0)) (= (x802 1461501637330902918203684832716283019655932542975 x184) x1355) (>= x1830 0) (= x1207 (x802 1461501637330902918203684832716283019655932542975 x1030)) (= x1830 (x952 x778)) (= (x332 (x714 x1142) (x111 5) 0) x541) (= (x802 1461501637330902918203684832716283019655932542975 x109) x547) (= (x1448 (- x1830 x1848)) x1540) (<= x1830 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x191 (= x1540 0)) (= (x802 1461501637330902918203684832716283019655932542975 x1030) x1061) (<= 0 x1453) (= x685 (x802 1461501637330902918203684832716283019655932542975 x109)) (= (x1645 x669) x1848)) (and (=> x191 x1163) (=> (and (not x191) (= (x1387 x1299) x1612) (= x102 (x802 1461501637330902918203684832716283019655932542975 x109)) (< (* x776 x1270) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x1237 (x802 1461501637330902918203684832716283019655932542975 x184)) (> x1453 0) (or (not x831) (and x831 (= (x1669 (+ x452 x1539)) x614))) (= (x802 1461501637330902918203684832716283019655932542975 x109) x1325) (= x772 (x1669 (+ 76450787359836037641860180984291677749980919077056822294353438043884394381312 x1332))) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x1540 x307)) (= x1569 (ite (< 115792089237316195423570985008687907853269984665640564039457 x1540) 1 0)) (= x220 (x20 (x714 x1770))) (= x831 (> x1657 x1539)) (= (x1669 (+ x157 96)) x1299) (= (x332 (x714 x1237) x1018 0) x409) (= (+ x462 x1558) x1467) (= x452 (x1669 (+ x1768 128))) (= (< 0 x220) x1008) (>= x776 0) (= (x1669 (+ 100 x507)) x608) (= (x332 (x714 x1059) x299 0) x1275) (= x710 0) (= (x802 x293 x1569) x956) x1008 (= x1332 (x802 26959946667150639794667015087019630673637144422540572481103610249215 x1612)) (= x243 (x1448 (- x79 32))) (= (x585 x1275) x776) (= (x630 x507) x1539) (= x293 1) (= x1540 x1558) (= x956 0) (= x208 (x802 1461501637330902918203684832716283019655932542975 x1030)) (= (x802 1461501637330902918203684832716283019655932542975 x184) x1770) (= x589 (x1669 (+ x507 68))) (= x306 (x802 1461501637330902918203684832716283019655932542975 x1030)) (= (< 0 x1539) x760) (= x1270 (- (/ x1630 x1453) (uninterp_frac x1630 x1453))) (= (x332 (x714 x1325) x1589 0) x1162) (= x79 (x1448 (- x608 x507))) (= x1059 (x802 1461501637330902918203684832716283019655932542975 x184)) (= x1589 (x332 (x714 x1142) (x111 4) 0)) (= x1018 (x332 (x714 x306) x1162 0)) (<= x776 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x1768 (x1669 (+ 100 x157))) (= x1027 (* x776 x1270)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x307) (= (x332 (x714 x1142) (x111 11) 0) x575) (<= 0 x307) (= (x332 (x714 x102) x575 0) x299) (= (x1645 x409) x307) (or (and x760 (= x1149 x452) (or (and (= (x1669 (+ x507 64)) x982) (= (< 64 x1539) x390) (= (x1669 (+ x608 96)) x1615) x815 (or (and (= x1657 64) (not x390)) (and (= (x534 x835) x82) x390 (= (> x1539 96) x1611) (= x1843 (x1669 (+ 128 x608))) (or (and (= 96 x1657) (not x1611)) (and (not x1509) x1611 (= x1509 (< 128 x1539)) (= (x1669 (+ x608 160)) x1594) (= x564 (x1669 (+ 128 x507))) (= 128 x1657) (= (x534 x564) x973))) (= (x1669 (+ 96 x507)) x835))) (= x1144 (x534 x982))) (and (not x815) (= 32 x1657))) (= x265 (x534 x1238)) (= x815 (> x1539 32)) (= x1299 x1238)) (and (= x1657 0) (not x760))) (= x462 x307) (= x1630 (uninterp_mod (* 1000000000000000000 x1540) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= (- (/ x1027 1000000000000000000) (uninterp_frac x1027 1000000000000000000)) x1862)) x456))) x1847))
(assert (x1407 115792089237316195423570985008687907853269984665640564039457584007913129639904))
(assert (x317 x1493))
(assert (x317 x1512))
(assert (x317 x1126))
(assert (x317 x170))
(assert (x317 x734))
(assert (= x412 (=> (and (< x610 2293535753) (= x1033 (x1669 (+ (uninterp_mod (* x1803 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 164))) (= x948 (uninterp_mod (- (x1669 (+ (uninterp_mod (* 32 x478) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 32)) 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (>= 1461501637330902918203684832716283019655932542975 x1646) (= x1431 (x1448 (- x1375 4))) (not (= x610 635128645)) (>= x1456 0) (= x1402 (x1669 (+ (x1669 (+ (uninterp_mod (* 32 x478) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x137)) 32))) (= (uninterp_mod (- (x1669 (+ 32 (uninterp_mod (* 32 x319) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x924) (not (> x1043 18446744073709551615)) (= x998 (uninterp_mod (* 32 x1108) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= x218 (x1448 (- x1812 4))) (= (x1669 (+ 36 x1043)) x1042) (= x1130 (uninterp_mod (* x821 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= x1375 (x1669 (+ 32 (x1669 (+ (uninterp_mod (* x154 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x1033))))) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x875)) (< 163 x875) (not (< x875 x1616)) (= (uninterp_mod (- (x1669 (+ (uninterp_mod (* x1803 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 32)) 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x1113) (= x1666 (x1669 (+ 36 x1431))) (= (x1669 (+ x1293 36)) x565) (= x1740 (x1669 (+ x1431 4))) (= (x1669 (+ 32 (x1669 (+ x1404 (uninterp_mod (* x154 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936))))) x1664) (= x1679 (x1669 (+ x1293 35))) (or (and (= (<= x1679 57896044618658097711785492504343953926634992332820282019728792003956564819967) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x875)) (> x875 x1679)) (and (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x875) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1679))) (= x545 x222) (= (x1669 (+ x724 32)) x137) (= x1430 x222) (= x142 x1698) (= (x1448 (- x875 4)) x1754) (= (x1669 (+ 35 x1431)) x1208) (= (x1669 (+ 4 x1293)) x1452) (= x658 (x1669 (+ x1372 x565))) (= (x1669 (+ 32 (x1669 (+ (uninterp_mod (* x319 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x1375)))) x1812) (= x1777 (x1669 (+ x1375 32))) (or (and (< x1089 x875) (= (<= x1089 57896044618658097711785492504343953926634992332820282019728792003956564819967) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x875))) (and (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1089) (<= x875 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (= (uninterp_mod (* 32 x98) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x500) (= x1646 x301) (not (< 18446744073709551615 x98)) (= x610 842085797) (or (and (<= x875 57896044618658097711785492504343953926634992332820282019728792003956564819967) (> x1208 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (and (> x875 x1208) (= (<= x875 57896044618658097711785492504343953926634992332820282019728792003956564819967) (<= x1208 57896044618658097711785492504343953926634992332820282019728792003956564819967)))) (<= 0 x1646) (not (> x1431 18446744073709551615)) (not (> x381 x875)) (= (x970 132) x821) (not (> x1108 18446744073709551615)) (= x1571 x1122) (= (= x98 x821) x113) (= x1043 (x1448 (- x1033 4))) (= x1475 (x1448 (- x1033 4))) (= 0 x142) (= (uninterp_mod (- (x1669 (+ 32 (uninterp_mod (* x154 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x467) (= x1293 (x1448 (- x1812 4))) (>= 1461501637330902918203684832716283019655932542975 x545) (not (< 18446744073709551615 x1621)) (not (> x389 x875)) (= x1108 (x970 x1740)) (not (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1754) (and (> 128 x1754) (= (<= x1754 57896044618658097711785492504343953926634992332820282019728792003956564819967) true)))) (= x1616 (x1669 (+ x998 x1666))) (= (x1669 (+ x1042 x500)) x381) (= (x1669 (+ (uninterp_mod (* 32 x1803) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 68)) x1404) (not (> x821 18446744073709551615)) (= x821 x1621) (= x1372 (uninterp_mod (* 32 x1621) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= x1747 (> x821 0)) (= x677 (x20 (x714 274184521717934524641157099916833587206))) (not (> x658 x875)) (= x1089 (x1669 (+ x1043 35))) (ite x113 (= x1108 x821) x113) (= (x1669 (+ x1130 164)) x389) (= (x1669 (+ (uninterp_mod (* x1803 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 196)) x51) (not (< 18446744073709551615 x1293)) (= (x970 x929) x98) (= x1304 (x1669 (+ x1812 32))) (<= 0 x545) (= (x1669 (+ 32 (x1669 (+ x568 (uninterp_mod (* x319 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936))))) x724) (> 911411945 x610) (= x875 (x1669 (+ x1402 32))) (= x209 (x1448 (- x1375 4))) (not (= 468353030 x610)) (= (x1669 (+ x1043 4)) x929) (= x568 (x1669 (+ x1664 32))) (not (> 468353030 x610)) (not (= x610 759532456)) (< 0 x677) (= (x970 x1452) x1621) (not (> 4 x875)) (>= 1461501637330902918203684832716283019655932542975 x1456)) (and (=> (and (or (and (or (and x1488 (= x1167 (x1448 (- x1187 x1114))) (not (> x1114 x1187)) (= (x1024 x1380) x1114) (= x1705 x1167)) (and (= x1775 x1705) (not x1488) (= x1775 (ite (< x333 604800) x333 604800)) (= (x1448 (- x1187 x752)) x333) (not (> x752 x1187)) (= x582 604800))) (= (< x5 x1122) x509) (= x1488 (= x752 0)) x341 (= x5 (x1590 x1654)) (or (and (= x1187 x1122) (not x509)) (and x509 (= (x1590 x1654) x360) (= x360 x1187)))) (and (not x341) (= x1705 0))) (= x32 (x970 x465)) (<= 0 x1277) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x741) (= x1173 (x1669 (+ x1380 64))) (= x341 (< x752 x1720)) (= x851 (= 0 x1705)) (<= 0 x429) (= (= 0 x759) x26) (= (x276 x396) x759) (not (> x1040 x1277)) (>= x1277 0) (>= x759 0) (= (x1674 x18) x429) (= x752 (x514 x1073)) (>= x752 0) (= (x332 (x714 x1040) (x111 1) 0) x1731) (or (and x851 (= x1289 (x332 (x714 x1857) x954 0)) (= (x332 (x714 x1040) (x111 6) 0) x954)) (and (< (* x429 x1705) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= (x332 (x714 x1040) (x111 6) 0) x1294) (= (+ x1415 x766) x235) (= (x332 (x714 x1040) (x111 5) 0) x304) (<= x1636 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x1636 x1415) (not x851) (= (x332 (x714 x1857) x304 0) x1732) (= x1460 (* x429 x1705)) (= x1460 x1550) (= x1360 (x332 (x714 x1857) x1294 0)) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x1550 x1636)) (>= x1636 0) (= x1636 (x1203 x1732)) (= x766 x1550))) (< 0 x98) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x759) (= (x332 (x714 x1857) x1567 0) x18) (<= 0 x1462) (= x465 x565) (= x396 (x332 (x714 x32) x588 0)) (= (x970 x748) x1087) (or (and (= x245 (x332 (x714 x1040) (x111 1) 0)) (or (and (not x638) (= 0 x99)) (and (or (and x346 (= x258 (x804 160)) (= x1250 x258)) (and (not x346) (= x1250 x1122))) (= x346 (< x895 x1122)) (= (= 0 x1678) x539) (or (and (= (ite (> 604800 x92) x92 604800) x574) (not x539) (= 604800 x139) (not (> x1678 x1250)) (= x92 (x1448 (- x1250 x1678))) (= x574 x99)) (and (= (x1342 128) x969) (= (x1448 (- x1250 x969)) x707) (not (> x969 x1250)) (= x99 x707) x539)) x638 (= (x804 160) x895))) (= x535 (= 0 x99)) (= x886 (x332 (x714 x32) x1789 0)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x756) (= (x1841 x886) x1678) (= x756 (x1425 x1254)) (<= x1344 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= 0 x756) (= x1110 (x332 (x714 x1040) (x111 7) 0)) (<= 0 x1344) (= x638 (> x1712 x1678)) (= x1712 (x804 160)) (= (x1833 x245 1) x1254) (= (x332 (x714 x1857) x1110 0) x1789) (or (and (= x159 (x332 (x714 x32) x687 0)) x535 (= (x332 (x714 x1857) x210 0) x687) (= x210 (x332 (x714 x1040) (x111 7) 0)) (= x1380 192)) (and (= x1218 (x332 (x714 x32) x480 0)) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x170 x1715)) (not x535) (< (* x99 x759) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= (x332 (x714 x1040) (x111 7) 0) x717) (= x1756 (x332 (x714 x32) x1352 0)) (= x1352 (x332 (x714 x1857) x717 0)) (>= x1715 0) (= x170 x945) (= (x332 (x714 x1040) (x111 3) 0) x1365) (= x480 (x332 (x714 x1857) x1365 0)) (<= x1715 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x176 x170) (= 192 x1380) (= (* x759 x99) x945) (= (x791 x1218) x1715) (= x1166 (+ x176 x1361)) (= x1715 x1361))) (not x26) (<= 0 x1678) (= (x33 x245) x1344) (<= x1678 115792089237316195423570985008687907853269984665640564039457584007913129639935)) (and x26 (= (x332 (x714 x1040) (x111 7) 0) x1055) (= (x332 (x714 x32) x1274 0) x1370) (= x1380 128) (= x1274 (x332 (x714 x1857) x1055 0)))) (not (> x1040 x1277)) (= (x1590 x1654) x1720) (>= 1461501637330902918203684832716283019655932542975 x32) (= x1073 (x332 (x714 x1857) x1610 0)) (> x1277 x1040) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x429) (< 0 x821) (= x470 (x332 (x714 x1040) (x111 9) 0)) (= (x1833 x1731 1) x620) (= (x33 x1731) x741) (<= x752 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x970 x532) x1857) (= x1042 x532) (<= 0 x741) (> x1108 0) (= (x1669 (+ x1380 32)) x1654) (= x1462 (x1425 x620)) (>= 1461501637330902918203684832716283019655932542975 x1857) x1747 (= (x332 (x714 x1040) (x111 10) 0) x1567) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1277) (<= x1087 1461501637330902918203684832716283019655932542975) (= (x332 (x714 x1040) (x111 6) 0) x1610) (= x748 x1666) (<= 0 x1277) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1277) (<= x1277 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x970 164) x1040) (<= x1462 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x588 (x332 (x714 x1857) x470 0)) (> x1621 0)) x1490) (=> (not x1747) x726)))))
(assert (= (x1078 (- 196 x51)) (x100 (- 196 x51))))
(assert (x317 x1013))
(assert (x317 x1270))
(assert (x317 x1403))
(assert (x317 x1570))
(assert (= (x111 2258409472) (x714 2258409472)))
(assert (x317 x550))
(assert (x317 x532))
(assert (x317 x257))
(assert (x317 x181))
(assert (x317 x719))
(assert (=> (< (- x228 1) 10000) (= (x714 x228) (x111 x228))))
(assert (x920 x656))
(assert (x317 x956))
(assert (x317 x1615))
(assert (x317 x474))
(assert (x317 x143))
(assert (x317 x1325))
(assert (=> (> (+ 10000 1) x102) (= (x714 x102) (x111 x102))))
(assert (= (x1579 x1376) (ite (and x148 x860) (x1811 x1376) (ite (and x1682 x1195) (x1811 x1376) (x528 x1376)))))
(assert (x1407 x1079))
(assert (=> (> (+ 10000 1) x1672) (= (x714 x1672) (x111 x1672))))
(assert (=> (< (- x583 1) 10000) (= (x111 x583) (x714 x583))))
(assert (x317 x753))
(assert (x1407 x1569))
(assert (x317 x1652))
(assert (x317 x756))
(assert (x317 x979))
(assert (x317 x1773))
(assert (x317 x1710))
(assert (x317 x1617))
(assert (= (x111 911411945) (x714 911411945)))
(assert (x317 x903))
(assert (x317 x578))
(assert (x317 x1468))
(assert (= (x674 x755) 0))
(assert (=> (> (+ 10000 1) x1059) (= (x111 x1059) (x714 x1059))))
(assert (=> (< (- x711 1) 10000) (= (x714 x711) (x111 x711))))
(assert (x317 x1070))
(assert (x317 x42))
(assert (x317 x1849))
(assert (x920 x1325))
(assert (= (ite (and x1747 x26 x1711) (x791 x1052) (ite (and x535 x1747 (not x26) x1711) (x791 x1052) (x160 x1052))) (x1364 x1052)))
(assert (x317 x1150))
(assert (x317 x1378))
(assert (x317 x1801))
(assert (x317 x1396))
(assert (x317 x503))
(assert (x317 x795))
(assert (x317 x1382))
(assert (x317 x1612))
(assert (x317 x481))
(assert (x317 x1625))
(assert (x317 x144))
(assert (x317 x1197))
(assert (x317 x776))
(assert (x317 x282))
(assert (x317 x1271))
(assert (x317 x637))
(assert (= 1000000000000000000 (x615 (x111 1000000000000000000))))
(assert (x317 x1541))
(assert (= (x615 (x714 x395)) x395))
(assert (=> (< (- x1359 1) 10000) (= (x111 x1359) (x714 x1359))))
(assert (= (ite x659 (ite (and x849 x1377) (x1811 x814) (x1331 x814)) (x1811 x814)) (x475 x814)))
(assert (= (x615 (x714 x711)) x711))
(assert (= x1481 (and x1222 (not x403))))
(assert (x317 x1657))
(assert (x317 x345))
(assert (x317 x24))
(assert (x317 x602))
(assert (x317 x574))
(assert (= (x111 635128645) (x714 635128645)))
(assert (x317 x216))
(assert (x317 x908))
(assert (=> (> (+ 10000 1) x1030) (= (x714 x1030) (x111 x1030))))
(assert (x317 x1769))
(assert (x317 x118))
(assert (x317 x10))
(assert (= (x615 (x111 635128645)) 635128645))
(assert (= (x714 69947311) (x111 69947311)))
(assert (x317 x320))
(assert (x317 x1242))
(assert (x317 x283))
(assert (= 2514000705 (x615 (x111 2514000705))))
(assert (= x925 (=> (= x338 (= 274184521717934524641157099916833587214 x351)) (and (=> (not x338) x1170) (=> (and (= x1796 (< x708 x1447)) (<= x122 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x649 x836) (not (= x734 2514000705)) (= 76450787359836037641860180984291677749980919077056822294353438043884394381312 x1345) (= 68 x271) (= (x332 (x714 x649) (x111 1) 0) x1443) (= (+ x128 x1634) x1436) (= x708 (x1579 x1376)) x338 (= x1417 x1447) (= 274184521717934524641157099916833587206 x1165) (= x271 x1820) (= 2835717307 x734) (<= 0 x708) (= 274184521717934524641157099916833587206 x1815) (= x1348 32) (not (= 649617121 x734)) (= x1634 x122) (= (x1448 (- x708 x1447)) x47) (= x1593 (x332 (x714 x649) (x111 1) 0)) (= x290 x128) (= (or (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1050)) (< x1050 64)) (> x1050 57896044618658097711785492504343953926634992332820282019728792003956564819967)) x586) (not (> 4 x271)) (not x889) (not x586) (= (x332 (x714 274184521717934524641157099916833587206) (x111 1) 0) x510) (not (> 649617121 x734)) (not (= 1889567281 x734)) (= x1480 (x20 (x714 274184521717934524641157099916833587214))) (> x1480 0) (= x1050 (x1448 (- x271 4))) (= x1376 (x332 (x714 274184521717934524641157099916833587206) (x111 1) 0)) (not x492) (= x1447 x290) (<= 0 x122) (= 1 x725) (not (= x734 826074471)) (= x122 (x1786 x1593)) (not x1796) (>= 1461501637330902918203684832716283019655932542975 x836) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x290 x122)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x708) (= x492 (> x290 x708)) (= x889 (<= 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x122 x290)))) x1784)))))
(assert (= (x615 (x1833 x1301 1)) (+ (x615 x1301) 1)))
(assert (x317 x1469))
(assert (= 274184521717934524641157099916833587214 (x615 (x111 274184521717934524641157099916833587214))))
(assert (x317 x6))
(assert (x317 x1672))
(assert (x317 x429))
(assert (x317 x622))
(assert (= (x1444 (- x21 164)) (x1556 (- x21 164))))
(assert (= (x615 (x111 87118632)) 87118632))
(assert (= (x714 274184521717934524641157099916833587218) (x111 274184521717934524641157099916833587218)))
(assert (x317 x1831))
(assert (x317 x1183))
(assert (= (x559 x645) (ite (and x860 x148) (x921 x645) (ite (and x1195 x1682) (x599 x645) (x921 x645)))))
(assert (x317 x1865))
(assert (= (x714 2835717307) (x111 2835717307)))
(assert (= 0 (x1121 x982)))
(assert (x317 x765))
(assert (x920 x1087))
(assert (= (x615 (x714 x306)) x306))
(assert (x920 x1076))
(assert (x920 x703))
(assert (x317 x708))
(assert (x317 x137))
(assert (x317 x900))
(assert (x317 x1367))
(assert (x317 x201))
(assert (x317 x467))
(assert (x317 x48))
(assert (x317 x888))
(assert (x317 x1076))
(assert (x317 x1538))
(assert (x317 x1030))
(assert (x317 x381))
(assert (x317 x1552))
(assert (x317 x531))
(assert (x317 x1583))
(assert (x317 x1408))
(assert (x317 x1809))
(assert (= (x475 x1310) (ite x659 (ite (and x1377 x849) (x1811 x1310) (x1331 x1310)) (x1811 x1310))))
(assert (= (x615 (x111 2835717307)) 2835717307))
(assert (x317 x1540))
(assert (= x1128 (x615 (x714 x1128))))
(assert (x317 x947))
(assert (x317 x563))
(assert (x317 x271))
(assert (x1265 x77 x1371 x1529 x1245))
(assert (x1407 x1522))
(assert (x317 x749))
(assert (x920 x488))
(assert (x317 x1748))
(assert (x317 x221))
(assert (x317 x748))
(assert (=> (< (- x1813 1) 10000) (= (x714 x1813) (x111 x1813))))
(assert (=> (< (- x23 1) 10000) (= (x714 x23) (x111 x23))))
(assert (x317 x1495))
(assert (=> (< (- x495 1) 10000) (= (x111 x495) (x714 x495))))
(assert (x317 x1501))
(assert (x317 x725))
(assert (x317 x49))
(assert (= (x1278 (- x1452 x1304)) (x675 (- x1452 x1304))))
(assert (x317 x1106))
(assert (x1407 x464))
(assert (x317 x307))
(assert (x317 x553))
(assert (x317 x1700))
(assert (x317 x1345))
(assert (x317 x1437))
(assert (= (x615 (x714 x1039)) x1039))
(assert (x317 x1149))
(assert (x317 x378))
(assert (=> (< (- x1472 1) 10000) (= (x714 x1472) (x111 x1472))))
(assert (= (x1278 (- x872 x1304)) (x675 (- x872 x1304))))
(assert (x317 x711))
(assert (x920 x23))
(assert (x317 x488))
(assert (= x204 (x615 (x714 x204))))
(assert (= x590 (x615 (x714 x590))))
(assert (x317 x709))
(assert (x920 x153))
(assert (x317 x949))
(assert (x920 x1030))
(assert (=> (> (+ 10000 1) x682) (= (x714 x682) (x111 x682))))
(assert (x317 x61))
(assert (= (ite (and x1741 (not x1640) (not x31)) (x1638 x1065) (x791 x1065)) (x205 x1065)))
(assert (= x1151 (=> (and (not (= 0 x324)) (= x1336 (x342 128)) (= x1336 x349) (not (or (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x979)) (< x979 32)) (> x979 57896044618658097711785492504343953926634992332820282019728792003956564819967)))) x50)))
(assert (x317 x544))
(assert (x317 x561))
(assert (= 0 (x1458 x162)))
(assert (x317 x1706))
(assert (x920 x1757))
(assert (x317 x1705))
(assert (=> (< (- x681 1) 10000) (= (x111 x681) (x714 x681))))
(assert (= (x615 (x714 x1030)) x1030))
(assert (= (=> (and (= x430 (x479 (x714 x1770))) (= x1091 (< 0 x965)) (= x965 (x1517 x447)) (= x762 (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1210 (x714 274184521717934524641157099916833587206)))) (or (not x1091) (and (= (not x1808) x426) (> x1197 0) (= (ite x426 1 0) x1392) (= (x1517 x447) x1552) (= (x1669 (+ 32 x447)) x1411) (not (or (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1552)) (> 32 x1552)) (> x1552 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (= x1808 (= x1197 0)) x1091 (= (x508 x1411) x1197) (= x1392 x1197))) (or (and (= x447 96) x1295) (and (= (x1669 (+ x608 96)) x1495) (not x1295) (= x452 x447))) x762 (= x1295 (= x774 0)) (not (= 0 x738))) x1163) x328))
(assert (x317 x1447))
(assert (x920 x590))
(assert (x317 x1839))
(assert (= (x111 826074471) (x714 826074471)))
(assert (x317 x540))
(assert (= (x615 (x714 x109)) x109))
(assert (= (x1278 (- x1740 x1304)) (x675 (- x1740 x1304))))
(assert (x317 x1491))
(assert (= 0 (x1121 x1238)))
(assert (x317 x453))
(assert (= (=> (and (= (x332 (x714 x501) x485 0) x1736) (>= x308 0) (= (x20 (x714 274184521717934524641157099916833587206)) x167) (= 759532456 x1502) (not (= x1502 468353030)) (< 0 x167) (= x308 x1622) (> 911411945 x1502) (<= x501 1461501637330902918203684832716283019655932542975) (= x485 (x332 (x714 x395) (x111 7) 0)) (= x444 (x332 (x714 x493) x1736 0)) (not (< x1502 468353030)) (not (= x1502 635128645)) (= (x1841 x444) x308) (<= x493 1461501637330902918203684832716283019655932542975) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x308) (> 2293535753 x1502)) (=> (and (<= 0 x548) (= (= x1338 x1548) x321) (= x957 x310) (>= 1461501637330902918203684832716283019655932542975 x928) (not (> x553 x1277)) (= x1866 x807) x1406 (= x61 x1430) (< 0 x942) (= x1069 32) (<= 0 x1277) (= (x332 (x714 x531) x1676 0) x1745) (= x699 (x1257 32)) (= x807 x1797) (= (= x1826 x297) x863) (<= x548 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (= x1062 x1309) x1233) x58 (= x421 (x332 (x714 x23) x1703 0)) x192 (= (x332 (x714 x553) (x111 10) 0) x1703) (= x1721 x1396) (= (= (uninterp_mod (* x622 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x1577) x179) (= (= x591 2) x1606) (= x1734 32) (= x957 x1604) (= x1234 (= x1549 0)) (<= x178 1461501637330902918203684832716283019655932542975) (= x466 x1198) (= x1762 x422) (>= 1461501637330902918203684832716283019655932542975 x1519) (= x834 x178) (= x11 0) (= x1547 x834) (= (= x1762 x832) x1406) x1606 (<= x1277 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x1070 x553) (= (x332 (x714 x553) (x111 9) 0) x59) (= x352 (= x263 x41)) (= x1548 (x1235 32)) (> 1461501637330902918203684832716283019655932542976 x1120) (= x1534 x466) (= 0 x1753) (= x807 x297) (= 274184521717934524641157099916833587214 x181) (= x267 x619) (= x1097 (x332 (x714 x590) x1651 0)) (< x553 x1277) (= (= 2 x556) x192) (<= x531 1461501637330902918203684832716283019655932542975) (= x1661 (x780 x1403)) (= x1053 x1577) (= x1057 (x1833 x19 1)) x863 (<= x1277 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= x1054 115792089237316195423570985008687907853269984665640564039457584007913129639935) x910 x54 (> 2293535753 x35) (= (x332 (x714 x553) (x111 1) 0) x19) (= (x802 1461501637330902918203684832716283019655932542975 x178) x23) (= x37 (= x1866 x1120)) (<= x135 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x692 (= 274184521717934524641157099916833587214 x1797)) (>= x928 0) (= (= x699 x1383) x1725) (= x1403 (x1669 (+ x818 32))) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x52) (= x517 2) (= x1179 x110) (<= x1102 1461501637330902918203684832716283019655932542975) (< x35 911411945) (= x1865 (x1669 (+ 64 x818))) (= (x33 x19) x548) (= x355 (= x957 (uninterp_mod (* 32 x1396) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (< x1309 1461501637330902918203684832716283019655932542976) (= x591 x466) (= (x650 0) x1120) (not (= 142201243 x35)) (= 32 x1728) (= (= (uninterp_mod (* 32 x1179) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x1748) x848) (= x590 (x802 1461501637330902918203684832716283019655932542975 x178)) (= x422 x531) (= x622 x156) (not (= 87118632 x35)) (= (= 0 x52) x1640) (= x1577 x852) x1233 x37 (>= x1277 0) (= x1826 (x369 32)) (<= x446 1461501637330902918203684832716283019655932542975) (= 243137395 x35) x692 (> 1461501637330902918203684832716283019655932542976 x832) (= (= (uninterp_mod (* x466 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x267) x54) (= x960 0) (= x1062 x422) (= x834 x1383) (or (and (= x1209 (x780 x1403)) (or (and x1354 (= x1378 (x780 x1403)) (= x719 x1378)) (and (= x1122 x719) (not x1354))) (= (= x1054 0) x484) (or (and x484 (= x217 (x1081 x818)) (= (x1448 (- x719 x217)) x1609) (not (< x719 x217)) (= x1549 x1609)) (and (= 604800 x1839) (= x1549 x30) (= x30 (ite (< x684 604800) x684 604800)) (not x484) (not (< x719 x1054)) (= x684 (x1448 (- x719 x1054))))) x636 (= x1354 (> x1122 x1209))) (and (= x1549 0) (not x636))) (<= x1277 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x643 x622) (= x718 (x1046 0)) (= x1622 x964) (= x1070 x1338) (= 32 x1034) (= x606 0) x355 (< x35 468353030) x1725 (= x1070 x41) (= x135 (x1425 x1057)) (= 0 x1199) x352 (<= 0 x135) (= x1396 x556) x848 x321 (= x267 x1873) (= x1102 x61) (= x512 (= x393 2)) (= x257 2) (= x393 x1179) (= x636 (> x1661 x1054)) (not (= 69947311 x35)) (= 0 x136) (>= x1277 0) x179 (>= x52 0) (= (< 0 x964) x910) (>= x1054 0) (>= x406 0) (= (x276 x1745) x52) (> 1461501637330902918203684832716283019655932542976 x699) (<= x406 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= 2 x629) (= x1309 (x1688 0)) (or (and (= (x1203 x1041) x1842) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (* x1549 x406)) (>= x1842 0) (not x1234) (= (x802 1461501637330902918203684832716283019655932542975 x178) x359) (= (x802 1461501637330902918203684832716283019655932542975 x178) x1150) (= (* x1549 x406) x1568) (= x747 x1568) (= x370 x1842) (= (x332 (x714 x1150) x1633 0) x1116) (= x1633 (x332 (x714 x553) (x111 6) 0)) (= x1584 (+ x477 x370)) (= x747 x477) (= x1041 (x332 (x714 x359) x149 0)) (< (+ x1842 x747) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x149 (x332 (x714 x553) (x111 5) 0)) (<= x1842 115792089237316195423570985008687907853269984665640564039457584007913129639935)) (and (= (x332 (x714 x495) x1814 0) x805) x1234 (= (x332 (x714 x553) (x111 6) 0) x1814) (= x495 (x802 1461501637330902918203684832716283019655932542975 x178)))) (= x1651 (x332 (x714 x553) (x111 6) 0)) (= x622 x190) (= (x1674 x421) x406) (= x263 (x230 0)) (= x942 (x20 (x714 274184521717934524641157099916833587206))) (not (< x1277 x553)) (< x1826 1461501637330902918203684832716283019655932542976) x1388 (= x58 (= x718 x1547)) (<= 0 x1102) (= (x1861 32) x832) (= x1435 x1179) (= x561 x1396) (= x1272 x1748) (> 1461501637330902918203684832716283019655932542976 x718) (or (and (= (x332 (x714 x1531) x1429 0) x842) (= (x802 1461501637330902918203684832716283019655932542975 x178) x1531) (>= x93 0) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x93) (not x1640) (<= 0 x543) (= (x1841 x646) x93) (= (x1357 160) x147) (= (x33 x1249) x543) (or (and (= (x332 (x714 x458) x1035 0) x74) (< (* x52 x24) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= (* x52 x24) x626) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1339) (not x31) (= x1213 (x802 1461501637330902918203684832716283019655932542975 x531)) (= x1520 (x332 (x714 x1213) x1478 0)) (= x1339 x1578) (<= 0 x1339) (= x626 x1326) (= (x332 (x714 x553) (x111 3) 0) x1035) (< (+ x1339 x1326) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= (x332 (x714 x228) x74 0) x555) (= (x802 1461501637330902918203684832716283019655932542975 x178) x458) (= 192 x818) (= (x802 1461501637330902918203684832716283019655932542975 x178) x703) (= x228 (x802 1461501637330902918203684832716283019655932542975 x531)) (= (x791 x555) x1339) (= x1248 (x332 (x714 x553) (x111 7) 0)) (= x1022 x1326) (= (x332 (x714 x703) x1248 0) x1478) (= x1075 (+ x1578 x1022))) (and (= x1714 (x332 (x714 x990) x1401 0)) (= (x802 1461501637330902918203684832716283019655932542975 x178) x583) (= x990 (x802 1461501637330902918203684832716283019655932542975 x531)) (= x1401 (x332 (x714 x583) x3 0)) x31 (= (x332 (x714 x553) (x111 7) 0) x3) (= 192 x818))) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x927) (= x1249 (x332 (x714 x553) (x111 1) 0)) (= x927 (x1425 x527)) (or (and (not x91) (= 0 x24)) (and (= (x1357 160) x1287) (or (and (= (ite (< x1468 604800) x1468 604800) x150) (= x150 x24) (= 604800 x1298) (not (< x75 x93)) (= (x1448 (- x75 x93)) x1468) (not x522)) (and (= x1409 x24) (= x1409 (x1448 (- x75 x1457))) (not (< x75 x1457)) x522 (= x1457 (x935 128)))) (= x1585 (< x1287 x1122)) (or (and (= x853 x75) x1585 (= (x1357 160) x853)) (and (= x1122 x75) (not x1585))) (= (= x93 0) x522) x91)) (= (x332 (x714 x553) (x111 7) 0) x1429) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x543) (= x681 (x802 1461501637330902918203684832716283019655932542975 x531)) (= x646 (x332 (x714 x681) x842 0)) (= (< x93 x147) x91) (= (= x24 0) x31) (= x527 (x1833 x1249 1)) (<= 0 x927)) (and (= (x802 1461501637330902918203684832716283019655932542975 x178) x637) (= (x332 (x714 x553) (x111 7) 0) x1300) (= x174 (x332 (x714 x637) x1300 0)) (= x1333 (x802 1461501637330902918203684832716283019655932542975 x531)) x1640 (= x668 (x332 (x714 x1333) x174 0)) (= x818 128))) (= x301 x928) (= x1538 2) (= x1753 x1698) (= x1519 x807) x512 (= x1799 x1748) (= x1676 (x332 (x714 x178) x59 0)) (= x1122 x1155) (>= x446 0) (= x1054 (x514 x1097)) (= (= x190 2) x1388)) x383)) x1527))
(assert (x317 x807))
(assert (=> (> (+ 10000 1) x359) (= (x714 x359) (x111 x359))))
(assert (x317 x280))
(assert (x317 x1059))
(assert (x317 x1397))
(assert (x317 x122))
(assert (x317 x846))
(assert (x317 x1836))
(assert (x317 x640))
(assert (x317 x1174))
(assert (x317 x526))
(assert (= (x615 (x714 x359)) x359))
(assert (= (x615 (x714 274184521717934524641157099916833587214)) 274184521717934524641157099916833587214))
(assert (= (ite (and x851 x1747 x1711) (x1203 x279) (x1157 x279)) (x1778 x279)))
(assert (x317 x241))
(assert (= x1765 (x615 (x714 x1765))))
(assert (=> (> (+ 10000 1) x1076) (= (x111 x1076) (x714 x1076))))
(assert (= 0 (x1312 x291)))
(assert (= (ite (and x148 x860) (x1811 x1593) (ite (and x1195 x1682) (x1811 x1593) (x528 x1593))) (x1579 x1593)))
(assert (x317 x208))
(assert (x317 x265))
(assert (x317 x971))
(assert (x317 x69))
(assert (x317 x1472))
(assert (x920 x685))
(assert (= x13 x65))
(assert (x317 x973))
(assert (x536 x829 x1004))
(assert (= (x674 x1145) 0))
(assert (x317 x821))
(assert (x317 x738))
(assert (x317 x857))
(assert (x317 x792))
(assert (x317 x1551))
(assert (= x493 (x615 (x714 x493))))
(assert (x317 x796))
(assert (= (x100 (- x872 x51)) (x1078 (- x872 x51))))
(assert (x317 x247))
(assert (= (x1579 x594) (ite (and x860 x148) (x1811 x594) (ite (and x1195 x1682) (x1811 x594) (x528 x594)))))
(assert (x317 x1799))
(assert (x1407 x109))
(assert (= x1682 (and (not x148) x860)))
(assert (x317 x1417))
(assert (x317 x1236))
(assert (x317 x1240))
(assert (= x576 (=> (and (= x367 (x20 (x714 274184521717934524641157099916833587206))) (not (= 2211524764 x1810)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1474) (not (= 2061678023 x1810)) (not (> 911411945 x1810)) (= 2258409472 x1810) (= x1474 (x514 x417)) (<= x1318 1461501637330902918203684832716283019655932542975) (= (x332 (x714 x1318) x104 0) x417) (> 2293535753 x1810) (not (= x1810 1968616202)) (= (x332 (x714 x1685) (x111 6) 0) x104) (> x367 0) (>= x1474 0) (= x463 x1474) (not (= x1810 1986467848)) (not (< x1810 1968616202))) (=> (and (= x493 x422) (= x679 0) (= (> x1528 0) x1723) (= x395 x1070) (= x463 x1528) x1723 (= x834 x501)) x1527))))
(assert (x317 x1852))
(assert (x317 x729))
(assert (x317 x1054))
(assert (=> (< (- x1685 1) 10000) (= (x714 x1685) (x111 x1685))))
(assert (x317 x875))
(assert (x317 x1069))
(assert (x317 x964))
(assert (x317 x501))
(assert (x317 x1209))
(assert (x920 x1237))
(assert (x317 x1014))
(assert (= (+ (x615 x1017) 1) (x615 (x1833 x1017 1))))
(assert (=> (> (+ 10000 1) x1333) (= (x714 x1333) (x111 x1333))))
(assert (= (x615 (x714 x1355)) x1355))
(assert (x317 x1824))
(assert (x317 x691))
(assert (= (x1278 (- x929 x1304)) (x675 (- x929 x1304))))
(assert (x920 x109))
(assert (x317 x1721))
(assert (x317 x583))
(assert (x317 x1435))
(assert (x317 x1336))
(assert (x317 x1309))
(assert (x317 x222))
(assert (= (x822 (- x532 x1777)) (x631 (- x532 x1777))))
(assert (= (ite x659 (ite (and x849 x1377) (x1774 x787) (x921 x787)) (x921 x787)) (x1555 x787)))
(assert (= x1098 (or (and x424 x1077) (and x1195 x1682))))
(assert (x317 x1526))
(assert (x317 x1644))
(assert (=> (> (+ 10000 1) x1039) (= (x111 x1039) (x714 x1039))))
(assert (x317 x818))
(assert (x317 x422))
(assert (= (x100 (- x929 x51)) (x1078 (- x929 x51))))
(assert (x920 274184521717934524641157099916833587206))
(assert (= (x675 (- x748 x1304)) (x1278 (- x748 x1304))))
(assert (=> (< (- x1325 1) 10000) (= (x714 x1325) (x111 x1325))))
(assert (x920 x583))
(assert (= 0 (x674 x1576)))
(assert (x1407 x908))
(assert (= x681 (x615 (x714 x681))))
(assert (= (x714 2514000705) (x111 2514000705)))
(assert (x317 x440))
(assert (= (x615 (x714 x458)) x458))
(assert (x317 x643))
(assert (x317 x333))
(assert (= x1391 (x615 (x714 x1391))))
(assert (x920 x1355))
(assert (= x131 true))
(assert (x317 x1119))
(assert (x1407 x184))
(assert (x317 x115))
(assert (=> (< (- x224 1) 10000) (= (x111 x224) (x714 x224))))
(assert (x317 x681))
(assert (x317 x133))
(assert (x317 x267))
(assert (x317 x816))
(assert (x785 x531 x1588))
(assert (x317 x1755))
(assert (x317 x1280))
(assert (x317 x517))
(assert (= x745 (=> (and (<= x184 1461501637330902918203684832716283019655932542975) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1083) (< x471 2293535753) (= x1639 x729) (< x471 911411945) (or (and (= x1813 (x802 1461501637330902918203684832716283019655932542975 x109)) (or (and (= x1 (= x55 0)) (or (and (not (< x867 x700)) x1 (= x164 x623) (= (x985 128) x700) (= (x1448 (- x867 x700)) x164)) (and (= x425 604800) (not (< x867 x55)) (= x623 x701) (= x10 (x1448 (- x867 x55))) (not x1) (= x701 (ite (< x10 604800) x10 604800)))) (or (and (= x1255 (x943 160)) (= x867 x1255) x866) (and (not x866) (= x867 x1122))) x1191 (= x1627 (x943 160)) (= x866 (> x1122 x1627))) (and (not x1191) (= x623 0))) (= (x332 (x714 x1672) x1445 0) x1559) (<= x55 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= x796 0) (= x1553 (x33 x1017)) (= x1191 (< x55 x221)) (= x820 (x1833 x1017 1)) (= (x1425 x820) x796) (= x1566 (= x623 0)) (= x570 (x332 (x714 x1142) (x111 7) 0)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x796) (or (and (= x721 (x205 x1065)) (= (x802 1461501637330902918203684832716283019655932542975 x109) x474) (= x428 x721) (= (+ x428 x1442) x49) (>= x721 0) (< (+ x721 x1241) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x1854 (x802 1461501637330902918203684832716283019655932542975 x1030)) (= x262 (x802 1461501637330902918203684832716283019655932542975 x1030)) (<= x721 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x1241 x1442) (not x1566) (= (x802 1461501637330902918203684832716283019655932542975 x109) x440) (< (* x623 x1635) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= (* x623 x1635) x1152) (= x1241 x1152) (= (x332 (x714 x1142) (x111 3) 0) x625) (= (x332 (x714 x474) x625 0) x1599) (= x157 192) (= (x332 (x714 x262) x1599 0) x1065)) (and (= (x802 1461501637330902918203684832716283019655932542975 x1030) x1135) x1566 (= (x802 1461501637330902918203684832716283019655932542975 x109) x1751) (= 192 x157))) (<= 0 x55) (= x1017 (x332 (x714 x1142) (x111 1) 0)) (= (x943 160) x221) (not x305) (= x55 (x364 x1559)) (>= x1553 0) (= (x332 (x714 x1813) x570 0) x1445) (= (x802 1461501637330902918203684832716283019655932542975 x1030) x1672) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1553)) (and x305 (= x157 128) (= (x802 1461501637330902918203684832716283019655932542975 x109) x786) (= (x802 1461501637330902918203684832716283019655932542975 x1030) x236))) (= x1635 (x276 x798)) (= x1639 x1430) (= x898 (x808 x573)) (= x1281 (x33 x1694)) (>= 1461501637330902918203684832716283019655932542975 x109) (= x301 x29) (>= 1461501637330902918203684832716283019655932542975 x1030) (= x1169 (< x280 x898)) (= x691 (x802 1461501637330902918203684832716283019655932542975 x109)) (= 0 x1327) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1496) (<= 0 x280) (<= x1635 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x332 (x714 x1142) (x111 1) 0) x1694) (= (x20 (x714 274184521717934524641157099916833587206)) x676) (= x471 243137395) (= x184 x807) (<= x1277 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= x1281 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1277) (<= 0 x729) (<= 0 x1277) (or (and (= (+ x448 x388) x1253) (= (x332 (x714 x1142) (x111 5) 0) x1088) (= (x802 1461501637330902918203684832716283019655932542975 x109) x900) (= (x802 1461501637330902918203684832716283019655932542975 x109) x844) (>= x1746 0) (<= x1746 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x1746 (x884 x702)) (= x357 x448) (= x702 (x332 (x714 x900) x1088 0)) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (* x36 x1083)) (= x357 x487) (= x1746 x388) (not x1514) (= x487 (* x36 x1083)) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x357 x1746))) (and x1514 (= x1867 (x802 1461501637330902918203684832716283019655932542975 x109)))) (= (x332 (x714 x1142) (x111 6) 0) x1575) (= x834 x109) (>= x1277 0) (> x1277 x1142) (= x1122 x1188) (= (= x1635 0) x305) (= (x332 (x714 x1030) x399 0) x798) (not (< x1277 x1142)) (= (x1669 (+ x157 32)) x573) (not (= x471 142201243)) (= (x1669 (+ x157 64)) x507) (= (x332 (x714 x1142) (x111 9) 0) x1427) (= x770 (x332 (x714 x1142) (x111 10) 0)) (= x1090 (x332 (x714 x841) x1575 0)) (or (and (or (and (= x1161 x1122) (not x146)) (and (= x1161 x1367) (= x1367 (x808 x573)) x146)) (= (> x1122 x903) x146) (= (= x280 0) x1032) (or (and x1032 (= x36 x316) (= (x1448 (- x1161 x816)) x316) (= (x1473 x157) x816) (not (< x1161 x816))) (and (= x491 604800) (= x1515 (ite (> 604800 x986) x986 604800)) (not x1032) (not (> x280 x1161)) (= x986 (x1448 (- x1161 x280))) (= x1515 x36))) x1169 (= x903 (x808 x573))) (and (= 0 x36) (not x1169))) (<= x729 1461501637330902918203684832716283019655932542975) (>= x1083 0) (= x280 (x1580 x1090)) (not (< x1277 x1142)) (= x1496 (x1425 x926)) (> 468353030 x471) (<= 0 x1635) (>= x1496 0) (>= x1277 0) (< 0 x676) (= (= 0 x36) x1514) (= (x332 (x714 x109) x1427 0) x399) (>= x526 0) (<= 0 x29) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1277) (>= x1281 0) (= x422 x1030) (= x1142 x1070) (<= x526 1461501637330902918203684832716283019655932542975) (not (= x471 87118632)) (not (= x471 69947311)) (= x926 (x1833 x1694 1)) (<= x29 1461501637330902918203684832716283019655932542975) (= x1327 x1698) (= (x332 (x714 x691) x770 0) x1772) (<= x280 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x802 1461501637330902918203684832716283019655932542975 x109) x841) (= x1083 (x1674 x1772))) x1847)))
(assert (x317 x841))
(assert (x317 x1554))
(assert (x920 x351))
(assert (=> (< (- x553 1) 10000) (= (x714 x553) (x111 x553))))
(assert (x317 x1050))
(assert (x317 x1666))
(assert (x317 x834))
(assert (x317 x1019))
(assert (x317 x1161))
(assert (x317 x1549))
(assert (x317 x466))
(assert (x317 x1690))
(assert (x317 x293))
(assert (x317 x30))
(assert (x317 x1061))
(assert (x317 x292))
(assert (x317 x99))
(assert (x317 x224))
(assert (x317 x1534))
(assert (= (x111 1461501637330902918203684832716283019655932542975) (x714 1461501637330902918203684832716283019655932542975)))
(assert (x317 x1467))
(assert (x317 x928))
(assert (= true x962))
(assert (x1407 x178))
(assert (= (x615 (x111 2211524764)) 2211524764))
(assert (x317 x14))
(assert (x317 x1068))
(assert (x317 x1636))
(assert (x317 x1446))
(assert (= x627 (and x1206 (not x134))))
(assert (= (x615 (x111 826074471)) 826074471))
(assert (x317 x1872))
(assert (= (x1778 x78) (ite (and x1711 x1747 x851) (x1203 x78) (x1157 x78))))
(assert (x920 x990))
(assert (x317 x1188))
(assert (x317 x1794))
(assert (x920 x493))
(assert (= (or (and x65 x191) x1465) x1608))
(assert (x317 x1531))
(assert (x317 x130))
(assert (x317 x1394))
(assert (=> (> (+ 10000 1) x501) (= (x111 x501) (x714 x501))))
(assert (=> (> (+ 10000 1) x1391) (= (x714 x1391) (x111 x1391))))
(assert (x317 x384))
(assert (= (x1078 (- x1740 x51)) (x100 (- x1740 x51))))
(assert (x317 x1616))
(assert (x317 x1626))
(assert (= (and x1077 (not x424)) x1807))
(assert (x317 x351))
(assert (x317 x1757))
(assert (x317 x1349))
(assert (= (x1556 (- x1452 164)) (x1444 (- x1452 164))))
(assert (x920 x711))
(assert (= true x520))
(assert (x317 x406))
(assert (x317 x132))
(assert (x317 x493))
(assert (x920 x792))
(assert (x317 x1307))
(assert (=> (> (+ 10000 1) x792) (= (x714 x792) (x111 x792))))
(assert (x317 x349))
(assert (x317 x610))
(assert (x317 x835))
(assert (x317 x1754))
(assert (x317 x1726))
(assert (= (=> (and (= x372 (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x768 (x714 x351)))) x1158 (= x1158 (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1501)) (= (x1322 (x714 274184521717934524641157099916833587206)) x993) (= x403 (= x351 274184521717934524641157099916833587218)) x1709 (= x1649 (x1322 (x714 274184521717934524641157099916833587206))) (= x1709 (>= x993 0)) (= (x768 (x714 x351)) x132) (= x1820 x1704) x372 (= x1501 (x1322 (x714 x351)))) (and (=> (and (not x972) (not (< x1592 649617121)) (= x123 (or (and (> 64 x1230) (= (<= x1230 57896044618658097711785492504343953926634992332820282019728792003956564819967) true)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1230))) (= (x332 (x714 274184521717934524641157099916833587206) (x111 1) 0) x961) (= x683 274184521717934524641157099916833587206) (= (x559 x961) x899) (not (= 826074471 x1592)) (<= 0 x899) (= (x20 (x714 274184521717934524641157099916833587218)) x62) (<= x214 1461501637330902918203684832716283019655932542975) (not (> 4 x76)) (= x14 x1417) (= x214 x649) (= x725 1) (= x830 x14) (not (= 2514000705 x1592)) (= x76 x1820) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x722) (= x1072 (+ x695 x1737)) (= x1348 32) (not (= x1592 1889567281)) (= x1038 (< x899 x14)) (= x1737 x830) (not x1038) (= x695 x722) (= 68 x76) (= x1699 (x1448 (- x899 x14))) (= (x332 (x714 x649) (x111 1) 0) x1544) (not x123) (= (x73 x1544) x722) (= x1592 2835717307) (= x972 (<= 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x830 x722))) (<= 0 x722) (= x34 (> x830 x899)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x899) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x722 x830)) (not x34) (= (x332 (x714 x649) (x111 1) 0) x1853) (= 274184521717934524641157099916833587206 x1160) (> x62 0) x403 (not (= 649617121 x1592)) (= x1749 76450787359836037641860180984291677749980919077056822294353438043884394381312) (= (x332 (x714 274184521717934524641157099916833587206) (x111 1) 0) x1505) (= x1230 (x1448 (- x76 4)))) x1784) (=> (not x403) x925))) x1518))
(assert (x920 x1213))
(assert (x317 x1673))
(assert (x317 x23))
(assert (= x383 (=> (and (= (x802 1461501637330902918203684832716283019655932542975 x178) x1010) (= (x332 (x714 x153) x1492 0) x81) (= (x332 (x714 x553) (x111 4) 0) x1227) (= (x802 1461501637330902918203684832716283019655932542975 x178) x711) (= (x332 (x714 x711) x161 0) x1787) (= (x884 x1787) x1240) (= (x332 (x714 x1541) x1405 0) x1492) (= x204 (x802 1461501637330902918203684832716283019655932542975 x531)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x84) (= x289 (x1448 (- x916 x84))) (not (< x916 x84)) (= x1541 (x802 1461501637330902918203684832716283019655932542975 x178)) (= (x332 (x714 x553) (x111 3) 0) x1405) (= (x332 (x714 x204) x666 0) x1671) (= (x802 1461501637330902918203684832716283019655932542975 x1519) x224) (>= x916 0) (= (x332 (x714 x1010) x1227 0) x666) (<= x916 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x9 (= x289 0)) (= x153 (x802 1461501637330902918203684832716283019655932542975 x531)) (= x916 (x205 x81)) (<= 0 x84) (= (x332 (x714 x553) (x111 5) 0) x161) (= x84 (x343 x914)) (= x914 (x332 (x714 x224) x1671 0)) (<= x1240 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= 0 x1240)) (and (=> x9 x745) (=> (and (<= x530 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= 0 x550) (= (< 0 x782) x797) (= (x1669 (+ x818 100)) x1730) (= (x332 (x714 x1039) x628 0) x996) (= x143 (+ x1306 x114)) (= (uninterp_mod (* 1000000000000000000 x289) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x1217) (= x682 (x802 1461501637330902918203684832716283019655932542975 x531)) (= x782 (x497 x1865)) (= (x343 x1259) x806) (= x1499 (x802 26959946667150639794667015087019630673637144422540572481103610249215 x829)) (= x216 (x1448 (- x298 32))) (= x189 (x332 (x714 x792) x1171 0)) (<= x806 115792089237316195423570985008687907853269984665640564039457584007913129639935) (or (and x797 (= x1602 (> x782 32)) (= x1513 x551) (= x1384 (x1323 x169)) (= x169 x1498) (or (and (= x1180 32) (not x1602)) (and x1602 (= x394 (> x782 64)) (or (and (or (and (= x1180 96) (not x977)) (and (= (x1323 x162) x1232) x977 (= (< 128 x782) x1702) (= x292 (x1669 (+ 160 x152))) (= (x1669 (+ 128 x1865)) x162) (not x1702) (= 128 x1180))) (= x1424 (x1669 (+ x152 128))) (= (> x782 96) x977) (= x653 (x1669 (+ x1865 96))) x394 (= (x1323 x653) x1554)) (and (= 64 x1180) (not x394))) (= (x1669 (+ x1865 64)) x1202) (= (x1323 x1202) x1794) (= (x1669 (+ 96 x152)) x282)))) (and (not x797) (= x1180 0))) (= x1171 (x332 (x714 x553) (x111 11) 0)) x660 (= (x802 1461501637330902918203684832716283019655932542975 x1519) x1765) (= x1039 (x802 1461501637330902918203684832716283019655932542975 x178)) (= (x332 (x714 x1765) x189 0) x1653) (= (x802 1461501637330902918203684832716283019655932542975 x1519) x488) (= x660 (< 0 x1408)) (= x114 x289) (>= x806 0) (= x829 (x1739 x1498)) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x289 x806)) (= x530 (x585 x1653)) (= x792 (x802 1461501637330902918203684832716283019655932542975 x178)) (= x1408 (x20 (x714 x1391))) (= x1324 (* x680 x530)) (not x9) (= (x802 1461501637330902918203684832716283019655932542975 x531) x453) (<= 0 x530) (= (x332 (x714 x488) x468 0) x1259) (= x1498 (x1669 (+ x818 96))) (= (x802 x789 x1079) x550) (= x680 (- (/ x1217 x1240) (uninterp_frac x1217 x1240))) (or (not x1764) (and x1764 (= (x1669 (+ x782 x1513)) x1045))) (= x152 (x1669 (+ 100 x1865))) (= x468 (x332 (x714 x682) x996 0)) (= 1 x789) (> x1240 0) (= x1013 (x1669 (+ x1499 76450787359836037641860180984291677749980919077056822294353438043884394381312))) (= x1489 (x1669 (+ x1865 68))) (= x1513 (x1669 (+ x1730 128))) (= x537 0) (= x628 (x332 (x714 x553) (x111 4) 0)) (< (* x530 x680) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= (- (/ x1324 1000000000000000000) (uninterp_frac x1324 1000000000000000000)) x1533) (= x1079 (ite (< 115792089237316195423570985008687907853269984665640564039457 x289) 1 0)) (= x1764 (> x1180 x782)) (= (x1448 (- x152 x1865)) x298) (= x806 x1306) (= (x802 1461501637330902918203684832716283019655932542975 x1519) x1391)) x323)))))
(assert (x317 x139))
(assert (x317 x1238))
(assert (x317 x465))
(assert (x317 x1475))
(assert (x317 x1803))
(assert (x317 x47))
(assert (x317 x231))
(assert (= (x714 115792089237316195423570985008687907853269984665640564039457584007913129639904) (x111 115792089237316195423570985008687907853269984665640564039457584007913129639904)))
(assert (= 0 (x674 x94)))
(assert (x317 x1049))
(assert (= (x615 (x111 274184521717934524641157099916833587206)) 274184521717934524641157099916833587206))
(assert (x317 x395))
(assert (x317 x1818))
(assert (x317 x116))
(assert (x317 x1258))
(assert (x317 x1561))
(assert (= (x615 (x1833 x1249 1)) (+ (x615 x1249) 1)))
(assert (= (x615 (x1833 x1694 1)) (+ (x615 x1694) 1)))
(assert (x317 x543))
(assert (= (x1078 (- x532 x51)) (x100 (- x532 x51))))
(assert (x317 x1232))
(assert (x317 x316))
(assert (= (x822 (- x872 x1777)) (x631 (- x872 x1777))))
(assert (x317 x1866))
(assert (x317 x434))
(assert (x920 x1359))
(assert (=> (< (- x1207 1) 10000) (= (x111 x1207) (x714 x1207))))
(assert (= (x111 2293535753) (x714 2293535753)))
(assert (x317 x1217))
(assert (x317 x446))
(assert (x317 x183))
(assert (x317 x1528))
(assert (x317 x389))
(assert (x317 x1125))
(assert (x317 x984))
(assert (x317 x262))
(assert (x317 x1767))
(assert (=> (< (- x32 1) 10000) (= (x111 x32) (x714 x32))))
(assert (=> (> (+ 10000 1) x1010) (= (x111 x1010) (x714 x1010))))
(assert (x1407 x1030))
(assert (x317 x898))
(assert (x317 x358))
(assert (x317 x1140))
(assert (= (=> (= (= 274184521717934524641157099916833587214 x107) x238) (and (=> (and (>= 1461501637330902918203684832716283019655932542975 x1049) x238 (= x324 1) (not (> 4 x569)) (= x1288 (x20 (x714 274184521717934524641157099916833587214))) (= 36 x569) (= x451 (x584 x594)) (<= x451 115792089237316195423570985008687907853269984665640564039457584007913129639935) (not (= 826074471 x219)) (= x1755 (x1448 (- x569 4))) (= x569 36) (= (x332 (x714 x1472) (x111 1) 0) x594) (= (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1755) (and (> 32 x1755) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1755) true))) x1246) (not (> 649617121 x219)) (= x979 32) (not (= 649617121 x219)) (not x1246) (= x1472 x1049) (>= x451 0) (= x219 1889567281) (< 0 x1288) (= x237 50942633119752846454219349998365661925608737367104304655302372697894809501696)) x1151) (=> (not x238) x504))) x274))
(assert (x317 x76))
(assert (x317 x391))
(assert (x317 x1762))
(assert (x317 x1539))
(assert (x920 x1126))
(assert (= (x615 (x111 604800)) 604800))
(assert (x317 x270))
(assert (x317 x1548))
(assert (= x1207 (x615 (x714 x1207))))
(assert (x317 x1656))
(assert (x317 x1053))
(assert (x317 x1820))
(assert (= 0 (x1121 x835)))
(assert (x317 x393))
(assert (x317 x1288))
(assert (=> (> (+ 10000 1) x204) (= (x111 x204) (x714 x204))))
(assert (= (and x1525 (not x779)) x874))
(assert (x317 x1359))
(assert (x317 x1214))
(assert (x317 x1281))
(assert (= 759532456 (x615 (x111 759532456))))
(assert (= x1048 (=> (= x424 (= 274184521717934524641157099916833587214 x1087)) (and (=> (not x424) x962) (=> (and (not (= 2514000705 x1626)) (= x1503 (x1811 x483)) (not x788) (not x1269) (not x433) (= (x332 (x714 274184521717934524641157099916833587206) (x111 1) 0) x1330) (not (= 1889567281 x1626)) (= (x20 (x714 274184521717934524641157099916833587214)) x427) (= x1557 (x332 (x714 x32) (x111 1) 0)) (= x1433 x283) (= x1400 x392) (= 68 x544) (>= x1503 0) (= (+ x1433 x173) x1047) (<= x311 1461501637330902918203684832716283019655932542975) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x283) (< (+ x46 x283) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= 274184521717934524641157099916833587206 x1613) (= x788 (or (> x48 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (> 64 x48) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x48) true)))) (= 274184521717934524641157099916833587206 x1242) x424 (= x283 (x1181 x727)) (= x1125 x887) (= 76450787359836037641860180984291677749980919077056822294353438043884394381312 x693) (<= 0 x283) (not x72) (= x1706 1) (= x697 32) (<= x1503 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x1626 2835717307) (= x199 x544) (< 0 x427) (= x1269 (> x1125 x1503)) (= (x332 (x714 274184521717934524641157099916833587206) (x111 1) 0) x483) (= (> x46 x1503) x433) (= x46 x173) (not (= 826074471 x1626)) (= x46 x1125) (= x32 x311) (= (x332 (x714 x32) (x111 1) 0) x727) (not (> 649617121 x1626)) (= (>= (+ x46 x283) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x72) (= x6 (x1448 (- x1503 x1125))) (= x48 (x1448 (- x544 4))) (not (> 4 x544)) (not (= x1626 649617121))) x1005)))))
(assert (x317 x425))
(assert (= (x615 (x714 x583)) x583))
(assert (x317 x218))
(assert (x317 x220))
(assert (= x1256 (x615 (x714 x1256))))
(assert (=> (> (+ 10000 1) x900) (= (x111 x900) (x714 x900))))
(assert (x317 x435))
(assert (x317 x957))
(assert (= (x615 (x714 x495)) x495))
(assert (x317 x730))
(assert (x536 x1612 x1105))
(assert (= (x615 (x111 2258409472)) 2258409472))
(assert (= x228 (x615 (x714 x228))))
(assert (= (x615 (x714 x178)) x178))
(assert (= x1206 (and x849 (not x1377))))
(assert (= (x1078 (- x21 x51)) (x100 (- x21 x51))))
(assert (x317 x1503))
(assert (x317 x171))
(assert (x317 x350))
(assert (x317 x895))
(assert (=> (< (- x1142 1) 10000) (= (x714 x1142) (x111 x1142))))
(assert (x920 x1256))
(assert (= (x100 (- 132 x51)) (x1078 (- 132 x51))))
(assert (= (x615 (x714 x1541)) x1541))
(assert (x785 x178 x505))
(assert (x317 x1777))
(assert (= (x111 759532456) (x714 759532456)))
(assert (x317 x519))
(assert (x317 x1272))
(assert (x317 x1079))
(check-sat)
