(set-option :print-success false)
(set-option :produce-models true)
(set-logic QF_UFDTNRA)
(declare-fun uninterp_frac (Real Real) Real)
(define-fun axiom_frac_bound ((d1 Real) (d2 Real)) Bool (and (=> (> d2 0) (and (<= 0.0 (uninterp_frac d1 d2)) (< (uninterp_frac d1 d2) 1.0))) (=> (< d2 0) (and (>= 0.0 (uninterp_frac d1 d2)) (> (uninterp_frac d1 d2) (- 1.0))))))
(define-fun axiom_frac_zero ((d1 Real) (d2 Real) (m1 Real) (m2 Real) (e Real)) Bool (=> (and (= d1 (* m1 m2)) (or (= d2 m1) (= d2 m2))) (= e 0)))
(define-fun uninterp_mod ((x Real) (m Real)) Real (ite (and (>= x 0) (< x m)) x (ite (and (>= x m) (< x (+ m m))) (- x m) (ite (and (>= x (- m)) (< x 0)) (+ x m) (* m (uninterp_frac x m))))))
(define-fun axiom_int_approximation ((x Real)) Bool (or (= x 0) (>= x 1) (<= x (- 1))))
(declare-datatypes ((x824 0)) (((x1096 (x1191 x824) (x255 Real)) (x1482 (x119 x824) (x1988 x824) (x1474 Real)) (x273 (x164 Real)))))
(declare-fun x1072 () Real)
(declare-fun x117 () Real)
(declare-fun x1423 () Real)
(declare-fun x320 () Real)
(declare-fun x1179 () Real)
(declare-fun x158 () Real)
(declare-fun x1591 () Real)
(declare-fun x993 () Real)
(declare-fun x1198 () Real)
(declare-fun x167 () Real)
(declare-fun x1264 () Real)
(declare-fun x1185 () Real)
(declare-fun x1813 () Bool)
(declare-fun x1828 () Bool)
(declare-fun x1184 () Real)
(declare-fun x1352 () Real)
(declare-fun x723 () Bool)
(declare-fun x722 () Real)
(declare-fun x1953 () Bool)
(declare-fun x1320 () Real)
(declare-fun x1568 () Bool)
(declare-fun x776 () Real)
(declare-fun x1608 () Bool)
(declare-fun x1870 () Real)
(declare-fun x77 () Real)
(declare-fun x1804 () Bool)
(declare-fun x1700 () Bool)
(declare-fun x42 () Real)
(declare-fun x1311 () Real)
(declare-fun x213 () Real)
(declare-fun x73 () Real)
(declare-fun x1915 () Real)
(declare-fun x509 () Real)
(declare-fun x1064 () Real)
(declare-fun x403 () Real)
(declare-fun x1645 (x824) Real)
(declare-fun x549 () Real)
(declare-fun x655 () Real)
(declare-fun x67 () Real)
(declare-fun x1822 () Real)
(declare-fun x162 () Real)
(declare-fun x1070 () Bool)
(declare-fun x1820 () Real)
(declare-fun x1709 () Bool)
(declare-fun x161 () Real)
(declare-fun x1041 () Real)
(declare-fun x1602 () Real)
(declare-fun x424 () Real)
(declare-fun x1748 () Bool)
(declare-fun x459 (Real) Real)
(declare-fun x1340 () Real)
(declare-fun x1119 () Real)
(declare-fun x1833 () Real)
(declare-fun x1715 () Real)
(declare-fun x1462 () Real)
(declare-fun x360 () Real)
(declare-fun x1914 (Real) Real)
(declare-fun x933 () Bool)
(declare-fun x617 () Real)
(declare-fun x1151 () Bool)
(declare-fun x289 () Bool)
(declare-fun x1765 () Bool)
(declare-fun x444 () Real)
(declare-fun x1981 () Real)
(declare-fun x420 () x824)
(declare-fun x1856 (Real Real) Real)
(declare-fun x1598 () Real)
(declare-fun x726 () Real)
(declare-fun x535 () Real)
(declare-fun x878 () Real)
(declare-fun x1657 () Real)
(declare-fun x1641 () x824)
(declare-fun x1226 () Bool)
(declare-fun x1379 () Bool)
(declare-fun x1382 () Bool)
(declare-fun x870 () Bool)
(declare-fun x1393 () Bool)
(declare-fun x38 () Real)
(declare-fun x351 () Bool)
(declare-fun x1676 () Real)
(declare-fun x479 () Real)
(declare-fun x1102 () Real)
(declare-fun x452 () Real)
(declare-fun x280 () Real)
(declare-fun x1842 () Bool)
(declare-fun x1113 () Real)
(declare-fun x1752 () Real)
(declare-fun x325 () Real)
(declare-fun x1454 () Bool)
(declare-fun x1918 () Bool)
(declare-fun x575 () Real)
(declare-fun x52 (Real) Real)
(declare-fun x418 () Real)
(declare-fun x318 () Real)
(declare-fun x1643 () Bool)
(declare-fun x1282 () Real)
(declare-fun x815 () Real)
(declare-fun x1433 () Real)
(declare-fun x1217 () Real)
(declare-fun x1821 () Bool)
(declare-fun x1624 (Real) Real)
(declare-fun x612 () Real)
(declare-fun x662 () Bool)
(declare-fun x698 () Real)
(declare-fun x476 () Bool)
(declare-fun x51 () Real)
(declare-fun x969 () Bool)
(declare-fun x1578 () Real)
(declare-fun x1089 () Real)
(declare-fun x681 () Bool)
(declare-fun x837 () Real)
(declare-fun x795 () Real)
(declare-fun x572 () Real)
(declare-fun x1699 () Real)
(declare-fun x650 () Real)
(declare-fun x366 () Real)
(declare-fun x305 () Bool)
(declare-fun x399 () Real)
(declare-fun x863 () Real)
(declare-fun x505 () Real)
(declare-fun x1633 () Bool)
(declare-fun x1528 () Real)
(declare-fun x496 () Real)
(declare-fun x137 () Real)
(declare-fun x1133 () Real)
(declare-fun x959 () Bool)
(declare-fun x946 () Real)
(declare-fun x1293 () Bool)
(declare-fun x458 () Real)
(declare-fun x901 () Real)
(declare-fun x909 () Real)
(declare-fun x1903 () Bool)
(declare-fun x829 () x824)
(declare-fun x1724 () Real)
(declare-fun x1342 () Real)
(declare-fun x627 () Bool)
(declare-fun x402 () Real)
(declare-fun x185 (Real) Real)
(declare-fun x1068 () Real)
(declare-fun x335 (Real) Real)
(declare-fun x1812 () Real)
(declare-fun x1109 () Real)
(declare-fun x614 () Real)
(declare-fun x1513 () Real)
(declare-fun x1869 () x824)
(declare-fun x91 () Real)
(declare-fun x631 () Real)
(declare-fun x90 () Real)
(declare-fun x1571 () Bool)
(declare-fun x1243 () Real)
(declare-fun x1570 () Real)
(declare-fun x7 (Real) Real)
(declare-fun x902 () Real)
(declare-fun x250 () Real)
(declare-fun x249 () Real)
(declare-fun x731 () Real)
(declare-fun x1559 () Real)
(declare-fun x40 () Real)
(declare-fun x380 () Real)
(declare-fun x544 () Bool)
(declare-fun x707 () Real)
(declare-fun x988 () Real)
(declare-fun x394 () Bool)
(declare-fun x486 () Real)
(declare-fun x375 () Real)
(declare-fun x1272 () Real)
(declare-fun x644 () Real)
(declare-fun x362 () Real)
(declare-fun x1381 () Real)
(declare-fun x286 () Real)
(declare-fun x798 () Real)
(declare-fun x803 () Real)
(declare-fun x142 () Bool)
(declare-fun x659 () Real)
(declare-fun x1628 () Bool)
(declare-fun x245 () Real)
(declare-fun x1426 () Bool)
(declare-fun x159 () Real)
(declare-fun x1397 () Real)
(declare-fun x1477 () Real)
(declare-fun x97 () Real)
(declare-fun x1689 () Real)
(declare-fun x797 () Real)
(declare-fun x197 () Real)
(declare-fun x1300 () Real)
(declare-fun x1851 () Real)
(declare-fun x114 (Real) Real)
(declare-fun x728 () Real)
(declare-fun x274 () Real)
(declare-fun x1386 () Real)
(declare-fun x1995 () Real)
(declare-fun x300 () Real)
(declare-fun x810 () x824)
(declare-fun x1950 () Real)
(declare-fun x1175 () Real)
(declare-fun x561 () Real)
(declare-fun x1108 () Real)
(declare-fun x128 () Real)
(declare-fun x1579 () Real)
(declare-fun x818 () Real)
(declare-fun x438 (Real) Real)
(declare-fun x60 () Real)
(declare-fun x1242 () Real)
(declare-fun x665 () Real)
(declare-fun x1169 () Real)
(declare-fun x1783 () Real)
(declare-fun x135 () Real)
(declare-fun x860 () Real)
(declare-fun x813 () Bool)
(declare-fun x865 () Real)
(declare-fun x1487 () Real)
(declare-fun x1335 () Bool)
(declare-fun x336 () Bool)
(declare-fun x1737 () Bool)
(declare-fun x1366 () Real)
(declare-fun x1480 () Real)
(declare-fun x994 () Bool)
(declare-fun x1245 () Bool)
(declare-fun x531 () Real)
(declare-fun x1529 () Real)
(declare-fun x525 () x824)
(declare-fun x931 () Real)
(declare-fun x809 (Real) Real)
(declare-fun x967 (Real) Real)
(declare-fun x683 () Real)
(declare-fun x247 () Bool)
(declare-fun x1088 (Real) Real)
(declare-fun x1755 () Bool)
(declare-fun x1369 () Real)
(declare-fun x841 () x824)
(declare-fun x1784 () Real)
(declare-fun x675 () Real)
(declare-fun x674 () Real)
(declare-fun x962 () Real)
(declare-fun x442 () Bool)
(declare-fun x1478 () Real)
(declare-fun x1692 () Real)
(declare-fun x259 () Real)
(declare-fun x1500 () Bool)
(declare-fun x1288 () Real)
(declare-fun x719 () Real)
(declare-fun x1714 () Real)
(declare-fun x1231 () Real)
(declare-fun x407 () Real)
(declare-fun x267 () Bool)
(declare-fun x1617 () Real)
(declare-fun x393 () Real)
(declare-fun x199 () Real)
(declare-fun x703 () Real)
(declare-fun x188 () Real)
(declare-fun x354 () Bool)
(declare-fun x966 () Bool)
(declare-fun x1139 () Bool)
(declare-fun x1635 () x824)
(declare-fun x517 () Real)
(declare-fun x1177 () Real)
(declare-fun x342 () Real)
(declare-fun x1862 () Real)
(declare-fun x542 () Real)
(declare-fun x1347 () Bool)
(declare-fun x381 () Real)
(declare-fun x1908 () Real)
(declare-fun x1895 () Bool)
(declare-fun x1567 (x824) Real)
(declare-fun x881 () Real)
(declare-fun x63 () Real)
(declare-fun x109 () Real)
(declare-fun x1137 () Real)
(declare-fun x218 () Bool)
(declare-fun x1831 () Bool)
(declare-fun x1848 () Real)
(declare-fun x11 () Real)
(declare-fun x382 () Real)
(declare-fun x330 () Real)
(declare-fun x1577 (Real) Real)
(declare-fun x1418 () Real)
(declare-fun x1375 () Bool)
(declare-fun x292 () Real)
(declare-fun x1213 () Real)
(declare-fun x754 () x824)
(declare-fun x69 () Bool)
(declare-fun x1392 () Real)
(declare-fun x677 () Bool)
(declare-fun x1053 () Bool)
(declare-fun x202 () Real)
(declare-fun x823 () Bool)
(declare-fun x287 () Real)
(declare-fun x1232 () Real)
(declare-fun x562 () Real)
(declare-fun x383 () Bool)
(declare-fun x113 () Real)
(declare-fun x747 () Real)
(declare-fun x187 () Bool)
(declare-fun x212 () Real)
(declare-fun x1161 () Real)
(declare-fun x510 () Real)
(declare-fun x49 () Bool)
(declare-fun x1248 () Real)
(declare-fun x533 () Bool)
(declare-fun x1104 () Real)
(declare-fun x565 () Real)
(declare-fun x88 () Bool)
(declare-fun x1022 () Bool)
(declare-fun x1026 () Real)
(declare-fun x784 () Real)
(declare-fun x1244 (Real) Real)
(declare-fun x1887 () Real)
(declare-fun x1100 () Real)
(declare-fun x1920 () Real)
(declare-fun x1757 () Bool)
(declare-fun x329 () Real)
(declare-fun x1614 () Real)
(declare-fun x460 () x824)
(declare-fun x940 () Real)
(declare-fun x338 () Real)
(declare-fun x1237 () Real)
(declare-fun x1710 () Real)
(declare-fun x1377 () Real)
(declare-fun x1432 () Real)
(declare-fun x108 () Bool)
(declare-fun x1636 (Real) Real)
(declare-fun x1931 () Bool)
(declare-fun x990 () x824)
(declare-fun x1697 (Real) Real)
(declare-fun x1004 () Real)
(declare-fun x34 () Bool)
(declare-fun x396 () Real)
(declare-fun x1721 (Real) Real)
(declare-fun x898 () Real)
(declare-fun x1695 () Real)
(declare-fun x1427 () Real)
(declare-fun x1346 () x824)
(declare-fun x625 () Real)
(declare-fun x290 () Real)
(declare-fun x1533 () Real)
(declare-fun x775 () x824)
(declare-fun x1792 () Bool)
(declare-fun x532 () Real)
(declare-fun x1586 () Real)
(declare-fun x1281 () x824)
(declare-fun x1443 () Bool)
(declare-fun x230 () Real)
(declare-fun x1303 () Real)
(declare-fun x1134 () x824)
(declare-fun x253 () Real)
(declare-fun x734 (Real) Real)
(declare-fun x1494 () Real)
(declare-fun x537 () Real)
(declare-fun x1727 () Real)
(declare-fun x1838 () Real)
(declare-fun x3 () Real)
(declare-fun x712 () Real)
(declare-fun x1428 () Real)
(declare-fun x194 () Real)
(declare-fun x1195 () Real)
(declare-fun x1629 () Real)
(declare-fun x155 () Real)
(declare-fun x546 () Real)
(declare-fun x20 () Bool)
(declare-fun x1790 () Real)
(declare-fun x1103 () Real)
(declare-fun x254 () Real)
(declare-fun x357 () Real)
(declare-fun x1002 () Real)
(declare-fun x408 () Bool)
(declare-fun x1037 () Real)
(declare-fun x678 (Real) Real)
(declare-fun x611 () Real)
(declare-fun x1 () Real)
(declare-fun x71 () Real)
(declare-fun x21 () Real)
(declare-fun x275 () Bool)
(declare-fun x907 () Bool)
(declare-fun x1325 () Real)
(declare-fun x173 () Bool)
(declare-fun x1849 () Real)
(declare-fun x1922 () x824)
(declare-fun x1304 () x824)
(declare-fun x308 () Real)
(declare-fun x1263 () Bool)
(declare-fun x1157 () Bool)
(declare-fun x1413 () Real)
(declare-fun x1604 () Real)
(declare-fun x307 () Real)
(declare-fun x1631 () Bool)
(declare-fun x1983 () Real)
(declare-fun x1871 () Real)
(declare-fun x1440 () Bool)
(declare-fun x693 () Real)
(declare-fun x1952 () Real)
(declare-fun x657 () Real)
(declare-fun x1260 () Real)
(declare-fun x1854 () Bool)
(declare-fun x406 () Real)
(declare-fun x1182 () Real)
(declare-fun x555 () Real)
(declare-fun x1406 () Real)
(declare-fun x1722 () Real)
(declare-fun x1162 () Real)
(declare-fun x1968 () Real)
(declare-fun x918 () Real)
(declare-fun x1176 () Real)
(declare-fun x1332 () Real)
(declare-fun x1549 () Bool)
(declare-fun x1285 () Real)
(declare-fun x33 () Real)
(declare-fun x992 () Real)
(declare-fun x621 () Real)
(declare-fun x547 () Real)
(declare-fun x1663 () Real)
(declare-fun x1853 () Bool)
(declare-fun x1780 () Real)
(declare-fun x87 () Real)
(declare-fun x996 () Real)
(declare-fun x982 () Real)
(declare-fun x24 () x824)
(declare-fun x140 () Real)
(declare-fun x498 (x824) Real)
(declare-fun x1810 () Real)
(declare-fun x1075 () Bool)
(declare-fun x997 () Real)
(declare-fun x1065 () Real)
(declare-fun x788 () Real)
(declare-fun x17 (x824) Real)
(declare-fun x1077 () Real)
(declare-fun x1527 () Real)
(declare-fun x495 () Real)
(declare-fun x1114 () Real)
(declare-fun x1499 () Real)
(declare-fun x970 () Real)
(declare-fun x1547 () Bool)
(declare-fun x1341 () Bool)
(declare-fun x1215 (x824) Real)
(declare-fun x1798 () Bool)
(declare-fun x633 () Real)
(declare-fun x1131 () Real)
(declare-fun x1284 () Real)
(declare-fun x819 () Real)
(declare-fun x830 () Real)
(declare-fun x577 () Bool)
(declare-fun x206 () Real)
(declare-fun x1056 () Real)
(declare-fun x576 () Real)
(declare-fun x1538 () Bool)
(declare-fun x523 () Bool)
(declare-fun x1681 () Real)
(declare-fun x302 () Real)
(declare-fun x41 () Real)
(declare-fun x129 () Real)
(declare-fun x1271 () Real)
(declare-fun x930 () Bool)
(declare-fun x1994 () Real)
(declare-fun x1319 () Bool)
(declare-fun x1507 () Bool)
(declare-fun x432 () Real)
(declare-fun x143 () Real)
(declare-fun x1745 () Real)
(declare-fun x1256 () Real)
(declare-fun x743 () Real)
(declare-fun x1344 () Bool)
(declare-fun x1364 () Bool)
(declare-fun x730 () Real)
(declare-fun x81 () Real)
(declare-fun x690 () Real)
(declare-fun x205 () Real)
(declare-fun x131 () Real)
(declare-fun x1705 () Real)
(declare-fun x1926 () Real)
(declare-fun x1759 () Real)
(declare-fun x1770 () Real)
(declare-fun x1395 () Real)
(declare-fun x760 () Real)
(declare-fun x668 () Real)
(declare-fun x494 () Real)
(declare-fun x484 () Real)
(declare-fun x593 () Bool)
(declare-fun x1117 () Real)
(declare-fun x927 () Real)
(declare-fun x1939 () Real)
(declare-fun x1544 () Real)
(declare-fun x596 () Bool)
(declare-fun x1435 () Real)
(declare-fun x376 () x824)
(declare-fun x220 () Real)
(declare-fun x1959 () Real)
(declare-fun x912 () Real)
(declare-fun x1729 () Real)
(declare-fun x733 () Real)
(declare-fun x66 () Real)
(declare-fun x149 () Bool)
(declare-fun x1704 () Bool)
(declare-fun x1760 () Bool)
(declare-fun x806 () Real)
(declare-fun x508 (x824) Real)
(declare-fun x156 () Bool)
(declare-fun x1090 () Real)
(declare-fun x740 () Real)
(declare-fun x309 () Real)
(declare-fun x919 () Real)
(declare-fun x1470 () Real)
(declare-fun x647 () Bool)
(declare-fun x139 () Real)
(declare-fun x1360 () Real)
(declare-fun x1446 () Real)
(declare-fun x1944 (Real) Real)
(declare-fun x1580 () Real)
(declare-fun x956 () Real)
(declare-fun x1742 () Real)
(declare-fun x217 () Real)
(declare-fun x1962 () Real)
(declare-fun x59 () Real)
(declare-fun x1003 () Real)
(declare-fun x58 () Real)
(declare-fun x1118 () Real)
(declare-fun x258 () Real)
(declare-fun x711 () Real)
(declare-fun x812 () Real)
(declare-fun x1775 () Bool)
(declare-fun x1447 () Real)
(declare-fun x1647 () Real)
(declare-fun x1680 () Real)
(declare-fun x1826 () Real)
(declare-fun x973 () Real)
(declare-fun x1442 () Real)
(declare-fun x1502 () Real)
(declare-fun x1204 () Real)
(declare-fun x986 () Real)
(declare-fun x1905 () Real)
(declare-fun x146 () Bool)
(declare-fun x928 () Real)
(declare-fun x1882 () Real)
(declare-fun x1537 () Real)
(declare-fun x1776 () Bool)
(declare-fun x1690 () Bool)
(declare-fun x1202 () Bool)
(declare-fun x1317 () Real)
(declare-fun x50 () Bool)
(declare-fun x765 () Real)
(declare-fun x94 () Real)
(declare-fun x1216 () Real)
(declare-fun x1793 () x824)
(declare-fun x1458 () Real)
(declare-fun x1736 () Bool)
(declare-fun x1240 () Real)
(declare-fun x1673 () Real)
(declare-fun x1592 () Real)
(declare-fun x16 () Real)
(declare-fun x1370 () Bool)
(declare-fun x729 () Real)
(declare-fun x1286 () Real)
(declare-fun x658 () Real)
(declare-fun x439 () Real)
(declare-fun x417 () Bool)
(declare-fun x1638 () Real)
(declare-fun x1582 () Real)
(declare-fun x1069 () Real)
(declare-fun x816 () Real)
(declare-fun x1989 () Real)
(declare-fun x1595 () Real)
(declare-fun x1993 (Real) Real)
(declare-fun x710 () Real)
(declare-fun x1855 () Real)
(declare-fun x790 () Bool)
(declare-fun x737 () x824)
(declare-fun x989 () Real)
(declare-fun x1720 () Bool)
(declare-fun x619 () Real)
(declare-fun x285 () Real)
(declare-fun x511 () Real)
(declare-fun x1749 () Real)
(declare-fun x160 () Real)
(declare-fun x785 () Bool)
(declare-fun x1919 (Real) Real)
(declare-fun x1033 () Real)
(declare-fun x1153 () Real)
(declare-fun x83 () Real)
(declare-fun x448 () Bool)
(declare-fun x854 () Bool)
(declare-fun x1457 () Bool)
(declare-fun x506 () Bool)
(declare-fun x890 () Real)
(declare-fun x456 () Bool)
(declare-fun x272 () Real)
(declare-fun x1515 () Bool)
(declare-fun x745 () Real)
(declare-fun x825 () Real)
(declare-fun x645 (Real) Real)
(declare-fun x1940 () Bool)
(declare-fun x180 () Real)
(declare-fun x102 () Bool)
(declare-fun x25 () Bool)
(declare-fun x76 () Bool)
(declare-fun x1611 () Real)
(declare-fun x911 () Bool)
(declare-fun x1970 () Real)
(declare-fun x1520 () x824)
(declare-fun x145 () x824)
(declare-fun x1336 () Bool)
(declare-fun x1930 () Real)
(declare-fun x1878 () Real)
(declare-fun x1105 () Real)
(declare-fun x1233 () Real)
(declare-fun x502 () Real)
(declare-fun x904 () Real)
(declare-fun x1052 () Real)
(declare-fun x616 () Real)
(declare-fun x1308 () Real)
(declare-fun x1801 () Real)
(declare-fun x717 () Bool)
(declare-fun x491 () Real)
(declare-fun x1455 () Bool)
(declare-fun x251 () Real)
(declare-fun x1111 () Real)
(declare-fun x1612 () Bool)
(declare-fun x1730 () Real)
(declare-fun x1522 () Real)
(declare-fun x574 () Real)
(declare-fun x700 () Real)
(declare-fun x32 () Real)
(declare-fun x592 () Real)
(declare-fun x1675 () Real)
(declare-fun x671 () Real)
(declare-fun x939 () Bool)
(declare-fun x1398 () Real)
(declare-fun x1621 () Real)
(declare-fun x1016 () Real)
(declare-fun x1209 () Real)
(declare-fun x1489 () Real)
(declare-fun x952 () Bool)
(declare-fun x759 () Real)
(declare-fun x1866 () Bool)
(declare-fun x141 () Real)
(declare-fun x924 () Real)
(declare-fun x31 () Real)
(declare-fun x926 () Real)
(declare-fun x1671 () Real)
(declare-fun x1024 () Bool)
(declare-fun x781 () Real)
(declare-fun x1868 () Real)
(declare-fun x1334 () Real)
(declare-fun x514 () Bool)
(declare-fun x1129 () Real)
(declare-fun x306 (Real) Real)
(declare-fun x1383 () Real)
(declare-fun x1961 () x824)
(declare-fun x1587 () Real)
(declare-fun x942 () Real)
(declare-fun x1365 () Real)
(declare-fun x1315 () Real)
(declare-fun x715 () Real)
(declare-fun x1510 () Real)
(declare-fun x1518 () Real)
(declare-fun x1743 () Real)
(declare-fun x414 () Bool)
(declare-fun x772 () Real)
(declare-fun x295 () Bool)
(declare-fun x241 () Real)
(declare-fun x624 () Real)
(declare-fun x1292 () Real)
(declare-fun x602 () Bool)
(declare-fun x1318 () Real)
(declare-fun x789 () Real)
(declare-fun x483 () Bool)
(declare-fun x1372 () Real)
(declare-fun x1906 () x824)
(declare-fun x1152 () Real)
(declare-fun x322 () Real)
(declare-fun x1711 () Bool)
(declare-fun x725 () Real)
(declare-fun x1637 () Real)
(declare-fun x1845 () Real)
(declare-fun x222 () Bool)
(declare-fun x493 () Real)
(declare-fun x518 () Real)
(declare-fun x1550 () Real)
(declare-fun x1701 () Bool)
(declare-fun x978 () Real)
(declare-fun x1561 () Real)
(declare-fun x2 () Real)
(declare-fun x1221 () Real)
(declare-fun x1472 () Real)
(declare-fun x1532 () Real)
(declare-fun x1492 () Real)
(declare-fun x1181 () Real)
(declare-fun x691 () Real)
(declare-fun x1166 () Real)
(declare-fun x99 () Real)
(declare-fun x833 () Bool)
(declare-fun x2001 () Bool)
(declare-fun x426 () Real)
(declare-fun x709 () Bool)
(declare-fun x553 () Real)
(declare-fun x61 () Real)
(declare-fun x1450 () Real)
(declare-fun x1027 () Bool)
(declare-fun x378 () Real)
(declare-fun x1982 () Real)
(declare-fun x1627 () Real)
(declare-fun x1733 () Real)
(declare-fun x1713 () Bool)
(declare-fun x1358 () Real)
(declare-fun x1815 () Real)
(declare-fun x1388 () Real)
(declare-fun x127 () Bool)
(declare-fun x416 () Real)
(declare-fun x920 () Real)
(declare-fun x1824 () Real)
(declare-fun x694 () Real)
(declare-fun x397 () Real)
(declare-fun x175 () x824)
(declare-fun x780 () Real)
(declare-fun x304 () Bool)
(declare-fun x226 () Real)
(declare-fun x1150 () Real)
(declare-fun x1574 () Bool)
(declare-fun x774 () Real)
(declare-fun x1519 () Real)
(declare-fun x1684 () Real)
(declare-fun x6 () Real)
(declare-fun x36 () Real)
(declare-fun x727 () Real)
(declare-fun x19 () Real)
(declare-fun x296 () Bool)
(declare-fun x1642 () Real)
(declare-fun x15 () Real)
(declare-fun x1040 () Bool)
(declare-fun x1548 () Bool)
(declare-fun x524 () Real)
(declare-fun x412 () Real)
(declare-fun x1186 () Real)
(declare-fun x144 () Bool)
(declare-fun x1781 () Real)
(declare-fun x871 () Real)
(declare-fun x321 () Bool)
(declare-fun x528 () Real)
(declare-fun x1907 () Real)
(declare-fun x203 () Bool)
(declare-fun x682 () Bool)
(declare-fun x124 () Bool)
(declare-fun x1728 () Real)
(declare-fun x571 () Real)
(declare-fun x807 () Real)
(declare-fun x263 () Bool)
(declare-fun x922 () Real)
(declare-fun x80 () Real)
(declare-fun x1497 () Real)
(declare-fun x374 () Real)
(declare-fun x1844 (Real) Real)
(declare-fun x1312 () Real)
(declare-fun x5 () Bool)
(declare-fun x763 () Bool)
(declare-fun x337 () Real)
(declare-fun x85 () Real)
(declare-fun x43 () Real)
(declare-fun x303 () Real)
(declare-fun x270 () Real)
(declare-fun x353 () Real)
(declare-fun x929 () Bool)
(declare-fun x1249 () Bool)
(declare-fun x1999 () Real)
(declare-fun x138 (Real) Real)
(declare-fun x1062 () Real)
(declare-fun x492 () Real)
(declare-fun x913 () Bool)
(declare-fun x1837 () Bool)
(declare-fun x1229 () Bool)
(declare-fun x208 () Real)
(declare-fun x1422 () Real)
(declare-fun x1238 () Real)
(declare-fun x1323 () Real)
(declare-fun x697 () Bool)
(declare-fun x365 () Real)
(declare-fun x1247 () Real)
(declare-fun x777 () Bool)
(declare-fun x879 () Bool)
(declare-fun x244 () Real)
(declare-fun x449 () Real)
(declare-fun x1639 () Real)
(declare-fun x172 () Real)
(declare-fun x1960 () Real)
(declare-fun x1588 () Bool)
(declare-fun x489 () Real)
(declare-fun x1949 () Real)
(declare-fun x482 () Bool)
(declare-fun x367 () x824)
(declare-fun x400 (x824) Real)
(declare-fun x949 () Real)
(declare-fun x688 () Real)
(declare-fun x1459 () Real)
(declare-fun x786 () Bool)
(declare-fun x680 () Real)
(declare-fun x896 () Real)
(declare-fun x271 (x824) Real)
(declare-fun x857 () Bool)
(declare-fun x1498 () Real)
(declare-fun x605 () Real)
(declare-fun x1314 () Real)
(declare-fun x1331 () Real)
(declare-fun x95 () Real)
(declare-fun x1789 () Bool)
(declare-fun x70 () Real)
(declare-fun x1829 () Bool)
(declare-fun x1287 (Real) Real)
(declare-fun x311 () Real)
(declare-fun x429 () Real)
(declare-fun x266 () Bool)
(declare-fun x1747 () Real)
(declare-fun x1524 () Real)
(declare-fun x1557 () Real)
(declare-fun x570 () Bool)
(declare-fun x98 () Real)
(declare-fun x1208 () Real)
(declare-fun x1600 (x824) Real)
(declare-fun x1670 () Real)
(declare-fun x215 () Real)
(declare-fun x1471 () Real)
(declare-fun x1889 () Real)
(declare-fun x1135 () Real)
(declare-fun x1794 () Real)
(declare-fun x1283 (Real) Real)
(declare-fun x401 () Real)
(declare-fun x1506 () Real)
(declare-fun x623 () Real)
(declare-fun x233 () Real)
(declare-fun x84 () Real)
(declare-fun x1021 () Bool)
(declare-fun x1896 () Real)
(declare-fun x1526 () Bool)
(declare-fun x1857 () Real)
(declare-fun x945 () Real)
(declare-fun x766 () Real)
(declare-fun x1337 () Real)
(declare-fun x1192 () Real)
(declare-fun x582 () Real)
(declare-fun x1753 () Bool)
(declare-fun x626 () Bool)
(declare-fun x1330 () Bool)
(declare-fun x1140 () Bool)
(declare-fun x597 () Bool)
(declare-fun x30 () Real)
(declare-fun x48 () Bool)
(declare-fun x1696 () Bool)
(declare-fun x1958 () Bool)
(declare-fun x1220 () Real)
(declare-fun x110 () Real)
(declare-fun x1990 () Real)
(declare-fun x689 () Real)
(declare-fun x1928 () Real)
(declare-fun x1904 () Real)
(declare-fun x499 () x824)
(declare-fun x888 () Bool)
(declare-fun x661 () Real)
(declare-fun x1536 () Real)
(declare-fun x1246 () Real)
(declare-fun x1298 () Real)
(declare-fun x937 () Real)
(declare-fun x469 () Real)
(declare-fun x333 () Real)
(declare-fun x480 () Real)
(declare-fun x960 () Real)
(declare-fun x828 () Real)
(declare-fun x136 () Real)
(declare-fun x1106 () Real)
(declare-fun x82 () Real)
(declare-fun x527 (Real Real) Real)
(declare-fun x1011 () Real)
(declare-fun x168 () Real)
(declare-fun x1909 (Real) Real)
(declare-fun x1840 () Real)
(declare-fun x1294 () Real)
(declare-fun x598 () Real)
(declare-fun x370 () Real)
(declare-fun x1080 () Real)
(declare-fun x607 () Real)
(declare-fun x487 () x824)
(declare-fun x297 () Real)
(declare-fun x557 () Bool)
(declare-fun x1401 () Real)
(declare-fun x1805 () Real)
(declare-fun x1575 () Real)
(declare-fun x166 () Bool)
(declare-fun x899 () Real)
(declare-fun x1092 () Real)
(declare-fun x395 () Real)
(declare-fun x1306 () Real)
(declare-fun x800 () Real)
(declare-fun x1434 () Real)
(declare-fun x1787 () Real)
(declare-fun x679 () Real)
(declare-fun x1563 () Real)
(declare-fun x974 () Real)
(declare-fun x1000 () Real)
(declare-fun x1667 () Real)
(declare-fun x856 () Real)
(declare-fun x1766 (Real) Real)
(declare-fun x1473 () Real)
(declare-fun x1484 (Real) Real)
(declare-fun x670 () Real)
(declare-fun x1158 () Real)
(declare-fun x1558 () Real)
(declare-fun x750 () x824)
(declare-fun x1867 () Real)
(declare-fun x1005 () Real)
(declare-fun x853 () Real)
(declare-fun x1171 () Real)
(declare-fun x347 () Bool)
(declare-fun x1957 (Real) Real)
(declare-fun x1861 () Real)
(declare-fun x1400 () Real)
(declare-fun x1956 () Bool)
(declare-fun x1539 () Real)
(declare-fun x639 () Real)
(declare-fun x1159 () Real)
(declare-fun x125 () Bool)
(declare-fun x634 () Real)
(declare-fun x1858 () Bool)
(declare-fun x1324 () x824)
(declare-fun x434 () Real)
(declare-fun x1546 () Real)
(declare-fun x1634 () Real)
(declare-fun x792 () Real)
(declare-fun x838 () Real)
(declare-fun x917 () Real)
(declare-fun x1739 () Real)
(declare-fun x219 (Real) Real)
(declare-fun x405 () Bool)
(declare-fun x1439 () Bool)
(declare-fun x559 () Bool)
(declare-fun x1116 () Real)
(declare-fun x1566 () Real)
(declare-fun x1043 () Real)
(declare-fun x2003 () Real)
(declare-fun x256 () Real)
(declare-fun x1865 () Real)
(declare-fun x1008 (Real) Real)
(declare-fun x851 () Bool)
(declare-fun x831 () Bool)
(declare-fun x1417 () Bool)
(declare-fun x1963 () Real)
(declare-fun x908 () Real)
(declare-fun x791 () Real)
(declare-fun x1031 () Real)
(declare-fun x1309 () Real)
(declare-fun x529 () Bool)
(declare-fun x716 () Real)
(declare-fun x1235 () Real)
(declare-fun x1255 () Real)
(declare-fun x269 () Real)
(declare-fun x1404 () Bool)
(declare-fun x29 () Real)
(declare-fun x485 () Real)
(declare-fun x1603 () Real)
(declare-fun x1738 () Real)
(declare-fun x948 () Bool)
(declare-fun x632 () Real)
(declare-fun x615 () Bool)
(declare-fun x1656 () Real)
(declare-fun x1066 () Bool)
(declare-fun x193 () Real)
(declare-fun x583 () Real)
(declare-fun x1938 (Real) Real)
(declare-fun x1785 () Real)
(declare-fun x1207 () x824)
(declare-fun x419 () Real)
(declare-fun x283 () Bool)
(declare-fun x1569 () Real)
(declare-fun x1606 () Real)
(declare-fun x652 () Real)
(declare-fun x1581 () Real)
(declare-fun x386 () Real)
(declare-fun x1951 () Real)
(declare-fun x859 () x824)
(declare-fun x540 () Real)
(declare-fun x1225 (Real) Real)
(declare-fun x1301 () Bool)
(declare-fun x53 () Bool)
(declare-fun x232 () Real)
(declare-fun x604 () Real)
(declare-fun x332 () Real)
(declare-fun x735 () Real)
(declare-fun x872 () Bool)
(declare-fun x282 (Real) Real)
(declare-fun x1197 () Bool)
(declare-fun x1253 () x824)
(declare-fun x96 () Real)
(declare-fun x1059 (Real) Real)
(declare-fun x882 () Real)
(declare-fun x708 () Real)
(declare-fun x522 () Bool)
(declare-fun x885 () Real)
(declare-fun x1122 () Real)
(declare-fun x1085 () Real)
(declare-fun x564 () Bool)
(declare-fun x1014 () Real)
(declare-fun x1333 () Bool)
(declare-fun x1493 (Real) Real)
(declare-fun x802 () Bool)
(declare-fun x472 () Bool)
(declare-fun x1874 () Real)
(declare-fun x839 () Real)
(declare-fun x1917 () Bool)
(declare-fun x1327 () Real)
(declare-fun x1082 () Real)
(declare-fun x372 () Bool)
(declare-fun x1823 () Real)
(declare-fun x1679 () Real)
(declare-fun x1758 () Real)
(declare-fun x686 () Real)
(declare-fun x1554 () Real)
(declare-fun x1444 () Real)
(declare-fun x1429 () Real)
(declare-fun x704 () Bool)
(declare-fun x1827 () Bool)
(declare-fun x1910 () Real)
(declare-fun x567 () Real)
(declare-fun x1644 () Bool)
(declare-fun x1517 () x824)
(declare-fun x1424 () Real)
(declare-fun x1257 () Real)
(declare-fun x1655 () Real)
(declare-fun x1782 () Real)
(declare-fun x893 () x824)
(declare-fun x1437 () Bool)
(declare-fun x387 () Bool)
(declare-fun x89 () Real)
(declare-fun x1545 () Bool)
(declare-fun x454 () Real)
(declare-fun x543 () x824)
(declare-fun x1607 () Bool)
(declare-fun x1771 () Bool)
(declare-fun x1045 () Real)
(declare-fun x1445 () Real)
(declare-fun x1048 () Real)
(declare-fun x1902 () Real)
(declare-fun x1405 () Real)
(declare-fun x348 () Bool)
(declare-fun x1601 () Bool)
(declare-fun x983 () Real)
(declare-fun x313 () Real)
(declare-fun x1086 () Real)
(declare-fun x550 () Real)
(declare-fun x1290 () Real)
(declare-fun x821 () Real)
(declare-fun x1275 () Real)
(declare-fun x183 () Real)
(declare-fun x1020 () Real)
(declare-fun x10 () Real)
(declare-fun x1479 () Real)
(declare-fun x1368 () Real)
(declare-fun x1933 () Real)
(declare-fun x1839 () Bool)
(declare-fun x47 () Real)
(declare-fun x1389 (Real) Real)
(declare-fun x767 () Real)
(declare-fun x169 () Bool)
(declare-fun x1441 () Real)
(declare-fun x1034 () Real)
(declare-fun x1073 () Real)
(declare-fun x312 () Real)
(declare-fun x1886 () Real)
(declare-fun x243 () Real)
(declare-fun x1683 () Real)
(declare-fun x1201 () Real)
(declare-fun x1552 (Real) Real)
(declare-fun x869 (x824) Real)
(declare-fun x1063 (Real) Real)
(declare-fun x536 () Real)
(declare-fun x209 () Real)
(declare-fun x1476 () Real)
(declare-fun x1415 () Real)
(declare-fun x1374 () Real)
(declare-fun x1488 () Bool)
(declare-fun x1593 () Bool)
(declare-fun x120 () Bool)
(declare-fun x207 () Real)
(declare-fun x1356 () Bool)
(declare-fun x455 () Real)
(declare-fun x1818 () Real)
(declare-fun x1652 () Real)
(declare-fun x1843 () Real)
(declare-fun x862 () Real)
(declare-fun x1971 () Real)
(declare-fun x147 () Real)
(declare-fun x610 () Real)
(declare-fun x702 () Real)
(declare-fun x1280 (Real) Real)
(declare-fun x858 () Real)
(declare-fun x1596 (Real) Real)
(declare-fun x1408 () Bool)
(declare-fun x1160 () Real)
(declare-fun x1261 () x824)
(declare-fun x1998 () Bool)
(declare-fun x1390 () Real)
(declare-fun x563 () Real)
(declare-fun x379 (Real) Real)
(declare-fun x846 () Real)
(declare-fun x1807 () Bool)
(declare-fun x1948 () Real)
(declare-fun x1460 () Real)
(declare-fun x1155 () Real)
(declare-fun x1110 () Bool)
(declare-fun x1615 () Real)
(declare-fun x964 () Real)
(declare-fun x1013 () Real)
(declare-fun x687 () Real)
(declare-fun x752 () Real)
(declare-fun x415 () Real)
(declare-fun x1746 () Bool)
(declare-fun x223 () Bool)
(declare-fun x1977 () Real)
(declare-fun x1891 () Real)
(declare-fun x377 () Bool)
(declare-fun x1339 () Real)
(declare-fun x739 () Real)
(declare-fun x864 () Real)
(declare-fun x189 () Real)
(declare-fun x474 () Real)
(declare-fun x584 () Bool)
(declare-fun x216 () Real)
(declare-fun x1762 () Bool)
(declare-fun x1466 () Real)
(declare-fun x1648 () Real)
(declare-fun x501 () Real)
(declare-fun x630 () Real)
(declare-fun x1359 () Real)
(declare-fun x1706 () Real)
(declare-fun x1112 () Bool)
(declare-fun x1438 () Real)
(declare-fun x291 () Real)
(declare-fun x1239 () Real)
(declare-fun x327 () Real)
(declare-fun x1051 () Real)
(declare-fun x1932 () Real)
(declare-fun x391 () Bool)
(declare-fun x344 () Real)
(declare-fun x425 () Real)
(declare-fun x1885 () Real)
(declare-fun x1081 () Bool)
(declare-fun x373 () Real)
(declare-fun x1809 () Real)
(declare-fun x1978 () Bool)
(declare-fun x341 () Real)
(declare-fun x1640 () Real)
(declare-fun x984 () Real)
(declare-fun x450 () Real)
(declare-fun x586 () Real)
(declare-fun x473 () Real)
(declare-fun x1353 (Real) Real)
(declare-fun x1514 () Bool)
(declare-fun x608 () Bool)
(declare-fun x892 () Bool)
(declare-fun x2002 () Bool)
(declare-fun x1371 () Real)
(declare-fun x1467 () Real)
(declare-fun x1121 () Real)
(declare-fun x884 () Real)
(declare-fun x1735 () Real)
(declare-fun x1060 () Bool)
(declare-fun x1560 () Bool)
(declare-fun x44 () Bool)
(declare-fun x284 () Real)
(declare-fun x227 () Real)
(declare-fun x1525 (Real) Real)
(declare-fun x1986 () Bool)
(declare-fun x1156 () Real)
(declare-fun x1817 () Real)
(declare-fun x1326 () Real)
(declare-fun x1814 () Bool)
(declare-fun x1142 () Real)
(declare-fun x1972 () x824)
(declare-fun x64 () Bool)
(declare-fun x1890 () Real)
(declare-fun x1148 () Real)
(declare-fun x1942 () Real)
(declare-fun x1145 () Real)
(declare-fun x1351 () Bool)
(declare-fun x1803 () Real)
(declare-fun x817 () Bool)
(declare-fun x1409 () Bool)
(declare-fun x886 () Real)
(declare-fun x201 () Real)
(declare-fun x1877 () Bool)
(declare-fun x618 () Real)
(declare-fun x4 () x824)
(declare-fun x874 () Real)
(declare-fun x441 () Real)
(declare-fun x260 () Real)
(declare-fun x1879 () x824)
(declare-fun x1223 () Real)
(declare-fun x1916 () Real)
(declare-fun x981 () Real)
(declare-fun x526 () Real)
(declare-fun x326 () Real)
(declare-fun x1180 () Bool)
(declare-fun x1254 () Real)
(declare-fun x238 () Real)
(declare-fun x1297 () Real)
(declare-fun x1234 () Bool)
(declare-fun x364 (Real) Real)
(declare-fun x1503 () Real)
(declare-fun x794 () Real)
(declare-fun x1322 () Real)
(declare-fun x972 () x824)
(declare-fun x1144 () Real)
(declare-fun x1078 () Real)
(declare-fun x573 () Real)
(declare-fun x1660 () Real)
(declare-fun x1553 () Real)
(declare-fun x176 () Real)
(declare-fun x1698 () Real)
(declare-fun x1496 () Bool)
(declare-fun x1955 () Bool)
(declare-fun x1565 () Bool)
(declare-fun x1154 () Bool)
(declare-fun x579 () Real)
(declare-fun x748 () Real)
(declare-fun x1899 () Bool)
(declare-fun x471 () Real)
(declare-fun x932 () Bool)
(declare-fun x481 () Bool)
(declare-fun x468 () Real)
(declare-fun x196 (Real) Real)
(declare-fun x554 () Real)
(declare-fun x1468 () Real)
(declare-fun x1797 () x824)
(declare-fun x957 () Bool)
(declare-fun x1167 () Bool)
(declare-fun x104 (Real) Real)
(declare-fun x1573 () Bool)
(declare-fun x1654 () Real)
(declare-fun x186 () Real)
(declare-fun x521 () Real)
(declare-fun x1023 () Real)
(declare-fun x18 () Real)
(declare-fun x1521 () Real)
(declare-fun x915 () Real)
(declare-fun x1741 () Real)
(declare-fun x191 () Bool)
(declare-fun x385 () Real)
(declare-fun x1278 () Real)
(declare-fun x796 () Real)
(declare-fun x1632 () Bool)
(declare-fun x1934 () Real)
(declare-fun x1241 () Real)
(declare-fun x1188 () Bool)
(declare-fun x1811 () Real)
(declare-fun x1788 () Real)
(declare-fun x669 () Real)
(declare-fun x1130 () Real)
(declare-fun x1894 () Real)
(declare-fun x1212 () Real)
(declare-fun x606 () Real)
(declare-fun x1892 () Real)
(declare-fun x1461 () Bool)
(declare-fun x1860 () Real)
(declare-fun x1291 () Real)
(declare-fun x1687 () Real)
(declare-fun x1630 () Real)
(declare-fun x1266 () Bool)
(declare-fun x1901 () Bool)
(declare-fun x848 () Real)
(declare-fun x642 () Real)
(declare-fun x410 () Bool)
(declare-fun x198 () Real)
(declare-fun x804 () Real)
(declare-fun x1214 () x824)
(declare-fun x1194 () Real)
(declare-fun x9 () Real)
(declare-fun x1098 () Real)
(declare-fun x581 () Real)
(declare-fun x1345 () Bool)
(declare-fun x1083 () Real)
(declare-fun x1936 (Real) Real)
(declare-fun x134 (Real) Real)
(declare-fun x761 () Real)
(declare-fun x742 () Real)
(declare-fun x1196 () Real)
(declare-fun x1664 () Real)
(declare-fun x1754 () Real)
(declare-fun x428 () Real)
(declare-fun x1124 () Real)
(declare-fun x676 (Real) Real)
(declare-fun x1274 () x824)
(declare-fun x490 () Bool)
(declare-fun x316 () Real)
(declare-fun x1590 () Real)
(declare-fun x1761 () Real)
(declare-fun x1084 () Real)
(declare-fun x62 () Real)
(declare-fun x1074 (Real) Real)
(declare-fun x1028 () Real)
(declare-fun x190 () Real)
(declare-fun x1403 () Real)
(declare-fun x1012 () Real)
(declare-fun x746 () Real)
(declare-fun x852 () Real)
(declare-fun x1355 () Real)
(declare-fun x1485 () Real)
(declare-fun x601 () Real)
(declare-fun x463 () Real)
(declare-fun x504 () Bool)
(declare-fun x545 () Real)
(declare-fun x116 () Real)
(declare-fun x1420 () x824)
(declare-fun x103 () Real)
(declare-fun x130 () Real)
(declare-fun x1373 (Real) Real)
(declare-fun x975 () Bool)
(declare-fun x1872 () Real)
(declare-fun x1475 () Real)
(declare-fun x293 () Bool)
(declare-fun x1946 () Real)
(declare-fun x1402 () Bool)
(declare-fun x720 () Real)
(declare-fun x814 () Real)
(declare-fun x1712 () Real)
(declare-fun x23 () Real)
(declare-fun x319 () Real)
(declare-fun x466 () Real)
(declare-fun x56 () Real)
(declare-fun x1531 () Real)
(declare-fun x1349 () Real)
(declare-fun x649 () Bool)
(declare-fun x1881 () Real)
(declare-fun x1173 () Bool)
(declare-fun x643 () Real)
(declare-fun x793 () Real)
(declare-fun x832 () Real)
(declare-fun x941 () Real)
(declare-fun x1354 () Real)
(declare-fun x235 () Real)
(declare-fun x1562 () Real)
(declare-fun x724 () Real)
(declare-fun x1991 () Real)
(declare-fun x1165 () Real)
(declare-fun x1017 () Real)
(declare-fun x1061 () Real)
(declare-fun x866 () x824)
(declare-fun x588 () Real)
(declare-fun x770 () Real)
(declare-fun x1107 () Real)
(declare-fun x822 () x824)
(declare-fun x512 () Real)
(declare-fun x637 () Real)
(declare-fun x513 () Bool)
(declare-fun x45 () Real)
(declare-fun x200 () Real)
(declare-fun x314 () Real)
(declare-fun x753 (Real) Real)
(declare-fun x811 () x824)
(declare-fun x891 (Real) Real)
(declare-fun x935 (x824) Real)
(declare-fun x595 () Bool)
(declare-fun x921 () Real)
(declare-fun x1564 (Real) Real)
(declare-fun x600 (Real) Real)
(declare-fun x359 () Real)
(declare-fun x1605 (Real) Real)
(declare-fun x1929 (Real) Real)
(declare-fun x1876 () Real)
(declare-fun x1802 () Real)
(declare-fun x1597 () Real)
(declare-fun x762 () Real)
(declare-fun x388 () Real)
(declare-fun x28 () Bool)
(declare-fun x566 () Bool)
(declare-fun x1227 () Real)
(declare-fun x578 () x824)
(declare-fun x808 (Real) x824)
(declare-fun x1036 () Real)
(declare-fun x278 () Real)
(declare-fun x799 () Real)
(declare-fun x1661 () Real)
(declare-fun x599 (Real) Real)
(declare-fun x936 () Real)
(declare-fun x1411 () Real)
(declare-fun x1693 () Real)
(declare-fun x732 () Bool)
(declare-fun x478 () Bool)
(declare-fun x1943 () Real)
(declare-fun x744 () Real)
(declare-fun x1756 () x824)
(declare-fun x1125 () Real)
(declare-fun x1269 () Real)
(declare-fun x1707 () Real)
(declare-fun x1594 () Real)
(declare-fun x897 () Real)
(declare-fun x1262 () x824)
(declare-fun x390 () Real)
(declare-fun x74 () Real)
(declare-fun x1035 () Real)
(declare-fun x265 () Bool)
(declare-fun x971 () Bool)
(declare-fun x1542 () Real)
(declare-fun x1147 () Bool)
(declare-fun x1723 () Real)
(declare-fun x782 () Real)
(declare-fun x836 () Real)
(declare-fun x516 () Real)
(declare-fun x317 () Real)
(declare-fun x947 () Real)
(declare-fun x1348 () Real)
(declare-fun x371 (Real Real) Real)
(declare-fun x8 () Real)
(declare-fun x107 () Real)
(declare-fun x696 () Bool)
(declare-fun x1888 () Real)
(declare-fun x1925 () Real)
(declare-fun x1363 () Real)
(declare-fun x713 () Real)
(declare-fun x1273 () Real)
(declare-fun x1289 () x824)
(declare-fun x369 () Real)
(declare-fun x1463 () Real)
(declare-fun x358 () Real)
(declare-fun x1669 () Real)
(declare-fun x520 () Real)
(declare-fun x150 () Real)
(declare-fun x13 () Real)
(declare-fun x363 () Bool)
(declare-fun x1032 () Real)
(declare-fun x1975 () Real)
(declare-fun x568 (Real) Real)
(declare-fun x421 () Bool)
(declare-fun x1703 () x824)
(declare-fun x758 (x824) Real)
(declare-fun x1859 () Bool)
(declare-fun x1174 () x824)
(declare-fun x660 () Bool)
(declare-fun x903 () Real)
(declare-fun x214 () Real)
(declare-fun x22 () Bool)
(declare-fun x587 () Real)
(declare-fun x1127 () Real)
(declare-fun x541 (Real) Real)
(declare-fun x1964 () Real)
(declare-fun x1921 () Bool)
(declare-fun x324 () Real)
(declare-fun x1115 () Real)
(declare-fun x953 (Real) Real)
(declare-fun x453 () Real)
(declare-fun x622 () Real)
(declare-fun x1101 () Real)
(declare-fun x447 () Bool)
(declare-fun x1898 () Real)
(declare-fun x778 (Real) Real)
(declare-fun x257 () x824)
(declare-fun x1490 () Bool)
(declare-fun x1626 () Real)
(declare-fun x422 (Real) Real)
(declare-fun x640 () Real)
(declare-fun x1230 (Real Real) Real)
(declare-fun x121 () Real)
(declare-fun x963 () Real)
(declare-fun x1030 () Real)
(declare-fun x1750 (Real) Real)
(declare-fun x1725 () Real)
(declare-fun x430 () Real)
(declare-fun x1732 () Real)
(declare-fun x1007 () Real)
(declare-fun x684 () Bool)
(declare-fun x12 () Real)
(declare-fun x1551 () Real)
(declare-fun x1653 () Real)
(declare-fun x1768 () Real)
(declare-fun x1979 () Real)
(declare-fun x1583 () Real)
(declare-fun x1825 () Real)
(declare-fun x995 () x824)
(declare-fun x171 () Real)
(declare-fun x1350 () Real)
(declare-fun x1585 (Real Real) Real)
(declare-fun x445 () Real)
(declare-fun x1047 () Real)
(declare-fun x1203 () Real)
(declare-fun x914 () Real)
(declare-fun x1659 () Real)
(declare-fun x910 (x824) Real)
(declare-fun x943 () Real)
(declare-fun x153 () Real)
(declare-fun x334 () Real)
(declare-fun x961 () Real)
(declare-fun x877 () Real)
(declare-fun x1923 () Bool)
(declare-fun x1509 () Real)
(declare-fun x749 () Real)
(declare-fun x35 () Real)
(declare-fun x1716 () Real)
(declare-fun x1057 () Real)
(declare-fun x923 (Real) Real)
(declare-fun x590 () Bool)
(declare-fun x954 () Bool)
(declare-fun x242 () Real)
(declare-fun x1702 () Real)
(declare-fun x1688 () Real)
(declare-fun x664 () Real)
(declare-fun x751 () x824)
(declare-fun x1937 () Real)
(declare-fun x1816 (x824) Real)
(declare-fun x126 () Real)
(declare-fun x339 () Real)
(declare-fun x1685 () Real)
(declare-fun x1609 () Real)
(declare-fun x1665 () Real)
(declare-fun x1555 () x824)
(declare-fun x1658 () Real)
(declare-fun x1146 () Bool)
(declare-fun x667 () Real)
(declare-fun x1210 () Bool)
(declare-fun x538 () Real)
(declare-fun x1452 () Bool)
(declare-fun x648 () Real)
(declare-fun x1076 () Real)
(declare-fun x115 () Real)
(declare-fun x1884 () Real)
(declare-fun x221 () Real)
(declare-fun x609 () Bool)
(declare-fun x1416 () Real)
(declare-fun x944 () Real)
(declare-fun x1387 () Real)
(declare-fun x1666 () Real)
(declare-fun x1808 () Bool)
(declare-fun x764 (Real) Real)
(declare-fun x1779 () Bool)
(declare-fun x177 () Bool)
(declare-fun x1205 () Real)
(declare-fun x262 () Bool)
(declare-fun x437 () Real)
(declare-fun x1846 () Real)
(declare-fun x801 () Real)
(declare-fun x1305 () Real)
(declare-fun x182 () Real)
(declare-fun x315 () Real)
(declare-fun x1778 () Bool)
(declare-fun x1394 () Real)
(declare-fun x844 () Bool)
(declare-fun x958 () Real)
(declare-fun x93 () Bool)
(declare-fun x985 () Real)
(declare-fun x999 (x824) Real)
(declare-fun x1391 () Real)
(declare-fun x1172 (Real) Real)
(declare-fun x1219 () Real)
(declare-fun x118 () Bool)
(declare-fun x646 (x824) Real)
(declare-fun x111 () Real)
(declare-fun x37 () Real)
(declare-fun x955 () Real)
(declare-fun x1883 () Bool)
(declare-fun x248 () Real)
(declare-fun x1338 () Real)
(declare-fun x192 () Real)
(declare-fun x1718 () Real)
(declare-fun x847 () Real)
(declare-fun x653 () Real)
(declare-fun x673 () Real)
(declare-fun x2000 () Real)
(declare-fun x849 () Bool)
(declare-fun x1873 () Bool)
(declare-fun x475 () Real)
(declare-fun x55 () Real)
(declare-fun x1505 () Real)
(declare-fun x133 () Real)
(declare-fun x204 () x824)
(declare-fun x1010 () Real)
(declare-fun x1091 () Real)
(declare-fun x1199 () Real)
(declare-fun x39 () Bool)
(declare-fun x1343 (Real) Real)
(declare-fun x1967 () Real)
(declare-fun x57 () Bool)
(declare-fun x1897 () Real)
(declare-fun x1094 () Real)
(declare-fun x105 () Bool)
(declare-fun x768 () Bool)
(declare-fun x1425 (Real) Real)
(declare-fun x1535 () Bool)
(declare-fun x1900 () Real)
(declare-fun x1985 () Real)
(declare-fun x1965 (Real) Real)
(declare-fun x1009 () Real)
(declare-fun x558 () Real)
(declare-fun x699 () Bool)
(declare-fun x1132 () Real)
(declare-fun x72 () Real)
(declare-fun x1384 () x824)
(declare-fun x350 (Real) Real)
(declare-fun x551 () Bool)
(declare-fun x875 (Real) Real)
(declare-fun x465 () Real)
(declare-fun x1662 () Real)
(declare-fun x500 () Real)
(declare-fun x340 () Real)
(declare-fun x868 () Bool)
(declare-fun x368 () Bool)
(declare-fun x27 () Real)
(declare-fun x855 () Real)
(declare-fun x1984 () Real)
(declare-fun x569 () Real)
(declare-fun x756 () Real)
(declare-fun x1744 () Real)
(declare-fun x163 () Real)
(declare-fun x1620 () Real)
(declare-fun x323 () Real)
(declare-fun x1947 () Real)
(declare-fun x1651 () Bool)
(declare-fun x239 () Real)
(declare-fun x356 () Real)
(declare-fun x443 () Bool)
(declare-fun x1183 () Real)
(declare-fun x552 (Real) Real)
(declare-fun x231 () Bool)
(declare-fun x1399 () Real)
(declare-fun x1976 () Real)
(declare-fun x585 () Bool)
(declare-fun x451 () Bool)
(declare-fun x112 () Real)
(declare-fun x1018 () Real)
(declare-fun x1847 () Real)
(declare-fun x1969 () Real)
(declare-fun x1268 () Real)
(declare-fun x211 () Bool)
(declare-fun x1164 () Real)
(declare-fun x1380 () Real)
(declare-fun x101 () x824)
(declare-fun x1138 (Real Real) Real)
(declare-fun x641 () Real)
(declare-fun x252 (Real) Real)
(define-fun x1451 ((x824 x824) (x1087 Real)) x824 (ite ((_ is x1096) x824) (x1096 (x1191 x824) (+ x1087 (x255 x824))) (ite ((_ is x1482) x824) (x1482 (x119 x824) (x1988 x824) (+ x1087 (x1474 x824))) (x273 (+ (x164 x824) x1087)))))
(define-fun x446 ((x620 Real)) Real (ite (and (>= x620 0) (< x620 115792089237316195423570985008687907853269984665640564039457584007913129639936)) x620 (- x620 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(define-fun x1015 ((x620 Real)) Real (ite (and (< x620 0) (>= x620 (- 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (+ x620 115792089237316195423570985008687907853269984665640564039457584007913129639936) x620))
(define-fun x151 ((x721 Real)) Bool (and (>= x721 0) (< x721 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(define-fun x1852 ((x721 Real)) Bool (and (= x721 (x371 x721 115792089237316195423570985008687907853269984665640564039457584007913129639935)) (= x721 (x371 115792089237316195423570985008687907853269984665640564039457584007913129639935 x721))))
(define-fun x1622 ((x721 Real)) Bool (and (= (x371 0 x721) 0) (= (x371 x721 0) 0)))
(define-fun x1270 ((x721 Real)) Bool (= x721 (x371 x721 x721)))
(define-fun x591 ((x721 Real)) Bool (and (x1622 x721) (x1852 x721) (x1270 x721)))
(define-fun x46 ((x721 Real)) Bool (= (x371 20282409603651670423947251286015 x721) (x371 20282409603651670423947251286015 (x371 20282409603651670423947251286015 x721))))
(define-fun x876 ((x721 Real)) Bool (=> (and (<= 0 x721) (> 20282409603651670423947251286016 x721)) (= x721 (x371 20282409603651670423947251286015 x721))))
(define-fun x887 ((x721 Real)) Bool (=> (= (x371 20282409603651670423947251286015 x721) x721) (and (< x721 20282409603651670423947251286016) (<= 0 x721))))
(define-fun x638 ((x721 Real)) Bool (=> (and (< x721 40564819207303340847894502572032) (<= 20282409603651670423947251286016 x721)) (= (x371 20282409603651670423947251286015 x721) (- x721 20282409603651670423947251286016))))
(define-fun x1178 ((x721 Real) (x1694 Real)) Bool (and (= x721 (+ (* 20282409603651670423947251286016 x1694) (x371 20282409603651670423947251286015 x721))) (<= 0 x1694)))
(define-fun x1927 ((x721 Real) (x392 Real)) Bool (and (x638 x721) (x46 x721) (x876 x721) (x887 x721) (x1178 x721 x392)))
(define-fun x1819 ((x721 Real) (x1694 Real)) Bool (= (x371 x721 x1694) (x371 x1694 x721)))
(define-fun x1376 ((x721 Real) (x1694 Real)) Bool (and (<= 0 (x371 x721 x1694)) (=> (<= 0 x1694) (>= x1694 (x371 x721 x1694))) (=> (>= x721 0) (>= x721 (x371 x721 x1694)))))
(define-fun x889 ((x721 Real) (x1694 Real)) Bool (and (x1819 x721 x1694) (x1376 x721 x1694)))
(define-fun x1501 ((x721 Real) (x392 Real)) Bool (and (x1927 x721 x392) (x889 x721 20282409603651670423947251286015)))
(define-fun x361 ((x721 Real)) Bool (= (x1425 x721) (ite (> 10141204801825835211973625643008 (x371 x721 20282409603651670423947251286015)) (x371 x721 20282409603651670423947251286015) (+ 115792089237316195423570985008687907853269984645358154435805913583965878353920 (x371 x721 20282409603651670423947251286015)))))
(define-fun x1764 ((x721 Real)) Bool (= (x371 1 x721) (x371 1 (x371 1 x721))))
(define-fun x1523 ((x721 Real)) Bool (=> (and (<= 0 x721) (< x721 2)) (= x721 (x371 1 x721))))
(define-fun x1731 ((x721 Real)) Bool (=> (= (x371 1 x721) x721) (and (>= x721 0) (< x721 2))))
(define-fun x534 ((x721 Real)) Bool (=> (and (> 4 x721) (>= x721 2)) (= (- x721 2) (x371 1 x721))))
(define-fun x298 ((x721 Real) (x1694 Real)) Bool (and (= (+ (* 2 x1694) (x371 1 x721)) x721) (>= x1694 0)))
(define-fun x1708 ((x721 Real) (x392 Real)) Bool (and (x534 x721) (x1731 x721) (x1764 x721) (x298 x721 x392) (x1523 x721)))
(define-fun x154 ((x721 Real) (x392 Real)) Bool (and (x889 x721 1) (x1708 x721 x392)))
(define-fun x1464 ((x721 Real)) Bool (= (x371 255 x721) (x371 255 (x371 255 x721))))
(define-fun x1686 ((x721 Real)) Bool (=> (and (<= 0 x721) (< x721 256)) (= x721 (x371 255 x721))))
(define-fun x1267 ((x721 Real)) Bool (=> (= x721 (x371 255 x721)) (and (<= 0 x721) (> 256 x721))))
(define-fun x1228 ((x721 Real)) Bool (=> (and (> 512 x721) (>= x721 256)) (= (x371 255 x721) (- x721 256))))
(define-fun x346 ((x721 Real) (x1694 Real)) Bool (and (<= 0 x1694) (= (+ (* x1694 256) (x371 255 x721)) x721)))
(define-fun x1650 ((x721 Real) (x392 Real)) Bool (and (x1228 x721) (x1267 x721) (x346 x721 x392) (x1686 x721) (x1464 x721)))
(define-fun x771 ((x721 Real) (x392 Real)) Bool (and (x1650 x721 x392) (x889 x721 255)))
(define-fun x1218 ((x721 Real)) Bool (= (x371 1461501637330902918203684832716283019655932542975 x721) (x371 1461501637330902918203684832716283019655932542975 (x371 1461501637330902918203684832716283019655932542975 x721))))
(define-fun x560 ((x721 Real)) Bool (=> (and (> 1461501637330902918203684832716283019655932542976 x721) (>= x721 0)) (= x721 (x371 1461501637330902918203684832716283019655932542975 x721))))
(define-fun x1258 ((x721 Real)) Bool (=> (= x721 (x371 1461501637330902918203684832716283019655932542975 x721)) (and (>= x721 0) (< x721 1461501637330902918203684832716283019655932542976))))
(define-fun x1806 ((x721 Real)) Bool (=> (and (> 2923003274661805836407369665432566039311865085952 x721) (>= x721 1461501637330902918203684832716283019655932542976)) (= (- x721 1461501637330902918203684832716283019655932542976) (x371 1461501637330902918203684832716283019655932542975 x721))))
(define-fun x100 ((x721 Real) (x1694 Real)) Bool (and (= x721 (+ (x371 1461501637330902918203684832716283019655932542975 x721) (* x1694 1461501637330902918203684832716283019655932542976))) (>= x1694 0)))
(define-fun x1054 ((x721 Real) (x392 Real)) Bool (and (x560 x721) (x100 x721 x392) (x1258 x721) (x1806 x721) (x1218 x721)))
(define-fun x1412 ((x721 Real) (x392 Real)) Bool (and (x1054 x721 x392) (x889 x721 1461501637330902918203684832716283019655932542975)))
(define-fun x224 ((x721 Real)) Bool (= (x371 65535 x721) (x371 65535 (x371 65535 x721))))
(define-fun x906 ((x721 Real)) Bool (=> (and (< x721 65536) (<= 0 x721)) (= (x371 65535 x721) x721)))
(define-fun x1378 ((x721 Real)) Bool (=> (= (x371 65535 x721) x721) (and (<= 0 x721) (< x721 65536))))
(define-fun x1618 ((x721 Real)) Bool (=> (and (<= 65536 x721) (< x721 131072)) (= (x371 65535 x721) (- x721 65536))))
(define-fun x1019 ((x721 Real) (x1694 Real)) Bool (and (>= x1694 0) (= x721 (+ (* x1694 65536) (x371 65535 x721)))))
(define-fun x1668 ((x721 Real) (x392 Real)) Bool (and (x1378 x721) (x224 x721) (x906 x721) (x1019 x721 x392) (x1618 x721)))
(define-fun x433 ((x721 Real) (x392 Real)) Bool (and (x1668 x721 x392) (x889 x721 65535)))
(define-fun x268 ((x721 Real)) Bool (and (= (x527 115792089237316195423570985008687907853269984665640564039457584007913129639935 x721) 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x527 x721 115792089237316195423570985008687907853269984665640564039457584007913129639935))))
(define-fun x757 ((x721 Real)) Bool (and (= x721 (x527 x721 0)) (= (x527 0 x721) x721)))
(define-fun x1834 ((x721 Real)) Bool (= x721 (x527 x721 x721)))
(define-fun x1850 ((x721 Real)) Bool (and (x268 x721) (x757 x721) (x1834 x721)))
(define-fun x1516 ((x721 Real) (x1694 Real)) Bool (= (x527 x721 x1694) (x527 x1694 x721)))
(define-fun x1734 ((x721 Real) (x1694 Real)) Bool (and (=> (>= x1694 0) (<= x1694 (x527 x721 x1694))) (=> (<= 0 x721) (<= x721 (x527 x721 x1694))) (<= (x527 x721 x1694) (+ x721 x1694))))
(define-fun x1540 ((x721 Real) (x1694 Real)) Bool (and (x1734 x721 x1694) (x1516 x721 x1694)))
(define-fun x1097 ((x721 Real)) Bool (= (x371 18446744073709551615 (x371 18446744073709551615 x721)) (x371 18446744073709551615 x721)))
(define-fun x666 ((x721 Real)) Bool (=> (and (> 18446744073709551616 x721) (>= x721 0)) (= x721 (x371 18446744073709551615 x721))))
(define-fun x440 ((x721 Real)) Bool (=> (= x721 (x371 18446744073709551615 x721)) (and (> 18446744073709551616 x721) (>= x721 0))))
(define-fun x1362 ((x721 Real)) Bool (=> (and (>= x721 18446744073709551616) (> 36893488147419103232 x721)) (= (x371 18446744073709551615 x721) (- x721 18446744073709551616))))
(define-fun x589 ((x721 Real) (x1694 Real)) Bool (and (<= 0 x1694) (= x721 (+ (* 18446744073709551616 x1694) (x371 18446744073709551615 x721)))))
(define-fun x1055 ((x721 Real) (x392 Real)) Bool (and (x1097 x721) (x440 x721) (x589 x721 x392) (x666 x721) (x1362 x721)))
(define-fun x195 ((x721 Real) (x392 Real)) Bool (and (x1055 x721 x392) (x889 x721 18446744073709551615)))
(define-fun x1924 ((x721 Real)) Bool (= (x371 340282366920938463463374607431768211455 x721) (x371 340282366920938463463374607431768211455 (x371 340282366920938463463374607431768211455 x721))))
(define-fun x1773 ((x721 Real)) Bool (=> (and (<= 0 x721) (< x721 340282366920938463463374607431768211456)) (= x721 (x371 340282366920938463463374607431768211455 x721))))
(define-fun x916 ((x721 Real)) Bool (=> (= (x371 340282366920938463463374607431768211455 x721) x721) (and (< x721 340282366920938463463374607431768211456) (>= x721 0))))
(define-fun x1299 ((x721 Real)) Bool (=> (and (<= 340282366920938463463374607431768211456 x721) (< x721 680564733841876926926749214863536422912)) (= (x371 340282366920938463463374607431768211455 x721) (- x721 340282366920938463463374607431768211456))))
(define-fun x148 ((x721 Real) (x1694 Real)) Bool (and (= (+ (x371 340282366920938463463374607431768211455 x721) (* 340282366920938463463374607431768211456 x1694)) x721) (>= x1694 0)))
(define-fun x1143 ((x721 Real) (x392 Real)) Bool (and (x916 x721) (x1924 x721) (x148 x721 x392) (x1299 x721) (x1773 x721)))
(define-fun x1541 ((x721 Real) (x392 Real)) Bool (and (x1143 x721 x392) (x889 x721 340282366920938463463374607431768211455)))
(define-fun x1419 ((x721 Real)) Bool (= (ite (< (x371 x721 340282366920938463463374607431768211455) 170141183460469231731687303715884105728) (x371 x721 340282366920938463463374607431768211455) (+ (x371 x721 340282366920938463463374607431768211455) 115792089237316195423570985008687907852929702298719625575994209400481361428480)) (x1225 x721)))
(define-fun x539 ((x721 Real)) Bool (= (x371 16 x721) (x371 16 (x371 16 x721))))
(define-fun x1893 ((x721 Real)) Bool (=> (and (>= x721 0) (> 16 x721)) (= (x371 16 x721) 0)))
(define-fun x1625 ((x721 Real) (x1694 Real) (x413 Real) (x636 Real)) Bool (and (= (+ (* x636 32) (* 16 x413) x1694) x721) (>= x636 0) (<= 0 x1694) (< x636 3618502788666131106986593281521497120414687020801267626233049500247285301248) (< x1694 16) (= (* x413 16) (x371 16 x721)) (< x413 2) (<= 0 x413)))
(define-fun x1800 ((x721 Real) (x276 Real) (x701 Real) (x968 Real)) Bool (and (x1625 x721 x276 x701 x968) (x1893 x721) (x539 x721)))
(define-fun x1481 ((x721 Real) (x276 Real) (x701 Real) (x968 Real)) Bool (and (x1800 x721 x276 x701 x968) (x889 x721 16)))
(define-fun x705 ((x721 Real)) Bool (= (x371 115792089237316195423570985008687907853269984665640564039457584007913129639904 (x371 115792089237316195423570985008687907853269984665640564039457584007913129639904 x721)) (x371 115792089237316195423570985008687907853269984665640564039457584007913129639904 x721)))
(define-fun x1385 ((x721 Real)) Bool (=> (and (< x721 32) (<= 0 x721)) (= 0 (x371 115792089237316195423570985008687907853269984665640564039457584007913129639904 x721))))
(define-fun x530 ((x721 Real) (x1694 Real) (x413 Real) (x636 Real)) Bool (and (> 32 x1694) (= x721 (+ x1694 (* x413 32) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 x636))) (= (* x413 32) (x371 115792089237316195423570985008687907853269984665640564039457584007913129639904 x721)) (> 3618502788666131106986593281521497120414687020801267626233049500247285301248 x413) (<= 0 x1694) (>= x636 0) (> 1 x636) (<= 0 x413)))
(define-fun x1046 ((x721 Real) (x276 Real) (x701 Real) (x968 Real)) Bool (and (x705 x721) (x1385 x721) (x530 x721 x276 x701 x968)))
(define-fun x179 ((x721 Real) (x276 Real) (x701 Real) (x968 Real)) Bool (and (x1046 x721 x276 x701 x968) (x889 x721 115792089237316195423570985008687907853269984665640564039457584007913129639904)))
(define-fun x1396 ((x1935 Real)) Real (ite (= 128 x1935) 115197700812830431890159100217698998050002284567939525164234024451216521560064 (x1577 x1935)))
(define-fun x835 ((x1935 Real)) Real (ite (= 128 x1935) x1422 (x1063 x1935)))
(define-fun x1863 ((x1935 Real)) Real (ite (= x1935 160) x280 (x835 x1935)))
(define-fun x515 ((x1935 Real)) Real (ite (= x1935 192) x1860 (x1863 x1935)))
(define-fun x1029 ((x1935 Real)) Real (ite (= 224 x1935) x1590 (x515 x1935)))
(define-fun x229 ((x1935 Real)) Real (ite (= x1935 256) x535 (x1029 x1935)))
(define-fun x843 ((x1935 Real)) Real (ite (= x1935 128) x670 (x1396 x1935)))
(define-fun x976 ((x1935 Real)) Real (ite (= 160 x1935) x1051 (x843 x1935)))
(define-fun x246 ((x1935 Real)) Real (ite (= x1935 192) x1950 (x976 x1935)))
(define-fun x695 ((x1935 Real)) Real (ite (= 224 x1935) x385 (x246 x1935)))
(define-fun x1616 ((x1935 Real)) Real (ite (= 256 x1935) x878 (x695 x1935)))
(define-fun x1717 ((x1935 Real)) Real (ite (= x1935 0) x245 (x1059 x1935)))
(define-fun x1589 ((x1935 Real)) Real (ite (= 32 x1935) x703 (x1717 x1935)))
(define-fun x1511 ((x1935 Real)) Real (ite (= 64 x1935) x315 (x1589 x1935)))
(define-fun x629 ((x1935 Real)) Real (ite (= x1935 96) x720 (x1511 x1935)))
(define-fun x1512 ((x1935 Real)) Real (ite (= 128 x1935) x1183 (x629 x1935)))
(define-fun x1141 ((x1935 Real)) Real (ite (= 544 x1935) 0 (x1343 x1935)))
(define-fun x692 ((x1935 Real)) Real (ite (= 576 x1935) x1962 (x252 x1935)))
(define-fun x470 ((x1935 Real)) Real (ite (= x1935 608) x1780 (x600 x1935)))
(define-fun x1796 ((x1935 Real)) Real (ite (= 640 x1935) x988 (x1914 x1935)))
(define-fun x842 ((x1935 Real)) Real (ite (= x1935 672) x691 (x809 x1935)))
(define-fun x1367 ((x1935 Real)) Real (ite (= x1935 704) x922 (x1938 x1935)))
(define-fun x225 ((x1935 Real)) Real (ite (= 736 x1935) x661 (x875 x1935)))
(define-fun x1049 ((x1935 Real)) Real (ite (= 768 x1935) x575 (x1564 x1935)))
(define-fun x905 ((x1935 Real)) Real (ite (= 128 x1935) x1868 (x1287 x1935)))
(define-fun x1006 ((x1935 Real)) Real (ite (= x1935 160) x67 (x905 x1935)))
(define-fun x165 ((x1935 Real)) Real (ite (= x1935 192) x110 (x1006 x1935)))
(define-fun x1751 ((x1935 Real)) Real (ite (= x1935 224) x848 (x165 x1935)))
(define-fun x805 ((x1935 Real)) Real (ite (= x1935 256) x788 (x1751 x1935)))
(define-fun x236 ((x1935 Real)) Real (ite (= x1935 800) x815 (x1697 x1935)))
(define-fun x26 ((x1935 Real)) Real (ite (= x1935 832) x1286 (x236 x1935)))
(define-fun x663 ((x1935 Real)) Real (ite (= x1935 864) x1579 (x26 x1935)))
(define-fun x1767 ((x1935 Real)) Real (ite (= 896 x1935) x1165 (x663 x1935)))
(define-fun x925 ((x1935 Real)) Real (ite (= 928 x1935) x1005 (x1767 x1935)))
(define-fun x1050 ((x1935 Real)) Real (ite (= 0 x1935) x800 (x645 x1935)))
(define-fun x343 ((x1935 Real)) Real (ite (= x1935 32) x1602 (x1050 x1935)))
(define-fun x1740 ((x1935 Real)) Real (ite (= x1935 64) x1467 (x343 x1935)))
(define-fun x384 ((x1935 Real)) Real (ite (= 96 x1935) x1013 (x1740 x1935)))
(define-fun x123 ((x1935 Real)) Real (ite (= x1935 128) x652 (x384 x1935)))
(define-fun x507 ((x1935 Real)) Real (ite (= 544 x1935) 0 (x1721 x1935)))
(define-fun x1832 ((x1935 Real)) Real (ite (= 576 x1935) x1518 (x891 x1935)))
(define-fun x1276 ((x1935 Real)) Real (ite (= 608 x1935) x463 (x678 x1935)))
(define-fun x299 ((x1935 Real)) Real (ite (= 640 x1935) x1948 (x1353 x1935)))
(define-fun x1763 ((x1935 Real)) Real (ite (= x1935 672) x33 (x1766 x1935)))
(define-fun x409 ((x1935 Real)) Real (ite (= x1935 704) x1090 (x1965 x1935)))
(define-fun x1302 ((x1935 Real)) Real (ite (= x1935 736) x1659 (x364 x1935)))
(define-fun x1799 ((x1935 Real)) Real (ite (= x1935 768) x673 (x1283 x1935)))
(define-fun x1941 ((x1935 x824)) Real (ite (= x1935 x751) x31 (x508 x1935)))
(define-fun x152 ((x1935 Real)) Real (ite (= 128 x1935) 115197700812830431890159100217698998050002284567939525164234024451216521560064 (x1929 x1935)))
(define-fun x755 ((x1935 Real)) Real (ite (= x1935 128) x582 (x152 x1935)))
(define-fun x895 ((x1935 Real)) Real (ite (= x1935 160) x406 (x755 x1935)))
(define-fun x827 ((x1935 Real)) Real (ite (= 192 x1935) x183 (x895 x1935)))
(define-fun x174 ((x1935 Real)) Real (ite (= x1935 224) x1642 (x827 x1935)))
(define-fun x773 ((x1935 Real)) Real (ite (= x1935 256) x528 (x174 x1935)))
(define-fun x228 ((x1935 Real)) Real (ite (= x1935 128) x1868 (x350 x1935)))
(define-fun x181 ((x1935 Real)) Real (ite (= x1935 160) x1397 (x228 x1935)))
(define-fun x950 ((x1935 Real)) Real (ite (= x1935 192) x110 (x181 x1935)))
(define-fun x279 ((x1935 Real)) Real (ite (= 224 x1935) x848 (x950 x1935)))
(define-fun x594 ((x1935 Real)) Real (ite (= x1935 256) x788 (x279 x1935)))
(define-fun x1646 ((x1935 Real)) Real (ite (= x1935 800) x1199 (x923 x1935)))
(define-fun x1295 ((x1935 Real)) Real (ite (= x1935 832) x1413 (x1646 x1935)))
(define-fun x1044 ((x1935 Real)) Real (ite (= x1935 864) x1528 (x1295 x1935)))
(define-fun x404 ((x1935 Real)) Real (ite (= x1935 896) x1406 (x1044 x1935)))
(define-fun x1321 ((x1935 Real)) Real (ite (= 928 x1935) x1156 (x404 x1935)))
(define-fun x436 ((x1935 Real)) Real (ite (= 0 x1935) x1278 (x568 x1935)))
(define-fun x1136 ((x1935 Real)) Real (ite (= x1935 32) x194 (x436 x1935)))
(define-fun x1236 ((x1935 Real)) Real (ite (= x1935 64) x946 (x1136 x1935)))
(define-fun x1189 ((x1935 Real)) Real (ite (= 96 x1935) x981 (x1236 x1935)))
(define-fun x1313 ((x1935 Real)) Real (ite (= x1935 128) x1 (x1189 x1935)))
(define-fun x1945 ((x1935 Real)) Real (ite (= 128 x1935) 50942633119752846454219349998365661925608737367104304655302372697894809501696 (x1552 x1935)))
(define-fun x1996 ((x1935 Real)) Real (ite (= 0 x1935) x330 (x1596 x1935)))
(define-fun x331 ((x1935 Real)) Real (ite (= x1935 128) x330 (x1074 x1935)))
(define-fun x1251 ((x1935 Real)) Real (ite (= x1935 128) x521 (x1074 x1935)))
(define-fun x1163 ((x1935 Real)) Real (ite (= 128 x1935) x852 (x1074 x1935)))
(define-fun x75 ((x1935 Real)) Real (ite (= x1935 128) x342 (x1074 x1935)))
(define-fun x261 ((x1935 Real)) Real (ite (and x283 x191) (x331 x1935) (ite (and x1066 x142) (x1251 x1935) (ite (and x1859 x868) (x1163 x1935) (x75 x1935)))))
(define-fun x1672 ((x1935 Real)) Real (ite (= x1963 x1935) 16156842317565293874272834530371880720966471053262404558597773956279093428224 (x261 x1935)))
(define-fun x79 ((x1935 Real)) Real (ite (= x1935 x756) x688 (x1672 x1935)))
(define-fun x1407 ((x1935 Real)) Real (ite (= x1935 x949) 274184521717934524641157099916833587211 (x79 x1935)))
(define-fun x1719 ((x1935 Real)) Real (ite (= x1963 x1935) 1 (x219 x1935)))
(define-fun x264 ((x1935 Real)) Real (ite (= x1935 x1963) 1 (x219 x1935)))
(define-fun x1193 ((x1935 Real)) Real (ite (= x1935 x1963) 1 (x219 x1935)))
(define-fun x1469 ((x1935 Real)) Real (ite (and x697 x1210) (x1719 x1935) (ite (and x647 x849) (x264 x1935) (x1193 x1935))))
(define-fun x1913 ((x1935 Real)) Real (ite (= x1935 x1153) x1072 (x1484 x1935)))
(define-fun x411 ((x1935 Real)) Real (ite (= x1109 x1935) x1805 (x1913 x1935)))
(define-fun x1465 ((x1935 Real)) Real (ite (= x1935 x274) x1896 (x411 x1935)))
(define-fun x1835 ((x1935 Real)) Real (ite (= x1175 x1935) x936 (x1465 x1935)))
(define-fun x1674 ((x1935 Real)) Real (ite (= x1935 x573) x1306 (x1835 x1935)))
(define-fun x1682 ((x1935 Real)) Real (ite (= x1153 x1935) x1442 (x1484 x1935)))
(define-fun x488 ((x1935 Real)) Real (ite (= x35 x1935) x1380 (x1682 x1935)))
(define-fun x787 ((x1935 Real)) Real (ite (= x1935 x1747) x625 (x488 x1935)))
(define-fun x457 ((x1935 Real)) Real (ite (= x444 x1935) x1292 (x787 x1935)))
(define-fun x1836 ((x1935 Real)) Real (ite (= x1935 x1466) x812 (x457 x1935)))
(define-fun x1421 ((x1935 Real)) Real (ite (and x410 x969) (x1674 x1935) (x1836 x1935)))
(define-fun x464 ((x1935 Real)) Real (ite (= x1637 x1935) 115197700812830431890159100217698998050002284567939525164234024451216521560064 (x1421 x1935)))
(define-fun x1128 ((x1935 Real)) Real (ite (= x1935 x1637) x227 (x464 x1935)))
(define-fun x1211 ((x1935 Real)) Real (ite (= x1935 x1429) x1435 (x1128 x1935)))
(define-fun x1774 ((x1935 Real)) Real (ite (= x1935 x84) x1264 (x1211 x1935)))
(define-fun x1436 ((x1935 Real)) Real (ite (= x45 x1935) x199 (x1774 x1935)))
(define-fun x1556 ((x1935 Real)) Real (ite (= x1213 x1935) x212 (x1436 x1935)))
(define-fun x736 ((x1935 Real)) Real (ite (= x1935 x863) 115197700812830431890159100217698998050002284567939525164234024451216521560064 (x1556 x1935)))
(define-fun x548 ((x1935 Real)) Real (ite (= x863 x1935) x634 (x736 x1935)))
(define-fun x122 ((x1935 Real)) Real (ite (= x1348 x1935) x908 (x548 x1935)))
(define-fun x1123 ((x1935 Real)) Real (ite (= x1098 x1935) x1617 (x122 x1935)))
(define-fun x979 ((x1935 Real)) Real (ite (= x1935 x186) x918 (x1123 x1935)))
(define-fun x850 ((x1935 Real)) Real (ite (= x1935 x1498) x1614 (x1636 x1935)))
(define-fun x1678 ((x1935 Real)) Real (ite (= x1935 x235) x789 (x850 x1935)))
(define-fun x157 ((x1935 Real)) Real (ite (= x993 x1935) x378 (x1678 x1935)))
(define-fun x1966 ((x1935 Real)) Real (ite (= x1995 x1935) x752 (x157 x1935)))
(define-fun x461 ((x1935 Real)) Real (ite (= x1935 x1282) x1084 (x1966 x1935)))
(define-fun x1316 ((x1935 Real)) Real (ite (= x1935 x1498) x982 (x1636 x1935)))
(define-fun x580 ((x1935 Real)) Real (ite (= x901 x1935) x1062 (x1316 x1935)))
(define-fun x398 ((x1935 Real)) Real (ite (= x1935 x489) x1949 (x580 x1935)))
(define-fun x1954 ((x1935 Real)) Real (ite (= x1665 x1935) x784 (x398 x1935)))
(define-fun x106 ((x1935 Real)) Real (ite (= x761 x1935) x1145 (x1954 x1935)))
(define-fun x1453 ((x1935 Real)) Real (ite (and x1709 x394) (x461 x1935) (x106 x1935)))
(define-fun x934 ((x1935 Real)) Real (ite x1760 (x1453 x1935) (x1919 x1935)))
(define-fun x65 ((x1935 Real)) Real (ite x1393 (ite (and x146 (not x1336)) (x1919 x1935) (x934 x1935)) (x1919 x1935)))
(define-fun x170 ((x1935 Real)) Real (ite (= x1935 x730) 76450787359836037641860180984291677749980919077056822294353438043884394381312 (x65 x1935)))
(define-fun x1071 ((x1935 Real)) Real (ite (= x1118 x1935) x1142 (x170 x1935)))
(define-fun x1449 ((x1935 x824)) Real (ite (= x367 x1935) x1011 (x1567 x1935)))
(define-fun x1310 ((x1935 x824)) Real (ite (= x1972 x1935) x748 (x1449 x1935)))
(define-fun x1530 ((x1935 x824)) Real (ite (and x697 x1210) (x1310 x1935) (x1567 x1935)))
(define-fun x1025 ((x1935 x824)) Real (ite (= x754 x1935) x1667 (x1530 x1935)))
(define-fun x68 ((x1935 Real)) Real (ite (= 0 x1935) 1 (x1389 x1935)))
(define-fun x1997 ((x1935 Real)) Real (ite (= x1935 x730) 1 (x1525 x1935)))
(define-fun x427 ((x1935 Real)) Real (ite (= x480 x1935) 0 (x459 x1935)))
(define-fun x883 ((x1935 Real)) Real (ite (= x1935 x429) x126 (x764 x1935)))
(define-fun x1224 ((x1935 Real)) Real (ite (= x1935 x1237) x1818 (x541 x1935)))
(define-fun x613 ((x1935 Real)) Real (ite (= x1368 x1935) x1492 (x282 x1935)))
(define-fun x1170 ((x1935 Real)) Real (ite (= x303 x1935) x814 (x1844 x1935)))
(define-fun x1259 ((x1935 Real)) Real (ite (= x1544 x1935) x103 (x778 x1935)))
(define-fun x1329 ((x1935 Real)) Real (ite (= x1935 x41) x83 (x552 x1935)))
(define-fun x1610 ((x1935 Real)) Real (ite (= x1935 x937) x90 (x1493 x1935)))
(define-fun x1795 ((x1935 Real)) Real (ite (= 128 x1935) x1868 (x379 x1935)))
(define-fun x1058 ((x1935 Real)) Real (ite (= 160 x1935) x746 (x1795 x1935)))
(define-fun x1619 ((x1935 Real)) Real (ite (= 192 x1935) x110 (x1058 x1935)))
(define-fun x519 ((x1935 Real)) Real (ite (= x1935 224) x848 (x1619 x1935)))
(define-fun x477 ((x1935 Real)) Real (ite (= 256 x1935) x788 (x519 x1935)))
(define-fun x1279 ((x1935 Real)) Real (ite (= 0 x1935) x1653 (x335 x1935)))
(define-fun x873 ((x1935 Real)) Real (ite (= 32 x1935) x572 (x1279 x1935)))
(define-fun x1307 ((x1935 Real)) Real (ite (= 64 x1935) x983 (x873 x1935)))
(define-fun x1649 ((x1935 Real)) Real (ite (= x1935 96) x579 (x1307 x1935)))
(define-fun x281 ((x1935 Real)) Real (ite (= 128 x1935) x214 (x1649 x1935)))
(define-fun x1980 ((x1935 Real)) Real (ite (= x1558 x1935) 0 (x953 x1935)))
(define-fun x1572 ((x1935 Real)) Real (ite (= x511 x1935) x665 (x1936 x1935)))
(define-fun x1769 ((x1935 Real)) Real (ite (= x1935 x1537) x1976 (x1280 x1935)))
(define-fun x672 ((x1935 Real)) Real (ite (= x1935 x1000) x1223 (x306 x1935)))
(define-fun x1912 ((x1935 Real)) Real (ite (= x1768 x1935) x1759 (x196 x1935)))
(define-fun x998 ((x1935 Real)) Real (ite (= x32 x1935) x1787 (x1750 x1935)))
(define-fun x1864 ((x1935 Real)) Real (ite (= x766 x1935) x1374 (x1909 x1935)))
(define-fun x467 ((x1935 Real)) Real (ite (= x1935 x1707) x1551 (x1605 x1935)))
(define-fun x1508 ((x1935 Real)) Real (ite (= 128 x1935) x1868 (x1088 x1935)))
(define-fun x1250 ((x1935 Real)) Real (ite (= x1935 160) x1634 (x1508 x1935)))
(define-fun x1206 ((x1935 Real)) Real (ite (= 192 x1935) x110 (x1250 x1935)))
(define-fun x237 ((x1935 Real)) Real (ite (= 224 x1935) x848 (x1206 x1935)))
(define-fun x1120 ((x1935 Real)) Real (ite (= x1935 256) x788 (x237 x1935)))
(define-fun x240 ((x1935 Real)) Real (ite (= 0 x1935) x1781 (x1993 x1935)))
(define-fun x1252 ((x1935 Real)) Real (ite (= x1935 32) x772 (x240 x1935)))
(define-fun x1277 ((x1935 Real)) Real (ite (= 64 x1935) x426 (x1252 x1935)))
(define-fun x1448 ((x1935 Real)) Real (ite (= 96 x1935) x1470 (x1277 x1935)))
(define-fun x900 ((x1935 Real)) Real (ite (= x1935 128) x475 (x1448 x1935)))
(define-fun x1265 ((x1935 Real)) Real (ite (= 128 x1935) x1422 (x138 x1935)))
(define-fun x1168 ((x1935 Real)) Real (ite (= x1935 160) x1817 (x1265 x1935)))
(define-fun x497 ((x1935 Real)) Real (ite (= x1935 192) x1860 (x1168 x1935)))
(define-fun x1200 ((x1935 Real)) Real (ite (= x1935 224) x1590 (x497 x1935)))
(define-fun x741 ((x1935 Real)) Real (ite (= 256 x1935) x535 (x1200 x1935)))
(define-fun x352 ((x1935 Real)) Real (ite (= x1935 800) x1460 (x1697 x1935)))
(define-fun x1093 ((x1935 Real)) Real (ite (= 832 x1935) x141 (x352 x1935)))
(define-fun x714 ((x1935 Real)) Real (ite (= 864 x1935) x618 (x1093 x1935)))
(define-fun x1623 ((x1935 Real)) Real (ite (= x1935 896) x441 (x714 x1935)))
(define-fun x294 ((x1935 Real)) Real (ite (= 928 x1935) x567 (x1623 x1935)))
(define-fun x54 ((x1935 Real)) Real (ite (= x1935 0) x1503 (x645 x1935)))
(define-fun x328 ((x1935 Real)) Real (ite (= x1935 32) x1227 (x54 x1935)))
(define-fun x1414 ((x1935 Real)) Real (ite (= 64 x1935) x339 (x328 x1935)))
(define-fun x1222 ((x1935 Real)) Real (ite (= x1935 96) x1626 (x1414 x1935)))
(define-fun x1841 ((x1935 Real)) Real (ite (= x1935 128) x1794 (x1222 x1935)))
(define-fun x1777 ((x1935 Real)) Real (ite (= 128 x1935) x1422 (x967 x1935)))
(define-fun x1190 ((x1935 Real)) Real (ite (= x1935 160) x401 (x1777 x1935)))
(define-fun x462 ((x1935 Real)) Real (ite (= x1935 192) x1860 (x1190 x1935)))
(define-fun x840 ((x1935 Real)) Real (ite (= x1935 224) x1590 (x462 x1935)))
(define-fun x845 ((x1935 Real)) Real (ite (= 256 x1935) x535 (x840 x1935)))
(define-fun x1483 ((x1935 Real)) Real (ite (= x1935 800) x1083 (x923 x1935)))
(define-fun x1576 ((x1935 Real)) Real (ite (= 832 x1935) x1171 (x1483 x1935)))
(define-fun x210 ((x1935 Real)) Real (ite (= 864 x1935) x631 (x1576 x1935)))
(define-fun x651 ((x1935 Real)) Real (ite (= x1935 896) x942 (x210 x1935)))
(define-fun x834 ((x1935 Real)) Real (ite (= 928 x1935) x642 (x651 x1935)))
(define-fun x987 ((x1935 Real)) Real (ite (= 0 x1935) x581 (x568 x1935)))
(define-fun x1042 ((x1935 Real)) Real (ite (= x1935 32) x1916 (x987 x1935)))
(define-fun x685 ((x1935 Real)) Real (ite (= 64 x1935) x1664 (x1042 x1935)))
(define-fun x783 ((x1935 Real)) Real (ite (= x1935 96) x1398 (x685 x1935)))
(define-fun x301 ((x1935 Real)) Real (ite (= 128 x1935) x1947 (x783 x1935)))
(define-fun x1691 ((x1935 Real)) Real (ite (= 0 x1935) x342 (x1596 x1935)))
(define-fun x14 ((x1935 Real)) Real (ite (= x1935 0) x852 (x1596 x1935)))
(define-fun x867 ((x1935 Real)) Real (ite (= 0 x1935) x521 (x1596 x1935)))
(define-fun x423 ((x1935 x824)) Real (ite (= x1935 x1174) x1204 (x1600 x1935)))
(define-fun x1973 ((x1935 x824)) Real (ite (= x1635 x1935) x23 (x423 x1935)))
(define-fun x1430 ((x1935 Real)) Real (ite (= x1935 0) 1 (x1957 x1935)))
(define-fun x654 ((x1935 x824)) Real (ite (= x1935 x1922) x630 (x1215 x1935)))
(define-fun x738 ((x1935 x824)) Real (ite (= x1935 x578) x1052 (x654 x1935)))
(define-fun x556 ((x1935 Real)) Real (ite (= x1935 0) 1 (x1957 x1935)))
(define-fun x1039 ((x1935 Real)) Real (ite (= 128 x1935) x1422 (x1244 x1935)))
(define-fun x1911 ((x1935 Real)) Real (ite (= 160 x1935) x722 (x1039 x1935)))
(define-fun x78 ((x1935 Real)) Real (ite (= x1935 192) x1860 (x1911 x1935)))
(define-fun x820 ((x1935 Real)) Real (ite (= 224 x1935) x1590 (x78 x1935)))
(define-fun x1187 ((x1935 Real)) Real (ite (= 256 x1935) x535 (x820 x1935)))
(define-fun x769 ((x1935 Real)) Real (ite (= x1935 0) x256 (x1993 x1935)))
(define-fun x603 ((x1935 Real)) Real (ite (= 32 x1935) x1975 (x769 x1935)))
(define-fun x1001 ((x1935 Real)) Real (ite (= x1935 64) x1094 (x603 x1935)))
(define-fun x1677 ((x1935 Real)) Real (ite (= x1935 96) x198 (x1001 x1935)))
(define-fun x980 ((x1935 Real)) Real (ite (= x1935 128) x658 (x1677 x1935)))
(define-fun x288 ((x1935 x824)) Real (ite (and x697 x1210) (x1600 x1935) (ite (and x849 x647) (x1600 x1935) (x1973 x1935))))
(define-fun x1599 ((x1935 x824)) Real (ite (= x1935 x1555) x1390 (x288 x1935)))
(define-fun x1987 ((x1935 Real)) Real (ite (= x1935 0) 1 (x1389 x1935)))
(define-fun x718 ((x1935 Real)) Real (ite (= x1935 x730) 1 (x1525 x1935)))
(define-fun x1875 ((x1935 x824)) Real (ite (and x697 x1210) (x1215 x1935) (ite (and x647 x849) (x738 x1935) (x1215 x1935))))
(define-fun x1079 ((x1935 x824)) Real (ite (= x145 x1935) x1663 (x1875 x1935)))
(define-fun x435 ((x1935 Real)) Real (ite (= 0 x1935) 1 (x1389 x1935)))
(define-fun x345 ((x1935 Real)) Real (ite (= x1935 x730) 1 (x1525 x1935)))
(define-fun x628 ((x1935 Real)) Real (ite (= x1935 128) x1422 (x599 x1935)))
(define-fun x1584 ((x1935 Real)) Real (ite (= x1935 160) x374 (x628 x1935)))
(define-fun x310 ((x1935 Real)) Real (ite (= 192 x1935) x1860 (x1584 x1935)))
(define-fun x1880 ((x1935 Real)) Real (ite (= 224 x1935) x1590 (x310 x1935)))
(define-fun x1504 ((x1935 Real)) Real (ite (= x1935 256) x535 (x1880 x1935)))
(define-fun x234 ((x1935 Real)) Real (ite (= x1935 0) x338 (x335 x1935)))
(define-fun x894 ((x1935 Real)) Real (ite (= x1935 32) x1459 (x234 x1935)))
(define-fun x86 ((x1935 Real)) Real (ite (= x1935 64) x1583 (x894 x1935)))
(define-fun x1067 ((x1935 Real)) Real (ite (= 96 x1935) x733 (x86 x1935)))
(define-fun x861 ((x1935 Real)) Real (ite (= 128 x1935) x1131 (x1067 x1935)))
(define-fun x92 ((x1935 Real)) Real (ite (and x1858 x929) (x925 x1935) (x294 x1935)))
(define-fun x178 ((x1935 Real)) Real (ite (and x529 x615) (x1321 x1935) (x834 x1935)))
(define-fun x951 ((x1935 Real)) Real (ite (= 0 x1935) 1 (x1957 x1935)))
(define-fun x1099 ((x1935 Real)) Real (ite (= x1935 128) x1422 (x52 x1935)))
(define-fun x349 ((x1935 Real)) Real (ite (= x1935 160) x1930 (x1099 x1935)))
(define-fun x1974 ((x1935 Real)) Real (ite (= 192 x1935) x1860 (x349 x1935)))
(define-fun x965 ((x1935 Real)) Real (ite (= x1935 224) x1590 (x1974 x1935)))
(define-fun x1543 ((x1935 Real)) Real (ite (= x1935 256) x535 (x965 x1935)))
(define-fun x431 ((x1935 Real)) Real (ite (= x1935 0) x1322 (x104 x1935)))
(define-fun x779 ((x1935 Real)) Real (ite (= 32 x1935) x1268 (x431 x1935)))
(define-fun x1613 ((x1935 Real)) Real (ite (= x1935 64) x643 (x779 x1935)))
(define-fun x132 ((x1935 Real)) Real (ite (= x1935 96) x56 (x1613 x1935)))
(define-fun x1149 ((x1935 Real)) Real (ite (= 128 x1935) x1898 (x132 x1935)))
(define-fun x938 ((x1935 Real)) Real (ite (= x1935 x1424) 0 (x1944 x1935)))
(define-fun x355 ((x1935 Real)) Real (ite (= x1320 x1935) x16 (x7 x1935)))
(define-fun x1486 ((x1935 Real)) Real (ite (= x1935 x794) x1915 (x1624 x1935)))
(define-fun x1534 ((x1935 Real)) Real (ite (= x1085 x1935) x1884 (x114 x1935)))
(define-fun x389 ((x1935 Real)) Real (ite (= x473 x1935) x803 (x134 x1935)))
(define-fun x1095 ((x1935 Real)) Real (ite (= x1935 x767) x1969 (x438 x1935)))
(define-fun x1791 ((x1935 Real)) Real (ite (= x1935 x230) x1012 (x734 x1935)))
(define-fun x1491 ((x1935 Real)) Real (ite (= x1935 x1284) x1101 (x1373 x1935)))
(define-fun x503 ((x1935 x824)) Real (ite (= x1935 x1207) x137 (x400 x1935)))
(define-fun x1296 ((x1935 x824)) Real (ite (= x737 x1935) x1242 (x400 x1935)))
(define-fun x1357 ((x1935 x824)) Real (ite (and (not x1514) x857) (ite (and (not x1514) x857 (not x627)) (x400 x1935) (x1296 x1935)) (x503 x1935)))
(define-fun x991 ((x1935 Real)) Real (ite (= x1935 128) x1422 (x1008 x1935)))
(define-fun x635 ((x1935 Real)) Real (ite (= x1935 160) x1297 (x991 x1935)))
(define-fun x1495 ((x1935 Real)) Real (ite (= x1935 192) x1860 (x635 x1935)))
(define-fun x706 ((x1935 Real)) Real (ite (= 224 x1935) x1590 (x1495 x1935)))
(define-fun x184 ((x1935 Real)) Real (ite (= x1935 256) x535 (x706 x1935)))
(define-fun x277 ((x1935 Real)) Real (ite (= 0 x1935) x316 (x676 x1935)))
(define-fun x826 ((x1935 Real)) Real (ite (= 32 x1935) x390 (x277 x1935)))
(define-fun x1431 ((x1935 Real)) Real (ite (= 64 x1935) x1009 (x826 x1935)))
(define-fun x977 ((x1935 Real)) Real (ite (= x1935 96) x1205 (x1431 x1935)))
(define-fun x1361 ((x1935 Real)) Real (ite (= 128 x1935) x890 (x977 x1935)))
(define-fun x1410 ((x1935 Real)) Real (ite (and x1748 x1762) (x1997 x1935) (ite (and x305 x662) (x345 x1935) (x718 x1935))))
(define-fun x880 ((x1935 Real)) Real (ite (= x1935 128) x1422 (x185 x1935)))
(define-fun x1328 ((x1935 Real)) Real (ite (= x1935 160) x924 (x880 x1935)))
(define-fun x1786 ((x1935 Real)) Real (ite (= 192 x1935) x1860 (x1328 x1935)))
(define-fun x1726 ((x1935 Real)) Real (ite (= x1935 224) x1590 (x1786 x1935)))
(define-fun x1772 ((x1935 Real)) Real (ite (= x1935 256) x535 (x1726 x1935)))
(define-fun x1038 ((x1935 Real)) Real (ite (= x1935 0) x454 (x422 x1935)))
(define-fun x656 ((x1935 Real)) Real (ite (= 32 x1935) x1983 (x1038 x1935)))
(define-fun x1126 ((x1935 Real)) Real (ite (= x1935 64) x1462 (x656 x1935)))
(define-fun x1456 ((x1935 Real)) Real (ite (= x1935 96) x961 (x1126 x1935)))
(define-fun x1830 ((x1935 Real)) Real (ite (= x1935 128) x1303 (x1456 x1935)))
(define-fun x1992 ((x721 Real)) Bool (=> (and (not (= x721 16156842317565293874272834530371880720966471053262404558597773956279093428224)) (not (= 4272920204 x721)) (not (= 1461501637330902918203684832716283019655932542975 x721)) (not (= x721 274184521717934524641157099916833587211)) (not (= 1099511627775 x721)) (not (= x721 1168994686)) (not (= 2068668150 x721)) (not (= x721 274184521717934524641157099916833587231)) (not (= 1110625635 x721)) (not (= x721 1208925819614629174706176)) (not (= x721 157198259)) (not (= x721 170141183460469231731687303715884105727)) (not (= x721 3638949393)) (not (= 1208925819614629174706175 x721)) (not (= 2835717307 x721)) (not (= x721 3119561463)) (not (= 274184521717934524641157099916833587244 x721)) (not (= x721 3257672857)) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x721)) (not (= x721 2514000705)) (not (= 3795249780 x721)) (not (= x721 3695885053)) (not (= x721 115792089237316195423570985008687907853269984655499359237631748795939503996928)) (not (= 57896044618658097711785492504343953926634992332820282019728792003956564819968 x721)) (not (= 1889567281 x721)) (not (= x721 274184521717934524641157099916833587235)) (not (= 274184521717934524641157099916833587227 x721)) (not (= x721 20282409603651670423947251286016)) (not (= 2362581449 x721)) (not (= 3889878717 x721)) (not (= 274184521717934524641157099916833587233 x721)) (> x721 10000) (not (= x721 18446744073709551615)) (not (= 826074471 x721)) (not (= 3840337785 x721)) (not (= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x721)) (not (= x721 65536)) (not (= 4062139261 x721)) (not (= 115197700812830431890159100217698998050002284567939525164234024451216521560064 x721)) (not (= x721 3833100637)) (not (= x721 18446744073709551616)) (not (= x721 20282409603651670423947251286015)) (not (= x721 115792089237316195423570985008687907853269984665640564039457584007913129639904)) (not (= 3253611544 x721)) (not (= 50942633119752846454219349998365661925608737367104304655302372697894809501696 x721)) (not (= 340282366920938463463374607431768211455 x721)) (not (= 404098525 x721)) (not (= 65535 x721)) (not (= 117300739 x721)) (not (= x721 10141204801825835211973625643007)) (not (= x721 950698303)) (not (= 599290589 x721)) (not (= 76450787359836037641860180984291677749980919077056822294353438043884394381312 x721)) (not (= 274184521717934524641157099916833587223 x721)) (not (= 340282366920938463463374607431768211456 x721))) (not ((_ is x273) (x808 x721)))))
(assert (axiom_frac_bound (* (x1225 x1260) x558) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (* (x1225 x1260) x558) 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1225 x1260) x558 (uninterp_frac (* (x1225 x1260) x558) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* (x1225 x1260) x558) 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1225 x1354) x278 (uninterp_frac (* (x1225 x1260) x558) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* (x1225 x1260) x558) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1036 x1257 (uninterp_frac (* (x1225 x1260) x558) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* (x1225 x1260) x558) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1078 x1563 (uninterp_frac (* (x1225 x1260) x558) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* (x1225 x1260) x558) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1113 x1960 (uninterp_frac (* (x1225 x1260) x558) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* (x1225 x1260) x558) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x116 x1587 (uninterp_frac (* (x1225 x1260) x558) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* (x1225 x1260) x558) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x117 x1735 (uninterp_frac (* (x1225 x1260) x558) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* (x1225 x1260) x558) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x12 x1185 (uninterp_frac (* (x1225 x1260) x558) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* (x1225 x1260) x558) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1248 x1338 (uninterp_frac (* (x1225 x1260) x558) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* (x1225 x1260) x558) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1536 x1925 (uninterp_frac (* (x1225 x1260) x558) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* (x1225 x1260) x558) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1749 x70 (uninterp_frac (* (x1225 x1260) x558) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* (x1225 x1260) x558) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1881 x70 (uninterp_frac (* (x1225 x1260) x558) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* (x1225 x1260) x558) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1886 x1102 (uninterp_frac (* (x1225 x1260) x558) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* (x1225 x1260) x558) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1920 x250 (uninterp_frac (* (x1225 x1260) x558) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* (x1225 x1260) x558) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1925 x1536 (uninterp_frac (* (x1225 x1260) x558) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* (x1225 x1260) x558) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1960 x1111 (uninterp_frac (* (x1225 x1260) x558) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* (x1225 x1260) x558) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1960 x1575 (uninterp_frac (* (x1225 x1260) x558) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* (x1225 x1260) x558) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1960 x309 (uninterp_frac (* (x1225 x1260) x558) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* (x1225 x1260) x558) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1994 x468 (uninterp_frac (* (x1225 x1260) x558) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* (x1225 x1260) x558) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x250 x1920 (uninterp_frac (* (x1225 x1260) x558) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* (x1225 x1260) x558) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x286 x70 (uninterp_frac (* (x1225 x1260) x558) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* (x1225 x1260) x558) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x290 x735 (uninterp_frac (* (x1225 x1260) x558) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* (x1225 x1260) x558) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x309 x1960 (uninterp_frac (* (x1225 x1260) x558) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* (x1225 x1260) x558) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x318 (x1225 x1394) (uninterp_frac (* (x1225 x1260) x558) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* (x1225 x1260) x558) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x340 x58 (uninterp_frac (* (x1225 x1260) x558) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* (x1225 x1260) x558) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x344 x180 (uninterp_frac (* (x1225 x1260) x558) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* (x1225 x1260) x558) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x468 x1994 (uninterp_frac (* (x1225 x1260) x558) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* (x1225 x1260) x558) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x70 x1749 (uninterp_frac (* (x1225 x1260) x558) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* (x1225 x1260) x558) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x70 x286 (uninterp_frac (* (x1225 x1260) x558) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* (x1225 x1260) x558) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x70 x837 (uninterp_frac (* (x1225 x1260) x558) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* (x1225 x1260) x558) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x837 x70 (uninterp_frac (* (x1225 x1260) x558) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (* (x1225 x1354) x278) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (* (x1225 x1354) x278) 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1225 x1260) x558 (uninterp_frac (* (x1225 x1354) x278) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* (x1225 x1354) x278) 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1225 x1354) x278 (uninterp_frac (* (x1225 x1354) x278) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* (x1225 x1354) x278) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1036 x1257 (uninterp_frac (* (x1225 x1354) x278) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* (x1225 x1354) x278) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1078 x1563 (uninterp_frac (* (x1225 x1354) x278) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* (x1225 x1354) x278) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1113 x1960 (uninterp_frac (* (x1225 x1354) x278) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* (x1225 x1354) x278) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x116 x1587 (uninterp_frac (* (x1225 x1354) x278) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* (x1225 x1354) x278) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x117 x1735 (uninterp_frac (* (x1225 x1354) x278) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* (x1225 x1354) x278) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x12 x1185 (uninterp_frac (* (x1225 x1354) x278) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* (x1225 x1354) x278) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1248 x1338 (uninterp_frac (* (x1225 x1354) x278) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* (x1225 x1354) x278) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1536 x1925 (uninterp_frac (* (x1225 x1354) x278) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* (x1225 x1354) x278) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1749 x70 (uninterp_frac (* (x1225 x1354) x278) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* (x1225 x1354) x278) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1881 x70 (uninterp_frac (* (x1225 x1354) x278) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* (x1225 x1354) x278) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1886 x1102 (uninterp_frac (* (x1225 x1354) x278) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* (x1225 x1354) x278) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1920 x250 (uninterp_frac (* (x1225 x1354) x278) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* (x1225 x1354) x278) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1925 x1536 (uninterp_frac (* (x1225 x1354) x278) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* (x1225 x1354) x278) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1960 x1111 (uninterp_frac (* (x1225 x1354) x278) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* (x1225 x1354) x278) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1960 x1575 (uninterp_frac (* (x1225 x1354) x278) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* (x1225 x1354) x278) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1960 x309 (uninterp_frac (* (x1225 x1354) x278) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* (x1225 x1354) x278) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1994 x468 (uninterp_frac (* (x1225 x1354) x278) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* (x1225 x1354) x278) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x250 x1920 (uninterp_frac (* (x1225 x1354) x278) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* (x1225 x1354) x278) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x286 x70 (uninterp_frac (* (x1225 x1354) x278) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* (x1225 x1354) x278) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x290 x735 (uninterp_frac (* (x1225 x1354) x278) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* (x1225 x1354) x278) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x309 x1960 (uninterp_frac (* (x1225 x1354) x278) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* (x1225 x1354) x278) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x318 (x1225 x1394) (uninterp_frac (* (x1225 x1354) x278) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* (x1225 x1354) x278) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x340 x58 (uninterp_frac (* (x1225 x1354) x278) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* (x1225 x1354) x278) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x344 x180 (uninterp_frac (* (x1225 x1354) x278) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* (x1225 x1354) x278) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x468 x1994 (uninterp_frac (* (x1225 x1354) x278) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* (x1225 x1354) x278) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x70 x1749 (uninterp_frac (* (x1225 x1354) x278) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* (x1225 x1354) x278) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x70 x286 (uninterp_frac (* (x1225 x1354) x278) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* (x1225 x1354) x278) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x70 x837 (uninterp_frac (* (x1225 x1354) x278) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* (x1225 x1354) x278) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x837 x70 (uninterp_frac (* (x1225 x1354) x278) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (* x1036 x1257) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (* x1036 x1257) 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1225 x1260) x558 (uninterp_frac (* x1036 x1257) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1036 x1257) 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1225 x1354) x278 (uninterp_frac (* x1036 x1257) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1036 x1257) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1036 x1257 (uninterp_frac (* x1036 x1257) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1036 x1257) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1078 x1563 (uninterp_frac (* x1036 x1257) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1036 x1257) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1113 x1960 (uninterp_frac (* x1036 x1257) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1036 x1257) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x116 x1587 (uninterp_frac (* x1036 x1257) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1036 x1257) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x117 x1735 (uninterp_frac (* x1036 x1257) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1036 x1257) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x12 x1185 (uninterp_frac (* x1036 x1257) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1036 x1257) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1248 x1338 (uninterp_frac (* x1036 x1257) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1036 x1257) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1536 x1925 (uninterp_frac (* x1036 x1257) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1036 x1257) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1749 x70 (uninterp_frac (* x1036 x1257) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1036 x1257) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1881 x70 (uninterp_frac (* x1036 x1257) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1036 x1257) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1886 x1102 (uninterp_frac (* x1036 x1257) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1036 x1257) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1920 x250 (uninterp_frac (* x1036 x1257) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1036 x1257) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1925 x1536 (uninterp_frac (* x1036 x1257) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1036 x1257) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1960 x1111 (uninterp_frac (* x1036 x1257) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1036 x1257) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1960 x1575 (uninterp_frac (* x1036 x1257) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1036 x1257) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1960 x309 (uninterp_frac (* x1036 x1257) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1036 x1257) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1994 x468 (uninterp_frac (* x1036 x1257) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1036 x1257) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x250 x1920 (uninterp_frac (* x1036 x1257) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1036 x1257) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x286 x70 (uninterp_frac (* x1036 x1257) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1036 x1257) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x290 x735 (uninterp_frac (* x1036 x1257) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1036 x1257) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x309 x1960 (uninterp_frac (* x1036 x1257) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1036 x1257) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x318 (x1225 x1394) (uninterp_frac (* x1036 x1257) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1036 x1257) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x340 x58 (uninterp_frac (* x1036 x1257) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1036 x1257) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x344 x180 (uninterp_frac (* x1036 x1257) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1036 x1257) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x468 x1994 (uninterp_frac (* x1036 x1257) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1036 x1257) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x70 x1749 (uninterp_frac (* x1036 x1257) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1036 x1257) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x70 x286 (uninterp_frac (* x1036 x1257) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1036 x1257) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x70 x837 (uninterp_frac (* x1036 x1257) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1036 x1257) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x837 x70 (uninterp_frac (* x1036 x1257) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (* x1078 x1563) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (* x1078 x1563) 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1225 x1260) x558 (uninterp_frac (* x1078 x1563) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1078 x1563) 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1225 x1354) x278 (uninterp_frac (* x1078 x1563) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1078 x1563) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1036 x1257 (uninterp_frac (* x1078 x1563) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1078 x1563) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1078 x1563 (uninterp_frac (* x1078 x1563) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1078 x1563) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1113 x1960 (uninterp_frac (* x1078 x1563) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1078 x1563) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x116 x1587 (uninterp_frac (* x1078 x1563) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1078 x1563) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x117 x1735 (uninterp_frac (* x1078 x1563) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1078 x1563) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x12 x1185 (uninterp_frac (* x1078 x1563) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1078 x1563) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1248 x1338 (uninterp_frac (* x1078 x1563) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1078 x1563) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1536 x1925 (uninterp_frac (* x1078 x1563) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1078 x1563) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1749 x70 (uninterp_frac (* x1078 x1563) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1078 x1563) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1881 x70 (uninterp_frac (* x1078 x1563) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1078 x1563) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1886 x1102 (uninterp_frac (* x1078 x1563) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1078 x1563) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1920 x250 (uninterp_frac (* x1078 x1563) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1078 x1563) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1925 x1536 (uninterp_frac (* x1078 x1563) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1078 x1563) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1960 x1111 (uninterp_frac (* x1078 x1563) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1078 x1563) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1960 x1575 (uninterp_frac (* x1078 x1563) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1078 x1563) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1960 x309 (uninterp_frac (* x1078 x1563) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1078 x1563) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1994 x468 (uninterp_frac (* x1078 x1563) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1078 x1563) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x250 x1920 (uninterp_frac (* x1078 x1563) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1078 x1563) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x286 x70 (uninterp_frac (* x1078 x1563) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1078 x1563) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x290 x735 (uninterp_frac (* x1078 x1563) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1078 x1563) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x309 x1960 (uninterp_frac (* x1078 x1563) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1078 x1563) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x318 (x1225 x1394) (uninterp_frac (* x1078 x1563) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1078 x1563) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x340 x58 (uninterp_frac (* x1078 x1563) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1078 x1563) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x344 x180 (uninterp_frac (* x1078 x1563) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1078 x1563) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x468 x1994 (uninterp_frac (* x1078 x1563) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1078 x1563) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x70 x1749 (uninterp_frac (* x1078 x1563) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1078 x1563) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x70 x286 (uninterp_frac (* x1078 x1563) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1078 x1563) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x70 x837 (uninterp_frac (* x1078 x1563) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1078 x1563) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x837 x70 (uninterp_frac (* x1078 x1563) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (* x116 x1587) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (* x116 x1587) 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1225 x1260) x558 (uninterp_frac (* x116 x1587) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x116 x1587) 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1225 x1354) x278 (uninterp_frac (* x116 x1587) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x116 x1587) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1036 x1257 (uninterp_frac (* x116 x1587) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x116 x1587) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1078 x1563 (uninterp_frac (* x116 x1587) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x116 x1587) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1113 x1960 (uninterp_frac (* x116 x1587) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x116 x1587) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x116 x1587 (uninterp_frac (* x116 x1587) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x116 x1587) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x117 x1735 (uninterp_frac (* x116 x1587) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x116 x1587) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x12 x1185 (uninterp_frac (* x116 x1587) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x116 x1587) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1248 x1338 (uninterp_frac (* x116 x1587) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x116 x1587) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1536 x1925 (uninterp_frac (* x116 x1587) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x116 x1587) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1749 x70 (uninterp_frac (* x116 x1587) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x116 x1587) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1881 x70 (uninterp_frac (* x116 x1587) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x116 x1587) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1886 x1102 (uninterp_frac (* x116 x1587) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x116 x1587) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1920 x250 (uninterp_frac (* x116 x1587) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x116 x1587) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1925 x1536 (uninterp_frac (* x116 x1587) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x116 x1587) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1960 x1111 (uninterp_frac (* x116 x1587) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x116 x1587) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1960 x1575 (uninterp_frac (* x116 x1587) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x116 x1587) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1960 x309 (uninterp_frac (* x116 x1587) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x116 x1587) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1994 x468 (uninterp_frac (* x116 x1587) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x116 x1587) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x250 x1920 (uninterp_frac (* x116 x1587) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x116 x1587) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x286 x70 (uninterp_frac (* x116 x1587) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x116 x1587) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x290 x735 (uninterp_frac (* x116 x1587) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x116 x1587) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x309 x1960 (uninterp_frac (* x116 x1587) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x116 x1587) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x318 (x1225 x1394) (uninterp_frac (* x116 x1587) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x116 x1587) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x340 x58 (uninterp_frac (* x116 x1587) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x116 x1587) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x344 x180 (uninterp_frac (* x116 x1587) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x116 x1587) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x468 x1994 (uninterp_frac (* x116 x1587) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x116 x1587) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x70 x1749 (uninterp_frac (* x116 x1587) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x116 x1587) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x70 x286 (uninterp_frac (* x116 x1587) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x116 x1587) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x70 x837 (uninterp_frac (* x116 x1587) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x116 x1587) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x837 x70 (uninterp_frac (* x116 x1587) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (* x12 x1185) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (* x12 x1185) 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1225 x1260) x558 (uninterp_frac (* x12 x1185) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x12 x1185) 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1225 x1354) x278 (uninterp_frac (* x12 x1185) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x12 x1185) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1036 x1257 (uninterp_frac (* x12 x1185) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x12 x1185) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1078 x1563 (uninterp_frac (* x12 x1185) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x12 x1185) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1113 x1960 (uninterp_frac (* x12 x1185) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x12 x1185) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x116 x1587 (uninterp_frac (* x12 x1185) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x12 x1185) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x117 x1735 (uninterp_frac (* x12 x1185) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x12 x1185) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x12 x1185 (uninterp_frac (* x12 x1185) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x12 x1185) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1248 x1338 (uninterp_frac (* x12 x1185) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x12 x1185) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1536 x1925 (uninterp_frac (* x12 x1185) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x12 x1185) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1749 x70 (uninterp_frac (* x12 x1185) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x12 x1185) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1881 x70 (uninterp_frac (* x12 x1185) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x12 x1185) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1886 x1102 (uninterp_frac (* x12 x1185) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x12 x1185) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1920 x250 (uninterp_frac (* x12 x1185) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x12 x1185) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1925 x1536 (uninterp_frac (* x12 x1185) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x12 x1185) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1960 x1111 (uninterp_frac (* x12 x1185) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x12 x1185) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1960 x1575 (uninterp_frac (* x12 x1185) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x12 x1185) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1960 x309 (uninterp_frac (* x12 x1185) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x12 x1185) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1994 x468 (uninterp_frac (* x12 x1185) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x12 x1185) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x250 x1920 (uninterp_frac (* x12 x1185) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x12 x1185) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x286 x70 (uninterp_frac (* x12 x1185) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x12 x1185) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x290 x735 (uninterp_frac (* x12 x1185) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x12 x1185) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x309 x1960 (uninterp_frac (* x12 x1185) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x12 x1185) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x318 (x1225 x1394) (uninterp_frac (* x12 x1185) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x12 x1185) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x340 x58 (uninterp_frac (* x12 x1185) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x12 x1185) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x344 x180 (uninterp_frac (* x12 x1185) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x12 x1185) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x468 x1994 (uninterp_frac (* x12 x1185) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x12 x1185) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x70 x1749 (uninterp_frac (* x12 x1185) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x12 x1185) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x70 x286 (uninterp_frac (* x12 x1185) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x12 x1185) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x70 x837 (uninterp_frac (* x12 x1185) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x12 x1185) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x837 x70 (uninterp_frac (* x12 x1185) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (* x1248 x1338) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (* x1248 x1338) 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1225 x1260) x558 (uninterp_frac (* x1248 x1338) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1248 x1338) 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1225 x1354) x278 (uninterp_frac (* x1248 x1338) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1248 x1338) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1036 x1257 (uninterp_frac (* x1248 x1338) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1248 x1338) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1078 x1563 (uninterp_frac (* x1248 x1338) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1248 x1338) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1113 x1960 (uninterp_frac (* x1248 x1338) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1248 x1338) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x116 x1587 (uninterp_frac (* x1248 x1338) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1248 x1338) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x117 x1735 (uninterp_frac (* x1248 x1338) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1248 x1338) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x12 x1185 (uninterp_frac (* x1248 x1338) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1248 x1338) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1248 x1338 (uninterp_frac (* x1248 x1338) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1248 x1338) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1536 x1925 (uninterp_frac (* x1248 x1338) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1248 x1338) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1749 x70 (uninterp_frac (* x1248 x1338) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1248 x1338) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1881 x70 (uninterp_frac (* x1248 x1338) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1248 x1338) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1886 x1102 (uninterp_frac (* x1248 x1338) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1248 x1338) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1920 x250 (uninterp_frac (* x1248 x1338) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1248 x1338) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1925 x1536 (uninterp_frac (* x1248 x1338) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1248 x1338) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1960 x1111 (uninterp_frac (* x1248 x1338) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1248 x1338) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1960 x1575 (uninterp_frac (* x1248 x1338) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1248 x1338) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1960 x309 (uninterp_frac (* x1248 x1338) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1248 x1338) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1994 x468 (uninterp_frac (* x1248 x1338) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1248 x1338) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x250 x1920 (uninterp_frac (* x1248 x1338) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1248 x1338) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x286 x70 (uninterp_frac (* x1248 x1338) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1248 x1338) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x290 x735 (uninterp_frac (* x1248 x1338) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1248 x1338) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x309 x1960 (uninterp_frac (* x1248 x1338) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1248 x1338) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x318 (x1225 x1394) (uninterp_frac (* x1248 x1338) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1248 x1338) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x340 x58 (uninterp_frac (* x1248 x1338) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1248 x1338) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x344 x180 (uninterp_frac (* x1248 x1338) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1248 x1338) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x468 x1994 (uninterp_frac (* x1248 x1338) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1248 x1338) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x70 x1749 (uninterp_frac (* x1248 x1338) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1248 x1338) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x70 x286 (uninterp_frac (* x1248 x1338) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1248 x1338) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x70 x837 (uninterp_frac (* x1248 x1338) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1248 x1338) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x837 x70 (uninterp_frac (* x1248 x1338) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (* x290 x735) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (* x290 x735) 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1225 x1260) x558 (uninterp_frac (* x290 x735) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x290 x735) 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1225 x1354) x278 (uninterp_frac (* x290 x735) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x290 x735) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1036 x1257 (uninterp_frac (* x290 x735) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x290 x735) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1078 x1563 (uninterp_frac (* x290 x735) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x290 x735) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1113 x1960 (uninterp_frac (* x290 x735) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x290 x735) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x116 x1587 (uninterp_frac (* x290 x735) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x290 x735) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x117 x1735 (uninterp_frac (* x290 x735) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x290 x735) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x12 x1185 (uninterp_frac (* x290 x735) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x290 x735) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1248 x1338 (uninterp_frac (* x290 x735) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x290 x735) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1536 x1925 (uninterp_frac (* x290 x735) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x290 x735) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1749 x70 (uninterp_frac (* x290 x735) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x290 x735) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1881 x70 (uninterp_frac (* x290 x735) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x290 x735) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1886 x1102 (uninterp_frac (* x290 x735) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x290 x735) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1920 x250 (uninterp_frac (* x290 x735) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x290 x735) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1925 x1536 (uninterp_frac (* x290 x735) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x290 x735) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1960 x1111 (uninterp_frac (* x290 x735) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x290 x735) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1960 x1575 (uninterp_frac (* x290 x735) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x290 x735) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1960 x309 (uninterp_frac (* x290 x735) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x290 x735) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1994 x468 (uninterp_frac (* x290 x735) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x290 x735) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x250 x1920 (uninterp_frac (* x290 x735) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x290 x735) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x286 x70 (uninterp_frac (* x290 x735) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x290 x735) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x290 x735 (uninterp_frac (* x290 x735) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x290 x735) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x309 x1960 (uninterp_frac (* x290 x735) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x290 x735) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x318 (x1225 x1394) (uninterp_frac (* x290 x735) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x290 x735) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x340 x58 (uninterp_frac (* x290 x735) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x290 x735) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x344 x180 (uninterp_frac (* x290 x735) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x290 x735) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x468 x1994 (uninterp_frac (* x290 x735) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x290 x735) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x70 x1749 (uninterp_frac (* x290 x735) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x290 x735) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x70 x286 (uninterp_frac (* x290 x735) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x290 x735) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x70 x837 (uninterp_frac (* x290 x735) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x290 x735) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x837 x70 (uninterp_frac (* x290 x735) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (* x318 (x1225 x1394)) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (* x318 (x1225 x1394)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1225 x1260) x558 (uninterp_frac (* x318 (x1225 x1394)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x318 (x1225 x1394)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1225 x1354) x278 (uninterp_frac (* x318 (x1225 x1394)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x318 (x1225 x1394)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1036 x1257 (uninterp_frac (* x318 (x1225 x1394)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x318 (x1225 x1394)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1078 x1563 (uninterp_frac (* x318 (x1225 x1394)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x318 (x1225 x1394)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1113 x1960 (uninterp_frac (* x318 (x1225 x1394)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x318 (x1225 x1394)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x116 x1587 (uninterp_frac (* x318 (x1225 x1394)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x318 (x1225 x1394)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x117 x1735 (uninterp_frac (* x318 (x1225 x1394)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x318 (x1225 x1394)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x12 x1185 (uninterp_frac (* x318 (x1225 x1394)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x318 (x1225 x1394)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1248 x1338 (uninterp_frac (* x318 (x1225 x1394)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x318 (x1225 x1394)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1536 x1925 (uninterp_frac (* x318 (x1225 x1394)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x318 (x1225 x1394)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1749 x70 (uninterp_frac (* x318 (x1225 x1394)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x318 (x1225 x1394)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1881 x70 (uninterp_frac (* x318 (x1225 x1394)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x318 (x1225 x1394)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1886 x1102 (uninterp_frac (* x318 (x1225 x1394)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x318 (x1225 x1394)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1920 x250 (uninterp_frac (* x318 (x1225 x1394)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x318 (x1225 x1394)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1925 x1536 (uninterp_frac (* x318 (x1225 x1394)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x318 (x1225 x1394)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1960 x1111 (uninterp_frac (* x318 (x1225 x1394)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x318 (x1225 x1394)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1960 x1575 (uninterp_frac (* x318 (x1225 x1394)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x318 (x1225 x1394)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1960 x309 (uninterp_frac (* x318 (x1225 x1394)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x318 (x1225 x1394)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1994 x468 (uninterp_frac (* x318 (x1225 x1394)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x318 (x1225 x1394)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x250 x1920 (uninterp_frac (* x318 (x1225 x1394)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x318 (x1225 x1394)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x286 x70 (uninterp_frac (* x318 (x1225 x1394)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x318 (x1225 x1394)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x290 x735 (uninterp_frac (* x318 (x1225 x1394)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x318 (x1225 x1394)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x309 x1960 (uninterp_frac (* x318 (x1225 x1394)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x318 (x1225 x1394)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x318 (x1225 x1394) (uninterp_frac (* x318 (x1225 x1394)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x318 (x1225 x1394)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x340 x58 (uninterp_frac (* x318 (x1225 x1394)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x318 (x1225 x1394)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x344 x180 (uninterp_frac (* x318 (x1225 x1394)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x318 (x1225 x1394)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x468 x1994 (uninterp_frac (* x318 (x1225 x1394)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x318 (x1225 x1394)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x70 x1749 (uninterp_frac (* x318 (x1225 x1394)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x318 (x1225 x1394)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x70 x286 (uninterp_frac (* x318 (x1225 x1394)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x318 (x1225 x1394)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x70 x837 (uninterp_frac (* x318 (x1225 x1394)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x318 (x1225 x1394)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x837 x70 (uninterp_frac (* x318 (x1225 x1394)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (* x340 x58) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (* x340 x58) 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1225 x1260) x558 (uninterp_frac (* x340 x58) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x340 x58) 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1225 x1354) x278 (uninterp_frac (* x340 x58) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x340 x58) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1036 x1257 (uninterp_frac (* x340 x58) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x340 x58) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1078 x1563 (uninterp_frac (* x340 x58) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x340 x58) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1113 x1960 (uninterp_frac (* x340 x58) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x340 x58) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x116 x1587 (uninterp_frac (* x340 x58) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x340 x58) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x117 x1735 (uninterp_frac (* x340 x58) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x340 x58) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x12 x1185 (uninterp_frac (* x340 x58) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x340 x58) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1248 x1338 (uninterp_frac (* x340 x58) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x340 x58) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1536 x1925 (uninterp_frac (* x340 x58) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x340 x58) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1749 x70 (uninterp_frac (* x340 x58) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x340 x58) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1881 x70 (uninterp_frac (* x340 x58) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x340 x58) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1886 x1102 (uninterp_frac (* x340 x58) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x340 x58) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1920 x250 (uninterp_frac (* x340 x58) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x340 x58) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1925 x1536 (uninterp_frac (* x340 x58) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x340 x58) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1960 x1111 (uninterp_frac (* x340 x58) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x340 x58) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1960 x1575 (uninterp_frac (* x340 x58) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x340 x58) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1960 x309 (uninterp_frac (* x340 x58) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x340 x58) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1994 x468 (uninterp_frac (* x340 x58) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x340 x58) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x250 x1920 (uninterp_frac (* x340 x58) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x340 x58) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x286 x70 (uninterp_frac (* x340 x58) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x340 x58) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x290 x735 (uninterp_frac (* x340 x58) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x340 x58) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x309 x1960 (uninterp_frac (* x340 x58) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x340 x58) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x318 (x1225 x1394) (uninterp_frac (* x340 x58) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x340 x58) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x340 x58 (uninterp_frac (* x340 x58) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x340 x58) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x344 x180 (uninterp_frac (* x340 x58) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x340 x58) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x468 x1994 (uninterp_frac (* x340 x58) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x340 x58) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x70 x1749 (uninterp_frac (* x340 x58) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x340 x58) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x70 x286 (uninterp_frac (* x340 x58) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x340 x58) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x70 x837 (uninterp_frac (* x340 x58) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x340 x58) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x837 x70 (uninterp_frac (* x340 x58) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (* x344 x180) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (* x344 x180) 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1225 x1260) x558 (uninterp_frac (* x344 x180) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x344 x180) 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1225 x1354) x278 (uninterp_frac (* x344 x180) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x344 x180) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1036 x1257 (uninterp_frac (* x344 x180) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x344 x180) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1078 x1563 (uninterp_frac (* x344 x180) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x344 x180) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1113 x1960 (uninterp_frac (* x344 x180) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x344 x180) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x116 x1587 (uninterp_frac (* x344 x180) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x344 x180) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x117 x1735 (uninterp_frac (* x344 x180) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x344 x180) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x12 x1185 (uninterp_frac (* x344 x180) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x344 x180) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1248 x1338 (uninterp_frac (* x344 x180) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x344 x180) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1536 x1925 (uninterp_frac (* x344 x180) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x344 x180) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1749 x70 (uninterp_frac (* x344 x180) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x344 x180) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1881 x70 (uninterp_frac (* x344 x180) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x344 x180) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1886 x1102 (uninterp_frac (* x344 x180) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x344 x180) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1920 x250 (uninterp_frac (* x344 x180) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x344 x180) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1925 x1536 (uninterp_frac (* x344 x180) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x344 x180) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1960 x1111 (uninterp_frac (* x344 x180) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x344 x180) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1960 x1575 (uninterp_frac (* x344 x180) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x344 x180) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1960 x309 (uninterp_frac (* x344 x180) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x344 x180) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1994 x468 (uninterp_frac (* x344 x180) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x344 x180) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x250 x1920 (uninterp_frac (* x344 x180) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x344 x180) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x286 x70 (uninterp_frac (* x344 x180) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x344 x180) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x290 x735 (uninterp_frac (* x344 x180) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x344 x180) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x309 x1960 (uninterp_frac (* x344 x180) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x344 x180) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x318 (x1225 x1394) (uninterp_frac (* x344 x180) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x344 x180) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x340 x58 (uninterp_frac (* x344 x180) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x344 x180) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x344 x180 (uninterp_frac (* x344 x180) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x344 x180) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x468 x1994 (uninterp_frac (* x344 x180) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x344 x180) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x70 x1749 (uninterp_frac (* x344 x180) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x344 x180) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x70 x286 (uninterp_frac (* x344 x180) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x344 x180) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x70 x837 (uninterp_frac (* x344 x180) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x344 x180) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x837 x70 (uninterp_frac (* x344 x180) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (x1138 2 x1479) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (x1138 2 x1479) 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1225 x1260) x558 (uninterp_frac (x1138 2 x1479) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x1138 2 x1479) 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1225 x1354) x278 (uninterp_frac (x1138 2 x1479) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x1138 2 x1479) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1036 x1257 (uninterp_frac (x1138 2 x1479) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x1138 2 x1479) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1078 x1563 (uninterp_frac (x1138 2 x1479) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x1138 2 x1479) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1113 x1960 (uninterp_frac (x1138 2 x1479) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x1138 2 x1479) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x116 x1587 (uninterp_frac (x1138 2 x1479) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x1138 2 x1479) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x117 x1735 (uninterp_frac (x1138 2 x1479) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x1138 2 x1479) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x12 x1185 (uninterp_frac (x1138 2 x1479) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x1138 2 x1479) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1248 x1338 (uninterp_frac (x1138 2 x1479) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x1138 2 x1479) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1536 x1925 (uninterp_frac (x1138 2 x1479) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x1138 2 x1479) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1749 x70 (uninterp_frac (x1138 2 x1479) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x1138 2 x1479) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1881 x70 (uninterp_frac (x1138 2 x1479) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x1138 2 x1479) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1886 x1102 (uninterp_frac (x1138 2 x1479) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x1138 2 x1479) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1920 x250 (uninterp_frac (x1138 2 x1479) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x1138 2 x1479) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1925 x1536 (uninterp_frac (x1138 2 x1479) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x1138 2 x1479) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1960 x1111 (uninterp_frac (x1138 2 x1479) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x1138 2 x1479) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1960 x1575 (uninterp_frac (x1138 2 x1479) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x1138 2 x1479) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1960 x309 (uninterp_frac (x1138 2 x1479) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x1138 2 x1479) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1994 x468 (uninterp_frac (x1138 2 x1479) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x1138 2 x1479) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x250 x1920 (uninterp_frac (x1138 2 x1479) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x1138 2 x1479) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x286 x70 (uninterp_frac (x1138 2 x1479) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x1138 2 x1479) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x290 x735 (uninterp_frac (x1138 2 x1479) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x1138 2 x1479) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x309 x1960 (uninterp_frac (x1138 2 x1479) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x1138 2 x1479) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x318 (x1225 x1394) (uninterp_frac (x1138 2 x1479) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x1138 2 x1479) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x340 x58 (uninterp_frac (x1138 2 x1479) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x1138 2 x1479) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x344 x180 (uninterp_frac (x1138 2 x1479) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x1138 2 x1479) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x468 x1994 (uninterp_frac (x1138 2 x1479) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x1138 2 x1479) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x70 x1749 (uninterp_frac (x1138 2 x1479) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x1138 2 x1479) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x70 x286 (uninterp_frac (x1138 2 x1479) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x1138 2 x1479) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x70 x837 (uninterp_frac (x1138 2 x1479) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x1138 2 x1479) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x837 x70 (uninterp_frac (x1138 2 x1479) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (x1138 2 x415) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (x1138 2 x415) 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1225 x1260) x558 (uninterp_frac (x1138 2 x415) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x1138 2 x415) 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1225 x1354) x278 (uninterp_frac (x1138 2 x415) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x1138 2 x415) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1036 x1257 (uninterp_frac (x1138 2 x415) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x1138 2 x415) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1078 x1563 (uninterp_frac (x1138 2 x415) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x1138 2 x415) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1113 x1960 (uninterp_frac (x1138 2 x415) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x1138 2 x415) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x116 x1587 (uninterp_frac (x1138 2 x415) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x1138 2 x415) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x117 x1735 (uninterp_frac (x1138 2 x415) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x1138 2 x415) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x12 x1185 (uninterp_frac (x1138 2 x415) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x1138 2 x415) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1248 x1338 (uninterp_frac (x1138 2 x415) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x1138 2 x415) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1536 x1925 (uninterp_frac (x1138 2 x415) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x1138 2 x415) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1749 x70 (uninterp_frac (x1138 2 x415) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x1138 2 x415) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1881 x70 (uninterp_frac (x1138 2 x415) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x1138 2 x415) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1886 x1102 (uninterp_frac (x1138 2 x415) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x1138 2 x415) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1920 x250 (uninterp_frac (x1138 2 x415) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x1138 2 x415) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1925 x1536 (uninterp_frac (x1138 2 x415) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x1138 2 x415) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1960 x1111 (uninterp_frac (x1138 2 x415) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x1138 2 x415) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1960 x1575 (uninterp_frac (x1138 2 x415) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x1138 2 x415) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1960 x309 (uninterp_frac (x1138 2 x415) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x1138 2 x415) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1994 x468 (uninterp_frac (x1138 2 x415) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x1138 2 x415) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x250 x1920 (uninterp_frac (x1138 2 x415) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x1138 2 x415) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x286 x70 (uninterp_frac (x1138 2 x415) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x1138 2 x415) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x290 x735 (uninterp_frac (x1138 2 x415) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x1138 2 x415) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x309 x1960 (uninterp_frac (x1138 2 x415) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x1138 2 x415) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x318 (x1225 x1394) (uninterp_frac (x1138 2 x415) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x1138 2 x415) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x340 x58 (uninterp_frac (x1138 2 x415) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x1138 2 x415) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x344 x180 (uninterp_frac (x1138 2 x415) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x1138 2 x415) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x468 x1994 (uninterp_frac (x1138 2 x415) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x1138 2 x415) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x70 x1749 (uninterp_frac (x1138 2 x415) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x1138 2 x415) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x70 x286 (uninterp_frac (x1138 2 x415) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x1138 2 x415) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x70 x837 (uninterp_frac (x1138 2 x415) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x1138 2 x415) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x837 x70 (uninterp_frac (x1138 2 x415) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1185))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1185 (x1225 x1260) x558 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1185)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1185 (x1225 x1354) x278 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1185)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1185 x1036 x1257 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1185)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1185 x1078 x1563 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1185)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1185 x1113 x1960 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1185)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1185 x116 x1587 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1185)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1185 x117 x1735 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1185)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1185 x12 x1185 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1185)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1185 x1248 x1338 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1185)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1185 x1536 x1925 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1185)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1185 x1749 x70 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1185)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1185 x1881 x70 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1185)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1185 x1886 x1102 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1185)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1185 x1920 x250 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1185)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1185 x1925 x1536 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1185)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1185 x1960 x1111 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1185)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1185 x1960 x1575 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1185)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1185 x1960 x309 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1185)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1185 x1994 x468 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1185)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1185 x250 x1920 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1185)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1185 x286 x70 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1185)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1185 x290 x735 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1185)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1185 x309 x1960 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1185)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1185 x318 (x1225 x1394) (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1185)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1185 x340 x58 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1185)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1185 x344 x180 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1185)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1185 x468 x1994 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1185)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1185 x70 x1749 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1185)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1185 x70 x286 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1185)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1185 x70 x837 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1185)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1185 x837 x70 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1185)))
(assert (axiom_frac_bound 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1563))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1563 (x1225 x1260) x558 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1563)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1563 (x1225 x1354) x278 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1563)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1563 x1036 x1257 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1563)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1563 x1078 x1563 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1563)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1563 x1113 x1960 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1563)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1563 x116 x1587 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1563)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1563 x117 x1735 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1563)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1563 x12 x1185 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1563)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1563 x1248 x1338 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1563)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1563 x1536 x1925 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1563)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1563 x1749 x70 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1563)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1563 x1881 x70 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1563)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1563 x1886 x1102 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1563)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1563 x1920 x250 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1563)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1563 x1925 x1536 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1563)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1563 x1960 x1111 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1563)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1563 x1960 x1575 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1563)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1563 x1960 x309 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1563)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1563 x1994 x468 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1563)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1563 x250 x1920 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1563)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1563 x286 x70 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1563)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1563 x290 x735 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1563)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1563 x309 x1960 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1563)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1563 x318 (x1225 x1394) (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1563)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1563 x340 x58 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1563)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1563 x344 x180 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1563)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1563 x468 x1994 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1563)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1563 x70 x1749 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1563)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1563 x70 x286 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1563)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1563 x70 x837 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1563)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1563 x837 x70 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1563)))
(assert (axiom_frac_bound 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1587))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1587 (x1225 x1260) x558 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1587)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1587 (x1225 x1354) x278 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1587)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1587 x1036 x1257 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1587)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1587 x1078 x1563 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1587)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1587 x1113 x1960 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1587)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1587 x116 x1587 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1587)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1587 x117 x1735 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1587)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1587 x12 x1185 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1587)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1587 x1248 x1338 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1587)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1587 x1536 x1925 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1587)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1587 x1749 x70 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1587)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1587 x1881 x70 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1587)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1587 x1886 x1102 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1587)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1587 x1920 x250 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1587)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1587 x1925 x1536 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1587)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1587 x1960 x1111 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1587)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1587 x1960 x1575 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1587)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1587 x1960 x309 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1587)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1587 x1994 x468 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1587)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1587 x250 x1920 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1587)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1587 x286 x70 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1587)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1587 x290 x735 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1587)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1587 x309 x1960 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1587)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1587 x318 (x1225 x1394) (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1587)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1587 x340 x58 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1587)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1587 x344 x180 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1587)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1587 x468 x1994 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1587)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1587 x70 x1749 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1587)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1587 x70 x286 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1587)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1587 x70 x837 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1587)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1587 x837 x70 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1587)))
(assert (axiom_frac_bound 115792089237316195423570985008687907853269984665640564039457584007913129639935 x344))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x344 (x1225 x1260) x558 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x344)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x344 (x1225 x1354) x278 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x344)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x344 x1036 x1257 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x344)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x344 x1078 x1563 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x344)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x344 x1113 x1960 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x344)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x344 x116 x1587 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x344)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x344 x117 x1735 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x344)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x344 x12 x1185 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x344)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x344 x1248 x1338 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x344)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x344 x1536 x1925 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x344)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x344 x1749 x70 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x344)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x344 x1881 x70 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x344)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x344 x1886 x1102 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x344)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x344 x1920 x250 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x344)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x344 x1925 x1536 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x344)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x344 x1960 x1111 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x344)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x344 x1960 x1575 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x344)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x344 x1960 x309 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x344)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x344 x1994 x468 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x344)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x344 x250 x1920 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x344)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x344 x286 x70 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x344)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x344 x290 x735 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x344)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x344 x309 x1960 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x344)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x344 x318 (x1225 x1394) (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x344)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x344 x340 x58 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x344)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x344 x344 x180 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x344)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x344 x468 x1994 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x344)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x344 x70 x1749 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x344)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x344 x70 x286 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x344)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x344 x70 x837 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x344)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x344 x837 x70 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x344)))
(assert (axiom_frac_bound 115792089237316195423570985008687907853269984665640564039457584007913129639935 x58))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x58 (x1225 x1260) x558 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x58)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x58 (x1225 x1354) x278 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x58)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x58 x1036 x1257 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x58)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x58 x1078 x1563 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x58)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x58 x1113 x1960 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x58)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x58 x116 x1587 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x58)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x58 x117 x1735 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x58)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x58 x12 x1185 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x58)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x58 x1248 x1338 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x58)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x58 x1536 x1925 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x58)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x58 x1749 x70 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x58)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x58 x1881 x70 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x58)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x58 x1886 x1102 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x58)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x58 x1920 x250 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x58)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x58 x1925 x1536 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x58)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x58 x1960 x1111 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x58)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x58 x1960 x1575 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x58)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x58 x1960 x309 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x58)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x58 x1994 x468 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x58)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x58 x250 x1920 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x58)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x58 x286 x70 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x58)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x58 x290 x735 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x58)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x58 x309 x1960 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x58)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x58 x318 (x1225 x1394) (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x58)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x58 x340 x58 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x58)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x58 x344 x180 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x58)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x58 x468 x1994 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x58)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x58 x70 x1749 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x58)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x58 x70 x286 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x58)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x58 x70 x837 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x58)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x58 x837 x70 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x58)))
(assert (axiom_frac_bound x1179 x1712))
(assert (axiom_frac_zero x1179 x1712 (x1225 x1260) x558 (uninterp_frac x1179 x1712)))
(assert (axiom_frac_zero x1179 x1712 (x1225 x1354) x278 (uninterp_frac x1179 x1712)))
(assert (axiom_frac_zero x1179 x1712 x1036 x1257 (uninterp_frac x1179 x1712)))
(assert (axiom_frac_zero x1179 x1712 x1078 x1563 (uninterp_frac x1179 x1712)))
(assert (axiom_frac_zero x1179 x1712 x1113 x1960 (uninterp_frac x1179 x1712)))
(assert (axiom_frac_zero x1179 x1712 x116 x1587 (uninterp_frac x1179 x1712)))
(assert (axiom_frac_zero x1179 x1712 x117 x1735 (uninterp_frac x1179 x1712)))
(assert (axiom_frac_zero x1179 x1712 x12 x1185 (uninterp_frac x1179 x1712)))
(assert (axiom_frac_zero x1179 x1712 x1248 x1338 (uninterp_frac x1179 x1712)))
(assert (axiom_frac_zero x1179 x1712 x1536 x1925 (uninterp_frac x1179 x1712)))
(assert (axiom_frac_zero x1179 x1712 x1749 x70 (uninterp_frac x1179 x1712)))
(assert (axiom_frac_zero x1179 x1712 x1881 x70 (uninterp_frac x1179 x1712)))
(assert (axiom_frac_zero x1179 x1712 x1886 x1102 (uninterp_frac x1179 x1712)))
(assert (axiom_frac_zero x1179 x1712 x1920 x250 (uninterp_frac x1179 x1712)))
(assert (axiom_frac_zero x1179 x1712 x1925 x1536 (uninterp_frac x1179 x1712)))
(assert (axiom_frac_zero x1179 x1712 x1960 x1111 (uninterp_frac x1179 x1712)))
(assert (axiom_frac_zero x1179 x1712 x1960 x1575 (uninterp_frac x1179 x1712)))
(assert (axiom_frac_zero x1179 x1712 x1960 x309 (uninterp_frac x1179 x1712)))
(assert (axiom_frac_zero x1179 x1712 x1994 x468 (uninterp_frac x1179 x1712)))
(assert (axiom_frac_zero x1179 x1712 x250 x1920 (uninterp_frac x1179 x1712)))
(assert (axiom_frac_zero x1179 x1712 x286 x70 (uninterp_frac x1179 x1712)))
(assert (axiom_frac_zero x1179 x1712 x290 x735 (uninterp_frac x1179 x1712)))
(assert (axiom_frac_zero x1179 x1712 x309 x1960 (uninterp_frac x1179 x1712)))
(assert (axiom_frac_zero x1179 x1712 x318 (x1225 x1394) (uninterp_frac x1179 x1712)))
(assert (axiom_frac_zero x1179 x1712 x340 x58 (uninterp_frac x1179 x1712)))
(assert (axiom_frac_zero x1179 x1712 x344 x180 (uninterp_frac x1179 x1712)))
(assert (axiom_frac_zero x1179 x1712 x468 x1994 (uninterp_frac x1179 x1712)))
(assert (axiom_frac_zero x1179 x1712 x70 x1749 (uninterp_frac x1179 x1712)))
(assert (axiom_frac_zero x1179 x1712 x70 x286 (uninterp_frac x1179 x1712)))
(assert (axiom_frac_zero x1179 x1712 x70 x837 (uninterp_frac x1179 x1712)))
(assert (axiom_frac_zero x1179 x1712 x837 x70 (uninterp_frac x1179 x1712)))
(assert (axiom_frac_bound x1531 2))
(assert (axiom_frac_zero x1531 2 (x1225 x1260) x558 (uninterp_frac x1531 2)))
(assert (axiom_frac_zero x1531 2 (x1225 x1354) x278 (uninterp_frac x1531 2)))
(assert (axiom_frac_zero x1531 2 x1036 x1257 (uninterp_frac x1531 2)))
(assert (axiom_frac_zero x1531 2 x1078 x1563 (uninterp_frac x1531 2)))
(assert (axiom_frac_zero x1531 2 x1113 x1960 (uninterp_frac x1531 2)))
(assert (axiom_frac_zero x1531 2 x116 x1587 (uninterp_frac x1531 2)))
(assert (axiom_frac_zero x1531 2 x117 x1735 (uninterp_frac x1531 2)))
(assert (axiom_frac_zero x1531 2 x12 x1185 (uninterp_frac x1531 2)))
(assert (axiom_frac_zero x1531 2 x1248 x1338 (uninterp_frac x1531 2)))
(assert (axiom_frac_zero x1531 2 x1536 x1925 (uninterp_frac x1531 2)))
(assert (axiom_frac_zero x1531 2 x1749 x70 (uninterp_frac x1531 2)))
(assert (axiom_frac_zero x1531 2 x1881 x70 (uninterp_frac x1531 2)))
(assert (axiom_frac_zero x1531 2 x1886 x1102 (uninterp_frac x1531 2)))
(assert (axiom_frac_zero x1531 2 x1920 x250 (uninterp_frac x1531 2)))
(assert (axiom_frac_zero x1531 2 x1925 x1536 (uninterp_frac x1531 2)))
(assert (axiom_frac_zero x1531 2 x1960 x1111 (uninterp_frac x1531 2)))
(assert (axiom_frac_zero x1531 2 x1960 x1575 (uninterp_frac x1531 2)))
(assert (axiom_frac_zero x1531 2 x1960 x309 (uninterp_frac x1531 2)))
(assert (axiom_frac_zero x1531 2 x1994 x468 (uninterp_frac x1531 2)))
(assert (axiom_frac_zero x1531 2 x250 x1920 (uninterp_frac x1531 2)))
(assert (axiom_frac_zero x1531 2 x286 x70 (uninterp_frac x1531 2)))
(assert (axiom_frac_zero x1531 2 x290 x735 (uninterp_frac x1531 2)))
(assert (axiom_frac_zero x1531 2 x309 x1960 (uninterp_frac x1531 2)))
(assert (axiom_frac_zero x1531 2 x318 (x1225 x1394) (uninterp_frac x1531 2)))
(assert (axiom_frac_zero x1531 2 x340 x58 (uninterp_frac x1531 2)))
(assert (axiom_frac_zero x1531 2 x344 x180 (uninterp_frac x1531 2)))
(assert (axiom_frac_zero x1531 2 x468 x1994 (uninterp_frac x1531 2)))
(assert (axiom_frac_zero x1531 2 x70 x1749 (uninterp_frac x1531 2)))
(assert (axiom_frac_zero x1531 2 x70 x286 (uninterp_frac x1531 2)))
(assert (axiom_frac_zero x1531 2 x70 x837 (uninterp_frac x1531 2)))
(assert (axiom_frac_zero x1531 2 x837 x70 (uninterp_frac x1531 2)))
(assert (axiom_frac_bound x155 1461501637330902918203684832716283019655932542976))
(assert (axiom_frac_zero x155 1461501637330902918203684832716283019655932542976 (x1225 x1260) x558 (uninterp_frac x155 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x155 1461501637330902918203684832716283019655932542976 (x1225 x1354) x278 (uninterp_frac x155 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x155 1461501637330902918203684832716283019655932542976 x1036 x1257 (uninterp_frac x155 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x155 1461501637330902918203684832716283019655932542976 x1078 x1563 (uninterp_frac x155 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x155 1461501637330902918203684832716283019655932542976 x1113 x1960 (uninterp_frac x155 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x155 1461501637330902918203684832716283019655932542976 x116 x1587 (uninterp_frac x155 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x155 1461501637330902918203684832716283019655932542976 x117 x1735 (uninterp_frac x155 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x155 1461501637330902918203684832716283019655932542976 x12 x1185 (uninterp_frac x155 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x155 1461501637330902918203684832716283019655932542976 x1248 x1338 (uninterp_frac x155 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x155 1461501637330902918203684832716283019655932542976 x1536 x1925 (uninterp_frac x155 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x155 1461501637330902918203684832716283019655932542976 x1749 x70 (uninterp_frac x155 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x155 1461501637330902918203684832716283019655932542976 x1881 x70 (uninterp_frac x155 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x155 1461501637330902918203684832716283019655932542976 x1886 x1102 (uninterp_frac x155 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x155 1461501637330902918203684832716283019655932542976 x1920 x250 (uninterp_frac x155 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x155 1461501637330902918203684832716283019655932542976 x1925 x1536 (uninterp_frac x155 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x155 1461501637330902918203684832716283019655932542976 x1960 x1111 (uninterp_frac x155 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x155 1461501637330902918203684832716283019655932542976 x1960 x1575 (uninterp_frac x155 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x155 1461501637330902918203684832716283019655932542976 x1960 x309 (uninterp_frac x155 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x155 1461501637330902918203684832716283019655932542976 x1994 x468 (uninterp_frac x155 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x155 1461501637330902918203684832716283019655932542976 x250 x1920 (uninterp_frac x155 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x155 1461501637330902918203684832716283019655932542976 x286 x70 (uninterp_frac x155 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x155 1461501637330902918203684832716283019655932542976 x290 x735 (uninterp_frac x155 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x155 1461501637330902918203684832716283019655932542976 x309 x1960 (uninterp_frac x155 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x155 1461501637330902918203684832716283019655932542976 x318 (x1225 x1394) (uninterp_frac x155 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x155 1461501637330902918203684832716283019655932542976 x340 x58 (uninterp_frac x155 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x155 1461501637330902918203684832716283019655932542976 x344 x180 (uninterp_frac x155 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x155 1461501637330902918203684832716283019655932542976 x468 x1994 (uninterp_frac x155 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x155 1461501637330902918203684832716283019655932542976 x70 x1749 (uninterp_frac x155 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x155 1461501637330902918203684832716283019655932542976 x70 x286 (uninterp_frac x155 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x155 1461501637330902918203684832716283019655932542976 x70 x837 (uninterp_frac x155 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x155 1461501637330902918203684832716283019655932542976 x837 x70 (uninterp_frac x155 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_bound x155 6277101735386680763835789423207666416102355444464034512896))
(assert (axiom_frac_zero x155 6277101735386680763835789423207666416102355444464034512896 (x1225 x1260) x558 (uninterp_frac x155 6277101735386680763835789423207666416102355444464034512896)))
(assert (axiom_frac_zero x155 6277101735386680763835789423207666416102355444464034512896 (x1225 x1354) x278 (uninterp_frac x155 6277101735386680763835789423207666416102355444464034512896)))
(assert (axiom_frac_zero x155 6277101735386680763835789423207666416102355444464034512896 x1036 x1257 (uninterp_frac x155 6277101735386680763835789423207666416102355444464034512896)))
(assert (axiom_frac_zero x155 6277101735386680763835789423207666416102355444464034512896 x1078 x1563 (uninterp_frac x155 6277101735386680763835789423207666416102355444464034512896)))
(assert (axiom_frac_zero x155 6277101735386680763835789423207666416102355444464034512896 x1113 x1960 (uninterp_frac x155 6277101735386680763835789423207666416102355444464034512896)))
(assert (axiom_frac_zero x155 6277101735386680763835789423207666416102355444464034512896 x116 x1587 (uninterp_frac x155 6277101735386680763835789423207666416102355444464034512896)))
(assert (axiom_frac_zero x155 6277101735386680763835789423207666416102355444464034512896 x117 x1735 (uninterp_frac x155 6277101735386680763835789423207666416102355444464034512896)))
(assert (axiom_frac_zero x155 6277101735386680763835789423207666416102355444464034512896 x12 x1185 (uninterp_frac x155 6277101735386680763835789423207666416102355444464034512896)))
(assert (axiom_frac_zero x155 6277101735386680763835789423207666416102355444464034512896 x1248 x1338 (uninterp_frac x155 6277101735386680763835789423207666416102355444464034512896)))
(assert (axiom_frac_zero x155 6277101735386680763835789423207666416102355444464034512896 x1536 x1925 (uninterp_frac x155 6277101735386680763835789423207666416102355444464034512896)))
(assert (axiom_frac_zero x155 6277101735386680763835789423207666416102355444464034512896 x1749 x70 (uninterp_frac x155 6277101735386680763835789423207666416102355444464034512896)))
(assert (axiom_frac_zero x155 6277101735386680763835789423207666416102355444464034512896 x1881 x70 (uninterp_frac x155 6277101735386680763835789423207666416102355444464034512896)))
(assert (axiom_frac_zero x155 6277101735386680763835789423207666416102355444464034512896 x1886 x1102 (uninterp_frac x155 6277101735386680763835789423207666416102355444464034512896)))
(assert (axiom_frac_zero x155 6277101735386680763835789423207666416102355444464034512896 x1920 x250 (uninterp_frac x155 6277101735386680763835789423207666416102355444464034512896)))
(assert (axiom_frac_zero x155 6277101735386680763835789423207666416102355444464034512896 x1925 x1536 (uninterp_frac x155 6277101735386680763835789423207666416102355444464034512896)))
(assert (axiom_frac_zero x155 6277101735386680763835789423207666416102355444464034512896 x1960 x1111 (uninterp_frac x155 6277101735386680763835789423207666416102355444464034512896)))
(assert (axiom_frac_zero x155 6277101735386680763835789423207666416102355444464034512896 x1960 x1575 (uninterp_frac x155 6277101735386680763835789423207666416102355444464034512896)))
(assert (axiom_frac_zero x155 6277101735386680763835789423207666416102355444464034512896 x1960 x309 (uninterp_frac x155 6277101735386680763835789423207666416102355444464034512896)))
(assert (axiom_frac_zero x155 6277101735386680763835789423207666416102355444464034512896 x1994 x468 (uninterp_frac x155 6277101735386680763835789423207666416102355444464034512896)))
(assert (axiom_frac_zero x155 6277101735386680763835789423207666416102355444464034512896 x250 x1920 (uninterp_frac x155 6277101735386680763835789423207666416102355444464034512896)))
(assert (axiom_frac_zero x155 6277101735386680763835789423207666416102355444464034512896 x286 x70 (uninterp_frac x155 6277101735386680763835789423207666416102355444464034512896)))
(assert (axiom_frac_zero x155 6277101735386680763835789423207666416102355444464034512896 x290 x735 (uninterp_frac x155 6277101735386680763835789423207666416102355444464034512896)))
(assert (axiom_frac_zero x155 6277101735386680763835789423207666416102355444464034512896 x309 x1960 (uninterp_frac x155 6277101735386680763835789423207666416102355444464034512896)))
(assert (axiom_frac_zero x155 6277101735386680763835789423207666416102355444464034512896 x318 (x1225 x1394) (uninterp_frac x155 6277101735386680763835789423207666416102355444464034512896)))
(assert (axiom_frac_zero x155 6277101735386680763835789423207666416102355444464034512896 x340 x58 (uninterp_frac x155 6277101735386680763835789423207666416102355444464034512896)))
(assert (axiom_frac_zero x155 6277101735386680763835789423207666416102355444464034512896 x344 x180 (uninterp_frac x155 6277101735386680763835789423207666416102355444464034512896)))
(assert (axiom_frac_zero x155 6277101735386680763835789423207666416102355444464034512896 x468 x1994 (uninterp_frac x155 6277101735386680763835789423207666416102355444464034512896)))
(assert (axiom_frac_zero x155 6277101735386680763835789423207666416102355444464034512896 x70 x1749 (uninterp_frac x155 6277101735386680763835789423207666416102355444464034512896)))
(assert (axiom_frac_zero x155 6277101735386680763835789423207666416102355444464034512896 x70 x286 (uninterp_frac x155 6277101735386680763835789423207666416102355444464034512896)))
(assert (axiom_frac_zero x155 6277101735386680763835789423207666416102355444464034512896 x70 x837 (uninterp_frac x155 6277101735386680763835789423207666416102355444464034512896)))
(assert (axiom_frac_zero x155 6277101735386680763835789423207666416102355444464034512896 x837 x70 (uninterp_frac x155 6277101735386680763835789423207666416102355444464034512896)))
(assert (axiom_frac_bound x155 95780971304118053647396689196894323976171195136475136))
(assert (axiom_frac_zero x155 95780971304118053647396689196894323976171195136475136 (x1225 x1260) x558 (uninterp_frac x155 95780971304118053647396689196894323976171195136475136)))
(assert (axiom_frac_zero x155 95780971304118053647396689196894323976171195136475136 (x1225 x1354) x278 (uninterp_frac x155 95780971304118053647396689196894323976171195136475136)))
(assert (axiom_frac_zero x155 95780971304118053647396689196894323976171195136475136 x1036 x1257 (uninterp_frac x155 95780971304118053647396689196894323976171195136475136)))
(assert (axiom_frac_zero x155 95780971304118053647396689196894323976171195136475136 x1078 x1563 (uninterp_frac x155 95780971304118053647396689196894323976171195136475136)))
(assert (axiom_frac_zero x155 95780971304118053647396689196894323976171195136475136 x1113 x1960 (uninterp_frac x155 95780971304118053647396689196894323976171195136475136)))
(assert (axiom_frac_zero x155 95780971304118053647396689196894323976171195136475136 x116 x1587 (uninterp_frac x155 95780971304118053647396689196894323976171195136475136)))
(assert (axiom_frac_zero x155 95780971304118053647396689196894323976171195136475136 x117 x1735 (uninterp_frac x155 95780971304118053647396689196894323976171195136475136)))
(assert (axiom_frac_zero x155 95780971304118053647396689196894323976171195136475136 x12 x1185 (uninterp_frac x155 95780971304118053647396689196894323976171195136475136)))
(assert (axiom_frac_zero x155 95780971304118053647396689196894323976171195136475136 x1248 x1338 (uninterp_frac x155 95780971304118053647396689196894323976171195136475136)))
(assert (axiom_frac_zero x155 95780971304118053647396689196894323976171195136475136 x1536 x1925 (uninterp_frac x155 95780971304118053647396689196894323976171195136475136)))
(assert (axiom_frac_zero x155 95780971304118053647396689196894323976171195136475136 x1749 x70 (uninterp_frac x155 95780971304118053647396689196894323976171195136475136)))
(assert (axiom_frac_zero x155 95780971304118053647396689196894323976171195136475136 x1881 x70 (uninterp_frac x155 95780971304118053647396689196894323976171195136475136)))
(assert (axiom_frac_zero x155 95780971304118053647396689196894323976171195136475136 x1886 x1102 (uninterp_frac x155 95780971304118053647396689196894323976171195136475136)))
(assert (axiom_frac_zero x155 95780971304118053647396689196894323976171195136475136 x1920 x250 (uninterp_frac x155 95780971304118053647396689196894323976171195136475136)))
(assert (axiom_frac_zero x155 95780971304118053647396689196894323976171195136475136 x1925 x1536 (uninterp_frac x155 95780971304118053647396689196894323976171195136475136)))
(assert (axiom_frac_zero x155 95780971304118053647396689196894323976171195136475136 x1960 x1111 (uninterp_frac x155 95780971304118053647396689196894323976171195136475136)))
(assert (axiom_frac_zero x155 95780971304118053647396689196894323976171195136475136 x1960 x1575 (uninterp_frac x155 95780971304118053647396689196894323976171195136475136)))
(assert (axiom_frac_zero x155 95780971304118053647396689196894323976171195136475136 x1960 x309 (uninterp_frac x155 95780971304118053647396689196894323976171195136475136)))
(assert (axiom_frac_zero x155 95780971304118053647396689196894323976171195136475136 x1994 x468 (uninterp_frac x155 95780971304118053647396689196894323976171195136475136)))
(assert (axiom_frac_zero x155 95780971304118053647396689196894323976171195136475136 x250 x1920 (uninterp_frac x155 95780971304118053647396689196894323976171195136475136)))
(assert (axiom_frac_zero x155 95780971304118053647396689196894323976171195136475136 x286 x70 (uninterp_frac x155 95780971304118053647396689196894323976171195136475136)))
(assert (axiom_frac_zero x155 95780971304118053647396689196894323976171195136475136 x290 x735 (uninterp_frac x155 95780971304118053647396689196894323976171195136475136)))
(assert (axiom_frac_zero x155 95780971304118053647396689196894323976171195136475136 x309 x1960 (uninterp_frac x155 95780971304118053647396689196894323976171195136475136)))
(assert (axiom_frac_zero x155 95780971304118053647396689196894323976171195136475136 x318 (x1225 x1394) (uninterp_frac x155 95780971304118053647396689196894323976171195136475136)))
(assert (axiom_frac_zero x155 95780971304118053647396689196894323976171195136475136 x340 x58 (uninterp_frac x155 95780971304118053647396689196894323976171195136475136)))
(assert (axiom_frac_zero x155 95780971304118053647396689196894323976171195136475136 x344 x180 (uninterp_frac x155 95780971304118053647396689196894323976171195136475136)))
(assert (axiom_frac_zero x155 95780971304118053647396689196894323976171195136475136 x468 x1994 (uninterp_frac x155 95780971304118053647396689196894323976171195136475136)))
(assert (axiom_frac_zero x155 95780971304118053647396689196894323976171195136475136 x70 x1749 (uninterp_frac x155 95780971304118053647396689196894323976171195136475136)))
(assert (axiom_frac_zero x155 95780971304118053647396689196894323976171195136475136 x70 x286 (uninterp_frac x155 95780971304118053647396689196894323976171195136475136)))
(assert (axiom_frac_zero x155 95780971304118053647396689196894323976171195136475136 x70 x837 (uninterp_frac x155 95780971304118053647396689196894323976171195136475136)))
(assert (axiom_frac_zero x155 95780971304118053647396689196894323976171195136475136 x837 x70 (uninterp_frac x155 95780971304118053647396689196894323976171195136475136)))
(assert (axiom_frac_bound x176 x1423))
(assert (axiom_frac_zero x176 x1423 (x1225 x1260) x558 (uninterp_frac x176 x1423)))
(assert (axiom_frac_zero x176 x1423 (x1225 x1354) x278 (uninterp_frac x176 x1423)))
(assert (axiom_frac_zero x176 x1423 x1036 x1257 (uninterp_frac x176 x1423)))
(assert (axiom_frac_zero x176 x1423 x1078 x1563 (uninterp_frac x176 x1423)))
(assert (axiom_frac_zero x176 x1423 x1113 x1960 (uninterp_frac x176 x1423)))
(assert (axiom_frac_zero x176 x1423 x116 x1587 (uninterp_frac x176 x1423)))
(assert (axiom_frac_zero x176 x1423 x117 x1735 (uninterp_frac x176 x1423)))
(assert (axiom_frac_zero x176 x1423 x12 x1185 (uninterp_frac x176 x1423)))
(assert (axiom_frac_zero x176 x1423 x1248 x1338 (uninterp_frac x176 x1423)))
(assert (axiom_frac_zero x176 x1423 x1536 x1925 (uninterp_frac x176 x1423)))
(assert (axiom_frac_zero x176 x1423 x1749 x70 (uninterp_frac x176 x1423)))
(assert (axiom_frac_zero x176 x1423 x1881 x70 (uninterp_frac x176 x1423)))
(assert (axiom_frac_zero x176 x1423 x1886 x1102 (uninterp_frac x176 x1423)))
(assert (axiom_frac_zero x176 x1423 x1920 x250 (uninterp_frac x176 x1423)))
(assert (axiom_frac_zero x176 x1423 x1925 x1536 (uninterp_frac x176 x1423)))
(assert (axiom_frac_zero x176 x1423 x1960 x1111 (uninterp_frac x176 x1423)))
(assert (axiom_frac_zero x176 x1423 x1960 x1575 (uninterp_frac x176 x1423)))
(assert (axiom_frac_zero x176 x1423 x1960 x309 (uninterp_frac x176 x1423)))
(assert (axiom_frac_zero x176 x1423 x1994 x468 (uninterp_frac x176 x1423)))
(assert (axiom_frac_zero x176 x1423 x250 x1920 (uninterp_frac x176 x1423)))
(assert (axiom_frac_zero x176 x1423 x286 x70 (uninterp_frac x176 x1423)))
(assert (axiom_frac_zero x176 x1423 x290 x735 (uninterp_frac x176 x1423)))
(assert (axiom_frac_zero x176 x1423 x309 x1960 (uninterp_frac x176 x1423)))
(assert (axiom_frac_zero x176 x1423 x318 (x1225 x1394) (uninterp_frac x176 x1423)))
(assert (axiom_frac_zero x176 x1423 x340 x58 (uninterp_frac x176 x1423)))
(assert (axiom_frac_zero x176 x1423 x344 x180 (uninterp_frac x176 x1423)))
(assert (axiom_frac_zero x176 x1423 x468 x1994 (uninterp_frac x176 x1423)))
(assert (axiom_frac_zero x176 x1423 x70 x1749 (uninterp_frac x176 x1423)))
(assert (axiom_frac_zero x176 x1423 x70 x286 (uninterp_frac x176 x1423)))
(assert (axiom_frac_zero x176 x1423 x70 x837 (uninterp_frac x176 x1423)))
(assert (axiom_frac_zero x176 x1423 x837 x70 (uninterp_frac x176 x1423)))
(assert (axiom_frac_bound x320 2))
(assert (axiom_frac_zero x320 2 (x1225 x1260) x558 (uninterp_frac x320 2)))
(assert (axiom_frac_zero x320 2 (x1225 x1354) x278 (uninterp_frac x320 2)))
(assert (axiom_frac_zero x320 2 x1036 x1257 (uninterp_frac x320 2)))
(assert (axiom_frac_zero x320 2 x1078 x1563 (uninterp_frac x320 2)))
(assert (axiom_frac_zero x320 2 x1113 x1960 (uninterp_frac x320 2)))
(assert (axiom_frac_zero x320 2 x116 x1587 (uninterp_frac x320 2)))
(assert (axiom_frac_zero x320 2 x117 x1735 (uninterp_frac x320 2)))
(assert (axiom_frac_zero x320 2 x12 x1185 (uninterp_frac x320 2)))
(assert (axiom_frac_zero x320 2 x1248 x1338 (uninterp_frac x320 2)))
(assert (axiom_frac_zero x320 2 x1536 x1925 (uninterp_frac x320 2)))
(assert (axiom_frac_zero x320 2 x1749 x70 (uninterp_frac x320 2)))
(assert (axiom_frac_zero x320 2 x1881 x70 (uninterp_frac x320 2)))
(assert (axiom_frac_zero x320 2 x1886 x1102 (uninterp_frac x320 2)))
(assert (axiom_frac_zero x320 2 x1920 x250 (uninterp_frac x320 2)))
(assert (axiom_frac_zero x320 2 x1925 x1536 (uninterp_frac x320 2)))
(assert (axiom_frac_zero x320 2 x1960 x1111 (uninterp_frac x320 2)))
(assert (axiom_frac_zero x320 2 x1960 x1575 (uninterp_frac x320 2)))
(assert (axiom_frac_zero x320 2 x1960 x309 (uninterp_frac x320 2)))
(assert (axiom_frac_zero x320 2 x1994 x468 (uninterp_frac x320 2)))
(assert (axiom_frac_zero x320 2 x250 x1920 (uninterp_frac x320 2)))
(assert (axiom_frac_zero x320 2 x286 x70 (uninterp_frac x320 2)))
(assert (axiom_frac_zero x320 2 x290 x735 (uninterp_frac x320 2)))
(assert (axiom_frac_zero x320 2 x309 x1960 (uninterp_frac x320 2)))
(assert (axiom_frac_zero x320 2 x318 (x1225 x1394) (uninterp_frac x320 2)))
(assert (axiom_frac_zero x320 2 x340 x58 (uninterp_frac x320 2)))
(assert (axiom_frac_zero x320 2 x344 x180 (uninterp_frac x320 2)))
(assert (axiom_frac_zero x320 2 x468 x1994 (uninterp_frac x320 2)))
(assert (axiom_frac_zero x320 2 x70 x1749 (uninterp_frac x320 2)))
(assert (axiom_frac_zero x320 2 x70 x286 (uninterp_frac x320 2)))
(assert (axiom_frac_zero x320 2 x70 x837 (uninterp_frac x320 2)))
(assert (axiom_frac_zero x320 2 x837 x70 (uninterp_frac x320 2)))
(assert (axiom_frac_bound x679 2))
(assert (axiom_frac_zero x679 2 (x1225 x1260) x558 (uninterp_frac x679 2)))
(assert (axiom_frac_zero x679 2 (x1225 x1354) x278 (uninterp_frac x679 2)))
(assert (axiom_frac_zero x679 2 x1036 x1257 (uninterp_frac x679 2)))
(assert (axiom_frac_zero x679 2 x1078 x1563 (uninterp_frac x679 2)))
(assert (axiom_frac_zero x679 2 x1113 x1960 (uninterp_frac x679 2)))
(assert (axiom_frac_zero x679 2 x116 x1587 (uninterp_frac x679 2)))
(assert (axiom_frac_zero x679 2 x117 x1735 (uninterp_frac x679 2)))
(assert (axiom_frac_zero x679 2 x12 x1185 (uninterp_frac x679 2)))
(assert (axiom_frac_zero x679 2 x1248 x1338 (uninterp_frac x679 2)))
(assert (axiom_frac_zero x679 2 x1536 x1925 (uninterp_frac x679 2)))
(assert (axiom_frac_zero x679 2 x1749 x70 (uninterp_frac x679 2)))
(assert (axiom_frac_zero x679 2 x1881 x70 (uninterp_frac x679 2)))
(assert (axiom_frac_zero x679 2 x1886 x1102 (uninterp_frac x679 2)))
(assert (axiom_frac_zero x679 2 x1920 x250 (uninterp_frac x679 2)))
(assert (axiom_frac_zero x679 2 x1925 x1536 (uninterp_frac x679 2)))
(assert (axiom_frac_zero x679 2 x1960 x1111 (uninterp_frac x679 2)))
(assert (axiom_frac_zero x679 2 x1960 x1575 (uninterp_frac x679 2)))
(assert (axiom_frac_zero x679 2 x1960 x309 (uninterp_frac x679 2)))
(assert (axiom_frac_zero x679 2 x1994 x468 (uninterp_frac x679 2)))
(assert (axiom_frac_zero x679 2 x250 x1920 (uninterp_frac x679 2)))
(assert (axiom_frac_zero x679 2 x286 x70 (uninterp_frac x679 2)))
(assert (axiom_frac_zero x679 2 x290 x735 (uninterp_frac x679 2)))
(assert (axiom_frac_zero x679 2 x309 x1960 (uninterp_frac x679 2)))
(assert (axiom_frac_zero x679 2 x318 (x1225 x1394) (uninterp_frac x679 2)))
(assert (axiom_frac_zero x679 2 x340 x58 (uninterp_frac x679 2)))
(assert (axiom_frac_zero x679 2 x344 x180 (uninterp_frac x679 2)))
(assert (axiom_frac_zero x679 2 x468 x1994 (uninterp_frac x679 2)))
(assert (axiom_frac_zero x679 2 x70 x1749 (uninterp_frac x679 2)))
(assert (axiom_frac_zero x679 2 x70 x286 (uninterp_frac x679 2)))
(assert (axiom_frac_zero x679 2 x70 x837 (uninterp_frac x679 2)))
(assert (axiom_frac_zero x679 2 x837 x70 (uninterp_frac x679 2)))
(assert (axiom_frac_bound x807 1461501637330902918203684832716283019655932542976))
(assert (axiom_frac_zero x807 1461501637330902918203684832716283019655932542976 (x1225 x1260) x558 (uninterp_frac x807 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x807 1461501637330902918203684832716283019655932542976 (x1225 x1354) x278 (uninterp_frac x807 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x807 1461501637330902918203684832716283019655932542976 x1036 x1257 (uninterp_frac x807 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x807 1461501637330902918203684832716283019655932542976 x1078 x1563 (uninterp_frac x807 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x807 1461501637330902918203684832716283019655932542976 x1113 x1960 (uninterp_frac x807 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x807 1461501637330902918203684832716283019655932542976 x116 x1587 (uninterp_frac x807 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x807 1461501637330902918203684832716283019655932542976 x117 x1735 (uninterp_frac x807 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x807 1461501637330902918203684832716283019655932542976 x12 x1185 (uninterp_frac x807 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x807 1461501637330902918203684832716283019655932542976 x1248 x1338 (uninterp_frac x807 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x807 1461501637330902918203684832716283019655932542976 x1536 x1925 (uninterp_frac x807 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x807 1461501637330902918203684832716283019655932542976 x1749 x70 (uninterp_frac x807 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x807 1461501637330902918203684832716283019655932542976 x1881 x70 (uninterp_frac x807 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x807 1461501637330902918203684832716283019655932542976 x1886 x1102 (uninterp_frac x807 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x807 1461501637330902918203684832716283019655932542976 x1920 x250 (uninterp_frac x807 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x807 1461501637330902918203684832716283019655932542976 x1925 x1536 (uninterp_frac x807 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x807 1461501637330902918203684832716283019655932542976 x1960 x1111 (uninterp_frac x807 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x807 1461501637330902918203684832716283019655932542976 x1960 x1575 (uninterp_frac x807 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x807 1461501637330902918203684832716283019655932542976 x1960 x309 (uninterp_frac x807 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x807 1461501637330902918203684832716283019655932542976 x1994 x468 (uninterp_frac x807 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x807 1461501637330902918203684832716283019655932542976 x250 x1920 (uninterp_frac x807 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x807 1461501637330902918203684832716283019655932542976 x286 x70 (uninterp_frac x807 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x807 1461501637330902918203684832716283019655932542976 x290 x735 (uninterp_frac x807 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x807 1461501637330902918203684832716283019655932542976 x309 x1960 (uninterp_frac x807 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x807 1461501637330902918203684832716283019655932542976 x318 (x1225 x1394) (uninterp_frac x807 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x807 1461501637330902918203684832716283019655932542976 x340 x58 (uninterp_frac x807 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x807 1461501637330902918203684832716283019655932542976 x344 x180 (uninterp_frac x807 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x807 1461501637330902918203684832716283019655932542976 x468 x1994 (uninterp_frac x807 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x807 1461501637330902918203684832716283019655932542976 x70 x1749 (uninterp_frac x807 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x807 1461501637330902918203684832716283019655932542976 x70 x286 (uninterp_frac x807 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x807 1461501637330902918203684832716283019655932542976 x70 x837 (uninterp_frac x807 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x807 1461501637330902918203684832716283019655932542976 x837 x70 (uninterp_frac x807 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_bound x807 374144419156711147060143317175368453031918731001856))
(assert (axiom_frac_zero x807 374144419156711147060143317175368453031918731001856 (x1225 x1260) x558 (uninterp_frac x807 374144419156711147060143317175368453031918731001856)))
(assert (axiom_frac_zero x807 374144419156711147060143317175368453031918731001856 (x1225 x1354) x278 (uninterp_frac x807 374144419156711147060143317175368453031918731001856)))
(assert (axiom_frac_zero x807 374144419156711147060143317175368453031918731001856 x1036 x1257 (uninterp_frac x807 374144419156711147060143317175368453031918731001856)))
(assert (axiom_frac_zero x807 374144419156711147060143317175368453031918731001856 x1078 x1563 (uninterp_frac x807 374144419156711147060143317175368453031918731001856)))
(assert (axiom_frac_zero x807 374144419156711147060143317175368453031918731001856 x1113 x1960 (uninterp_frac x807 374144419156711147060143317175368453031918731001856)))
(assert (axiom_frac_zero x807 374144419156711147060143317175368453031918731001856 x116 x1587 (uninterp_frac x807 374144419156711147060143317175368453031918731001856)))
(assert (axiom_frac_zero x807 374144419156711147060143317175368453031918731001856 x117 x1735 (uninterp_frac x807 374144419156711147060143317175368453031918731001856)))
(assert (axiom_frac_zero x807 374144419156711147060143317175368453031918731001856 x12 x1185 (uninterp_frac x807 374144419156711147060143317175368453031918731001856)))
(assert (axiom_frac_zero x807 374144419156711147060143317175368453031918731001856 x1248 x1338 (uninterp_frac x807 374144419156711147060143317175368453031918731001856)))
(assert (axiom_frac_zero x807 374144419156711147060143317175368453031918731001856 x1536 x1925 (uninterp_frac x807 374144419156711147060143317175368453031918731001856)))
(assert (axiom_frac_zero x807 374144419156711147060143317175368453031918731001856 x1749 x70 (uninterp_frac x807 374144419156711147060143317175368453031918731001856)))
(assert (axiom_frac_zero x807 374144419156711147060143317175368453031918731001856 x1881 x70 (uninterp_frac x807 374144419156711147060143317175368453031918731001856)))
(assert (axiom_frac_zero x807 374144419156711147060143317175368453031918731001856 x1886 x1102 (uninterp_frac x807 374144419156711147060143317175368453031918731001856)))
(assert (axiom_frac_zero x807 374144419156711147060143317175368453031918731001856 x1920 x250 (uninterp_frac x807 374144419156711147060143317175368453031918731001856)))
(assert (axiom_frac_zero x807 374144419156711147060143317175368453031918731001856 x1925 x1536 (uninterp_frac x807 374144419156711147060143317175368453031918731001856)))
(assert (axiom_frac_zero x807 374144419156711147060143317175368453031918731001856 x1960 x1111 (uninterp_frac x807 374144419156711147060143317175368453031918731001856)))
(assert (axiom_frac_zero x807 374144419156711147060143317175368453031918731001856 x1960 x1575 (uninterp_frac x807 374144419156711147060143317175368453031918731001856)))
(assert (axiom_frac_zero x807 374144419156711147060143317175368453031918731001856 x1960 x309 (uninterp_frac x807 374144419156711147060143317175368453031918731001856)))
(assert (axiom_frac_zero x807 374144419156711147060143317175368453031918731001856 x1994 x468 (uninterp_frac x807 374144419156711147060143317175368453031918731001856)))
(assert (axiom_frac_zero x807 374144419156711147060143317175368453031918731001856 x250 x1920 (uninterp_frac x807 374144419156711147060143317175368453031918731001856)))
(assert (axiom_frac_zero x807 374144419156711147060143317175368453031918731001856 x286 x70 (uninterp_frac x807 374144419156711147060143317175368453031918731001856)))
(assert (axiom_frac_zero x807 374144419156711147060143317175368453031918731001856 x290 x735 (uninterp_frac x807 374144419156711147060143317175368453031918731001856)))
(assert (axiom_frac_zero x807 374144419156711147060143317175368453031918731001856 x309 x1960 (uninterp_frac x807 374144419156711147060143317175368453031918731001856)))
(assert (axiom_frac_zero x807 374144419156711147060143317175368453031918731001856 x318 (x1225 x1394) (uninterp_frac x807 374144419156711147060143317175368453031918731001856)))
(assert (axiom_frac_zero x807 374144419156711147060143317175368453031918731001856 x340 x58 (uninterp_frac x807 374144419156711147060143317175368453031918731001856)))
(assert (axiom_frac_zero x807 374144419156711147060143317175368453031918731001856 x344 x180 (uninterp_frac x807 374144419156711147060143317175368453031918731001856)))
(assert (axiom_frac_zero x807 374144419156711147060143317175368453031918731001856 x468 x1994 (uninterp_frac x807 374144419156711147060143317175368453031918731001856)))
(assert (axiom_frac_zero x807 374144419156711147060143317175368453031918731001856 x70 x1749 (uninterp_frac x807 374144419156711147060143317175368453031918731001856)))
(assert (axiom_frac_zero x807 374144419156711147060143317175368453031918731001856 x70 x286 (uninterp_frac x807 374144419156711147060143317175368453031918731001856)))
(assert (axiom_frac_zero x807 374144419156711147060143317175368453031918731001856 x70 x837 (uninterp_frac x807 374144419156711147060143317175368453031918731001856)))
(assert (axiom_frac_zero x807 374144419156711147060143317175368453031918731001856 x837 x70 (uninterp_frac x807 374144419156711147060143317175368453031918731001856)))
(assert (axiom_frac_bound x884 2))
(assert (axiom_frac_zero x884 2 (x1225 x1260) x558 (uninterp_frac x884 2)))
(assert (axiom_frac_zero x884 2 (x1225 x1354) x278 (uninterp_frac x884 2)))
(assert (axiom_frac_zero x884 2 x1036 x1257 (uninterp_frac x884 2)))
(assert (axiom_frac_zero x884 2 x1078 x1563 (uninterp_frac x884 2)))
(assert (axiom_frac_zero x884 2 x1113 x1960 (uninterp_frac x884 2)))
(assert (axiom_frac_zero x884 2 x116 x1587 (uninterp_frac x884 2)))
(assert (axiom_frac_zero x884 2 x117 x1735 (uninterp_frac x884 2)))
(assert (axiom_frac_zero x884 2 x12 x1185 (uninterp_frac x884 2)))
(assert (axiom_frac_zero x884 2 x1248 x1338 (uninterp_frac x884 2)))
(assert (axiom_frac_zero x884 2 x1536 x1925 (uninterp_frac x884 2)))
(assert (axiom_frac_zero x884 2 x1749 x70 (uninterp_frac x884 2)))
(assert (axiom_frac_zero x884 2 x1881 x70 (uninterp_frac x884 2)))
(assert (axiom_frac_zero x884 2 x1886 x1102 (uninterp_frac x884 2)))
(assert (axiom_frac_zero x884 2 x1920 x250 (uninterp_frac x884 2)))
(assert (axiom_frac_zero x884 2 x1925 x1536 (uninterp_frac x884 2)))
(assert (axiom_frac_zero x884 2 x1960 x1111 (uninterp_frac x884 2)))
(assert (axiom_frac_zero x884 2 x1960 x1575 (uninterp_frac x884 2)))
(assert (axiom_frac_zero x884 2 x1960 x309 (uninterp_frac x884 2)))
(assert (axiom_frac_zero x884 2 x1994 x468 (uninterp_frac x884 2)))
(assert (axiom_frac_zero x884 2 x250 x1920 (uninterp_frac x884 2)))
(assert (axiom_frac_zero x884 2 x286 x70 (uninterp_frac x884 2)))
(assert (axiom_frac_zero x884 2 x290 x735 (uninterp_frac x884 2)))
(assert (axiom_frac_zero x884 2 x309 x1960 (uninterp_frac x884 2)))
(assert (axiom_frac_zero x884 2 x318 (x1225 x1394) (uninterp_frac x884 2)))
(assert (axiom_frac_zero x884 2 x340 x58 (uninterp_frac x884 2)))
(assert (axiom_frac_zero x884 2 x344 x180 (uninterp_frac x884 2)))
(assert (axiom_frac_zero x884 2 x468 x1994 (uninterp_frac x884 2)))
(assert (axiom_frac_zero x884 2 x70 x1749 (uninterp_frac x884 2)))
(assert (axiom_frac_zero x884 2 x70 x286 (uninterp_frac x884 2)))
(assert (axiom_frac_zero x884 2 x70 x837 (uninterp_frac x884 2)))
(assert (axiom_frac_zero x884 2 x837 x70 (uninterp_frac x884 2)))
(assert (axiom_frac_bound x91 2))
(assert (axiom_frac_zero x91 2 (x1225 x1260) x558 (uninterp_frac x91 2)))
(assert (axiom_frac_zero x91 2 (x1225 x1354) x278 (uninterp_frac x91 2)))
(assert (axiom_frac_zero x91 2 x1036 x1257 (uninterp_frac x91 2)))
(assert (axiom_frac_zero x91 2 x1078 x1563 (uninterp_frac x91 2)))
(assert (axiom_frac_zero x91 2 x1113 x1960 (uninterp_frac x91 2)))
(assert (axiom_frac_zero x91 2 x116 x1587 (uninterp_frac x91 2)))
(assert (axiom_frac_zero x91 2 x117 x1735 (uninterp_frac x91 2)))
(assert (axiom_frac_zero x91 2 x12 x1185 (uninterp_frac x91 2)))
(assert (axiom_frac_zero x91 2 x1248 x1338 (uninterp_frac x91 2)))
(assert (axiom_frac_zero x91 2 x1536 x1925 (uninterp_frac x91 2)))
(assert (axiom_frac_zero x91 2 x1749 x70 (uninterp_frac x91 2)))
(assert (axiom_frac_zero x91 2 x1881 x70 (uninterp_frac x91 2)))
(assert (axiom_frac_zero x91 2 x1886 x1102 (uninterp_frac x91 2)))
(assert (axiom_frac_zero x91 2 x1920 x250 (uninterp_frac x91 2)))
(assert (axiom_frac_zero x91 2 x1925 x1536 (uninterp_frac x91 2)))
(assert (axiom_frac_zero x91 2 x1960 x1111 (uninterp_frac x91 2)))
(assert (axiom_frac_zero x91 2 x1960 x1575 (uninterp_frac x91 2)))
(assert (axiom_frac_zero x91 2 x1960 x309 (uninterp_frac x91 2)))
(assert (axiom_frac_zero x91 2 x1994 x468 (uninterp_frac x91 2)))
(assert (axiom_frac_zero x91 2 x250 x1920 (uninterp_frac x91 2)))
(assert (axiom_frac_zero x91 2 x286 x70 (uninterp_frac x91 2)))
(assert (axiom_frac_zero x91 2 x290 x735 (uninterp_frac x91 2)))
(assert (axiom_frac_zero x91 2 x309 x1960 (uninterp_frac x91 2)))
(assert (axiom_frac_zero x91 2 x318 (x1225 x1394) (uninterp_frac x91 2)))
(assert (axiom_frac_zero x91 2 x340 x58 (uninterp_frac x91 2)))
(assert (axiom_frac_zero x91 2 x344 x180 (uninterp_frac x91 2)))
(assert (axiom_frac_zero x91 2 x468 x1994 (uninterp_frac x91 2)))
(assert (axiom_frac_zero x91 2 x70 x1749 (uninterp_frac x91 2)))
(assert (axiom_frac_zero x91 2 x70 x286 (uninterp_frac x91 2)))
(assert (axiom_frac_zero x91 2 x70 x837 (uninterp_frac x91 2)))
(assert (axiom_frac_zero x91 2 x837 x70 (uninterp_frac x91 2)))
(assert (axiom_int_approximation x1))
(assert (axiom_int_approximation x10))
(assert (axiom_int_approximation x1000))
(assert (axiom_int_approximation x1002))
(assert (axiom_int_approximation x1003))
(assert (axiom_int_approximation x1004))
(assert (axiom_int_approximation x1005))
(assert (axiom_int_approximation x1007))
(assert (axiom_int_approximation x1009))
(assert (axiom_int_approximation x1010))
(assert (axiom_int_approximation x1011))
(assert (axiom_int_approximation x1012))
(assert (axiom_int_approximation x1013))
(assert (axiom_int_approximation x1014))
(assert (axiom_int_approximation x1016))
(assert (axiom_int_approximation x1017))
(assert (axiom_int_approximation x1018))
(assert (axiom_int_approximation x1020))
(assert (axiom_int_approximation x1023))
(assert (axiom_int_approximation x1026))
(assert (axiom_int_approximation x1028))
(assert (axiom_int_approximation x103))
(assert (axiom_int_approximation x1030))
(assert (axiom_int_approximation x1031))
(assert (axiom_int_approximation x1032))
(assert (axiom_int_approximation x1033))
(assert (axiom_int_approximation x1034))
(assert (axiom_int_approximation x1035))
(assert (axiom_int_approximation x1036))
(assert (axiom_int_approximation x1037))
(assert (axiom_int_approximation x1041))
(assert (axiom_int_approximation x1043))
(assert (axiom_int_approximation x1045))
(assert (axiom_int_approximation x1047))
(assert (axiom_int_approximation x1048))
(assert (axiom_int_approximation x1051))
(assert (axiom_int_approximation x1052))
(assert (axiom_int_approximation x1056))
(assert (axiom_int_approximation x1057))
(assert (axiom_int_approximation x1061))
(assert (axiom_int_approximation x1062))
(assert (axiom_int_approximation x1064))
(assert (axiom_int_approximation x1065))
(assert (axiom_int_approximation x1068))
(assert (axiom_int_approximation x1069))
(assert (axiom_int_approximation x107))
(assert (axiom_int_approximation x1072))
(assert (axiom_int_approximation x1073))
(assert (axiom_int_approximation x1076))
(assert (axiom_int_approximation x1077))
(assert (axiom_int_approximation x1078))
(assert (axiom_int_approximation x1080))
(assert (axiom_int_approximation x1082))
(assert (axiom_int_approximation x1083))
(assert (axiom_int_approximation x1084))
(assert (axiom_int_approximation x1085))
(assert (axiom_int_approximation x1086))
(assert (axiom_int_approximation x1089))
(assert (axiom_int_approximation x109))
(assert (axiom_int_approximation x1090))
(assert (axiom_int_approximation x1091))
(assert (axiom_int_approximation x1092))
(assert (axiom_int_approximation x1094))
(assert (axiom_int_approximation x1098))
(assert (axiom_int_approximation x11))
(assert (axiom_int_approximation x110))
(assert (axiom_int_approximation x1100))
(assert (axiom_int_approximation x1101))
(assert (axiom_int_approximation x1102))
(assert (axiom_int_approximation x1103))
(assert (axiom_int_approximation x1104))
(assert (axiom_int_approximation x1105))
(assert (axiom_int_approximation x1106))
(assert (axiom_int_approximation x1107))
(assert (axiom_int_approximation x1108))
(assert (axiom_int_approximation x1109))
(assert (axiom_int_approximation x111))
(assert (axiom_int_approximation x1111))
(assert (axiom_int_approximation x1113))
(assert (axiom_int_approximation x1114))
(assert (axiom_int_approximation x1115))
(assert (axiom_int_approximation x1116))
(assert (axiom_int_approximation x1117))
(assert (axiom_int_approximation x1118))
(assert (axiom_int_approximation x1119))
(assert (axiom_int_approximation x112))
(assert (axiom_int_approximation x1121))
(assert (axiom_int_approximation x1122))
(assert (axiom_int_approximation x1124))
(assert (axiom_int_approximation x1125))
(assert (axiom_int_approximation x1127))
(assert (axiom_int_approximation x1129))
(assert (axiom_int_approximation x113))
(assert (axiom_int_approximation x1130))
(assert (axiom_int_approximation x1131))
(assert (axiom_int_approximation x1132))
(assert (axiom_int_approximation x1133))
(assert (axiom_int_approximation x1135))
(assert (axiom_int_approximation x1137))
(assert (axiom_int_approximation x1142))
(assert (axiom_int_approximation x1144))
(assert (axiom_int_approximation x1145))
(assert (axiom_int_approximation x1148))
(assert (axiom_int_approximation x115))
(assert (axiom_int_approximation x1150))
(assert (axiom_int_approximation x1152))
(assert (axiom_int_approximation x1153))
(assert (axiom_int_approximation x1155))
(assert (axiom_int_approximation x1156))
(assert (axiom_int_approximation x1158))
(assert (axiom_int_approximation x1159))
(assert (axiom_int_approximation x116))
(assert (axiom_int_approximation x1160))
(assert (axiom_int_approximation x1161))
(assert (axiom_int_approximation x1162))
(assert (axiom_int_approximation x1164))
(assert (axiom_int_approximation x1165))
(assert (axiom_int_approximation x1166))
(assert (axiom_int_approximation x1169))
(assert (axiom_int_approximation x117))
(assert (axiom_int_approximation x1171))
(assert (axiom_int_approximation x1175))
(assert (axiom_int_approximation x1176))
(assert (axiom_int_approximation x1177))
(assert (axiom_int_approximation x1179))
(assert (axiom_int_approximation x1181))
(assert (axiom_int_approximation x1182))
(assert (axiom_int_approximation x1183))
(assert (axiom_int_approximation x1184))
(assert (axiom_int_approximation x1185))
(assert (axiom_int_approximation x1186))
(assert (axiom_int_approximation x1192))
(assert (axiom_int_approximation x1194))
(assert (axiom_int_approximation x1195))
(assert (axiom_int_approximation x1196))
(assert (axiom_int_approximation x1198))
(assert (axiom_int_approximation x1199))
(assert (axiom_int_approximation x12))
(assert (axiom_int_approximation x1201))
(assert (axiom_int_approximation x1203))
(assert (axiom_int_approximation x1204))
(assert (axiom_int_approximation x1205))
(assert (axiom_int_approximation x1208))
(assert (axiom_int_approximation x1209))
(assert (axiom_int_approximation x121))
(assert (axiom_int_approximation x1212))
(assert (axiom_int_approximation x1213))
(assert (axiom_int_approximation x1216))
(assert (axiom_int_approximation x1217))
(assert (axiom_int_approximation x1219))
(assert (axiom_int_approximation x1220))
(assert (axiom_int_approximation x1221))
(assert (axiom_int_approximation x1223))
(assert (axiom_int_approximation x1227))
(assert (axiom_int_approximation x1231))
(assert (axiom_int_approximation x1232))
(assert (axiom_int_approximation x1233))
(assert (axiom_int_approximation x1235))
(assert (axiom_int_approximation x1237))
(assert (axiom_int_approximation x1238))
(assert (axiom_int_approximation x1239))
(assert (axiom_int_approximation x1240))
(assert (axiom_int_approximation x1241))
(assert (axiom_int_approximation x1242))
(assert (axiom_int_approximation x1243))
(assert (axiom_int_approximation x1246))
(assert (axiom_int_approximation x1247))
(assert (axiom_int_approximation x1248))
(assert (axiom_int_approximation x1254))
(assert (axiom_int_approximation x1255))
(assert (axiom_int_approximation x1256))
(assert (axiom_int_approximation x1257))
(assert (axiom_int_approximation x126))
(assert (axiom_int_approximation x1260))
(assert (axiom_int_approximation x1264))
(assert (axiom_int_approximation x1268))
(assert (axiom_int_approximation x1269))
(assert (axiom_int_approximation x1271))
(assert (axiom_int_approximation x1272))
(assert (axiom_int_approximation x1273))
(assert (axiom_int_approximation x1275))
(assert (axiom_int_approximation x1278))
(assert (axiom_int_approximation x128))
(assert (axiom_int_approximation x1282))
(assert (axiom_int_approximation x1284))
(assert (axiom_int_approximation x1285))
(assert (axiom_int_approximation x1286))
(assert (axiom_int_approximation x1288))
(assert (axiom_int_approximation x129))
(assert (axiom_int_approximation x1290))
(assert (axiom_int_approximation x1291))
(assert (axiom_int_approximation x1292))
(assert (axiom_int_approximation x1294))
(assert (axiom_int_approximation x1297))
(assert (axiom_int_approximation x1298))
(assert (axiom_int_approximation x13))
(assert (axiom_int_approximation x130))
(assert (axiom_int_approximation x1300))
(assert (axiom_int_approximation x1303))
(assert (axiom_int_approximation x1305))
(assert (axiom_int_approximation x1306))
(assert (axiom_int_approximation x1308))
(assert (axiom_int_approximation x1309))
(assert (axiom_int_approximation x131))
(assert (axiom_int_approximation x1311))
(assert (axiom_int_approximation x1312))
(assert (axiom_int_approximation x1314))
(assert (axiom_int_approximation x1315))
(assert (axiom_int_approximation x1317))
(assert (axiom_int_approximation x1318))
(assert (axiom_int_approximation x1320))
(assert (axiom_int_approximation x1322))
(assert (axiom_int_approximation x1323))
(assert (axiom_int_approximation x1325))
(assert (axiom_int_approximation x1326))
(assert (axiom_int_approximation x1327))
(assert (axiom_int_approximation x133))
(assert (axiom_int_approximation x1331))
(assert (axiom_int_approximation x1332))
(assert (axiom_int_approximation x1334))
(assert (axiom_int_approximation x1337))
(assert (axiom_int_approximation x1338))
(assert (axiom_int_approximation x1339))
(assert (axiom_int_approximation x1340))
(assert (axiom_int_approximation x1342))
(assert (axiom_int_approximation x1348))
(assert (axiom_int_approximation x1349))
(assert (axiom_int_approximation x135))
(assert (axiom_int_approximation x1350))
(assert (axiom_int_approximation x1352))
(assert (axiom_int_approximation x1354))
(assert (axiom_int_approximation x1355))
(assert (axiom_int_approximation x1358))
(assert (axiom_int_approximation x1359))
(assert (axiom_int_approximation x136))
(assert (axiom_int_approximation x1360))
(assert (axiom_int_approximation x1363))
(assert (axiom_int_approximation x1365))
(assert (axiom_int_approximation x1366))
(assert (axiom_int_approximation x1368))
(assert (axiom_int_approximation x1369))
(assert (axiom_int_approximation x137))
(assert (axiom_int_approximation x1371))
(assert (axiom_int_approximation x1372))
(assert (axiom_int_approximation x1374))
(assert (axiom_int_approximation x1377))
(assert (axiom_int_approximation x1380))
(assert (axiom_int_approximation x1381))
(assert (axiom_int_approximation x1383))
(assert (axiom_int_approximation x1386))
(assert (axiom_int_approximation x1387))
(assert (axiom_int_approximation x1388))
(assert (axiom_int_approximation x139))
(assert (axiom_int_approximation x1390))
(assert (axiom_int_approximation x1391))
(assert (axiom_int_approximation x1392))
(assert (axiom_int_approximation x1394))
(assert (axiom_int_approximation x1395))
(assert (axiom_int_approximation x1397))
(assert (axiom_int_approximation x1398))
(assert (axiom_int_approximation x1399))
(assert (axiom_int_approximation x140))
(assert (axiom_int_approximation x1400))
(assert (axiom_int_approximation x1401))
(assert (axiom_int_approximation x1403))
(assert (axiom_int_approximation x1405))
(assert (axiom_int_approximation x1406))
(assert (axiom_int_approximation x141))
(assert (axiom_int_approximation x1411))
(assert (axiom_int_approximation x1413))
(assert (axiom_int_approximation x1415))
(assert (axiom_int_approximation x1416))
(assert (axiom_int_approximation x1418))
(assert (axiom_int_approximation x1422))
(assert (axiom_int_approximation x1423))
(assert (axiom_int_approximation x1424))
(assert (axiom_int_approximation x1427))
(assert (axiom_int_approximation x1428))
(assert (axiom_int_approximation x1429))
(assert (axiom_int_approximation x143))
(assert (axiom_int_approximation x1432))
(assert (axiom_int_approximation x1433))
(assert (axiom_int_approximation x1434))
(assert (axiom_int_approximation x1435))
(assert (axiom_int_approximation x1438))
(assert (axiom_int_approximation x1441))
(assert (axiom_int_approximation x1442))
(assert (axiom_int_approximation x1444))
(assert (axiom_int_approximation x1445))
(assert (axiom_int_approximation x1446))
(assert (axiom_int_approximation x1447))
(assert (axiom_int_approximation x1450))
(assert (axiom_int_approximation x1458))
(assert (axiom_int_approximation x1459))
(assert (axiom_int_approximation x1460))
(assert (axiom_int_approximation x1462))
(assert (axiom_int_approximation x1463))
(assert (axiom_int_approximation x1466))
(assert (axiom_int_approximation x1467))
(assert (axiom_int_approximation x1468))
(assert (axiom_int_approximation x147))
(assert (axiom_int_approximation x1470))
(assert (axiom_int_approximation x1471))
(assert (axiom_int_approximation x1472))
(assert (axiom_int_approximation x1473))
(assert (axiom_int_approximation x1475))
(assert (axiom_int_approximation x1476))
(assert (axiom_int_approximation x1477))
(assert (axiom_int_approximation x1478))
(assert (axiom_int_approximation x1479))
(assert (axiom_int_approximation x1480))
(assert (axiom_int_approximation x1485))
(assert (axiom_int_approximation x1487))
(assert (axiom_int_approximation x1489))
(assert (axiom_int_approximation x1492))
(assert (axiom_int_approximation x1494))
(assert (axiom_int_approximation x1497))
(assert (axiom_int_approximation x1498))
(assert (axiom_int_approximation x1499))
(assert (axiom_int_approximation x15))
(assert (axiom_int_approximation x150))
(assert (axiom_int_approximation x1502))
(assert (axiom_int_approximation x1503))
(assert (axiom_int_approximation x1505))
(assert (axiom_int_approximation x1506))
(assert (axiom_int_approximation x1509))
(assert (axiom_int_approximation x1510))
(assert (axiom_int_approximation x1513))
(assert (axiom_int_approximation x1518))
(assert (axiom_int_approximation x1519))
(assert (axiom_int_approximation x1521))
(assert (axiom_int_approximation x1522))
(assert (axiom_int_approximation x1524))
(assert (axiom_int_approximation x1527))
(assert (axiom_int_approximation x1528))
(assert (axiom_int_approximation x1529))
(assert (axiom_int_approximation x153))
(assert (axiom_int_approximation x1531))
(assert (axiom_int_approximation x1532))
(assert (axiom_int_approximation x1533))
(assert (axiom_int_approximation x1536))
(assert (axiom_int_approximation x1537))
(assert (axiom_int_approximation x1539))
(assert (axiom_int_approximation x1542))
(assert (axiom_int_approximation x1544))
(assert (axiom_int_approximation x1546))
(assert (axiom_int_approximation x155))
(assert (axiom_int_approximation x1550))
(assert (axiom_int_approximation x1551))
(assert (axiom_int_approximation x1553))
(assert (axiom_int_approximation x1554))
(assert (axiom_int_approximation x1557))
(assert (axiom_int_approximation x1558))
(assert (axiom_int_approximation x1559))
(assert (axiom_int_approximation x1561))
(assert (axiom_int_approximation x1562))
(assert (axiom_int_approximation x1563))
(assert (axiom_int_approximation x1566))
(assert (axiom_int_approximation x1569))
(assert (axiom_int_approximation x1570))
(assert (axiom_int_approximation x1575))
(assert (axiom_int_approximation x1578))
(assert (axiom_int_approximation x1579))
(assert (axiom_int_approximation x158))
(assert (axiom_int_approximation x1580))
(assert (axiom_int_approximation x1581))
(assert (axiom_int_approximation x1582))
(assert (axiom_int_approximation x1583))
(assert (axiom_int_approximation x1586))
(assert (axiom_int_approximation x1587))
(assert (axiom_int_approximation x159))
(assert (axiom_int_approximation x1590))
(assert (axiom_int_approximation x1591))
(assert (axiom_int_approximation x1592))
(assert (axiom_int_approximation x1594))
(assert (axiom_int_approximation x1595))
(assert (axiom_int_approximation x1597))
(assert (axiom_int_approximation x1598))
(assert (axiom_int_approximation x16))
(assert (axiom_int_approximation x160))
(assert (axiom_int_approximation x1602))
(assert (axiom_int_approximation x1603))
(assert (axiom_int_approximation x1604))
(assert (axiom_int_approximation x1606))
(assert (axiom_int_approximation x1609))
(assert (axiom_int_approximation x161))
(assert (axiom_int_approximation x1611))
(assert (axiom_int_approximation x1614))
(assert (axiom_int_approximation x1615))
(assert (axiom_int_approximation x1617))
(assert (axiom_int_approximation x162))
(assert (axiom_int_approximation x1620))
(assert (axiom_int_approximation x1621))
(assert (axiom_int_approximation x1626))
(assert (axiom_int_approximation x1627))
(assert (axiom_int_approximation x1629))
(assert (axiom_int_approximation x163))
(assert (axiom_int_approximation x1630))
(assert (axiom_int_approximation x1634))
(assert (axiom_int_approximation x1637))
(assert (axiom_int_approximation x1638))
(assert (axiom_int_approximation x1639))
(assert (axiom_int_approximation x1640))
(assert (axiom_int_approximation x1642))
(assert (axiom_int_approximation x1647))
(assert (axiom_int_approximation x1648))
(assert (axiom_int_approximation x1652))
(assert (axiom_int_approximation x1653))
(assert (axiom_int_approximation x1654))
(assert (axiom_int_approximation x1655))
(assert (axiom_int_approximation x1656))
(assert (axiom_int_approximation x1657))
(assert (axiom_int_approximation x1658))
(assert (axiom_int_approximation x1659))
(assert (axiom_int_approximation x1660))
(assert (axiom_int_approximation x1661))
(assert (axiom_int_approximation x1662))
(assert (axiom_int_approximation x1663))
(assert (axiom_int_approximation x1664))
(assert (axiom_int_approximation x1665))
(assert (axiom_int_approximation x1666))
(assert (axiom_int_approximation x1667))
(assert (axiom_int_approximation x1669))
(assert (axiom_int_approximation x167))
(assert (axiom_int_approximation x1670))
(assert (axiom_int_approximation x1671))
(assert (axiom_int_approximation x1673))
(assert (axiom_int_approximation x1675))
(assert (axiom_int_approximation x1676))
(assert (axiom_int_approximation x1679))
(assert (axiom_int_approximation x168))
(assert (axiom_int_approximation x1680))
(assert (axiom_int_approximation x1681))
(assert (axiom_int_approximation x1683))
(assert (axiom_int_approximation x1684))
(assert (axiom_int_approximation x1685))
(assert (axiom_int_approximation x1687))
(assert (axiom_int_approximation x1688))
(assert (axiom_int_approximation x1689))
(assert (axiom_int_approximation x1692))
(assert (axiom_int_approximation x1693))
(assert (axiom_int_approximation x1695))
(assert (axiom_int_approximation x1698))
(assert (axiom_int_approximation x1699))
(assert (axiom_int_approximation x1702))
(assert (axiom_int_approximation x1705))
(assert (axiom_int_approximation x1706))
(assert (axiom_int_approximation x1707))
(assert (axiom_int_approximation x171))
(assert (axiom_int_approximation x1710))
(assert (axiom_int_approximation x1712))
(assert (axiom_int_approximation x1714))
(assert (axiom_int_approximation x1715))
(assert (axiom_int_approximation x1716))
(assert (axiom_int_approximation x1718))
(assert (axiom_int_approximation x172))
(assert (axiom_int_approximation x1722))
(assert (axiom_int_approximation x1723))
(assert (axiom_int_approximation x1724))
(assert (axiom_int_approximation x1725))
(assert (axiom_int_approximation x1727))
(assert (axiom_int_approximation x1728))
(assert (axiom_int_approximation x1729))
(assert (axiom_int_approximation x1730))
(assert (axiom_int_approximation x1732))
(assert (axiom_int_approximation x1733))
(assert (axiom_int_approximation x1735))
(assert (axiom_int_approximation x1738))
(assert (axiom_int_approximation x1739))
(assert (axiom_int_approximation x1741))
(assert (axiom_int_approximation x1742))
(assert (axiom_int_approximation x1743))
(assert (axiom_int_approximation x1744))
(assert (axiom_int_approximation x1745))
(assert (axiom_int_approximation x1747))
(assert (axiom_int_approximation x1749))
(assert (axiom_int_approximation x1752))
(assert (axiom_int_approximation x1754))
(assert (axiom_int_approximation x1758))
(assert (axiom_int_approximation x1759))
(assert (axiom_int_approximation x176))
(assert (axiom_int_approximation x1761))
(assert (axiom_int_approximation x1768))
(assert (axiom_int_approximation x1770))
(assert (axiom_int_approximation x1780))
(assert (axiom_int_approximation x1781))
(assert (axiom_int_approximation x1782))
(assert (axiom_int_approximation x1783))
(assert (axiom_int_approximation x1784))
(assert (axiom_int_approximation x1785))
(assert (axiom_int_approximation x1787))
(assert (axiom_int_approximation x1788))
(assert (axiom_int_approximation x1790))
(assert (axiom_int_approximation x1794))
(assert (axiom_int_approximation x18))
(assert (axiom_int_approximation x180))
(assert (axiom_int_approximation x1801))
(assert (axiom_int_approximation x1802))
(assert (axiom_int_approximation x1803))
(assert (axiom_int_approximation x1805))
(assert (axiom_int_approximation x1809))
(assert (axiom_int_approximation x1810))
(assert (axiom_int_approximation x1811))
(assert (axiom_int_approximation x1812))
(assert (axiom_int_approximation x1815))
(assert (axiom_int_approximation x1817))
(assert (axiom_int_approximation x1818))
(assert (axiom_int_approximation x182))
(assert (axiom_int_approximation x1820))
(assert (axiom_int_approximation x1822))
(assert (axiom_int_approximation x1823))
(assert (axiom_int_approximation x1824))
(assert (axiom_int_approximation x1825))
(assert (axiom_int_approximation x1826))
(assert (axiom_int_approximation x183))
(assert (axiom_int_approximation x1833))
(assert (axiom_int_approximation x1838))
(assert (axiom_int_approximation x1840))
(assert (axiom_int_approximation x1843))
(assert (axiom_int_approximation x1845))
(assert (axiom_int_approximation x1846))
(assert (axiom_int_approximation x1847))
(assert (axiom_int_approximation x1848))
(assert (axiom_int_approximation x1849))
(assert (axiom_int_approximation x1851))
(assert (axiom_int_approximation x1855))
(assert (axiom_int_approximation x1857))
(assert (axiom_int_approximation x186))
(assert (axiom_int_approximation x1860))
(assert (axiom_int_approximation x1861))
(assert (axiom_int_approximation x1862))
(assert (axiom_int_approximation x1865))
(assert (axiom_int_approximation x1867))
(assert (axiom_int_approximation x1868))
(assert (axiom_int_approximation x1870))
(assert (axiom_int_approximation x1871))
(assert (axiom_int_approximation x1872))
(assert (axiom_int_approximation x1874))
(assert (axiom_int_approximation x1876))
(assert (axiom_int_approximation x1878))
(assert (axiom_int_approximation x188))
(assert (axiom_int_approximation x1881))
(assert (axiom_int_approximation x1882))
(assert (axiom_int_approximation x1884))
(assert (axiom_int_approximation x1885))
(assert (axiom_int_approximation x1886))
(assert (axiom_int_approximation x1887))
(assert (axiom_int_approximation x1888))
(assert (axiom_int_approximation x1889))
(assert (axiom_int_approximation x189))
(assert (axiom_int_approximation x1890))
(assert (axiom_int_approximation x1891))
(assert (axiom_int_approximation x1892))
(assert (axiom_int_approximation x1894))
(assert (axiom_int_approximation x1896))
(assert (axiom_int_approximation x1897))
(assert (axiom_int_approximation x1898))
(assert (axiom_int_approximation x19))
(assert (axiom_int_approximation x190))
(assert (axiom_int_approximation x1900))
(assert (axiom_int_approximation x1902))
(assert (axiom_int_approximation x1904))
(assert (axiom_int_approximation x1905))
(assert (axiom_int_approximation x1907))
(assert (axiom_int_approximation x1908))
(assert (axiom_int_approximation x1910))
(assert (axiom_int_approximation x1915))
(assert (axiom_int_approximation x1916))
(assert (axiom_int_approximation x192))
(assert (axiom_int_approximation x1920))
(assert (axiom_int_approximation x1925))
(assert (axiom_int_approximation x1926))
(assert (axiom_int_approximation x1928))
(assert (axiom_int_approximation x193))
(assert (axiom_int_approximation x1930))
(assert (axiom_int_approximation x1932))
(assert (axiom_int_approximation x1933))
(assert (axiom_int_approximation x1934))
(assert (axiom_int_approximation x1937))
(assert (axiom_int_approximation x1939))
(assert (axiom_int_approximation x194))
(assert (axiom_int_approximation x1942))
(assert (axiom_int_approximation x1943))
(assert (axiom_int_approximation x1946))
(assert (axiom_int_approximation x1947))
(assert (axiom_int_approximation x1948))
(assert (axiom_int_approximation x1949))
(assert (axiom_int_approximation x1950))
(assert (axiom_int_approximation x1951))
(assert (axiom_int_approximation x1952))
(assert (axiom_int_approximation x1959))
(assert (axiom_int_approximation x1960))
(assert (axiom_int_approximation x1962))
(assert (axiom_int_approximation x1963))
(assert (axiom_int_approximation x1964))
(assert (axiom_int_approximation x1967))
(assert (axiom_int_approximation x1968))
(assert (axiom_int_approximation x1969))
(assert (axiom_int_approximation x197))
(assert (axiom_int_approximation x1970))
(assert (axiom_int_approximation x1971))
(assert (axiom_int_approximation x1975))
(assert (axiom_int_approximation x1976))
(assert (axiom_int_approximation x1977))
(assert (axiom_int_approximation x1979))
(assert (axiom_int_approximation x198))
(assert (axiom_int_approximation x1981))
(assert (axiom_int_approximation x1982))
(assert (axiom_int_approximation x1983))
(assert (axiom_int_approximation x1984))
(assert (axiom_int_approximation x1985))
(assert (axiom_int_approximation x1989))
(assert (axiom_int_approximation x199))
(assert (axiom_int_approximation x1990))
(assert (axiom_int_approximation x1991))
(assert (axiom_int_approximation x1994))
(assert (axiom_int_approximation x1995))
(assert (axiom_int_approximation x1999))
(assert (axiom_int_approximation x2))
(assert (axiom_int_approximation x200))
(assert (axiom_int_approximation x2000))
(assert (axiom_int_approximation x2003))
(assert (axiom_int_approximation x201))
(assert (axiom_int_approximation x202))
(assert (axiom_int_approximation x205))
(assert (axiom_int_approximation x206))
(assert (axiom_int_approximation x207))
(assert (axiom_int_approximation x208))
(assert (axiom_int_approximation x209))
(assert (axiom_int_approximation x21))
(assert (axiom_int_approximation x212))
(assert (axiom_int_approximation x213))
(assert (axiom_int_approximation x214))
(assert (axiom_int_approximation x215))
(assert (axiom_int_approximation x216))
(assert (axiom_int_approximation x217))
(assert (axiom_int_approximation x220))
(assert (axiom_int_approximation x221))
(assert (axiom_int_approximation x226))
(assert (axiom_int_approximation x227))
(assert (axiom_int_approximation x23))
(assert (axiom_int_approximation x230))
(assert (axiom_int_approximation x232))
(assert (axiom_int_approximation x233))
(assert (axiom_int_approximation x235))
(assert (axiom_int_approximation x238))
(assert (axiom_int_approximation x239))
(assert (axiom_int_approximation x241))
(assert (axiom_int_approximation x242))
(assert (axiom_int_approximation x243))
(assert (axiom_int_approximation x244))
(assert (axiom_int_approximation x245))
(assert (axiom_int_approximation x248))
(assert (axiom_int_approximation x249))
(assert (axiom_int_approximation x250))
(assert (axiom_int_approximation x251))
(assert (axiom_int_approximation x253))
(assert (axiom_int_approximation x254))
(assert (axiom_int_approximation x256))
(assert (axiom_int_approximation x258))
(assert (axiom_int_approximation x259))
(assert (axiom_int_approximation x260))
(assert (axiom_int_approximation x269))
(assert (axiom_int_approximation x27))
(assert (axiom_int_approximation x270))
(assert (axiom_int_approximation x272))
(assert (axiom_int_approximation x274))
(assert (axiom_int_approximation x278))
(assert (axiom_int_approximation x280))
(assert (axiom_int_approximation x284))
(assert (axiom_int_approximation x285))
(assert (axiom_int_approximation x286))
(assert (axiom_int_approximation x287))
(assert (axiom_int_approximation x29))
(assert (axiom_int_approximation x290))
(assert (axiom_int_approximation x291))
(assert (axiom_int_approximation x292))
(assert (axiom_int_approximation x297))
(assert (axiom_int_approximation x3))
(assert (axiom_int_approximation x30))
(assert (axiom_int_approximation x300))
(assert (axiom_int_approximation x302))
(assert (axiom_int_approximation x303))
(assert (axiom_int_approximation x307))
(assert (axiom_int_approximation x308))
(assert (axiom_int_approximation x309))
(assert (axiom_int_approximation x31))
(assert (axiom_int_approximation x311))
(assert (axiom_int_approximation x312))
(assert (axiom_int_approximation x313))
(assert (axiom_int_approximation x314))
(assert (axiom_int_approximation x315))
(assert (axiom_int_approximation x316))
(assert (axiom_int_approximation x317))
(assert (axiom_int_approximation x318))
(assert (axiom_int_approximation x319))
(assert (axiom_int_approximation x32))
(assert (axiom_int_approximation x320))
(assert (axiom_int_approximation x322))
(assert (axiom_int_approximation x323))
(assert (axiom_int_approximation x324))
(assert (axiom_int_approximation x325))
(assert (axiom_int_approximation x326))
(assert (axiom_int_approximation x327))
(assert (axiom_int_approximation x329))
(assert (axiom_int_approximation x33))
(assert (axiom_int_approximation x330))
(assert (axiom_int_approximation x332))
(assert (axiom_int_approximation x333))
(assert (axiom_int_approximation x334))
(assert (axiom_int_approximation x337))
(assert (axiom_int_approximation x338))
(assert (axiom_int_approximation x339))
(assert (axiom_int_approximation x340))
(assert (axiom_int_approximation x341))
(assert (axiom_int_approximation x342))
(assert (axiom_int_approximation x344))
(assert (axiom_int_approximation x35))
(assert (axiom_int_approximation x353))
(assert (axiom_int_approximation x356))
(assert (axiom_int_approximation x357))
(assert (axiom_int_approximation x358))
(assert (axiom_int_approximation x359))
(assert (axiom_int_approximation x36))
(assert (axiom_int_approximation x360))
(assert (axiom_int_approximation x362))
(assert (axiom_int_approximation x365))
(assert (axiom_int_approximation x366))
(assert (axiom_int_approximation x369))
(assert (axiom_int_approximation x37))
(assert (axiom_int_approximation x370))
(assert (axiom_int_approximation x373))
(assert (axiom_int_approximation x374))
(assert (axiom_int_approximation x375))
(assert (axiom_int_approximation x378))
(assert (axiom_int_approximation x38))
(assert (axiom_int_approximation x380))
(assert (axiom_int_approximation x381))
(assert (axiom_int_approximation x382))
(assert (axiom_int_approximation x385))
(assert (axiom_int_approximation x386))
(assert (axiom_int_approximation x388))
(assert (axiom_int_approximation x390))
(assert (axiom_int_approximation x393))
(assert (axiom_int_approximation x395))
(assert (axiom_int_approximation x396))
(assert (axiom_int_approximation x397))
(assert (axiom_int_approximation x399))
(assert (axiom_int_approximation x40))
(assert (axiom_int_approximation x401))
(assert (axiom_int_approximation x402))
(assert (axiom_int_approximation x403))
(assert (axiom_int_approximation x406))
(assert (axiom_int_approximation x407))
(assert (axiom_int_approximation x41))
(assert (axiom_int_approximation x412))
(assert (axiom_int_approximation x415))
(assert (axiom_int_approximation x416))
(assert (axiom_int_approximation x418))
(assert (axiom_int_approximation x419))
(assert (axiom_int_approximation x42))
(assert (axiom_int_approximation x424))
(assert (axiom_int_approximation x425))
(assert (axiom_int_approximation x426))
(assert (axiom_int_approximation x428))
(assert (axiom_int_approximation x429))
(assert (axiom_int_approximation x43))
(assert (axiom_int_approximation x430))
(assert (axiom_int_approximation x432))
(assert (axiom_int_approximation x434))
(assert (axiom_int_approximation x437))
(assert (axiom_int_approximation x439))
(assert (axiom_int_approximation x441))
(assert (axiom_int_approximation x444))
(assert (axiom_int_approximation x445))
(assert (axiom_int_approximation x449))
(assert (axiom_int_approximation x45))
(assert (axiom_int_approximation x450))
(assert (axiom_int_approximation x452))
(assert (axiom_int_approximation x453))
(assert (axiom_int_approximation x454))
(assert (axiom_int_approximation x455))
(assert (axiom_int_approximation x458))
(assert (axiom_int_approximation x463))
(assert (axiom_int_approximation x465))
(assert (axiom_int_approximation x466))
(assert (axiom_int_approximation x468))
(assert (axiom_int_approximation x469))
(assert (axiom_int_approximation x47))
(assert (axiom_int_approximation x471))
(assert (axiom_int_approximation x473))
(assert (axiom_int_approximation x474))
(assert (axiom_int_approximation x475))
(assert (axiom_int_approximation x479))
(assert (axiom_int_approximation x480))
(assert (axiom_int_approximation x484))
(assert (axiom_int_approximation x485))
(assert (axiom_int_approximation x486))
(assert (axiom_int_approximation x489))
(assert (axiom_int_approximation x491))
(assert (axiom_int_approximation x492))
(assert (axiom_int_approximation x493))
(assert (axiom_int_approximation x494))
(assert (axiom_int_approximation x495))
(assert (axiom_int_approximation x496))
(assert (axiom_int_approximation x500))
(assert (axiom_int_approximation x501))
(assert (axiom_int_approximation x502))
(assert (axiom_int_approximation x505))
(assert (axiom_int_approximation x509))
(assert (axiom_int_approximation x51))
(assert (axiom_int_approximation x510))
(assert (axiom_int_approximation x511))
(assert (axiom_int_approximation x512))
(assert (axiom_int_approximation x516))
(assert (axiom_int_approximation x517))
(assert (axiom_int_approximation x518))
(assert (axiom_int_approximation x520))
(assert (axiom_int_approximation x521))
(assert (axiom_int_approximation x524))
(assert (axiom_int_approximation x526))
(assert (axiom_int_approximation x528))
(assert (axiom_int_approximation x531))
(assert (axiom_int_approximation x532))
(assert (axiom_int_approximation x535))
(assert (axiom_int_approximation x536))
(assert (axiom_int_approximation x537))
(assert (axiom_int_approximation x538))
(assert (axiom_int_approximation x540))
(assert (axiom_int_approximation x542))
(assert (axiom_int_approximation x545))
(assert (axiom_int_approximation x546))
(assert (axiom_int_approximation x547))
(assert (axiom_int_approximation x549))
(assert (axiom_int_approximation x55))
(assert (axiom_int_approximation x550))
(assert (axiom_int_approximation x553))
(assert (axiom_int_approximation x554))
(assert (axiom_int_approximation x555))
(assert (axiom_int_approximation x558))
(assert (axiom_int_approximation x56))
(assert (axiom_int_approximation x561))
(assert (axiom_int_approximation x562))
(assert (axiom_int_approximation x563))
(assert (axiom_int_approximation x565))
(assert (axiom_int_approximation x567))
(assert (axiom_int_approximation x569))
(assert (axiom_int_approximation x571))
(assert (axiom_int_approximation x572))
(assert (axiom_int_approximation x573))
(assert (axiom_int_approximation x574))
(assert (axiom_int_approximation x575))
(assert (axiom_int_approximation x576))
(assert (axiom_int_approximation x579))
(assert (axiom_int_approximation x58))
(assert (axiom_int_approximation x581))
(assert (axiom_int_approximation x582))
(assert (axiom_int_approximation x583))
(assert (axiom_int_approximation x586))
(assert (axiom_int_approximation x587))
(assert (axiom_int_approximation x588))
(assert (axiom_int_approximation x59))
(assert (axiom_int_approximation x592))
(assert (axiom_int_approximation x598))
(assert (axiom_int_approximation x6))
(assert (axiom_int_approximation x60))
(assert (axiom_int_approximation x601))
(assert (axiom_int_approximation x604))
(assert (axiom_int_approximation x605))
(assert (axiom_int_approximation x606))
(assert (axiom_int_approximation x607))
(assert (axiom_int_approximation x61))
(assert (axiom_int_approximation x610))
(assert (axiom_int_approximation x611))
(assert (axiom_int_approximation x612))
(assert (axiom_int_approximation x614))
(assert (axiom_int_approximation x616))
(assert (axiom_int_approximation x617))
(assert (axiom_int_approximation x618))
(assert (axiom_int_approximation x619))
(assert (axiom_int_approximation x62))
(assert (axiom_int_approximation x621))
(assert (axiom_int_approximation x622))
(assert (axiom_int_approximation x623))
(assert (axiom_int_approximation x624))
(assert (axiom_int_approximation x625))
(assert (axiom_int_approximation x63))
(assert (axiom_int_approximation x630))
(assert (axiom_int_approximation x631))
(assert (axiom_int_approximation x632))
(assert (axiom_int_approximation x633))
(assert (axiom_int_approximation x634))
(assert (axiom_int_approximation x637))
(assert (axiom_int_approximation x639))
(assert (axiom_int_approximation x640))
(assert (axiom_int_approximation x641))
(assert (axiom_int_approximation x642))
(assert (axiom_int_approximation x643))
(assert (axiom_int_approximation x644))
(assert (axiom_int_approximation x648))
(assert (axiom_int_approximation x650))
(assert (axiom_int_approximation x652))
(assert (axiom_int_approximation x653))
(assert (axiom_int_approximation x655))
(assert (axiom_int_approximation x657))
(assert (axiom_int_approximation x658))
(assert (axiom_int_approximation x659))
(assert (axiom_int_approximation x66))
(assert (axiom_int_approximation x661))
(assert (axiom_int_approximation x664))
(assert (axiom_int_approximation x665))
(assert (axiom_int_approximation x667))
(assert (axiom_int_approximation x668))
(assert (axiom_int_approximation x669))
(assert (axiom_int_approximation x67))
(assert (axiom_int_approximation x670))
(assert (axiom_int_approximation x671))
(assert (axiom_int_approximation x673))
(assert (axiom_int_approximation x674))
(assert (axiom_int_approximation x675))
(assert (axiom_int_approximation x679))
(assert (axiom_int_approximation x680))
(assert (axiom_int_approximation x683))
(assert (axiom_int_approximation x686))
(assert (axiom_int_approximation x687))
(assert (axiom_int_approximation x688))
(assert (axiom_int_approximation x689))
(assert (axiom_int_approximation x690))
(assert (axiom_int_approximation x691))
(assert (axiom_int_approximation x693))
(assert (axiom_int_approximation x694))
(assert (axiom_int_approximation x698))
(assert (axiom_int_approximation x70))
(assert (axiom_int_approximation x700))
(assert (axiom_int_approximation x702))
(assert (axiom_int_approximation x703))
(assert (axiom_int_approximation x707))
(assert (axiom_int_approximation x708))
(assert (axiom_int_approximation x71))
(assert (axiom_int_approximation x710))
(assert (axiom_int_approximation x711))
(assert (axiom_int_approximation x712))
(assert (axiom_int_approximation x713))
(assert (axiom_int_approximation x715))
(assert (axiom_int_approximation x716))
(assert (axiom_int_approximation x719))
(assert (axiom_int_approximation x72))
(assert (axiom_int_approximation x720))
(assert (axiom_int_approximation x722))
(assert (axiom_int_approximation x724))
(assert (axiom_int_approximation x725))
(assert (axiom_int_approximation x726))
(assert (axiom_int_approximation x727))
(assert (axiom_int_approximation x728))
(assert (axiom_int_approximation x729))
(assert (axiom_int_approximation x73))
(assert (axiom_int_approximation x730))
(assert (axiom_int_approximation x731))
(assert (axiom_int_approximation x733))
(assert (axiom_int_approximation x735))
(assert (axiom_int_approximation x739))
(assert (axiom_int_approximation x74))
(assert (axiom_int_approximation x740))
(assert (axiom_int_approximation x742))
(assert (axiom_int_approximation x743))
(assert (axiom_int_approximation x744))
(assert (axiom_int_approximation x745))
(assert (axiom_int_approximation x746))
(assert (axiom_int_approximation x747))
(assert (axiom_int_approximation x748))
(assert (axiom_int_approximation x749))
(assert (axiom_int_approximation x752))
(assert (axiom_int_approximation x756))
(assert (axiom_int_approximation x759))
(assert (axiom_int_approximation x760))
(assert (axiom_int_approximation x761))
(assert (axiom_int_approximation x762))
(assert (axiom_int_approximation x765))
(assert (axiom_int_approximation x766))
(assert (axiom_int_approximation x767))
(assert (axiom_int_approximation x77))
(assert (axiom_int_approximation x770))
(assert (axiom_int_approximation x772))
(assert (axiom_int_approximation x774))
(assert (axiom_int_approximation x776))
(assert (axiom_int_approximation x780))
(assert (axiom_int_approximation x781))
(assert (axiom_int_approximation x782))
(assert (axiom_int_approximation x784))
(assert (axiom_int_approximation x788))
(assert (axiom_int_approximation x789))
(assert (axiom_int_approximation x791))
(assert (axiom_int_approximation x792))
(assert (axiom_int_approximation x793))
(assert (axiom_int_approximation x794))
(assert (axiom_int_approximation x795))
(assert (axiom_int_approximation x796))
(assert (axiom_int_approximation x797))
(assert (axiom_int_approximation x798))
(assert (axiom_int_approximation x799))
(assert (axiom_int_approximation x8))
(assert (axiom_int_approximation x80))
(assert (axiom_int_approximation x800))
(assert (axiom_int_approximation x801))
(assert (axiom_int_approximation x803))
(assert (axiom_int_approximation x804))
(assert (axiom_int_approximation x806))
(assert (axiom_int_approximation x807))
(assert (axiom_int_approximation x81))
(assert (axiom_int_approximation x812))
(assert (axiom_int_approximation x814))
(assert (axiom_int_approximation x815))
(assert (axiom_int_approximation x816))
(assert (axiom_int_approximation x818))
(assert (axiom_int_approximation x819))
(assert (axiom_int_approximation x82))
(assert (axiom_int_approximation x821))
(assert (axiom_int_approximation x825))
(assert (axiom_int_approximation x828))
(assert (axiom_int_approximation x83))
(assert (axiom_int_approximation x830))
(assert (axiom_int_approximation x832))
(assert (axiom_int_approximation x836))
(assert (axiom_int_approximation x837))
(assert (axiom_int_approximation x838))
(assert (axiom_int_approximation x839))
(assert (axiom_int_approximation x84))
(assert (axiom_int_approximation x846))
(assert (axiom_int_approximation x847))
(assert (axiom_int_approximation x848))
(assert (axiom_int_approximation x85))
(assert (axiom_int_approximation x852))
(assert (axiom_int_approximation x853))
(assert (axiom_int_approximation x855))
(assert (axiom_int_approximation x856))
(assert (axiom_int_approximation x858))
(assert (axiom_int_approximation x860))
(assert (axiom_int_approximation x862))
(assert (axiom_int_approximation x863))
(assert (axiom_int_approximation x864))
(assert (axiom_int_approximation x865))
(assert (axiom_int_approximation x87))
(assert (axiom_int_approximation x871))
(assert (axiom_int_approximation x874))
(assert (axiom_int_approximation x877))
(assert (axiom_int_approximation x878))
(assert (axiom_int_approximation x881))
(assert (axiom_int_approximation x882))
(assert (axiom_int_approximation x884))
(assert (axiom_int_approximation x885))
(assert (axiom_int_approximation x886))
(assert (axiom_int_approximation x89))
(assert (axiom_int_approximation x890))
(assert (axiom_int_approximation x896))
(assert (axiom_int_approximation x897))
(assert (axiom_int_approximation x898))
(assert (axiom_int_approximation x899))
(assert (axiom_int_approximation x9))
(assert (axiom_int_approximation x90))
(assert (axiom_int_approximation x901))
(assert (axiom_int_approximation x902))
(assert (axiom_int_approximation x903))
(assert (axiom_int_approximation x904))
(assert (axiom_int_approximation x908))
(assert (axiom_int_approximation x909))
(assert (axiom_int_approximation x91))
(assert (axiom_int_approximation x912))
(assert (axiom_int_approximation x914))
(assert (axiom_int_approximation x915))
(assert (axiom_int_approximation x917))
(assert (axiom_int_approximation x918))
(assert (axiom_int_approximation x919))
(assert (axiom_int_approximation x920))
(assert (axiom_int_approximation x921))
(assert (axiom_int_approximation x922))
(assert (axiom_int_approximation x924))
(assert (axiom_int_approximation x926))
(assert (axiom_int_approximation x927))
(assert (axiom_int_approximation x928))
(assert (axiom_int_approximation x931))
(assert (axiom_int_approximation x936))
(assert (axiom_int_approximation x937))
(assert (axiom_int_approximation x94))
(assert (axiom_int_approximation x940))
(assert (axiom_int_approximation x941))
(assert (axiom_int_approximation x942))
(assert (axiom_int_approximation x943))
(assert (axiom_int_approximation x944))
(assert (axiom_int_approximation x945))
(assert (axiom_int_approximation x946))
(assert (axiom_int_approximation x947))
(assert (axiom_int_approximation x949))
(assert (axiom_int_approximation x95))
(assert (axiom_int_approximation x955))
(assert (axiom_int_approximation x956))
(assert (axiom_int_approximation x958))
(assert (axiom_int_approximation x96))
(assert (axiom_int_approximation x960))
(assert (axiom_int_approximation x961))
(assert (axiom_int_approximation x962))
(assert (axiom_int_approximation x963))
(assert (axiom_int_approximation x964))
(assert (axiom_int_approximation x97))
(assert (axiom_int_approximation x970))
(assert (axiom_int_approximation x973))
(assert (axiom_int_approximation x974))
(assert (axiom_int_approximation x978))
(assert (axiom_int_approximation x98))
(assert (axiom_int_approximation x981))
(assert (axiom_int_approximation x982))
(assert (axiom_int_approximation x983))
(assert (axiom_int_approximation x984))
(assert (axiom_int_approximation x985))
(assert (axiom_int_approximation x986))
(assert (axiom_int_approximation x988))
(assert (axiom_int_approximation x989))
(assert (axiom_int_approximation x99))
(assert (axiom_int_approximation x992))
(assert (axiom_int_approximation x993))
(assert (axiom_int_approximation x996))
(assert (axiom_int_approximation x997))
(assert (x591 x1350))
(assert (x591 1461501637330902918203684832716283019655932542975))
(assert (x889 x1675 x606))
(assert (x151 x74))
(assert (x151 x1583))
(assert (x151 x898))
(assert (= (x808 2835717307) (x273 2835717307)))
(assert (x151 x1747))
(assert (x151 x94))
(assert (x889 x927 x1977))
(assert (x591 x143))
(assert (x151 x1195))
(assert (x151 x1881))
(assert (= (x273 115792089237316195423570985008687907853269984665640564039457584007913129639935) (x808 115792089237316195423570985008687907853269984665640564039457584007913129639935)))
(assert (x591 x1569))
(assert (x151 x947))
(assert (x151 x1948))
(assert (x151 x621))
(assert (x591 x1676))
(assert (= (x910 (x273 4062139261)) 4062139261))
(assert (x151 x63))
(assert (x151 x270))
(assert (x151 x1388))
(assert (x591 x1999))
(assert (x151 x1984))
(assert (= x1496 (=> (and (not (= x1220 0)) (= x292 (x446 (+ 64 x1498))) (= (ite (not x559) 1 0) x958) (= (x371 x958 x1699) x702) (= x1730 x358) (= x664 (x1453 x6)) (= x495 (x1015 (- 57896044618658097711785492504343953926634992332820282019728792003956564819967 x960))) (= (x371 115792089237316195423570985008687907853269984665640564039457584007913129639904 x147) x1035) (not (or (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1401)) (< x1401 160)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1401))) (= (x1015 (- 57896044618658097711785492504343953926634992332820282019728792003956564819968 x960)) x1991) (<= x1127 1208925819614629174706175) (= x639 (x613 x1358)) (= x1358 (x446 (+ x260 64))) (= (uninterp_mod (* x290 x735) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x1920) (= x1847 x1327) (= (x1453 x334) x747) (= x1030 (x446 (+ 64 x432))) (= x1140 (and (< 0 x747) (= (<= x747 57896044618658097711785492504343953926634992332820282019728792003956564819967) true))) (= (* x1920 x250) x1730) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (* x250 x1920)) (= (x371 x1089 x200) x1846) (= x220 x1045) (= (not x1140) x590) (>= 1208925819614629174706175 x664) (= x1045 (x446 (+ x358 x960))) (= x6 (x446 (+ x292 64))) (= x1089 (ite (or (and (= (<= x960 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (< x960 0)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x960)) 1 0)) (= x1846 0) (= (or (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x960)) (> 0 x960)) (> x960 57896044618658097711785492504343953926634992332820282019728792003956564819967)) x559) (= (x371 18446744073709551615 x221) x250) (= x1127 (x1453 x1498)) (= (ite (or (and (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x358) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1991)) (and (= (<= x1991 57896044618658097711785492504343953926634992332820282019728792003956564819967) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x358)) (< x358 x1991))) 1 0) x200) (= (x446 (+ x1401 31)) x147) (= x290 (x371 340282366920938463463374607431768211455 x747)) (= (x1170 x1030) x221) (= x1699 (ite (or (and (<= x358 57896044618658097711785492504343953926634992332820282019728792003956564819967) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x495)) (and (< x495 x358) (= (<= x358 57896044618658097711785492504343953926634992332820282019728792003956564819967) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x495)))) 1 0)) (= (x446 (+ x1498 x1035)) x1847) (= (x446 (+ x480 288)) x334) (not (> x358 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (= x702 0) (not (ite x590 x590 (and (< 170141183460469231731687303715884105727 x747) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x747)))))) x544)))
(assert (= (x1074 x1967) (ite (= 132 x1967) 274184521717934524641157099916833587211 (x1945 x1967))))
(assert (x151 x1291))
(assert (x151 x899))
(assert (x151 x1716))
(assert (x151 x1847))
(assert (= (x910 (x273 274184521717934524641157099916833587227)) 274184521717934524641157099916833587227))
(assert (x151 x742))
(assert (= (x273 3795249780) (x808 3795249780)))
(assert (x151 x1069))
(assert (x151 x330))
(assert (x151 x782))
(assert (x151 x643))
(assert (x151 x748))
(assert (x151 x878))
(assert (x1412 x356 x1820))
(assert (x151 x665))
(assert (x361 x484))
(assert (x591 x40))
(assert (x151 x555))
(assert (x151 x986))
(assert (x151 x1759))
(assert (x591 x807))
(assert (x591 x683))
(assert (x433 x1519 x801))
(assert (x151 x1790))
(assert (x151 x1338))
(assert (= x1814 x557))
(assert (x151 x1257))
(assert (x1501 x864 x140))
(assert (= x1827 (=> (= (= x601 274184521717934524641157099916833587223) x1027) (and (=> (and (= 100 x1710) (= (x1482 (x808 x1702) (x273 1) 0) x1961) (= x675 32) (= x1450 (x646 x829)) (<= x1400 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (or (> x592 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (> 96 x592) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x592)))) x1711) (= x1064 (x371 1461501637330902918203684832716283019655932542975 x19)) (= x1582 599290589) (= x1102 x1363) (= x23 (+ x1718 x3)) (not x1813) (= x1702 (x371 1461501637330902918203684832716283019655932542975 x19)) (not x660) (< 0 x302) (= x19 x1471) (= (x1482 (x808 274184521717934524641157099916833587211) x1324 0) x829) (= (x1015 (- x1400 x1363)) x1204) x1027 (= (x423 x1879) x1239) (= x1239 x3) (<= x1239 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= 0 x1239) (= x592 (x1015 (- x1710 4))) (not (= 117300739 x1582)) (= 274184521717934524641157099916833587211 x128) (not (< x1710 4)) (= 1 x882) (= x1718 x327) (>= 1461501637330902918203684832716283019655932542975 x19) (= 274184521717934524641157099916833587211 x1162) (<= 0 x1400) (= (x371 1461501637330902918203684832716283019655932542975 x19) x970) (= x1879 (x1482 (x808 274184521717934524641157099916833587211) (x273 1) 0)) (= x1635 (x1482 (x808 274184521717934524641157099916833587211) (x273 1) 0)) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x327 x1239)) (>= x1450 0) (= 274184521717934524641157099916833587211 x27) (= (< x1450 x327) x660) (not (= 404098525 x1582)) (<= x1450 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x81 16156842317565293874272834530371880720966471053262404558597773956279093428224) (= (x371 1461501637330902918203684832716283019655932542975 x19) x727) (= x327 x1363) (= (x935 (x808 274184521717934524641157099916833587223)) x302) (= (< x1400 x1363) x1813) (not (= x1582 157198259)) (= x798 x1710) (= (x1482 (x808 x727) (x273 1) 0) x1174) (= x1400 (x1600 x1961)) (= 274184521717934524641157099916833587211 x1542) (< x1582 826074471) (= x1080 (x1015 (- x1450 x1363))) (not x1711) (= x1324 (x1482 (x808 x970) (x273 2) 0))) x1601) (=> (not x1027) x1461)))))
(assert (= 117300739 (x910 (x273 117300739))))
(assert (x151 x919))
(assert (x151 x908))
(assert (x151 x290))
(assert (x151 x109))
(assert (x591 x795))
(assert (x151 x324))
(assert (x151 x836))
(assert (x151 x189))
(assert (x1540 x1201 x333))
(assert (x591 x19))
(assert (x151 x455))
(assert (x151 x1742))
(assert (x151 x1670))
(assert (= x262 (or (and x662 x305) (and x872 x1154) (and x1762 x1748))))
(assert (x151 x81))
(assert (x151 x547))
(assert (x1501 x1311 x241))
(assert (x151 x1303))
(assert (= 3638949393 (x910 (x273 3638949393))))
(assert (x151 x703))
(assert (x151 x1176))
(assert (x151 x962))
(assert (x151 x1275))
(assert (x151 x588))
(assert (= 170141183460469231731687303715884105727 (x910 (x273 170141183460469231731687303715884105727))))
(assert (= (x273 826074471) (x808 826074471)))
(assert (x151 x251))
(assert (x151 x1557))
(assert (x151 x668))
(assert (x151 x8))
(assert (x151 x1687))
(assert (x151 x864))
(assert (x151 x303))
(assert (x1501 x484 x1629))
(assert (x151 x1144))
(assert (x151 x1240))
(assert (x151 x90))
(assert (= x1814 true))
(assert (x151 x1664))
(assert (x433 x782 x496))
(assert (x151 x1551))
(assert (= 0 (x1844 x1030)))
(assert (= (=> (and (not (< x1125 950698303)) (> 20282409603651670423947251286016 x1485) (= x1125 950698303) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1590) (< x1125 1110625635) (not (= x1725 0)) (>= 20282409603651670423947251286015 x1485) (>= x535 0) (= x11 x1722) (= (x1772 224) x961) (>= x1305 0) (= x1553 (x935 (x808 274184521717934524641157099916833587211))) (= (x1425 x484) x1354) (< x1125 1168994686) (= x1485 (x1645 x866)) (= x284 x1487) (= (x1772 256) x528) (= x1076 (x1410 x730)) (> 1208925819614629174706176 x535) (= (not x1765) x1548) (>= 1461501637330902918203684832716283019655932542975 x1722) (= x588 4) (>= x885 0) (= x792 (x1425 x1485)) (= x1554 x1073) (= x183 (x1772 192)) (< 0 x955) (= 115197700812830431890159100217698998050002284567939525164234024451216521560064 x1161) (= (x1772 256) x1303) (= x406 (x1772 160)) (= x588 4) (= (x1772 160) x1983) (>= x1722 0) (>= 1461501637330902918203684832716283019655932542975 x1487) (>= x1422 0) (= x885 (x1357 x972)) (<= 0 x1860) (>= 1208925819614629174706175 x1422) (not (= x1048 4062139261)) (= (x1772 224) x1642) (= (= 0 x1076) x1765) (< x1422 1208925819614629174706176) (= (x1772 192) x1462) (= x550 128) (not (= x1048 3257672857)) (<= 0 x924) (= x1554 0) (= (x935 (x808 274184521717934524641157099916833587233)) x955) (> 2068668150 x1125) (not (= 2362581449 x1048)) (= x420 (x1482 (x808 x1169) (x273 1) 0)) (not (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1892) (and (< x1892 32) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1892))))) (<= x885 65535) (= x1076 x1989) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x924) (not (> 4 x588)) (> 65536 x885) (>= 1461501637330902918203684832716283019655932542975 x1305) (>= 1208925819614629174706175 x535) (= 274184521717934524641157099916833587233 x1598) (= (x1482 (x808 x1487) (x273 5) 0) x866) (<= x51 1461501637330902918203684832716283019655932542975) (= x51 x688) (= x1169 x403) (= 274184521717934524641157099916833587233 x1352) (= x710 x11) (= (or (and (> 0 x792) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x792))) (> x792 57896044618658097711785492504343953926634992332820282019728792003956564819967)) x1704) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1860) (= x924 (x758 x420)) (or (and (= x586 (x371 20282409603651670423947251286015 x1176)) (= x42 x484) (>= x70 0) (= (x1425 x1176) x1219) (= x239 (* x1749 x70)) (= x42 (x1015 (- 0 x1219))) (>= 18446744073709551615 x70) (not (or (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1676) true) (< x1676 0)) (> x1676 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (= (x371 20282409603651670423947251286015 x1676) x1749) (= x239 x1176) x1704 (not (< 10141204801825835211973625643007 x586)) (not (= 115792089237316195423570985008687907853269984655499359237631748795939503996928 x1219)) (not (= x792 115792089237316195423570985008687907853269984655499359237631748795939503996928)) (= (x1015 (- 0 x792)) x1676) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (* x70 x1749)) (> 18446744073709551616 x70)) (and (= x1111 (x371 20282409603651670423947251286015 x792)) (not x1704) (= x61 x484) (> 18446744073709551616 x1960) (= x61 x1360) (< (* x1960 x1111) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (not (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x792) (and (< x792 0) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x792) true)))) (not (> x1031 10141204801825835211973625643007)) (>= x1960 0) (>= 18446744073709551615 x1960) (= (* x1960 x1111) x1360) (= x1031 (x371 20282409603651670423947251286015 x61)))) (> x1076 0) (not (> 2362581449 x1048)) (= x1989 (ite x1548 1 0)) (= x1048 4272920204) (< 0 x1553) (= (x1772 128) x454) (<= 0 x1590) (>= x51 0) (>= x1485 0) (= x582 (x1772 128)) (= (x1482 (x808 x1487) (x273 5) 0) x972)) x504) x1370))
(assert (x151 x1970))
(assert (x151 x326))
(assert (x151 x1153))
(assert (x1501 x1603 x1309))
(assert (x151 x307))
(assert (x1412 x1627 x1233))
(assert (x151 x1754))
(assert (x151 x1080))
(assert (x151 x1377))
(assert (x151 x885))
(assert (= x2002 (=> (and (= (x371 340282366920938463463374607431768211455 x1809) x1069) (= (x371 1461501637330902918203684832716283019655932542975 x323) x1142) (= (x446 (+ x730 36)) x542) (= (x1015 (- x455 x730)) x920) (= (x446 (+ 68 x730)) x455) (= (x371 1461501637330902918203684832716283019655932542975 x693) x1522) (= x1118 (x446 (+ x730 4))) (= x1762 (= x1522 274184521717934524641157099916833587231)) (< 0 x1964)) (and (=> (and (= x920 x1217) (= 274184521717934524641157099916833587211 x774) (= 2835717307 x674) (= x1427 (x935 (x808 274184521717934524641157099916833587231))) (= 1 x1725) (= x754 (x1482 (x808 274184521717934524641157099916833587211) (x273 1) 0)) (= 32 x1892) (= x1666 x1069) (not (= 1889567281 x674)) (= 68 x1217) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1658) (= x479 x1275) (not (> 826074471 x674)) (= (x1025 x1253) x1770) (= 76450787359836037641860180984291677749980919077056822294353438043884394381312 x1288) (<= x1770 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x1641 (x1482 (x808 274184521717934524641157099916833587211) (x273 1) 0)) (< (+ x1770 x18) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (not x732) (>= x1770 0) (not (= 2514000705 x674)) (= (x1015 (- x1658 x1666)) x1667) (= x82 (+ x1546 x1198)) (= x1142 x479) (= (or (> x1862 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (< x1862 64) (= (<= x1862 57896044618658097711785492504343953926634992332820282019728792003956564819967) true))) x1507) (= x1862 (x1015 (- x1217 4))) (= x732 (< x1658 x1666)) (not (< x1217 4)) (= (x1482 (x808 x479) (x273 1) 0) x1253) x1762 (not x1507) (>= x1658 0) (not (= 826074471 x674)) (= x1198 x18) (= 274184521717934524641157099916833587211 x1004) (< 0 x1427) (>= 1461501637330902918203684832716283019655932542975 x479) (= x1666 x18) (= (x1530 x1641) x1658) (= x1546 x1770)) x1370) (=> (not x1762) x1081)))))
(assert (= (x910 (x808 x1169)) x1169))
(assert (=> (> (+ 10000 1) x418) (= (x808 x418) (x273 x418))))
(assert (x151 x429))
(assert (= (x910 (x273 20282409603651670423947251286015)) 20282409603651670423947251286015))
(assert (= x1060 (=> (= x1515 (or (> x524 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x524)) (> 0 x524)))) (and (=> (and (= x242 (x1230 x807 160)) (= (> x320 0) x1574) (= (x371 65535 x1595) x33) (= (x371 1461501637330902918203684832716283019655932542975 x807) x463) (= (x371 65535 x452) x1090) (= (x371 255 x1057) x466) (= x452 (x1230 x155 176)) x1515 (= x1659 (x371 65535 x669)) (= x1518 (x371 1461501637330902918203684832716283019655932542975 x155)) (= (x1230 x155 160) x1595) (= (x371 255 x242) x320) (or (and (= x927 1) (= 1 x912) x1574 (or (and (= (x1138 10 x320) x107) (not x118)) (and (= (< 1 x320) x1197) (= x324 (- (/ 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1587) (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1587))) (or (and (= 10 x1587) (= 1 x116) (not x1197)) (and (= x1463 (x1230 x320 1)) (= (= 0 x469) x1573) (= x699 (> x1463 1)) (not x699) (= (ite x1573 1 10) x116) (= 100 x1587) (= x469 (x371 1 x320)) x1197)) (= x107 x973) x118 (not (> x116 x324)) (= x973 (uninterp_mod (* x116 x1587) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (= (ite (> 78 x320) 1 0) x1505) (= (ite (< x320 32) 1 0) x1977) (= (x371 x912 x1505) x1115) (= (= (x527 x1115 x1942) 0) x118) (= x1942 (x371 x927 x1977))) (and (not x1574) (= 1 x107))) (= (x1230 x155 192) x669) (< 0 x466)) x1701) (=> (and (not x1515) (= 1 x8)) x275)))))
(assert (x591 x419))
(assert (x889 x1662 x72))
(assert (x591 x112))
(assert (x591 x1662))
(assert (x151 x720))
(assert (x591 x95))
(assert (x151 x1630))
(assert (= (=> (= (= 274184521717934524641157099916833587223 x362) x868) (and (=> (and (not (= x1985 826074471)) (= (x1015 (- x1933 4)) x1673) (>= x852 0) (= x1933 36) (= x1494 32) (= x1985 1889567281) (not (< x1933 4)) (= x1933 36) (= x546 1) (= (x935 (x808 274184521717934524641157099916833587223)) x1132) (= x1290 50942633119752846454219349998365661925608737367104304655302372697894809501696) (= x1212 274184521717934524641157099916833587211) (> x1132 0) (not x1901) (<= x852 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x852 (x1600 x893)) x868 (= x1901 (or (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1673) true) (< x1673 32)) (> x1673 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (= x893 (x1482 (x808 274184521717934524641157099916833587211) (x273 1) 0)) (not (< x1985 826074471))) x570) (=> (not x868) x372))) x211))
(assert (x154 x679 x671))
(assert (x151 x1805))
(assert (x151 x1109))
(assert (x151 x1688))
(assert (x151 x1729))
(assert (x151 x358))
(assert (= (x1074 x366) (ite (= x366 132) 274184521717934524641157099916833587211 (x1945 x366))))
(assert (= x341 (x910 (x808 x341))))
(assert (x151 x1442))
(assert (x591 x747))
(assert (= (ite (= x334 x1272) x536 (x979 x334)) (x1919 x334)))
(assert (x151 x1159))
(assert (x591 x1003))
(assert (x591 x1260))
(assert (x151 x679))
(assert (x151 x575))
(assert (x151 x333))
(assert (x151 x202))
(assert (= x394 (and x1151 x577)))
(assert (x151 x2003))
(assert (x151 x708))
(assert (x151 x1705))
(assert (x591 x770))
(assert (= (x219 x899) (ite (= x1811 x899) x1951 (x1407 x899))))
(assert (x151 x781))
(assert (x151 x587))
(assert (x151 x465))
(assert (x151 x1062))
(assert (x151 x112))
(assert (= x481 (and (not x1956) x522)))
(assert (x151 x1119))
(assert (x151 x766))
(assert (= x1243 (x910 (x808 x1243))))
(assert (x151 x1208))
(assert (= (x808 2514000705) (x273 2514000705)))
(assert (x151 x1018))
(assert (x151 x1620))
(assert (x151 x463))
(assert (x151 x931))
(assert (x151 x640))
(assert (x591 x1870))
(assert (x151 x667))
(assert (= (x910 (x273 3257672857)) 3257672857))
(assert (x151 x1082))
(assert (x1541 x1354 x87))
(assert (x151 x743))
(assert (x591 x792))
(assert (= (x273 1208925819614629174706176) (x808 1208925819614629174706176)))
(assert (x591 x1394))
(assert (= x1565 (or x584 (and x557 (not x144)))))
(assert (x151 x1487))
(assert (x151 x1723))
(assert (x151 x1282))
(assert (x151 x567))
(assert (x151 x1122))
(assert (= (=> (and (>= 1461501637330902918203684832716283019655932542975 x693) (not (= 3795249780 x1438)) (= x1714 128) (= (not (= 0 x780)) x1341) (= x13 0) (not (= x1438 3833100637)) (= x648 274184521717934524641157099916833587211) (= x693 x1946) (= x191 (= 274184521717934524641157099916833587231 x362)) (< 0 x1100) (not (= 3638949393 x1438)) (= x1438 3840337785) (>= x1377 0) (not (> 4 x874)) (= x362 (x371 1461501637330902918203684832716283019655932542975 x356)) (not (= x1438 3695885053)) (= x780 (x371 16 x1377)) (= x1951 x1102) (= x1620 (x1015 (- x874 4))) (not x1341) (= x121 x111) (not (> 3253611544 x1438)) (not (< x1438 2068668150)) (not (or (> x1620 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (> 128 x1620) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1620) true)))) (not (> 3638949393 x1438)) (= x1014 x323) (= (x935 (x808 274184521717934524641157099916833587211)) x1100) (> 256 x1377) (>= 1461501637330902918203684832716283019655932542975 x323) (< x1438 3889878717) (<= x1377 255)) (and (=> (and x191 (= 1889567281 x445) (= x251 (x935 (x808 274184521717934524641157099916833587231))) (= x553 (x1015 (- x1802 4))) (< 0 x251) (= x546 1) (not (> 826074471 x445)) (= x1802 36) (= x1494 32) (>= x330 0) (= x1689 274184521717934524641157099916833587211) (not (= 826074471 x445)) (= (or (> x553 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (< x553 32) (= true (<= x553 57896044618658097711785492504343953926634992332820282019728792003956564819967)))) x1173) (<= x330 115792089237316195423570985008687907853269984665640564039457584007913129639935) (not x1173) (= x380 50942633119752846454219349998365661925608737367104304655302372697894809501696) (= (x1482 (x808 274184521717934524641157099916833587211) (x273 1) 0) x1797) (= (x1567 x1797) x330) (not (> 4 x1802)) (= x1802 36)) x570) (=> (not x191) x442))) x1953))
(assert (= (and (not x868) x1859) x907))
(assert (x151 x302))
(assert (x151 x767))
(assert (x151 x1946))
(assert (x151 x1213))
(assert (x151 x390))
(assert (x195 x1221 x846))
(assert (x151 x815))
(assert (x151 x710))
(assert (x151 x1861))
(assert (x1992 274184521717934524641157099916833587231))
(assert (x151 x1089))
(assert (= (x1280 x797) 0))
(assert (= (x273 20282409603651670423947251286015) (x808 20282409603651670423947251286015)))
(assert (x151 x419))
(assert (x151 x818))
(assert (x591 x1487))
(assert (= (ite (= x1032 x1811) x1951 (x1407 x1032)) (x219 x1032)))
(assert (= (x808 599290589) (x273 599290589)))
(assert (x151 x1422))
(assert (x591 x1354))
(assert (x151 x147))
(assert (= (x1074 x899) (ite (= x899 132) 274184521717934524641157099916833587211 (x1945 x899))))
(assert (x591 x884))
(assert (x591 16))
(assert (x1992 274184521717934524641157099916833587235))
(assert (= 826074471 (x910 (x273 826074471))))
(assert (x151 x963))
(assert (x151 x927))
(assert (= (and (not x888) x907) x447))
(assert (x151 x1411))
(assert (x591 x912))
(assert (x151 x800))
(assert (= (x1484 x6) (ite (= x6 x1153) 115197700812830431890159100217698998050002284567939525164234024451216521560064 (x1469 x6))))
(assert (x151 x1768))
(assert (x1501 x1485 x115))
(assert (= (x1230 x155 160) (- (/ x155 1461501637330902918203684832716283019655932542976) (uninterp_frac x155 1461501637330902918203684832716283019655932542976))))
(assert (x591 x192))
(assert (x1412 x1086 x1061))
(assert (x151 x1433))
(assert (= (x273 18446744073709551615) (x808 18446744073709551615)))
(assert (= (x910 (x808 274184521717934524641157099916833587244)) 274184521717934524641157099916833587244))
(assert (x151 x1661))
(assert (=> (< (- x687 1) 10000) (= (x273 x687) (x808 x687))))
(assert (x151 x510))
(assert (=> (> (+ 10000 1) x715) (= (x808 x715) (x273 x715))))
(assert (= (x273 65535) (x808 65535)))
(assert (x151 x1158))
(assert (x151 x1131))
(assert (= x283 x932))
(assert (= (x273 117300739) (x808 117300739)))
(assert (= (x273 950698303) (x808 950698303)))
(assert (x151 x942))
(assert (= 1099511627775 (x910 (x273 1099511627775))))
(assert (x195 x197 x1586))
(assert (x151 x1150))
(assert (x151 x1582))
(assert (x151 x1227))
(assert (x151 x313))
(assert (= (=> (and (= x1771 (not (= 0 x1513))) (= x1513 (x371 1 x885))) (and (=> x1771 x1060) (=> (and (not x1771) (= x1416 x524)) x25))) x1266))
(assert (x151 x1286))
(assert (x151 x1315))
(assert (x151 x159))
(assert (x151 x1311))
(assert (x151 x103))
(assert (x591 x1519))
(assert (x151 x1242))
(assert (= 274184521717934524641157099916833587233 (x910 (x808 274184521717934524641157099916833587233))))
(assert (x151 x23))
(assert (= (ite (= x1153 x1967) 115197700812830431890159100217698998050002284567939525164234024451216521560064 (x1469 x1967)) (x1484 x1967)))
(assert (= (x273 1208925819614629174706175) (x808 1208925819614629174706175)))
(assert (x151 x450))
(assert (= (=> (and (= (ite x1612 1 0) x15) (= x1775 (= x8 0)) (= x1612 (not x1775))) (=> (= (not (= x15 0)) x1024) x231)) x275))
(assert (= x372 (=> (= (= x362 274184521717934524641157099916833587244) x888) (and (=> (and (= x291 (x935 (x808 274184521717934524641157099916833587244))) (= x587 36) (or (and (= (or (and (> 0 x1603) (= true (<= x1603 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1603)) x1631) (= x215 x1294) (= x215 (* x117 x1735)) (= x1294 x1728) (< x117 18446744073709551616) (>= 18446744073709551615 x117) (>= x117 0) x551 (not x1631) (= x1735 (x371 20282409603651670423947251286015 x1603)) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (* x117 x1735))) (and (not x551) (= x1728 0))) (= x1904 (x1015 (- x587 4))) (= 1889567281 x493) (< 0 x291) (<= x915 20282409603651670423947251286015) (= x947 50942633119752846454219349998365661925608737367104304655302372697894809501696) (= (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1904) (and (= (<= x1904 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (< x1904 32))) x1798) (= 32 x1494) (= x1826 274184521717934524641157099916833587211) (= x551 (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1603) true) (< 0 x1603))) (= x342 (x371 20282409603651670423947251286015 x1728)) (>= x915 0) x888 (> 20282409603651670423947251286016 x915) (= x587 36) (not (< x587 4)) (= x1603 (x1425 x915)) (> 3119561463 x493) (= x915 (x869 x1134)) (= x1134 (x1482 (x808 274184521717934524641157099916833587211) (x273 5) 0)) (not x1798) (= 1 x546) (not (< x493 1889567281))) x570) (=> (not x888) x1053)))))
(assert (x889 x1861 x902))
(assert (= (x910 (x273 57896044618658097711785492504343953926634992332820282019728792003956564819967)) 57896044618658097711785492504343953926634992332820282019728792003956564819967))
(assert (x151 x1083))
(assert (x151 x21))
(assert (x151 x1098))
(assert (x1501 x61 x494))
(assert (x151 x1937))
(assert (= (x1552 x334) 0))
(assert (x433 x669 x1724))
(assert (= (or x954 (and x1998 (not x1713))) x584))
(assert (x151 x901))
(assert (x151 x1004))
(assert (x151 x242))
(assert (= x857 (or (and x969 x410) (and x1454 x1608))))
(assert (x1541 x1458 x1581))
(assert (x151 x673))
(assert (x151 x1035))
(assert (= (x910 (x808 x130)) x130))
(assert (= (x273 16156842317565293874272834530371880720966471053262404558597773956279093428224) (x808 16156842317565293874272834530371880720966471053262404558597773956279093428224)))
(assert (= (x808 274184521717934524641157099916833587223) (x273 274184521717934524641157099916833587223)))
(assert (x151 x687))
(assert (x151 x1033))
(assert (x591 x38))
(assert (x151 x884))
(assert (x151 x828))
(assert (x151 x1124))
(assert (x151 x1026))
(assert (x433 x914 x2))
(assert (x151 x458))
(assert (x151 x1561))
(assert (x591 x1580))
(assert (x361 x818))
(assert (x151 x792))
(assert (= (x808 3695885053) (x273 3695885053)))
(assert (x151 x32))
(assert (x1541 x1003 x201))
(assert (x151 x746))
(assert (x151 x897))
(assert (x151 x1898))
(assert (x591 x1891))
(assert (x151 x91))
(assert (x151 x1617))
(assert (x151 x469))
(assert (x151 x176))
(assert (= (x910 (x273 18446744073709551615)) 18446744073709551615))
(assert (x151 x1642))
(assert (x591 18446744073709551615))
(assert (x1419 x1394))
(assert (= (x1919 x1032) (ite (= x1032 x1272) x536 (x979 x1032))))
(assert (x151 x1579))
(assert (x151 x1463))
(assert (x151 x1609))
(assert (x151 x1995))
(assert (x151 x1822))
(assert (x151 x550))
(assert (= (x910 (x273 2362581449)) 2362581449))
(assert (x151 x1673))
(assert (x1541 x1124 x329))
(assert (x151 x855))
(assert (x591 x1894))
(assert (x151 x1339))
(assert (x151 x1011))
(assert (= 0 (x1552 x1032)))
(assert (x151 x183))
(assert (= x1081 (=> (= x662 (= x1522 274184521717934524641157099916833587227)) (and (=> (and (= x1825 68) (not (= x962 2514000705)) (not x105) (< (+ x728 x1838) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x962 2835717307) (= (x1482 (x808 274184521717934524641157099916833587211) (x273 1) 0) x810) (= 76450787359836037641860180984291677749980919077056822294353438043884394381312 x1510) (<= 0 x881) (not (= 826074471 x962)) (= x130 x249) (= x1069 x1441) (= x1838 x1732) (= (x1079 x499) x1838) (= x1741 (x935 (x808 274184521717934524641157099916833587227))) (not (= 1889567281 x962)) (= 274184521717934524641157099916833587211 x583) (= (x1015 (- x1825 4)) x632) (= (< x881 x1441) x911) (= (or (and (< x632 64) (= (<= x632 57896044618658097711785492504343953926634992332820282019728792003956564819967) true)) (> x632 57896044618658097711785492504343953926634992332820282019728792003956564819967)) x105) (not (> 826074471 x962)) (>= 1461501637330902918203684832716283019655932542975 x130) (= x474 x728) (= x1663 (x1015 (- x881 x1441))) (= x920 x1825) (not (> 4 x1825)) (not x911) x662 (< 0 x1741) (= 1 x1725) (= x145 (x1482 (x808 274184521717934524641157099916833587211) (x273 1) 0)) (= x1441 x728) (= 274184521717934524641157099916833587211 x659) (= (x1875 x810) x881) (= x1892 32) (= (+ x474 x1732) x1902) (= (x1482 (x808 x130) (x273 1) 0) x499) (>= x1838 0) (= x130 x1142) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x881) (<= x1838 115792089237316195423570985008687907853269984665640564039457584007913129639935)) x1370) (=> (not x662) x1402)))))
(assert (x151 x1334))
(assert (x591 x690))
(assert (x151 x625))
(assert (x591 x1727))
(assert (x151 x475))
(assert (x151 x396))
(assert (x151 x592))
(assert (x151 x357))
(assert (x591 x1091))
(assert (x151 x982))
(assert (= x598 (x910 (x808 x598))))
(assert (x151 x524))
(assert (x151 x1290))
(assert (= (x1074 x1032) (ite (= x1032 132) 274184521717934524641157099916833587211 (x1945 x1032))))
(assert (x591 x633))
(assert (x151 x1028))
(assert (x151 x1575))
(assert (x151 x209))
(assert (x151 x1503))
(assert (x151 x960))
(assert (= (x273 340282366920938463463374607431768211455) (x808 340282366920938463463374607431768211455)))
(assert (x179 x1105 x1752 x1478 x1597))
(assert (x1501 x818 x1803))
(assert (= (x764 x260) 0))
(assert (x151 x55))
(assert (x151 x760))
(assert (x151 x1991))
(assert (x151 x631))
(assert (x591 x1057))
(assert (x151 x573))
(assert (x433 x1403 x1968))
(assert (x151 x1770))
(assert (x151 x536))
(assert (x151 x1578))
(assert (= x595 true))
(assert (x151 x1563))
(assert (x151 x1349))
(assert (x591 x547))
(assert (x151 x495))
(assert (x195 x188 x208))
(assert (x151 x670))
(assert (x151 x1156))
(assert (x151 x693))
(assert (x151 x1111))
(assert (x151 x1297))
(assert (x151 x1117))
(assert (x591 x1388))
(assert (x889 x912 x1505))
(assert (x151 x1930))
(assert (x1992 x727))
(assert (x1992 x130))
(assert (x151 x1394))
(assert (x154 x884 x944))
(assert (x591 x614))
(assert (x154 x1580 x1331))
(assert (x151 x1072))
(assert (x151 x212))
(assert (x151 x735))
(assert (= (x1484 x366) (ite (= x366 x1153) 115197700812830431890159100217698998050002284567939525164234024451216521560064 (x1469 x366))))
(assert (x151 x1905))
(assert (x151 x1084))
(assert (= (x910 (x808 x715)) x715))
(assert (x361 x1065))
(assert (x591 x1318))
(assert (x1501 x1176 x740))
(assert (= (ite (= x863 x1272) x536 (x979 x863)) (x1919 x863)))
(assert (x151 x722))
(assert (x151 x418))
(assert (x195 x221 x1300))
(assert (x151 x902))
(assert (x151 x1194))
(assert (x151 x1695))
(assert (x151 x393))
(assert (= (=> (and (= x317 (x371 1461501637330902918203684832716283019655932542975 x716)) (= 544 x1570) (= 800 x1754) (= x575 (x371 18446744073709551615 x192)) (= (x371 1461501637330902918203684832716283019655932542975 x943) x621) (= (x1482 (x808 x687) (x273 6) 0) x1289) (>= 340282366920938463463374607431768211455 x1248) (= (x508 x990) x1248) (= (x371 1461501637330902918203684832716283019655932542975 x984) x687) (= (x371 18446744073709551615 x614) x988) (>= x1248 0) (= (x470 608) x943) (= x192 (x1230 x807 168)) (< x1248 340282366920938463463374607431768211456) (= (= x621 274184521717934524641157099916833587235) x929) (= (x1482 (x808 x317) x1289 0) x990) (= x716 (x692 576))) (and (=> (not x929) x1535) (=> (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x67) (= (x805 224) x1013) (= (x805 192) x1467) (= (x935 (x808 274184521717934524641157099916833587235)) x917) (= x1005 (x805 256)) (<= 0 x1868) x929 (= x909 1) (>= x788 0) (>= x110 0) (not (= 2362581449 x397)) (= x397 4272920204) (<= 0 x848) (not (< x1366 4)) (< x1868 1208925819614629174706176) (not (> 2362581449 x397)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x110) (not (= x397 4062139261)) (<= x788 1208925819614629174706175) (= (x805 160) x1602) (= x1869 (x1482 (x808 x1169) (x273 1) 0)) (< x788 1208925819614629174706176) (= x67 (x17 x1869)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x848) (= (x805 160) x1286) (= (x805 128) x815) (not (= x397 3257672857)) (= x652 (x805 256)) (>= x67 0) (= 4 x1366) (< 0 x917) (>= 1208925819614629174706175 x1868) (= (x805 128) x800) (= 115197700812830431890159100217698998050002284567939525164234024451216521560064 x428) (= x1366 4) (= x1579 (x805 192)) (= x1165 (x805 224)) (= x1434 160)) x626))) x5))
(assert (x591 x1550))
(assert (x151 x882))
(assert (x151 x731))
(assert (x151 x1322))
(assert (= (x541 x432) 0))
(assert (x591 x984))
(assert (x1992 x715))
(assert (x151 x1305))
(assert (= (x910 (x273 115792089237316195423570985008687907853269984665640564039457584007913129639904)) 115792089237316195423570985008687907853269984665640564039457584007913129639904))
(assert (x1992 274184521717934524641157099916833587223))
(assert (= (x273 76450787359836037641860180984291677749980919077056822294353438043884394381312) (x808 76450787359836037641860180984291677749980919077056822294353438043884394381312)))
(assert (x591 x1505))
(assert (= (x219 x334) (ite (= x1811 x334) x1951 (x1407 x334))))
(assert (x151 x921))
(assert (= (x1074 x904) (ite (= x904 132) 274184521717934524641157099916833587211 (x1945 x904))))
(assert (not x802))
(assert (x151 x981))
(assert (x591 x61))
(assert (x151 x1815))
(assert (=> (> (+ 10000 1) x1243) (= (x273 x1243) (x808 x1243))))
(assert (x151 x996))
(assert (x151 x1867))
(assert (x151 x1676))
(assert (= x564 (and x289 (not x1027))))
(assert (x151 x1342))
(assert (x151 x725))
(assert (x151 x648))
(assert (x151 x1064))
(assert (x151 x365))
(assert (x151 x309))
(assert (= x1643 (=> (and (not x523) (= x523 (< 1 x1291)) (= x1291 (x371 255 x1057)) (= x605 x921)) x1593)))
(assert (x151 x739))
(assert (x151 x569))
(assert (=> (< (- x561 1) 10000) (= (x808 x561) (x273 x561))))
(assert (x151 x1184))
(assert (x151 x153))
(assert (x591 x606))
(assert (x1412 x323 x1209))
(assert (x151 x806))
(assert (x889 x1815 x1043))
(assert (= (x1230 x679 1) (- (/ x679 2) (uninterp_frac x679 2))))
(assert (= true x1461))
(assert (x151 x1611))
(assert (x151 x1542))
(assert (x151 x190))
(assert (x151 x424))
(assert (x591 x505))
(assert (x151 x955))
(assert (x591 x320))
(assert (x151 x1846))
(assert (x151 x848))
(assert (x151 x655))
(assert (x151 x1201))
(assert (x151 x426))
(assert (=> (> (+ 10000 1) x984) (= (x808 x984) (x273 x984))))
(assert (x151 x356))
(assert (x591 x209))
(assert (x151 x1238))
(assert (x151 x1462))
(assert (= 950698303 (x910 (x273 950698303))))
(assert (x151 x1626))
(assert (x361 x1485))
(assert (x151 x1467))
(assert (x1850 x337))
(assert (x151 x874))
(assert (x151 x167))
(assert (x433 x9 x604))
(assert (x591 x1809))
(assert (x151 x1634))
(assert (x195 x1129 x526))
(assert (=> (< (- x1562 1) 10000) (= (x273 x1562) (x808 x1562))))
(assert (x151 x1057))
(assert (= 0 (x282 x1358)))
(assert (x889 x1878 x213))
(assert (x151 x332))
(assert (x151 x227))
(assert (x151 x1294))
(assert (x151 x1727))
(assert (x151 x516))
(assert (x151 x920))
(assert (x889 x1671 x308))
(assert (x151 x637))
(assert (x151 x338))
(assert (x151 x1221))
(assert (x151 x1785))
(assert (x591 20282409603651670423947251286015))
(assert (x151 x205))
(assert (x151 x337))
(assert (x154 x1531 x1092))
(assert (= (x273 3889878717) (x808 3889878717)))
(assert (x151 x652))
(assert (x151 x1086))
(assert (x151 x10))
(assert (= (and (not x1651) x533) x704))
(assert (x151 x1427))
(assert (= x1549 (or (and x1644 (not x1455)) x263)))
(assert (x151 x1374))
(assert (x1850 x1480))
(assert (x591 x1124))
(assert (= (x910 (x273 115197700812830431890159100217698998050002284567939525164234024451216521560064)) 115197700812830431890159100217698998050002284567939525164234024451216521560064))
(assert (x1850 x686))
(assert (x151 x1794))
(assert (x151 x1459))
(assert (x151 x1884))
(assert (= (x910 (x273 1110625635)) 1110625635))
(assert (x151 x1217))
(assert (x151 x1441))
(assert (= (x808 115792089237316195423570985008687907853269984655499359237631748795939503996928) (x273 115792089237316195423570985008687907853269984655499359237631748795939503996928)))
(assert (x151 x989))
(assert (x1541 x1809 x29))
(assert (= (x808 50942633119752846454219349998365661925608737367104304655302372697894809501696) (x273 50942633119752846454219349998365661925608737367104304655302372697894809501696)))
(assert (x151 x776))
(assert (x151 x1199))
(assert (= (x808 4062139261) (x273 4062139261)))
(assert (x151 x1745))
(assert (x151 x1037))
(assert (x151 x791))
(assert (x151 x1142))
(assert (x591 x818))
(assert (x151 x774))
(assert (=> (> (+ 10000 1) x1729) (= (x273 x1729) (x808 x1729))))
(assert (= 4272920204 (x910 (x273 4272920204))))
(assert (x591 x669))
(assert (x151 x18))
(assert (x151 x382))
(assert (x151 x141))
(assert (x151 x1031))
(assert (x591 x1656))
(assert (x151 x1052))
(assert (x151 x466))
(assert (x179 x147 x113 x182 x1177))
(assert (x151 x1216))
(assert (x151 x964))
(assert (= (x1552 x904) 0))
(assert (= x504 (=> (and (= (and (< 0 x1458) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1458) true)) x1293) (= (x773 160) x1458) (= x1738 0) (= (x773 256) x707) (= x258 (x773 128)) (= x98 (x371 255 x1057)) (>= 1208925819614629174706175 x707) (= x1455 (< 0 x98)) (not (ite x971 x971 (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1458) true) (> x1458 170141183460469231731687303715884105727)))) (= (uninterp_mod (* (x1225 x1354) x278) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x524) (= x278 (x371 340282366920938463463374607431768211455 x1458)) (= x971 (not x1293)) (<= x258 1208925819614629174706175)) (and (=> (and (= x524 x1790) (not x1455)) x120) (=> x1455 x1266)))))
(assert (x151 x1848))
(assert (= (x808 274184521717934524641157099916833587231) (x273 274184521717934524641157099916833587231)))
(assert (x151 x480))
(assert (x1501 x112 x762))
(assert (x151 x943))
(assert (= (x910 (x273 76450787359836037641860180984291677749980919077056822294353438043884394381312)) 76450787359836037641860180984291677749980919077056822294353438043884394381312))
(assert (x151 x1160))
(assert (x1412 x716 x1497))
(assert (= x1160 (x910 (x808 x1160))))
(assert (x151 x1232))
(assert (x151 x484))
(assert (x151 x1959))
(assert (x1992 274184521717934524641157099916833587244))
(assert (x1992 x984))
(assert (x591 x1509))
(assert (x151 x27))
(assert (x151 x1016))
(assert (= (x273 65536) (x808 65536)))
(assert (x151 x1205))
(assert (x361 x1350))
(assert (x151 x1183))
(assert (x591 x1323))
(assert (x151 x1246))
(assert (x151 x1894))
(assert (x1541 x1604 x319))
(assert (x151 x752))
(assert (x151 x1878))
(assert (= (x273 57896044618658097711785492504343953926634992332820282019728792003956564819967) (x808 57896044618658097711785492504343953926634992332820282019728792003956564819967)))
(assert (x151 x1105))
(assert (x195 x1428 x373))
(assert (= (=> (and (not x1877) (= x1877 (< 1 x1848)) (= x1848 (x371 255 x1057)) (= x1790 x1416)) x120) x25))
(assert (x591 x853))
(assert (x151 x230))
(assert (x151 x1125))
(assert (x151 x719))
(assert (= (x273 404098525) (x808 404098525)))
(assert (x151 x1692))
(assert (x151 x1926))
(assert (x151 x1401))
(assert (x591 x200))
(assert (=> (> (+ 10000 1) x1273) (= (x808 x1273) (x273 x1273))))
(assert (= (x910 (x808 x1885)) x1885))
(assert (x591 x233))
(assert (= (x808 20282409603651670423947251286016) (x273 20282409603651670423947251286016)))
(assert (= (uninterp_mod (x1138 2 x415) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x1856 1 x415)))
(assert (x151 x99))
(assert (x151 x221))
(assert (= (x910 (x273 274184521717934524641157099916833587244)) 274184521717934524641157099916833587244))
(assert (= x262 x1644))
(assert (x151 x1969))
(assert (x151 x1196))
(assert (x591 x1176))
(assert (x151 x1368))
(assert (x151 x689))
(assert (= (x273 340282366920938463463374607431768211456) (x808 340282366920938463463374607431768211456)))
(assert (= 2835717307 (x910 (x273 2835717307))))
(assert (x151 x937))
(assert (x151 x1562))
(assert (x151 x1942))
(assert (x151 x1475))
(assert (x151 x1264))
(assert (x151 x315))
(assert (x151 x206))
(assert (= x1729 (x910 (x808 x1729))))
(assert (x1992 x317))
(assert (x591 x1671))
(assert (x151 x1725))
(assert (x151 x327))
(assert (x151 x761))
(assert (x151 x1446))
(assert (x151 x716))
(assert (x151 x1666))
(assert (x151 x143))
(assert (x151 x612))
(assert (x1992 274184521717934524641157099916833587233))
(assert (x151 x1009))
(assert (x151 x1531))
(assert (x591 x197))
(assert (x151 x1317))
(assert (= 3253611544 (x910 (x273 3253611544))))
(assert (x151 x712))
(assert (x151 x453))
(assert (x151 x1133))
(assert (= x994 (and (not x1709) x394)))
(assert (x151 x674))
(assert (x151 x890))
(assert (x151 x199))
(assert (= (x910 (x808 x1342)) x1342))
(assert (x151 x385))
(assert (= (x808 4272920204) (x273 4272920204)))
(assert (= (x910 (x273 65536)) 65536))
(assert (x1992 x1885))
(assert (x151 x940))
(assert (x151 x47))
(assert (x151 x1698))
(assert (= (=> (and (= x511 (x446 (+ 288 x1926))) (= (x371 1461501637330902918203684832716283019655932542975 x693) x926) (= x766 (x446 (+ x1768 64))) (= (x446 (+ 64 x32)) x1707) (= (= 274184521717934524641157099916833587235 x1159) x969) (= x1223 (x371 18446744073709551615 x1129)) (= (x371 18446744073709551615 x1656) x1551) (= x926 x1432) (= x1432 (x371 1461501637330902918203684832716283019655932542975 x209)) (= (x446 (+ x1000 64)) x32) (= x1768 (x446 (+ 64 x1537))) (= (x1572 x2003) x209) (= x1153 (x446 (+ x1926 512))) (= (x371 1461501637330902918203684832716283019655932542975 x1627) x1159) (= x1537 (x446 (+ 64 x1558))) (= x2003 (x446 (+ x1926 288))) (= (x446 (+ x1926 320)) x797) (= x1627 (x1769 x797)) (= x1683 4) (= x1000 (x446 (+ 64 x511))) (= (x1230 x807 168) x1656)) (and (=> (not x969) x64) (=> (and (>= x848 0) (= x1175 (x446 (+ 352 x1558))) (= x1896 (x1120 192)) (<= x110 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x1476 115197700812830431890159100217698998050002284567939525164234024451216521560064) (= x936 (x1120 224)) (<= 0 x788) (= x47 4272920204) (< 0 x1241) (= x1274 (x1482 (x808 x1169) (x273 1) 0)) (<= x1634 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x1010 1) (not (= 2362581449 x47)) (< x1868 1208925819614629174706176) (= x475 (x1120 256)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x848) (>= x1634 0) (<= 0 x1868) (not (> 4 x796)) (= x796 4) (= 160 x325) (= x426 (x1120 192)) (>= 1208925819614629174706175 x1868) (= x573 (x446 (+ 384 x1558))) (= (x1120 160) x772) (>= x110 0) (= x796 x1683) (>= 1208925819614629174706175 x788) (= (x1120 128) x1072) (= x1109 (x446 (+ 288 x1558))) (not (= x47 4062139261)) (= x1241 (x935 (x808 274184521717934524641157099916833587235))) (= x1306 (x1120 256)) (> 1208925819614629174706176 x788) (= x1805 (x1120 160)) (= (x17 x1274) x1634) x969 (not (= x47 3257672857)) (= x274 (x446 (+ x1558 320))) (= (x1120 128) x1781) (= x1470 (x1120 224)) (not (< x47 2362581449))) x768))) x1607))
(assert (x154 x885 x1148))
(assert (x361 x864))
(assert (x151 x795))
(assert (x151 x254))
(assert (x151 x535))
(assert (= 3795249780 (x910 (x273 3795249780))))
(assert (= (x808 3253611544) (x273 3253611544)))
(assert (x151 x1102))
(assert (x151 x949))
(assert (x1850 x501))
(assert (x151 x73))
(assert (x151 x974))
(assert (x151 x1152))
(assert (x151 x1169))
(assert (x151 x1365))
(assert (x151 x425))
(assert (x151 x988))
(assert (x151 x1020))
(assert (x1412 x1487 x1521))
(assert (= (=> (and (not (= x882 0)) (= (x446 (+ x655 512)) x1558) (= (= x55 0) x93) (= (x446 (+ 256 x655)) x1926) (= (x371 65535 x914) x1759) (= x1147 (not x93)) (= (x1469 x1963) x55) (= x655 (x446 (+ x1963 x956))) (= x505 (x1230 x807 160)) (= x272 0) (= (< 0 x91) x405) (not (or (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x675)) (< x675 32)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x675))) (= x1976 (x371 1461501637330902918203684832716283019655932542975 x807)) (= x914 (x1230 x155 160)) (= x1473 (x1230 x155 176)) (< 0 x55) (= (x371 1461501637330902918203684832716283019655932542975 x155) x665) (< 0 x30) (= x1323 (x446 (+ x675 31))) (= (x371 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1323) x956) (= x1787 (x371 65535 x1473)) (= (x1230 x155 192) x1318) (= (ite x1147 1 0) x1247) (= (x371 255 x1057) x30) (= (x371 255 x1057) x332) (> x332 0) (= (x371 65535 x1318) x1374) (or (and (= (x371 x1662 x72) x739) x405 (= 1 x1675) (= x1662 1) (or (and (= (x1138 10 x91) x1129) (not x363)) (and (= x1255 (uninterp_mod (* x340 x58) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) x363 (= (- (/ 115792089237316195423570985008687907853269984665640564039457584007913129639935 x58) (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x58)) x830) (not (< x830 x340)) (= x1955 (< 1 x91)) (or (and (= (x1230 x91 1) x85) (= (= x206 0) x203) (= (< 1 x85) x1779) (not x1779) x1955 (= 100 x58) (= (ite x203 1 10) x340) (= (x371 1 x91) x206)) (and (= x340 1) (= x58 10) (not x1955))) (= x1255 x1129))) (= x606 (ite (> 78 x91) 1 0)) (= (= (x527 x59 x739) 0) x363) (= x59 (x371 x1675 x606)) (= x72 (ite (> 32 x91) 1 0))) (and (not x405) (= x1129 1))) (= x55 x1247) (= x91 (x371 255 x505))) x1607) x1601))
(assert (x151 x59))
(assert (x151 x1660))
(assert (x591 x927))
(assert (x1850 x607))
(assert (= (x910 (x808 x1487)) x1487))
(assert (x591 x1630))
(assert (x151 x1405))
(assert (x151 x1640))
(assert (x591 x1155))
(assert (x151 x1260))
(assert (x151 x1826))
(assert (= x1760 (or (and x1709 x394) (and x994 x1226))))
(assert (x151 x136))
(assert (x151 x180))
(assert (x151 x193))
(assert (x1501 x1196 x1285))
(assert (x151 x784))
(assert (x1501 x940 x1872))
(assert (x151 x1519))
(assert (= 1889567281 (x910 (x273 1889567281))))
(assert (x591 x1086))
(assert (x151 x360))
(assert (x151 x412))
(assert (= (x1230 x807 168) (- (/ x807 374144419156711147060143317175368453031918731001856) (uninterp_frac x807 374144419156711147060143317175368453031918731001856))))
(assert (= x1562 (x910 (x808 x1562))))
(assert (x151 x1237))
(assert (= (x808 1889567281) (x273 1889567281)))
(assert (= (=> (and (>= 1208925819614629174706175 x1326) (= x468 (x371 18446744073709551615 x188)) (= x73 (x1015 (- 57896044618658097711785492504343953926634992332820282019728792003956564819968 x617))) (= x38 (ite (not x1545) 1 0)) (= x725 (x1015 (- 57896044618658097711785492504343953926634992332820282019728792003956564819967 x617))) (>= 1208925819614629174706175 x1984) (= x382 0) (= x825 0) (= (x446 (+ x622 x617)) x1339) (= (or (and (< x617 0) (= true (<= x617 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (> x617 57896044618658097711785492504343953926634992332820282019728792003956564819967)) x1545) (< (* x1994 x468) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= (x371 340282366920938463463374607431768211455 x1124) x1338) (= x729 (* x468 x1994)) (not (ite x817 x817 (and (< 170141183460469231731687303715884105727 x1124) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1124))))) (not (or (> x1434 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (< x1434 160) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1434))))) (= (x842 672) x188) (= x450 (ite (or (and (> x725 57896044618658097711785492504343953926634992332820282019728792003956564819967) (<= x622 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (and (> x622 x725) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x622) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x725)))) 1 0)) (= (x92 928) x1326) (= (x1796 640) x1680) (= x817 (not x127)) (= (x92 832) x1124) (= (x371 x38 x450) x825) (= x921 x1339) (= (x92 800) x1984) (= x127 (and (< 0 x1124) (= (<= x1124 57896044618658097711785492504343953926634992332820282019728792003956564819967) true))) (= (x371 x1671 x308) x382) (not (> x622 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (= x308 (ite (or (and (> x622 57896044618658097711785492504343953926634992332820282019728792003956564819967) (<= x73 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (and (< x622 x73) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x73) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x622)))) 1 0)) (not (= x909 0)) (= (ite (or (> x617 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (< x617 0) (= (<= x617 57896044618658097711785492504343953926634992332820282019728792003956564819967) true))) 1 0) x1671) (= (uninterp_mod (* x1248 x1338) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x1994) (= x622 x729)) x1643) x626))
(assert (x151 x853))
(assert (= x1858 (and x476 x1571)))
(assert (= x1154 (and (not x662) x305)))
(assert (x151 x798))
(assert (x151 x1934))
(assert (= x88 (or (and (not x1515) x482) x1549)))
(assert (= 3889878717 (x910 (x273 3889878717))))
(assert (x151 x1254))
(assert (x151 x1892))
(assert (x151 x1204))
(assert (x151 x744))
(assert (x151 x745))
(assert (x1501 x1065 x711))
(assert (x151 x1964))
(assert (x151 x233))
(assert (= (x910 (x808 x418)) x418))
(assert (x151 x837))
(assert (x151 x1326))
(assert (x151 x728))
(assert (x151 x1896))
(assert (x151 x249))
(assert (x151 x793))
(assert (x151 x918))
(assert (x151 x1671))
(assert (x151 x1185))
(assert (x151 x258))
(assert (x151 x1181))
(assert (x591 x1444))
(assert (x151 x839))
(assert (x151 x1182))
(assert (x591 x147))
(assert (x151 x984))
(assert (x591 x242))
(assert (x151 x1492))
(assert (x151 x1272))
(assert (= (x808 18446744073709551616) (x273 18446744073709551616)))
(assert (x591 x450))
(assert (x889 x1068 x1569))
(assert (=> (> (+ 10000 1) x1169) (= (x273 x1169) (x808 x1169))))
(assert (x151 x386))
(assert (x151 x155))
(assert (x151 x325))
(assert (x151 x1722))
(assert (x151 x1915))
(assert (= (x1230 x91 1) (- (/ x91 2) (uninterp_frac x91 2))))
(assert (x151 x675))
(assert (x591 x1878))
(assert (=> (> (+ 10000 1) x270) (= (x808 x270) (x273 x270))))
(assert (x151 x1739))
(assert (x151 x84))
(assert (x151 x256))
(assert (x151 x1494))
(assert (x151 x1091))
(assert (x1412 x943 x1865))
(assert (x179 x1550 x1684 x650 x1106))
(assert (x154 x320 x819))
(assert (x151 x581))
(assert (x151 x1603))
(assert (x151 x956))
(assert (x151 x1983))
(assert (x151 x1292))
(assert (x151 x1219))
(assert (x151 x1014))
(assert (x151 x803))
(assert (x151 x501))
(assert (x151 x428))
(assert (x151 x1468))
(assert (x151 x614))
(assert (x151 x532))
(assert (x151 x992))
(assert (= (and x529 (not x615)) x522))
(assert (x151 x1614))
(assert (= (and (not x872) x1154) x472))
(assert (= x786 (=> (and (= (x371 1 x1580) x1418) (= x930 (not (= x1418 0)))) (and (=> x930 x1526) (=> (and (not x930) (= x220 x960) (= x1327 x458)) x544)))))
(assert (x151 x1558))
(assert (x151 x1685))
(assert (x1501 x1676 x1256))
(assert (= 274184521717934524641157099916833587231 (x910 (x808 274184521717934524641157099916833587231))))
(assert (x179 x1323 x1900 x244 x207))
(assert (= (x1230 x155 192) (- (/ x155 6277101735386680763835789423207666416102355444464034512896) (uninterp_frac x155 6277101735386680763835789423207666416102355444464034512896))))
(assert (x151 x1627))
(assert (x151 x1928))
(assert (x591 x1861))
(assert (x151 x1524))
(assert (x151 x1413))
(assert (x151 x1166))
(assert (x151 x362))
(assert (x151 x287))
(assert (x151 x1689))
(assert (x151 x316))
(assert (x151 x286))
(assert (x889 x38 x450))
(assert (= (and x144 x557) x1998))
(assert (= (=> (and (= x1532 x1327) (= (< 1 x1381) x173) (= (x371 255 x1057) x1381) (not x173) (= x220 x1784)) x1375) x544))
(assert (x1850 x59))
(assert (= (ite (= x1557 132) 274184521717934524641157099916833587211 (x1945 x1557)) (x1074 x1557)))
(assert (x591 x1311))
(assert (x151 x1192))
(assert (x151 x213))
(assert (= (x910 (x273 3833100637)) 3833100637))
(assert (x151 x1656))
(assert (x591 x821))
(assert (x591 x9))
(assert (= x408 x410))
(assert (= 274184521717934524641157099916833587211 (x910 (x273 274184521717934524641157099916833587211))))
(assert (x151 x1076))
(assert (x1992 x1487))
(assert (=> (> (+ 10000 1) x130) (= (x273 x130) (x808 x130))))
(assert (x151 x985))
(assert (x591 x1428))
(assert (x151 x1428))
(assert (x433 x644 x1387))
(assert (= (ite (= x1498 x6) 115197700812830431890159100217698998050002284567939525164234024451216521560064 (x1919 x6)) (x1636 x6)))
(assert (x151 x683))
(assert (= (x910 (x273 3840337785)) 3840337785))
(assert (x591 255))
(assert (x591 x915))
(assert (x151 x1782))
(assert (x151 x572))
(assert (x591 x1699))
(assert (x591 x1939))
(assert (= x317 (x910 (x808 x317))))
(assert (x433 x853 x1489))
(assert (x591 x1603))
(assert (x151 x1359))
(assert (x151 x1363))
(assert (= (x808 3119561463) (x273 3119561463)))
(assert (x151 x297))
(assert (x151 x1982))
(assert (= (x1484 x1032) (ite (= x1153 x1032) 115197700812830431890159100217698998050002284567939525164234024451216521560064 (x1469 x1032))))
(assert (x151 x700))
(assert (x151 x1203))
(assert (x151 x1679))
(assert (= (x808 2068668150) (x273 2068668150)))
(assert (x151 x517))
(assert (x1540 x686 x607))
(assert (x151 x51))
(assert (x591 x716))
(assert (x151 x730))
(assert (x151 x116))
(assert (= (ite (= x899 x1153) 115197700812830431890159100217698998050002284567939525164234024451216521560064 (x1469 x899)) (x1484 x899)))
(assert (x591 x1595))
(assert (x151 x186))
(assert (x151 x1891))
(assert (x151 x863))
(assert (x151 x1744))
(assert (= 0 (x1552 x366)))
(assert (= (x1484 x1557) (ite (= x1153 x1557) 115197700812830431890159100217698998050002284567939525164234024451216521560064 (x1469 x1557))))
(assert (= 340282366920938463463374607431768211455 (x910 (x273 340282366920938463463374607431768211455))))
(assert (x151 x1327))
(assert (x151 x245))
(assert (= x697 (or (and x191 x283) (and x868 x1859) (and x907 x888) (and x142 x1066))))
(assert (= (and x647 (not x849)) x289))
(assert (x151 x903))
(assert (x151 x1255))
(assert (x151 x772))
(assert (= (x273 3257672857) (x808 3257672857)))
(assert (x151 x1663))
(assert (x771 x1870 x1638))
(assert (x151 x694))
(assert (and (= 100000000000000000000000 (x1138 10 23)) (= 10000000000000000000000000 (x1138 10 25)) (= 100000000000000000 (x1138 10 17)) (= (x1138 10 0) 1) (= (x1138 10 29) 100000000000000000000000000000) (= 100000000000000000000000000 (x1138 10 26)) (= 1000000000000000000000000000000 (x1138 10 30)) (= (x1138 10 11) 100000000000) (= (x1138 10 5) 100000) (= 10000000000000000000000 (x1138 10 22)) (= 100000000000000 (x1138 10 14)) (= (x1138 10 2) 100) (= 10 (x1138 10 1)) (= (x1138 10 27) 1000000000000000000000000000) (= 10000000000000000 (x1138 10 16)) (= 1000000000 (x1138 10 9)) (= (x1138 10 4) 10000) (= 100000000000000000000 (x1138 10 20)) (= 10000000000000000000 (x1138 10 19)) (= (x1138 10 7) 10000000) (= (x1138 10 8) 100000000) (= 1000000 (x1138 10 6)) (= 1000000000000000000000000 (x1138 10 24)) (= (x1138 10 10) 10000000000) (= (x1138 10 21) 1000000000000000000000) (= (x1138 10 12) 1000000000000) (= (x1138 10 15) 1000000000000000) (= 1000 (x1138 10 3)) (= 1000000000000000000 (x1138 10 18)) (= 10000000000000 (x1138 10 13)) (= (x1138 10 28) 10000000000000000000000000000)))
(assert (x151 x1825))
(assert (x151 x269))
(assert (x1850 x1942))
(assert (x151 x318))
(assert (x151 x1902))
(assert (x151 x1155))
(assert (x151 x1460))
(assert (= (x808 1099511627775) (x273 1099511627775)))
(assert (= (- (/ x807 1461501637330902918203684832716283019655932542976) (uninterp_frac x807 1461501637330902918203684832716283019655932542976)) (x1230 x807 160)))
(assert (x151 x511))
(assert (x591 x1627))
(assert (x591 1))
(assert (x151 x137))
(assert (x151 x1662))
(assert (= (x910 (x808 x1702)) x1702))
(assert (x591 x782))
(assert (x151 x856))
(assert (x151 x500))
(assert (x151 x904))
(assert (x151 x680))
(assert (x151 x780))
(assert (x151 x1976))
(assert (x151 x788))
(assert (x151 x1013))
(assert (x591 x381))
(assert (x151 x37))
(assert (x591 x1458))
(assert (x151 x473))
(assert (x151 x232))
(assert (= (=> (and (= (x446 (+ 64 x1368)) x1544) (= (x883 x260) x1086) (= x175 (x1482 (x808 x270) x1281 0)) (= (x446 (+ 288 x458)) x429) (= (x446 (+ 64 x480)) x1237) (= x1368 (x446 (+ x429 64))) (> 340282366920938463463374607431768211456 x735) (= x1709 (= x1648 274184521717934524641157099916833587235)) (= x1281 (x1482 (x808 274184521717934524641157099916833587211) (x273 6) 0)) (= (x446 (+ x303 64)) x41) (<= x735 340282366920938463463374607431768211455) (= x937 (x446 (+ x1544 64))) (= x1498 (x446 (+ x458 512))) (= x270 (x371 1461501637330902918203684832716283019655932542975 x1086)) (= x974 4) (= x633 (x1224 x432)) (= x547 (x1230 x807 168)) (= x432 (x446 (+ x480 64))) (= x260 (x446 (+ 288 x458))) (= (x371 18446744073709551615 x547) x90) (= 274184521717934524641157099916833587211 x1669) (= x1492 (x371 18446744073709551615 x1630)) (= (x371 1461501637330902918203684832716283019655932542975 x633) x1648) (= x735 (x1941 x175)) (<= 0 x735) (= (x446 (+ 64 x1237)) x303)) (and (=> (not x1709) x247) (=> (and (= (x446 (+ x480 384)) x1282) (> x997 0) (not (> 4 x1685)) (<= 0 x746) (not (= 2362581449 x653)) (>= x110 0) (= (x477 128) x1653) (= x983 (x477 192)) x1709 (= x579 (x477 224)) (= 160 x1401) (= x572 (x477 160)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x110) (not (= x653 4062139261)) (= (x477 256) x1084) (not (< x653 2362581449)) (> 1208925819614629174706176 x788) (not (= x653 3257672857)) (= x214 (x477 256)) (= x235 (x446 (+ x480 288))) (= x997 (x935 (x808 274184521717934524641157099916833587235))) (>= 1208925819614629174706175 x788) (= 1 x1220) (<= 0 x1868) (= 4 x1685) (= x653 4272920204) (= x746 (x17 x1214)) (= (x477 128) x1614) (= (x477 160) x789) (= (x446 (+ x480 320)) x993) (= x1995 (x446 (+ 352 x480))) (<= x746 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x752 (x477 224)) (<= 0 x848) (= (x477 192) x378) (> 1208925819614629174706176 x1868) (= (x1482 (x808 x1169) (x273 1) 0) x1214) (<= x1868 1208925819614629174706175) (= x1685 x974) (= x871 115197700812830431890159100217698998050002284567939525164234024451216521560064) (>= x788 0) (<= x848 115792089237316195423570985008687907853269984665640564039457584007913129639935)) x1496))) x44))
(assert (x151 x1810))
(assert (x151 x658))
(assert (x151 x917))
(assert (x591 x213))
(assert (x151 x642))
(assert (x1501 x1350 x858))
(assert (x591 x1386))
(assert (= x1273 (x910 (x808 x1273))))
(assert (x151 x945))
(assert (x591 x188))
(assert (= 274184521717934524641157099916833587235 (x910 (x273 274184521717934524641157099916833587235))))
(assert (x151 x434))
(assert (x151 x970))
(assert (x1501 x792 x1186))
(assert (= (x1552 x6) 0))
(assert (x151 x747))
(assert (= 57896044618658097711785492504343953926634992332820282019728792003956564819968 (x910 (x273 57896044618658097711785492504343953926634992332820282019728792003956564819968))))
(assert (x151 x1675))
(assert (x151 x1243))
(assert (x151 x1477))
(assert (x151 x163))
(assert (x151 x1466))
(assert (x195 x1630 x1383))
(assert (x151 x579))
(assert (x771 x505 x160))
(assert (x1992 x341))
(assert (x1412 x693 x1231))
(assert (=> (< (- x479 1) 10000) (= (x808 x479) (x273 x479))))
(assert (x151 x1085))
(assert (= (or (and x647 x849) (and x289 x1027) (and x1210 x697)) x408))
(assert (x151 x1570))
(assert (x151 x606))
(assert (x1540 x1115 x1942))
(assert (x151 x491))
(assert (x151 x98))
(assert (= x1593 (=> (and (= (ite x1146 1 0) x1023) (= (not x1842) x1146) (= (or (> x605 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x605) true) (> 0 x605))) x1842)) x1437)))
(assert (x151 x121))
(assert (x151 x1910))
(assert (x151 x1527))
(assert (x151 x622))
(assert (x151 x702))
(assert (x591 x1403))
(assert (x151 x45))
(assert (x151 x1164))
(assert (= (x808 274184521717934524641157099916833587227) (x273 274184521717934524641157099916833587227)))
(assert (x151 x1472))
(assert (= (x273 157198259) (x808 157198259)))
(assert (x151 x838))
(assert (x151 x1002))
(assert (x151 x9))
(assert (x151 x192))
(assert (= (- (/ x884 2) (uninterp_frac x884 2)) (x1230 x884 1)))
(assert (x151 x978))
(assert (x151 x1175))
(assert (x151 x479))
(assert (x151 x1045))
(assert (x151 x441))
(assert (x151 x314))
(assert (x151 x553))
(assert (x151 x41))
(assert (x151 x797))
(assert (= x1918 (or (and x522 x1956) (and x529 x615))))
(assert (x151 x1145))
(assert (= (ite (= x904 x1811) x1951 (x1407 x904)) (x219 x904)))
(assert (x1501 x915 x158))
(assert (x1992 x1169))
(assert (x591 x1105))
(assert (x591 x679))
(assert (= (x273 115792089237316195423570985008687907853269984665640564039457584007913129639904) (x808 115792089237316195423570985008687907853269984665640564039457584007913129639904)))
(assert (x1540 x1480 x501))
(assert (x1540 x59 x739))
(assert (x151 x216))
(assert (x151 x632))
(assert (x151 x1473))
(assert (x151 x406))
(assert (x151 x1904))
(assert (x151 x1539))
(assert (x1540 x337 x1433))
(assert (x151 x1889))
(assert (x151 x997))
(assert (x151 x1048))
(assert (x151 x1470))
(assert (x151 x468))
(assert (x151 x542))
(assert (= (and (not x1226) x994) x448))
(assert (x1501 x1939 x1647))
(assert (= (x273 2362581449) (x808 2362581449)))
(assert (= (uninterp_mod (x1138 2 x1479) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x1856 1 x1479)))
(assert (x151 x1032))
(assert (= (x910 (x273 115792089237316195423570985008687907853269984665640564039457584007913129639935)) 115792089237316195423570985008687907853269984665640564039457584007913129639935))
(assert (x151 x1591))
(assert (x591 x259))
(assert (= 274184521717934524641157099916833587227 (x910 (x808 274184521717934524641157099916833587227))))
(assert (x151 x1536))
(assert (x151 x941))
(assert (= (x219 x1557) (ite (= x1811 x1557) x1951 (x1407 x1557))))
(assert (= (x273 1168994686) (x808 1168994686)))
(assert (x195 x107 x43))
(assert (x151 x1406))
(assert (x151 x280))
(assert (x151 x1121))
(assert (x151 x492))
(assert (x151 x401))
(assert (x151 x1849))
(assert (x151 x936))
(assert (x151 x1741))
(assert (x151 x816))
(assert (x151 x1318))
(assert (x151 x452))
(assert (x889 x402 x95))
(assert (= x768 (=> (and (not (> x1529 x1334)) (>= 20282409603651670423947251286015 x864) (= x890 (x184 256)) (not (= 3257672857 x37)) (= (x371 340282366920938463463374607431768211455 x928) x307) (<= 0 x1590) (= x1519 (x1230 x155 192)) (= (x1556 x1637) x856) (= (x1543 128) x227) (<= x1334 340282366920938463463374607431768211455) (= x1348 (x446 (+ 288 x1424))) (> x1423 0) (= (x446 (+ 288 x159)) x153) (= 4272920204 x37) (<= x1422 1208925819614629174706175) (= x719 4) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1297) (>= 1208925819614629174706175 x1422) (<= 0 x1297) (= x782 (x1230 x155 160)) (= x1420 (x1482 (x808 x1885) (x273 2) 0)) (= x643 (x1543 192)) (= (x1230 x807 160) x1870) (>= x1580 0) (or (and (< x337 65536) (= x337 (x400 x1207)) (= (x527 x337 x1433) x1002) (>= 65535 x337) (= (x1856 1 x1479) x1433) (= (x1482 (x808 274184521717934524641157099916833587211) (x273 5) 0) x1207) (= (x371 255 x419) x1479) (>= x337 0) (= (x938 x1424) x419) x1514 (= x137 (x371 65535 x1002)) (= x205 274184521717934524641157099916833587211)) (and (not x1514) (= (ite (not x223) (= 0 (x371 340282366920938463463374607431768211455 x1867)) (not x223)) x627) (= (= x1334 0) x223) (or (and (<= 0 x1878) (= x1878 (x400 x737)) (> 65536 x1878) (= x1242 (x371 x1878 x213)) (= (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x1856 1 x415)) x213) (= (x371 255 x381) x415) (>= 65535 x1878) x627 (= x135 274184521717934524641157099916833587211) (= (x938 x1424) x381) (= (x1482 (x808 274184521717934524641157099916833587211) (x273 5) 0) x737)) (not x627)))) (<= x1590 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x1468 (x446 (+ 160 x1637))) (= (x371 18446744073709551615 x143) x1884) (= 4272920204 x193) (= x1604 (x1556 x1967)) (= 274184521717934524641157099916833587211 x816) (= (x446 (+ x159 512)) x863) (> x502 0) (= (or (and (> 0 x112) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x112) true)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x112)) x833) (= x1009 (x184 192)) (= 4 x96) (= (x446 (+ x1637 416)) x159) (<= x1860 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x532 (x371 255 x1057)) (= (x446 (+ x1637 96)) x45) (= (x271 x1420) x1502) (= x576 274184521717934524641157099916833587211) (= 274184521717934524641157099916833587233 x1692) (< 0 x1712) (= 4 x254) (not (< x193 2362581449)) (= (x1230 x807 168) x1428) (= x832 (x371 1461501637330902918203684832716283019655932542975 x693)) (= (x1543 256) x1898) (>= 340282366920938463463374607431768211455 x1502) (= x1264 (x1543 192)) (= x1967 (x446 (+ 32 x1637))) (= x1915 (x371 1461501637330902918203684832716283019655932542975 x807)) (= x1091 (x1421 x899)) (= x767 (x446 (+ x1085 64))) (= (x446 (+ 128 x1637)) x1213) (= x313 274184521717934524641157099916833587211) (not (= x37 4062139261)) (>= 1208925819614629174706175 x535) (= x1742 115197700812830431890159100217698998050002284567939525164234024451216521560064) (= (x371 65535 x853) x1969) (= x1085 (x446 (+ x1320 64))) (= x1262 (x1482 (x808 x1169) (x273 1) 0)) (<= x1580 65535) (= x1012 (x371 65535 x1519)) (= (- (/ x1179 x1712) (uninterp_frac x1179 x1712)) x1654) (> 1208925819614629174706176 x535) (not (< x37 2362581449)) (= x453 (x446 (+ 64 x1153))) (= (and (= true (<= x1091 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (< 0 x1091)) x1167) (= (x1421 x366) x1271) (= x1297 (x758 x1262)) (or (and (= x555 (x371 20282409603651670423947251286015 x1311)) (>= 18446744073709551615 x1960) (not x833) (= (* x1113 x1960) x1325) (= x1325 x1311) (not (< 10141204801825835211973625643007 x555)) (not (or (and (< x112 0) (= (<= x112 57896044618658097711785492504343953926634992332820282019728792003956564819967) true)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x112))) (= x1939 x1311) (= (x371 20282409603651670423947251286015 x112) x1113) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (* x1113 x1960)) (> 18446744073709551616 x1960) (<= 0 x1960)) (and x833 (= (x371 20282409603651670423947251286015 x311) x1687) (= x1939 x1121) (= (* x70 x286) x359) (= (x1015 (- 0 x760)) x1121) (not (< 10141204801825835211973625643007 x1687)) (= (x371 20282409603651670423947251286015 x1152) x286) (= x359 x311) (not (or (> x1152 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (< x1152 0) (= true (<= x1152 57896044618658097711785492504343953926634992332820282019728792003956564819967))))) (= (x1425 x311) x760) (<= 0 x70) (not (= 115792089237316195423570985008687907853269984655499359237631748795939503996928 x760)) (not (= 115792089237316195423570985008687907853269984655499359237631748795939503996928 x112)) (= x1152 (x1015 (- 0 x112))) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (* x286 x70)) (>= 18446744073709551615 x70) (< x70 18446744073709551616))) (not (= 0 x1010)) (= (x371 340282366920938463463374607431768211455 x1809) x1082) (> 1208925819614629174706176 x1422) (= (x184 128) x316) (= (ite (= x1334 0) (not (= 0 (x371 340282366920938463463374607431768211455 x1867))) (= x1334 0)) x1514) (= (x446 (+ x1468 512)) x1424) (= (x446 (+ 64 x1637)) x1890) (= x853 (x1230 x155 176)) (<= 0 x535) (= (x1543 256) x212) (> 340282366920938463463374607431768211456 x1334) (>= 1208925819614629174706175 x1232) (not (= 3257672857 x193)) (= (x184 160) x390) (= (x1645 x4) x864) (= x1272 (x446 (+ 384 x1424))) (= (x371 340282366920938463463374607431768211455 x1091) x1423) (= (not x1167) x1409) (not (> x121 x1809)) (> 20282409603651670423947251286016 x864) (= x1429 (x446 (+ x1637 32))) (<= 0 x1590) (= (x446 (+ 64 x1637)) x84) (= x190 274184521717934524641157099916833587233) (= 274184521717934524641157099916833587233 x1907) (= x341 (x371 1461501637330902918203684832716283019655932542975 x693)) (= x1637 (x446 (+ x1153 x1723))) (<= 0 x1334) (= (x1015 (- x1502 x1082)) x928) (not (< x719 4)) (= (x184 224) x1205) (>= 1208925819614629174706175 x744) (> 1208925819614629174706176 x1422) (= x1304 (x1482 (x808 274184521717934524641157099916833587211) (x273 6) 0)) (= x904 (x446 (+ x1890 64))) (>= x864 0) (= x1886 (x371 340282366920938463463374607431768211455 x1654)) (<= x1271 1208925819614629174706175) (= (x1543 128) x1322) (= (x371 18446744073709551615 x1428) x1101) (= x1843 (* x1886 x1102)) (not (= x193 4062139261)) (< (* x1886 x1102) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x1843 x1809) (not (= x37 2362581449)) (= (x371 1461501637330902918203684832716283019655932542975 x693) x1729) (= (x1543 224) x56) (= (x184 192) x1617) (not (or (and (< x325 160) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x325) true)) (> x325 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (= (x446 (+ 288 x159)) x1320) (= x640 274184521717934524641157099916833587233) (>= 1208925819614629174706175 x856) (not (> x1082 x1502)) (= x1723 (x371 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1550)) (> 65536 x1580) (= x832 x1203) (= (x1543 160) x1435) (= (x371 1461501637330902918203684832716283019655932542975 x155) x16) (= 274184521717934524641157099916833587211 x1216) (>= x1502 0) (= x460 (x1482 (x808 274184521717934524641157099916833587211) (x273 5) 0)) (= (x1543 224) x199) (= x1529 (x371 340282366920938463463374607431768211455 x1809)) (= (x508 x487) x1334) (= x1394 (x1425 x1939)) (not (> 4 x668)) (= (x371 255 x1057) x502) (= (x371 340282366920938463463374607431768211455 x1604) x176) (= x751 (x1482 (x808 x341) x1304 0)) (= x186 (x446 (+ x1424 352))) (= 4 x668) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1930) (= (x1482 (x808 274184521717934524641157099916833587211) (x273 6) 0) x1906) (= x1621 (x935 (x808 274184521717934524641157099916833587233))) (or (and (= x95 (ite (> 32 x1531) 1 0)) (= x402 1) x1560 (= x506 (= 0 (x527 x1201 x333))) (= x1660 1) (= (x371 x402 x95) x333) (= x821 (ite (> 78 x1531) 1 0)) (= x1201 (x371 x1660 x821)) (or (and (= x143 (x1138 10 x1531)) (not x506)) (and (or (and (= (< 1 x1411) x1720) x879 (= (= 0 x396) x1839) (= x180 (ite x1839 1 10)) (= x1411 (x1230 x1531 1)) (= (x371 1 x1531) x396) (= x344 100) (not x1720)) (and (not x879) (= 1 x180) (= 10 x344))) x506 (= x879 (> x1531 1)) (= (- (/ 115792089237316195423570985008687907853269984665640564039457584007913129639935 x344) (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x344)) x1615) (= x839 (uninterp_mod (* x344 x180) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (not (> x180 x1615)) (= x839 x143)))) (and (not x1560) (= x143 1))) (= x803 (x371 65535 x782)) (= (x371 340282366920938463463374607431768211455 x1867) x31) (= x795 (uninterp_mod x176 x1423)) (= x254 x668) (= x1531 (x371 255 x1870)) (= (x371 340282366920938463463374607431768211455 x795) x1116) (= x1314 0) (> x532 0) (= x1560 (< 0 x1531)) (= (x1425 x864) x112) (>= x1860 0) (= x443 (not x1075)) (= x1284 (x446 (+ 64 x767))) (= x1179 (x371 340282366920938463463374607431768211455 x1604)) (>= x535 0) (= x1116 0) (= (x1015 (- x1334 x1529)) x1867) (< x1502 340282366920938463463374607431768211456) (= (x446 (+ x473 64)) x230) (= x744 (x1421 x1153)) (= (x355 x153) x109) (= x1520 (x1482 (x808 x1169) (x273 1) 0)) (not (= 2362581449 x193)) (= x794 (x446 (+ 64 x1424))) (= (x184 256) x536) (<= 0 x1422) (<= x1590 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x634 (x184 128)) (not (ite x443 x443 (and (< 170141183460469231731687303715884105727 x1604) (= (<= x1604 57896044618658097711785492504343953926634992332820282019728792003956564819967) true)))) (= (x935 (x808 274184521717934524641157099916833587233)) x1979) (>= x1860 0) (= x719 x96) (= (x371 1461501637330902918203684832716283019655932542975 x109) x1203) (= (x371 340282366920938463463374607431768211455 x1091) x1712) (= 115197700812830431890159100217698998050002284567939525164234024451216521560064 x1475) (= 274184521717934524641157099916833587211 x698) (= x1550 (x446 (+ 31 x325))) (= (x1357 x460) x1580) (> 1208925819614629174706176 x535) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1860) (= (x446 (+ x453 64)) x366) (<= 0 x1422) (= x918 (x184 224)) (= (x446 (+ x1424 320)) x1098) (> x1979 0) (= x473 (x446 (+ 64 x794))) (= (x1482 (x808 x1729) x1906 0) x487) (= (x446 (+ x1558 288)) x899) (= (x371 1461501637330902918203684832716283019655932542975 x693) x1885) (not (ite x1409 x1409 (and (> x1091 170141183460469231731687303715884105727) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1091))))) (= (x1556 x904) x1232) (= (and (= true (<= x1604 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (> x1604 0)) x1075) (= (x1482 (x808 274184521717934524641157099916833587211) (x273 5) 0) x4) (< 0 x1621) (= (x758 x1520) x1930) (>= 1208925819614629174706175 x535) (<= 0 x1930) (= (x184 160) x908) (= (x1543 160) x1268)) x490)))
(assert (x151 x126))
(assert (x151 x248))
(assert (x151 x686))
(assert (x591 x1855))
(assert (x151 x1485))
(assert (x151 x111))
(assert (= (x273 3840337785) (x808 3840337785)))
(assert (x151 x1653))
(assert (x151 x235))
(assert (x1412 x19 x388))
(assert (x151 x107))
(assert (x151 x403))
(assert (= (x219 x1967) (ite (= x1811 x1967) x1951 (x1407 x1967))))
(assert (x151 x633))
(assert (x433 x1473 x437))
(assert (x151 x272))
(assert (x151 x77))
(assert (x1541 x795 x139))
(assert (x151 x6))
(assert (= (or (and x585 (not x930)) x1760) x265))
(assert (x1541 x1867 x562))
(assert (= x954 (or (and x533 x1651) (and x1858 x929))))
(assert (= (x910 (x273 1168994686)) 1168994686))
(assert (x151 x1480))
(assert (x151 x30))
(assert (x151 x563))
(assert (x151 x197))
(assert (= (and (not x1454) x1608) x1188))
(assert (x151 x1358))
(assert (x1412 x807 x611))
(assert (x151 x664))
(assert (x151 x1273))
(assert (x151 x1817))
(assert (x151 x493))
(assert (x151 x1818))
(assert (x1992 x479))
(assert (x151 x430))
(assert (x151 x1000))
(assert (= 274184521717934524641157099916833587233 (x910 (x273 274184521717934524641157099916833587233))))
(assert (x151 x1241))
(assert (x151 x1823))
(assert (x151 x1758))
(assert (x151 x1444))
(assert (x591 x1043))
(assert (x151 x1885))
(assert (= (x910 (x273 16156842317565293874272834530371880720966471053262404558597773956279093428224)) 16156842317565293874272834530371880720966471053262404558597773956279093428224))
(assert (x433 x1002 x538))
(assert (x151 x217))
(assert (x151 x489))
(assert (x151 x1284))
(assert (x151 x1528))
(assert (x151 x1606))
(assert (x1992 274184521717934524641157099916833587211))
(assert (x151 x1239))
(assert (x151 x1381))
(assert (x151 x1715))
(assert (x151 x1518))
(assert (x1541 x1472 x1840))
(assert (x151 x1073))
(assert (x889 x1727 x1999))
(assert (x151 x308))
(assert (x151 x1115))
(assert (x151 x924))
(assert (x433 x683 x1355))
(assert (x151 x1602))
(assert (x151 x11))
(assert (= (x808 1461501637330902918203684832716283019655932542975) (x273 1461501637330902918203684832716283019655932542975)))
(assert (x591 x1977))
(assert (x151 x1784))
(assert (x151 x1714))
(assert (x591 x1654))
(assert (x151 x1100))
(assert (x1850 x739))
(assert (x151 x715))
(assert (x151 x1870))
(assert (= (=> (= x1956 (= x931 274184521717934524641157099916833587233)) (and (=> (and (<= x401 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= x1590 0) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1590) (= x1240 4) (<= 0 x1422) (= (x935 (x808 274184521717934524641157099916833587233)) x1298) (= x822 (x1482 (x808 x1169) (x273 1) 0)) (>= x535 0) (not (= x216 2362581449)) (= (x845 160) x1171) (= x1195 160) (>= x401 0) (= x860 115197700812830431890159100217698998050002284567939525164234024451216521560064) (= (x845 224) x1398) (< x535 1208925819614629174706176) (<= x1422 1208925819614629174706175) (<= 0 x1860) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1860) (not (= 3257672857 x216)) (= x1395 1) (= x642 (x845 256)) (not (< x216 2362581449)) (> x1298 0) (not (> 4 x1240)) (not (= 4062139261 x216)) (= (x845 128) x581) (> 1208925819614629174706176 x1422) (= (x845 224) x942) (>= 1208925819614629174706175 x535) (= (x845 192) x631) (= (x845 160) x1916) x1956 (= x216 4272920204) (= (x758 x822) x401) (= x1947 (x845 256)) (= (x845 128) x1083) (= 4 x1240) (= x1664 (x845 192))) x1452) (=> (not x1956) x1829))) x321))
(assert (x151 x502))
(assert (x151 x877))
(assert (x151 x983))
(assert (x1481 x1377 x243 x375 x862))
(assert (x151 x402))
(assert (x151 x561))
(assert (x591 x402))
(assert (= (=> (= (or (and (> 0 x960) (= (<= x960 57896044618658097711785492504343953926634992332820282019728792003956564819967) true)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x960)) x1151) (and (=> (and (= (x371 255 x770) x679) (= x480 (x446 (+ x863 416))) (< 0 x1688) (= x1688 (x371 255 x1057)) (= x814 (x371 65535 x683)) x1151 (= (x1230 x155 192) x40) (= (x1230 x155 160) x683) (= (x1230 x807 160) x770) (or (and (= x1155 1) (or (and (= (- (/ 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1185) (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1185)) x776) (not (> x12 x776)) x1753 (= x1758 x1630) (= x1758 (uninterp_mod (* x12 x1185) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= x813 (> x679 1)) (or (and (= 1 x12) (not x813) (= x1185 10)) (and (= (x1230 x679 1) x395) (= (x371 1 x679) x1028) (= x12 (ite x169 1 10)) (= (> x395 1) x1866) (not x1866) (= (= 0 x1028) x169) x813 (= x1185 100)))) (and (not x1753) (= x1630 (x1138 10 x679)))) (= (x371 x1155 x1891) x1480) (= (= (x527 x1480 x501) 0) x1753) (= 1 x1727) (= (ite (< x679 78) 1 0) x1891) (= (ite (> 32 x679) 1 0) x1999) (= x501 (x371 x1727 x1999)) x377) (and (not x377) (= 1 x1630))) (= (x1230 x155 176) x1959) (= (> x679 0) x377) (= (x371 1461501637330902918203684832716283019655932542975 x807) x1818) (= (x371 65535 x1959) x103) (= (x371 65535 x40) x83) (= x126 (x371 1461501637330902918203684832716283019655932542975 x155))) x44) (=> (and (not x1151) (= 1 x1964) (= x458 x730)) x2002))) x1526))
(assert (x591 x940))
(assert (= 404098525 (x910 (x273 404098525))))
(assert (= x533 (and (not x929) x1858)))
(assert (x151 x56))
(assert (x151 x756))
(assert (x151 x1129))
(assert (x151 x1699))
(assert (x889 x1388 x1509))
(assert (x151 x1522))
(assert (x591 x667))
(assert (x591 x1604))
(assert (x591 x1959))
(assert (x433 x40 x322))
(assert (x151 x130))
(assert (x151 x1314))
(assert (x151 x512))
(assert (= 274184521717934524641157099916833587211 (x910 (x808 274184521717934524641157099916833587211))))
(assert (= 10141204801825835211973625643007 (x910 (x273 10141204801825835211973625643007))))
(assert (x151 x485))
(assert (x151 x278))
(assert (x151 x727))
(assert (= (x1230 x320 1) (- (/ x320 2) (uninterp_frac x320 2))))
(assert (x151 x353))
(assert (x151 x1113))
(assert (x151 x865))
(assert (x151 x1781))
(assert (x151 x1423))
(assert (x151 x659))
(assert (x151 x661))
(assert (= x1701 (=> (and (= x715 (x371 1461501637330902918203684832716283019655932542975 x1487)) (= (= x931 274184521717934524641157099916833587235) x615) (= (x371 1461501637330902918203684832716283019655932542975 x77) x561) (= x859 (x1482 (x808 x561) x1517 0)) (>= 340282366920938463463374607431768211455 x1257) (= (x1482 (x808 x715) (x273 6) 0) x1517) (= x1184 (x1276 608)) (< x1257 340282366920938463463374607431768211456) (= (x1941 x859) x1257) (= (x371 1461501637330902918203684832716283019655932542975 x1184) x931) (= x77 (x1832 576)) (= x1801 544) (= x1317 800) (= (x371 18446744073709551615 x197) x673) (= x1948 (x371 18446744073709551615 x107)) (= x197 (x1230 x807 168)) (<= 0 x1257)) (and (=> (not x615) x321) (=> (and (= x1934 4) (not (< x1934 4)) (<= 0 x110) (> 1208925819614629174706176 x788) (>= x1868 0) (>= x848 0) (not (= x1037 3257672857)) (>= x788 0) (= 4 x1934) (= x1156 (x594 256)) (= (x594 128) x1199) x615 (= (x594 192) x946) (= (x594 192) x1528) (= x439 (x935 (x808 274184521717934524641157099916833587235))) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x848) (> 1208925819614629174706176 x1868) (<= x1868 1208925819614629174706175) (not (= x1037 4062139261)) (= x1413 (x594 160)) (= x1195 160) (>= 1208925819614629174706175 x788) (= x1406 (x594 224)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x110) (<= x1397 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x594 256) x1) (= 115197700812830431890159100217698998050002284567939525164234024451216521560064 x986) (= x1278 (x594 128)) (= 4272920204 x1037) (= x1397 (x17 x775)) (not (> 2362581449 x1037)) (<= 0 x1397) (not (= 2362581449 x1037)) (= 1 x1395) (< 0 x439) (= x775 (x1482 (x808 x1169) (x273 1) 0)) (= x981 (x594 224)) (= (x594 160) x194)) x1452)))))
(assert (x151 x1332))
(assert (x151 x505))
(assert (=> (< (- x1160 1) 10000) (= (x273 x1160) (x808 x1160))))
(assert (x151 x1398))
(assert (=> (< (- x1487 1) 10000) (= (x808 x1487) (x273 x1487))))
(assert (x151 x1680))
(assert (x151 x812))
(assert (x151 x574))
(assert (= 599290589 (x910 (x273 599290589))))
(assert (x151 x1005))
(assert (x151 x366))
(assert (x151 x1399))
(assert (= (x273 3638949393) (x808 3638949393)))
(assert (x433 x452 x545))
(assert (= 1208925819614629174706176 (x910 (x273 1208925819614629174706176))))
(assert (x151 x370))
(assert (x151 x1862))
(assert (x151 x558))
(assert (x1412 x155 x1876))
(assert (= (x910 (x808 x970)) x970))
(assert (x151 x1498))
(assert (x151 x1271))
(assert (x591 x356))
(assert (x151 x285))
(assert (x151 x1665))
(assert (x151 x1621))
(assert (x591 x1472))
(assert (= (=> (and (not (or (and (= true (<= x1494 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (> 32 x1494)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1494))) (>= 18446744073709551615 x1960) (= x1661 (ite (not x1778) 1 0)) (= x1970 (x1425 x1065)) (< (* x837 x70) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x649 (or (> x161 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= true (<= x161 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (< x161 0)))) (= x21 (x371 20282409603651670423947251286015 x1332)) (= (not x649) x1958) (= (x371 20282409603651670423947251286015 x1065) x610) (= (x1015 (- 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1824)) x99) (= (x446 (+ 57896044618658097711785492504343953926634992332820282019728792003956564819967 x612)) x424) (= x1065 x407) (= (= 274184521717934524641157099916833587231 x601) x1210) (<= 0 x70) (= x1332 x1308) (= x601 (x371 1461501637330902918203684832716283019655932542975 x356)) (= x1404 (or (and (< x612 0) (= (<= x612 57896044618658097711785492504343953926634992332820282019728792003956564819967) true)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x612))) (= x667 (ite (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1824) (and (= true (<= x1824 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (> 0 x1824))) 1 0)) (<= x70 18446744073709551615) (= x1105 (x446 (+ 31 x1494))) (= (ite (or (and (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x202) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1970)) (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1970) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x202)) (> x202 x1970))) 1 0) x1499) (= x516 0) (= 0 x1365) (= x756 (x446 (+ 132 x1887))) (= x407 (* x70 x837)) (<= x837 20282409603651670423947251286015) (= (x446 (+ x1824 x1970)) x161) (= x202 (x1015 (- x471 x1788))) (= x1405 0) (= x1308 (* x309 x1960)) (= (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1824) (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1824) true) (< x1824 0))) x1778) (= x798 (x1015 (- x1144 x1963))) (= 0 x297) (>= 20282409603651670423947251286015 x309) (> 20282409603651670423947251286016 x837) (not (= 0 x546)) (not (ite x1958 (not (< x161 x1695)) x1958)) (>= x309 0) (= (x446 (+ 36 x1963)) x949) (not (> x610 10141204801825835211973625643007)) (= (ite (or (and (< x1788 x471) (= (<= x471 57896044618658097711785492504343953926634992332820282019728792003956564819967) (<= x1788 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (and (<= x471 57896044618658097711785492504343953926634992332820282019728792003956564819967) (> x1788 57896044618658097711785492504343953926634992332820282019728792003956564819967))) 1 0) x1509) (= (x261 128) x1788) (> 18446744073709551616 x70) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (* x1960 x309)) (not (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1788)) (= x297 (x371 x1661 x233)) (<= 0 x1960) (= x1963 (x446 (+ x1887 128))) (= x259 (ite (or (> x612 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= true (<= x612 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (< x612 0))) 1 0)) (> 20282409603651670423947251286016 x309) (= (ite (or (and (< x424 x1788) (= (<= x424 57896044618658097711785492504343953926634992332820282019728792003956564819967) (<= x1788 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (and (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1788) (> x424 57896044618658097711785492504343953926634992332820282019728792003956564819967))) 1 0) x1855) (= x612 (x1425 x1332)) (= (x371 x1388 x1509) x1405) (> 18446744073709551616 x1960) (= 274184521717934524641157099916833587211 x1928) (= (x446 (+ x756 64)) x1811) (= (x371 x667 x1499) x516) (= x1887 (x371 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1105)) (= (ite (not x1404) 1 0) x1388) (= x1824 (x1015 (- x1788 x612))) (= (x371 x259 x1855) x1365) (= (ite (or (and (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1970) (> x99 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (and (< x99 x1970) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1970) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x99)))) 1 0) x233) (not (> x21 10141204801825835211973625643007)) (<= 0 x837) (= x471 (x446 (+ x612 57896044618658097711785492504343953926634992332820282019728792003956564819968))) (= x1144 (x446 (+ x1963 100)))) (and (=> (and (= x1679 (x999 x1756)) (= 274184521717934524641157099916833587211 x269) (not x939) (>= 1461501637330902918203684832716283019655932542975 x1857) (> x1269 0) (not (= x1609 404098525)) (= x1026 274184521717934524641157099916833587211) (= x1952 16156842317565293874272834530371880720966471053262404558597773956279093428224) (<= 0 x1119) (= x995 (x1482 (x808 x1243) (x273 1) 0)) (not (> 4 x836)) (<= x1679 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x465 (x371 1461501637330902918203684832716283019655932542975 x1857)) (= x1670 (x1449 x1261)) (<= x1119 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x62 x1705) (= x1609 599290589) (not x1917) (= x1756 (x1482 (x808 274184521717934524641157099916833587211) x101 0)) (= 32 x675) x1210 (<= 0 x1670) (= x836 x798) (= x101 (x1482 (x808 x1160) (x273 2) 0)) (= x1670 x133) (= x531 274184521717934524641157099916833587211) (= x1471 x1857) (= x1972 (x1482 (x808 274184521717934524641157099916833587211) (x273 1) 0)) (= x1181 274184521717934524641157099916833587211) (= x1705 x996) (= (or (> x1888 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (< x1888 96) (= true (<= x1888 57896044618658097711785492504343953926634992332820282019728792003956564819967)))) x1917) (= x1261 (x1482 (x808 274184521717934524641157099916833587211) (x273 1) 0)) (not (= x1609 157198259)) (not x49) (<= 0 x1679) (= x1119 (x1567 x995)) (= x1888 (x1015 (- x836 4))) (> 826074471 x1609) (= x49 (> x1705 x1679)) (= 100 x836) (not (= 117300739 x1609)) (= 1 x882) (= (+ x62 x133) x748) (= x996 x1102) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1670) (= x939 (< x1119 x996)) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x1670 x1705)) (= x1243 (x371 1461501637330902918203684832716283019655932542975 x1857)) (= x418 (x371 1461501637330902918203684832716283019655932542975 x1857)) (= x367 (x1482 (x808 x418) (x273 1) 0)) (= (x935 (x808 274184521717934524641157099916833587231)) x1269) (= (x1015 (- x1679 x996)) x369) (= (x1015 (- x1119 x996)) x1011) (= (x371 1461501637330902918203684832716283019655932542975 x1857) x1160)) x1601) (=> (not x1210) x682))) x570))
(assert (x1541 x1260 x1908))
(assert (=> (> (+ 10000 1) x1342) (= (x273 x1342) (x808 x1342))))
(assert (= (x1919 x6) (ite (= x6 x1272) x536 (x979 x6))))
(assert (x1541 x1894 x549))
(assert (x151 x1101))
(assert (x151 x1999))
(assert (x151 x1681))
(assert (x151 x1592))
(assert (x151 x1023))
(assert (x151 x1949))
(assert (x151 x274))
(assert (x195 x192 x89))
(assert (x151 x1888))
(assert (x1541 x747 x518))
(assert (= (ite (= x334 132) 274184521717934524641157099916833587211 (x1945 x334)) (x1074 x334)))
(assert (x151 x616))
(assert (x591 x1152))
(assert (x1992 x1342))
(assert (x889 x1660 x821))
(assert (x151 x1728))
(assert (x151 x135))
(assert (x151 x1366))
(assert (x151 x1386))
(assert (x591 x155))
(assert (x151 x1654))
(assert (x591 x77))
(assert (x151 x341))
(assert (= 274184521717934524641157099916833587235 (x910 (x808 274184521717934524641157099916833587235))))
(assert (x151 x1354))
(assert (= x1437 (=> (and (= x253 (ite x1700 1 0)) (= x1737 (= 0 x1023)) (= x1700 (not x1737))) (=> (and (= x964 x1951) (>= 1461501637330902918203684832716283019655932542975 x781) (= x1356 (not (= 0 x253))) (>= 1461501637330902918203684832716283019655932542975 x1905) (= x1073 x13) (= x693 x1559) (= x896 x323) x1356 (> x874 131) (= x781 x1527) (= x1527 x710) (<= 0 x781) (= (<= x874 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (>= x1905 0) (= x1169 x1982) (<= 0 x1471) (>= 1461501637330902918203684832716283019655932542975 x1471) (= x688 x1471) (= x1889 x111)) x1953))))
(assert (= (=> (= x1226 (= 274184521717934524641157099916833587233 x1648)) (and (=> (and (< x1422 1208925819614629174706176) (<= x374 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x1062 (x1504 160)) (= x713 4272920204) (>= 1208925819614629174706175 x535) (>= x1422 0) (<= x1590 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= 0 x1860) (<= x1860 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x1504 256) x1145) (= (x446 (+ 288 x480)) x901) (> x1533 0) (= x1533 (x935 (x808 274184521717934524641157099916833587233))) (not (= 2362581449 x713)) (not (= 4062139261 x713)) (= 1 x1220) (< x535 1208925819614629174706176) (= (x1504 224) x784) (>= x374 0) (= (x1504 160) x1459) (not (> 2362581449 x713)) (not (= 3257672857 x713)) (= (x1504 224) x733) (= (x1504 256) x1131) (= x641 115197700812830431890159100217698998050002284567939525164234024451216521560064) x1226 (= x1665 (x446 (+ 352 x480))) (<= 0 x1590) (<= x1422 1208925819614629174706175) (= (x1504 192) x1949) (= (x758 x750) x374) (not (< x574 4)) (>= x535 0) (= x761 (x446 (+ 384 x480))) (= x574 4) (= (x1504 192) x1583) (= (x1482 (x808 x1169) (x273 1) 0) x750) (= x982 (x1504 128)) (= (x446 (+ x480 320)) x489) (= (x1504 128) x338) (= 160 x1401) (= x974 x574)) x1496) (=> (not x1226) x597))) x247))
(assert (x154 x91 x1693))
(assert (x591 x943))
(assert (x151 x449))
(assert (= (x1552 x1557) 0))
(assert (x151 x1003))
(assert (x151 x1108))
(assert (x771 x1444 x2000))
(assert (= (x273 274184521717934524641157099916833587235) (x808 274184521717934524641157099916833587235)))
(assert (x591 x1002))
(assert true)
(assert (= (x910 (x808 x984)) x984))
(assert (x151 x1499))
(assert (= 0 (x1936 x2003)))
(assert (x1412 x1184 x1104))
(assert (= (x910 (x273 274184521717934524641157099916833587223)) 274184521717934524641157099916833587223))
(assert (x154 x136 x1655))
(assert (x151 x19))
(assert (= (x273 170141183460469231731687303715884105727) (x808 170141183460469231731687303715884105727)))
(assert (x1541 x1091 x36))
(assert (= (ite (= x1498 x334) 115197700812830431890159100217698998050002284567939525164234024451216521560064 (x1919 x334)) (x1636 x334)))
(assert (= x146 x857))
(assert (x151 x926))
(assert (x151 x1985))
(assert (=> (> (+ 10000 1) x727) (= (x273 x727) (x808 x727))))
(assert (x151 x1604))
(assert (x151 x334))
(assert (x151 x1658))
(assert (x151 x1418))
(assert (x151 x96))
(assert (x151 x1977))
(assert (x151 x1471))
(assert (x151 x1))
(assert (x151 x1036))
(assert (x151 x395))
(assert (= (=> (and (= (not x959) x1978) (= (x446 (+ x1424 416)) x458) (= x318 (x371 340282366920938463463374607431768211455 x1894)) (<= x1108 1208925819614629174706175) (= 0 x189) (= x1506 (x371 255 x1057)) (not (ite x1978 x1978 (and (= true (<= x1894 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (> x1894 170141183460469231731687303715884105727)))) (= x510 (x1919 x1032)) (= x959 (and (> x1894 0) (= (<= x1894 57896044618658097711785492504343953926634992332820282019728792003956564819967) true))) (= x960 (uninterp_mod (* x318 (x1225 x1394)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= x1894 (x1919 x1557)) (>= 1208925819614629174706175 x510) (= (x1919 x863) x1108) (= x1336 (< 0 x1506)) (= x1557 (x446 (+ 288 x1424))) (= x1032 (x446 (+ x1822 64))) (= x1822 (x446 (+ 64 x863)))) (and (=> x1336 x786) (=> (and (= x960 x1784) (= x458 x1532) (not x1336)) x1375))) x490))
(assert (x361 x311))
(assert (x151 x1220))
(assert (x151 x82))
(assert (x151 x188))
(assert (x151 x1855))
(assert (x151 x770))
(assert (x1850 x333))
(assert (x151 x1107))
(assert (x151 x961))
(assert (=> (< (- x598 1) 10000) (= (x273 x598) (x808 x598))))
(assert (x151 x1780))
(assert (x151 x726))
(assert (x1992 274184521717934524641157099916833587227))
(assert (x151 x194))
(assert (x151 x292))
(assert (x591 x91))
(assert (x1992 x970))
(assert (x151 x1857))
(assert (x151 x415))
(assert (x151 x1811))
(assert (x151 x1458))
(assert (= (and (not x1210) x697) x647))
(assert (x151 x444))
(assert (x591 x107))
(assert (x151 x1838))
(assert (x151 x1787))
(assert (x151 x1569))
(assert (x151 x698))
(assert (x151 x1350))
(assert (x151 x1298))
(assert (x151 x1165))
(assert (x151 x1925))
(assert (x151 x1637))
(assert (x591 x1485))
(assert (x151 x1707))
(assert (x771 x1057 x238))
(assert (x151 x1312))
(assert (x151 x1939))
(assert (x151 x1288))
(assert (x151 x397))
(assert (x151 x1010))
(assert (= (x910 (x808 274184521717934524641157099916833587223)) 274184521717934524641157099916833587223))
(assert (=> (< (- x317 1) 10000) (= (x808 x317) (x273 x317))))
(assert (x151 x1615))
(assert (x151 x1434))
(assert (x151 x605))
(assert (= (x808 115197700812830431890159100217698998050002284567939525164234024451216521560064) (x273 115197700812830431890159100217698998050002284567939525164234024451216521560064)))
(assert (x591 x914))
(assert (x151 x1438))
(assert (x151 x1587))
(assert (x771 x242 x624))
(assert (x151 x1323))
(assert (x151 x1390))
(assert (x151 x1127))
(assert (x591 x1660))
(assert (x889 x667 x1499))
(assert (x151 x342))
(assert (x151 x214))
(assert (x591 x928))
(assert (x591 x1698))
(assert (x151 x610))
(assert (= 1208925819614629174706175 (x910 (x273 1208925819614629174706175))))
(assert (x151 x639))
(assert (x151 x1510))
(assert (x151 x724))
(assert (= true x108))
(assert (= (=> (and (>= 1208925819614629174706175 x1681) (= (x371 340282366920938463463374607431768211455 x1472) x1036) (= x689 x80) (= (uninterp_mod (* x1036 x1257) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x1536) (= (x178 928) x1033) (= (ite (or (> x524 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x524) true) (> 0 x524))) 1 0) x1861) (= x1133 (x1015 (- 57896044618658097711785492504343953926634992332820282019728792003956564819968 x524))) (<= x1033 1208925819614629174706175) (= x1823 (x1015 (- 57896044618658097711785492504343953926634992332820282019728792003956564819967 x524))) (= x80 (* x1925 x1536)) (not (> x689 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (= (and (= true (<= x1472 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (< 0 x1472)) x1112) (not (ite x1157 x1157 (and (> x1472 170141183460469231731687303715884105727) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1472))))) (= x759 (x371 x1861 x902)) (= x1043 (ite (or (and (= (<= x1823 57896044618658097711785492504343953926634992332820282019728792003956564819967) (<= x689 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (> x689 x1823)) (and (<= x689 57896044618658097711785492504343953926634992332820282019728792003956564819967) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1823))) 1 0)) (= 0 x806) (not (= x1395 0)) (= (x1763 672) x1221) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (* x1536 x1925)) (= (ite (or (and (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1133) (> x689 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (and (> x1133 x689) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1133) (<= x689 57896044618658097711785492504343953926634992332820282019728792003956564819967)))) 1 0) x902) (= (x299 640) x1715) (= x694 x1416) (= (x178 832) x1472) (= (x178 800) x1681) (= x1925 (x371 18446744073709551615 x1221)) (= x1157 (not x1112)) (= x806 (x371 x1815 x1043)) (= x1815 (ite (not x1439) 1 0)) (not (or (> x1195 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (< x1195 160) (= true (<= x1195 57896044618658097711785492504343953926634992332820282019728792003956564819967))))) (= x694 (x446 (+ x689 x524))) (= 0 x759) (= x1439 (or (and (= true (<= x524 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (< x524 0)) (> x524 57896044618658097711785492504343953926634992332820282019728792003956564819967)))) x25) x1452))
(assert (x151 x1506))
(assert (x151 x1537))
(assert (x591 x1867))
(assert (x591 x1661))
(assert (x151 x565))
(assert (x151 x1161))
(assert (x151 x860))
(assert (x361 x915))
(assert (x151 x1306))
(assert (x151 x1553))
(assert (x195 x1656 x162))
(assert (x151 x749))
(assert (x151 x1348))
(assert (x151 x1017))
(assert (= (x219 x366) (ite (= x1811 x366) x1951 (x1407 x366))))
(assert (x151 x1801))
(assert (x591 x1196))
(assert (= x1375 (=> (and (= x1532 x730) (= (or (and (= true (<= x1784 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (< x1784 0)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1784)) x57) (= (ite x1807 1 0) x1964) (= x1807 (not x57))) x2002)))
(assert (= (or (and (not x1151) x577) x1393) x1748))
(assert (x151 x1116))
(assert (= (x910 (x273 274184521717934524641157099916833587231)) 274184521717934524641157099916833587231))
(assert (x889 x1089 x200))
(assert (= (x273 274184521717934524641157099916833587244) (x808 274184521717934524641157099916833587244)))
(assert (x151 x110))
(assert (= (x219 x6) (ite (= x6 x1811) x1951 (x1407 x6))))
(assert (x151 x946))
(assert (x151 x528))
(assert (= (x910 (x273 3119561463)) 3119561463))
(assert (x591 x109))
(assert (x151 x1320))
(assert (x151 x707))
(assert (x151 x1802))
(assert (= x442 (=> (= x142 (= 274184521717934524641157099916833587227 x362)) (and (=> (not x142) x211) (=> (and (not x1923) (> x799 0) (= 274184521717934524641157099916833587211 x571) (= 36 x172) x142 (= 50942633119752846454219349998365661925608737367104304655302372697894809501696 x1606) (= x1923 (or (and (> 32 x749) (= (<= x749 57896044618658097711785492504343953926634992332820282019728792003956564819967) true)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x749))) (not (< x1706 826074471)) (= x811 (x1482 (x808 274184521717934524641157099916833587211) (x273 1) 0)) (= x1494 32) (= x172 36) (= (x1015 (- x172 4)) x749) (not (= 826074471 x1706)) (<= 0 x521) (not (< x172 4)) (= x546 1) (= x1706 1889567281) (= (x935 (x808 274184521717934524641157099916833587227)) x799) (= (x1215 x811) x521) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x521)) x570)))))
(assert (x151 x1529))
(assert (x151 x1669))
(assert (x151 x1712))
(assert (x151 x1278))
(assert (x151 x71))
(assert (x151 x881))
(assert (= (x808 1110625635) (x273 1110625635)))
(assert (x151 x789))
(assert (= 18446744073709551616 (x910 (x273 18446744073709551616))))
(assert (x151 x1951))
(assert (x151 x653))
(assert (x1992 x687))
(assert (x1419 x1354))
(assert (x151 x1788))
(assert (x151 x1981))
(assert (x591 x885))
(assert (x151 x1435))
(assert (x151 x691))
(assert (x151 x958))
(assert (x151 x1860))
(assert (x151 x439))
(assert (x1412 x1386 x1733))
(assert (x151 x381))
(assert (x151 x576))
(assert (x771 x770 x886))
(assert (x151 x1868))
(assert (= 0 (x1552 x899)))
(assert (x195 x614 x1047))
(assert (x151 x1532))
(assert (x151 x571))
(assert (x151 x399))
(assert (= (and (not x142) x1066) x1859))
(assert (x151 x1424))
(assert (x1850 x1115))
(assert (x151 x1248))
(assert (x433 x1595 x1034))
(assert (= 3695885053 (x910 (x273 3695885053))))
(assert (x151 x1639))
(assert (x151 x1932))
(assert (x1501 x1332 x1369))
(assert (= (- (/ x155 95780971304118053647396689196894323976171195136475136) (uninterp_frac x155 95780971304118053647396689196894323976171195136475136)) (x1230 x155 176)))
(assert (x151 x1171))
(assert (= x231 x1024))
(assert (x151 x909))
(assert (x151 x344))
(assert (x151 x1502))
(assert (x151 x733))
(assert (x151 x200))
(assert (x151 x644))
(assert (x151 x31))
(assert (x591 x1531))
(assert (x1501 x311 x1235))
(assert (x151 x713))
(assert (x591 x1728))
(assert (x151 x586))
(assert (x151 x1735))
(assert (x1541 x1394 x1761))
(assert (x151 x1971))
(assert (x1992 x1160))
(assert (x151 x690))
(assert (= x687 (x910 (x808 x687))))
(assert (x151 x1874))
(assert (x151 x1950))
(assert (x1850 x1433))
(assert (= (x273 10141204801825835211973625643007) (x808 10141204801825835211973625643007)))
(assert (x151 x1989))
(assert (x151 x1447))
(assert (x151 x1400))
(assert (= (x1552 x1967) 0))
(assert (x591 x311))
(assert (= (x910 (x808 x727)) x727))
(assert (x151 x320))
(assert (x1992 x1702))
(assert (x151 x1065))
(assert (x433 x1959 x520))
(assert (x151 x380))
(assert (x151 x1505))
(assert (x151 x70))
(assert (x151 x1738))
(assert (= (or (and x146 (not x1336)) x265) x1393))
(assert (x151 x378))
(assert (x1501 x1728 x1943))
(assert (x151 x1371))
(assert (= x1829 true))
(assert (x151 x521))
(assert (x151 x1068))
(assert (x151 x72))
(assert (= (and x1713 x1998) x1571))
(assert (= x1608 (and x410 (not x969))))
(assert (= x561 (x910 (x808 x561))))
(assert (x591 x452))
(assert (x151 x546))
(assert (x151 x253))
(assert (x151 x1920))
(assert (x151 x1450))
(assert (x151 x1114))
(assert (x591 x323))
(assert (= 2514000705 (x910 (x273 2514000705))))
(assert (x151 x172))
(assert (= (or (and (not x476) x1571) x1565) x932))
(assert (x151 x168))
(assert (x771 x381 x1783))
(assert (x889 x1155 x1891))
(assert (x151 x1132))
(assert (x151 x40))
(assert (x151 x250))
(assert (x151 x1657))
(assert (x889 x1661 x233))
(assert (x1419 x1260))
(assert (x151 x554))
(assert (= x120 (=> (and (= (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1790) (and (= true (<= x1790 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (> 0 x1790))) x354) (= (not x354) x1351) (= x8 (ite x1351 1 0))) x275)))
(assert (x771 x419 x1897))
(assert (= 340282366920938463463374607431768211456 (x910 (x273 340282366920938463463374607431768211456))))
(assert (x591 x168))
(assert (x151 x1702))
(assert (= (x273 274184521717934524641157099916833587233) (x808 274184521717934524641157099916833587233)))
(assert (x151 x598))
(assert (x151 x1916))
(assert (x361 x1939))
(assert (x1992 x270))
(assert (x591 x693))
(assert (x151 x915))
(assert (x151 x1907))
(assert (x591 x902))
(assert (x151 x630))
(assert (x151 x259))
(assert (x1992 x561))
(assert (x151 x688))
(assert (x151 x799))
(assert (= x577 (and x930 x585)))
(assert (x151 x42))
(assert (x591 x958))
(assert (x151 x1432))
(assert (x151 x38))
(assert (x1541 x928 x1077))
(assert (x591 340282366920938463463374607431768211455))
(assert (x151 x1990))
(assert (x151 x311))
(assert (x151 x1598))
(assert (x151 x794))
(assert (x151 x1513))
(assert (x361 x168))
(assert (= x149 true))
(assert (x361 x1176))
(assert (x151 x220))
(assert (x151 x95))
(assert (= 2068668150 (x910 (x273 2068668150))))
(assert (x591 x1068))
(assert (x151 x1886))
(assert (= 65535 (x910 (x273 65535))))
(assert (x591 x136))
(assert (x591 x1332))
(assert (x151 x1403))
(assert (x1501 x168 x1391))
(assert (x151 x291))
(assert (= x270 (x910 (x808 x270))))
(assert (x151 x1590))
(assert (x1850 x1201))
(assert (x151 x1960))
(assert (= x1335 (and x1455 x1644)))
(assert (x151 x1882))
(assert (x151 x198))
(assert (x591 x1221))
(assert (x151 x531))
(assert (x151 x1683))
(assert (x151 x1559))
(assert (x1412 x77 x847))
(assert (x151 x1749))
(assert (x151 x432))
(assert (= (ite (= x1153 x904) 115197700812830431890159100217698998050002284567939525164234024451216521560064 (x1469 x904)) (x1484 x904)))
(assert (x1412 x984 x416))
(assert (x151 x759))
(assert (x151 x339))
(assert (x591 65535))
(assert (x591 x1184))
(assert (x151 x765))
(assert (x151 x912))
(assert (= x263 (or (and x1335 (not x1771)) x1918)))
(assert (x151 x1135))
(assert (x151 x284))
(assert (x151 x1103))
(assert (x151 x1043))
(assert (= (x808 57896044618658097711785492504343953926634992332820282019728792003956564819968) (x273 57896044618658097711785492504343953926634992332820282019728792003956564819968)))
(assert (x889 x958 x1699))
(assert (=> (> (+ 10000 1) x970) (= (x273 x970) (x808 x970))))
(assert (x151 x973))
(assert (x591 x1499))
(assert (x151 x1247))
(assert (x151 x657))
(assert (x1501 x690 x804))
(assert (x151 x1947))
(assert (x151 x58))
(assert (x151 x300))
(assert (x151 x1994))
(assert (x151 x922))
(assert (x151 x1871))
(assert (x151 x1595))
(assert (= (x1484 x334) (ite (= x334 x1153) 115197700812830431890159100217698998050002284567939525164234024451216521560064 (x1469 x334))))
(assert (=> (< (- x1885 1) 10000) (= (x273 x1885) (x808 x1885))))
(assert (x591 x1815))
(assert (x151 x1975))
(assert (x591 115792089237316195423570985008687907853269984665640564039457584007913129639904))
(assert (x151 x1352))
(assert (x151 x1416))
(assert (x151 x1223))
(assert (x151 x1051))
(assert (x151 x928))
(assert (x151 x97))
(assert (x151 x1833))
(assert (x151 x1580))
(assert (x151 x161))
(assert (x151 x1007))
(assert (x151 x1268))
(assert (x433 x1318 x1445))
(assert (x1412 x109 x1337))
(assert (x151 x1952))
(assert (x151 x1887))
(assert (= (and (not x191) x283) x1066))
(assert (x151 x1212))
(assert (= (- (/ x1531 2) (uninterp_frac x1531 2)) (x1230 x1531 1)))
(assert (x151 x619))
(assert (x151 x617))
(assert (x151 x1179))
(assert (x151 x821))
(assert (x151 x67))
(assert (x151 x471))
(assert (x151 x1706))
(assert (x151 x1380))
(assert (x151 x914))
(assert (x151 x669))
(assert (x591 x1065))
(assert (= (x1074 x6) (ite (= 132 x6) 274184521717934524641157099916833587211 (x1945 x6))))
(assert (x151 x814))
(assert (x151 x1824))
(assert (x1412 x209 x131))
(assert (x151 x601))
(assert (x151 x454))
(assert (x1992 x1243))
(assert (x151 x1809))
(assert (x1992 x1562))
(assert (x151 x85))
(assert (x151 x871))
(assert (= (=> (and (= x365 (x371 1 x136)) (= (not (= x365 0)) x1713)) (and (=> (and (= x617 x921) (not x1713)) x1643) (=> x1713 x222))) x293))
(assert (= x802 (=> (and (= (x400 x841) x136) (>= x619 0) (>= 1208925819614629174706175 x535) (= x670 (x229 128)) (<= 0 x1377) (>= x1960 0) (not (= 2362581449 x1716)) (= false x478) (= x1937 x688) (>= x117 0) (>= x1785 0) (= x1793 (x1482 (x808 x984) (x273 5) 0)) (<= 0 x535) (= x1744 3840337785) (<= x1937 1461501637330902918203684832716283019655932542975) (not (= x1716 3257672857)) (> 2068668150 x226) (<= 0 x1017) (<= x129 18446744073709551615) (not (< x226 950698303)) (<= 0 x232) (< x136 65536) (>= 1208925819614629174706175 x1422) (>= 1099511627775 x1017) x1234 (= (x1816 (x808 274184521717934524641157099916833587235)) x1446) (= x952 (> (x935 (x808 274184521717934524641157099916833587211)) 0)) (<= x1971 255) (<= 0 x788) (= x166 (< 0 (x935 (x808 274184521717934524641157099916833587223)))) x1755 (>= x765 0) (>= 20282409603651670423947251286015 x837) (= (x229 224) x385) (>= 18446744073709551615 x70) (> x1657 0) (>= 18446744073709551615 x793) (<= 0 x837) (= x1833 x828) (>= x136 0) (= x1110 false) (<= x287 18446744073709551615) (< x226 1110625635) (= (x229 192) x1950) (<= x1377 255) (>= x280 0) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1590) (= x63 274184521717934524641157099916833587233) (= x94 4) (>= x309 0) (> x500 0) (>= x129 0) (= x688 x1150) (= x818 (x1645 x1793)) (= x226 950698303) (= (x758 x376) x280) (<= 0 x1937) (not (< x1716 2362581449)) (<= 0 x535) (= x1073 x1103) (>= x360 0) (>= x1422 0) (= x1657 (x935 (x808 274184521717934524641157099916833587211))) (= (< 0 (x935 (x808 274184521717934524641157099916833587235))) x854) (>= x1871 0) (<= x1871 1099511627775) (>= x992 0) (>= x963 0) (= 274184521717934524641157099916833587233 x97) (<= x1246 1461501637330902918203684832716283019655932542975) (= 4 x60) (= (x1482 (x808 x1169) (x273 1) 0) x376) (= x1260 (x1425 x168)) (>= 18446744073709551615 x765) (= x94 4) (= x1539 (x1816 (x808 274184521717934524641157099916833587223))) (<= x1960 18446744073709551615) (= 115197700812830431890159100217698998050002284567939525164234024451216521560064 x1114) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1860) (= (x1482 (x808 x984) (x273 5) 0) x841) (= x703 (x229 160)) (>= x793 0) (< x1422 1208925819614629174706176) (>= 65535 x136) (= (< 0 (x935 (x808 274184521717934524641157099916833587244))) x1021) (>= 1208925819614629174706175 x1868) (>= 1461501637330902918203684832716283019655932542975 x1833) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x280) (= (x935 (x808 274184521717934524641157099916833587233)) x500) (<= x117 18446744073709551615) (>= x1150 0) (<= x1524 255) (>= x70 0) (= x984 x284) (>= 1461501637330902918203684832716283019655932542975 x984) (= false x1333) x421 x854 (<= 0 x1312) (= (x1816 (x808 274184521717934524641157099916833587244)) x963) (>= 255 x619) (= x992 (x1816 (x808 274184521717934524641157099916833587211))) (<= x788 1208925819614629174706175) (>= 1461501637330902918203684832716283019655932542975 x284) (= (x229 192) x315) (>= x1539 0) (>= x1971 0) (>= 20282409603651670423947251286015 x818) (= (x229 256) x1183) (= x1103 0) (<= x360 20282409603651670423947251286015) (<= 0 x1590) (<= 0 x1446) (<= x1422 1208925819614629174706175) (<= 0 x1860) (= x1196 (x1425 x818)) (>= x1182 0) (= x1182 (x1816 (x808 274184521717934524641157099916833587233))) (<= x232 18446744073709551615) (= (> (x935 (x808 274184521717934524641157099916833587227)) 0) x421) (= x1117 x724) (= (< 0 (x935 (x808 274184521717934524641157099916833587233))) x1234) (= 4272920204 x1716) (= x245 (x229 128)) (not (< x94 4)) (>= x287 0) (<= 0 x818) (= x710 x828) x952 (= (x1816 (x808 274184521717934524641157099916833587231)) x1312) (>= x1117 0) (<= 0 x1868) (= (x229 160) x1051) (= (x229 224) x720) (<= 0 x284) (>= x66 0) (= x66 (x1816 (x808 274184521717934524641157099916833587227))) x166 (> 20282409603651670423947251286016 x818) (= (x229 256) x878) (<= 0 x1524) x1021 (= x616 x1169) (<= 0 x1422) (<= x1117 1461501637330902918203684832716283019655932542975) (<= x309 20282409603651670423947251286015) (< x535 1208925819614629174706176) (not (= x1716 4062139261)) (= x1364 false) (= 128 x565) (>= 1461501637330902918203684832716283019655932542975 x1150) (or (and (not (= 115792089237316195423570985008687907853269984655499359237631748795939503996928 x74)) (>= 18446744073709551615 x70) (> 18446744073709551616 x70) (= x1743 x1350) (= x1881 (x371 20282409603651670423947251286015 x690)) x1831 (= (x371 20282409603651670423947251286015 x1350) x1845) (not (> x1845 10141204801825835211973625643007)) (= x168 x1981) (= x1743 (* x1881 x70)) (= x1981 (x1015 (- 0 x74))) (= (x1425 x1350) x74) (not (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x690) (and (< x690 0) (= (<= x690 57896044618658097711785492504343953926634992332820282019728792003956564819967) true)))) (= (x1015 (- 0 x1196)) x690) (not (= 115792089237316195423570985008687907853269984655499359237631748795939503996928 x1196)) (>= x70 0) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (* x1881 x70))) (and (= x1575 (x371 20282409603651670423947251286015 x1196)) (not x1831) (<= 0 x1960) (= x940 x168) (< (* x1960 x1575) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x1158 (x371 20282409603651670423947251286015 x940)) (not (> x1158 10141204801825835211973625643007)) (< x1960 18446744073709551616) (= x1594 (* x1960 x1575)) (= x940 x1594) (not (or (> x1196 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1196) true) (> 0 x1196)))) (<= x1960 18446744073709551615))) (<= x535 1208925819614629174706175) (<= 0 x1246) (= (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1196) (and (> 0 x1196) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1196) true))) x1831) (>= 20282409603651670423947251286015 x1785) (<= 0 x1833) (= x1755 (< 0 (x935 (x808 274184521717934524641157099916833587231)))) (> 1168994686 x226)) x593)))
(assert (x1992 x1729))
(assert (x151 x33))
(assert (= (x7 x153) 0))
(assert (x151 x1429))
(assert (x195 x547 x1392))
(assert (x151 x1890))
(assert (x151 x1476))
(assert (x1992 x1273))
(assert (x151 x623))
(assert (x151 x634))
(assert (x151 x540))
(assert (x151 x1509))
(assert (x151 x641))
(assert (x1412 x1857 x537))
(assert (x151 x852))
(assert (x151 x1094))
(assert (x151 x1659))
(assert (= (=> (= (= x1522 274184521717934524641157099916833587223) x872) (and (=> (not x872) x108) (=> (and (= x1069 x1238) (= x295 (or (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1592)) (< x1592 64)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1592))) (<= 0 x978) (= x1041 x1851) (not x1249) (= 1 x1725) (not (= 826074471 x743)) (= 68 x945) (not (= 2514000705 x743)) (not x295) (= x1194 x1652) (= (> x1238 x978) x1249) (= x945 x920) (= x512 274184521717934524641157099916833587211) (= x1851 x1238) (>= 1461501637330902918203684832716283019655932542975 x1273) (= (x1482 (x808 x1273) (x273 1) 0) x543) (not (= x743 1889567281)) (= (x1015 (- x945 4)) x1592) (= (x935 (x808 274184521717934524641157099916833587223)) x71) (= x1892 32) x872 (>= x1194 0) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x978) (<= x1194 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x288 x1346) x978) (= x1346 (x1482 (x808 274184521717934524641157099916833587211) (x273 1) 0)) (= x1194 (x1599 x543)) (not (< x743 826074471)) (= x492 x1273) (= (x1482 (x808 274184521717934524641157099916833587211) (x273 1) 0) x1555) (= x1390 (x1015 (- x978 x1238))) (> x71 0) (= 274184521717934524641157099916833587211 x1254) (= x743 2835717307) (not (< x945 4)) (< (+ x1194 x1851) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x1273 x1142) (= x1315 76450787359836037641860180984291677749980919077056822294353438043884394381312) (= (+ x1041 x1652) x248)) x1370))) x1402))
(assert (x889 x1698 x485))
(assert (x151 x128))
(assert (x151 x896))
(assert (x591 x1675))
(assert (x151 x1162))
(assert (x151 x226))
(assert (= x585 (and x146 x1336)))
(assert (= (x273 3833100637) (x808 3833100637)))
(assert (x591 x308))
(assert (x151 x61))
(assert (x151 x1979))
(assert (x151 x830))
(assert (x151 x583))
(assert (x591 x644))
(assert (= true x597))
(assert (x151 x1845))
(assert (x591 x1129))
(assert (x151 x1372))
(assert (x151 x796))
(assert (x151 x582))
(assert (= (x910 (x273 1461501637330902918203684832716283019655932542975)) 1461501637330902918203684832716283019655932542975))
(assert (and (= (x1138 2 168) 374144419156711147060143317175368453031918731001856) (= (x1138 2 46) 70368744177664) (= 6582018229284824168619876730229402019930943462534319453394436096 (x1138 2 212)) (= 10384593717069655257060992658440192 (x1138 2 113)) (= 128 (x1138 2 7)) (= 79228162514264337593543950336 (x1138 2 96)) (= (x1138 2 102) 5070602400912917605986812821504) (= 633825300114114700748351602688 (x1138 2 99)) (= (x1138 2 101) 2535301200456458802993406410752) (= 56539106072908298546665520023773392506479484700019806659891398441363832832 (x1138 2 245)) (= (x1138 2 45) 35184372088832) (= (x1138 2 23) 8388608) (= 46768052394588893382517914646921056628989841375232 (x1138 2 165)) (= (x1138 2 247) 226156424291633194186662080095093570025917938800079226639565593765455331328) (= (x1138 2 190) 1569275433846670190958947355801916604025588861116008628224) (= 23945242826029513411849172299223580994042798784118784 (x1138 2 174)) (= (x1138 2 186) 98079714615416886934934209737619787751599303819750539264) (= 13479973333575319897333507543509815336818572211270286240551805124608 (x1138 2 223)) (= 39614081257132168796771975168 (x1138 2 95)) (= (x1138 2 107) 162259276829213363391578010288128) (= 43556142965880123323311949751266331066368 (x1138 2 135)) (= (x1138 2 67) 147573952589676412928) (= 5986310706507378352962293074805895248510699696029696 (x1138 2 172)) (= 316912650057057350374175801344 (x1138 2 98)) (= 1329227995784915872903807060280344576 (x1138 2 120)) (= 2147483648 (x1138 2 31)) (= (x1138 2 38) 274877906944) (= 137438953472 (x1138 2 37)) (= 100433627766186892221372630771322662657637687111424552206336 (x1138 2 196)) (= (x1138 2 110) 1298074214633706907132624082305024) (= (x1138 2 225) 53919893334301279589334030174039261347274288845081144962207220498432) (= (x1138 2 160) 1461501637330902918203684832716283019655932542976) (= 1267650600228229401496703205376 (x1138 2 100)) (= (x1138 2 11) 2048) (= (x1138 2 2) 4) (= 1208925819614629174706176 (x1138 2 80)) (= (x1138 2 240) 1766847064778384329583297500742918515827483896875618958121606201292619776) (= (x1138 2 35) 34359738368) (= (x1138 2 146) 89202980794122492566142873090593446023921664) (= (x1138 2 59) 576460752303423488) (= 14134776518227074636666380005943348126619871175004951664972849610340958208 (x1138 2 243)) (= (x1138 2 178) 383123885216472214589586756787577295904684780545900544) (= (x1138 2 62) 4611686018427387904) (= (x1138 2 255) 57896044618658097711785492504343953926634992332820282019728792003956564819968) (= 3618502788666131106986593281521497120414687020801267626233049500247285301248 (x1138 2 251)) (= 64 (x1138 2 6)) (= 95780971304118053647396689196894323976171195136475136 (x1138 2 176)) (= (x1138 2 21) 2097152) (= (x1138 2 224) 26959946667150639794667015087019630673637144422540572481103610249216) (= (x1138 2 26) 67108864) (= 262144 (x1138 2 18)) (= 52656145834278593348959013841835216159447547700274555627155488768 (x1138 2 215)) (= (x1138 2 27) 134217728) (= (x1138 2 106) 81129638414606681695789005144064) (= 21778071482940061661655974875633165533184 (x1138 2 134)) (= (x1138 2 104) 20282409603651670423947251286016) (= 618970019642690137449562112 (x1138 2 89)) (= (x1138 2 159) 730750818665451459101842416358141509827966271488) (= 309485009821345068724781056 (x1138 2 88)) (= (x1138 2 79) 604462909807314587353088) (= 649037107316853453566312041152512 (x1138 2 109)) (= (x1138 2 92) 4951760157141521099596496896) (= 664613997892457936451903530140172288 (x1138 2 119)) (= (x1138 2 229) 862718293348820473429344482784628181556388621521298319395315527974912) (= 170141183460469231731687303715884105728 (x1138 2 127)) (= 22835963083295358096932575511191922182123945984 (x1138 2 154)) (= 72057594037927936 (x1138 2 56)) (= 3213876088517980551083924184682325205044405987565585670602752 (x1138 2 201)) (= (x1138 2 155) 45671926166590716193865151022383844364247891968) (= (x1138 2 36) 68719476736) (= 2199023255552 (x1138 2 41)) (= (x1138 2 22) 4194304) (= 842498333348457493583344221469363458551160763204392890034487820288 (x1138 2 219)) (= 2475880078570760549798248448 (x1138 2 91)) (= 41538374868278621028243970633760768 (x1138 2 115)) (= (x1138 2 203) 12855504354071922204335696738729300820177623950262342682411008) (= 1024 (x1138 2 10)) (= (x1138 2 24) 16777216) (= (x1138 2 42) 4398046511104) (= 21267647932558653966460912964485513216 (x1138 2 124)) (= (x1138 2 129) 680564733841876926926749214863536422912) (= (x1138 2 44) 17592186044416) (= (x1138 2 167) 187072209578355573530071658587684226515959365500928) (= (x1138 2 54) 18014398509481984) (= 16384 (x1138 2 14)) (= 16 (x1138 2 4)) (= 431359146674410236714672241392314090778194310760649159697657763987456 (x1138 2 228)) (= (x1138 2 141) 2787593149816327892691964784081045188247552) (= 8589934592 (x1138 2 33)) (= 7067388259113537318333190002971674063309935587502475832486424805170479104 (x1138 2 242)) (= (x1138 2 237) 220855883097298041197912187592864814478435487109452369765200775161577472) (= (x1138 2 213) 13164036458569648337239753460458804039861886925068638906788872192) (= 3138550867693340381917894711603833208051177722232017256448 (x1138 2 191)) (= 13803492693581127574869511724554050904902217944340773110325048447598592 (x1138 2 233)) (= (x1138 2 125) 42535295865117307932921825928971026432) (= 8 (x1138 2 3)) (= 25711008708143844408671393477458601640355247900524685364822016 (x1138 2 204)) (= 904625697166532776746648320380374280103671755200316906558262375061821325312 (x1138 2 249)) (= (x1138 2 63) 9223372036854775808) (= (x1138 2 132) 5444517870735015415413993718908291383296) (= 11692013098647223345629478661730264157247460343808 (x1138 2 163)) (= (x1138 2 111) 2596148429267413814265248164610048) (= (x1138 2 108) 324518553658426726783156020576256) (= 93536104789177786765035829293842113257979682750464 (x1138 2 166)) (= (x1138 2 248) 452312848583266388373324160190187140051835877600158453279131187530910662656) (= 4096 (x1138 2 12)) (= 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1138 2 256)) (= (x1138 2 198) 401734511064747568885490523085290650630550748445698208825344) (= (x1138 2 238) 441711766194596082395824375185729628956870974218904739530401550323154944) (= (x1138 2 244) 28269553036454149273332760011886696253239742350009903329945699220681916416) (= 9444732965739290427392 (x1138 2 73)) (= (x1138 2 142) 5575186299632655785383929568162090376495104) (= 73786976294838206464 (x1138 2 66)) (= 36028797018963968 (x1138 2 55)) (= 1048576 (x1138 2 20)) (= (x1138 2 197) 200867255532373784442745261542645325315275374222849104412672) (= (x1138 2 143) 11150372599265311570767859136324180752990208) (= (x1138 2 61) 2305843009213693952) (= (x1138 2 97) 158456325028528675187087900672) (= 713623846352979940529142984724747568191373312 (x1138 2 149)) (= 1152921504606846976 (x1138 2 60)) (= (x1138 2 170) 1496577676626844588240573268701473812127674924007424) (= (x1138 2 164) 23384026197294446691258957323460528314494920687616) (= (x1138 2 195) 50216813883093446110686315385661331328818843555712276103168) (= 37778931862957161709568 (x1138 2 75)) (= (x1138 2 64) 18446744073709551616) (= (x1138 2 70) 1180591620717411303424) (= (x1138 2 49) 562949953421312) (= 83076749736557242056487941267521536 (x1138 2 116)) (= (x1138 2 209) 822752278660603021077484591278675252491367932816789931674304512) (= 105312291668557186697918027683670432318895095400549111254310977536 (x1138 2 216)) (= 2923003274661805836407369665432566039311865085952 (x1138 2 161)) (= (x1138 2 194) 25108406941546723055343157692830665664409421777856138051584) (= (x1138 2 114) 20769187434139310514121985316880384) (= 178405961588244985132285746181186892047843328 (x1138 2 147)) (= (x1138 2 112) 5192296858534827628530496329220096) (= 9903520314283042199192993792 (x1138 2 93)) (= (x1138 2 0) 1) (= 75557863725914323419136 (x1138 2 76)) (= 26328072917139296674479506920917608079723773850137277813577744384 (x1138 2 214)) (= (x1138 2 68) 295147905179352825856) (= 356811923176489970264571492362373784095686656 (x1138 2 148)) (= 6129982163463555433433388108601236734474956488734408704 (x1138 2 182)) (= 1073741824 (x1138 2 30)) (= 3533694129556768659166595001485837031654967793751237916243212402585239552 (x1138 2 241)) (= (x1138 2 158) 365375409332725729550921208179070754913983135744) (= (x1138 2 150) 1427247692705959881058285969449495136382746624) (= 6427752177035961102167848369364650410088811975131171341205504 (x1138 2 202)) (= 3291009114642412084309938365114701009965471731267159726697218048 (x1138 2 211)) (= (x1138 2 17) 131072) (= (x1138 2 227) 215679573337205118357336120696157045389097155380324579848828881993728) (= (x1138 2 94) 19807040628566084398385987584) (= 18889465931478580854784 (x1138 2 74)) (= 4835703278458516698824704 (x1138 2 82)) (= (x1138 2 253) 14474011154664524427946373126085988481658748083205070504932198000989141204992) (= 1809251394333065553493296640760748560207343510400633813116524750123642650624 (x1138 2 250)) (= 549755813888 (x1138 2 39)) (= 1393796574908163946345982392040522594123776 (x1138 2 140)) (= 1237940039285380274899124224 (x1138 2 90)) (= 1099511627776 (x1138 2 40)) (= (x1138 2 121) 2658455991569831745807614120560689152) (= 9007199254740992 (x1138 2 53)) (= 1725436586697640946858688965569256363112777243042596638790631055949824 (x1138 2 230)) (= (x1138 2 28) 268435456) (= (x1138 2 151) 2854495385411919762116571938898990272765493248) (= 302231454903657293676544 (x1138 2 78)) (= 281474976710656 (x1138 2 48)) (= 2993155353253689176481146537402947624255349848014848 (x1138 2 171)) (= (x1138 2 123) 10633823966279326983230456482242756608) (= (x1138 2 156) 91343852333181432387730302044767688728495783936) (= 2 (x1138 2 1)) (= (x1138 2 71) 2361183241434822606848) (= (x1138 2 192) 6277101735386680763835789423207666416102355444464034512896) (= (x1138 2 239) 883423532389192164791648750371459257913741948437809479060803100646309888) (= (x1138 2 136) 87112285931760246646623899502532662132736) (= (x1138 2 189) 784637716923335095479473677900958302012794430558004314112) (= 392318858461667547739736838950479151006397215279002157056 (x1138 2 188)) (= 6739986666787659948666753771754907668409286105635143120275902562304 (x1138 2 222)) (= 256 (x1138 2 8)) (= (x1138 2 254) 28948022309329048855892746252171976963317496166410141009864396001978282409984) (= (x1138 2 231) 3450873173395281893717377931138512726225554486085193277581262111899648) (= 3369993333393829974333376885877453834204643052817571560137951281152 (x1138 2 221)) (= (x1138 2 232) 6901746346790563787434755862277025452451108972170386555162524223799296) (= 51422017416287688817342786954917203280710495801049370729644032 (x1138 2 205)) (= 166153499473114484112975882535043072 (x1138 2 117)) (= 1645504557321206042154969182557350504982735865633579863348609024 (x1138 2 210)) (= 1684996666696914987166688442938726917102321526408785780068975640576 (x1138 2 220)) (= 182687704666362864775460604089535377456991567872 (x1138 2 157)) (= 196159429230833773869868419475239575503198607639501078528 (x1138 2 187)) (= (x1138 2 179) 766247770432944429179173513575154591809369561091801088) (= 12554203470773361527671578846415332832204710888928069025792 (x1138 2 193)) (= (x1138 2 128) 340282366920938463463374607431768211456) (= 10141204801825835211973625643008 (x1138 2 103)) (= 22300745198530623141535718272648361505980416 (x1138 2 144)) (= (x1138 2 177) 191561942608236107294793378393788647952342390272950272) (= (x1138 2 83) 9671406556917033397649408) (= 32768 (x1138 2 15)) (= 3064991081731777716716694054300618367237478244367204352 (x1138 2 181)) (= (x1138 2 13) 8192) (= (x1138 2 5) 32) (= 49039857307708443467467104868809893875799651909875269632 (x1138 2 185)) (= 332306998946228968225951765070086144 (x1138 2 118)) (= 8796093022208 (x1138 2 43)) (= (x1138 2 105) 40564819207303340847894502572032) (= (x1138 2 234) 27606985387162255149739023449108101809804435888681546220650096895197184) (= 536870912 (x1138 2 29)) (= 4722366482869645213696 (x1138 2 72)) (= 2722258935367507707706996859454145691648 (x1138 2 131)) (= (x1138 2 184) 24519928653854221733733552434404946937899825954937634816) (= (x1138 2 65) 36893488147419103232) (= (x1138 2 206) 102844034832575377634685573909834406561420991602098741459288064) (= (x1138 2 200) 1606938044258990275541962092341162602522202993782792835301376) (= 10889035741470030830827987437816582766592 (x1138 2 133)) (= 590295810358705651712 (x1138 2 69)) (= 205688069665150755269371147819668813122841983204197482918576128 (x1138 2 207)) (= (x1138 2 32) 4294967296) (= 348449143727040986586495598010130648530944 (x1138 2 138)) (= (x1138 2 9) 512) (= 4503599627370496 (x1138 2 52)) (= (x1138 2 246) 113078212145816597093331040047546785012958969400039613319782796882727665664) (= (x1138 2 235) 55213970774324510299478046898216203619608871777363092441300193790394368) (= (x1138 2 199) 803469022129495137770981046170581301261101496891396417650688) (= (x1138 2 208) 411376139330301510538742295639337626245683966408394965837152256) (= (x1138 2 16) 65536) (= (x1138 2 217) 210624583337114373395836055367340864637790190801098222508621955072) (= (x1138 2 137) 174224571863520493293247799005065324265472) (= 2417851639229258349412352 (x1138 2 81)) (= (x1138 2 34) 17179869184) (= (x1138 2 145) 44601490397061246283071436545296723011960832) (= (x1138 2 152) 5708990770823839524233143877797980545530986496) (= 11972621413014756705924586149611790497021399392059392 (x1138 2 173)) (= (x1138 2 169) 748288838313422294120286634350736906063837462003712) (= 85070591730234615865843651857942052864 (x1138 2 126)) (= 1532495540865888858358347027150309183618739122183602176 (x1138 2 180)) (= 77371252455336267181195264 (x1138 2 86)) (= 19342813113834066795298816 (x1138 2 84)) (= 47890485652059026823698344598447161988085597568237568 (x1138 2 175)) (= 33554432 (x1138 2 25)) (= 107839786668602559178668060348078522694548577690162289924414440996864 (x1138 2 226)) (= (x1138 2 162) 5846006549323611672814739330865132078623730171904) (= (x1138 2 139) 696898287454081973172991196020261297061888) (= (x1138 2 252) 7237005577332262213973186563042994240829374041602535252466099000494570602496) (= (x1138 2 87) 154742504910672534362390528) (= (x1138 2 218) 421249166674228746791672110734681729275580381602196445017243910144) (= (x1138 2 58) 288230376151711744) (= 12259964326927110866866776217202473468949912977468817408 (x1138 2 183)) (= 144115188075855872 (x1138 2 57)) (= (x1138 2 85) 38685626227668133590597632) (= (x1138 2 236) 110427941548649020598956093796432407239217743554726184882600387580788736) (= 1361129467683753853853498429727072845824 (x1138 2 130)) (= 140737488355328 (x1138 2 47)) (= (x1138 2 19) 524288) (= 2251799813685248 (x1138 2 51)) (= (x1138 2 153) 11417981541647679048466287755595961091061972992) (= 5316911983139663491615228241121378304 (x1138 2 122)) (= 1125899906842624 (x1138 2 50)) (= 151115727451828646838272 (x1138 2 77))))
(assert (x151 x15))
(assert (x151 x1078))
(assert (x151 x807))
(assert (x151 x171))
(assert (x151 x1967))
(assert (x151 x323))
(assert (x151 x832))
(assert (x151 x825))
(assert (x1501 x1152 x486))
(assert (x151 x1030))
(assert (x151 x129))
(assert (x151 x60))
(assert (= x305 (and x1748 (not x1762))))
(assert (= x682 (=> (= x849 (= x601 274184521717934524641157099916833587227)) (and (=> (and (not (= x700 404098525)) (= x1399 (x935 (x808 274184521717934524641157099916833587227))) (< (+ x1739 x745) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= (x371 1461501637330902918203684832716283019655932542975 x1386) x1342) (= x24 (x1482 (x808 x598) (x273 2) 0)) (= (x1015 (- x1910 x353)) x1640) (= x554 274184521717934524641157099916833587211) (<= 0 x1910) (= x637 274184521717934524641157099916833587211) (= x1922 (x1482 (x808 x1562) (x273 1) 0)) (= (x1015 (- x430 x353)) x630) (not (= 157198259 x700)) (< x700 826074471) (= x798 x1882) (= x1903 (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x314) (and (> 96 x314) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x314) true)))) (= x167 (x371 1461501637330902918203684832716283019655932542975 x1386)) (= 274184521717934524641157099916833587211 x1130) (= (x371 1461501637330902918203684832716283019655932542975 x1386) x1562) x849 (= x598 (x371 1461501637330902918203684832716283019655932542975 x1386)) (>= x430 0) (= x675 32) (= x353 x1102) (= x430 (x1215 x525)) (= x1882 100) (= 1 x882) (= x745 (x654 x257)) (= x1739 x1340) (= (x1482 (x808 274184521717934524641157099916833587211) x24 0) x1703) (= x700 599290589) (not x1903) (= (x1482 (x808 274184521717934524641157099916833587211) (x273 1) 0) x578) (not (> 4 x1882)) (= x1386 x1471) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x745) (= (+ x1340 x1415) x1052) (<= x430 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x1757 (< x1910 x1739)) (not (= x700 117300739)) (= x257 (x1482 (x808 274184521717934524641157099916833587211) (x273 1) 0)) (not x1757) (= x1415 x745) (< 0 x1399) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1910) (= x314 (x1015 (- x1882 4))) (= x1739 x353) (= (x498 x1703) x1910) (= 16156842317565293874272834530371880720966471053262404558597773956279093428224 x163) (= x1349 274184521717934524641157099916833587211) (not x696) (<= 0 x745) (>= 1461501637330902918203684832716283019655932542975 x1386) (= (x1482 (x808 x1342) (x273 1) 0) x525) (= x696 (> x353 x430))) x1601) (=> (not x849) x1827)))))
(assert (x151 x1851))
(assert (= 115792089237316195423570985008687907853269984655499359237631748795939503996928 (x910 (x273 115792089237316195423570985008687907853269984655499359237631748795939503996928))))
(assert (x151 x35))
(assert (x591 x1473))
(assert (= x88 x1821))
(assert (x151 x1554))
(assert (x151 x1056))
(assert (x151 x260))
(assert (x151 x1137))
(assert (x151 x12))
(assert (=> (< (- x1702 1) 10000) (= (x808 x1702) (x273 x1702))))
(assert (x151 x369))
(assert (x151 x340))
(assert (x151 x1395))
(assert (x1992 x598))
(assert (x889 x259 x1855))
(assert (x1541 x1654 x312))
(assert (x151 x1012))
(assert (x151 x1812))
(assert (x1412 x633 x150))
(assert (x151 x16))
(assert (x361 x1332))
(assert (x151 x1533))
(assert (x195 x143 x1566))
(assert (= (x1919 x1557) (ite (= x1272 x1557) x536 (x979 x1557))))
(assert (= x529 (and x1515 x482)))
(assert (x151 x607))
(assert (x151 x374))
(assert (= (x808 274184521717934524641157099916833587211) (x273 274184521717934524641157099916833587211)))
(assert (x151 x1090))
(assert (x151 x1479))
(assert (x151 x1933))
(assert (x151 x1710))
(assert (x591 x485))
(assert (x591 x1377))
(assert (x151 x445))
(assert (x151 x1544))
(assert (=> (> (+ 10000 1) x341) (= (x273 x341) (x808 x341))))
(assert (x151 x1269))
(assert (= 50942633119752846454219349998365661925608737367104304655302372697894809501696 (x910 (x273 50942633119752846454219349998365661925608737367104304655302372697894809501696))))
(assert (x591 x484))
(assert (= x222 (=> (= x476 (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x617) (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x617) true) (< x617 0)))) (and (=> (and (= x644 (x1230 x155 192)) (= (x1230 x155 176) x1403) (= (x371 1461501637330902918203684832716283019655932542975 x155) x1962) (= x1444 (x1230 x807 160)) (= x661 (x371 65535 x644)) x476 (= (x1230 x155 160) x9) (= x1780 (x371 1461501637330902918203684832716283019655932542975 x807)) (= x1736 (< 0 x884)) (or (and (= (ite (> 32 x884) 1 0) x485) x1736 (= (ite (< x884 78) 1 0) x1569) (or (and (= (x1138 10 x884) x614) (not x351)) (and (= (uninterp_mod (* x1078 x1563) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x1810) (= (> x884 1) x1628) (not (> x1078 x1056)) x351 (or (and (= 1 x1078) (= 10 x1563) (not x1628)) (and (= x1563 100) x1628 (= (ite x717 1 10) x1078) (= x1166 (x371 1 x884)) (not x913) (= x913 (< 1 x1122)) (= x1122 (x1230 x884 1)) (= (= x1166 0) x717))) (= (- (/ 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1563) (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1563)) x1056) (= x614 x1810))) (= x351 (= (x527 x686 x607) 0)) (= (x371 x1698 x485) x607) (= 1 x1068) (= x686 (x371 x1068 x1569)) (= 1 x1698)) (and (not x1736) (= x614 1))) (= (x371 255 x1444) x884) (= (x371 65535 x1403) x922) (> x680 0) (= x691 (x371 65535 x9)) (= (x371 255 x1057) x680)) x5) (=> (and (not x476) (= x1023 1)) x1437)))))
(assert (x591 x1857))
(assert (= (=> (= (= 274184521717934524641157099916833587233 x621) x1651) (and (=> (and (<= 0 x1860) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1817) (> 1208925819614629174706176 x1422) (<= x535 1208925819614629174706175) (= x1611 115197700812830431890159100217698998050002284567939525164234024451216521560064) (= (x741 128) x1503) (= x909 1) (>= x535 0) (= x339 (x741 192)) (not (> 2362581449 x712)) (= x1794 (x741 256)) (= (x741 160) x1227) (= (x935 (x808 274184521717934524641157099916833587233)) x657) (not (> 4 x1874)) (= x567 (x741 256)) (>= 1208925819614629174706175 x1422) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1860) (= 160 x1434) (= (x741 224) x1626) (>= x1590 0) (not (= 3257672857 x712)) (= (x741 224) x441) (= x141 (x741 160)) (>= x1817 0) (= x618 (x741 192)) (= 4272920204 x712) (= (x1482 (x808 x1169) (x273 1) 0) x1384) (< x535 1208925819614629174706176) (<= x1590 115792089237316195423570985008687907853269984665640564039457584007913129639935) (not (= x712 4062139261)) (= (x758 x1384) x1817) x1651 (> x657 0) (= 4 x1874) (>= x1422 0) (= 4 x1874) (not (= 2362581449 x712)) (= x1460 (x741 128))) x626) (=> (not x1651) x149))) x1535))
(assert (x151 x66))
(assert (x591 x1089))
(assert (x591 x221))
(assert (x151 x1667))
(assert (= (=> (and (= x144 (< 0 x1371)) (>= 1208925819614629174706175 x399) (= x399 (x1616 128)) (= x1591 0) (= (x1616 256) x1447) (>= 1208925819614629174706175 x1447) (not (ite x785 x785 (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1003) true) (< 170141183460469231731687303715884105727 x1003)))) (= x218 (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1003) true) (< 0 x1003))) (= (not x218) x785) (= x1003 (x1616 160)) (= x558 (x371 340282366920938463463374607431768211455 x1003)) (= x1371 (x371 255 x1057)) (= x617 (uninterp_mod (* (x1225 x1260) x558) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (and (=> (and (not x144) (= x605 x617)) x1593) (=> x144 x293))) x593))
(assert (= (=> (= x1454 (= 274184521717934524641157099916833587233 x1159)) (and (=> (and (= (x446 (+ 352 x1558)) x444) (not (< x1164 4)) (= (x1187 224) x1292) (= (x446 (+ x1558 320)) x1747) (<= 0 x722) (= x198 (x1187 224)) (= (x1482 (x808 x1169) (x273 1) 0) x204) (= (x758 x204) x722) (= x1010 1) (= x1683 x1164) (not (> 2362581449 x10)) (= (x1187 128) x1442) (< x1422 1208925819614629174706176) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1860) (= x1380 (x1187 160)) (= x1578 (x935 (x808 274184521717934524641157099916833587233))) (= x1975 (x1187 160)) (<= x1590 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= 4272920204 x10) x1454 (= (x1187 192) x1094) (< 0 x1578) (not (= x10 3257672857)) (= (x1187 128) x256) (= x812 (x1187 256)) (= 4 x1164) (> 1208925819614629174706176 x535) (not (= x10 4062139261)) (= x658 (x1187 256)) (not (= x10 2362581449)) (>= x1860 0) (= 115197700812830431890159100217698998050002284567939525164234024451216521560064 x1359) (<= x535 1208925819614629174706175) (= (x446 (+ x1558 384)) x1466) (>= x1422 0) (<= 0 x535) (= 160 x325) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x722) (= (x1187 192) x625) (<= x1422 1208925819614629174706175) (= x35 (x446 (+ 288 x1558))) (<= 0 x1590)) x768) (=> (not x1454) x595))) x64))
(assert (x151 x1130))
(assert (x151 x83))
(assert (x151 x1118))
(assert (= (x910 (x273 20282409603651670423947251286016)) 20282409603651670423947251286016))
(assert (x151 x509))
(assert (x151 x317))
(assert (x151 x993))
(assert (x591 x72))
(assert (x151 x1963))
(assert (x151 x618))
(assert (x151 x13))
(assert (x151 x1397))
(assert (x151 x1550))
(assert (= 157198259 (x910 (x273 157198259))))
(assert (= (x910 (x808 x479)) x479))
(assert (x151 x1648))
(assert (x151 x1962))
(assert (x591 x864))
(assert (= x1053 true))
(assert (x151 x117))
(assert (= (and x1771 x1335) x482))
(assert (x1992 x418))
(check-sat)
