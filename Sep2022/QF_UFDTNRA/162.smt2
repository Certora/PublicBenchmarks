(set-option :print-success false)
(set-option :produce-models true)
(set-logic QF_UFDTNRA)
(declare-fun uninterp_frac (Real Real) Real)
(define-fun axiom_frac_bound ((d1 Real) (d2 Real)) Bool (and (=> (> d2 0) (and (<= 0.0 (uninterp_frac d1 d2)) (< (uninterp_frac d1 d2) 1.0))) (=> (< d2 0) (and (>= 0.0 (uninterp_frac d1 d2)) (> (uninterp_frac d1 d2) (- 1.0))))))
(define-fun axiom_frac_zero ((d1 Real) (d2 Real) (m1 Real) (m2 Real) (e Real)) Bool (=> (and (= d1 (* m1 m2)) (or (= d2 m1) (= d2 m2))) (= e 0)))
(define-fun uninterp_mod ((x Real) (m Real)) Real (ite (and (>= x 0) (< x m)) x (ite (and (>= x m) (< x (+ m m))) (- x m) (ite (and (>= x (- m)) (< x 0)) (+ x m) (* m (uninterp_frac x m))))))
(define-fun axiom_int_approximation ((x Real)) Bool (or (= x 0) (>= x 1) (<= x (- 1))))
(declare-datatypes ((x210 0)) (((x1134 (x257 Real)) (x568 (x323 x210) (x1296 Real)) (x1039 (x226 x210) (x501 x210) (x1817 Real)))))
(declare-fun x1496 () Real)
(declare-fun x844 () Real)
(declare-fun x1209 () Real)
(declare-fun x1808 (Real) Real)
(declare-fun x737 () Bool)
(declare-fun x1245 () Real)
(declare-fun x438 () Real)
(declare-fun x1752 () Real)
(declare-fun x1950 () Real)
(declare-fun x914 () Real)
(declare-fun x1721 () Real)
(declare-fun x175 () Real)
(declare-fun x1022 () Bool)
(declare-fun x402 (Real) Real)
(declare-fun x185 () Real)
(declare-fun x918 (Real) Real)
(declare-fun x383 () Real)
(declare-fun x1303 () Bool)
(declare-fun x1665 () Real)
(declare-fun x928 (Real) Real)
(declare-fun x2018 (Real) Real)
(declare-fun x153 (x210) Real)
(declare-fun x1815 () Real)
(declare-fun x667 () Bool)
(declare-fun x1938 () Bool)
(declare-fun x144 () Real)
(declare-fun x1259 () Real)
(declare-fun x69 () Bool)
(declare-fun x2054 () Real)
(declare-fun x713 () Real)
(declare-fun x386 () Real)
(declare-fun x963 () Real)
(declare-fun x738 () Real)
(declare-fun x364 () Real)
(declare-fun x1091 () Real)
(declare-fun x1369 () Real)
(declare-fun x702 () Real)
(declare-fun x1864 () Real)
(declare-fun x679 () Bool)
(declare-fun x744 () x210)
(declare-fun x637 () Real)
(declare-fun x1385 () Real)
(declare-fun x1404 () Real)
(declare-fun x1650 () Real)
(declare-fun x1507 () Real)
(declare-fun x1358 () Bool)
(declare-fun x104 () Real)
(declare-fun x885 () Bool)
(declare-fun x1387 () Real)
(declare-fun x646 () Real)
(declare-fun x201 () Bool)
(declare-fun x132 () Real)
(declare-fun x118 () Real)
(declare-fun x2066 () Real)
(declare-fun x1876 () Real)
(declare-fun x1946 () Real)
(declare-fun x366 () Real)
(declare-fun x2062 () Real)
(declare-fun x1439 () x210)
(declare-fun x502 () Real)
(declare-fun x1076 () Real)
(declare-fun x1637 () Real)
(declare-fun x1711 () Real)
(declare-fun x446 () Real)
(declare-fun x1248 () Bool)
(declare-fun x773 () Bool)
(declare-fun x695 () Real)
(declare-fun x772 () Bool)
(declare-fun x1943 () Real)
(declare-fun x1810 (x210) Real)
(declare-fun x1072 () Real)
(declare-fun x1336 () Real)
(declare-fun x1431 () Real)
(declare-fun x539 (Real) Real)
(declare-fun x1738 () Bool)
(declare-fun x156 () Real)
(declare-fun x1707 () Real)
(declare-fun x730 () Real)
(declare-fun x2128 () Real)
(declare-fun x1823 () Real)
(declare-fun x931 () Bool)
(declare-fun x1210 (Real) Real)
(declare-fun x1361 () x210)
(declare-fun x1394 () Bool)
(declare-fun x2043 () Real)
(declare-fun x609 (Real) Real)
(declare-fun x957 () Real)
(declare-fun x2026 () Real)
(declare-fun x1780 () Real)
(declare-fun x612 () Real)
(declare-fun x746 () Real)
(declare-fun x1949 () Real)
(declare-fun x116 () Real)
(declare-fun x1925 () Real)
(declare-fun x874 () Real)
(declare-fun x796 () Real)
(declare-fun x1479 () Bool)
(declare-fun x491 () Real)
(declare-fun x165 () Bool)
(declare-fun x59 () Real)
(declare-fun x1104 () Real)
(declare-fun x2020 () Real)
(declare-fun x749 () Real)
(declare-fun x827 () Real)
(declare-fun x622 () Real)
(declare-fun x560 () Real)
(declare-fun x1929 () Bool)
(declare-fun x49 (Real) Real)
(declare-fun x1131 (Real) Real)
(declare-fun x2017 () Bool)
(declare-fun x651 () Real)
(declare-fun x1529 () Real)
(declare-fun x817 () Real)
(declare-fun x1049 () Real)
(declare-fun x1719 () Real)
(declare-fun x856 () Real)
(declare-fun x800 () Real)
(declare-fun x155 (Real) Real)
(declare-fun x987 () Bool)
(declare-fun x1657 () Real)
(declare-fun x1397 () Real)
(declare-fun x1608 () Real)
(declare-fun x1288 () Real)
(declare-fun x1951 () Bool)
(declare-fun x1139 () Bool)
(declare-fun x2041 () Real)
(declare-fun x2004 () Real)
(declare-fun x1406 () Real)
(declare-fun x1162 () Real)
(declare-fun x682 () Real)
(declare-fun x1425 () Real)
(declare-fun x831 () Bool)
(declare-fun x541 () Real)
(declare-fun x1830 () Real)
(declare-fun x311 () Real)
(declare-fun x1760 () Real)
(declare-fun x610 () Real)
(declare-fun x1989 () Real)
(declare-fun x1402 () Real)
(declare-fun x1206 () Bool)
(declare-fun x2093 () Bool)
(declare-fun x1693 () Real)
(declare-fun x916 () Real)
(declare-fun x1884 () Real)
(declare-fun x1146 () Real)
(declare-fun x1458 () Real)
(declare-fun x1601 () Real)
(declare-fun x1399 () Real)
(declare-fun x660 (Real) Real)
(declare-fun x1156 () Real)
(declare-fun x1833 (Real) Real)
(declare-fun x1881 (x210) Real)
(declare-fun x46 () Bool)
(declare-fun x504 () Real)
(declare-fun x1730 () Real)
(declare-fun x1308 () Bool)
(declare-fun x934 () Real)
(declare-fun x751 () x210)
(declare-fun x1671 () Real)
(declare-fun x2135 () Bool)
(declare-fun x632 () Bool)
(declare-fun x984 () Real)
(declare-fun x989 () Real)
(declare-fun x1991 () x210)
(declare-fun x1680 () Real)
(declare-fun x717 () Real)
(declare-fun x10 () x210)
(declare-fun x397 () Real)
(declare-fun x1169 () Bool)
(declare-fun x2077 () Real)
(declare-fun x400 () Real)
(declare-fun x191 () Real)
(declare-fun x1984 () Real)
(declare-fun x1585 () Real)
(declare-fun x2117 () Real)
(declare-fun x360 () Bool)
(declare-fun x1807 () Bool)
(declare-fun x206 (Real) Real)
(declare-fun x1253 () Real)
(declare-fun x708 () Real)
(declare-fun x1927 () Real)
(declare-fun x1835 () Real)
(declare-fun x1333 () x210)
(declare-fun x991 () Real)
(declare-fun x648 () Real)
(declare-fun x1712 () x210)
(declare-fun x998 () Real)
(declare-fun x769 () Real)
(declare-fun x1191 () Real)
(declare-fun x1145 () Real)
(declare-fun x480 () Real)
(declare-fun x1087 (Real) Real)
(declare-fun x2073 () Bool)
(declare-fun x2055 () Real)
(declare-fun x1446 () Real)
(declare-fun x1571 (Real) Real)
(declare-fun x32 () x210)
(declare-fun x1555 () Bool)
(declare-fun x1429 () x210)
(declare-fun x1985 () Real)
(declare-fun x514 () Real)
(declare-fun x1645 () Real)
(declare-fun x1384 () Real)
(declare-fun x1909 () Real)
(declare-fun x332 () Real)
(declare-fun x2005 () Real)
(declare-fun x1391 () Real)
(declare-fun x304 () Real)
(declare-fun x1442 () Real)
(declare-fun x1038 () Real)
(declare-fun x806 () Real)
(declare-fun x1270 () Real)
(declare-fun x802 () Real)
(declare-fun x686 () Bool)
(declare-fun x554 () Real)
(declare-fun x1028 () Real)
(declare-fun x1705 () Real)
(declare-fun x777 () Real)
(declare-fun x556 () Bool)
(declare-fun x668 () Real)
(declare-fun x45 () Real)
(declare-fun x1747 () Real)
(declare-fun x1593 () Real)
(declare-fun x1664 () Bool)
(declare-fun x1258 () Real)
(declare-fun x1096 () Real)
(declare-fun x1771 () Real)
(declare-fun x1917 () Real)
(declare-fun x1300 () Real)
(declare-fun x601 () Real)
(declare-fun x1037 () x210)
(declare-fun x1723 () Real)
(declare-fun x1297 () Bool)
(declare-fun x394 () Bool)
(declare-fun x840 () Real)
(declare-fun x655 () Bool)
(declare-fun x1202 () Real)
(declare-fun x549 () Bool)
(declare-fun x598 () Real)
(declare-fun x1470 () Real)
(declare-fun x371 () Real)
(declare-fun x1494 () Real)
(declare-fun x566 () Real)
(declare-fun x1350 () Real)
(declare-fun x215 () Real)
(declare-fun x357 () Real)
(declare-fun x635 () x210)
(declare-fun x82 () Real)
(declare-fun x558 () Real)
(declare-fun x417 () Bool)
(declare-fun x576 () Real)
(declare-fun x732 () Bool)
(declare-fun x126 () Real)
(declare-fun x600 () Real)
(declare-fun x395 (Real) Real)
(declare-fun x379 () Real)
(declare-fun x1089 () Bool)
(declare-fun x1769 () Real)
(declare-fun x589 () Real)
(declare-fun x2095 () Real)
(declare-fun x1101 () Bool)
(declare-fun x1795 () Real)
(declare-fun x451 () Real)
(declare-fun x1306 () Bool)
(declare-fun x684 () Real)
(declare-fun x1215 (x210) Real)
(declare-fun x594 () Bool)
(declare-fun x489 () Real)
(declare-fun x308 () Bool)
(declare-fun x1762 () Real)
(declare-fun x77 () Real)
(declare-fun x1673 () Real)
(declare-fun x1307 (x210) Real)
(declare-fun x64 () Real)
(declare-fun x1536 () Real)
(declare-fun x664 () Real)
(declare-fun x4 () Real)
(declare-fun x470 () Real)
(declare-fun x1471 () Bool)
(declare-fun x858 () Real)
(declare-fun x146 () Bool)
(declare-fun x1928 () Bool)
(declare-fun x905 () Real)
(declare-fun x525 () Bool)
(declare-fun x468 () Bool)
(declare-fun x1246 () Real)
(declare-fun x557 () Real)
(declare-fun x1718 () Bool)
(declare-fun x1863 () Real)
(declare-fun x1514 () Real)
(declare-fun x2071 () Real)
(declare-fun x246 () Real)
(declare-fun x762 () Real)
(declare-fun x33 () Real)
(declare-fun x1405 () Real)
(declare-fun x486 () Real)
(declare-fun x482 () Real)
(declare-fun x789 () x210)
(declare-fun x103 () Real)
(declare-fun x1023 () Real)
(declare-fun x779 (Real) Real)
(declare-fun x2083 () Real)
(declare-fun x1698 () Bool)
(declare-fun x997 () Real)
(declare-fun x1825 () Bool)
(declare-fun x833 () Real)
(declare-fun x1997 (Real) Real)
(declare-fun x150 () Real)
(declare-fun x1129 () Real)
(declare-fun x1501 () Real)
(declare-fun x428 () Real)
(declare-fun x2067 () x210)
(declare-fun x1184 () Real)
(declare-fun x1837 () Real)
(declare-fun x1412 (Real) Real)
(declare-fun x2086 () Real)
(declare-fun x649 () Real)
(declare-fun x1119 () x210)
(declare-fun x1522 () Bool)
(declare-fun x109 () Bool)
(declare-fun x735 () Real)
(declare-fun x1223 () Real)
(declare-fun x573 () Real)
(declare-fun x184 () Real)
(declare-fun x628 () Bool)
(declare-fun x1642 () Real)
(declare-fun x754 () Real)
(declare-fun x2107 () Real)
(declare-fun x8 () Bool)
(declare-fun x108 () Real)
(declare-fun x852 () x210)
(declare-fun x445 () Bool)
(declare-fun x1882 () Real)
(declare-fun x352 () Bool)
(declare-fun x1142 () Bool)
(declare-fun x2061 () Bool)
(declare-fun x1116 () Real)
(declare-fun x1545 () Real)
(declare-fun x1569 () Real)
(declare-fun x1922 () Real)
(declare-fun x1669 () Real)
(declare-fun x711 () x210)
(declare-fun x1339 () Real)
(declare-fun x152 () Real)
(declare-fun x195 () Real)
(declare-fun x1273 () Real)
(declare-fun x87 () Real)
(declare-fun x1473 () Real)
(declare-fun x1450 (Real) Real)
(declare-fun x1666 () Real)
(declare-fun x421 () Real)
(declare-fun x1535 () Real)
(declare-fun x832 () Real)
(declare-fun x1976 () x210)
(declare-fun x1655 () Bool)
(declare-fun x286 (x210) Real)
(declare-fun x1229 () Bool)
(declare-fun x216 () Real)
(declare-fun x1844 () Bool)
(declare-fun x1321 () Real)
(declare-fun x1160 () x210)
(declare-fun x815 () Real)
(declare-fun x1702 () Real)
(declare-fun x1855 (x210) Real)
(declare-fun x1686 () Real)
(declare-fun x1924 () Real)
(declare-fun x1797 () Real)
(declare-fun x1395 () Real)
(declare-fun x180 () Real)
(declare-fun x588 () Bool)
(declare-fun x864 () Real)
(declare-fun x255 () Bool)
(declare-fun x884 () Real)
(declare-fun x2115 () Real)
(declare-fun x1151 () Real)
(declare-fun x1366 (Real) Real)
(declare-fun x1518 () Real)
(declare-fun x1354 () Real)
(declare-fun x1960 () Real)
(declare-fun x515 () Real)
(declare-fun x1314 () x210)
(declare-fun x1337 () Real)
(declare-fun x1894 (Real) Real)
(declare-fun x1364 () Real)
(declare-fun x1967 () Real)
(declare-fun x1034 () Real)
(declare-fun x1956 () Bool)
(declare-fun x1278 () Real)
(declare-fun x608 () Real)
(declare-fun x1757 () Real)
(declare-fun x782 () Real)
(declare-fun x324 () Real)
(declare-fun x230 () Real)
(declare-fun x1827 () Real)
(declare-fun x1010 () Real)
(declare-fun x38 () Real)
(declare-fun x96 () Real)
(declare-fun x705 () Real)
(declare-fun x1207 () Real)
(declare-fun x1606 (Real) Real)
(declare-fun x342 () Real)
(declare-fun x1983 () Real)
(declare-fun x443 () Real)
(declare-fun x1986 () Real)
(declare-fun x17 () Real)
(declare-fun x784 () Real)
(declare-fun x1504 () Real)
(declare-fun x742 () Real)
(declare-fun x1211 () Real)
(declare-fun x757 () Real)
(declare-fun x1086 () Real)
(declare-fun x450 () Real)
(declare-fun x2003 () Real)
(declare-fun x239 () Real)
(declare-fun x346 () Real)
(declare-fun x5 () Real)
(declare-fun x723 () Real)
(declare-fun x1907 () Real)
(declare-fun x1853 () Real)
(declare-fun x1764 () Bool)
(declare-fun x1538 () Real)
(declare-fun x372 () Real)
(declare-fun x1612 () Bool)
(declare-fun x1816 () Real)
(declare-fun x14 () Real)
(declare-fun x798 () Bool)
(declare-fun x2108 () Real)
(declare-fun x1236 (x210) Real)
(declare-fun x980 () Real)
(declare-fun x580 () Bool)
(declare-fun x1050 () Bool)
(declare-fun x314 () Bool)
(declare-fun x736 () Real)
(declare-fun x1276 (Real) Real)
(declare-fun x467 () Real)
(declare-fun x1178 () Bool)
(declare-fun x1122 () Real)
(declare-fun x830 () Real)
(declare-fun x1574 () Bool)
(declare-fun x1067 () Real)
(declare-fun x289 (Real) Real)
(declare-fun x189 () x210)
(declare-fun x1862 () Real)
(declare-fun x1874 () Real)
(declare-fun x678 () Bool)
(declare-fun x1466 () Bool)
(declare-fun x1865 () Real)
(declare-fun x218 () Real)
(declare-fun x27 () Real)
(declare-fun x2 () Real)
(declare-fun x1231 () Real)
(declare-fun x432 () Real)
(declare-fun x521 () Real)
(declare-fun x2024 () Bool)
(declare-fun x1345 () Real)
(declare-fun x1478 () Real)
(declare-fun x995 () Real)
(declare-fun x519 () Bool)
(declare-fun x1659 () Real)
(declare-fun x1765 (Real) Real)
(declare-fun x384 () Bool)
(declare-fun x2029 () Bool)
(declare-fun x1746 () Real)
(declare-fun x270 () Real)
(declare-fun x1403 () Real)
(declare-fun x567 () Real)
(declare-fun x743 () Bool)
(declare-fun x1168 () Bool)
(declare-fun x1077 () Bool)
(declare-fun x493 () Real)
(declare-fun x169 (Real) Real)
(declare-fun x1460 () Real)
(declare-fun x1602 () Real)
(declare-fun x51 (Real) Real)
(declare-fun x1342 () Bool)
(declare-fun x599 () Real)
(declare-fun x52 () Real)
(declare-fun x1414 () Real)
(declare-fun x838 (x210) Real)
(declare-fun x140 () Real)
(declare-fun x248 () Real)
(declare-fun x688 () Real)
(declare-fun x1233 () Real)
(declare-fun x908 () Real)
(declare-fun x559 () Real)
(declare-fun x1033 () Real)
(declare-fun x2065 () Real)
(declare-fun x337 () Real)
(declare-fun x1803 () Real)
(declare-fun x882 () Real)
(declare-fun x1289 () Real)
(declare-fun x1781 () Real)
(declare-fun x734 () Real)
(declare-fun x1118 () Bool)
(declare-fun x88 () Real)
(declare-fun x31 () Real)
(declare-fun x1117 () Bool)
(declare-fun x1892 () Bool)
(declare-fun x2002 () Real)
(declare-fun x1368 () Real)
(declare-fun x1465 (Real) Real)
(declare-fun x78 () Real)
(declare-fun x1304 () Real)
(declare-fun x1379 () Real)
(declare-fun x823 () Bool)
(declare-fun x316 () Real)
(declare-fun x1759 () Real)
(declare-fun x1663 () Real)
(declare-fun x1092 () Real)
(declare-fun x159 () Real)
(declare-fun x683 () Real)
(declare-fun x1424 () Real)
(declare-fun x1727 () Real)
(declare-fun x1814 () Real)
(declare-fun x2078 () Real)
(declare-fun x741 () Real)
(declare-fun x544 () Bool)
(declare-fun x1753 () Bool)
(declare-fun x1934 () Real)
(declare-fun x1161 () Real)
(declare-fun x274 () Real)
(declare-fun x618 () Real)
(declare-fun x951 () Real)
(declare-fun x1732 () Real)
(declare-fun x1742 () Real)
(declare-fun x716 () Bool)
(declare-fun x1509 () Real)
(declare-fun x1026 () Real)
(declare-fun x462 () Bool)
(declare-fun x1455 () Real)
(declare-fun x621 () Real)
(declare-fun x1239 () Real)
(declare-fun x1310 () Real)
(declare-fun x1274 () Real)
(declare-fun x119 () Bool)
(declare-fun x1739 () Real)
(declare-fun x1287 () Real)
(declare-fun x1871 () Real)
(declare-fun x18 () Real)
(declare-fun x1103 () Real)
(declare-fun x1728 () Real)
(declare-fun x1305 () Bool)
(declare-fun x1106 () Real)
(declare-fun x606 () Real)
(declare-fun x1052 () Bool)
(declare-fun x1188 () x210)
(declare-fun x457 () x210)
(declare-fun x1053 () Bool)
(declare-fun x1262 () Real)
(declare-fun x1417 () Real)
(declare-fun x518 () Real)
(declare-fun x204 () Real)
(declare-fun x774 () Real)
(declare-fun x1566 () Bool)
(declare-fun x574 () Real)
(declare-fun x1172 () Real)
(declare-fun x365 () Bool)
(declare-fun x1883 () x210)
(declare-fun x915 () Real)
(declare-fun x1870 () Bool)
(declare-fun x2124 () Real)
(declare-fun x1408 (Real Real) Real)
(declare-fun x1150 () Real)
(declare-fun x650 () Real)
(declare-fun x1554 () Bool)
(declare-fun x2022 () Bool)
(declare-fun x929 () Real)
(declare-fun x162 () Real)
(declare-fun x1137 () Real)
(declare-fun x1348 () Real)
(declare-fun x1733 () Real)
(declare-fun x788 () Real)
(declare-fun x2053 () Real)
(declare-fun x794 () Real)
(declare-fun x958 (Real) Real)
(declare-fun x1595 () Real)
(declare-fun x105 () Real)
(declare-fun x630 () Bool)
(declare-fun x1505 () Bool)
(declare-fun x2110 () Real)
(declare-fun x374 () Real)
(declare-fun x1822 (x210) Real)
(declare-fun x1171 () Bool)
(declare-fun x2079 () Real)
(declare-fun x361 () Bool)
(declare-fun x160 () Real)
(declare-fun x1163 () Real)
(declare-fun x265 () Real)
(declare-fun x1197 () Real)
(declare-fun x1035 () Real)
(declare-fun x974 () Real)
(declare-fun x959 () Real)
(declare-fun x1183 () Real)
(declare-fun x1549 (Real) Real)
(declare-fun x388 () Bool)
(declare-fun x548 () Real)
(declare-fun x863 () Bool)
(declare-fun x623 () Real)
(declare-fun x1486 () Real)
(declare-fun x2068 () x210)
(declare-fun x1649 (Real Real) Real)
(declare-fun x1493 () Real)
(declare-fun x1503 () x210)
(declare-fun x1467 () Bool)
(declare-fun x335 (x210) Real)
(declare-fun x2023 () Real)
(declare-fun x1774 (Real) Real)
(declare-fun x1567 () x210)
(declare-fun x1973 () Real)
(declare-fun x301 () Real)
(declare-fun x985 () x210)
(declare-fun x861 () Real)
(declare-fun x47 () Real)
(declare-fun x1192 () Real)
(declare-fun x393 () Real)
(declare-fun x1430 () Real)
(declare-fun x1735 () Bool)
(declare-fun x1582 () Real)
(declare-fun x529 () Real)
(declare-fun x876 () Real)
(declare-fun x1301 () Real)
(declare-fun x290 () Real)
(declare-fun x1017 () Real)
(declare-fun x614 (x210) Real)
(declare-fun x1859 () Real)
(declare-fun x1873 () Real)
(declare-fun x859 () Real)
(declare-fun x1449 () Real)
(declare-fun x273 () Bool)
(declare-fun x712 () Bool)
(declare-fun x1499 () Real)
(declare-fun x675 () Bool)
(declare-fun x1422 () x210)
(declare-fun x1959 () Bool)
(declare-fun x1393 () Real)
(declare-fun x242 () Real)
(declare-fun x90 () Real)
(declare-fun x1677 () Real)
(declare-fun x1088 () Real)
(declare-fun x235 () Real)
(declare-fun x739 (Real) Real)
(declare-fun x616 () Real)
(declare-fun x476 () Real)
(declare-fun x1459 () Real)
(declare-fun x1531 () Real)
(declare-fun x2032 () Bool)
(declare-fun x857 (Real) Real)
(declare-fun x1527 () Real)
(declare-fun x1216 () Real)
(declare-fun x585 () Bool)
(declare-fun x183 () Real)
(declare-fun x2100 (Real) Real)
(declare-fun x266 () Bool)
(declare-fun x2011 () Real)
(declare-fun x639 () Real)
(declare-fun x2084 (Real) Real)
(declare-fun x19 () Bool)
(declare-fun x1945 () Real)
(declare-fun x897 (Real) Real)
(declare-fun x1383 () Real)
(declare-fun x1583 () Real)
(declare-fun x1547 () Real)
(declare-fun x536 () Real)
(declare-fun x276 () Real)
(declare-fun x1709 () Real)
(declare-fun x53 () Real)
(declare-fun x1639 () Real)
(declare-fun x1266 () Bool)
(declare-fun x2036 () Real)
(declare-fun x71 () Real)
(declare-fun x1954 () Bool)
(declare-fun x1228 () Real)
(declare-fun x2105 () Real)
(declare-fun x913 () Real)
(declare-fun x151 () x210)
(declare-fun x1400 () Real)
(declare-fun x1885 () Real)
(declare-fun x846 () Real)
(declare-fun x550 () Real)
(declare-fun x413 () Real)
(declare-fun x130 () Real)
(declare-fun x1616 () Real)
(declare-fun x973 () x210)
(declare-fun x1324 () Real)
(declare-fun x1056 () Real)
(declare-fun x448 () Real)
(declare-fun x1515 () Bool)
(declare-fun x1102 () Real)
(declare-fun x1316 () Real)
(declare-fun x731 () Real)
(declare-fun x1143 () Bool)
(declare-fun x562 () Bool)
(declare-fun x1974 () Bool)
(declare-fun x2035 () Real)
(declare-fun x143 () Real)
(declare-fun x1001 () Real)
(declare-fun x401 () Real)
(declare-fun x1965 () Real)
(declare-fun x862 () Real)
(declare-fun x2027 () Real)
(declare-fun x961 () Real)
(declare-fun x410 () Real)
(declare-fun x813 () Real)
(declare-fun x326 () Real)
(declare-fun x1485 () Real)
(declare-fun x76 () x210)
(declare-fun x398 () Real)
(declare-fun x1025 () Bool)
(declare-fun x345 () Real)
(declare-fun x1019 () Real)
(declare-fun x1433 () Bool)
(declare-fun x418 () Real)
(declare-fun x484 () Real)
(declare-fun x1987 () Bool)
(declare-fun x887 () Real)
(declare-fun x1154 () Real)
(declare-fun x1219 () Real)
(declare-fun x872 () Bool)
(declare-fun x1462 () Real)
(declare-fun x654 () Real)
(declare-fun x1776 () Real)
(declare-fun x24 () Bool)
(declare-fun x1152 () Bool)
(declare-fun x1564 () x210)
(declare-fun x1367 () Real)
(declare-fun x1000 () Bool)
(declare-fun x1115 () Real)
(declare-fun x783 () x210)
(declare-fun x1007 () Real)
(declare-fun x3 () Bool)
(declare-fun x590 () Real)
(declare-fun x2025 () Bool)
(declare-fun x1699 () Bool)
(declare-fun x1251 () Real)
(declare-fun x1323 () Real)
(declare-fun x853 () Real)
(declare-fun x1153 () Real)
(declare-fun x131 () Bool)
(declare-fun x13 () Real)
(declare-fun x1953 () Real)
(declare-fun x134 () Real)
(declare-fun x1235 () Bool)
(declare-fun x1761 () Real)
(declare-fun x1609 () Bool)
(declare-fun x1914 () Bool)
(declare-fun x362 () Bool)
(declare-fun x214 () Real)
(declare-fun x2075 () Real)
(declare-fun x272 () Real)
(declare-fun x875 () Real)
(declare-fun x1418 () Real)
(declare-fun x141 () x210)
(declare-fun x1487 () Real)
(declare-fun x1079 () Real)
(declare-fun x615 () Real)
(declare-fun x663 () Real)
(declare-fun x1775 () Real)
(declare-fun x1877 () Real)
(declare-fun x1679 () Bool)
(declare-fun x1550 () Real)
(declare-fun x237 () Bool)
(declare-fun x1998 () Real)
(declare-fun x808 () x210)
(declare-fun x1653 (Real) Real)
(declare-fun x20 () Real)
(declare-fun x363 () Real)
(declare-fun x1615 () Real)
(declare-fun x847 () Real)
(declare-fun x1697 () Real)
(declare-fun x133 () Real)
(declare-fun x194 () Real)
(declare-fun x855 () Real)
(declare-fun x2121 () Bool)
(declare-fun x1062 () Real)
(declare-fun x582 () x210)
(declare-fun x1832 () Bool)
(declare-fun x2060 () Real)
(declare-fun x763 () Real)
(declare-fun x56 () Real)
(declare-fun x1988 () Bool)
(declare-fun x1390 () Real)
(declare-fun x437 () Bool)
(declare-fun x535 () Real)
(declare-fun x1694 () Real)
(declare-fun x881 () Real)
(declare-fun x1651 (x210) Real)
(declare-fun x1851 () Real)
(declare-fun x2116 () Bool)
(declare-fun x370 () Real)
(declare-fun x1819 () Real)
(declare-fun x12 (Real) Real)
(declare-fun x1513 () Bool)
(declare-fun x694 () Real)
(declare-fun x1081 () Bool)
(declare-fun x1378 () x210)
(declare-fun x174 () Real)
(declare-fun x1904 () Real)
(declare-fun x1344 () Real)
(declare-fun x2045 () Real)
(declare-fun x1280 () Real)
(declare-fun x1454 () Bool)
(declare-fun x1875 () Real)
(declare-fun x1897 () Real)
(declare-fun x551 () Real)
(declare-fun x1940 () Real)
(declare-fun x878 () Real)
(declare-fun x1240 () Real)
(declare-fun x114 () Real)
(declare-fun x60 () Real)
(declare-fun x801 () Real)
(declare-fun x1174 () Real)
(declare-fun x1285 () Real)
(declare-fun x1517 () Bool)
(declare-fun x1715 () x210)
(declare-fun x2118 () Real)
(declare-fun x7 () Real)
(declare-fun x358 () Real)
(declare-fun x1130 () x210)
(declare-fun x296 () Real)
(declare-fun x803 () Real)
(declare-fun x1036 () Bool)
(declare-fun x818 () Real)
(declare-fun x1370 () Real)
(declare-fun x571 () Real)
(declare-fun x1847 () Bool)
(declare-fun x1298 () Real)
(declare-fun x209 () Real)
(declare-fun x211 () Real)
(declare-fun x238 () Real)
(declare-fun x1427 () Bool)
(declare-fun x718 (x210) Real)
(declare-fun x135 () Bool)
(declare-fun x1099 () Real)
(declare-fun x339 () Real)
(declare-fun x1360 () Real)
(declare-fun x624 () Real)
(declare-fun x505 () Real)
(declare-fun x555 () Bool)
(declare-fun x676 () Bool)
(declare-fun x1432 () Real)
(declare-fun x21 (Real) x210)
(declare-fun x938 () Real)
(declare-fun x805 () x210)
(declare-fun x65 () Real)
(declare-fun x508 () Bool)
(declare-fun x475 () Real)
(declare-fun x1619 () Real)
(declare-fun x490 () Real)
(declare-fun x1376 () Real)
(declare-fun x1784 () Real)
(declare-fun x627 () Real)
(declare-fun x1581 () Real)
(declare-fun x1623 () Real)
(declare-fun x972 () Real)
(declare-fun x1411 () Real)
(declare-fun x161 () Real)
(declare-fun x228 () Real)
(declare-fun x1375 () Real)
(declare-fun x1981 () Bool)
(declare-fun x726 () Real)
(declare-fun x1647 () Real)
(declare-fun x2104 () Real)
(declare-fun x1580 () Real)
(declare-fun x565 () Real)
(declare-fun x1756 () Real)
(declare-fun x203 () Real)
(declare-fun x871 () Real)
(declare-fun x1282 () Real)
(declare-fun x1548 () Real)
(declare-fun x496 () x210)
(declare-fun x1611 () Real)
(declare-fun x924 () Bool)
(declare-fun x1093 () Real)
(declare-fun x142 (Real) Real)
(declare-fun x411 () Real)
(declare-fun x1105 () Real)
(declare-fun x187 () Real)
(declare-fun x1221 (Real) Real)
(declare-fun x966 () Real)
(declare-fun x896 () Real)
(declare-fun x1277 () Bool)
(declare-fun x396 (x210) Real)
(declare-fun x1491 () Real)
(declare-fun x530 () x210)
(declare-fun x1591 () Real)
(declare-fun x392 () Real)
(declare-fun x828 () Real)
(declare-fun x1351 () Bool)
(declare-fun x1309 () Real)
(declare-fun x1691 () x210)
(declare-fun x399 () x210)
(declare-fun x412 () Real)
(declare-fun x837 () Real)
(declare-fun x1434 () Real)
(declare-fun x466 () Real)
(declare-fun x657 () Bool)
(declare-fun x137 () Real)
(declare-fun x1326 () Real)
(declare-fun x1398 () Real)
(declare-fun x898 () Bool)
(declare-fun x1670 () Real)
(declare-fun x391 () Real)
(declare-fun x752 () Real)
(declare-fun x1972 () Real)
(declare-fun x310 () Real)
(declare-fun x83 () Real)
(declare-fun x429 () Real)
(declare-fun x1349 () Real)
(declare-fun x213 () x210)
(declare-fun x992 () x210)
(declare-fun x478 () Bool)
(declare-fun x792 () Real)
(declare-fun x1490 () Bool)
(declare-fun x824 (Real) Real)
(declare-fun x74 () Real)
(declare-fun x1977 () Bool)
(declare-fun x1497 () Real)
(declare-fun x1605 () Real)
(declare-fun x1537 () Bool)
(declare-fun x509 () Real)
(declare-fun x910 () Real)
(declare-fun x2092 () Real)
(declare-fun x84 () Real)
(declare-fun x1480 () x210)
(declare-fun x44 () Real)
(declare-fun x1475 () Bool)
(declare-fun x303 () Real)
(declare-fun x405 () Real)
(declare-fun x50 () Real)
(declare-fun x1244 () Bool)
(declare-fun x312 () Real)
(declare-fun x673 () Real)
(declare-fun x1356 () Real)
(declare-fun x1343 () Real)
(declare-fun x709 () Real)
(declare-fun x190 () Real)
(declare-fun x348 () Real)
(declare-fun x1084 () Bool)
(declare-fun x343 () Bool)
(declare-fun x603 () x210)
(declare-fun x29 () Bool)
(declare-fun x512 () Real)
(declare-fun x1975 (x210) Real)
(declare-fun x1627 () Bool)
(declare-fun x1854 () Real)
(declare-fun x607 (Real) Real)
(declare-fun x2089 () Bool)
(declare-fun x791 () Real)
(declare-fun x545 () Real)
(declare-fun x2001 () Real)
(declare-fun x822 () Bool)
(declare-fun x1003 () Real)
(declare-fun x1269 () Bool)
(declare-fun x1869 () Bool)
(declare-fun x1111 () Real)
(declare-fun x626 () Real)
(declare-fun x670 () Real)
(declare-fun x2133 () Bool)
(declare-fun x976 () Real)
(declare-fun x936 () Real)
(declare-fun x196 () Real)
(declare-fun x1674 () Real)
(declare-fun x1850 () Bool)
(declare-fun x1268 () x210)
(declare-fun x1292 () Real)
(declare-fun x1193 (x210) Real)
(declare-fun x172 () Real)
(declare-fun x1065 () Real)
(declare-fun x313 () Bool)
(declare-fun x1281 () Bool)
(declare-fun x1628 () Real)
(declare-fun x671 () Bool)
(declare-fun x22 (Real) Real)
(declare-fun x1703 () Real)
(declare-fun x842 () Real)
(declare-fun x1888 () Bool)
(declare-fun x1618 () Real)
(declare-fun x1962 () Real)
(declare-fun x334 () x210)
(declare-fun x1419 () Real)
(declare-fun x1741 () Real)
(declare-fun x1029 () Real)
(declare-fun x353 () Real)
(declare-fun x1061 (Real) Real)
(declare-fun x770 () Bool)
(declare-fun x1903 () Real)
(declare-fun x1792 () Real)
(declare-fun x953 () Bool)
(declare-fun x1560 () Real)
(declare-fun x444 () Real)
(declare-fun x1341 () Real)
(declare-fun x869 () x210)
(declare-fun x2080 () Real)
(declare-fun x1968 () Real)
(declare-fun x259 () Bool)
(declare-fun x420 () Real)
(declare-fun x1128 () Bool)
(declare-fun x1690 () x210)
(declare-fun x207 () Real)
(declare-fun x1617 () Bool)
(declare-fun x1407 () Real)
(declare-fun x1918 () Real)
(declare-fun x656 () Real)
(declare-fun x179 () Real)
(declare-fun x834 () Bool)
(declare-fun x1957 () Real)
(declare-fun x282 () Bool)
(declare-fun x569 () Real)
(declare-fun x427 () Real)
(declare-fun x1961 () Bool)
(declare-fun x1798 () Bool)
(declare-fun x1097 () Real)
(declare-fun x2069 (x210) Real)
(declare-fun x474 () Real)
(declare-fun x1572 () Real)
(declare-fun x1070 () Real)
(declare-fun x511 () Bool)
(declare-fun x453 () Real)
(declare-fun x986 () Real)
(declare-fun x1508 () x210)
(declare-fun x1013 () Real)
(declare-fun x793 () Bool)
(declare-fun x816 () Real)
(declare-fun x431 () x210)
(declare-fun x1860 () Real)
(declare-fun x2098 () Real)
(declare-fun x2044 () Real)
(declare-fun x602 () Bool)
(declare-fun x1811 (Real) Real)
(declare-fun x1748 () Real)
(declare-fun x625 () Real)
(declare-fun x407 () Real)
(declare-fun x1845 () Real)
(declare-fun x1012 () Real)
(declare-fun x1912 () Bool)
(declare-fun x494 () Real)
(declare-fun x707 () Real)
(declare-fun x879 () Real)
(declare-fun x1906 () Real)
(declare-fun x477 () Bool)
(declare-fun x163 () Real)
(declare-fun x173 () x210)
(declare-fun x1071 () Real)
(declare-fun x1095 () x210)
(declare-fun x513 () Real)
(declare-fun x729 () Real)
(declare-fun x1073 () Real)
(declare-fun x1500 () Real)
(declare-fun x691 () Bool)
(declare-fun x1456 () Real)
(declare-fun x721 () Real)
(declare-fun x1667 () Bool)
(declare-fun x1196 () Real)
(declare-fun x1635 () Bool)
(declare-fun x1842 () Real)
(declare-fun x703 () Real)
(declare-fun x706 () Real)
(declare-fun x1357 () Real)
(declare-fun x1110 () Bool)
(declare-fun x1570 () Bool)
(declare-fun x900 () Real)
(declare-fun x404 () Real)
(declare-fun x2038 () Real)
(declare-fun x293 () Real)
(declare-fun x241 () Real)
(declare-fun x2096 (Real) Real)
(declare-fun x645 (x210) Real)
(declare-fun x950 () Bool)
(declare-fun x1382 () Bool)
(declare-fun x781 () Real)
(declare-fun x939 () Real)
(declare-fun x434 () Bool)
(declare-fun x1577 () Real)
(declare-fun x1125 () Bool)
(declare-fun x849 () Real)
(declare-fun x243 () Bool)
(declare-fun x306 () Real)
(declare-fun x2012 () Real)
(declare-fun x1658 () Real)
(declare-fun x510 () Bool)
(declare-fun x168 () Real)
(declare-fun x1866 () Bool)
(declare-fun x944 () Real)
(declare-fun x340 () Real)
(declare-fun x2088 () Real)
(declare-fun x62 () Bool)
(declare-fun x95 () Real)
(declare-fun x1898 () Bool)
(declare-fun x1328 () Real)
(declare-fun x1565 () Real)
(declare-fun x297 () Real)
(declare-fun x1380 () Real)
(declare-fun x127 () Bool)
(declare-fun x988 () Real)
(declare-fun x836 () Real)
(declare-fun x1737 () Real)
(declare-fun x2042 () Real)
(declare-fun x1428 () x210)
(declare-fun x98 () Real)
(declare-fun x2081 () Real)
(declare-fun x1121 () Real)
(declare-fun x430 (Real) Real)
(declare-fun x865 () Real)
(declare-fun x1793 (x210) Real)
(declare-fun x1713 () Real)
(declare-fun x826 () Bool)
(declare-fun x1640 () Real)
(declare-fun x229 () Real)
(declare-fun x767 (Real) Real)
(declare-fun x644 () Real)
(declare-fun x419 () Bool)
(declare-fun x1008 () Real)
(declare-fun x89 () Real)
(declare-fun x638 () Real)
(declare-fun x2136 () Real)
(declare-fun x198 (Real) Real)
(declare-fun x423 () Real)
(declare-fun x1958 () Bool)
(declare-fun x845 () Real)
(declare-fun x1044 () Bool)
(declare-fun x1085 (Real) Real)
(declare-fun x442 () Bool)
(declare-fun x1542 () Real)
(declare-fun x471 () Real)
(declare-fun x1524 () Real)
(declare-fun x1284 () Real)
(declare-fun x498 () Real)
(declare-fun x368 () Real)
(declare-fun x319 () Real)
(declare-fun x2129 () Real)
(declare-fun x1766 () Real)
(declare-fun x1543 () Real)
(declare-fun x1604 () Real)
(declare-fun x321 () Bool)
(declare-fun x212 () Real)
(declare-fun x1573 () Real)
(declare-fun x1584 () Real)
(declare-fun x1080 () Real)
(declare-fun x249 () Bool)
(declare-fun x15 (x210) Real)
(declare-fun x112 (x210) Real)
(declare-fun x158 () Real)
(declare-fun x1773 () Real)
(declare-fun x570 () Real)
(declare-fun x698 (x210) Real)
(declare-fun x1930 () Real)
(declare-fun x409 () Real)
(declare-fun x1138 () x210)
(declare-fun x880 () x210)
(declare-fun x94 () Real)
(declare-fun x1224 () Bool)
(declare-fun x643 (Real) Real)
(declare-fun x1828 () Bool)
(declare-fun x1241 () Real)
(declare-fun x1283 () Real)
(declare-fun x414 () Bool)
(declare-fun x617 () Real)
(declare-fun x1252 () Bool)
(declare-fun x577 () Bool)
(declare-fun x1159 (x210) Real)
(declare-fun x115 () Real)
(declare-fun x2125 () Bool)
(declare-fun x2106 () Real)
(declare-fun x1381 () Real)
(declare-fun x9 () Real)
(declare-fun x804 () Real)
(declare-fun x1648 () Real)
(declare-fun x1726 () Real)
(declare-fun x452 () Real)
(declare-fun x1643 () Bool)
(declare-fun x1294 () Real)
(declare-fun x1578 () Real)
(declare-fun x894 () Real)
(declare-fun x465 () Real)
(declare-fun x1579 () Real)
(declare-fun x2034 () Real)
(declare-fun x487 () Real)
(declare-fun x1661 () Real)
(declare-fun x2072 () Real)
(declare-fun x2094 () Bool)
(declare-fun x1401 () Real)
(declare-fun x1388 () Bool)
(declare-fun x1590 () Real)
(declare-fun x579 () Bool)
(declare-fun x1684 () Real)
(declare-fun x1563 () Real)
(declare-fun x1629 () Real)
(declare-fun x1523 (Real) Real)
(declare-fun x1652 () Bool)
(declare-fun x294 () Real)
(declare-fun x971 () Real)
(declare-fun x1043 () Real)
(declare-fun x1970 (Real) Real)
(declare-fun x1047 () Real)
(declare-fun x591 () Real)
(declare-fun x1890 () Real)
(declare-fun x1923 () Real)
(declare-fun x330 () Real)
(declare-fun x1090 () Real)
(declare-fun x1908 () x210)
(declare-fun x1032 () Real)
(declare-fun x23 () Real)
(declare-fun x1042 () Real)
(declare-fun x1750 () Bool)
(declare-fun x1891 () Real)
(declare-fun x433 () Real)
(declare-fun x1257 () Real)
(declare-fun x771 () Real)
(declare-fun x497 () Real)
(declare-fun x1525 () Real)
(declare-fun x795 () x210)
(declare-fun x1767 () Real)
(declare-fun x1813 () Real)
(declare-fun x1094 () Real)
(declare-fun x469 () Real)
(declare-fun x1014 () Real)
(declare-fun x2074 () Real)
(declare-fun x561 () Real)
(declare-fun x1633 () Real)
(declare-fun x1539 () Real)
(declare-fun x516 () Real)
(declare-fun x927 () Real)
(declare-fun x234 () Real)
(declare-fun x1140 () Bool)
(declare-fun x699 () Real)
(declare-fun x975 () Real)
(declare-fun x236 () Real)
(declare-fun x426 () Real)
(declare-fun x166 () Real)
(declare-fun x839 () Real)
(declare-fun x1352 () Real)
(declare-fun x524 () Real)
(declare-fun x1704 () Real)
(declare-fun x2119 () Real)
(declare-fun x271 () Bool)
(declare-fun x1682 () Real)
(declare-fun x1114 () x210)
(declare-fun x461 () Real)
(declare-fun x1311 () Real)
(declare-fun x2137 () Real)
(declare-fun x1327 () x210)
(declare-fun x1905 () Real)
(declare-fun x1722 () Real)
(declare-fun x696 () Bool)
(declare-fun x1186 () Real)
(declare-fun x1195 () Real)
(declare-fun x92 () Real)
(declare-fun x761 () x210)
(declare-fun x1205 () Real)
(declare-fun x841 () Bool)
(declare-fun x292 (x210) Real)
(declare-fun x1772 () Real)
(declare-fun x1716 () Real)
(declare-fun x350 () Real)
(declare-fun x1744 () Real)
(declare-fun x288 () Bool)
(declare-fun x1083 () Real)
(declare-fun x586 () Real)
(declare-fun x642 () Real)
(declare-fun x933 () Real)
(declare-fun x1440 () Real)
(declare-fun x1474 () Real)
(declare-fun x526 () Real)
(declare-fun x797 () Real)
(declare-fun x1371 () Real)
(declare-fun x745 () Real)
(declare-fun x1261 () Real)
(declare-fun x1714 () Real)
(declare-fun x1374 () Real)
(declare-fun x1812 () Real)
(declare-fun x2047 () Bool)
(declare-fun x534 () Real)
(declare-fun x349 () Real)
(declare-fun x217 () Real)
(declare-fun x613 () Real)
(declare-fun x1243 () Real)
(declare-fun x1346 () Real)
(declare-fun x1886 () Real)
(declare-fun x1141 () Real)
(declare-fun x962 () Bool)
(declare-fun x1164 () Real)
(declare-fun x1558 () Real)
(declare-fun x1389 () Real)
(declare-fun x1624 () Real)
(declare-fun x1100 () Real)
(declare-fun x1030 () Real)
(declare-fun x1600 () Bool)
(declare-fun x1995 () Real)
(declare-fun x1520 () x210)
(declare-fun x2111 () Real)
(declare-fun x1840 () Real)
(declare-fun x1685 () Real)
(declare-fun x1598 () Real)
(declare-fun x1963 () Real)
(declare-fun x1592 () Real)
(declare-fun x1839 () Real)
(declare-fun x1353 () Real)
(declare-fun x710 () Real)
(declare-fun x1587 () Bool)
(declare-fun x546 () Real)
(declare-fun x954 () Real)
(declare-fun x73 () Real)
(declare-fun x1227 () x210)
(declare-fun x1597 () Real)
(declare-fun x809 () Real)
(declare-fun x2123 () Bool)
(declare-fun x1625 () Bool)
(declare-fun x37 () Bool)
(declare-fun x1021 () Real)
(declare-fun x495 () Real)
(declare-fun x1064 () Real)
(declare-fun x685 () Real)
(declare-fun x1124 (Real) Real)
(declare-fun x1483 () Real)
(declare-fun x124 () Real)
(declare-fun x42 () Real)
(declare-fun x922 () Bool)
(declare-fun x1672 () Real)
(declare-fun x1173 () Real)
(declare-fun x1098 (Real) Real)
(declare-fun x1203 () Real)
(declare-fun x1279 () Real)
(declare-fun x1237 () x210)
(declare-fun x456 () Real)
(declare-fun x302 () Real)
(declare-fun x1734 () Real)
(declare-fun x483 () Bool)
(declare-fun x305 () Real)
(declare-fun x299 () Bool)
(declare-fun x1451 () Real)
(declare-fun x1147 () Bool)
(declare-fun x186 () Real)
(declare-fun x54 () Real)
(declare-fun x1004 () Real)
(declare-fun x72 () Real)
(declare-fun x1852 () Real)
(declare-fun x1218 () Real)
(declare-fun x917 () Bool)
(declare-fun x1676 () Real)
(declare-fun x39 () Real)
(declare-fun x1068 () Real)
(declare-fun x1745 () Real)
(declare-fun x595 () Bool)
(declare-fun x1867 () Bool)
(declare-fun x277 (Real) Real)
(declare-fun x1596 () Real)
(declare-fun x1016 () Real)
(declare-fun x68 () Real)
(declare-fun x2037 () Real)
(declare-fun x636 () Real)
(declare-fun x1809 () Real)
(declare-fun x756 () Bool)
(declare-fun x537 () Bool)
(declare-fun x1510 (Real) Real)
(declare-fun x1971 () Bool)
(declare-fun x1420 () Real)
(declare-fun x70 (Real) Real)
(declare-fun x1683 (Real) Real)
(declare-fun x1662 () Bool)
(declare-fun x176 () Real)
(declare-fun x877 () Real)
(declare-fun x1489 () Real)
(declare-fun x893 () Real)
(declare-fun x1133 () Bool)
(declare-fun x941 () Bool)
(declare-fun x715 () Bool)
(declare-fun x425 () Bool)
(declare-fun x1250 () Bool)
(declare-fun x727 (Real) Real)
(declare-fun x220 () Real)
(declare-fun x2114 () Real)
(declare-fun x956 () Real)
(declare-fun x1895 () Real)
(declare-fun x283 () Real)
(declare-fun x1751 () Real)
(declare-fun x960 () Bool)
(declare-fun x1066 () Real)
(declare-fun x1636 () Real)
(declare-fun x285 () Real)
(declare-fun x666 () Real)
(declare-fun x2015 () Real)
(declare-fun x890 () Bool)
(declare-fun x1476 () x210)
(declare-fun x1857 () Real)
(declare-fun x1689 (Real) Real)
(declare-fun x1675 () Real)
(declare-fun x575 () Real)
(declare-fun x540 () x210)
(declare-fun x75 () Real)
(declare-fun x1002 () Bool)
(declare-fun x921 () Bool)
(declare-fun x256 () Real)
(declare-fun x787 () Real)
(declare-fun x1933 () Bool)
(declare-fun x387 () Real)
(declare-fun x932 () Bool)
(declare-fun x1868 () Real)
(declare-fun x1238 () Real)
(declare-fun x1275 () Real)
(declare-fun x458 () Real)
(declare-fun x892 () Real)
(declare-fun x1952 () Real)
(declare-fun x1849 () Real)
(declare-fun x1936 () Real)
(declare-fun x382 () Real)
(declare-fun x753 () x210)
(declare-fun x870 () Real)
(declare-fun x1638 () Real)
(declare-fun x2132 () Real)
(declare-fun x1409 () Bool)
(declare-fun x926 () x210)
(declare-fun x122 () Bool)
(declare-fun x2099 () Real)
(declare-fun x113 () Real)
(declare-fun x81 () Real)
(declare-fun x298 () Real)
(declare-fun x1006 () x210)
(declare-fun x1899 () Real)
(declare-fun x653 () Bool)
(declare-fun x605 () Real)
(declare-fun x1020 () Real)
(declare-fun x26 () Real)
(declare-fun x138 () Bool)
(declare-fun x1319 () Real)
(declare-fun x1204 (Real) Real)
(declare-fun x747 () Real)
(declare-fun x435 () Real)
(declare-fun x97 () Real)
(declare-fun x1078 () Real)
(declare-fun x1787 () Bool)
(declare-fun x759 () Real)
(declare-fun x125 () Real)
(declare-fun x200 () Bool)
(declare-fun x263 () Real)
(declare-fun x689 () x210)
(declare-fun x1438 (Real) Real)
(declare-fun x2122 () Real)
(declare-fun x1725 () Real)
(declare-fun x492 () Bool)
(declare-fun x1779 () Real)
(declare-fun x1644 () x210)
(declare-fun x1790 () Real)
(declare-fun x948 () Real)
(declare-fun x219 () Bool)
(declare-fun x2126 () Real)
(declare-fun x1634 () Bool)
(declare-fun x1291 () Real)
(declare-fun x167 () Real)
(declare-fun x390 () Real)
(declare-fun x2021 () Bool)
(declare-fun x700 () x210)
(declare-fun x110 () Real)
(declare-fun x1057 () Real)
(declare-fun x1355 () Real)
(declare-fun x359 () Real)
(declare-fun x851 () Real)
(declare-fun x970 () Bool)
(declare-fun x1557 () Real)
(declare-fun x1464 () Real)
(declare-fun x680 () Real)
(declare-fun x449 () Bool)
(declare-fun x1201 () Real)
(declare-fun x2120 () Bool)
(declare-fun x620 (Real) Real)
(declare-fun x1445 () Real)
(declare-fun x1024 (Real) Real)
(declare-fun x1681 () Real)
(declare-fun x2091 () Real)
(declare-fun x1678 () Real)
(declare-fun x1731 () Real)
(declare-fun x1468 () Bool)
(declare-fun x347 () Real)
(declare-fun x886 () Real)
(declare-fun x889 () Real)
(declare-fun x812 () Bool)
(declare-fun x61 () x210)
(declare-fun x1613 () Real)
(declare-fun x1519 () Bool)
(declare-fun x1495 () Bool)
(declare-fun x1916 (Real) Real)
(declare-fun x1484 () Real)
(declare-fun x640 () Real)
(declare-fun x1149 (Real) Real)
(declare-fun x1990 () Real)
(declare-fun x2040 () Real)
(declare-fun x1448 () Real)
(declare-fun x799 () x210)
(declare-fun x1377 () Real)
(declare-fun x1646 () Real)
(declare-fun x1620 (Real) Real)
(declare-fun x380 () Real)
(declare-fun x990 () Real)
(declare-fun x578 () Real)
(declare-fun x1800 () Bool)
(declare-fun x223 () x210)
(declare-fun x925 () Real)
(declare-fun x1799 () Real)
(declare-fun x48 () Bool)
(declare-fun x1921 () Real)
(declare-fun x287 () Real)
(declare-fun x1256 () Real)
(declare-fun x154 () Bool)
(declare-fun x1372 () Bool)
(declare-fun x440 () Bool)
(declare-fun x1978 (Real) Real)
(declare-fun x1696 () Bool)
(declare-fun x2057 () Bool)
(declare-fun x977 () Real)
(declare-fun x1045 () Real)
(declare-fun x674 () Real)
(declare-fun x1526 () Bool)
(declare-fun x1502 () Real)
(declare-fun x2059 () Bool)
(declare-fun x1359 () Bool)
(declare-fun x355 () Real)
(declare-fun x336 () Real)
(declare-fun x93 () Real)
(declare-fun x2052 () Bool)
(declare-fun x1299 () Real)
(declare-fun x1482 () Real)
(declare-fun x1630 (Real) Real)
(declare-fun x1436 () Real)
(declare-fun x1015 (Real) Real)
(declare-fun x728 () Real)
(declare-fun x1200 () Real)
(declare-fun x329 () Real)
(declare-fun x1695 () Real)
(declare-fun x261 () Real)
(declare-fun x1915 (Real) Real)
(declare-fun x661 () Real)
(declare-fun x883 () Real)
(declare-fun x1889 (x210) Real)
(declare-fun x1373 () Bool)
(declare-fun x1108 () Real)
(declare-fun x25 () Real)
(declare-fun x260 () Real)
(declare-fun x1347 () Real)
(declare-fun x2113 () Real)
(declare-fun x1260 () Real)
(declare-fun x2109 () Real)
(declare-fun x1861 () Bool)
(declare-fun x1834 () x210)
(declare-fun x994 () Bool)
(declare-fun x57 () Bool)
(declare-fun x80 () Bool)
(declare-fun x1410 () Bool)
(declare-fun x1264 () Real)
(declare-fun x981 () Real)
(declare-fun x325 () Real)
(declare-fun x389 (Real) Real)
(declare-fun x1969 () Real)
(declare-fun x1805 () Real)
(declare-fun x408 () Bool)
(declare-fun x843 () Bool)
(declare-fun x1421 () Real)
(declare-fun x1902 () Real)
(declare-fun x760 () x210)
(declare-fun x825 () Real)
(declare-fun x1942 () Real)
(declare-fun x572 () Bool)
(declare-fun x1120 () Bool)
(declare-fun x1992 () Real)
(declare-fun x1948 () Real)
(declare-fun x596 () Real)
(declare-fun x192 () Real)
(declare-fun x351 () Real)
(declare-fun x923 () Real)
(declare-fun x1220 () Real)
(declare-fun x221 () Real)
(declare-fun x1082 () Real)
(declare-fun x1926 () Real)
(declare-fun x1330 () Real)
(declare-fun x659 () Real)
(declare-fun x1222 () Bool)
(declare-fun x63 () Real)
(declare-fun x697 () Real)
(declare-fun x1843 () Bool)
(declare-fun x1848 () Real)
(declare-fun x1791 () Real)
(declare-fun x1778 (Real) Real)
(declare-fun x587 () Real)
(declare-fun x1112 () Real)
(declare-fun x1932 () Real)
(declare-fun x1824 () Real)
(declare-fun x807 () Real)
(declare-fun x967 () Real)
(declare-fun x1009 () Bool)
(declare-fun x1295 () Real)
(declare-fun x307 () Bool)
(declare-fun x2112 () Real)
(declare-fun x790 () Real)
(declare-fun x873 () Bool)
(declare-fun x1198 () Real)
(declare-fun x2006 () Real)
(declare-fun x1622 () Real)
(declare-fun x1048 () Bool)
(declare-fun x6 () x210)
(declare-fun x758 () Real)
(declare-fun x171 () x210)
(declare-fun x254 () Real)
(declare-fun x331 () Real)
(declare-fun x740 () Real)
(declare-fun x1167 () Real)
(declare-fun x1135 (x210) Real)
(declare-fun x592 () Real)
(declare-fun x1230 () Bool)
(declare-fun x814 () Bool)
(declare-fun x968 () Bool)
(declare-fun x904 () Real)
(declare-fun x136 () Real)
(declare-fun x278 () Bool)
(declare-fun x1931 (Real) Real)
(declare-fun x1794 () Bool)
(declare-fun x2028 () Bool)
(declare-fun x531 (Real) Real)
(declare-fun x455 () Real)
(declare-fun x597 () Real)
(declare-fun x1993 () Real)
(declare-fun x1271 () x210)
(declare-fun x1199 () Real)
(declare-fun x377 () x210)
(declare-fun x149 () Real)
(declare-fun x1317 () Real)
(declare-fun x34 () Bool)
(declare-fun x629 () Real)
(declare-fun x1469 () Real)
(declare-fun x819 () Real)
(declare-fun x1964 () Real)
(declare-fun x85 () Real)
(declare-fun x2000 () Bool)
(declare-fun x232 () Real)
(declare-fun x1610 () Real)
(declare-fun x1939 () Real)
(declare-fun x1189 () Bool)
(declare-fun x1254 () Real)
(declare-fun x1955 () Bool)
(declare-fun x888 () Bool)
(declare-fun x1157 () Real)
(declare-fun x1214 () Real)
(declare-fun x182 () Bool)
(declare-fun x1293 () Bool)
(declare-fun x86 () Bool)
(declare-fun x850 () Bool)
(declare-fun x1603 () Real)
(declare-fun x532 () Real)
(declare-fun x1313 (Real) Real)
(declare-fun x275 () Real)
(declare-fun x1632 () Real)
(declare-fun x517 () Real)
(declare-fun x262 () Real)
(declare-fun x949 () Real)
(declare-fun x672 () x210)
(declare-fun x895 () Real)
(declare-fun x2087 () x210)
(declare-fun x1457 () Bool)
(declare-fun x11 () Real)
(declare-fun x1996 () Real)
(declare-fun x604 () Real)
(declare-fun x1179 () Real)
(declare-fun x1829 () Bool)
(declare-fun x1127 () Real)
(declare-fun x79 () Real)
(declare-fun x1396 () Real)
(declare-fun x854 () Bool)
(declare-fun x2051 () Real)
(declare-fun x147 () Real)
(declare-fun x764 () x210)
(declare-fun x2090 () Real)
(declare-fun x1148 () Real)
(declare-fun x829 () Real)
(declare-fun x178 () Real)
(declare-fun x584 () x210)
(declare-fun x1213 () x210)
(declare-fun x139 () Real)
(declare-fun x268 () x210)
(declare-fun x947 () Real)
(declare-fun x1 () Real)
(declare-fun x1363 () Bool)
(declare-fun x776 () Real)
(declare-fun x233 () Real)
(declare-fun x253 () Bool)
(declare-fun x327 () Real)
(declare-fun x725 () Real)
(declare-fun x1530 () Real)
(declare-fun x780 () x210)
(declare-fun x528 () Real)
(declare-fun x441 () Bool)
(declare-fun x240 (Real) Real)
(declare-fun x1947 () Real)
(declare-fun x1255 () Bool)
(declare-fun x1443 () Real)
(declare-fun x106 () Real)
(declare-fun x952 () Bool)
(declare-fun x422 () Bool)
(declare-fun x507 () Real)
(declare-fun x454 () x210)
(declare-fun x279 () Real)
(declare-fun x1896 () Bool)
(declare-fun x2056 () Real)
(declare-fun x1999 () Real)
(declare-fun x522 () Real)
(declare-fun x416 (Real) Real)
(declare-fun x463 () Real)
(declare-fun x943 () x210)
(declare-fun x564 () Real)
(declare-fun x36 () Bool)
(declare-fun x472 () Bool)
(declare-fun x538 () Real)
(declare-fun x785 () Real)
(declare-fun x786 (Real) Real)
(declare-fun x937 () Real)
(declare-fun x1332 () Bool)
(declare-fun x1559 () Real)
(declare-fun x1074 () Real)
(declare-fun x328 () Real)
(declare-fun x868 () Real)
(declare-fun x385 () Real)
(declare-fun x919 () Real)
(declare-fun x1783 () Real)
(declare-fun x1481 () Bool)
(declare-fun x1789 () Real)
(declare-fun x1838 () Real)
(declare-fun x1821 (Real) Real)
(declare-fun x2134 () Real)
(declare-fun x1858 () Real)
(declare-fun x244 () Bool)
(declare-fun x1736 () Real)
(declare-fun x1534 () Bool)
(declare-fun x1553 () Real)
(declare-fun x1441 () Real)
(declare-fun x1185 () Real)
(declare-fun x479 () Real)
(declare-fun x766 () Bool)
(declare-fun x1322 () Bool)
(declare-fun x2058 () Real)
(declare-fun x748 () Real)
(declare-fun x1463 () Real)
(define-fun x1329 ((x210 x210) (x848 Real)) x210 (ite ((_ is x568) x210) (x568 (x323 x210) (+ (x1296 x210) x848)) (ite ((_ is x1039) x210) (x1039 (x226 x210) (x501 x210) (+ x848 (x1817 x210))) (x1134 (+ (x257 x210) x848)))))
(define-fun x188 ((x199 Real)) Real (ite (and (>= x199 0) (< x199 115792089237316195423570985008687907853269984665640564039457584007913129639936)) x199 (- x199 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(define-fun x969 ((x199 Real)) Real (ite (and (> 0 x199) (>= x199 (- 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (+ x199 115792089237316195423570985008687907853269984665640564039457584007913129639936) x199))
(define-fun x1312 ((x1040 Real)) Bool (and (< x1040 115792089237316195423570985008687907853269984665640564039457584007913129639936) (>= x1040 0)))
(define-fun x1878 ((x1040 Real)) Bool (and (= (x1649 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1040) x1040) (= x1040 (x1649 x1040 115792089237316195423570985008687907853269984665640564039457584007913129639935))))
(define-fun x1242 ((x1040 Real)) Bool (and (= 0 (x1649 x1040 0)) (= (x1649 0 x1040) 0)))
(define-fun x170 ((x1040 Real)) Bool (= x1040 (x1649 x1040 x1040)))
(define-fun x1477 ((x1040 Real)) Bool (and (x1878 x1040) (x170 x1040) (x1242 x1040)))
(define-fun x1166 ((x1040 Real)) Bool (= (x1649 20282409603651670423947251286015 x1040) (x1649 20282409603651670423947251286015 (x1649 20282409603651670423947251286015 x1040))))
(define-fun x16 ((x1040 Real)) Bool (=> (and (<= 0 x1040) (> 20282409603651670423947251286016 x1040)) (= x1040 (x1649 20282409603651670423947251286015 x1040))))
(define-fun x891 ((x1040 Real)) Bool (=> (= x1040 (x1649 20282409603651670423947251286015 x1040)) (and (>= x1040 0) (> 20282409603651670423947251286016 x1040))))
(define-fun x733 ((x1040 Real)) Bool (=> (and (> 40564819207303340847894502572032 x1040) (<= 20282409603651670423947251286016 x1040)) (= (x1649 20282409603651670423947251286015 x1040) (- x1040 20282409603651670423947251286016))))
(define-fun x1075 ((x1040 Real) (x1413 Real)) Bool (and (= x1040 (+ (* x1413 20282409603651670423947251286016) (x1649 20282409603651670423947251286015 x1040))) (>= x1413 0)))
(define-fun x1901 ((x1040 Real) (x157 Real)) Bool (and (x733 x1040) (x16 x1040) (x891 x1040) (x1075 x1040 x157) (x1166 x1040)))
(define-fun x1880 ((x1040 Real) (x1413 Real)) Bool (= (x1649 x1040 x1413) (x1649 x1413 x1040)))
(define-fun x677 ((x1040 Real) (x1413 Real)) Bool (and (=> (<= 0 x1413) (<= (x1649 x1040 x1413) x1413)) (=> (>= x1040 0) (>= x1040 (x1649 x1040 x1413))) (>= (x1649 x1040 x1413) 0)))
(define-fun x687 ((x1040 Real) (x1413 Real)) Bool (and (x677 x1040 x1413) (x1880 x1040 x1413)))
(define-fun x1267 ((x1040 Real) (x157 Real)) Bool (and (x687 x1040 20282409603651670423947251286015) (x1901 x1040 x157)))
(define-fun x543 ((x1040 Real)) Bool (= (ite (< (x1649 x1040 20282409603651670423947251286015) 10141204801825835211973625643008) (x1649 x1040 20282409603651670423947251286015) (+ 115792089237316195423570985008687907853269984645358154435805913583965878353920 (x1649 x1040 20282409603651670423947251286015))) (x958 x1040)))
(define-fun x295 ((x1040 Real)) Bool (= (x1649 255 (x1649 255 x1040)) (x1649 255 x1040)))
(define-fun x123 ((x1040 Real)) Bool (=> (and (<= 0 x1040) (< x1040 256)) (= (x1649 255 x1040) x1040)))
(define-fun x1836 ((x1040 Real)) Bool (=> (= x1040 (x1649 255 x1040)) (and (<= 0 x1040) (> 256 x1040))))
(define-fun x552 ((x1040 Real)) Bool (=> (and (> 512 x1040) (<= 256 x1040)) (= (- x1040 256) (x1649 255 x1040))))
(define-fun x224 ((x1040 Real) (x1413 Real)) Bool (and (>= x1413 0) (= (+ (x1649 255 x1040) (* 256 x1413)) x1040)))
(define-fun x1701 ((x1040 Real) (x157 Real)) Bool (and (x1836 x1040) (x224 x1040 x157) (x123 x1040) (x295 x1040) (x552 x1040)))
(define-fun x1005 ((x1040 Real) (x157 Real)) Bool (and (x1701 x1040 x157) (x687 x1040 255)))
(define-fun x222 ((x1040 Real)) Bool (= (x1649 1461501637330902918203684832716283019655932542975 (x1649 1461501637330902918203684832716283019655932542975 x1040)) (x1649 1461501637330902918203684832716283019655932542975 x1040)))
(define-fun x129 ((x1040 Real)) Bool (=> (and (< x1040 1461501637330902918203684832716283019655932542976) (>= x1040 0)) (= (x1649 1461501637330902918203684832716283019655932542975 x1040) x1040)))
(define-fun x1919 ((x1040 Real)) Bool (=> (= (x1649 1461501637330902918203684832716283019655932542975 x1040) x1040) (and (> 1461501637330902918203684832716283019655932542976 x1040) (>= x1040 0))))
(define-fun x356 ((x1040 Real)) Bool (=> (and (>= x1040 1461501637330902918203684832716283019655932542976) (> 2923003274661805836407369665432566039311865085952 x1040)) (= (- x1040 1461501637330902918203684832716283019655932542976) (x1649 1461501637330902918203684832716283019655932542975 x1040))))
(define-fun x1770 ((x1040 Real) (x1413 Real)) Bool (and (<= 0 x1413) (= x1040 (+ (* 1461501637330902918203684832716283019655932542976 x1413) (x1649 1461501637330902918203684832716283019655932542975 x1040)))))
(define-fun x1900 ((x1040 Real) (x157 Real)) Bool (and (x1770 x1040 x157) (x356 x1040) (x222 x1040) (x1919 x1040) (x129 x1040)))
(define-fun x1887 ((x1040 Real) (x157 Real)) Bool (and (x687 x1040 1461501637330902918203684832716283019655932542975) (x1900 x1040 x157)))
(define-fun x460 ((x1040 Real)) Bool (= (x1649 340282366920938463463374607431768211455 x1040) (x1649 340282366920938463463374607431768211455 (x1649 340282366920938463463374607431768211455 x1040))))
(define-fun x641 ((x1040 Real)) Bool (=> (and (>= x1040 0) (< x1040 340282366920938463463374607431768211456)) (= x1040 (x1649 340282366920938463463374607431768211455 x1040))))
(define-fun x665 ((x1040 Real)) Bool (=> (= (x1649 340282366920938463463374607431768211455 x1040) x1040) (and (> 340282366920938463463374607431768211456 x1040) (<= 0 x1040))))
(define-fun x1113 ((x1040 Real)) Bool (=> (and (< x1040 680564733841876926926749214863536422912) (<= 340282366920938463463374607431768211456 x1040)) (= (- x1040 340282366920938463463374607431768211456) (x1649 340282366920938463463374607431768211455 x1040))))
(define-fun x563 ((x1040 Real) (x1413 Real)) Bool (and (= (+ (* x1413 340282366920938463463374607431768211456) (x1649 340282366920938463463374607431768211455 x1040)) x1040) (<= 0 x1413)))
(define-fun x1123 ((x1040 Real) (x157 Real)) Bool (and (x563 x1040 x157) (x665 x1040) (x1113 x1040) (x460 x1040) (x641 x1040)))
(define-fun x251 ((x1040 Real) (x157 Real)) Bool (and (x687 x1040 340282366920938463463374607431768211455) (x1123 x1040 x157)))
(define-fun x899 ((x1040 Real)) Bool (= (x1649 18446744073709551615 (x1649 18446744073709551615 x1040)) (x1649 18446744073709551615 x1040)))
(define-fun x523 ((x1040 Real)) Bool (=> (and (<= 0 x1040) (< x1040 18446744073709551616)) (= x1040 (x1649 18446744073709551615 x1040))))
(define-fun x1788 ((x1040 Real)) Bool (=> (= x1040 (x1649 18446744073709551615 x1040)) (and (> 18446744073709551616 x1040) (<= 0 x1040))))
(define-fun x681 ((x1040 Real)) Bool (=> (and (<= 18446744073709551616 x1040) (> 36893488147419103232 x1040)) (= (x1649 18446744073709551615 x1040) (- x1040 18446744073709551616))))
(define-fun x1910 ((x1040 Real) (x1413 Real)) Bool (and (<= 0 x1413) (= x1040 (+ (x1649 18446744073709551615 x1040) (* x1413 18446744073709551616)))))
(define-fun x1392 ((x1040 Real) (x157 Real)) Bool (and (x1788 x1040) (x523 x1040) (x681 x1040) (x899 x1040) (x1910 x1040 x157)))
(define-fun x867 ((x1040 Real) (x157 Real)) Bool (and (x687 x1040 18446744073709551615) (x1392 x1040 x157)))
(define-fun x1831 ((x1040 Real)) Bool (= (x1649 65535 x1040) (x1649 65535 (x1649 65535 x1040))))
(define-fun x245 ((x1040 Real)) Bool (=> (and (<= 0 x1040) (> 65536 x1040)) (= (x1649 65535 x1040) x1040)))
(define-fun x2014 ((x1040 Real)) Bool (=> (= (x1649 65535 x1040) x1040) (and (> 65536 x1040) (>= x1040 0))))
(define-fun x2085 ((x1040 Real)) Bool (=> (and (>= x1040 65536) (< x1040 131072)) (= (x1649 65535 x1040) (- x1040 65536))))
(define-fun x1763 ((x1040 Real) (x1413 Real)) Bool (and (>= x1413 0) (= x1040 (+ (x1649 65535 x1040) (* 65536 x1413)))))
(define-fun x907 ((x1040 Real) (x157 Real)) Bool (and (x245 x1040) (x1763 x1040 x157) (x2085 x1040) (x2014 x1040) (x1831 x1040)))
(define-fun x619 ((x1040 Real) (x157 Real)) Bool (and (x907 x1040 x157) (x687 x1040 65535)))
(define-fun x2082 ((x1040 Real)) Bool (= (x1649 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1040) (x1649 115792089237316195423570985008687907853269984665640564039457584007913129639904 (x1649 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1040))))
(define-fun x354 ((x1040 Real)) Bool (=> (and (< x1040 32) (>= x1040 0)) (= 0 (x1649 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1040))))
(define-fun x983 ((x1040 Real) (x1413 Real) (x631 Real) (x690 Real)) Bool (and (>= x1413 0) (>= x631 0) (<= 0 x690) (> 1 x690) (< x631 3618502788666131106986593281521497120414687020801267626233049500247285301248) (= (+ x1413 (* x690 115792089237316195423570985008687907853269984665640564039457584007913129639936) (* 32 x631)) x1040) (> 32 x1413) (= (* 32 x631) (x1649 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1040))))
(define-fun x1755 ((x1040 Real) (x1109 Real) (x2033 Real) (x205 Real)) Bool (and (x2082 x1040) (x354 x1040) (x983 x1040 x1109 x2033 x205)))
(define-fun x533 ((x1040 Real) (x1109 Real) (x2033 Real) (x205 Real)) Bool (and (x1755 x1040 x1109 x2033 x205) (x687 x1040 115792089237316195423570985008687907853269984665640564039457584007913129639904)))
(define-fun x2101 ((x1040 Real)) Bool (= (x1811 x1040) (ite (> 170141183460469231731687303715884105728 (x1649 x1040 340282366920938463463374607431768211455)) (x1649 x1040 340282366920938463463374607431768211455) (+ 115792089237316195423570985008687907852929702298719625575994209400481361428480 (x1649 x1040 340282366920938463463374607431768211455)))))
(define-fun x945 ((x647 Real)) Real (ite (= x817 x647) x1278 (x660 x647)))
(define-fun x258 ((x647 Real)) Real (ite (= x480 x647) x1233 (x1549 x647)))
(define-fun x1234 ((x647 Real)) Real (ite (= x647 x1759) x1121 (x1915 x647)))
(define-fun x1058 ((x647 Real)) Real (ite (= x386 x647) x1441 (x416 x647)))
(define-fun x506 ((x647 Real)) Real (ite (= x647 x92) x90 (x1366 x647)))
(define-fun x768 ((x647 Real)) Real (ite (= x977 x647) x1923 (x539 x647)))
(define-fun x940 ((x647 Real)) Real (ite (= x134 x647) x261 (x1630 x647)))
(define-fun x1588 ((x647 Real)) Real (ite (= x1223 x647) x1584 (x824 x647)))
(define-fun x439 ((x647 Real)) Real (ite (= 128 x647) x1385 (x779 x647)))
(define-fun x1158 ((x647 Real)) Real (ite (= x647 160) x1619 (x439 x647)))
(define-fun x247 ((x647 Real)) Real (ite (= x647 192) x1776 (x1158 x647)))
(define-fun x252 ((x647 Real)) Real (ite (= 224 x647) x803 (x247 x647)))
(define-fun x488 ((x647 Real)) Real (ite (= 256 x647) x1903 (x252 x647)))
(define-fun x1187 ((x647 Real)) Real (ite (= 128 x647) x1026 (x779 x647)))
(define-fun x2019 ((x647 Real)) Real (ite (= x647 160) x13 (x1187 x647)))
(define-fun x1743 ((x647 Real)) Real (ite (= x647 192) x534 (x2019 x647)))
(define-fun x181 ((x647 Real)) Real (ite (= 224 x647) x668 (x1743 x647)))
(define-fun x1911 ((x647 Real)) Real (ite (= 256 x647) x1992 (x181 x647)))
(define-fun x955 ((x647 Real)) Real (ite (and x572 x854) (x488 x647) (x1911 x647)))
(define-fun x1472 ((x647 Real)) Real (ite (= 128 x647) x1838 (x1510 x647)))
(define-fun x1668 ((x647 Real)) Real (ite (= 160 x647) x1860 (x1472 x647)))
(define-fun x906 ((x647 Real)) Real (ite (= 192 x647) x2080 (x1668 x647)))
(define-fun x1051 ((x647 Real)) Real (ite (= x647 224) x591 (x906 x647)))
(define-fun x935 ((x647 Real)) Real (ite (= x647 256) x648 (x1051 x647)))
(define-fun x1447 ((x647 Real)) Real (ite (= x647 x89) x1038 (x1523 x647)))
(define-fun x1444 ((x647 Real)) Real (ite (= x963 x647) x1354 (x1447 x647)))
(define-fun x1641 ((x647 Real)) Real (ite (= x397 x647) x1345 (x1444 x647)))
(define-fun x1782 ((x647 Real)) Real (ite (= x351 x647) x256 (x1641 x647)))
(define-fun x1126 ((x647 Real)) Real (ite (= x497 x647) x345 (x1782 x647)))
(define-fun x2063 ((x647 Real)) Real (ite (= x647 0) x1723 (x22 x647)))
(define-fun x704 ((x647 Real)) Real (ite (= 32 x647) x1379 (x2063 x647)))
(define-fun x2013 ((x647 Real)) Real (ite (= 64 x647) x1497 (x704 x647)))
(define-fun x1966 ((x647 Real)) Real (ite (= x647 96) x726 (x2013 x647)))
(define-fun x1935 ((x647 Real)) Real (ite (= x647 128) x1043 (x1966 x647)))
(define-fun x1069 ((x647 Real)) Real (ite (= 128 x647) x1838 (x155 x647)))
(define-fun x1340 ((x647 Real)) Real (ite (= 160 x647) x1258 (x1069 x647)))
(define-fun x1785 ((x647 Real)) Real (ite (= 192 x647) x2080 (x1340 x647)))
(define-fun x720 ((x647 Real)) Real (ite (= x647 224) x591 (x1785 x647)))
(define-fun x1740 ((x647 Real)) Real (ite (= x647 256) x648 (x720 x647)))
(define-fun x1498 ((x647 Real)) Real (ite (= 0 x647) x1418 (x643 x647)))
(define-fun x1176 ((x647 Real)) Real (ite (= 32 x647) x625 (x1498 x647)))
(define-fun x67 ((x647 Real)) Real (ite (= x647 64) x1613 (x1176 x647)))
(define-fun x101 ((x647 Real)) Real (ite (= x647 96) x2113 (x67 x647)))
(define-fun x652 ((x647 Real)) Real (ite (= x647 128) x1727 (x101 x647)))
(define-fun x1532 ((x647 x210)) Real (ite (= x1095 x647) x844 (x1135 x647)))
(define-fun x1994 ((x647 x210)) Real (ite x1718 (x1135 x647) (x1532 x647)))
(define-fun x1801 ((x647 x210)) Real (ite (= x647 x985) x839 (x614 x647)))
(define-fun x1802 ((x647 x210)) Real (ite (= x1095 x647) x1610 (x614 x647)))
(define-fun x197 ((x647 x210)) Real (ite x1718 (x1801 x647) (x1802 x647)))
(define-fun x378 ((x647 Real)) Real (ite (= x1557 x647) x1014 (x1061 x647)))
(define-fun x1758 ((x647 Real)) Real (ite (= x647 x239) x1722 (x1124 x647)))
(define-fun x1182 ((x647 Real)) Real (ite (= x647 x2003) x2134 (x1087 x647)))
(define-fun x1041 ((x647 Real)) Real (ite (= x647 x1404) x1695 (x1997 x647)))
(define-fun x424 ((x647 Real)) Real (ite (= x647 x1034) x815 (x531 x647)))
(define-fun x1576 ((x647 Real)) Real (ite (= x647 x589) x1019 (x928 x647)))
(define-fun x1054 ((x647 Real)) Real (ite (= x1865 x647) x774 (x70 x647)))
(define-fun x1506 ((x647 Real)) Real (ite (= x2051 x647) x2119 (x1015 x647)))
(define-fun x866 ((x647 x210)) Real (ite (= x189 x647) x742 (x1236 x647)))
(define-fun x1710 ((x647 x210)) Real (ite x1718 (x866 x647) (x1236 x647)))
(define-fun x1426 ((x647 Real)) Real (ite (= x647 128) x532 (x1450 x647)))
(define-fun x1335 ((x647 Real)) Real (ite (= x647 160) x1001 (x1426 x647)))
(define-fun x911 ((x647 Real)) Real (ite (= x647 192) x832 (x1335 x647)))
(define-fun x1720 ((x647 Real)) Real (ite (= x647 224) x1748 (x911 x647)))
(define-fun x1272 ((x647 Real)) Real (ite (= x647 256) x1326 (x1720 x647)))
(define-fun x1208 ((x647 Real)) Real (ite (= x647 128) x1163 (x1450 x647)))
(define-fun x1031 ((x647 Real)) Real (ite (= 160 x647) x147 (x1208 x647)))
(define-fun x1893 ((x647 Real)) Real (ite (= 192 x647) x828 (x1031 x647)))
(define-fun x909 ((x647 Real)) Real (ite (= 224 x647) x1073 (x1893 x647)))
(define-fun x344 ((x647 Real)) Real (ite (= 256 x647) x1583 (x909 x647)))
(define-fun x128 ((x647 Real)) Real (ite (and x343 x1084) (x1272 x647) (x344 x647)))
(define-fun x1232 ((x647 Real)) Real (ite (= 128 x647) x1838 (x1970 x647)))
(define-fun x1717 ((x647 Real)) Real (ite (= 160 x647) x1395 (x1232 x647)))
(define-fun x1626 ((x647 Real)) Real (ite (= x647 192) x2080 (x1717 x647)))
(define-fun x1247 ((x647 Real)) Real (ite (= x647 224) x591 (x1626 x647)))
(define-fun x1562 ((x647 Real)) Real (ite (= x647 256) x648 (x1247 x647)))
(define-fun x2048 ((x647 Real)) Real (ite (= x647 x65) x139 (x607 x647)))
(define-fun x1334 ((x647 Real)) Real (ite (= x1637 x647) x1280 (x2048 x647)))
(define-fun x1521 ((x647 Real)) Real (ite (= x647 x187) x370 (x1334 x647)))
(define-fun x58 ((x647 Real)) Real (ite (= x1078 x647) x1875 (x1521 x647)))
(define-fun x633 ((x647 Real)) Real (ite (= x647 x1260) x1848 (x58 x647)))
(define-fun x1055 ((x647 Real)) Real (ite (= x647 0) x1859 (x51 x647)))
(define-fun x338 ((x647 Real)) Real (ite (= x647 32) x612 (x1055 x647)))
(define-fun x40 ((x647 Real)) Real (ite (= 64 x647) x1017 (x338 x647)))
(define-fun x1320 ((x647 Real)) Real (ite (= x647 96) x1886 (x40 x647)))
(define-fun x1729 ((x647 Real)) Real (ite (= x647 128) x1685 (x1320 x647)))
(define-fun x1528 ((x647 Real)) Real (ite (= x647 128) x1838 (x12 x647)))
(define-fun x1318 ((x647 Real)) Real (ite (= x647 160) x1871 (x1528 x647)))
(define-fun x373 ((x647 Real)) Real (ite (= 192 x647) x2080 (x1318 x647)))
(define-fun x1575 ((x647 Real)) Real (ite (= x647 224) x591 (x373 x647)))
(define-fun x1656 ((x647 Real)) Real (ite (= 256 x647) x648 (x1575 x647)))
(define-fun x2130 ((x647 Real)) Real (ite (= x647 0) x161 (x767 x647)))
(define-fun x120 ((x647 Real)) Real (ite (= 32 x647) x956 (x2130 x647)))
(define-fun x1516 ((x647 Real)) Real (ite (= 64 x647) x517 (x120 x647)))
(define-fun x993 ((x647 Real)) Real (ite (= 96 x647) x592 (x1516 x647)))
(define-fun x942 ((x647 Real)) Real (ite (= 128 x647) x1417 (x993 x647)))
(define-fun x2103 ((x647 Real)) Real (ite (= x1294 x647) x1633 (x49 x647)))
(define-fun x2010 ((x647 Real)) Real (ite (= x647 x156) x1097 (x395 x647)))
(define-fun x1144 ((x647 Real)) Real (ite (= x647 x1122) x1368 (x198 x647)))
(define-fun x669 ((x647 Real)) Real (ite (= x647 x2060) x974 (x1683 x647)))
(define-fun x315 ((x647 Real)) Real (ite (= x217 x647) x769 (x857 x647)))
(define-fun x1132 ((x647 Real)) Real (ite (= x1882 x647) x694 (x2100 x647)))
(define-fun x30 ((x647 Real)) Real (ite (= x896 x647) x172 (x1438 x647)))
(define-fun x811 ((x647 Real)) Real (ite (= x647 x1985) x504 (x1204 x647)))
(define-fun x1415 ((x647 Real)) Real (ite (= 288 x647) x50 (x1774 x647)))
(define-fun x1777 ((x647 Real)) Real (ite (= 320 x647) x230 (x1415 x647)))
(define-fun x1589 ((x647 Real)) Real (ite (= 352 x647) x1016 (x1777 x647)))
(define-fun x1540 ((x647 Real)) Real (ite (= 384 x647) x991 (x1589 x647)))
(define-fun x611 ((x647 Real)) Real (ite (= 416 x647) x1448 (x1540 x647)))
(define-fun x1059 ((x647 Real)) Real (ite (= x647 288) x1603 (x1774 x647)))
(define-fun x284 ((x647 Real)) Real (ite (= x647 320) x1661 (x1059 x647)))
(define-fun x1180 ((x647 Real)) Real (ite (= 352 x647) x526 (x284 x647)))
(define-fun x333 ((x647 Real)) Real (ite (= x647 384) x463 (x1180 x647)))
(define-fun x1170 ((x647 Real)) Real (ite (= x647 416) x1446 (x333 x647)))
(define-fun x107 ((x647 Real)) Real (ite (= 128 x647) x1838 (x1412 x647)))
(define-fun x1941 ((x647 Real)) Real (ite (= x647 160) x809 (x107 x647)))
(define-fun x1621 ((x647 Real)) Real (ite (= 192 x647) x2080 (x1941 x647)))
(define-fun x145 ((x647 Real)) Real (ite (= x647 224) x591 (x1621 x647)))
(define-fun x481 ((x647 Real)) Real (ite (= x647 256) x648 (x145 x647)))
(define-fun x755 ((x647 Real)) Real (ite (= x20 x647) x328 (x2096 x647)))
(define-fun x1511 ((x647 Real)) Real (ite (= x453 x647) x1291 (x755 x647)))
(define-fun x1561 ((x647 Real)) Real (ite (= x647 x456) x961 (x1511 x647)))
(define-fun x901 ((x647 Real)) Real (ite (= x1228 x647) x507 (x1561 x647)))
(define-fun x1423 ((x647 Real)) Real (ite (= x1899 x647) x1529 (x901 x647)))
(define-fun x1846 ((x647 Real)) Real (ite (= 0 x647) x1473 (x1916 x647)))
(define-fun x1660 ((x647 Real)) Real (ite (= 32 x647) x1747 (x1846 x647)))
(define-fun x1533 ((x647 Real)) Real (ite (= x647 64) x1949 (x1660 x647)))
(define-fun x520 ((x647 Real)) Real (ite (= x647 96) x263 (x1533 x647)))
(define-fun x1700 ((x647 Real)) Real (ite (= x647 128) x829 (x520 x647)))
(define-fun x148 ((x647 Real)) Real (ite (= x1995 x647) x661 (x1571 x647)))
(define-fun x102 ((x647 Real)) Real (ite (= x647 x1390) x516 (x1313 x647)))
(define-fun x1552 ((x647 Real)) Real (ite (= x647 x1728) x2023 (x1024 x647)))
(define-fun x1708 ((x647 Real)) Real (ite (= x2001 x647) x1547 (x389 x647)))
(define-fun x2102 ((x647 Real)) Real (ite (= x647 x509) x1638 (x2018 x647)))
(define-fun x281 ((x647 Real)) Real (ite (= x647 x298) x802 (x206 x647)))
(define-fun x225 ((x647 Real)) Real (ite (= x1431 x647) x1299 (x1098 x647)))
(define-fun x1315 ((x647 Real)) Real (ite (= x1068 x647) x158 (x289 x647)))
(define-fun x1818 ((x647 Real)) Real (ite (= 128 x647) x1542 (x1131 x647)))
(define-fun x91 ((x647 Real)) Real (ite (= 160 x647) x1657 (x1818 x647)))
(define-fun x820 ((x647 Real)) Real (ite (= 192 x647) x1243 (x91 x647)))
(define-fun x1063 ((x647 Real)) Real (ite (= x647 224) x1270 (x820 x647)))
(define-fun x503 ((x647 Real)) Real (ite (= x647 256) x1065 (x1063 x647)))
(define-fun x1979 ((x647 Real)) Real (ite (= x647 128) x1999 (x1131 x647)))
(define-fun x436 ((x647 Real)) Real (ite (= x647 160) x1792 (x1979 x647)))
(define-fun x1692 ((x647 Real)) Real (ite (= x647 192) x1539 (x436 x647)))
(define-fun x1435 ((x647 Real)) Real (ite (= x647 224) x484 (x1692 x647)))
(define-fun x1872 ((x647 Real)) Real (ite (= x647 256) x390 (x1435 x647)))
(define-fun x2070 ((x647 Real)) Real (ite (= x647 128) x1838 (x897 x647)))
(define-fun x1749 ((x647 Real)) Real (ite (= 160 x647) x621 (x2070 x647)))
(define-fun x1212 ((x647 Real)) Real (ite (= 192 x647) x2080 (x1749 x647)))
(define-fun x1165 ((x647 Real)) Real (ite (= 224 x647) x591 (x1212 x647)))
(define-fun x1452 ((x647 Real)) Real (ite (= 256 x647) x648 (x1165 x647)))
(define-fun x99 ((x647 Real)) Real (ite (= x1601 x647) x1648 (x2084 x647)))
(define-fun x227 ((x647 Real)) Real (ite (= x1389 x647) x1853 (x99 x647)))
(define-fun x447 ((x647 Real)) Real (ite (= x471 x647) x1151 (x227 x647)))
(define-fun x965 ((x647 Real)) Real (ite (= x647 x1714) x1639 (x447 x647)))
(define-fun x1265 ((x647 Real)) Real (ite (= x647 x1370) x2036 (x965 x647)))
(define-fun x1362 ((x647 Real)) Real (ite (= 0 x647) x624 (x1085 x647)))
(define-fun x1544 ((x647 Real)) Real (ite (= 32 x647) x731 (x1362 x647)))
(define-fun x1286 ((x647 Real)) Real (ite (= 64 x647) x1674 (x1544 x647)))
(define-fun x1181 ((x647 Real)) Real (ite (= 96 x647) x1530 (x1286 x647)))
(define-fun x765 ((x647 Real)) Real (ite (= 128 x647) x233 (x1181 x647)))
(define-fun x860 ((x647 Real)) Real (ite (= x20 x647) x1432 (x2096 x647)))
(define-fun x485 ((x647 Real)) Real (ite (= x1548 x647) x1066 (x860 x647)))
(define-fun x978 ((x647 Real)) Real (ite (= x647 x1752) x1731 (x485 x647)))
(define-fun x41 ((x647 Real)) Real (ite (= x647 x96) x1719 (x978 x647)))
(define-fun x1338 ((x647 Real)) Real (ite (= x1 x647) x195 (x41 x647)))
(define-fun x979 ((x647 Real)) Real (ite (and x1358 x259) (x1423 x647) (x1338 x647)))
(define-fun x2049 ((x647 Real)) Real (ite x562 (x979 x647) (x1620 x647)))
(define-fun x835 ((x647 Real)) Real (ite (= x647 x1601) x1663 (x2084 x647)))
(define-fun x996 ((x647 Real)) Real (ite (= x1500 x647) x489 (x835 x647)))
(define-fun x28 ((x647 Real)) Real (ite (= x647 x106) x554 (x996 x647)))
(define-fun x1546 ((x647 Real)) Real (ite (= x647 x762) x1096 (x28 x647)))
(define-fun x775 ((x647 Real)) Real (ite (= x647 x1478) x274 (x1546 x647)))
(define-fun x912 ((x647 Real)) Real (ite (and x831 x676) (x1265 x647) (x775 x647)))
(define-fun x1786 ((x647 Real)) Real (ite x1655 (x912 x647) (x142 x647)))
(define-fun x1461 ((x647 Real)) Real (ite (and x384 (not x1252)) (x1620 x647) (x2049 x647)))
(define-fun x1263 ((x647 Real)) Real (ite x138 (ite (and x1388 (not x970)) (x142 x647) (x1786 x647)) (x142 x647)))
(define-fun x1177 ((x647 Real)) Real (ite (= x647 x1990) 76450787359836037641860180984291677749980919077056822294353438043884394381312 (x1263 x647)))
(define-fun x322 ((x647 Real)) Real (ite (= x647 x116) x758 (x1177 x647)))
(define-fun x499 ((x647 x210)) Real (ite (= x1520 x647) x1108 (x838 x647)))
(define-fun x778 ((x647 Real)) Real (ite (= x647 0) 1 (x1931 x647)))
(define-fun x1011 ((x647 Real)) Real (ite (= x1990 x647) 1 (x1689 x647)))
(define-fun x946 ((x647 Real)) Real (ite (= x647 128) x1049 (x240 x647)))
(define-fun x2007 ((x647 Real)) Real (ite (= 224 x647) x185 (x620 x647)))
(define-fun x2097 ((x647 Real)) Real (ite (= 256 x647) x1029 (x430 x647)))
(define-fun x367 ((x647 Real)) Real (ite (= 128 x647) x749 (x946 x647)))
(define-fun x375 ((x647 Real)) Real (ite (= x647 192) x39 (x1978 x647)))
(define-fun x1060 ((x647 Real)) Real (ite (= 192 x647) x366 (x1978 x647)))
(define-fun x320 ((x647 Real)) Real (ite (and x146 x1052 x1847) (x1060 x647) (x375 x647)))
(define-fun x267 ((x647 Real)) Real (ite (= 160 x647) x192 (x1465 x647)))
(define-fun x1614 ((x647 Real)) Real (ite (= 160 x647) x312 (x1465 x647)))
(define-fun x701 ((x647 Real)) Real (ite (= 128 x647) x1838 (x1149 x647)))
(define-fun x1820 ((x647 Real)) Real (ite (= x647 160) x1842 (x701 x647)))
(define-fun x693 ((x647 Real)) Real (ite (= 192 x647) x2080 (x1820 x647)))
(define-fun x317 ((x647 Real)) Real (ite (= x647 224) x591 (x693 x647)))
(define-fun x1217 ((x647 Real)) Real (ite (= 256 x647) x648 (x317 x647)))
(define-fun x1290 ((x647 Real)) Real (ite (= 0 x647) x1943 (x402 x647)))
(define-fun x1586 ((x647 Real)) Real (ite (= 32 x647) x1245 (x1290 x647)))
(define-fun x1796 ((x647 Real)) Real (ite (= 64 x647) x1254 (x1586 x647)))
(define-fun x1920 ((x647 Real)) Real (ite (= x647 96) x2110 (x1796 x647)))
(define-fun x821 ((x647 Real)) Real (ite (= x647 128) x649 (x1920 x647)))
(define-fun x376 ((x647 Real)) Real (ite (= 128 x647) x1838 (x1210 x647)))
(define-fun x300 ((x647 Real)) Real (ite (= 160 x647) x565 (x376 x647)))
(define-fun x1365 ((x647 Real)) Real (ite (= x647 192) x2080 (x300 x647)))
(define-fun x2131 ((x647 Real)) Real (ite (= 224 x647) x591 (x1365 x647)))
(define-fun x1027 ((x647 Real)) Real (ite (= x647 256) x648 (x2131 x647)))
(define-fun x750 ((x647 Real)) Real (ite (= 0 x647) x601 (x277 x647)))
(define-fun x459 ((x647 Real)) Real (ite (= x647 32) x1425 (x750 x647)))
(define-fun x1175 ((x647 Real)) Real (ite (= 64 x647) x1757 (x459 x647)))
(define-fun x2064 ((x647 Real)) Real (ite (= 96 x647) x825 (x1175 x647)))
(define-fun x658 ((x647 Real)) Real (ite (= 128 x647) x2115 (x2064 x647)))
(define-fun x193 ((x647 Real)) Real (ite (and (not x1664) x1987) (x1808 x647) (ite x953 (x1461 x647) (x1620 x647))))
(define-fun x1841 ((x647 Real)) Real (ite (= x647 x184) 76450787359836037641860180984291677749980919077056822294353438043884394381312 (x193 x647)))
(define-fun x1136 ((x647 Real)) Real (ite (= x647 x1214) x758 (x1841 x647)))
(define-fun x583 ((x647 Real)) Real (ite (= x374 x647) x310 (x1136 x647)))
(define-fun x1687 ((x647 x210)) Real (ite (= x647 x10) x204 (x838 x647)))
(define-fun x1980 ((x647 Real)) Real (ite (= x647 0) 1 (x739 x647)))
(define-fun x2030 ((x647 Real)) Real (ite (= x184 x647) 1 (x583 x647)))
(define-fun x1768 ((x647 Real)) Real (ite (and x1847 x146 x314) (x1614 x647) (x267 x647)))
(define-fun x35 ((x647 Real)) Real (ite (= x647 128) x1349 (x1606 x647)))
(define-fun x920 ((x647 Real)) Real (ite (= x647 160) x1946 (x35 x647)))
(define-fun x2009 ((x647 Real)) Real (ite (= 192 x647) x1251 (x920 x647)))
(define-fun x280 ((x647 Real)) Real (ite (= x647 224) x1972 (x2009 x647)))
(define-fun x692 ((x647 Real)) Real (ite (= 256 x647) x2112 (x280 x647)))
(define-fun x473 ((x647 Real)) Real (ite (= x89 x647) x1274 (x1523 x647)))
(define-fun x1556 ((x647 Real)) Real (ite (= x159 x647) x163 (x473 x647)))
(define-fun x264 ((x647 Real)) Real (ite (= x1301 x647) x301 (x1556 x647)))
(define-fun x1018 ((x647 Real)) Real (ite (= x1403 x647) x1154 (x264 x647)))
(define-fun x2016 ((x647 Real)) Real (ite (= x730 x647) x613 (x1018 x647)))
(define-fun x164 ((x647 Real)) Real (ite (= 0 x647) x618 (x22 x647)))
(define-fun x527 ((x647 Real)) Real (ite (= x647 32) x685 (x164 x647)))
(define-fun x1937 ((x647 Real)) Real (ite (= 64 x647) x745 (x527 x647)))
(define-fun x1046 ((x647 Real)) Real (ite (= 96 x647) x1486 (x1937 x647)))
(define-fun x1437 ((x647 Real)) Real (ite (= x647 128) x392 (x1046 x647)))
(define-fun x111 ((x647 Real)) Real (ite (= 128 x647) x1349 (x727 x647)))
(define-fun x2076 ((x647 Real)) Real (ite (= 160 x647) x551 (x111 x647)))
(define-fun x547 ((x647 Real)) Real (ite (= x647 192) x1251 (x2076 x647)))
(define-fun x542 ((x647 Real)) Real (ite (= 224 x647) x1972 (x547 x647)))
(define-fun x1325 ((x647 Real)) Real (ite (= x647 256) x2112 (x542 x647)))
(define-fun x1631 ((x647 Real)) Real (ite (= x647 0) x1854 (x643 x647)))
(define-fun x593 ((x647 Real)) Real (ite (= x647 32) x524 (x1631 x647)))
(define-fun x1599 ((x647 Real)) Real (ite (= x647 64) x7 (x593 x647)))
(define-fun x964 ((x647 Real)) Real (ite (= x647 96) x2026 (x1599 x647)))
(define-fun x341 ((x647 Real)) Real (ite (= x647 128) x469 (x964 x647)))
(define-fun x1607 ((x647 Real)) Real (ite (= x647 128) x1349 (x1765 x647)))
(define-fun x1331 ((x647 Real)) Real (ite (= 160 x647) x1246 (x1607 x647)))
(define-fun x1416 ((x647 Real)) Real (ite (= 192 x647) x1251 (x1331 x647)))
(define-fun x719 ((x647 Real)) Real (ite (= 224 x647) x1972 (x1416 x647)))
(define-fun x464 ((x647 Real)) Real (ite (= 256 x647) x2112 (x719 x647)))
(define-fun x1225 ((x647 Real)) Real (ite (= x647 x65) x713 (x607 x647)))
(define-fun x1594 ((x647 Real)) Real (ite (= x529 x647) x1499 (x1225 x647)))
(define-fun x121 ((x647 Real)) Real (ite (= x647 x608) x1737 (x1594 x647)))
(define-fun x902 ((x647 Real)) Real (ite (= x647 x1863) x1200 (x121 x647)))
(define-fun x1879 ((x647 Real)) Real (ite (= x1421 x647) x1424 (x902 x647)))
(define-fun x1194 ((x647 Real)) Real (ite (= 0 x647) x972 (x51 x647)))
(define-fun x381 ((x647 Real)) Real (ite (= x647 32) x1238 (x1194 x647)))
(define-fun x982 ((x647 Real)) Real (ite (= 64 x647) x84 (x381 x647)))
(define-fun x1754 ((x647 Real)) Real (ite (= 96 x647) x1895 (x982 x647)))
(define-fun x810 ((x647 Real)) Real (ite (= 128 x647) x695 (x1754 x647)))
(define-fun x415 ((x647 Real)) Real (ite (= 128 x647) x1349 (x918 x647)))
(define-fun x1488 ((x647 Real)) Real (ite (= 160 x647) x1216 (x415 x647)))
(define-fun x1190 ((x647 Real)) Real (ite (= x647 192) x1251 (x1488 x647)))
(define-fun x1512 ((x647 Real)) Real (ite (= 224 x647) x1972 (x1190 x647)))
(define-fun x2008 ((x647 Real)) Real (ite (= x647 256) x2112 (x1512 x647)))
(define-fun x662 ((x647 Real)) Real (ite (= 0 x647) x905 (x767 x647)))
(define-fun x724 ((x647 Real)) Real (ite (= 32 x647) x25 (x662 x647)))
(define-fun x1551 ((x647 Real)) Real (ite (= x647 64) x1675 (x724 x647)))
(define-fun x202 ((x647 Real)) Real (ite (= x647 96) x180 (x1551 x647)))
(define-fun x117 ((x647 Real)) Real (ite (= x647 128) x130 (x202 x647)))
(define-fun x714 ((x647 Real)) Real (ite (= x647 128) x1349 (x1221 x647)))
(define-fun x1386 ((x647 Real)) Real (ite (= x647 160) x52 (x714 x647)))
(define-fun x2050 ((x647 Real)) Real (ite (= 192 x647) x1251 (x1386 x647)))
(define-fun x208 ((x647 Real)) Real (ite (= 224 x647) x1972 (x2050 x647)))
(define-fun x581 ((x647 Real)) Real (ite (= x647 256) x2112 (x208 x647)))
(define-fun x1492 ((x647 Real)) Real (ite (= x647 0) x646 (x1916 x647)))
(define-fun x1568 ((x647 Real)) Real (ite (= 32 x647) x564 (x1492 x647)))
(define-fun x1107 ((x647 Real)) Real (ite (= 64 x647) x432 (x1568 x647)))
(define-fun x1826 ((x647 Real)) Real (ite (= 96 x647) x1514 (x1107 x647)))
(define-fun x177 ((x647 Real)) Real (ite (= x647 128) x859 (x1826 x647)))
(define-fun x100 ((x647 Real)) Real (ite (= 128 x647) x1349 (x786 x647)))
(define-fun x2031 ((x647 Real)) Real (ite (= 160 x647) x391 (x100 x647)))
(define-fun x369 ((x647 Real)) Real (ite (= 192 x647) x1251 (x2031 x647)))
(define-fun x250 ((x647 Real)) Real (ite (= 224 x647) x1972 (x369 x647)))
(define-fun x1453 ((x647 Real)) Real (ite (= 256 x647) x2112 (x250 x647)))
(define-fun x553 ((x647 Real)) Real (ite (= 0 x647) x1962 (x1085 x647)))
(define-fun x1856 ((x647 Real)) Real (ite (= x647 32) x1615 (x553 x647)))
(define-fun x269 ((x647 Real)) Real (ite (= 64 x647) x1211 (x1856 x647)))
(define-fun x406 ((x647 Real)) Real (ite (= x647 96) x1604 (x269 x647)))
(define-fun x500 ((x647 Real)) Real (ite (= 128 x647) x1032 (x406 x647)))
(define-fun x55 ((x647 Real)) Real (ite (= x647 128) x1349 (x1821 x647)))
(define-fun x1724 ((x647 Real)) Real (ite (= x647 160) x1091 (x55 x647)))
(define-fun x2046 ((x647 Real)) Real (ite (= 192 x647) x1251 (x1724 x647)))
(define-fun x1982 ((x647 Real)) Real (ite (= x647 224) x1972 (x2046 x647)))
(define-fun x999 ((x647 Real)) Real (ite (= 256 x647) x2112 (x1982 x647)))
(define-fun x1706 ((x647 Real)) Real (ite (= 0 x647) x573 (x402 x647)))
(define-fun x1302 ((x647 Real)) Real (ite (= x647 32) x818 (x1706 x647)))
(define-fun x403 ((x647 Real)) Real (ite (= x647 64) x707 (x1302 x647)))
(define-fun x903 ((x647 Real)) Real (ite (= 96 x647) x216 (x403 x647)))
(define-fun x309 ((x647 Real)) Real (ite (= x647 128) x1387 (x903 x647)))
(define-fun x231 ((x647 Real)) Real (ite (= 128 x647) x1349 (x1653 x647)))
(define-fun x1804 ((x647 Real)) Real (ite (= x647 160) x1275 (x231 x647)))
(define-fun x930 ((x647 Real)) Real (ite (= x647 192) x1251 (x1804 x647)))
(define-fun x1226 ((x647 Real)) Real (ite (= x647 224) x1972 (x930 x647)))
(define-fun x1654 ((x647 Real)) Real (ite (= 256 x647) x2112 (x1226 x647)))
(define-fun x43 ((x647 Real)) Real (ite (= 0 x647) x875 (x277 x647)))
(define-fun x1541 ((x647 Real)) Real (ite (= x647 32) x851 (x43 x647)))
(define-fun x1249 ((x647 Real)) Real (ite (= x647 64) x1174 (x1541 x647)))
(define-fun x2039 ((x647 Real)) Real (ite (= x647 96) x1099 (x1249 x647)))
(define-fun x291 ((x647 Real)) Real (ite (= x647 128) x387 (x2039 x647)))
(define-fun x722 ((x647 x210)) Real (ite (= x808 x647) x1020 (x15 x647)))
(define-fun x1806 ((x647 Real)) Real (ite (= x647 0) 1 (x1931 x647)))
(define-fun x66 ((x647 Real)) Real (ite (= x647 x1990) 1 (x1689 x647)))
(define-fun x1944 ((x647 x210)) Real (ite (= x1476 x647) x705 (x1822 x647)))
(define-fun x1155 ((x647 Real)) Real (ite (= 0 x647) 1 (x1931 x647)))
(define-fun x1913 ((x647 Real)) Real (ite (= x1990 x647) 1 (x1689 x647)))
(define-fun x634 ((x647 Real)) Real (ite (and x1570 x46) (x1126 x647) (x2016 x647)))
(define-fun x2127 ((x647 Real)) Real (ite (and x1308 x1036) (x633 x647) (x1879 x647)))
(define-fun x318 ((x647 Real)) Real (ite (and x1517 x1844) (x1011 x647) (ite (and x1505 x1044) (x1913 x647) (x66 x647))))
(define-fun x1688 ((x1040 Real)) Bool (=> (and (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1040)) (not (= x1040 115792089237316195423570985008687907853269984665640564039457584007913129639904)) (not (= x1040 1752364190)) (not (= 4072275384 x1040)) (not (= x1040 57896044618658097711785492504343953926634992332820282019728792003956564819968)) (not (= x1040 65536)) (> x1040 10000) (not (= 2835717307 x1040)) (not (= x1040 1889567281)) (not (= x1040 4093572003)) (not (= 3257672857 x1040)) (not (= x1040 274184521717934524641157099916833587221)) (not (= x1040 170141183460469231731687303715884105727)) (not (= x1040 1461501637330902918203684832716283019655932542976)) (not (= 274184521717934524641157099916833587229 x1040)) (not (= x1040 4062139261)) (not (= 2059260625 x1040)) (not (= x1040 2514000705)) (not (= 10141204801825835211973625643007 x1040)) (not (= 2059964113 x1040)) (not (= x1040 274184521717934524641157099916833587225)) (not (= x1040 274184521717934524641157099916833587231)) (not (= 3122421376 x1040)) (not (= x1040 840395849)) (not (= x1040 1461501637330902918203684832716283019655932542975)) (not (= 614716962 x1040)) (not (= x1040 115792089237316195423570985008687907853269984655499359237631748795939503996928)) (not (= 3950285521 x1040)) (not (= x1040 274184521717934524641157099916833587233)) (not (= x1040 4072298103)) (not (= 1736444767 x1040)) (not (= 826074471 x1040)) (not (= 2000660004 x1040)) (not (= x1040 274184521717934524641157099916833587209)) (not (= 1208925819614629174706175 x1040)) (not (= x1040 1099511627775)) (not (= 18446744073709551616 x1040)) (not (= 950698303 x1040)) (not (= x1040 65535)) (not (= x1040 3889878717)) (not (= 806251499 x1040)) (not (= 340282366920938463463374607431768211455 x1040)) (not (= 115197700812830431890159100217698998050002284567939525164234024451216521560064 x1040)) (not (= 4272920204 x1040)) (not (= x1040 830980174)) (not (= x1040 1176186698)) (not (= 20282409603651670423947251286015 x1040)) (not (= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1040)) (not (= x1040 20282409603651670423947251286016)) (not (= 76450787359836037641860180984291677749980919077056822294353438043884394381312 x1040)) (not (= x1040 1034154046)) (not (= 2362581449 x1040)) (not (= 1208925819614629174706176 x1040)) (not (= 18446744073709551615 x1040)) (not (= x1040 340282366920938463463374607431768211456)) (not (= 2055092157 x1040)) (not (= x1040 3638949393)) (not (= 274184521717934524641157099916833587242 x1040)) (not (= x1040 1558726628))) (not ((_ is x1134) (x21 x1040)))))
(assert (axiom_frac_bound (* (x1811 x1845) x1984) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (* (x1811 x1845) x1984) 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1811 x1845) x1984 (uninterp_frac (* (x1811 x1845) x1984) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* (x1811 x1845) x1984) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1086 (x1811 x302) (uninterp_frac (* (x1811 x1845) x1984) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* (x1811 x1845) x1984) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1346 x606 (uninterp_frac (* (x1811 x1845) x1984) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* (x1811 x1845) x1984) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x136 x363 (uninterp_frac (* (x1811 x1845) x1984) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* (x1811 x1845) x1984) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1442 x1726 (uninterp_frac (* (x1811 x1845) x1984) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* (x1811 x1845) x1984) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1577 x1726 (uninterp_frac (* (x1811 x1845) x1984) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* (x1811 x1845) x1984) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1650 (x1811 x883) (uninterp_frac (* (x1811 x1845) x1984) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* (x1811 x1845) x1984) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x17 x1726 (uninterp_frac (* (x1811 x1845) x1984) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* (x1811 x1845) x1984) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1726 x1384 (uninterp_frac (* (x1811 x1845) x1984) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* (x1811 x1845) x1984) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1726 x1442 (uninterp_frac (* (x1811 x1845) x1984) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* (x1811 x1845) x1984) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1726 x1577 (uninterp_frac (* (x1811 x1845) x1984) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* (x1811 x1845) x1984) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1726 x17 (uninterp_frac (* (x1811 x1845) x1984) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* (x1811 x1845) x1984) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1726 x2092 (uninterp_frac (* (x1811 x1845) x1984) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* (x1811 x1845) x1984) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1726 x846 (uninterp_frac (* (x1811 x1845) x1984) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* (x1811 x1845) x1984) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1797 x2056 (uninterp_frac (* (x1811 x1845) x1984) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* (x1811 x1845) x1984) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2077 x566 (uninterp_frac (* (x1811 x1845) x1984) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* (x1811 x1845) x1984) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2086 (x1811 x254) (uninterp_frac (* (x1811 x1845) x1984) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* (x1811 x1845) x1984) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2132 x1636 (uninterp_frac (* (x1811 x1845) x1984) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* (x1811 x1845) x1984) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x364 x27 (uninterp_frac (* (x1811 x1845) x1984) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* (x1811 x1845) x1984) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x450 x566 (uninterp_frac (* (x1811 x1845) x1984) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* (x1811 x1845) x1984) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x458 x1485 (uninterp_frac (* (x1811 x1845) x1984) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* (x1811 x1845) x1984) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x476 x566 (uninterp_frac (* (x1811 x1845) x1984) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* (x1811 x1845) x1984) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x541 x1947 (uninterp_frac (* (x1811 x1845) x1984) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* (x1811 x1845) x1984) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x566 x2077 (uninterp_frac (* (x1811 x1845) x1984) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* (x1811 x1845) x1984) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x566 x623 (uninterp_frac (* (x1811 x1845) x1984) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* (x1811 x1845) x1984) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x566 x638 (uninterp_frac (* (x1811 x1845) x1984) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* (x1811 x1845) x1984) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x575 x868 (uninterp_frac (* (x1811 x1845) x1984) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* (x1811 x1845) x1984) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x576 x566 (uninterp_frac (* (x1811 x1845) x1984) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* (x1811 x1845) x1984) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x606 x1346 (uninterp_frac (* (x1811 x1845) x1984) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* (x1811 x1845) x1984) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x615 x2114 (uninterp_frac (* (x1811 x1845) x1984) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* (x1811 x1845) x1984) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x623 x566 (uninterp_frac (* (x1811 x1845) x1984) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* (x1811 x1845) x1984) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x915 x124 (uninterp_frac (* (x1811 x1845) x1984) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (* x1086 (x1811 x302)) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (* x1086 (x1811 x302)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1811 x1845) x1984 (uninterp_frac (* x1086 (x1811 x302)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1086 (x1811 x302)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1086 (x1811 x302) (uninterp_frac (* x1086 (x1811 x302)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1086 (x1811 x302)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1346 x606 (uninterp_frac (* x1086 (x1811 x302)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1086 (x1811 x302)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x136 x363 (uninterp_frac (* x1086 (x1811 x302)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1086 (x1811 x302)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1442 x1726 (uninterp_frac (* x1086 (x1811 x302)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1086 (x1811 x302)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1577 x1726 (uninterp_frac (* x1086 (x1811 x302)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1086 (x1811 x302)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1650 (x1811 x883) (uninterp_frac (* x1086 (x1811 x302)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1086 (x1811 x302)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x17 x1726 (uninterp_frac (* x1086 (x1811 x302)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1086 (x1811 x302)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1726 x1384 (uninterp_frac (* x1086 (x1811 x302)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1086 (x1811 x302)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1726 x1442 (uninterp_frac (* x1086 (x1811 x302)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1086 (x1811 x302)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1726 x1577 (uninterp_frac (* x1086 (x1811 x302)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1086 (x1811 x302)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1726 x17 (uninterp_frac (* x1086 (x1811 x302)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1086 (x1811 x302)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1726 x2092 (uninterp_frac (* x1086 (x1811 x302)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1086 (x1811 x302)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1726 x846 (uninterp_frac (* x1086 (x1811 x302)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1086 (x1811 x302)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1797 x2056 (uninterp_frac (* x1086 (x1811 x302)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1086 (x1811 x302)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2077 x566 (uninterp_frac (* x1086 (x1811 x302)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1086 (x1811 x302)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2086 (x1811 x254) (uninterp_frac (* x1086 (x1811 x302)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1086 (x1811 x302)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2132 x1636 (uninterp_frac (* x1086 (x1811 x302)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1086 (x1811 x302)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x364 x27 (uninterp_frac (* x1086 (x1811 x302)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1086 (x1811 x302)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x450 x566 (uninterp_frac (* x1086 (x1811 x302)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1086 (x1811 x302)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x458 x1485 (uninterp_frac (* x1086 (x1811 x302)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1086 (x1811 x302)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x476 x566 (uninterp_frac (* x1086 (x1811 x302)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1086 (x1811 x302)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x541 x1947 (uninterp_frac (* x1086 (x1811 x302)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1086 (x1811 x302)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x566 x2077 (uninterp_frac (* x1086 (x1811 x302)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1086 (x1811 x302)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x566 x623 (uninterp_frac (* x1086 (x1811 x302)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1086 (x1811 x302)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x566 x638 (uninterp_frac (* x1086 (x1811 x302)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1086 (x1811 x302)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x575 x868 (uninterp_frac (* x1086 (x1811 x302)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1086 (x1811 x302)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x576 x566 (uninterp_frac (* x1086 (x1811 x302)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1086 (x1811 x302)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x606 x1346 (uninterp_frac (* x1086 (x1811 x302)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1086 (x1811 x302)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x615 x2114 (uninterp_frac (* x1086 (x1811 x302)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1086 (x1811 x302)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x623 x566 (uninterp_frac (* x1086 (x1811 x302)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1086 (x1811 x302)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x915 x124 (uninterp_frac (* x1086 (x1811 x302)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (* x1650 (x1811 x883)) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (* x1650 (x1811 x883)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1811 x1845) x1984 (uninterp_frac (* x1650 (x1811 x883)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1650 (x1811 x883)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1086 (x1811 x302) (uninterp_frac (* x1650 (x1811 x883)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1650 (x1811 x883)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1346 x606 (uninterp_frac (* x1650 (x1811 x883)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1650 (x1811 x883)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x136 x363 (uninterp_frac (* x1650 (x1811 x883)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1650 (x1811 x883)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1442 x1726 (uninterp_frac (* x1650 (x1811 x883)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1650 (x1811 x883)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1577 x1726 (uninterp_frac (* x1650 (x1811 x883)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1650 (x1811 x883)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1650 (x1811 x883) (uninterp_frac (* x1650 (x1811 x883)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1650 (x1811 x883)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x17 x1726 (uninterp_frac (* x1650 (x1811 x883)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1650 (x1811 x883)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1726 x1384 (uninterp_frac (* x1650 (x1811 x883)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1650 (x1811 x883)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1726 x1442 (uninterp_frac (* x1650 (x1811 x883)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1650 (x1811 x883)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1726 x1577 (uninterp_frac (* x1650 (x1811 x883)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1650 (x1811 x883)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1726 x17 (uninterp_frac (* x1650 (x1811 x883)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1650 (x1811 x883)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1726 x2092 (uninterp_frac (* x1650 (x1811 x883)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1650 (x1811 x883)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1726 x846 (uninterp_frac (* x1650 (x1811 x883)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1650 (x1811 x883)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1797 x2056 (uninterp_frac (* x1650 (x1811 x883)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1650 (x1811 x883)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2077 x566 (uninterp_frac (* x1650 (x1811 x883)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1650 (x1811 x883)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2086 (x1811 x254) (uninterp_frac (* x1650 (x1811 x883)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1650 (x1811 x883)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2132 x1636 (uninterp_frac (* x1650 (x1811 x883)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1650 (x1811 x883)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x364 x27 (uninterp_frac (* x1650 (x1811 x883)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1650 (x1811 x883)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x450 x566 (uninterp_frac (* x1650 (x1811 x883)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1650 (x1811 x883)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x458 x1485 (uninterp_frac (* x1650 (x1811 x883)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1650 (x1811 x883)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x476 x566 (uninterp_frac (* x1650 (x1811 x883)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1650 (x1811 x883)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x541 x1947 (uninterp_frac (* x1650 (x1811 x883)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1650 (x1811 x883)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x566 x2077 (uninterp_frac (* x1650 (x1811 x883)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1650 (x1811 x883)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x566 x623 (uninterp_frac (* x1650 (x1811 x883)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1650 (x1811 x883)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x566 x638 (uninterp_frac (* x1650 (x1811 x883)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1650 (x1811 x883)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x575 x868 (uninterp_frac (* x1650 (x1811 x883)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1650 (x1811 x883)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x576 x566 (uninterp_frac (* x1650 (x1811 x883)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1650 (x1811 x883)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x606 x1346 (uninterp_frac (* x1650 (x1811 x883)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1650 (x1811 x883)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x615 x2114 (uninterp_frac (* x1650 (x1811 x883)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1650 (x1811 x883)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x623 x566 (uninterp_frac (* x1650 (x1811 x883)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1650 (x1811 x883)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x915 x124 (uninterp_frac (* x1650 (x1811 x883)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (* x2086 (x1811 x254)) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (* x2086 (x1811 x254)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1811 x1845) x1984 (uninterp_frac (* x2086 (x1811 x254)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2086 (x1811 x254)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1086 (x1811 x302) (uninterp_frac (* x2086 (x1811 x254)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2086 (x1811 x254)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1346 x606 (uninterp_frac (* x2086 (x1811 x254)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2086 (x1811 x254)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x136 x363 (uninterp_frac (* x2086 (x1811 x254)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2086 (x1811 x254)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1442 x1726 (uninterp_frac (* x2086 (x1811 x254)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2086 (x1811 x254)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1577 x1726 (uninterp_frac (* x2086 (x1811 x254)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2086 (x1811 x254)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1650 (x1811 x883) (uninterp_frac (* x2086 (x1811 x254)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2086 (x1811 x254)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x17 x1726 (uninterp_frac (* x2086 (x1811 x254)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2086 (x1811 x254)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1726 x1384 (uninterp_frac (* x2086 (x1811 x254)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2086 (x1811 x254)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1726 x1442 (uninterp_frac (* x2086 (x1811 x254)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2086 (x1811 x254)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1726 x1577 (uninterp_frac (* x2086 (x1811 x254)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2086 (x1811 x254)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1726 x17 (uninterp_frac (* x2086 (x1811 x254)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2086 (x1811 x254)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1726 x2092 (uninterp_frac (* x2086 (x1811 x254)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2086 (x1811 x254)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1726 x846 (uninterp_frac (* x2086 (x1811 x254)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2086 (x1811 x254)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1797 x2056 (uninterp_frac (* x2086 (x1811 x254)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2086 (x1811 x254)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2077 x566 (uninterp_frac (* x2086 (x1811 x254)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2086 (x1811 x254)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2086 (x1811 x254) (uninterp_frac (* x2086 (x1811 x254)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2086 (x1811 x254)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2132 x1636 (uninterp_frac (* x2086 (x1811 x254)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2086 (x1811 x254)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x364 x27 (uninterp_frac (* x2086 (x1811 x254)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2086 (x1811 x254)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x450 x566 (uninterp_frac (* x2086 (x1811 x254)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2086 (x1811 x254)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x458 x1485 (uninterp_frac (* x2086 (x1811 x254)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2086 (x1811 x254)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x476 x566 (uninterp_frac (* x2086 (x1811 x254)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2086 (x1811 x254)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x541 x1947 (uninterp_frac (* x2086 (x1811 x254)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2086 (x1811 x254)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x566 x2077 (uninterp_frac (* x2086 (x1811 x254)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2086 (x1811 x254)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x566 x623 (uninterp_frac (* x2086 (x1811 x254)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2086 (x1811 x254)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x566 x638 (uninterp_frac (* x2086 (x1811 x254)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2086 (x1811 x254)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x575 x868 (uninterp_frac (* x2086 (x1811 x254)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2086 (x1811 x254)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x576 x566 (uninterp_frac (* x2086 (x1811 x254)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2086 (x1811 x254)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x606 x1346 (uninterp_frac (* x2086 (x1811 x254)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2086 (x1811 x254)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x615 x2114 (uninterp_frac (* x2086 (x1811 x254)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2086 (x1811 x254)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x623 x566 (uninterp_frac (* x2086 (x1811 x254)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2086 (x1811 x254)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x915 x124 (uninterp_frac (* x2086 (x1811 x254)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (* x364 x27) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (* x364 x27) 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1811 x1845) x1984 (uninterp_frac (* x364 x27) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x364 x27) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1086 (x1811 x302) (uninterp_frac (* x364 x27) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x364 x27) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1346 x606 (uninterp_frac (* x364 x27) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x364 x27) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x136 x363 (uninterp_frac (* x364 x27) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x364 x27) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1442 x1726 (uninterp_frac (* x364 x27) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x364 x27) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1577 x1726 (uninterp_frac (* x364 x27) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x364 x27) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1650 (x1811 x883) (uninterp_frac (* x364 x27) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x364 x27) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x17 x1726 (uninterp_frac (* x364 x27) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x364 x27) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1726 x1384 (uninterp_frac (* x364 x27) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x364 x27) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1726 x1442 (uninterp_frac (* x364 x27) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x364 x27) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1726 x1577 (uninterp_frac (* x364 x27) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x364 x27) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1726 x17 (uninterp_frac (* x364 x27) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x364 x27) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1726 x2092 (uninterp_frac (* x364 x27) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x364 x27) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1726 x846 (uninterp_frac (* x364 x27) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x364 x27) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1797 x2056 (uninterp_frac (* x364 x27) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x364 x27) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2077 x566 (uninterp_frac (* x364 x27) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x364 x27) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2086 (x1811 x254) (uninterp_frac (* x364 x27) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x364 x27) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2132 x1636 (uninterp_frac (* x364 x27) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x364 x27) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x364 x27 (uninterp_frac (* x364 x27) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x364 x27) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x450 x566 (uninterp_frac (* x364 x27) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x364 x27) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x458 x1485 (uninterp_frac (* x364 x27) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x364 x27) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x476 x566 (uninterp_frac (* x364 x27) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x364 x27) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x541 x1947 (uninterp_frac (* x364 x27) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x364 x27) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x566 x2077 (uninterp_frac (* x364 x27) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x364 x27) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x566 x623 (uninterp_frac (* x364 x27) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x364 x27) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x566 x638 (uninterp_frac (* x364 x27) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x364 x27) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x575 x868 (uninterp_frac (* x364 x27) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x364 x27) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x576 x566 (uninterp_frac (* x364 x27) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x364 x27) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x606 x1346 (uninterp_frac (* x364 x27) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x364 x27) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x615 x2114 (uninterp_frac (* x364 x27) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x364 x27) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x623 x566 (uninterp_frac (* x364 x27) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x364 x27) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x915 x124 (uninterp_frac (* x364 x27) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (* x541 x1947) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (* x541 x1947) 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1811 x1845) x1984 (uninterp_frac (* x541 x1947) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x541 x1947) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1086 (x1811 x302) (uninterp_frac (* x541 x1947) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x541 x1947) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1346 x606 (uninterp_frac (* x541 x1947) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x541 x1947) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x136 x363 (uninterp_frac (* x541 x1947) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x541 x1947) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1442 x1726 (uninterp_frac (* x541 x1947) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x541 x1947) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1577 x1726 (uninterp_frac (* x541 x1947) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x541 x1947) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1650 (x1811 x883) (uninterp_frac (* x541 x1947) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x541 x1947) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x17 x1726 (uninterp_frac (* x541 x1947) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x541 x1947) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1726 x1384 (uninterp_frac (* x541 x1947) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x541 x1947) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1726 x1442 (uninterp_frac (* x541 x1947) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x541 x1947) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1726 x1577 (uninterp_frac (* x541 x1947) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x541 x1947) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1726 x17 (uninterp_frac (* x541 x1947) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x541 x1947) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1726 x2092 (uninterp_frac (* x541 x1947) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x541 x1947) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1726 x846 (uninterp_frac (* x541 x1947) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x541 x1947) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1797 x2056 (uninterp_frac (* x541 x1947) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x541 x1947) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2077 x566 (uninterp_frac (* x541 x1947) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x541 x1947) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2086 (x1811 x254) (uninterp_frac (* x541 x1947) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x541 x1947) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2132 x1636 (uninterp_frac (* x541 x1947) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x541 x1947) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x364 x27 (uninterp_frac (* x541 x1947) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x541 x1947) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x450 x566 (uninterp_frac (* x541 x1947) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x541 x1947) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x458 x1485 (uninterp_frac (* x541 x1947) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x541 x1947) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x476 x566 (uninterp_frac (* x541 x1947) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x541 x1947) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x541 x1947 (uninterp_frac (* x541 x1947) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x541 x1947) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x566 x2077 (uninterp_frac (* x541 x1947) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x541 x1947) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x566 x623 (uninterp_frac (* x541 x1947) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x541 x1947) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x566 x638 (uninterp_frac (* x541 x1947) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x541 x1947) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x575 x868 (uninterp_frac (* x541 x1947) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x541 x1947) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x576 x566 (uninterp_frac (* x541 x1947) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x541 x1947) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x606 x1346 (uninterp_frac (* x541 x1947) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x541 x1947) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x615 x2114 (uninterp_frac (* x541 x1947) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x541 x1947) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x623 x566 (uninterp_frac (* x541 x1947) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x541 x1947) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x915 x124 (uninterp_frac (* x541 x1947) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (* x615 x2114) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (* x615 x2114) 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1811 x1845) x1984 (uninterp_frac (* x615 x2114) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x615 x2114) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1086 (x1811 x302) (uninterp_frac (* x615 x2114) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x615 x2114) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1346 x606 (uninterp_frac (* x615 x2114) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x615 x2114) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x136 x363 (uninterp_frac (* x615 x2114) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x615 x2114) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1442 x1726 (uninterp_frac (* x615 x2114) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x615 x2114) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1577 x1726 (uninterp_frac (* x615 x2114) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x615 x2114) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1650 (x1811 x883) (uninterp_frac (* x615 x2114) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x615 x2114) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x17 x1726 (uninterp_frac (* x615 x2114) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x615 x2114) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1726 x1384 (uninterp_frac (* x615 x2114) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x615 x2114) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1726 x1442 (uninterp_frac (* x615 x2114) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x615 x2114) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1726 x1577 (uninterp_frac (* x615 x2114) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x615 x2114) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1726 x17 (uninterp_frac (* x615 x2114) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x615 x2114) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1726 x2092 (uninterp_frac (* x615 x2114) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x615 x2114) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1726 x846 (uninterp_frac (* x615 x2114) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x615 x2114) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1797 x2056 (uninterp_frac (* x615 x2114) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x615 x2114) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2077 x566 (uninterp_frac (* x615 x2114) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x615 x2114) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2086 (x1811 x254) (uninterp_frac (* x615 x2114) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x615 x2114) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2132 x1636 (uninterp_frac (* x615 x2114) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x615 x2114) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x364 x27 (uninterp_frac (* x615 x2114) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x615 x2114) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x450 x566 (uninterp_frac (* x615 x2114) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x615 x2114) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x458 x1485 (uninterp_frac (* x615 x2114) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x615 x2114) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x476 x566 (uninterp_frac (* x615 x2114) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x615 x2114) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x541 x1947 (uninterp_frac (* x615 x2114) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x615 x2114) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x566 x2077 (uninterp_frac (* x615 x2114) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x615 x2114) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x566 x623 (uninterp_frac (* x615 x2114) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x615 x2114) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x566 x638 (uninterp_frac (* x615 x2114) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x615 x2114) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x575 x868 (uninterp_frac (* x615 x2114) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x615 x2114) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x576 x566 (uninterp_frac (* x615 x2114) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x615 x2114) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x606 x1346 (uninterp_frac (* x615 x2114) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x615 x2114) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x615 x2114 (uninterp_frac (* x615 x2114) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x615 x2114) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x623 x566 (uninterp_frac (* x615 x2114) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x615 x2114) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x915 x124 (uninterp_frac (* x615 x2114) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (* x915 x124) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (* x915 x124) 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1811 x1845) x1984 (uninterp_frac (* x915 x124) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x915 x124) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1086 (x1811 x302) (uninterp_frac (* x915 x124) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x915 x124) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1346 x606 (uninterp_frac (* x915 x124) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x915 x124) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x136 x363 (uninterp_frac (* x915 x124) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x915 x124) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1442 x1726 (uninterp_frac (* x915 x124) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x915 x124) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1577 x1726 (uninterp_frac (* x915 x124) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x915 x124) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1650 (x1811 x883) (uninterp_frac (* x915 x124) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x915 x124) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x17 x1726 (uninterp_frac (* x915 x124) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x915 x124) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1726 x1384 (uninterp_frac (* x915 x124) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x915 x124) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1726 x1442 (uninterp_frac (* x915 x124) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x915 x124) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1726 x1577 (uninterp_frac (* x915 x124) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x915 x124) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1726 x17 (uninterp_frac (* x915 x124) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x915 x124) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1726 x2092 (uninterp_frac (* x915 x124) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x915 x124) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1726 x846 (uninterp_frac (* x915 x124) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x915 x124) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1797 x2056 (uninterp_frac (* x915 x124) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x915 x124) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2077 x566 (uninterp_frac (* x915 x124) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x915 x124) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2086 (x1811 x254) (uninterp_frac (* x915 x124) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x915 x124) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2132 x1636 (uninterp_frac (* x915 x124) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x915 x124) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x364 x27 (uninterp_frac (* x915 x124) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x915 x124) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x450 x566 (uninterp_frac (* x915 x124) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x915 x124) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x458 x1485 (uninterp_frac (* x915 x124) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x915 x124) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x476 x566 (uninterp_frac (* x915 x124) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x915 x124) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x541 x1947 (uninterp_frac (* x915 x124) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x915 x124) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x566 x2077 (uninterp_frac (* x915 x124) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x915 x124) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x566 x623 (uninterp_frac (* x915 x124) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x915 x124) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x566 x638 (uninterp_frac (* x915 x124) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x915 x124) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x575 x868 (uninterp_frac (* x915 x124) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x915 x124) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x576 x566 (uninterp_frac (* x915 x124) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x915 x124) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x606 x1346 (uninterp_frac (* x915 x124) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x915 x124) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x615 x2114 (uninterp_frac (* x915 x124) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x915 x124) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x623 x566 (uninterp_frac (* x915 x124) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x915 x124) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x915 x124 (uninterp_frac (* x915 x124) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound x1030 x566))
(assert (axiom_frac_zero x1030 x566 (x1811 x1845) x1984 (uninterp_frac x1030 x566)))
(assert (axiom_frac_zero x1030 x566 x1086 (x1811 x302) (uninterp_frac x1030 x566)))
(assert (axiom_frac_zero x1030 x566 x1346 x606 (uninterp_frac x1030 x566)))
(assert (axiom_frac_zero x1030 x566 x136 x363 (uninterp_frac x1030 x566)))
(assert (axiom_frac_zero x1030 x566 x1442 x1726 (uninterp_frac x1030 x566)))
(assert (axiom_frac_zero x1030 x566 x1577 x1726 (uninterp_frac x1030 x566)))
(assert (axiom_frac_zero x1030 x566 x1650 (x1811 x883) (uninterp_frac x1030 x566)))
(assert (axiom_frac_zero x1030 x566 x17 x1726 (uninterp_frac x1030 x566)))
(assert (axiom_frac_zero x1030 x566 x1726 x1384 (uninterp_frac x1030 x566)))
(assert (axiom_frac_zero x1030 x566 x1726 x1442 (uninterp_frac x1030 x566)))
(assert (axiom_frac_zero x1030 x566 x1726 x1577 (uninterp_frac x1030 x566)))
(assert (axiom_frac_zero x1030 x566 x1726 x17 (uninterp_frac x1030 x566)))
(assert (axiom_frac_zero x1030 x566 x1726 x2092 (uninterp_frac x1030 x566)))
(assert (axiom_frac_zero x1030 x566 x1726 x846 (uninterp_frac x1030 x566)))
(assert (axiom_frac_zero x1030 x566 x1797 x2056 (uninterp_frac x1030 x566)))
(assert (axiom_frac_zero x1030 x566 x2077 x566 (uninterp_frac x1030 x566)))
(assert (axiom_frac_zero x1030 x566 x2086 (x1811 x254) (uninterp_frac x1030 x566)))
(assert (axiom_frac_zero x1030 x566 x2132 x1636 (uninterp_frac x1030 x566)))
(assert (axiom_frac_zero x1030 x566 x364 x27 (uninterp_frac x1030 x566)))
(assert (axiom_frac_zero x1030 x566 x450 x566 (uninterp_frac x1030 x566)))
(assert (axiom_frac_zero x1030 x566 x458 x1485 (uninterp_frac x1030 x566)))
(assert (axiom_frac_zero x1030 x566 x476 x566 (uninterp_frac x1030 x566)))
(assert (axiom_frac_zero x1030 x566 x541 x1947 (uninterp_frac x1030 x566)))
(assert (axiom_frac_zero x1030 x566 x566 x2077 (uninterp_frac x1030 x566)))
(assert (axiom_frac_zero x1030 x566 x566 x623 (uninterp_frac x1030 x566)))
(assert (axiom_frac_zero x1030 x566 x566 x638 (uninterp_frac x1030 x566)))
(assert (axiom_frac_zero x1030 x566 x575 x868 (uninterp_frac x1030 x566)))
(assert (axiom_frac_zero x1030 x566 x576 x566 (uninterp_frac x1030 x566)))
(assert (axiom_frac_zero x1030 x566 x606 x1346 (uninterp_frac x1030 x566)))
(assert (axiom_frac_zero x1030 x566 x615 x2114 (uninterp_frac x1030 x566)))
(assert (axiom_frac_zero x1030 x566 x623 x566 (uninterp_frac x1030 x566)))
(assert (axiom_frac_zero x1030 x566 x915 x124 (uninterp_frac x1030 x566)))
(assert (axiom_frac_bound x1902 x566))
(assert (axiom_frac_zero x1902 x566 (x1811 x1845) x1984 (uninterp_frac x1902 x566)))
(assert (axiom_frac_zero x1902 x566 x1086 (x1811 x302) (uninterp_frac x1902 x566)))
(assert (axiom_frac_zero x1902 x566 x1346 x606 (uninterp_frac x1902 x566)))
(assert (axiom_frac_zero x1902 x566 x136 x363 (uninterp_frac x1902 x566)))
(assert (axiom_frac_zero x1902 x566 x1442 x1726 (uninterp_frac x1902 x566)))
(assert (axiom_frac_zero x1902 x566 x1577 x1726 (uninterp_frac x1902 x566)))
(assert (axiom_frac_zero x1902 x566 x1650 (x1811 x883) (uninterp_frac x1902 x566)))
(assert (axiom_frac_zero x1902 x566 x17 x1726 (uninterp_frac x1902 x566)))
(assert (axiom_frac_zero x1902 x566 x1726 x1384 (uninterp_frac x1902 x566)))
(assert (axiom_frac_zero x1902 x566 x1726 x1442 (uninterp_frac x1902 x566)))
(assert (axiom_frac_zero x1902 x566 x1726 x1577 (uninterp_frac x1902 x566)))
(assert (axiom_frac_zero x1902 x566 x1726 x17 (uninterp_frac x1902 x566)))
(assert (axiom_frac_zero x1902 x566 x1726 x2092 (uninterp_frac x1902 x566)))
(assert (axiom_frac_zero x1902 x566 x1726 x846 (uninterp_frac x1902 x566)))
(assert (axiom_frac_zero x1902 x566 x1797 x2056 (uninterp_frac x1902 x566)))
(assert (axiom_frac_zero x1902 x566 x2077 x566 (uninterp_frac x1902 x566)))
(assert (axiom_frac_zero x1902 x566 x2086 (x1811 x254) (uninterp_frac x1902 x566)))
(assert (axiom_frac_zero x1902 x566 x2132 x1636 (uninterp_frac x1902 x566)))
(assert (axiom_frac_zero x1902 x566 x364 x27 (uninterp_frac x1902 x566)))
(assert (axiom_frac_zero x1902 x566 x450 x566 (uninterp_frac x1902 x566)))
(assert (axiom_frac_zero x1902 x566 x458 x1485 (uninterp_frac x1902 x566)))
(assert (axiom_frac_zero x1902 x566 x476 x566 (uninterp_frac x1902 x566)))
(assert (axiom_frac_zero x1902 x566 x541 x1947 (uninterp_frac x1902 x566)))
(assert (axiom_frac_zero x1902 x566 x566 x2077 (uninterp_frac x1902 x566)))
(assert (axiom_frac_zero x1902 x566 x566 x623 (uninterp_frac x1902 x566)))
(assert (axiom_frac_zero x1902 x566 x566 x638 (uninterp_frac x1902 x566)))
(assert (axiom_frac_zero x1902 x566 x575 x868 (uninterp_frac x1902 x566)))
(assert (axiom_frac_zero x1902 x566 x576 x566 (uninterp_frac x1902 x566)))
(assert (axiom_frac_zero x1902 x566 x606 x1346 (uninterp_frac x1902 x566)))
(assert (axiom_frac_zero x1902 x566 x615 x2114 (uninterp_frac x1902 x566)))
(assert (axiom_frac_zero x1902 x566 x623 x566 (uninterp_frac x1902 x566)))
(assert (axiom_frac_zero x1902 x566 x915 x124 (uninterp_frac x1902 x566)))
(assert (axiom_frac_bound x446 x1726))
(assert (axiom_frac_zero x446 x1726 (x1811 x1845) x1984 (uninterp_frac x446 x1726)))
(assert (axiom_frac_zero x446 x1726 x1086 (x1811 x302) (uninterp_frac x446 x1726)))
(assert (axiom_frac_zero x446 x1726 x1346 x606 (uninterp_frac x446 x1726)))
(assert (axiom_frac_zero x446 x1726 x136 x363 (uninterp_frac x446 x1726)))
(assert (axiom_frac_zero x446 x1726 x1442 x1726 (uninterp_frac x446 x1726)))
(assert (axiom_frac_zero x446 x1726 x1577 x1726 (uninterp_frac x446 x1726)))
(assert (axiom_frac_zero x446 x1726 x1650 (x1811 x883) (uninterp_frac x446 x1726)))
(assert (axiom_frac_zero x446 x1726 x17 x1726 (uninterp_frac x446 x1726)))
(assert (axiom_frac_zero x446 x1726 x1726 x1384 (uninterp_frac x446 x1726)))
(assert (axiom_frac_zero x446 x1726 x1726 x1442 (uninterp_frac x446 x1726)))
(assert (axiom_frac_zero x446 x1726 x1726 x1577 (uninterp_frac x446 x1726)))
(assert (axiom_frac_zero x446 x1726 x1726 x17 (uninterp_frac x446 x1726)))
(assert (axiom_frac_zero x446 x1726 x1726 x2092 (uninterp_frac x446 x1726)))
(assert (axiom_frac_zero x446 x1726 x1726 x846 (uninterp_frac x446 x1726)))
(assert (axiom_frac_zero x446 x1726 x1797 x2056 (uninterp_frac x446 x1726)))
(assert (axiom_frac_zero x446 x1726 x2077 x566 (uninterp_frac x446 x1726)))
(assert (axiom_frac_zero x446 x1726 x2086 (x1811 x254) (uninterp_frac x446 x1726)))
(assert (axiom_frac_zero x446 x1726 x2132 x1636 (uninterp_frac x446 x1726)))
(assert (axiom_frac_zero x446 x1726 x364 x27 (uninterp_frac x446 x1726)))
(assert (axiom_frac_zero x446 x1726 x450 x566 (uninterp_frac x446 x1726)))
(assert (axiom_frac_zero x446 x1726 x458 x1485 (uninterp_frac x446 x1726)))
(assert (axiom_frac_zero x446 x1726 x476 x566 (uninterp_frac x446 x1726)))
(assert (axiom_frac_zero x446 x1726 x541 x1947 (uninterp_frac x446 x1726)))
(assert (axiom_frac_zero x446 x1726 x566 x2077 (uninterp_frac x446 x1726)))
(assert (axiom_frac_zero x446 x1726 x566 x623 (uninterp_frac x446 x1726)))
(assert (axiom_frac_zero x446 x1726 x566 x638 (uninterp_frac x446 x1726)))
(assert (axiom_frac_zero x446 x1726 x575 x868 (uninterp_frac x446 x1726)))
(assert (axiom_frac_zero x446 x1726 x576 x566 (uninterp_frac x446 x1726)))
(assert (axiom_frac_zero x446 x1726 x606 x1346 (uninterp_frac x446 x1726)))
(assert (axiom_frac_zero x446 x1726 x615 x2114 (uninterp_frac x446 x1726)))
(assert (axiom_frac_zero x446 x1726 x623 x566 (uninterp_frac x446 x1726)))
(assert (axiom_frac_zero x446 x1726 x915 x124 (uninterp_frac x446 x1726)))
(assert (axiom_frac_bound x610 x1726))
(assert (axiom_frac_zero x610 x1726 (x1811 x1845) x1984 (uninterp_frac x610 x1726)))
(assert (axiom_frac_zero x610 x1726 x1086 (x1811 x302) (uninterp_frac x610 x1726)))
(assert (axiom_frac_zero x610 x1726 x1346 x606 (uninterp_frac x610 x1726)))
(assert (axiom_frac_zero x610 x1726 x136 x363 (uninterp_frac x610 x1726)))
(assert (axiom_frac_zero x610 x1726 x1442 x1726 (uninterp_frac x610 x1726)))
(assert (axiom_frac_zero x610 x1726 x1577 x1726 (uninterp_frac x610 x1726)))
(assert (axiom_frac_zero x610 x1726 x1650 (x1811 x883) (uninterp_frac x610 x1726)))
(assert (axiom_frac_zero x610 x1726 x17 x1726 (uninterp_frac x610 x1726)))
(assert (axiom_frac_zero x610 x1726 x1726 x1384 (uninterp_frac x610 x1726)))
(assert (axiom_frac_zero x610 x1726 x1726 x1442 (uninterp_frac x610 x1726)))
(assert (axiom_frac_zero x610 x1726 x1726 x1577 (uninterp_frac x610 x1726)))
(assert (axiom_frac_zero x610 x1726 x1726 x17 (uninterp_frac x610 x1726)))
(assert (axiom_frac_zero x610 x1726 x1726 x2092 (uninterp_frac x610 x1726)))
(assert (axiom_frac_zero x610 x1726 x1726 x846 (uninterp_frac x610 x1726)))
(assert (axiom_frac_zero x610 x1726 x1797 x2056 (uninterp_frac x610 x1726)))
(assert (axiom_frac_zero x610 x1726 x2077 x566 (uninterp_frac x610 x1726)))
(assert (axiom_frac_zero x610 x1726 x2086 (x1811 x254) (uninterp_frac x610 x1726)))
(assert (axiom_frac_zero x610 x1726 x2132 x1636 (uninterp_frac x610 x1726)))
(assert (axiom_frac_zero x610 x1726 x364 x27 (uninterp_frac x610 x1726)))
(assert (axiom_frac_zero x610 x1726 x450 x566 (uninterp_frac x610 x1726)))
(assert (axiom_frac_zero x610 x1726 x458 x1485 (uninterp_frac x610 x1726)))
(assert (axiom_frac_zero x610 x1726 x476 x566 (uninterp_frac x610 x1726)))
(assert (axiom_frac_zero x610 x1726 x541 x1947 (uninterp_frac x610 x1726)))
(assert (axiom_frac_zero x610 x1726 x566 x2077 (uninterp_frac x610 x1726)))
(assert (axiom_frac_zero x610 x1726 x566 x623 (uninterp_frac x610 x1726)))
(assert (axiom_frac_zero x610 x1726 x566 x638 (uninterp_frac x610 x1726)))
(assert (axiom_frac_zero x610 x1726 x575 x868 (uninterp_frac x610 x1726)))
(assert (axiom_frac_zero x610 x1726 x576 x566 (uninterp_frac x610 x1726)))
(assert (axiom_frac_zero x610 x1726 x606 x1346 (uninterp_frac x610 x1726)))
(assert (axiom_frac_zero x610 x1726 x615 x2114 (uninterp_frac x610 x1726)))
(assert (axiom_frac_zero x610 x1726 x623 x566 (uninterp_frac x610 x1726)))
(assert (axiom_frac_zero x610 x1726 x915 x124 (uninterp_frac x610 x1726)))
(assert (axiom_int_approximation x1))
(assert (axiom_int_approximation x1001))
(assert (axiom_int_approximation x1003))
(assert (axiom_int_approximation x1004))
(assert (axiom_int_approximation x1007))
(assert (axiom_int_approximation x1008))
(assert (axiom_int_approximation x1010))
(assert (axiom_int_approximation x1012))
(assert (axiom_int_approximation x1013))
(assert (axiom_int_approximation x1014))
(assert (axiom_int_approximation x1016))
(assert (axiom_int_approximation x1017))
(assert (axiom_int_approximation x1019))
(assert (axiom_int_approximation x1020))
(assert (axiom_int_approximation x1021))
(assert (axiom_int_approximation x1023))
(assert (axiom_int_approximation x1026))
(assert (axiom_int_approximation x1028))
(assert (axiom_int_approximation x1029))
(assert (axiom_int_approximation x103))
(assert (axiom_int_approximation x1030))
(assert (axiom_int_approximation x1032))
(assert (axiom_int_approximation x1033))
(assert (axiom_int_approximation x1034))
(assert (axiom_int_approximation x1035))
(assert (axiom_int_approximation x1038))
(assert (axiom_int_approximation x104))
(assert (axiom_int_approximation x1042))
(assert (axiom_int_approximation x1043))
(assert (axiom_int_approximation x1045))
(assert (axiom_int_approximation x1047))
(assert (axiom_int_approximation x1049))
(assert (axiom_int_approximation x105))
(assert (axiom_int_approximation x1056))
(assert (axiom_int_approximation x1057))
(assert (axiom_int_approximation x106))
(assert (axiom_int_approximation x1062))
(assert (axiom_int_approximation x1064))
(assert (axiom_int_approximation x1065))
(assert (axiom_int_approximation x1066))
(assert (axiom_int_approximation x1067))
(assert (axiom_int_approximation x1068))
(assert (axiom_int_approximation x1070))
(assert (axiom_int_approximation x1071))
(assert (axiom_int_approximation x1072))
(assert (axiom_int_approximation x1073))
(assert (axiom_int_approximation x1074))
(assert (axiom_int_approximation x1076))
(assert (axiom_int_approximation x1078))
(assert (axiom_int_approximation x1079))
(assert (axiom_int_approximation x108))
(assert (axiom_int_approximation x1080))
(assert (axiom_int_approximation x1082))
(assert (axiom_int_approximation x1083))
(assert (axiom_int_approximation x1086))
(assert (axiom_int_approximation x1088))
(assert (axiom_int_approximation x1090))
(assert (axiom_int_approximation x1091))
(assert (axiom_int_approximation x1092))
(assert (axiom_int_approximation x1093))
(assert (axiom_int_approximation x1094))
(assert (axiom_int_approximation x1096))
(assert (axiom_int_approximation x1097))
(assert (axiom_int_approximation x1099))
(assert (axiom_int_approximation x11))
(assert (axiom_int_approximation x110))
(assert (axiom_int_approximation x1100))
(assert (axiom_int_approximation x1102))
(assert (axiom_int_approximation x1103))
(assert (axiom_int_approximation x1104))
(assert (axiom_int_approximation x1105))
(assert (axiom_int_approximation x1106))
(assert (axiom_int_approximation x1108))
(assert (axiom_int_approximation x1111))
(assert (axiom_int_approximation x1112))
(assert (axiom_int_approximation x1115))
(assert (axiom_int_approximation x1116))
(assert (axiom_int_approximation x1121))
(assert (axiom_int_approximation x1122))
(assert (axiom_int_approximation x1127))
(assert (axiom_int_approximation x1129))
(assert (axiom_int_approximation x113))
(assert (axiom_int_approximation x1137))
(assert (axiom_int_approximation x114))
(assert (axiom_int_approximation x1141))
(assert (axiom_int_approximation x1145))
(assert (axiom_int_approximation x1146))
(assert (axiom_int_approximation x1148))
(assert (axiom_int_approximation x115))
(assert (axiom_int_approximation x1150))
(assert (axiom_int_approximation x1151))
(assert (axiom_int_approximation x1153))
(assert (axiom_int_approximation x1154))
(assert (axiom_int_approximation x1156))
(assert (axiom_int_approximation x1157))
(assert (axiom_int_approximation x116))
(assert (axiom_int_approximation x1161))
(assert (axiom_int_approximation x1162))
(assert (axiom_int_approximation x1163))
(assert (axiom_int_approximation x1164))
(assert (axiom_int_approximation x1167))
(assert (axiom_int_approximation x1172))
(assert (axiom_int_approximation x1173))
(assert (axiom_int_approximation x1174))
(assert (axiom_int_approximation x1179))
(assert (axiom_int_approximation x118))
(assert (axiom_int_approximation x1183))
(assert (axiom_int_approximation x1184))
(assert (axiom_int_approximation x1185))
(assert (axiom_int_approximation x1186))
(assert (axiom_int_approximation x1191))
(assert (axiom_int_approximation x1192))
(assert (axiom_int_approximation x1195))
(assert (axiom_int_approximation x1196))
(assert (axiom_int_approximation x1197))
(assert (axiom_int_approximation x1198))
(assert (axiom_int_approximation x1199))
(assert (axiom_int_approximation x1200))
(assert (axiom_int_approximation x1201))
(assert (axiom_int_approximation x1202))
(assert (axiom_int_approximation x1203))
(assert (axiom_int_approximation x1205))
(assert (axiom_int_approximation x1207))
(assert (axiom_int_approximation x1209))
(assert (axiom_int_approximation x1211))
(assert (axiom_int_approximation x1214))
(assert (axiom_int_approximation x1216))
(assert (axiom_int_approximation x1218))
(assert (axiom_int_approximation x1219))
(assert (axiom_int_approximation x1220))
(assert (axiom_int_approximation x1223))
(assert (axiom_int_approximation x1228))
(assert (axiom_int_approximation x1231))
(assert (axiom_int_approximation x1233))
(assert (axiom_int_approximation x1238))
(assert (axiom_int_approximation x1239))
(assert (axiom_int_approximation x124))
(assert (axiom_int_approximation x1240))
(assert (axiom_int_approximation x1241))
(assert (axiom_int_approximation x1243))
(assert (axiom_int_approximation x1245))
(assert (axiom_int_approximation x1246))
(assert (axiom_int_approximation x125))
(assert (axiom_int_approximation x1251))
(assert (axiom_int_approximation x1253))
(assert (axiom_int_approximation x1254))
(assert (axiom_int_approximation x1256))
(assert (axiom_int_approximation x1257))
(assert (axiom_int_approximation x1258))
(assert (axiom_int_approximation x1259))
(assert (axiom_int_approximation x126))
(assert (axiom_int_approximation x1260))
(assert (axiom_int_approximation x1261))
(assert (axiom_int_approximation x1262))
(assert (axiom_int_approximation x1264))
(assert (axiom_int_approximation x1270))
(assert (axiom_int_approximation x1273))
(assert (axiom_int_approximation x1274))
(assert (axiom_int_approximation x1275))
(assert (axiom_int_approximation x1278))
(assert (axiom_int_approximation x1279))
(assert (axiom_int_approximation x1280))
(assert (axiom_int_approximation x1282))
(assert (axiom_int_approximation x1283))
(assert (axiom_int_approximation x1284))
(assert (axiom_int_approximation x1285))
(assert (axiom_int_approximation x1287))
(assert (axiom_int_approximation x1288))
(assert (axiom_int_approximation x1289))
(assert (axiom_int_approximation x1291))
(assert (axiom_int_approximation x1292))
(assert (axiom_int_approximation x1294))
(assert (axiom_int_approximation x1295))
(assert (axiom_int_approximation x1298))
(assert (axiom_int_approximation x1299))
(assert (axiom_int_approximation x13))
(assert (axiom_int_approximation x130))
(assert (axiom_int_approximation x1300))
(assert (axiom_int_approximation x1301))
(assert (axiom_int_approximation x1304))
(assert (axiom_int_approximation x1309))
(assert (axiom_int_approximation x1310))
(assert (axiom_int_approximation x1311))
(assert (axiom_int_approximation x1316))
(assert (axiom_int_approximation x1317))
(assert (axiom_int_approximation x1319))
(assert (axiom_int_approximation x132))
(assert (axiom_int_approximation x1321))
(assert (axiom_int_approximation x1323))
(assert (axiom_int_approximation x1324))
(assert (axiom_int_approximation x1326))
(assert (axiom_int_approximation x1328))
(assert (axiom_int_approximation x133))
(assert (axiom_int_approximation x1330))
(assert (axiom_int_approximation x1336))
(assert (axiom_int_approximation x1337))
(assert (axiom_int_approximation x1339))
(assert (axiom_int_approximation x134))
(assert (axiom_int_approximation x1341))
(assert (axiom_int_approximation x1343))
(assert (axiom_int_approximation x1344))
(assert (axiom_int_approximation x1345))
(assert (axiom_int_approximation x1346))
(assert (axiom_int_approximation x1347))
(assert (axiom_int_approximation x1348))
(assert (axiom_int_approximation x1349))
(assert (axiom_int_approximation x1350))
(assert (axiom_int_approximation x1352))
(assert (axiom_int_approximation x1353))
(assert (axiom_int_approximation x1354))
(assert (axiom_int_approximation x1355))
(assert (axiom_int_approximation x1356))
(assert (axiom_int_approximation x1357))
(assert (axiom_int_approximation x136))
(assert (axiom_int_approximation x1360))
(assert (axiom_int_approximation x1364))
(assert (axiom_int_approximation x1367))
(assert (axiom_int_approximation x1368))
(assert (axiom_int_approximation x1369))
(assert (axiom_int_approximation x137))
(assert (axiom_int_approximation x1370))
(assert (axiom_int_approximation x1371))
(assert (axiom_int_approximation x1374))
(assert (axiom_int_approximation x1375))
(assert (axiom_int_approximation x1376))
(assert (axiom_int_approximation x1377))
(assert (axiom_int_approximation x1379))
(assert (axiom_int_approximation x1380))
(assert (axiom_int_approximation x1381))
(assert (axiom_int_approximation x1383))
(assert (axiom_int_approximation x1384))
(assert (axiom_int_approximation x1385))
(assert (axiom_int_approximation x1387))
(assert (axiom_int_approximation x1389))
(assert (axiom_int_approximation x139))
(assert (axiom_int_approximation x1390))
(assert (axiom_int_approximation x1391))
(assert (axiom_int_approximation x1393))
(assert (axiom_int_approximation x1395))
(assert (axiom_int_approximation x1396))
(assert (axiom_int_approximation x1397))
(assert (axiom_int_approximation x1398))
(assert (axiom_int_approximation x1399))
(assert (axiom_int_approximation x14))
(assert (axiom_int_approximation x140))
(assert (axiom_int_approximation x1400))
(assert (axiom_int_approximation x1401))
(assert (axiom_int_approximation x1402))
(assert (axiom_int_approximation x1403))
(assert (axiom_int_approximation x1404))
(assert (axiom_int_approximation x1405))
(assert (axiom_int_approximation x1406))
(assert (axiom_int_approximation x1407))
(assert (axiom_int_approximation x1411))
(assert (axiom_int_approximation x1414))
(assert (axiom_int_approximation x1417))
(assert (axiom_int_approximation x1418))
(assert (axiom_int_approximation x1419))
(assert (axiom_int_approximation x1420))
(assert (axiom_int_approximation x1421))
(assert (axiom_int_approximation x1424))
(assert (axiom_int_approximation x1425))
(assert (axiom_int_approximation x143))
(assert (axiom_int_approximation x1430))
(assert (axiom_int_approximation x1431))
(assert (axiom_int_approximation x1432))
(assert (axiom_int_approximation x1434))
(assert (axiom_int_approximation x1436))
(assert (axiom_int_approximation x144))
(assert (axiom_int_approximation x1440))
(assert (axiom_int_approximation x1441))
(assert (axiom_int_approximation x1442))
(assert (axiom_int_approximation x1443))
(assert (axiom_int_approximation x1445))
(assert (axiom_int_approximation x1446))
(assert (axiom_int_approximation x1448))
(assert (axiom_int_approximation x1449))
(assert (axiom_int_approximation x1451))
(assert (axiom_int_approximation x1455))
(assert (axiom_int_approximation x1456))
(assert (axiom_int_approximation x1458))
(assert (axiom_int_approximation x1459))
(assert (axiom_int_approximation x1460))
(assert (axiom_int_approximation x1462))
(assert (axiom_int_approximation x1463))
(assert (axiom_int_approximation x1464))
(assert (axiom_int_approximation x1469))
(assert (axiom_int_approximation x147))
(assert (axiom_int_approximation x1470))
(assert (axiom_int_approximation x1473))
(assert (axiom_int_approximation x1474))
(assert (axiom_int_approximation x1478))
(assert (axiom_int_approximation x1482))
(assert (axiom_int_approximation x1483))
(assert (axiom_int_approximation x1484))
(assert (axiom_int_approximation x1485))
(assert (axiom_int_approximation x1486))
(assert (axiom_int_approximation x1487))
(assert (axiom_int_approximation x1489))
(assert (axiom_int_approximation x149))
(assert (axiom_int_approximation x1491))
(assert (axiom_int_approximation x1493))
(assert (axiom_int_approximation x1494))
(assert (axiom_int_approximation x1496))
(assert (axiom_int_approximation x1497))
(assert (axiom_int_approximation x1499))
(assert (axiom_int_approximation x150))
(assert (axiom_int_approximation x1500))
(assert (axiom_int_approximation x1501))
(assert (axiom_int_approximation x1502))
(assert (axiom_int_approximation x1504))
(assert (axiom_int_approximation x1507))
(assert (axiom_int_approximation x1509))
(assert (axiom_int_approximation x1514))
(assert (axiom_int_approximation x1518))
(assert (axiom_int_approximation x152))
(assert (axiom_int_approximation x1524))
(assert (axiom_int_approximation x1525))
(assert (axiom_int_approximation x1527))
(assert (axiom_int_approximation x1529))
(assert (axiom_int_approximation x1530))
(assert (axiom_int_approximation x1531))
(assert (axiom_int_approximation x1535))
(assert (axiom_int_approximation x1536))
(assert (axiom_int_approximation x1538))
(assert (axiom_int_approximation x1539))
(assert (axiom_int_approximation x1542))
(assert (axiom_int_approximation x1543))
(assert (axiom_int_approximation x1545))
(assert (axiom_int_approximation x1547))
(assert (axiom_int_approximation x1548))
(assert (axiom_int_approximation x1550))
(assert (axiom_int_approximation x1553))
(assert (axiom_int_approximation x1557))
(assert (axiom_int_approximation x1558))
(assert (axiom_int_approximation x1559))
(assert (axiom_int_approximation x156))
(assert (axiom_int_approximation x1560))
(assert (axiom_int_approximation x1563))
(assert (axiom_int_approximation x1565))
(assert (axiom_int_approximation x1569))
(assert (axiom_int_approximation x1572))
(assert (axiom_int_approximation x1573))
(assert (axiom_int_approximation x1577))
(assert (axiom_int_approximation x1578))
(assert (axiom_int_approximation x1579))
(assert (axiom_int_approximation x158))
(assert (axiom_int_approximation x1580))
(assert (axiom_int_approximation x1581))
(assert (axiom_int_approximation x1582))
(assert (axiom_int_approximation x1583))
(assert (axiom_int_approximation x1584))
(assert (axiom_int_approximation x1585))
(assert (axiom_int_approximation x159))
(assert (axiom_int_approximation x1590))
(assert (axiom_int_approximation x1591))
(assert (axiom_int_approximation x1592))
(assert (axiom_int_approximation x1593))
(assert (axiom_int_approximation x1595))
(assert (axiom_int_approximation x1596))
(assert (axiom_int_approximation x1597))
(assert (axiom_int_approximation x1598))
(assert (axiom_int_approximation x160))
(assert (axiom_int_approximation x1601))
(assert (axiom_int_approximation x1602))
(assert (axiom_int_approximation x1603))
(assert (axiom_int_approximation x1604))
(assert (axiom_int_approximation x1605))
(assert (axiom_int_approximation x1608))
(assert (axiom_int_approximation x161))
(assert (axiom_int_approximation x1610))
(assert (axiom_int_approximation x1611))
(assert (axiom_int_approximation x1613))
(assert (axiom_int_approximation x1615))
(assert (axiom_int_approximation x1616))
(assert (axiom_int_approximation x1618))
(assert (axiom_int_approximation x1619))
(assert (axiom_int_approximation x162))
(assert (axiom_int_approximation x1622))
(assert (axiom_int_approximation x1623))
(assert (axiom_int_approximation x1624))
(assert (axiom_int_approximation x1628))
(assert (axiom_int_approximation x1629))
(assert (axiom_int_approximation x163))
(assert (axiom_int_approximation x1632))
(assert (axiom_int_approximation x1633))
(assert (axiom_int_approximation x1636))
(assert (axiom_int_approximation x1637))
(assert (axiom_int_approximation x1638))
(assert (axiom_int_approximation x1639))
(assert (axiom_int_approximation x1640))
(assert (axiom_int_approximation x1642))
(assert (axiom_int_approximation x1645))
(assert (axiom_int_approximation x1646))
(assert (axiom_int_approximation x1647))
(assert (axiom_int_approximation x1648))
(assert (axiom_int_approximation x1650))
(assert (axiom_int_approximation x1657))
(assert (axiom_int_approximation x1658))
(assert (axiom_int_approximation x1659))
(assert (axiom_int_approximation x166))
(assert (axiom_int_approximation x1661))
(assert (axiom_int_approximation x1663))
(assert (axiom_int_approximation x1665))
(assert (axiom_int_approximation x1666))
(assert (axiom_int_approximation x1669))
(assert (axiom_int_approximation x167))
(assert (axiom_int_approximation x1670))
(assert (axiom_int_approximation x1671))
(assert (axiom_int_approximation x1672))
(assert (axiom_int_approximation x1673))
(assert (axiom_int_approximation x1674))
(assert (axiom_int_approximation x1675))
(assert (axiom_int_approximation x1676))
(assert (axiom_int_approximation x1677))
(assert (axiom_int_approximation x1678))
(assert (axiom_int_approximation x168))
(assert (axiom_int_approximation x1680))
(assert (axiom_int_approximation x1681))
(assert (axiom_int_approximation x1682))
(assert (axiom_int_approximation x1684))
(assert (axiom_int_approximation x1685))
(assert (axiom_int_approximation x1686))
(assert (axiom_int_approximation x1693))
(assert (axiom_int_approximation x1694))
(assert (axiom_int_approximation x1695))
(assert (axiom_int_approximation x1697))
(assert (axiom_int_approximation x17))
(assert (axiom_int_approximation x1702))
(assert (axiom_int_approximation x1703))
(assert (axiom_int_approximation x1704))
(assert (axiom_int_approximation x1705))
(assert (axiom_int_approximation x1707))
(assert (axiom_int_approximation x1709))
(assert (axiom_int_approximation x1711))
(assert (axiom_int_approximation x1713))
(assert (axiom_int_approximation x1714))
(assert (axiom_int_approximation x1716))
(assert (axiom_int_approximation x1719))
(assert (axiom_int_approximation x172))
(assert (axiom_int_approximation x1721))
(assert (axiom_int_approximation x1722))
(assert (axiom_int_approximation x1723))
(assert (axiom_int_approximation x1725))
(assert (axiom_int_approximation x1726))
(assert (axiom_int_approximation x1727))
(assert (axiom_int_approximation x1728))
(assert (axiom_int_approximation x1730))
(assert (axiom_int_approximation x1731))
(assert (axiom_int_approximation x1732))
(assert (axiom_int_approximation x1733))
(assert (axiom_int_approximation x1734))
(assert (axiom_int_approximation x1736))
(assert (axiom_int_approximation x1737))
(assert (axiom_int_approximation x1739))
(assert (axiom_int_approximation x174))
(assert (axiom_int_approximation x1741))
(assert (axiom_int_approximation x1742))
(assert (axiom_int_approximation x1744))
(assert (axiom_int_approximation x1745))
(assert (axiom_int_approximation x1746))
(assert (axiom_int_approximation x1747))
(assert (axiom_int_approximation x1748))
(assert (axiom_int_approximation x175))
(assert (axiom_int_approximation x1751))
(assert (axiom_int_approximation x1752))
(assert (axiom_int_approximation x1756))
(assert (axiom_int_approximation x1757))
(assert (axiom_int_approximation x1759))
(assert (axiom_int_approximation x176))
(assert (axiom_int_approximation x1760))
(assert (axiom_int_approximation x1761))
(assert (axiom_int_approximation x1762))
(assert (axiom_int_approximation x1766))
(assert (axiom_int_approximation x1767))
(assert (axiom_int_approximation x1769))
(assert (axiom_int_approximation x1771))
(assert (axiom_int_approximation x1772))
(assert (axiom_int_approximation x1773))
(assert (axiom_int_approximation x1775))
(assert (axiom_int_approximation x1776))
(assert (axiom_int_approximation x1779))
(assert (axiom_int_approximation x178))
(assert (axiom_int_approximation x1780))
(assert (axiom_int_approximation x1781))
(assert (axiom_int_approximation x1783))
(assert (axiom_int_approximation x1784))
(assert (axiom_int_approximation x1789))
(assert (axiom_int_approximation x179))
(assert (axiom_int_approximation x1790))
(assert (axiom_int_approximation x1791))
(assert (axiom_int_approximation x1792))
(assert (axiom_int_approximation x1795))
(assert (axiom_int_approximation x1797))
(assert (axiom_int_approximation x1799))
(assert (axiom_int_approximation x18))
(assert (axiom_int_approximation x180))
(assert (axiom_int_approximation x1803))
(assert (axiom_int_approximation x1805))
(assert (axiom_int_approximation x1809))
(assert (axiom_int_approximation x1812))
(assert (axiom_int_approximation x1813))
(assert (axiom_int_approximation x1814))
(assert (axiom_int_approximation x1815))
(assert (axiom_int_approximation x1816))
(assert (axiom_int_approximation x1819))
(assert (axiom_int_approximation x1823))
(assert (axiom_int_approximation x1824))
(assert (axiom_int_approximation x1827))
(assert (axiom_int_approximation x183))
(assert (axiom_int_approximation x1830))
(assert (axiom_int_approximation x1835))
(assert (axiom_int_approximation x1837))
(assert (axiom_int_approximation x1838))
(assert (axiom_int_approximation x1839))
(assert (axiom_int_approximation x184))
(assert (axiom_int_approximation x1840))
(assert (axiom_int_approximation x1842))
(assert (axiom_int_approximation x1845))
(assert (axiom_int_approximation x1848))
(assert (axiom_int_approximation x1849))
(assert (axiom_int_approximation x185))
(assert (axiom_int_approximation x1851))
(assert (axiom_int_approximation x1852))
(assert (axiom_int_approximation x1853))
(assert (axiom_int_approximation x1854))
(assert (axiom_int_approximation x1857))
(assert (axiom_int_approximation x1858))
(assert (axiom_int_approximation x1859))
(assert (axiom_int_approximation x186))
(assert (axiom_int_approximation x1860))
(assert (axiom_int_approximation x1862))
(assert (axiom_int_approximation x1863))
(assert (axiom_int_approximation x1864))
(assert (axiom_int_approximation x1865))
(assert (axiom_int_approximation x1868))
(assert (axiom_int_approximation x187))
(assert (axiom_int_approximation x1871))
(assert (axiom_int_approximation x1873))
(assert (axiom_int_approximation x1874))
(assert (axiom_int_approximation x1875))
(assert (axiom_int_approximation x1876))
(assert (axiom_int_approximation x1877))
(assert (axiom_int_approximation x1882))
(assert (axiom_int_approximation x1884))
(assert (axiom_int_approximation x1885))
(assert (axiom_int_approximation x1886))
(assert (axiom_int_approximation x1890))
(assert (axiom_int_approximation x1891))
(assert (axiom_int_approximation x1895))
(assert (axiom_int_approximation x1897))
(assert (axiom_int_approximation x1899))
(assert (axiom_int_approximation x190))
(assert (axiom_int_approximation x1902))
(assert (axiom_int_approximation x1903))
(assert (axiom_int_approximation x1904))
(assert (axiom_int_approximation x1905))
(assert (axiom_int_approximation x1906))
(assert (axiom_int_approximation x1907))
(assert (axiom_int_approximation x1909))
(assert (axiom_int_approximation x191))
(assert (axiom_int_approximation x1917))
(assert (axiom_int_approximation x1918))
(assert (axiom_int_approximation x192))
(assert (axiom_int_approximation x1921))
(assert (axiom_int_approximation x1922))
(assert (axiom_int_approximation x1923))
(assert (axiom_int_approximation x1924))
(assert (axiom_int_approximation x1925))
(assert (axiom_int_approximation x1926))
(assert (axiom_int_approximation x1927))
(assert (axiom_int_approximation x1930))
(assert (axiom_int_approximation x1932))
(assert (axiom_int_approximation x1934))
(assert (axiom_int_approximation x1936))
(assert (axiom_int_approximation x1939))
(assert (axiom_int_approximation x194))
(assert (axiom_int_approximation x1940))
(assert (axiom_int_approximation x1942))
(assert (axiom_int_approximation x1943))
(assert (axiom_int_approximation x1945))
(assert (axiom_int_approximation x1946))
(assert (axiom_int_approximation x1947))
(assert (axiom_int_approximation x1948))
(assert (axiom_int_approximation x1949))
(assert (axiom_int_approximation x195))
(assert (axiom_int_approximation x1950))
(assert (axiom_int_approximation x1952))
(assert (axiom_int_approximation x1953))
(assert (axiom_int_approximation x1957))
(assert (axiom_int_approximation x196))
(assert (axiom_int_approximation x1960))
(assert (axiom_int_approximation x1962))
(assert (axiom_int_approximation x1963))
(assert (axiom_int_approximation x1964))
(assert (axiom_int_approximation x1965))
(assert (axiom_int_approximation x1967))
(assert (axiom_int_approximation x1968))
(assert (axiom_int_approximation x1969))
(assert (axiom_int_approximation x1972))
(assert (axiom_int_approximation x1973))
(assert (axiom_int_approximation x1983))
(assert (axiom_int_approximation x1984))
(assert (axiom_int_approximation x1985))
(assert (axiom_int_approximation x1986))
(assert (axiom_int_approximation x1989))
(assert (axiom_int_approximation x1990))
(assert (axiom_int_approximation x1992))
(assert (axiom_int_approximation x1993))
(assert (axiom_int_approximation x1995))
(assert (axiom_int_approximation x1996))
(assert (axiom_int_approximation x1998))
(assert (axiom_int_approximation x1999))
(assert (axiom_int_approximation x2))
(assert (axiom_int_approximation x20))
(assert (axiom_int_approximation x2001))
(assert (axiom_int_approximation x2002))
(assert (axiom_int_approximation x2003))
(assert (axiom_int_approximation x2004))
(assert (axiom_int_approximation x2005))
(assert (axiom_int_approximation x2006))
(assert (axiom_int_approximation x2011))
(assert (axiom_int_approximation x2012))
(assert (axiom_int_approximation x2015))
(assert (axiom_int_approximation x2020))
(assert (axiom_int_approximation x2023))
(assert (axiom_int_approximation x2026))
(assert (axiom_int_approximation x2027))
(assert (axiom_int_approximation x203))
(assert (axiom_int_approximation x2034))
(assert (axiom_int_approximation x2035))
(assert (axiom_int_approximation x2036))
(assert (axiom_int_approximation x2037))
(assert (axiom_int_approximation x2038))
(assert (axiom_int_approximation x204))
(assert (axiom_int_approximation x2040))
(assert (axiom_int_approximation x2041))
(assert (axiom_int_approximation x2042))
(assert (axiom_int_approximation x2043))
(assert (axiom_int_approximation x2044))
(assert (axiom_int_approximation x2045))
(assert (axiom_int_approximation x2051))
(assert (axiom_int_approximation x2053))
(assert (axiom_int_approximation x2054))
(assert (axiom_int_approximation x2055))
(assert (axiom_int_approximation x2056))
(assert (axiom_int_approximation x2058))
(assert (axiom_int_approximation x2060))
(assert (axiom_int_approximation x2062))
(assert (axiom_int_approximation x2065))
(assert (axiom_int_approximation x2066))
(assert (axiom_int_approximation x207))
(assert (axiom_int_approximation x2071))
(assert (axiom_int_approximation x2072))
(assert (axiom_int_approximation x2074))
(assert (axiom_int_approximation x2075))
(assert (axiom_int_approximation x2077))
(assert (axiom_int_approximation x2078))
(assert (axiom_int_approximation x2079))
(assert (axiom_int_approximation x2080))
(assert (axiom_int_approximation x2081))
(assert (axiom_int_approximation x2083))
(assert (axiom_int_approximation x2086))
(assert (axiom_int_approximation x2088))
(assert (axiom_int_approximation x209))
(assert (axiom_int_approximation x2090))
(assert (axiom_int_approximation x2091))
(assert (axiom_int_approximation x2092))
(assert (axiom_int_approximation x2095))
(assert (axiom_int_approximation x2098))
(assert (axiom_int_approximation x2099))
(assert (axiom_int_approximation x2104))
(assert (axiom_int_approximation x2105))
(assert (axiom_int_approximation x2106))
(assert (axiom_int_approximation x2107))
(assert (axiom_int_approximation x2108))
(assert (axiom_int_approximation x2109))
(assert (axiom_int_approximation x211))
(assert (axiom_int_approximation x2110))
(assert (axiom_int_approximation x2111))
(assert (axiom_int_approximation x2112))
(assert (axiom_int_approximation x2113))
(assert (axiom_int_approximation x2114))
(assert (axiom_int_approximation x2115))
(assert (axiom_int_approximation x2117))
(assert (axiom_int_approximation x2118))
(assert (axiom_int_approximation x2119))
(assert (axiom_int_approximation x212))
(assert (axiom_int_approximation x2122))
(assert (axiom_int_approximation x2124))
(assert (axiom_int_approximation x2126))
(assert (axiom_int_approximation x2128))
(assert (axiom_int_approximation x2129))
(assert (axiom_int_approximation x2132))
(assert (axiom_int_approximation x2134))
(assert (axiom_int_approximation x2136))
(assert (axiom_int_approximation x2137))
(assert (axiom_int_approximation x214))
(assert (axiom_int_approximation x215))
(assert (axiom_int_approximation x216))
(assert (axiom_int_approximation x217))
(assert (axiom_int_approximation x218))
(assert (axiom_int_approximation x220))
(assert (axiom_int_approximation x221))
(assert (axiom_int_approximation x228))
(assert (axiom_int_approximation x229))
(assert (axiom_int_approximation x23))
(assert (axiom_int_approximation x230))
(assert (axiom_int_approximation x232))
(assert (axiom_int_approximation x233))
(assert (axiom_int_approximation x234))
(assert (axiom_int_approximation x235))
(assert (axiom_int_approximation x236))
(assert (axiom_int_approximation x238))
(assert (axiom_int_approximation x239))
(assert (axiom_int_approximation x241))
(assert (axiom_int_approximation x242))
(assert (axiom_int_approximation x246))
(assert (axiom_int_approximation x248))
(assert (axiom_int_approximation x25))
(assert (axiom_int_approximation x254))
(assert (axiom_int_approximation x256))
(assert (axiom_int_approximation x26))
(assert (axiom_int_approximation x260))
(assert (axiom_int_approximation x261))
(assert (axiom_int_approximation x262))
(assert (axiom_int_approximation x263))
(assert (axiom_int_approximation x265))
(assert (axiom_int_approximation x27))
(assert (axiom_int_approximation x270))
(assert (axiom_int_approximation x272))
(assert (axiom_int_approximation x274))
(assert (axiom_int_approximation x275))
(assert (axiom_int_approximation x276))
(assert (axiom_int_approximation x279))
(assert (axiom_int_approximation x283))
(assert (axiom_int_approximation x285))
(assert (axiom_int_approximation x287))
(assert (axiom_int_approximation x290))
(assert (axiom_int_approximation x293))
(assert (axiom_int_approximation x294))
(assert (axiom_int_approximation x296))
(assert (axiom_int_approximation x297))
(assert (axiom_int_approximation x298))
(assert (axiom_int_approximation x301))
(assert (axiom_int_approximation x302))
(assert (axiom_int_approximation x303))
(assert (axiom_int_approximation x304))
(assert (axiom_int_approximation x305))
(assert (axiom_int_approximation x306))
(assert (axiom_int_approximation x31))
(assert (axiom_int_approximation x310))
(assert (axiom_int_approximation x311))
(assert (axiom_int_approximation x312))
(assert (axiom_int_approximation x316))
(assert (axiom_int_approximation x319))
(assert (axiom_int_approximation x324))
(assert (axiom_int_approximation x325))
(assert (axiom_int_approximation x326))
(assert (axiom_int_approximation x327))
(assert (axiom_int_approximation x328))
(assert (axiom_int_approximation x329))
(assert (axiom_int_approximation x33))
(assert (axiom_int_approximation x330))
(assert (axiom_int_approximation x331))
(assert (axiom_int_approximation x332))
(assert (axiom_int_approximation x336))
(assert (axiom_int_approximation x337))
(assert (axiom_int_approximation x339))
(assert (axiom_int_approximation x340))
(assert (axiom_int_approximation x342))
(assert (axiom_int_approximation x345))
(assert (axiom_int_approximation x346))
(assert (axiom_int_approximation x347))
(assert (axiom_int_approximation x348))
(assert (axiom_int_approximation x349))
(assert (axiom_int_approximation x350))
(assert (axiom_int_approximation x351))
(assert (axiom_int_approximation x353))
(assert (axiom_int_approximation x355))
(assert (axiom_int_approximation x357))
(assert (axiom_int_approximation x358))
(assert (axiom_int_approximation x359))
(assert (axiom_int_approximation x363))
(assert (axiom_int_approximation x364))
(assert (axiom_int_approximation x366))
(assert (axiom_int_approximation x368))
(assert (axiom_int_approximation x370))
(assert (axiom_int_approximation x371))
(assert (axiom_int_approximation x372))
(assert (axiom_int_approximation x374))
(assert (axiom_int_approximation x379))
(assert (axiom_int_approximation x38))
(assert (axiom_int_approximation x380))
(assert (axiom_int_approximation x382))
(assert (axiom_int_approximation x383))
(assert (axiom_int_approximation x385))
(assert (axiom_int_approximation x386))
(assert (axiom_int_approximation x387))
(assert (axiom_int_approximation x39))
(assert (axiom_int_approximation x390))
(assert (axiom_int_approximation x391))
(assert (axiom_int_approximation x392))
(assert (axiom_int_approximation x393))
(assert (axiom_int_approximation x397))
(assert (axiom_int_approximation x398))
(assert (axiom_int_approximation x4))
(assert (axiom_int_approximation x400))
(assert (axiom_int_approximation x401))
(assert (axiom_int_approximation x404))
(assert (axiom_int_approximation x405))
(assert (axiom_int_approximation x407))
(assert (axiom_int_approximation x409))
(assert (axiom_int_approximation x410))
(assert (axiom_int_approximation x411))
(assert (axiom_int_approximation x412))
(assert (axiom_int_approximation x413))
(assert (axiom_int_approximation x418))
(assert (axiom_int_approximation x42))
(assert (axiom_int_approximation x420))
(assert (axiom_int_approximation x421))
(assert (axiom_int_approximation x423))
(assert (axiom_int_approximation x426))
(assert (axiom_int_approximation x427))
(assert (axiom_int_approximation x428))
(assert (axiom_int_approximation x429))
(assert (axiom_int_approximation x432))
(assert (axiom_int_approximation x433))
(assert (axiom_int_approximation x435))
(assert (axiom_int_approximation x438))
(assert (axiom_int_approximation x44))
(assert (axiom_int_approximation x443))
(assert (axiom_int_approximation x444))
(assert (axiom_int_approximation x446))
(assert (axiom_int_approximation x448))
(assert (axiom_int_approximation x45))
(assert (axiom_int_approximation x450))
(assert (axiom_int_approximation x451))
(assert (axiom_int_approximation x452))
(assert (axiom_int_approximation x453))
(assert (axiom_int_approximation x455))
(assert (axiom_int_approximation x456))
(assert (axiom_int_approximation x458))
(assert (axiom_int_approximation x461))
(assert (axiom_int_approximation x463))
(assert (axiom_int_approximation x465))
(assert (axiom_int_approximation x466))
(assert (axiom_int_approximation x467))
(assert (axiom_int_approximation x469))
(assert (axiom_int_approximation x47))
(assert (axiom_int_approximation x470))
(assert (axiom_int_approximation x471))
(assert (axiom_int_approximation x474))
(assert (axiom_int_approximation x475))
(assert (axiom_int_approximation x476))
(assert (axiom_int_approximation x479))
(assert (axiom_int_approximation x480))
(assert (axiom_int_approximation x482))
(assert (axiom_int_approximation x484))
(assert (axiom_int_approximation x486))
(assert (axiom_int_approximation x487))
(assert (axiom_int_approximation x489))
(assert (axiom_int_approximation x490))
(assert (axiom_int_approximation x491))
(assert (axiom_int_approximation x493))
(assert (axiom_int_approximation x494))
(assert (axiom_int_approximation x495))
(assert (axiom_int_approximation x497))
(assert (axiom_int_approximation x498))
(assert (axiom_int_approximation x5))
(assert (axiom_int_approximation x50))
(assert (axiom_int_approximation x502))
(assert (axiom_int_approximation x504))
(assert (axiom_int_approximation x505))
(assert (axiom_int_approximation x507))
(assert (axiom_int_approximation x509))
(assert (axiom_int_approximation x512))
(assert (axiom_int_approximation x513))
(assert (axiom_int_approximation x514))
(assert (axiom_int_approximation x515))
(assert (axiom_int_approximation x516))
(assert (axiom_int_approximation x517))
(assert (axiom_int_approximation x518))
(assert (axiom_int_approximation x52))
(assert (axiom_int_approximation x521))
(assert (axiom_int_approximation x522))
(assert (axiom_int_approximation x524))
(assert (axiom_int_approximation x526))
(assert (axiom_int_approximation x528))
(assert (axiom_int_approximation x529))
(assert (axiom_int_approximation x53))
(assert (axiom_int_approximation x532))
(assert (axiom_int_approximation x534))
(assert (axiom_int_approximation x535))
(assert (axiom_int_approximation x536))
(assert (axiom_int_approximation x538))
(assert (axiom_int_approximation x54))
(assert (axiom_int_approximation x541))
(assert (axiom_int_approximation x545))
(assert (axiom_int_approximation x546))
(assert (axiom_int_approximation x548))
(assert (axiom_int_approximation x550))
(assert (axiom_int_approximation x551))
(assert (axiom_int_approximation x554))
(assert (axiom_int_approximation x557))
(assert (axiom_int_approximation x558))
(assert (axiom_int_approximation x559))
(assert (axiom_int_approximation x56))
(assert (axiom_int_approximation x560))
(assert (axiom_int_approximation x561))
(assert (axiom_int_approximation x564))
(assert (axiom_int_approximation x565))
(assert (axiom_int_approximation x566))
(assert (axiom_int_approximation x567))
(assert (axiom_int_approximation x569))
(assert (axiom_int_approximation x570))
(assert (axiom_int_approximation x571))
(assert (axiom_int_approximation x573))
(assert (axiom_int_approximation x574))
(assert (axiom_int_approximation x575))
(assert (axiom_int_approximation x576))
(assert (axiom_int_approximation x578))
(assert (axiom_int_approximation x586))
(assert (axiom_int_approximation x587))
(assert (axiom_int_approximation x589))
(assert (axiom_int_approximation x59))
(assert (axiom_int_approximation x590))
(assert (axiom_int_approximation x591))
(assert (axiom_int_approximation x592))
(assert (axiom_int_approximation x596))
(assert (axiom_int_approximation x597))
(assert (axiom_int_approximation x598))
(assert (axiom_int_approximation x599))
(assert (axiom_int_approximation x60))
(assert (axiom_int_approximation x600))
(assert (axiom_int_approximation x601))
(assert (axiom_int_approximation x604))
(assert (axiom_int_approximation x605))
(assert (axiom_int_approximation x606))
(assert (axiom_int_approximation x608))
(assert (axiom_int_approximation x610))
(assert (axiom_int_approximation x612))
(assert (axiom_int_approximation x613))
(assert (axiom_int_approximation x615))
(assert (axiom_int_approximation x616))
(assert (axiom_int_approximation x617))
(assert (axiom_int_approximation x618))
(assert (axiom_int_approximation x621))
(assert (axiom_int_approximation x622))
(assert (axiom_int_approximation x623))
(assert (axiom_int_approximation x624))
(assert (axiom_int_approximation x625))
(assert (axiom_int_approximation x626))
(assert (axiom_int_approximation x627))
(assert (axiom_int_approximation x629))
(assert (axiom_int_approximation x63))
(assert (axiom_int_approximation x636))
(assert (axiom_int_approximation x637))
(assert (axiom_int_approximation x638))
(assert (axiom_int_approximation x639))
(assert (axiom_int_approximation x64))
(assert (axiom_int_approximation x640))
(assert (axiom_int_approximation x642))
(assert (axiom_int_approximation x644))
(assert (axiom_int_approximation x646))
(assert (axiom_int_approximation x648))
(assert (axiom_int_approximation x649))
(assert (axiom_int_approximation x65))
(assert (axiom_int_approximation x650))
(assert (axiom_int_approximation x651))
(assert (axiom_int_approximation x654))
(assert (axiom_int_approximation x656))
(assert (axiom_int_approximation x659))
(assert (axiom_int_approximation x661))
(assert (axiom_int_approximation x663))
(assert (axiom_int_approximation x664))
(assert (axiom_int_approximation x666))
(assert (axiom_int_approximation x668))
(assert (axiom_int_approximation x670))
(assert (axiom_int_approximation x673))
(assert (axiom_int_approximation x674))
(assert (axiom_int_approximation x68))
(assert (axiom_int_approximation x680))
(assert (axiom_int_approximation x682))
(assert (axiom_int_approximation x683))
(assert (axiom_int_approximation x684))
(assert (axiom_int_approximation x685))
(assert (axiom_int_approximation x688))
(assert (axiom_int_approximation x694))
(assert (axiom_int_approximation x695))
(assert (axiom_int_approximation x697))
(assert (axiom_int_approximation x699))
(assert (axiom_int_approximation x7))
(assert (axiom_int_approximation x702))
(assert (axiom_int_approximation x703))
(assert (axiom_int_approximation x705))
(assert (axiom_int_approximation x706))
(assert (axiom_int_approximation x707))
(assert (axiom_int_approximation x708))
(assert (axiom_int_approximation x709))
(assert (axiom_int_approximation x71))
(assert (axiom_int_approximation x710))
(assert (axiom_int_approximation x713))
(assert (axiom_int_approximation x717))
(assert (axiom_int_approximation x72))
(assert (axiom_int_approximation x721))
(assert (axiom_int_approximation x723))
(assert (axiom_int_approximation x725))
(assert (axiom_int_approximation x726))
(assert (axiom_int_approximation x728))
(assert (axiom_int_approximation x729))
(assert (axiom_int_approximation x73))
(assert (axiom_int_approximation x730))
(assert (axiom_int_approximation x731))
(assert (axiom_int_approximation x734))
(assert (axiom_int_approximation x735))
(assert (axiom_int_approximation x736))
(assert (axiom_int_approximation x738))
(assert (axiom_int_approximation x74))
(assert (axiom_int_approximation x740))
(assert (axiom_int_approximation x741))
(assert (axiom_int_approximation x742))
(assert (axiom_int_approximation x745))
(assert (axiom_int_approximation x746))
(assert (axiom_int_approximation x747))
(assert (axiom_int_approximation x748))
(assert (axiom_int_approximation x749))
(assert (axiom_int_approximation x75))
(assert (axiom_int_approximation x752))
(assert (axiom_int_approximation x754))
(assert (axiom_int_approximation x757))
(assert (axiom_int_approximation x758))
(assert (axiom_int_approximation x759))
(assert (axiom_int_approximation x762))
(assert (axiom_int_approximation x763))
(assert (axiom_int_approximation x769))
(assert (axiom_int_approximation x77))
(assert (axiom_int_approximation x771))
(assert (axiom_int_approximation x774))
(assert (axiom_int_approximation x776))
(assert (axiom_int_approximation x777))
(assert (axiom_int_approximation x78))
(assert (axiom_int_approximation x781))
(assert (axiom_int_approximation x782))
(assert (axiom_int_approximation x784))
(assert (axiom_int_approximation x785))
(assert (axiom_int_approximation x787))
(assert (axiom_int_approximation x788))
(assert (axiom_int_approximation x79))
(assert (axiom_int_approximation x790))
(assert (axiom_int_approximation x791))
(assert (axiom_int_approximation x792))
(assert (axiom_int_approximation x794))
(assert (axiom_int_approximation x796))
(assert (axiom_int_approximation x797))
(assert (axiom_int_approximation x800))
(assert (axiom_int_approximation x801))
(assert (axiom_int_approximation x802))
(assert (axiom_int_approximation x803))
(assert (axiom_int_approximation x804))
(assert (axiom_int_approximation x806))
(assert (axiom_int_approximation x807))
(assert (axiom_int_approximation x809))
(assert (axiom_int_approximation x81))
(assert (axiom_int_approximation x813))
(assert (axiom_int_approximation x815))
(assert (axiom_int_approximation x816))
(assert (axiom_int_approximation x817))
(assert (axiom_int_approximation x818))
(assert (axiom_int_approximation x819))
(assert (axiom_int_approximation x82))
(assert (axiom_int_approximation x825))
(assert (axiom_int_approximation x827))
(assert (axiom_int_approximation x828))
(assert (axiom_int_approximation x829))
(assert (axiom_int_approximation x83))
(assert (axiom_int_approximation x830))
(assert (axiom_int_approximation x832))
(assert (axiom_int_approximation x833))
(assert (axiom_int_approximation x836))
(assert (axiom_int_approximation x837))
(assert (axiom_int_approximation x839))
(assert (axiom_int_approximation x84))
(assert (axiom_int_approximation x840))
(assert (axiom_int_approximation x842))
(assert (axiom_int_approximation x844))
(assert (axiom_int_approximation x845))
(assert (axiom_int_approximation x846))
(assert (axiom_int_approximation x847))
(assert (axiom_int_approximation x849))
(assert (axiom_int_approximation x85))
(assert (axiom_int_approximation x851))
(assert (axiom_int_approximation x853))
(assert (axiom_int_approximation x855))
(assert (axiom_int_approximation x856))
(assert (axiom_int_approximation x858))
(assert (axiom_int_approximation x859))
(assert (axiom_int_approximation x861))
(assert (axiom_int_approximation x862))
(assert (axiom_int_approximation x864))
(assert (axiom_int_approximation x865))
(assert (axiom_int_approximation x868))
(assert (axiom_int_approximation x87))
(assert (axiom_int_approximation x870))
(assert (axiom_int_approximation x871))
(assert (axiom_int_approximation x874))
(assert (axiom_int_approximation x875))
(assert (axiom_int_approximation x876))
(assert (axiom_int_approximation x877))
(assert (axiom_int_approximation x878))
(assert (axiom_int_approximation x879))
(assert (axiom_int_approximation x88))
(assert (axiom_int_approximation x881))
(assert (axiom_int_approximation x882))
(assert (axiom_int_approximation x883))
(assert (axiom_int_approximation x884))
(assert (axiom_int_approximation x886))
(assert (axiom_int_approximation x887))
(assert (axiom_int_approximation x889))
(assert (axiom_int_approximation x89))
(assert (axiom_int_approximation x892))
(assert (axiom_int_approximation x893))
(assert (axiom_int_approximation x894))
(assert (axiom_int_approximation x895))
(assert (axiom_int_approximation x896))
(assert (axiom_int_approximation x9))
(assert (axiom_int_approximation x90))
(assert (axiom_int_approximation x900))
(assert (axiom_int_approximation x904))
(assert (axiom_int_approximation x905))
(assert (axiom_int_approximation x908))
(assert (axiom_int_approximation x910))
(assert (axiom_int_approximation x913))
(assert (axiom_int_approximation x914))
(assert (axiom_int_approximation x915))
(assert (axiom_int_approximation x916))
(assert (axiom_int_approximation x919))
(assert (axiom_int_approximation x92))
(assert (axiom_int_approximation x923))
(assert (axiom_int_approximation x925))
(assert (axiom_int_approximation x927))
(assert (axiom_int_approximation x929))
(assert (axiom_int_approximation x93))
(assert (axiom_int_approximation x933))
(assert (axiom_int_approximation x934))
(assert (axiom_int_approximation x936))
(assert (axiom_int_approximation x937))
(assert (axiom_int_approximation x938))
(assert (axiom_int_approximation x939))
(assert (axiom_int_approximation x94))
(assert (axiom_int_approximation x944))
(assert (axiom_int_approximation x947))
(assert (axiom_int_approximation x948))
(assert (axiom_int_approximation x949))
(assert (axiom_int_approximation x95))
(assert (axiom_int_approximation x951))
(assert (axiom_int_approximation x954))
(assert (axiom_int_approximation x956))
(assert (axiom_int_approximation x957))
(assert (axiom_int_approximation x959))
(assert (axiom_int_approximation x96))
(assert (axiom_int_approximation x961))
(assert (axiom_int_approximation x963))
(assert (axiom_int_approximation x966))
(assert (axiom_int_approximation x967))
(assert (axiom_int_approximation x97))
(assert (axiom_int_approximation x971))
(assert (axiom_int_approximation x972))
(assert (axiom_int_approximation x974))
(assert (axiom_int_approximation x975))
(assert (axiom_int_approximation x976))
(assert (axiom_int_approximation x977))
(assert (axiom_int_approximation x98))
(assert (axiom_int_approximation x980))
(assert (axiom_int_approximation x981))
(assert (axiom_int_approximation x984))
(assert (axiom_int_approximation x986))
(assert (axiom_int_approximation x988))
(assert (axiom_int_approximation x989))
(assert (axiom_int_approximation x990))
(assert (axiom_int_approximation x991))
(assert (axiom_int_approximation x995))
(assert (axiom_int_approximation x997))
(assert (axiom_int_approximation x998))
(assert (x1312 x2026))
(assert (= (x335 (x1329 x1327 2)) (+ 2 (x335 x1327))))
(assert (x1312 x1402))
(assert (x1887 x1767 x1127))
(assert (x1688 274184521717934524641157099916833587231))
(assert (x543 x1558))
(assert (x1312 x1596))
(assert (=> (< (- x1374 1) 10000) (= (x21 x1374) (x1134 x1374))))
(assert (x1477 x38))
(assert (x1312 x972))
(assert (= (or (and x259 x1358) (and x1433 x1230)) x562))
(assert (x1312 x884))
(assert (x1312 x1328))
(assert (= (x335 (x21 x784)) x784))
(assert (= (x335 (x21 x908)) x908))
(assert (x1312 x2111))
(assert (x1688 x988))
(assert (x1312 x1500))
(assert (x1887 x570 x1353))
(assert (= (x21 2055092157) (x1134 2055092157)))
(assert (x1477 x1773))
(assert (x1312 x1922))
(assert (x1312 x1514))
(assert (= x414 (and x1505 (not x1044))))
(assert (x1312 x27))
(assert (= (and x259 (not x1358)) x1433))
(assert (x1312 x502))
(assert (x1312 x1682))
(assert (x1477 x337))
(assert (x1312 x1086))
(assert (x1312 x688))
(assert (x1312 x195))
(assert (x1312 x1812))
(assert (x1312 x1100))
(assert (x1312 x1616))
(assert (x1312 x2118))
(assert (x1312 x1352))
(assert (x1477 x1083))
(assert (x1312 x1111))
(assert (x1312 x813))
(assert (x1312 x1695))
(assert (= (or x477 (and x1244 x1000)) x770))
(assert (= x1000 (and x237 x1475)))
(assert (x1312 x33))
(assert (x1477 x2011))
(assert (x1477 x937))
(assert (x1312 x1845))
(assert (x1312 x1992))
(assert (x1477 x548))
(assert (x1312 x1094))
(assert (x1312 x1964))
(assert (x1312 x312))
(assert (x1312 x1455))
(assert (x1312 x234))
(assert (= x287 (x335 (x21 x287))))
(assert (x1477 x735))
(assert (x1312 x435))
(assert (= x596 (x335 (x21 x596))))
(assert (x1312 x2117))
(assert (= x135 x1643))
(assert (x1312 x1350))
(assert (x1312 x1357))
(assert (x1312 x1747))
(assert (x1312 x747))
(assert (x1312 x1013))
(assert (x1312 x1816))
(assert (= (ite (= x20 x113) 115197700812830431890159100217698998050002284567939525164234024451216521560064 (x1620 x113)) (x2096 x113)))
(assert (x1477 x398))
(assert (= x1914 (=> (and (= x454 (x1039 (x21 x1464) (x1134 11) 0)) (<= x1713 255) (<= 0 x215) (= (= x1713 0) x1892) (= x1713 (x286 x1644)) (= (x1039 (x21 x215) x454 0) x1644) (= 0 x108) (<= 0 x1713) (= (x1159 x76) x215) (>= 1461501637330902918203684832716283019655932542975 x215) (= (x1039 (x1134 0) (x1134 9) 0) x76) (< x215 1461501637330902918203684832716283019655932542976) (> 256 x1713)) (and (=> (and x1892 (= x1102 x1545) (= x682 x781)) x834) (=> (not x1892) x675)))))
(assert (x1312 x2079))
(assert (x1477 x1830))
(assert (= (x1134 2000660004) (x21 2000660004)))
(assert (x1477 x220))
(assert (x1312 x82))
(assert (x1312 x787))
(assert (x1688 x758))
(assert (x1312 x1295))
(assert (x1887 x38 x326))
(assert (x1887 x512 x63))
(assert (= 1461501637330902918203684832716283019655932542976 (x335 (x1134 1461501637330902918203684832716283019655932542976))))
(assert (x251 x2034 x1459))
(assert (x1312 x1719))
(assert (x533 x220 x319 x368 x1996))
(assert (x1477 x1602))
(assert (x1267 x827 x2020))
(assert (x1312 x149))
(assert (x1312 x1370))
(assert (x1312 x1411))
(assert (x1312 x1605))
(assert (x1312 x350))
(assert (x1312 x1572))
(assert (x1312 x1775))
(assert (x1312 x1401))
(assert (x1267 x1702 x1292))
(assert (= (x1774 x703) (ite (= 288 x703) 115197700812830431890159100217698998050002284567939525164234024451216521560064 (x1808 x703))))
(assert (= (x335 (x21 274184521717934524641157099916833587229)) 274184521717934524641157099916833587229))
(assert (= (x21 274184521717934524641157099916833587231) (x1134 274184521717934524641157099916833587231)))
(assert (= x1206 (=> (and (<= x1608 1461501637330902918203684832716283019655932542975) (not (= 1752364190 x2129)) (>= x260 0) (> x1572 0) (= x1508 (x1039 (x21 x1608) (x1134 5) 0)) (> 20282409603651670423947251286016 x260) (not (< x2129 1558726628)) (< x2129 2059964113) (= x2129 2059260625) (not (< x2129 1034154046)) (= (x958 x260) x9) (not (= x2129 2055092157)) (not (= 1558726628 x2129)) (= (x1135 x1508) x260) (= x443 x9) (not (= x2129 1736444767)) (not (> 1176186698 x2129)) (= x1572 (x1855 (x21 274184521717934524641157099916833587209))) (not (= x2129 2000660004)) (>= 20282409603651670423947251286015 x260)) (=> (and (>= x495 0) (not (< x1682 614716962)) (= (x958 x495) x340) (not (= 806251499 x1682)) (= x590 x443) (= (x614 x223) x997) (= x1293 (or (> x590 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x590)) (> 0 x590)))) (= (x1135 x584) x495) (<= x1671 1461501637330902918203684832716283019655932542975) (= x223 (x1039 (x21 x1671) (x1134 5) 0)) (= 0 x2109) (not (= 830980174 x1682)) (not (= 840395849 x1682)) (not (= 826074471 x1682)) (= x1460 x1671) (> 1034154046 x1682) (= (x1039 (x21 x1671) (x1134 5) 0) x584) (< 0 x293) (<= 0 x997) (>= 65535 x997) (not (> 806251499 x1682)) (> 20282409603651670423947251286016 x495) (= 950698303 x1682) (> 2059964113 x1682) (= (x1855 (x21 274184521717934524641157099916833587209)) x293) (= (or (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x340) true) (> 0 x340)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x340)) x712) (< x997 65536) (<= x495 20282409603651670423947251286015) (or (and (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (* x1726 x1577)) (= (x1649 20282409603651670423947251286015 x663) x1199) (not (= x1693 115792089237316195423570985008687907853269984655499359237631748795939503996928)) (= (* x1577 x1726) x706) (= x1739 (x969 (- 0 x340))) (= x1577 (x1649 20282409603651670423947251286015 x1739)) (>= x1726 0) (not (> x1199 10141204801825835211973625643007)) (not (= x340 115792089237316195423570985008687907853269984655499359237631748795939503996928)) (> 18446744073709551616 x1726) x712 (= x1153 (x969 (- 0 x1693))) (= (x958 x663) x1693) (not (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1739) (and (> 0 x1739) (= true (<= x1739 57896044618658097711785492504343953926634992332820282019728792003956564819967))))) (= x1585 x1153) (<= x1726 18446744073709551615) (= x706 x663)) (and (>= x566 0) (not (> x72 10141204801825835211973625643007)) (= (x1649 20282409603651670423947251286015 x1491) x72) (not (or (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x340)) (< x340 0)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x340))) (= x1491 x1973) (< (* x450 x566) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= (x1649 20282409603651670423947251286015 x340) x450) (= x1491 x1585) (>= 18446744073709551615 x566) (not x712) (= (* x450 x566) x1973) (< x566 18446744073709551616)))) x2116))))
(assert (x1312 x939))
(assert (x1312 x85))
(assert (x1312 x64))
(assert (x1312 x893))
(assert (= (=> (= x628 (= 274184521717934524641157099916833587231 x1483)) (and (=> (and (= 1 x1932) (< 0 x659) (= x1301 (x188 (+ x817 320))) (= x1946 (x1215 x1422)) (= x1154 (x692 224)) (not (= x1104 4062139261)) (= (x188 (+ 384 x817)) x730) (= (x692 256) x392) (<= x1972 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x745 (x692 192)) (= (x692 128) x1274) (not (> 4 x1434)) (= x618 (x692 128)) (>= x2112 0) (= x1703 x1434) (< x2112 1208925819614629174706176) (not (> 2362581449 x1104)) x628 (<= x1349 1208925819614629174706175) (= 160 x4) (<= x2112 1208925819614629174706175) (not (= x1104 3257672857)) (>= x1972 0) (= x613 (x692 256)) (<= 0 x1251) (> 1208925819614629174706176 x1349) (>= x1946 0) (= (x1855 (x21 274184521717934524641157099916833587231)) x659) (= (x692 160) x685) (= (x692 224) x1486) (= (x188 (+ 288 x817)) x159) (= 4 x1434) (= x1104 4272920204) (= (x1039 (x21 x1494) (x1134 1) 0) x1422) (= 115197700812830431890159100217698998050002284567939525164234024451216521560064 x1357) (= x301 (x692 192)) (<= 0 x1349) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1251) (= (x188 (+ 352 x817)) x1403) (not (= x1104 2362581449)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1946) (= (x692 160) x163)) x1609) (=> (not x628) x1050))) x1332))
(assert (=> (> (+ 10000 1) x1565) (= (x21 x1565) (x1134 x1565))))
(assert (= (x21 4072298103) (x1134 4072298103)))
(assert (x1312 x1062))
(assert (x1312 x1309))
(assert (x1312 x988))
(assert (x1688 x1057))
(assert (= (x335 (x21 x215)) x215))
(assert (= (x21 20282409603651670423947251286015) (x1134 20282409603651670423947251286015)))
(assert (x1477 x886))
(assert (x1477 x346))
(assert (x1312 x97))
(assert (x1312 x1400))
(assert (x1312 x695))
(assert (x1312 x241))
(assert (x1312 x862))
(assert (x1477 x1376))
(assert (x1887 x1671 x1184))
(assert (x1312 x1504))
(assert (x1312 x1264))
(assert (x1477 x2034))
(assert (x1312 x217))
(assert (x1312 x1851))
(assert (x1312 x366))
(assert (x1312 x1853))
(assert (x1312 x1112))
(assert (x1477 x741))
(assert (x1312 x974))
(assert (x867 x938 x949))
(assert (x1477 x1536))
(assert (x1312 x1803))
(assert (x1312 x875))
(assert (x251 x438 x1231))
(assert (x1312 x330))
(assert (x1312 x487))
(assert (x1312 x1535))
(assert (x1312 x1096))
(assert (x1477 x1072))
(assert (x1312 x2035))
(assert (x1312 x937))
(assert (x1312 x1001))
(assert (x1477 x513))
(assert (x1312 x2056))
(assert (= (x335 (x1134 950698303)) 950698303))
(assert (x1312 x905))
(assert (x867 x1376 x833))
(assert (x1312 x827))
(assert (x1312 x879))
(assert (x1312 x736))
(assert (x1477 x1948))
(assert (x1312 x1141))
(assert (= (x335 (x21 274184521717934524641157099916833587233)) 274184521717934524641157099916833587233))
(assert (x1312 x1727))
(assert (x1312 x851))
(assert (x543 x451))
(assert (= (x1134 274184521717934524641157099916833587229) (x21 274184521717934524641157099916833587229)))
(assert (x1267 x518 x2105))
(assert (x1312 x1300))
(assert (x1477 18446744073709551615))
(assert (x1312 x2065))
(assert (= (ite (and x588 x492) (x503 256) (x1872 256)) (x142 256)))
(assert (x1312 x1639))
(assert (x1312 x1348))
(assert (x1312 x118))
(assert (= (x335 (x1134 806251499)) 806251499))
(assert (x1477 x1240))
(assert (x1312 x348))
(assert (x1312 x699))
(assert (x1477 x260))
(assert (= (x335 (x1134 340282366920938463463374607431768211456)) 340282366920938463463374607431768211456))
(assert (x1312 x1790))
(assert (x1477 x254))
(assert (= 3257672857 (x335 (x1134 3257672857))))
(assert (= (x2096 x703) (ite (= x703 x20) 115197700812830431890159100217698998050002284567939525164234024451216521560064 (x1620 x703))))
(assert (x1312 x162))
(assert (x1887 x228 x1553))
(assert (x1312 x2110))
(assert (= x2116 (=> (and (= x1845 (x958 x1585)) (= (= x862 274184521717934524641157099916833587233) x854) (= x862 (x1649 1461501637330902918203684832716283019655932542975 x1400)) (= x1337 128)) (and (=> (and (= (x1740 256) x1903) (not (< x85 4)) (= (x1740 160) x625) (<= x1838 1208925819614629174706175) (= 4 x85) (= 115197700812830431890159100217698998050002284567939525164234024451216521560064 x858) (<= x2080 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= x591 115792089237316195423570985008687907853269984665640564039457584007913129639935) x854 (= x1619 (x1740 160)) (= (x1740 192) x1776) (= 4272920204 x1789) (< x648 1208925819614629174706176) (= x1258 (x153 x973)) (= x234 160) (< x1838 1208925819614629174706176) (<= 0 x1258) (not (< x1789 2362581449)) (= x973 (x1039 (x21 x1494) (x1134 1) 0)) (not (= 4062139261 x1789)) (= (x1855 (x21 274184521717934524641157099916833587233)) x2081) (= x1613 (x1740 192)) (<= x648 1208925819614629174706175) (= x2113 (x1740 224)) (not (= 3257672857 x1789)) (= x803 (x1740 224)) (<= 0 x648) (= 1 x1779) (not (= x1789 2362581449)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1258) (>= x591 0) (< 0 x2081) (= (x1740 128) x1418) (= (x1740 256) x1727) (= (x1740 128) x1385) (= x85 4) (>= x1838 0) (>= x2080 0)) x1625) (=> (not x854) x1125)))))
(assert (x1312 x1705))
(assert (x543 x337))
(assert (x1312 x1478))
(assert (= (x335 (x1134 115197700812830431890159100217698998050002284567939525164234024451216521560064)) 115197700812830431890159100217698998050002284567939525164234024451216521560064))
(assert (x1312 x191))
(assert (x1312 x1776))
(assert (= (and x1517 (not x1844)) x1505))
(assert (x1312 x1602))
(assert (x1312 x387))
(assert (x1688 x528))
(assert (x1312 x1923))
(assert (= (x335 (x1134 57896044618658097711785492504343953926634992332820282019728792003956564819967)) 57896044618658097711785492504343953926634992332820282019728792003956564819967))
(assert (= 0 (x1915 x1261)))
(assert (x1312 x1723))
(assert (x1312 x1083))
(assert (= (+ 1 (x335 x431)) (x335 (x1329 x431 1))))
(assert (x1477 x2078))
(assert (x1312 x1451))
(assert (x867 x398 x1074))
(assert (x1312 x781))
(assert (x1312 x1287))
(assert (x1312 x1291))
(assert (x1312 x708))
(assert (x1267 x587 x1273))
(assert (x1312 x1529))
(assert (= (x1134 2835717307) (x21 2835717307)))
(assert (x1477 x228))
(assert (x1312 x1577))
(assert (x1312 x287))
(assert (x1267 x1751 x617))
(assert (x867 x1963 x474))
(assert (= (x21 3122421376) (x1134 3122421376)))
(assert (x1312 x1482))
(assert (x687 x1592 x1072))
(assert (= (ite (= x113 288) 115197700812830431890159100217698998050002284567939525164234024451216521560064 (x1808 x113)) (x1774 x113)))
(assert (x1312 x443))
(assert (= (x335 (x1134 65535)) 65535))
(assert (= x988 (x335 (x21 x988))))
(assert (x1312 x685))
(assert (x1267 x1585 x1116))
(assert (=> (< (- x849 1) 10000) (= (x21 x849) (x1134 x849))))
(assert (x1312 x1196))
(assert (x1312 x726))
(assert (= (x335 (x1134 3950285521)) 3950285521))
(assert (x1312 x397))
(assert (x1312 x1949))
(assert (= (=> (and (= (x2127 x1813) x1083) (= x2045 x421) (= x1813 (x188 (+ x1557 288))) (= (ite (or (and (< x294 x421) (= (<= x294 57896044618658097711785492504343953926634992332820282019728792003956564819967) (<= x421 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (and (> x294 57896044618658097711785492504343953926634992332820282019728792003956564819967) (<= x421 57896044618658097711785492504343953926634992332820282019728792003956564819967))) 1 0) x372) (>= 1208925819614629174706175 x1398) (= (x1649 340282366920938463463374607431768211455 x1083) x124) (not (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x421)) (= x921 (and (> x1083 0) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1083) true))) (= (x1649 x1762 x372) x1597) (= (x969 (- 57896044618658097711785492504343953926634992332820282019728792003956564819968 x777)) x455) (= (x188 (+ x747 64)) x1784) (= (x969 (- 57896044618658097711785492504343953926634992332820282019728792003956564819967 x777)) x294) (= 0 x110) (= (* x2132 x1636) x2045) (not (or (> x1509 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (< x1509 160) (= (<= x1509 57896044618658097711785492504343953926634992332820282019728792003956564819967) true)))) (= (x188 (+ 64 x65)) x1076) (= x2107 (x188 (+ x777 x421))) (= (x2127 x65) x1398) (= (ite (or (and (> 0 x777) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x777) true)) (> x777 57896044618658097711785492504343953926634992332820282019728792003956564819967)) 1 0) x1004) (<= x1858 1208925819614629174706175) (= x110 (x1649 x1004 x272)) (= x272 (ite (or (and (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x455) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x421)) (and (< x421 x455) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x455) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x421)))) 1 0)) (< (* x2132 x1636) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x1858 (x2127 x1550)) (= x275 (x1041 x103)) (= x2132 (uninterp_mod (* x915 x124) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (not (ite x253 x253 (and (= (<= x1083 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (> x1083 170141183460469231731687303715884105727)))) (= (x424 x1784) x60) (= x1550 (x188 (+ x1076 64))) (= x1819 x2107) (= 0 x1597) (= x1762 (ite (not x743) 1 0)) (= x1636 (x1649 18446744073709551615 x60)) (= x743 (or (> x777 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (> 0 x777) (= true (<= x777 57896044618658097711785492504343953926634992332820282019728792003956564819967))))) (not (= x1531 0)) (= x253 (not x921)) (= x103 (x188 (+ 64 x1323)))) x1600) x1738))
(assert (= x361 (=> (and (= x2034 (x1620 320)) (<= x1673 1208925819614629174706175) (= (x1620 288) x2099) (= x1673 (x1620 416)) (>= 1208925819614629174706175 x2099) (= x1402 (x1649 115792089237316195423570985008687907853269984665640564039457584007913129639904 x220)) (= x1252 (> x1056 0)) (not (or (and (= (<= x1203 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (> 160 x1203)) (> x1203 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (= (x188 (+ 288 x1402)) x864) (= x220 (x188 (+ 31 x1203))) (not (ite x580 x580 (and (< 170141183460469231731687303715884105727 x2034) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2034) true)))) (= x1650 (x1649 340282366920938463463374607431768211455 x2034)) (= x580 (not x579)) (= x1056 (x1649 255 x498)) (not (= x1645 0)) (= x149 (uninterp_mod (* x1650 (x1811 x883)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= x2091 0) (= x579 (and (> x2034 0) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2034))))) (and (=> (and (= x1279 x864) (= x2106 x149) (not x1252)) x2028) (=> x1252 x667)))))
(assert (= x675 (=> (= x1128 (or (> x1545 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (> 0 x1545) (= true (<= x1545 57896044618658097711785492504343953926634992332820282019728792003956564819967))))) (and (=> (and (= x1990 x682) (= x1192 1) (not x1128)) x8) (=> x1128 x282)))))
(assert (= (and x686 x1128) x831))
(assert (x1887 x1624 x792))
(assert (x1477 x557))
(assert (x1312 x1485))
(assert (x543 x889))
(assert (x1312 x176))
(assert (x1267 x2118 x303))
(assert (x1312 x2058))
(assert (x1267 x238 x871))
(assert (x1312 x859))
(assert (x2101 x1845))
(assert (= (=> (= x632 (= 274184521717934524641157099916833587231 x1172)) (and (=> (not x632) x154) (=> (and (not (= 4062139261 x939)) (<= 0 x1349) (= x875 (x1654 128)) (= x413 4) (= (x1654 160) x1792) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1275) (< 0 x1622) (= 1 x1803) (>= x2112 0) (= x1622 (x1855 (x21 274184521717934524641157099916833587231))) (= (x1039 (x21 x1339) (x1134 1) 0) x540) (<= 0 x1972) (= 115197700812830431890159100217698998050002284567939525164234024451216521560064 x359) (<= x1349 1208925819614629174706175) (= (x1654 192) x1174) (> 1208925819614629174706176 x1349) (not (= x939 3257672857)) (not (> 4 x413)) (= x1999 (x1654 128)) (= x413 4) (= (x1654 256) x387) (<= x1251 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x1654 160) x851) (>= x1251 0) x632 (> 1208925819614629174706176 x2112) (= (x1654 224) x1099) (= (x1654 256) x390) (= x1922 160) (<= x2112 1208925819614629174706175) (<= 0 x1275) (not (> 2362581449 x939)) (= (x1654 192) x1539) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1972) (= x939 4272920204) (not (= x939 2362581449)) (= x484 (x1654 224)) (= (x1215 x540) x1275)) x1898))) x278))
(assert (x1312 x986))
(assert (x1312 x1823))
(assert (= x1322 (=> (and (= (x1649 65535 x64) x1610) (<= 0 x827) (= (ite (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x995) x995 (- x995 115792089237316195423570985008687907853269984665640564039457584007913129639936)) x2006) (= x1664 (or (and (< (x958 x887) 0) (= (<= (x958 x887) 57896044618658097711785492504343953926634992332820282019728792003956564819967) true)) (> (x958 x887) 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (= (x2097 256) x407) (= x97 (x1649 255 x407)) (= x914 (x958 x1451)) (= x412 x332) (= (x958 x827) x995) (= x1504 (x320 192)) (= x1420 (x958 x844)) (= x64 (x2007 224)) (<= x827 20282409603651670423947251286015) (= (x1649 20282409603651670423947251286015 x914) x844) (= (x1135 x1095) x827) (= (x367 128) x1451) (= x1295 (x1649 18446744073709551615 x1504)) (= x688 (x1768 160)) (= (x1649 18446744073709551615 x688) x140) (= x627 (ite (<= x1420 57896044618658097711785492504343953926634992332820282019728792003956564819967) x1420 (- x1420 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (+ x332 x627) x1344) (= x1095 (x1039 (x21 x758) (x1134 5) 0))) (and (=> (and (not x1664) (= x184 288)) x131) (=> (and (= (x958 x404) x1371) (<= 0 x849) (= x1436 (x1649 20282409603651670423947251286015 x836)) (<= x849 65535) (= x404 (x1532 x852)) (= (or (> x1371 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1371)) (< x1371 0))) x1519) (>= x404 0) (= x209 (x958 x887)) (> 20282409603651670423947251286016 x404) (= (x969 (- 0 x209)) x836) (not (> x1721 x1436)) (<= x404 20282409603651670423947251286015) (= (x1039 (x21 x758) (x1134 5) 0) x852) (= (x1039 (x21 x758) (x1134 5) 0) x943) (or (and (= x2077 (x1649 20282409603651670423947251286015 x1371)) (= x1756 (* x2077 x566)) (not (or (and (> 0 x1371) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1371) true)) (> x1371 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (not x1519) (= x1593 x1756) (> 18446744073709551616 x566) (<= 0 x566) (>= 18446744073709551615 x566) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (* x566 x2077)) (= x1558 x1593) (not (< 10141204801825835211973625643007 x435)) (= (x1649 20282409603651670423947251286015 x1593) x435)) (and (= (* x1726 x1384) x1023) (= x1023 x1543) x1519 (not (> x1348 10141204801825835211973625643007)) (= x787 (x969 (- 0 x1535))) (< (* x1726 x1384) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (not (= x1371 115792089237316195423570985008687907853269984655499359237631748795939503996928)) (= x787 x1558) (= x1535 (x958 x1543)) (not (= 115792089237316195423570985008687907853269984655499359237631748795939503996928 x1535)) (<= x1726 18446744073709551615) (<= 0 x1726) (not (or (and (= true (<= x1456 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (< x1456 0)) (> x1456 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (= (x1649 20282409603651670423947251286015 x1543) x1348) (= (x969 (- 0 x1371)) x1456) (< x1726 18446744073709551616) (= (x1649 20282409603651670423947251286015 x1456) x1384))) (> 65536 x849) (not (= x209 115792089237316195423570985008687907853269984655499359237631748795939503996928)) x1664 (= (x1802 x943) x849)) x987)))))
(assert (x1312 x391))
(assert (x1312 x934))
(assert (x1477 x927))
(assert (x1312 x895))
(assert (x1312 x1860))
(assert (x1312 x1759))
(assert (x1312 x1106))
(assert (x1312 x849))
(assert (x1312 x807))
(assert (x1312 x1203))
(assert (x1312 x1726))
(assert (x1477 x708))
(assert (x1312 x828))
(assert (x1312 x933))
(assert (x1312 x803))
(assert (x1312 x1864))
(assert (x1477 x1815))
(assert (= 0 (x416 x1021)))
(assert (x1312 x735))
(assert (x1312 x1470))
(assert (x1312 x1073))
(assert (x1312 x2072))
(assert (x1312 x1813))
(assert (x1312 x776))
(assert (x1312 x1673))
(assert (x1312 x2053))
(assert (=> (< (- x758 1) 10000) (= (x1134 x758) (x21 x758))))
(assert (x1312 x1745))
(assert (x1312 x228))
(assert (x251 x2104 x401))
(assert (= 115792089237316195423570985008687907853269984665640564039457584007913129639904 (x335 (x1134 115792089237316195423570985008687907853269984665640564039457584007913129639904))))
(assert (x1688 274184521717934524641157099916833587225))
(assert (= 2059964113 (x335 (x1134 2059964113))))
(assert (= (or (and x1373 x62) (and x572 x854)) x237))
(assert (= x1696 (=> (and (= (x2103 x1294) x276) (<= x1368 1461501637330902918203684832716283019655932542975) (= x217 (x188 (+ 64 x1122))) (<= 0 x769) (= (x188 (+ x217 64)) x896) (= x1633 (x1307 x1314)) (<= x2114 340282366920938463463374607431768211455) (= (x188 (+ 544 x1402)) x1294) (>= 18446744073709551615 x172) (> 18446744073709551616 x172) (= 0 x1397) (>= x974 0) (= (x1329 x1314 1) x789) (= x1590 (x1649 1461501637330902918203684832716283019655932542975 x1767)) (= x640 0) (= (x1651 x789) x974) (> 18446744073709551616 x694) (= x640 (x1649 255 x276)) (= x151 (x1329 x789 2)) (> 18446744073709551616 x769) (= (x2010 x156) x1767) (>= 18446744073709551615 x974) (= x20 (x188 (+ x864 512))) (<= 0 x2114) (<= x1257 1461501637330902918203684832716283019655932542975) (= x1122 (x188 (+ 64 x1294))) (= x1985 (x188 (+ x1882 64))) (= 0 x214) (>= 18446744073709551615 x694) (= (x1159 x603) x1257) (= x603 (x1039 (x1134 0) (x1134 9) 0)) (= x172 (x1889 x1712)) (> 1461501637330902918203684832716283019655932542976 x1097) (<= 0 x1097) (= (x1793 x1712) x769) (= (x1881 x1712) x694) (= (x1329 x1314 2) x1712) (= x504 (x396 x151)) (= (x188 (+ 288 x864)) x156) (= (x1649 1461501637330902918203684832716283019655932542975 x2002) x1704) (= x1257 x1590) (> 340282366920938463463374607431768211456 x2114) (<= x769 18446744073709551615) (>= x1633 0) (>= x1368 0) (= x2060 (x188 (+ x156 64))) (= (= 274184521717934524641157099916833587233 x910) x1358) (= x2002 (x2010 x1591)) (= x1368 (x1193 x789)) (= (x1144 x166) x1624) (< x1257 1461501637330902918203684832716283019655932542976) (>= 1461501637330902918203684832716283019655932542975 x1097) (>= x1257 0) (= x1805 4) (= (x112 x1314) x1097) (<= x504 340282366920938463463374607431768211455) (>= 255 x1633) (> 256 x1633) (= (x1649 1461501637330902918203684832716283019655932542975 x1624) x910) (>= x694 0) (> 18446744073709551616 x974) (= x1314 (x1039 (x1134 0) (x1134 10) 0)) (> 340282366920938463463374607431768211456 x504) (= (x188 (+ x1294 64)) x166) (> 1461501637330902918203684832716283019655932542976 x1368) (<= 0 x172) (= x1591 (x188 (+ 288 x864))) (<= 0 x504) (= (x1039 (x21 x1704) x1503 0) x1976) (= x1882 (x188 (+ 64 x2060))) (= x2114 (x1236 x1976)) (= (x1039 (x21 x758) (x1134 6) 0) x1503)) (and (=> (and (= 160 x874) (= x989 4272920204) (= x829 (x481 256)) (= (x481 160) x1747) (= x1006 (x1039 (x21 x1339) (x1134 1) 0)) (not (= 3257672857 x989)) (= x1930 1) (= (x481 224) x263) (= 4 x1094) (<= 0 x591) (< 0 x1618) (>= 1208925819614629174706175 x648) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x591) (<= 0 x2080) (= (x481 128) x1473) (= x1228 (x188 (+ 352 x1294))) (= x1899 (x188 (+ 384 x1294))) (<= 0 x1838) (= x453 (x188 (+ x1294 288))) (= x1094 x1805) (not (= x989 2362581449)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x809) (< x648 1208925819614629174706176) (= (x481 192) x961) (< x1838 1208925819614629174706176) (not (> 4 x1094)) (= x328 (x481 128)) (= x2041 115197700812830431890159100217698998050002284567939525164234024451216521560064) (not (> 2362581449 x989)) (<= 0 x809) (= x1291 (x481 160)) (not (= 4062139261 x989)) (<= 0 x648) (= (x1855 (x21 274184521717934524641157099916833587233)) x1618) (<= x2080 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x507 (x481 224)) (= (x153 x1006) x809) (= (x481 256) x1529) (= (x188 (+ 320 x1294)) x456) (<= x1838 1208925819614629174706175) (= x1949 (x481 192)) x1358) x127) (=> (not x1358) x1938)))))
(assert (x1312 x349))
(assert (x1312 x1425))
(assert (=> (> (+ 10000 1) x908) (= (x21 x908) (x1134 x908))))
(assert (= x1517 (or x138 (and (not x1128) x686))))
(assert (x1312 x1010))
(assert (x1312 x159))
(assert (x1312 x2122))
(assert (= (x335 (x1134 76450787359836037641860180984291677749980919077056822294353438043884394381312)) 76450787359836037641860180984291677749980919077056822294353438043884394381312))
(assert (x1267 x1558 x1105))
(assert (= 2514000705 (x335 (x1134 2514000705))))
(assert (x1312 x1038))
(assert (= (=> (and (= x1891 (ite x1351 1 0)) (= (= 0 x651) x1971) (= (not x1971) x1351)) (=> (and (<= x1401 1461501637330902918203684832716283019655932542975) (not (= 4072298103 x1440)) (>= x1470 0) (< 67 x1563) (= x771 x1470) (<= x297 1461501637330902918203684832716283019655932542975) (= x1042 x1940) (= x1106 x758) (not (= x1440 4072275384)) (= true x594) (= x1694 (x969 (- x1563 4))) (not (< x1440 3638949393)) (<= x1106 1461501637330902918203684832716283019655932542975) (<= 0 x1401) (not (< x1440 3889878717)) (not (= 3950285521 x1440)) (< 0 x1381) (= x515 x771) (not (< x1440 2059964113)) (= x297 x1705) (= x1471 x1457) (= x1632 x889) (not (> 3122421376 x1440)) (= x889 x1253) x1956 (not x1471) (= (x1855 (x21 274184521717934524641157099916833587209)) x1381) (= x1956 (or x772 (not x1293))) (= x1339 x882) (not (< x1563 4)) (= x772 x2120) (= 0 x1940) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1563)) (not (or (and (= true (<= x1694 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (< x1694 64)) (> x1694 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (>= x1106 0) (= 4093572003 x1440) (or (and (>= 255 x626) (not x594) (= x626 (x698 x1037)) (= x626 x179) (<= 0 x626) (= (x1039 (x21 x758) (x1134 3) 0) x1378) (> 256 x626) (= (x1039 (x21 x758) x1378 0) x1037)) (and x594 (= x179 (ite x594 1 0)))) (>= 1461501637330902918203684832716283019655932542975 x1470) (= x736 x297) (= (not (= x1891 0)) x2120) (not (= x1440 3889878717)) (= x437 x1471)) x1977)) x1382))
(assert (x1312 x651))
(assert (x1312 x613))
(assert (x1312 x886))
(assert (x1312 x1985))
(assert (= (x1978 192) x18))
(assert (x1312 x558))
(assert (= (x1134 1889567281) (x21 1889567281)))
(assert (x1312 x1377))
(assert (=> (< (- x988 1) 10000) (= (x1134 x988) (x21 x988))))
(assert (x1312 x1518))
(assert (x1312 x1622))
(assert (x1477 x1593))
(assert (x867 x1676 x31))
(assert (= (or (and x950 x307) (and x872 x1410)) x384))
(assert (x1477 x1558))
(assert (x1477 x1702))
(assert (x1312 x1157))
(assert (= x462 true))
(assert (x1312 x337))
(assert (x1312 x825))
(assert (x1312 x370))
(assert (x1312 x1947))
(assert (x1312 x2015))
(assert (x1267 x1573 x923))
(assert (x1312 x1611))
(assert (= x62 (and x572 (not x854))))
(assert (= (x1549 x285) 0))
(assert (x1312 x1047))
(assert (x1312 x2119))
(assert (x1312 x1497))
(assert (= 274184521717934524641157099916833587231 (x335 (x1134 274184521717934524641157099916833587231))))
(assert (= (or x1929 (and (not x970) x1388)) x138))
(assert (x1312 x1592))
(assert (= true x135))
(assert (x1477 x407))
(assert (x1312 x285))
(assert (x1312 x752))
(assert (x1312 x1443))
(assert (x1312 x1868))
(assert (x1312 x707))
(assert (x1477 x498))
(assert (x687 x1762 x372))
(assert (x1312 x1186))
(assert (x1312 x1070))
(assert (x1887 x1815 x740))
(assert (x1477 x1319))
(assert (x1312 x1))
(assert (x1312 x1707))
(assert (= (x1134 65535) (x21 65535)))
(assert (x1312 x1356))
(assert (x1267 x1240 x493))
(assert (x1312 x2002))
(assert (x1477 x2104))
(assert (= (=> (and (= (x188 (+ 64 x1906)) x113) (= x952 (or (and (= (<= x149 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (> 0 x149)) (> x149 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (>= 1208925819614629174706175 x1711) (<= x1953 1208925819614629174706175) (= x615 (x1649 340282366920938463463374607431768211455 x505)) (= x2056 (x1649 18446744073709551615 x513)) (= (x188 (+ x1591 64)) x1218) (= (x1649 x211 x1665) x538) (= x122 (not x1277)) (= 0 x538) (not (= x1930 0)) (= x703 (x188 (+ 288 x1294))) (= (x315 x1596) x513) (= (and (= (<= x505 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (< 0 x505)) x1277) (not (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x874) (and (< x874 160) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x874) true)))) (= (uninterp_mod (* x615 x2114) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x1797) (= (x1649 x1592 x1072) x1129) (= (x188 (+ x149 x1008)) x545) (= x211 (ite (not x952) 1 0)) (= x1906 (x188 (+ 64 x20))) (= x1665 (ite (or (and (= (<= x1595 57896044618658097711785492504343953926634992332820282019728792003956564819967) (<= x1008 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (> x1008 x1595)) (and (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1595) (<= x1008 57896044618658097711785492504343953926634992332820282019728792003956564819967))) 1 0)) (= (x188 (+ x874 31)) x1328) (= (x979 x703) x505) (= x1711 (x979 x20)) (= (* x1797 x2056) x283) (= x1578 (x188 (+ x20 x699))) (= x699 (x1649 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1328)) (= x1008 x283) (= 0 x1129) (not (ite x122 x122 (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x505)) (> x505 170141183460469231731687303715884105727)))) (= x1072 (ite (or (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1616) (<= x1008 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (< x1008 x1616)) (and (> x1008 57896044618658097711785492504343953926634992332820282019728792003956564819967) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1616))) 1 0)) (= (x669 x1218) x329) (not (> x1008 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (= x1595 (x969 (- 57896044618658097711785492504343953926634992332820282019728792003956564819967 x149))) (= (x969 (- 57896044618658097711785492504343953926634992332820282019728792003956564819968 x149)) x1616) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (* x1797 x2056)) (= x1596 (x188 (+ x166 64))) (= x521 x545) (= (x979 x113) x1953) (= x486 x1578) (= (ite (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x149) (and (< x149 0) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x149)))) 1 0) x1592)) x1554) x127))
(assert (x1312 x409))
(assert (x1312 x951))
(assert (x1312 x1886))
(assert (x1312 x420))
(assert (x1312 x592))
(assert (x1312 x2132))
(assert (x1267 x550 x1697))
(assert (= (x2084 x479) (ite (= x479 x1601) 115197700812830431890159100217698998050002284567939525164234024451216521560064 (x142 x479))))
(assert (x1312 x450))
(assert (= (=> (and (= x883 (x958 x1558)) (= x559 (x1649 1461501637330902918203684832716283019655932542975 x1400)) (= (= x559 274184521717934524641157099916833587233) x950) (= 288 x1605)) (and (=> (and (= x1245 (x1217 160)) (= 115197700812830431890159100217698998050002284567939525164234024451216521560064 x998) (not (= 2362581449 x1455)) (= x2043 (x1855 (x21 274184521717934524641157099916833587233))) (>= x591 0) (= x1564 (x1039 (x21 x1339) (x1134 1) 0)) (not (< x262 4)) (= (x1217 128) x1943) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x591) x950 (> 1208925819614629174706176 x1838) (= 4 x262) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2080) (= (x1217 256) x1448) (= x2110 (x1217 224)) (= x991 (x1217 224)) (not (= x1455 4062139261)) (<= x1838 1208925819614629174706175) (= x1842 (x153 x1564)) (= x1203 160) (= x649 (x1217 256)) (= 1 x1645) (= x262 4) (= (x1217 192) x1254) (= 4272920204 x1455) (= (x1217 128) x50) (<= x1842 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= 0 x1842) (= (x1217 160) x230) (>= x2080 0) (>= 1208925819614629174706175 x648) (> 1208925819614629174706176 x648) (not (= 3257672857 x1455)) (>= x648 0) (< 0 x2043) (not (> 2362581449 x1455)) (= (x1217 192) x1016) (>= x1838 0)) x361) (=> (not x950) x756))) x987))
(assert (x1312 x521))
(assert (x1312 x1558))
(assert (x1477 x1665))
(assert (x1477 x1369))
(assert (x1005 x708 x1877))
(assert (x1477 x512))
(assert (x1312 x839))
(assert (x1477 x357))
(assert (x1688 x839))
(assert (x1312 x509))
(assert (x1312 x1199))
(assert (x1312 x1650))
(assert (=> (> (+ 10000 1) x997) (= (x21 x997) (x1134 x997))))
(assert (= x8 (=> (and (> x1192 0) (= x1219 (x188 (+ 36 x1990))) (= x2053 (x188 (+ 68 x1990))) (= x1864 (x1649 340282366920938463463374607431768211455 x889)) (= (= x2027 274184521717934524641157099916833587229) x1844) (= x116 (x188 (+ x1990 4))) (= (x1649 1461501637330902918203684832716283019655932542975 x297) x2027) (= x305 (x969 (- x2053 x1990)))) (and (=> (and (= x830 x305) (= x54 1) (= x279 2835717307) x1844 (not (< x279 826074471)) (= x1108 (x969 (- x947 x475))) (= 274184521717934524641157099916833587209 x1157) (<= 0 x947) (< (+ x599 x717) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (>= x599 0) (= x475 x1864) (= (or (and (= true (<= x600 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (> 64 x600)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x600)) x1974) (= 76450787359836037641860180984291677749980919077056822294353438043884394381312 x1885) (= x1945 (+ x959 x1874)) (= x1520 (x1039 (x21 274184521717934524641157099916833587209) (x1134 1) 0)) (>= 1461501637330902918203684832716283019655932542975 x570) (not (= x279 826074471)) (= x717 x1874) (> x754 0) (= x717 x475) (= x1317 32) (<= x947 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x499 x496) x599) (not x1974) (= 68 x830) (= 274184521717934524641157099916833587209 x536) (= x600 (x969 (- x830 4))) (= (x1649 1461501637330902918203684832716283019655932542975 x570) x467) (= (x1855 (x21 274184521717934524641157099916833587229)) x754) (not x1110) (= x1106 x570) (= x1110 (< x947 x475)) (= (x1039 (x21 274184521717934524641157099916833587209) (x1134 1) 0) x783) (= (x1039 (x21 x467) (x1134 1) 0) x496) (= x599 x959) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x599) (not (= x279 2514000705)) (= x1868 (x1649 1461501637330902918203684832716283019655932542975 x570)) (not (< x830 4)) (not (= x279 1889567281)) (= (x838 x783) x947)) x924) (=> (not x1844) x394)))))
(assert (= (or x1679 (and (not x1281) x1750)) x510))
(assert (x1312 x1624))
(assert (x1312 x407))
(assert (x1312 x469))
(assert (x1312 x816))
(assert (x1267 x260 x14))
(assert (= (and (not x1230) x1433) x1077))
(assert (= true x508))
(assert (x1312 x2003))
(assert (x1312 x605))
(assert (x1312 x734))
(assert (x1312 x1789))
(assert (x1312 x1417))
(assert (= x1625 (=> (and (= (uninterp_mod (* (x1811 x1845) x1984) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x1884) (= (x1649 255 x498) x738) (= x1305 (not x165)) (= (x188 (+ 31 x234)) x586) (= (x955 160) x1369) (= x1284 (x1649 115792089237316195423570985008687907853269984665640564039457584007913129639904 x586)) (= x1111 (x188 (+ 128 x1284))) (>= 1208925819614629174706175 x1629) (= (x955 256) x1629) (not (= 0 x1779)) (= (> x738 0) x1475) (= x2035 (x955 128)) (not (or (and (< x234 160) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x234))) (> x234 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (= x1984 (x1649 340282366920938463463374607431768211455 x1369)) (<= x2035 1208925819614629174706175) (= 0 x304) (not (ite x1305 x1305 (and (< 170141183460469231731687303715884105727 x1369) (= (<= x1369 57896044618658097711785492504343953926634992332820282019728792003956564819967) true)))) (= x165 (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1369) true) (> x1369 0)))) (and (=> (and (= x1884 x1809) (not x1475)) x1515) (=> x1475 x1089)))))
(assert (x1312 x1545))
(assert (= x1168 (=> (and (= 128 x879) (= (x958 x451) x302) (= x588 (= x1172 274184521717934524641157099916833587233)) (= (x1649 1461501637330902918203684832716283019655932542975 x1400) x1172)) (and (=> (not x588) x278) (=> (and (>= 1208925819614629174706175 x1838) (> 1208925819614629174706176 x1838) (not (= x1196 4062139261)) (> x383 0) (>= 1208925819614629174706175 x648) (= (x1027 128) x1542) (= (x1027 192) x1757) (= 4 x884) (= (x1027 128) x601) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x565) (>= x591 0) (= (x1855 (x21 274184521717934524641157099916833587233)) x383) (>= x1838 0) (= (x1027 224) x1270) (= (x1039 (x21 x1339) (x1134 1) 0) x213) (<= 0 x565) (<= x2080 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x2115 (x1027 256)) (>= x2080 0) x588 (= x1922 160) (= x825 (x1027 224)) (= x565 (x153 x213)) (= x884 4) (<= x591 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x1657 (x1027 160)) (= 1 x1803) (= 4272920204 x1196) (not (= x1196 2362581449)) (= (x1027 192) x1243) (= x1425 (x1027 160)) (<= 0 x648) (not (< x884 4)) (not (> 2362581449 x1196)) (< x648 1208925819614629174706176) (= x229 115197700812830431890159100217698998050002284567939525164234024451216521560064) (= (x1027 256) x1065) (not (= x1196 3257672857))) x1898)))))
(assert (= (x335 (x21 x1339)) x1339))
(assert (= (x1523 x81) (ite (= x89 x81) 115197700812830431890159100217698998050002284567939525164234024451216521560064 (x955 x81))))
(assert (= (x21 1099511627775) (x1134 1099511627775)))
(assert (x1312 x81))
(assert (x1312 x306))
(assert (x1312 x684))
(assert (= x1679 (or x770 (and x237 (not x1475)))))
(assert (= (or (and x1133 x2057) (and x343 x1084)) x2125))
(assert (x1887 x967 x452))
(assert (x1312 x526))
(assert (x1312 x586))
(assert (= (and x1664 x1987) x307))
(assert (x1312 x1746))
(assert (= 0 (x1683 x1218)))
(assert (= (x335 (x21 x839)) x839))
(assert (x1312 x115))
(assert (=> (< (- x93 1) 10000) (= (x1134 x93) (x21 x93))))
(assert (= (or (and x1570 x46) (and x2021 x628)) x477))
(assert (x1312 x310))
(assert (= 0 (x1313 x1823)))
(assert (= (x1523 x1684) (ite (= x1684 x89) 115197700812830431890159100217698998050002284567939525164234024451216521560064 (x955 x1684))))
(assert (x1312 x2134))
(assert (= (or x525 (and (not x1574) x2125)) x478))
(assert (x1312 x1903))
(assert (x1312 x1294))
(assert (x1312 x353))
(assert (= (x21 840395849) (x1134 840395849)))
(assert (x1312 x1389))
(assert (x1267 x2015 x400))
(assert (= (and x1574 x2125) x655))
(assert (x1312 x1659))
(assert (x1312 x777))
(assert (x1312 x411))
(assert (x1312 x484))
(assert (= (and x831 (not x676)) x888))
(assert (x543 x495))
(assert (x1312 x845))
(assert (= 274184521717934524641157099916833587225 (x335 (x1134 274184521717934524641157099916833587225))))
(assert (x1312 x1150))
(assert (= 274184521717934524641157099916833587242 (x335 (x1134 274184521717934524641157099916833587242))))
(assert (x1312 x791))
(assert (x1312 x1214))
(assert (= 20282409603651670423947251286015 (x335 (x1134 20282409603651670423947251286015))))
(assert (x1312 x536))
(assert (x1312 x1486))
(assert (x1312 x110))
(assert (=> (> (+ 10000 1) x1057) (= (x21 x1057) (x1134 x1057))))
(assert (x1477 x174))
(assert (x1312 x143))
(assert (x687 x211 x1665))
(assert (x1312 x1884))
(assert (x1477 x1799))
(assert (x1312 x1241))
(assert (x1312 x1751))
(assert (= (x1450 x1813) (ite (= x1813 128) 115197700812830431890159100217698998050002284567939525164234024451216521560064 (x1276 x1813))))
(assert (x1688 x467))
(assert (= (=> (= (or (> x149 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= true (<= x149 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (> 0 x149))) x1522) (and (=> x1522 x1696) (=> (and (= x725 1) (= x423 x864) (not x1522)) x29))) x1048))
(assert (x251 x1369 x1321))
(assert (x1312 x1943))
(assert (x1312 x1238))
(assert (x251 x302 x466))
(assert (x533 x1936 x1419 x1857 x981))
(assert (x867 x1504 x433))
(assert (x1312 x1220))
(assert (x1312 x1243))
(assert (x1312 x405))
(assert (x1312 x108))
(assert (x1312 x1666))
(assert (x1312 x1560))
(assert (x1312 x703))
(assert (x1312 x1882))
(assert (x1312 x1253))
(assert (= x1608 (x335 (x21 x1608))))
(assert (= x510 x146))
(assert (x1312 x1539))
(assert (= 0 (x857 x1596)))
(assert (= x1089 (=> (and (= (x1039 (x1134 0) (x1134 9) 0) x1690) (<= x804 255) (>= x804 0) (= x1138 (x1039 (x21 x759) x61 0)) (= (= 0 x804) x1244) (<= 0 x759) (<= x759 1461501637330902918203684832716283019655932542975) (< x804 256) (= x61 (x1039 (x21 x997) (x1134 11) 0)) (> 1461501637330902918203684832716283019655932542976 x759) (= x759 (x1159 x1690)) (= x1824 0) (= (x286 x1138) x804)) (and (=> (not x1244) x417) (=> (and x1244 (= x1035 x1884)) x1467)))))
(assert (x1312 x1056))
(assert (x1312 x1932))
(assert (x543 x1799))
(assert (x1312 x209))
(assert (= (=> (and (= x1587 (not x960)) (= x960 (or (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1795) true) (< x1795 0)) (> x1795 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (= (ite x1587 1 0) x355)) x2017) x1667))
(assert (x1477 x1573))
(assert (= (x21 1461501637330902918203684832716283019655932542975) (x1134 1461501637330902918203684832716283019655932542975)))
(assert (x1312 x1311))
(assert (x1312 x721))
(assert (= (x335 (x1134 274184521717934524641157099916833587221)) 274184521717934524641157099916833587221))
(assert (x1312 x606))
(assert (x1477 x1400))
(assert (x1688 x870))
(assert (x1477 x428))
(assert (x1688 x1852))
(assert (x1312 x423))
(assert (x1312 x947))
(assert (x1312 x301))
(assert (= x525 (or (and x537 x655) x37)))
(assert (x1477 x598))
(assert (x1312 x1830))
(assert (= (x21 340282366920938463463374607431768211456) (x1134 340282366920938463463374607431768211456)))
(assert (x1312 x1280))
(assert (x1312 x967))
(assert (x1312 x1737))
(assert (x1312 x2078))
(assert (= (x1808 x479) 0))
(assert (x1312 x84))
(assert (x1312 x670))
(assert (x1312 x1092))
(assert (x1312 x1962))
(assert (= (x335 (x21 x1201)) x1201))
(assert (x1477 x895))
(assert (x1312 x355))
(assert (x1312 x730))
(assert (x1312 x497))
(assert (x1312 x161))
(assert (x1312 x1760))
(assert (x1688 274184521717934524641157099916833587233))
(assert (= (and x1847 x146) x1987))
(assert (x1312 x1099))
(assert (x1312 x2077))
(assert (x1312 x1858))
(assert (x1312 x4))
(assert (=> (> (+ 10000 1) x467) (= (x21 x467) (x1134 x467))))
(assert (x1312 x2091))
(assert (x1312 x554))
(assert (x1312 x1122))
(assert (= 3638949393 (x335 (x1134 3638949393))))
(assert (x1312 x2099))
(assert (x867 x114 x1672))
(assert (x543 x1585))
(assert (= (x335 (x1329 x582 2)) (+ 2 (x335 x582))))
(assert (x1312 x694))
(assert (x1312 x1441))
(assert (x251 x428 x1493))
(assert (x1312 x1579))
(assert (= x1248 (=> (and (= (= x673 274184521717934524641157099916833587233) x343) (= x254 (x958 x2078)) (= x806 128) (= (x1649 1461501637330902918203684832716283019655932542975 x1400) x673)) (and (=> (not x343) x1800) (=> (and (not (= 4062139261 x1405)) (> 1208925819614629174706176 x648) (>= x2080 0) (= (x1656 256) x1417) (= 1 x1262) (= (x1855 (x21 274184521717934524641157099916833587233)) x1527) (<= x1871 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x1656 128) x532) (= x752 4) (>= x591 0) (<= x2080 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x1039 (x21 x287) (x1134 1) 0) x992) (>= x1838 0) (< 0 x1527) x343 (= (x1656 224) x1748) (< x1838 1208925819614629174706176) (= 4272920204 x1405) (= x1326 (x1656 256)) (= x161 (x1656 128)) (= x832 (x1656 192)) (= (x153 x992) x1871) (= x1103 160) (= x956 (x1656 160)) (not (= 3257672857 x1405)) (<= 0 x648) (not (> 2362581449 x1405)) (= x517 (x1656 192)) (<= x591 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x1656 224) x592) (<= x648 1208925819614629174706175) (<= x1838 1208925819614629174706175) (= x1001 (x1656 160)) (not (= 2362581449 x1405)) (= 4 x752) (= x1162 115197700812830431890159100217698998050002284567939525164234024451216521560064) (>= x1871 0) (not (> 4 x752))) x288)))))
(assert (= (and (not x1133) x2057) x1081))
(assert (x1477 x1585))
(assert (x1312 x1137))
(assert (x1312 x451))
(assert (x1312 x957))
(assert (= 65536 (x335 (x1134 65536))))
(assert (x1688 274184521717934524641157099916833587242))
(assert (= (and x384 x1252) x442))
(assert (= x1468 true))
(assert (=> (> (+ 10000 1) x287) (= (x21 x287) (x1134 x287))))
(assert (= (=> (= x1466 (= 274184521717934524641157099916833587231 x785)) (and (=> (and (= x1863 (x188 (+ x1557 352))) (not (= 4062139261 x175)) (> x807 0) x1466 (<= x1246 115792089237316195423570985008687907853269984665640564039457584007913129639935) (< x2112 1208925819614629174706176) (<= x1349 1208925819614629174706175) (>= 1208925819614629174706175 x2112) (= x1200 (x464 224)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1251) (<= x1972 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= 4272920204 x175) (= (x464 160) x1238) (= 160 x1509) (not (< x175 2362581449)) (= x695 (x464 256)) (not (= 2362581449 x175)) (= (x464 128) x713) (= (x1855 (x21 274184521717934524641157099916833587231)) x807) (>= x1972 0) (<= 0 x1251) (= x1895 (x464 224)) (= x84 (x464 192)) (>= x1246 0) (>= x2112 0) (= (x188 (+ 384 x1557)) x1421) (= x1790 x2074) (= (x464 192) x1737) (= x1246 (x1215 x1567)) (= (x1039 (x21 x287) (x1134 1) 0) x1567) (= (x464 128) x972) (= 4 x2074) (< x1349 1208925819614629174706176) (= x1424 (x464 256)) (= 1 x1531) (not (= 3257672857 x175)) (<= 0 x1349) (= (x188 (+ x1557 320)) x608) (= x529 (x188 (+ 288 x1557))) (not (< x2074 4)) (= 115197700812830431890159100217698998050002284567939525164234024451216521560064 x1179) (= x1499 (x464 160))) x1738) (=> (not x1466) x1468))) x365))
(assert (x1312 x1034))
(assert (x1312 x1449))
(assert (= x93 (x335 (x21 x93))))
(assert (x1312 x1671))
(assert (x1312 x1772))
(assert (x619 x64 x1469))
(assert (x1312 x427))
(assert (x1312 x908))
(assert (x1312 x38))
(assert (x1312 x156))
(assert (= (or (and x1036 x1308) (and x1466 x3)) x37))
(assert (x1688 x248))
(assert (= (x335 (x21 x248)) x248))
(assert (=> (< (- x1608 1) 10000) (= (x21 x1608) (x1134 x1608))))
(assert (x1477 x438))
(assert (x1312 x432))
(assert (= x758 (x335 (x21 x758))))
(assert (= (x1134 10141204801825835211973625643007) (x21 10141204801825835211973625643007)))
(assert (x1312 x1499))
(assert (x1312 x1496))
(assert (x1312 x2043))
(assert (= true x793))
(assert (x1312 x2113))
(assert (x1312 x742))
(assert (=> (< (- x1736 1) 10000) (= (x21 x1736) (x1134 x1736))))
(assert (x1312 x507))
(assert (= (=> (and (= x1463 (* x136 x363)) (not (ite x1025 x1025 (and (> x346 170141183460469231731687303715884105727) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x346) true)))) (= (x188 (+ x2122 x1884)) x2038) (= x937 (ite (not x898) 1 0)) (= x2038 x1035) (= x363 (x1649 18446744073709551615 x347)) (= (ite (or (and (<= x410 57896044618658097711785492504343953926634992332820282019728792003956564819967) (> x2122 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (and (> x410 x2122) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x410) (<= x2122 57896044618658097711785492504343953926634992332820282019728792003956564819967)))) 1 0) x2128) (not (= 0 x1932)) (<= x427 1208925819614629174706175) (<= x1396 1208925819614629174706175) (= (ite (or (and (< x1141 x2122) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1141) (<= x2122 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (and (> x1141 57896044618658097711785492504343953926634992332820282019728792003956564819967) (<= x2122 57896044618658097711785492504343953926634992332820282019728792003956564819967))) 1 0) x1559) (= (or (and (< x1884 0) (= true (<= x1884 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1884)) x898) (= (x634 x89) x427) (not (or (> x4 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= (<= x4 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (> 160 x4)))) (= x763 (x188 (+ 64 x89))) (= x81 (x188 (+ 64 x763))) (= (x969 (- 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1884)) x1141) (= (x1649 340282366920938463463374607431768211455 x346) x27) (= x136 (uninterp_mod (* x364 x27) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= (x634 x81) x1396) (= x837 (x1058 x1021)) (= x346 (x634 x1684)) (= x410 (x969 (- 57896044618658097711785492504343953926634992332820282019728792003956564819968 x1884))) (= (and (> x346 0) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x346) true)) x1409) (= x1156 (x188 (+ 64 x1261))) (= x1025 (not x1409)) (= 0 x1062) (= x1352 0) (= (x506 x1156) x347) (= x927 (ite (or (and (< x1884 0) (= true (<= x1884 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1884)) 1 0)) (= (x1649 x937 x1559) x1062) (= x2122 x1463) (= x1352 (x1649 x927 x2128)) (= (x188 (+ 64 x285)) x1021) (= x1684 (x188 (+ 288 x817))) (not (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2122)) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (* x136 x363))) x1467) x1609))
(assert (x1312 x1270))
(assert (x1312 x1809))
(assert (=> (> (+ 10000 1) x1088) (= (x21 x1088) (x1134 x1088))))
(assert (x687 x357 x557))
(assert (= (=> (and (<= 0 x919) (= x1431 (x188 (+ x509 64))) (= 0 x2040) (>= x516 0) (>= x2023 0) (= (x188 (+ 64 x1728)) x509) (<= x2023 1461501637330902918203684832716283019655932542975) (= (x102 x1390) x967) (= x1090 (x1649 1461501637330902918203684832716283019655932542975 x2058)) (>= 1461501637330902918203684832716283019655932542975 x919) (>= 340282366920938463463374607431768211455 x158) (= x311 (x188 (+ 64 x1995))) (= x1760 0) (> 340282366920938463463374607431768211456 x1947) (= x802 (x1881 x334)) (= (x148 x1995) x339) (> 340282366920938463463374607431768211456 x158) (= (x188 (+ 288 x682)) x1823) (< x1638 18446744073709551616) (= (x188 (+ x298 64)) x1068) (= 4 x670) (= x2001 (x188 (+ 64 x1390))) (<= x1547 18446744073709551615) (= (x1039 (x1134 0) (x1134 10) 0) x1327) (= x919 (x1159 x795)) (= x1995 (x188 (+ x1734 384))) (<= 0 x802) (= (x188 (+ 288 x682)) x1390) (= x2023 (x1193 x2067)) (= (x1329 x1327 2) x334) (= x2058 (x1552 x311)) (= x919 x59) (= x1547 (x1651 x2067)) (= x248 (x1649 1461501637330902918203684832716283019655932542975 x38)) (= x1760 (x1649 255 x339)) (= x1947 (x866 x744)) (< x516 1461501637330902918203684832716283019655932542976) (>= 255 x661) (= (x1649 1461501637330902918203684832716283019655932542975 x967) x59) (<= x1947 340282366920938463463374607431768211455) (= (x1039 (x1134 0) (x1134 9) 0) x795) (<= x802 18446744073709551615) (>= 18446744073709551615 x1299) (> 18446744073709551616 x802) (< x1299 18446744073709551616) (<= 0 x158) (> 1461501637330902918203684832716283019655932542976 x919) (<= 0 x1547) (= x1299 (x1889 x334)) (= (x188 (+ 64 x2001)) x298) (= (x188 (+ x1995 64)) x1728) (= (x1307 x1327) x661) (= (x1329 x2067 2) x760) (= (x1039 (x21 x758) (x1134 6) 0) x1428) (< x2023 1461501637330902918203684832716283019655932542976) (> 18446744073709551616 x1547) (= x744 (x1039 (x21 x248) x1428 0)) (>= x661 0) (<= 0 x1299) (= (x102 x1823) x38) (= (= x1090 274184521717934524641157099916833587233) x676) (<= x1638 18446744073709551615) (>= x1638 0) (< x661 256) (= (x1793 x334) x1638) (= (x112 x1327) x516) (= (x396 x760) x158) (= x2067 (x1329 x1327 1)) (>= x1947 0) (= x1601 (x188 (+ x682 512))) (= x1580 0) (<= x516 1461501637330902918203684832716283019655932542975)) (and (=> (and (= 4 x1659) (= x2036 (x1452 256)) (= x1151 (x1452 192)) (= (x188 (+ x1995 352)) x1714) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x591) (= x670 x1659) (not (= 3257672857 x115)) (= (x1452 128) x624) (= (x1452 160) x731) (= x621 (x153 x141)) (<= x2080 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x1028 115197700812830431890159100217698998050002284567939525164234024451216521560064) (= x1389 (x188 (+ x1995 288))) (= (x1452 224) x1530) (= (x1039 (x21 x1339) (x1134 1) 0) x141) (not (> 4 x1659)) (not (= x115 4062139261)) (= (x1452 160) x1853) (= (x1452 224) x1639) (= (x1452 192) x1674) (not (= x115 2362581449)) (< 0 x53) (<= x621 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= x1838 0) (= x471 (x188 (+ 320 x1995))) (= x233 (x1452 256)) (= (x188 (+ 384 x1995)) x1370) (= (x1855 (x21 274184521717934524641157099916833587233)) x53) (<= x1838 1208925819614629174706175) (>= x2080 0) (<= 0 x621) (= 160 x2079) (= x115 4272920204) (<= x648 1208925819614629174706175) (= x951 1) (= x1648 (x1452 128)) x676 (not (> 2362581449 x115)) (< x1838 1208925819614629174706176) (>= x648 0) (<= 0 x591) (> 1208925819614629174706176 x648)) x1652) (=> (not x676) x422))) x282))
(assert (x1312 x331))
(assert (x1312 x1748))
(assert (x1267 x1482 x954))
(assert (x1312 x1906))
(assert (x1312 x465))
(assert (x1312 x806))
(assert (x1312 x1531))
(assert (= (x21 1208925819614629174706175) (x1134 1208925819614629174706175)))
(assert (x1312 x83))
(assert (= x1146 (x335 (x21 x1146))))
(assert (x1312 x2041))
(assert (x1312 x1783))
(assert (x1477 x688))
(assert (x1312 x995))
(assert (= (x21 826074471) (x1134 826074471)))
(assert (x1312 x20))
(assert (= (ite (and x492 x588) (x503 160) (x1872 160)) (x142 160)))
(assert (= (x335 (x1134 4072275384)) 4072275384))
(assert (x1312 x1731))
(assert (= x1951 (=> (and (= x420 x1990) (= (not x863) x715) (= x1192 (ite x715 1 0)) (= x863 (or (and (< x1375 0) (= true (<= x1375 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1375)))) x8)))
(assert (x1312 x541))
(assert (x1312 x1728))
(assert (x1312 x270))
(assert (x1477 x887))
(assert (x1312 x817))
(assert (= (x1134 1461501637330902918203684832716283019655932542976) (x21 1461501637330902918203684832716283019655932542976)))
(assert (x1312 x1285))
(assert (x1312 x59))
(assert (x1312 x1936))
(assert (x1312 x1456))
(assert (x1312 x192))
(assert (x1312 x1527))
(assert (x1312 x769))
(assert (= (x335 (x1134 1736444767)) 1736444767))
(assert (x1267 x1371 x976))
(assert (x1312 x1704))
(assert (x1312 x1197))
(assert (x1312 x601))
(assert (x1312 x1797))
(assert (x1312 x1593))
(assert (x251 x346 x1115))
(assert (x1312 x345))
(assert (x1312 x1211))
(assert (x1312 x1657))
(assert (= true x154))
(assert (x1312 x1191))
(assert (x1312 x925))
(assert (x1312 x1020))
(assert (x1312 x475))
(assert (= 3889878717 (x335 (x1134 3889878717))))
(assert (x1312 x2074))
(assert (x1477 x596))
(assert (x1312 x546))
(assert (x1312 x220))
(assert (= (x1134 950698303) (x21 950698303)))
(assert (x1312 x1536))
(assert (x1312 x1722))
(assert (x1688 x1704))
(assert (=> (> (+ 10000 1) x1494) (= (x1134 x1494) (x21 x1494))))
(assert (x1267 x404 x1733))
(assert (x1312 x1734))
(assert (x1477 x889))
(assert (x1312 x2001))
(assert (x1312 x513))
(assert (= (and x1281 x1750) x46))
(assert (= (x1465 160) x865))
(assert (x1688 x1736))
(assert (x1312 x1926))
(assert (x1312 x172))
(assert (x1887 x2002 x178))
(assert (x1312 x1854))
(assert (x1312 x265))
(assert (x1312 x1547))
(assert (= x2029 (=> (= (= x2027 274184521717934524641157099916833587221) x1896) (and (=> (not x1896) x508) (=> (and (< (+ x1839 x380) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= (or (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x331)) (< x331 64)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x331)) x691) (= x1524 x380) (= x1815 x1106) (not (> 826074471 x203)) (= x183 (x1649 1461501637330902918203684832716283019655932542975 x1815)) (= (x1039 (x21 274184521717934524641157099916833587209) (x1134 1) 0) x808) (<= x1241 115792089237316195423570985008687907853269984665640564039457584007913129639935) (not x691) (not (> 4 x2083)) (= x1266 (< x1241 x1330)) (= (x15 x1333) x1241) (= x331 (x969 (- x2083 4))) (>= x1241 0) (not (= 1889567281 x203)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x380) x1896 (= x1839 x1484) (= 76450787359836037641860180984291677749980919077056822294353438043884394381312 x74) (= x305 x2083) (not (= x203 2514000705)) (<= x1815 1461501637330902918203684832716283019655932542975) (= x1330 x1839) (= x1360 274184521717934524641157099916833587209) (= x1112 (+ x1484 x1524)) (= (x1039 (x21 x1374) (x1134 1) 0) x761) (= x1020 (x969 (- x1241 x1330))) (= x265 (x1855 (x21 274184521717934524641157099916833587221))) (not (= 826074471 x203)) (= x54 1) (<= 0 x380) (= x1333 (x1039 (x21 274184521717934524641157099916833587209) (x1134 1) 0)) (= x380 (x722 x761)) (= x2083 68) (not x1266) (= x1317 32) (= x1864 x1330) (= x203 2835717307) (< 0 x265) (= x1957 274184521717934524641157099916833587209) (= x1374 (x1649 1461501637330902918203684832716283019655932542975 x1815))) x924)))))
(assert (= x654 (x335 (x21 x654))))
(assert (x1312 x1921))
(assert (x1312 x87))
(assert (= (x21 274184521717934524641157099916833587233) (x1134 274184521717934524641157099916833587233)))
(assert (= (+ (x335 x789) 2) (x335 (x1329 x789 2))))
(assert (= (=> (and (= (= 0 x490) x1850) (= x219 (not x1850)) (> x490 0) (= x490 (x318 x1990)) (not (= x54 0)) (= (ite x219 1 0) x44) (not (or (and (< x1317 32) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1317) true)) (> x1317 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (= x44 x490)) x1222) x924))
(assert (x1312 x103))
(assert (x1312 x574))
(assert (x1312 x1665))
(assert (x1312 x1393))
(assert (= x1929 (or (and x1892 x941) x1655)))
(assert (x1312 x139))
(assert (x1312 x260))
(assert (x1312 x96))
(assert (x543 x893))
(assert (x1312 x1385))
(assert (x1312 x738))
(assert (not x1735))
(assert (x1312 x589))
(assert (x1267 x1350 x1145))
(assert (x1312 x1260))
(assert (x1312 x728))
(assert (= 18446744073709551616 (x335 (x1134 18446744073709551616))))
(assert (x1312 x578))
(assert (x1312 x1317))
(assert (x1312 x749))
(assert (x1312 x567))
(assert (x1312 x2060))
(assert (x1312 x673))
(assert (x687 x470 x548))
(assert (x1312 x1839))
(assert (x1312 x762))
(assert (= (x335 (x1134 1461501637330902918203684832716283019655932542975)) 1461501637330902918203684832716283019655932542975))
(assert (x1312 x1590))
(assert (x1477 x1004))
(assert (x1312 x1090))
(assert (x1312 x1940))
(assert (x1312 x1608))
(assert (x1312 x518))
(assert (x1312 x1581))
(assert (x1312 x725))
(assert (x1312 x1421))
(assert (= (ite (= x1550 x65) 115197700812830431890159100217698998050002284567939525164234024451216521560064 (x128 x1550)) (x607 x1550)))
(assert (x1312 x809))
(assert (x1312 x1233))
(assert (x1312 x1399))
(assert (x1312 x185))
(assert (x1312 x731))
(assert (= (x607 x1813) (ite (= x65 x1813) 115197700812830431890159100217698998050002284567939525164234024451216521560064 (x128 x1813))))
(assert (=> (> (+ 10000 1) x839) (= (x21 x839) (x1134 x839))))
(assert (=> (< (- x697 1) 10000) (= (x21 x697) (x1134 x697))))
(assert (x1312 x50))
(assert (x1312 x1983))
(assert (x1312 x392))
(assert (x1477 x1559))
(assert (x1312 x1873))
(assert (= (and (not x628) x2021) x2000))
(assert (x1312 x1146))
(assert (=> (> (+ 10000 1) x215) (= (x21 x215) (x1134 x215))))
(assert (x1312 x528))
(assert (x1312 x382))
(assert (x1312 x1623))
(assert (x1312 x2038))
(assert (= x1222 (=> (= x1736 x1460) x80)))
(assert (x1477 x1739))
(assert (x1312 x74))
(assert (x1312 x612))
(assert (x1312 x175))
(assert (x1312 x1274))
(assert (x1312 x1799))
(assert (x867 x688 x842))
(assert (= (=> (and (= x184 x423) (> x725 0)) x131) x29))
(assert (x1267 x663 x242))
(assert (x1312 x1065))
(assert (x1312 x1585))
(assert (x1312 x1299))
(assert (x1312 x93))
(assert (x1477 x1676))
(assert (x1267 x1593 x1501))
(assert (= (x1134 4072275384) (x21 4072275384)))
(assert (x1312 x2080))
(assert (x1312 x1604))
(assert (x1312 x587))
(assert (x1312 x1792))
(assert (x1312 x1709))
(assert (x1312 x564))
(assert (x1688 x654))
(assert (x1312 x977))
(assert (x1005 x407 x990))
(assert (x1312 x346))
(assert (x1477 x2118))
(assert (= 0 (x2018 x1033)))
(assert (x1688 x596))
(assert (x1477 x550))
(assert (x1477 x1725))
(assert (x2101 x254))
(assert (x1312 x1347))
(assert (x1312 x229))
(assert (=> (< (- x1201 1) 10000) (= (x1134 x1201) (x21 x1201))))
(assert (x867 x347 x444))
(assert (= (x21 115792089237316195423570985008687907853269984655499359237631748795939503996928) (x1134 115792089237316195423570985008687907853269984655499359237631748795939503996928)))
(assert (x1312 x89))
(assert (=> (< (- x1339 1) 10000) (= (x21 x1339) (x1134 x1339))))
(assert (x1312 x868))
(assert (x1312 x1663))
(assert (x1312 x1396))
(assert (x1312 x351))
(assert (x1312 x248))
(assert (x1312 x458))
(assert (x1312 x1404))
(assert (x1312 x757))
(assert (x1312 x913))
(assert (x1887 x596 x650))
(assert (x1312 x844))
(assert (= x1652 (=> (and (= (x912 x1840) x2088) (>= 1208925819614629174706175 x2088) (not (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2079) (and (= (<= x2079 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (< x2079 160)))) (= x2047 (not x812)) (= x1965 (* x606 x1346)) (= x1964 (x1649 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1518)) (= x1380 (x188 (+ 64 x1823))) (= (and (= (<= x1536 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (> x1536 0)) x812) (= x1658 x1965) (not (= 0 x951)) (= (x2102 x1033) x1198) (= (x188 (+ x1658 x1545)) x1393) (= (ite (or (and (< x1545 0) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1545) true)) (> x1545 57896044618658097711785492504343953926634992332820282019728792003956564819967)) 1 0) x470) (= (x912 x479) x1536) (= (ite (or (and (< x1969 x1658) (= (<= x1658 57896044618658097711785492504343953926634992332820282019728792003956564819967) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1969))) (and (> x1969 57896044618658097711785492504343953926634992332820282019728792003956564819967) (<= x1658 57896044618658097711785492504343953926634992332820282019728792003956564819967))) 1 0) x557) (= (x188 (+ x1964 x1601)) x1741) (= (x969 (- 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1545)) x1969) (= (x1649 x357 x557) x1347) (= x548 (ite (or (and (> x1658 57896044618658097711785492504343953926634992332820282019728792003956564819967) (<= x1185 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (and (= (<= x1658 57896044618658097711785492504343953926634992332820282019728792003956564819967) (<= x1185 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (> x1185 x1658))) 1 0)) (= x94 (x912 x1601)) (= x748 (x188 (+ 64 x1601))) (= x479 (x188 (+ 288 x1995))) (= 0 x1347) (= (x969 (- 57896044618658097711785492504343953926634992332820282019728792003956564819968 x1545)) x1185) (= x1393 x1102) (not (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1658)) (= (x188 (+ 64 x748)) x1840) (< (* x1346 x606) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= (ite (not x1363) 1 0) x357) (= (x1649 18446744073709551615 x1198) x1346) (= (x188 (+ 64 x311)) x1033) (= x541 (x1649 340282366920938463463374607431768211455 x1536)) (= (x1649 x470 x548) x502) (= x1741 x781) (= (x188 (+ 31 x2079)) x1518) (= x606 (uninterp_mod (* x541 x1947) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= 0 x502) (= x1709 (x1708 x1380)) (= x1363 (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1545) (and (> 0 x1545) (= (<= x1545 57896044618658097711785492504343953926634992332820282019728792003956564819967) true)))) (not (ite x2047 x2047 (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1536)) (< 170141183460469231731687303715884105727 x1536)))) (>= 1208925819614629174706175 x94)) x834)))
(assert (x1477 x1328))
(assert (x1312 x1163))
(assert (x1312 x1156))
(assert (= 2059260625 (x335 (x1134 2059260625))))
(assert (x1312 x79))
(assert (x1312 x788))
(assert (= (+ 2 (x335 x431)) (x335 (x1329 x431 2))))
(assert (x1688 x759))
(assert (x1312 x1405))
(assert (= (x335 (x1134 2055092157)) 2055092157))
(assert (x1267 x904 x1487))
(assert (x1312 x989))
(assert (x1312 x997))
(assert (x1312 x298))
(assert (x1312 x1905))
(assert (x1312 x1658))
(assert (x1312 x515))
(assert (x1312 x1601))
(assert (x1312 x1121))
(assert (x1312 x524))
(assert (x1312 x591))
(assert (x1312 x1904))
(assert (x1477 1461501637330902918203684832716283019655932542975))
(assert (x1312 x179))
(assert (= (x1134 2059964113) (x21 2059964113)))
(assert (= 4093572003 (x335 (x1134 4093572003))))
(assert (x1477 x1518))
(assert (x1312 x1703))
(assert (x1312 x393))
(assert (x1688 x1201))
(assert (x1312 x113))
(assert (x1267 x1491 x325))
(assert (= 274184521717934524641157099916833587225 (x335 (x21 274184521717934524641157099916833587225))))
(assert (= (ite (= 128 x1684) 115197700812830431890159100217698998050002284567939525164234024451216521560064 (x1778 x1684)) (x779 x1684)))
(assert (x543 x404))
(assert (x1312 x741))
(assert (x1312 x1580))
(assert (x1312 x105))
(assert (x1312 x569))
(assert (x533 x586 x929 x371 x56))
(assert (x1267 x451 x1569))
(assert (= (x1134 1558726628) (x21 1558726628)))
(assert (x1312 x339))
(assert (x1312 x461))
(assert (= (x1134 65536) (x21 65536)))
(assert (x1312 x364))
(assert (= (x1778 x81) 0))
(assert (x1312 x274))
(assert (x1312 x963))
(assert (x1477 x1198))
(assert (x1312 x548))
(assert (= 614716962 (x335 (x1134 614716962))))
(assert (x1312 x1757))
(assert (= x953 (or (and x384 (not x1252)) x200)))
(assert (x1312 x398))
(assert (x1312 x316))
(assert (x1477 x404))
(assert (x1312 x1993))
(assert (x1312 x573))
(assert (x1312 x1779))
(assert (x1312 x336))
(assert (x1312 x870))
(assert (x1312 x881))
(assert (= (x1134 3889878717) (x21 3889878717)))
(assert (x1312 x916))
(assert (= (=> (= (= x862 274184521717934524641157099916833587231) x1373) (and (=> (and (>= 1208925819614629174706175 x2112) (= (x1325 160) x13) (not (> 2362581449 x1449)) (>= x2112 0) (= x1449 4272920204) (= x47 (x1855 (x21 274184521717934524641157099916833587231))) (>= 1208925819614629174706175 x1349) (<= 0 x1972) (< x2112 1208925819614629174706176) (<= 0 x1349) (= 4 x709) (= (x1325 128) x1854) (= x524 (x1325 160)) (not (= 2362581449 x1449)) (<= x551 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= 160 x234) (= (x1325 256) x469) (= x534 (x1325 192)) (not (= 4062139261 x1449)) x1373 (= (x1215 x1991) x551) (= (x1039 (x21 x1494) (x1134 1) 0) x1991) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1251) (= x709 4) (= (x1325 224) x668) (< x1349 1208925819614629174706176) (< 0 x47) (<= 0 x551) (= (x1325 128) x1026) (= x7 (x1325 192)) (not (= x1449 3257672857)) (= 1 x1779) (= x2005 115197700812830431890159100217698998050002284567939525164234024451216521560064) (not (< x709 4)) (= x1992 (x1325 256)) (<= x1972 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= 0 x1251) (= x2026 (x1325 224))) x1625) (=> (not x1373) x793))) x1125))
(assert (x1312 x1349))
(assert (= 274184521717934524641157099916833587242 (x335 (x21 274184521717934524641157099916833587242))))
(assert (x1312 x517))
(assert (= x259 (and x1522 x1537)))
(assert (x1312 x984))
(assert (x1312 x329))
(assert (x1312 x92))
(assert (x1477 x302))
(assert (= 1208925819614629174706175 (x335 (x1134 1208925819614629174706175))))
(assert (x1312 x1064))
(assert (x1267 x1725 x1298))
(assert (= x1050 true))
(assert (= (x1087 x747) 0))
(assert (x1312 x1595))
(assert (= (x335 (x21 x697)) x697))
(assert (x1312 x124))
(assert (x1312 x865))
(assert (x1312 x1104))
(assert (= (and x46 (not x1570)) x2021))
(assert (= (x1134 1208925819614629174706176) (x21 1208925819614629174706176)))
(assert (x1312 x745))
(assert (= x80 (=> (and (<= 0 x893) (not (= 1736444767 x350)) (= (x1855 (x21 274184521717934524641157099916833587209)) x782) (= (x1039 (x21 x1736) (x1134 5) 0) x751) (= x82 (x958 x893)) (< 0 x782) (= x350 2059260625) (< x350 2059964113) (not (> 1176186698 x350)) (= x893 (x1994 x751)) (> 20282409603651670423947251286016 x893) (= x82 x794) (not (= 2055092157 x350)) (not (> 1558726628 x350)) (not (= x350 1558726628)) (not (> 1034154046 x350)) (not (= 2000660004 x350)) (<= x1736 1461501637330902918203684832716283019655932542975) (<= x893 20282409603651670423947251286015) (not (= x350 1752364190))) (=> (and (= (x1039 (x21 x596) (x1134 5) 0) x6) (= x1460 x596) (>= x1670 0) (< x1565 65536) (not (= 830980174 x1289)) (not (> 806251499 x1289)) (not (= x1289 826074471)) (< x1289 2059964113) (>= x1565 0) (= (x1039 (x21 x596) (x1134 5) 0) x399) (>= 20282409603651670423947251286015 x1670) (< x1289 1034154046) (= (x958 x1670) x518) (<= x596 1461501637330902918203684832716283019655932542975) (= x822 (or (> x2072 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (> 0 x2072) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2072))))) (not (< x1289 614716962)) (= x1120 (or (> x518 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= (<= x518 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (< x518 0)))) (= x2072 x794) (= (x1855 (x21 274184521717934524641157099916833587209)) x306) (= (x1994 x399) x1670) (<= x1565 65535) (= (x197 x6) x1565) (not (= x1289 806251499)) (= 0 x571) (not (= x1289 840395849)) (= 950698303 x1289) (< x1670 20282409603651670423947251286016) (< 0 x306) (or (and (not (= x1259 115792089237316195423570985008687907853269984655499359237631748795939503996928)) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (* x1726 x1442)) (= x232 (x1649 20282409603651670423947251286015 x1702)) (not (or (and (< x550 0) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x550))) (> x550 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (>= 18446744073709551615 x1726) (= (x969 (- 0 x518)) x550) (not (< 10141204801825835211973625643007 x232)) (= x2078 x1489) (>= x1726 0) (= x1259 (x958 x1702)) x1120 (> 18446744073709551616 x1726) (= (x1649 20282409603651670423947251286015 x550) x1442) (= x1489 (x969 (- 0 x1259))) (= x1702 x1647) (= (* x1442 x1726) x1647) (not (= 115792089237316195423570985008687907853269984655499359237631748795939503996928 x518))) (and (= x2044 (* x476 x566)) (>= x566 0) (not (or (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x518) true) (> 0 x518)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x518))) (= x2078 x741) (> 18446744073709551616 x566) (= x2044 x741) (= x476 (x1649 20282409603651670423947251286015 x518)) (<= x566 18446744073709551615) (not (> x1769 10141204801825835211973625643007)) (= (x1649 20282409603651670423947251286015 x741) x1769) (not x1120) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (* x476 x566))))) x1248))))
(assert (x1312 x1390))
(assert (x1312 x1677))
(assert (x1312 x486))
(assert (x1477 x379))
(assert (x1312 x1375))
(assert (x1312 x910))
(assert (= (x21 4272920204) (x1134 4272920204)))
(assert (x1312 x1972))
(assert (x1267 x877 x1876))
(assert (x1312 x239))
(assert (x1312 x1984))
(assert (= 0 (x198 x166)))
(assert (x1312 x1030))
(assert (x1312 x1840))
(assert (x1312 x1183))
(assert (= x1513 (and (not x1466) x3)))
(assert (x1312 x1897))
(assert (= (x335 (x1329 x457 2)) (+ 2 (x335 x457))))
(assert (x1477 x938))
(assert (x1312 x1989))
(assert (= (x335 (x1134 4062139261)) 4062139261))
(assert (x1312 x60))
(assert (= (or (and x1505 x1044) (and x1844 x1517) (and x1896 x414)) x1718))
(assert (x1312 x516))
(assert (= 274184521717934524641157099916833587231 (x335 (x21 274184521717934524641157099916833587231))))
(assert (= 3122421376 (x335 (x1134 3122421376))))
(assert (x1312 x966))
(assert (x1312 x648))
(assert (x1312 x2114))
(assert (= x422 (=> (= (= x1090 274184521717934524641157099916833587231) x549) (and (=> (not x549) x917) (=> (and (= x143 115197700812830431890159100217698998050002284567939525164234024451216521560064) (<= x2112 1208925819614629174706175) (not (= 3257672857 x2004)) (= x489 (x1453 160)) (= x762 (x188 (+ 352 x1995))) (>= 1208925819614629174706175 x1349) (= x1478 (x188 (+ x1995 384))) (> 1208925819614629174706176 x2112) (>= x1349 0) (= x951 1) (= x2079 160) (= x1962 (x1453 128)) (> 1208925819614629174706176 x1349) (not (< x2004 2362581449)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1251) (= x1361 (x1039 (x21 x1339) (x1134 1) 0)) (not (< x1707 4)) (= (x1453 128) x1663) (= x1032 (x1453 256)) (= x1707 x670) x549 (<= x391 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= 4272920204 x2004) (<= 0 x391) (= (x1453 192) x554) (<= 0 x1251) (= (x1453 256) x274) (>= x1972 0) (= x1615 (x1453 160)) (> x637 0) (>= x2112 0) (= x1707 4) (= (x1453 224) x1096) (= x1211 (x1453 192)) (not (= x2004 2362581449)) (= (x1453 224) x1604) (= (x1215 x1361) x391) (<= x1972 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x106 (x188 (+ 320 x1995))) (not (= x2004 4062139261)) (= (x1855 (x21 274184521717934524641157099916833587231)) x637) (= x1500 (x188 (+ 288 x1995)))) x1652)))))
(assert (x1312 x23))
(assert (x1312 x608))
(assert (x1312 x263))
(assert (= 0 (x1808 x113)))
(assert (x1312 x233))
(assert (x1312 x938))
(assert (x1312 x190))
(assert (x1312 x342))
(assert (x1477 x238))
(assert (x1312 x1218))
(assert (x1477 x1371))
(assert (x1267 x1456 x68))
(assert (x1312 x463))
(assert (= (x21 20282409603651670423947251286016) (x1134 20282409603651670423947251286016)))
(assert (x1312 x1681))
(assert (x1477 x347))
(assert (x1312 x514))
(assert (x1312 x2036))
(assert (x1312 x1418))
(assert (= (x1131 x1840) (ite (= x1840 128) 115197700812830431890159100217698998050002284567939525164234024451216521560064 (x1808 x1840))))
(assert (x1312 x52))
(assert (x1312 x763))
(assert (x1477 20282409603651670423947251286015))
(assert (x1312 x1969))
(assert (= 0 (x1276 x1813)))
(assert (x1267 x914 x429))
(assert (x1312 x1582))
(assert (x1312 x1316))
(assert (x1312 x1042))
(assert (x1312 x576))
(assert (= x1977 (=> (and (> x179 0) (= x2012 (x1649 1461501637330902918203684832716283019655932542975 x297)) (= (= 274184521717934524641157099916833587229 x2012) x1847)) (and (=> (and (= (ite (not x2052) 1 0) x1161) (< 0 x1726) (or (and (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (* x458 x1485)) (= x856 (* x458 x1485)) (not (> x409 x312)) (= x1791 (x1649 18446744073709551615 x398)) (= x398 x856) x1052 (= x1582 (x1978 192)) (not (= 115792089237316195423570985008687907853269984655499359237631748795939503996928 x236)) (< x312 18446744073709551616) (= x1602 (x969 (- 0 x236))) (= (x969 (- x312 x409)) x1909) (= x1080 x1791) (= (x1649 18446744073709551615 x1676) x409) (= x1343 x405) (= x458 (x1649 18446744073709551615 x1909)) (= x1485 (x1649 20282409603651670423947251286015 x1602)) (<= x366 18446744073709551615) (< (+ x405 x1791) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (>= 18446744073709551615 x312) (= x1676 (x1465 160)) (= (+ x1080 x1343) x366) (= x405 (x1649 18446744073709551615 x1582)) (= x236 (x958 x776)) (<= 0 x312)) (and (<= x192 18446744073709551615) (= (x1649 18446744073709551615 x1963) x575) (not (< x192 x1918)) (= x1376 x1474) (not x1052) (> 18446744073709551616 x192) (= x1926 x1890) (< (+ x791 x1926) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= (+ x702 x1890) x39) (= x938 (x1465 160)) (= x791 x702) (= (* x575 x868) x1474) (= x114 (x1978 192)) (= x868 (x1649 20282409603651670423947251286015 x776)) (= (x1649 18446744073709551615 x938) x1918) (<= 0 x192) (>= 18446744073709551615 x39) (< (* x575 x868) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x1963 (x969 (- x192 x1918))) (= x1926 (x1649 18446744073709551615 x1376)) (= (x1649 18446744073709551615 x114) x791))) (<= 0 x18) (not (< x2066 x845)) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (* x566 x638)) (= x185 (x614 x2087)) (= (x1135 x2087) x1773) (not (< x1579 x1186)) (= (not x2094) x2052) (= x1902 (x1649 20282409603651670423947251286015 x1482)) (= x1186 (x1649 20282409603651670423947251286015 x426)) (= x419 (or (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 (x958 x887))) (> 0 (x958 x887))) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 (x958 x887)))) (not (< 10141204801825835211973625643007 x1047)) (= x487 0) (< x1726 18446744073709551616) (or (and (not x766) (= 0 x426)) (and (= x2137 x426) (not (or (> x1256 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1256)) (< x1256 0)))) (= x1256 (x958 x238)) (= x358 (x1649 20282409603651670423947251286015 x889)) x766 (= (ite (> x358 x1007) x238 x889) x2137) (= (x1649 20282409603651670423947251286015 x238) x1007))) (= 128 x1462) (= x796 (x1649 x1319 x23)) (= (x958 x1725) x749) (>= 255 x1029) (= x1445 (* x566 x638)) (< (+ x221 x684) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x776 (x946 128)) (= x1047 (x1649 20282409603651670423947251286015 x889)) (= (x1975 x2087) x18) (= x324 (x958 x889)) (= x1049 (x958 x1773)) (= x1195 (x188 (+ x324 115792089237316195423570985008687907853269984655499359237631748795939503996928))) (= x684 (x1649 20282409603651670423947251286015 x904)) (= x610 (+ x683 x1209)) (= x221 (x1649 20282409603651670423947251286015 x816)) (> 18446744073709551616 x566) (= x1445 x1751) (= x865 (x718 x2087)) (<= 0 x566) (= (x958 x238) x790) (= x1189 (or (and (= (<= (x958 x448) 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (> 0 (x958 x448))) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 (x958 x448)))) (<= 0 x185) (= x847 (x1649 20282409603651670423947251286015 x895)) (< x185 65536) (= x314 (or (and (> 0 (x958 x1725)) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 (x958 x1725)))) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 (x958 x1725)))) (= x2087 (x1039 (x21 x758) (x1134 5) 0)) (= x766 (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 (x958 x238)) true) (< 0 (x958 x238)))) (= (or (and (> 0 x324) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x324))) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x324)) x2093) (= x683 x221) (= x604 x816) (< x494 256) (= (x969 (- x2066 x845)) x904) (= x1730 (x188 (+ x324 10141204801825835211973625643007))) (<= 0 x494) (< x566 18446744073709551616) (<= x2092 20282409603651670423947251286015) (>= 18446744073709551615 x1726) (>= 18446744073709551615 x1726) (<= x638 20282409603651670423947251286015) (<= 0 x1773) (>= x1029 0) (= (* x1726 x2092) x604) (= (- (/ x610 x1726) (uninterp_frac x610 x1726)) x895) (>= 18446744073709551615 x566) (>= x865 0) (= x1209 x684) (= x1579 (x1649 20282409603651670423947251286015 x1751)) (> x566 0) (<= 0 x2092) (= (x1810 x2087) x1029) (< x1773 20282409603651670423947251286016) (= (ite (or (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x790) (<= x1195 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (< x790 x1195)) (and (<= x1195 57896044618658097711785492504343953926634992332820282019728792003956564819967) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x790))) 1 0) x728) (= 0 x796) (>= 18446744073709551615 x566) (>= x638 0) x1847 (< (* x1726 x2092) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (> 18446744073709551616 x865) (or (and (= x1030 (x1649 20282409603651670423947251286015 x887)) (= x2015 x1725) (= (- (/ x1030 x566) (uninterp_frac x1030 x566)) x2015) (= (x958 x887) x11) (not (or (and (> 0 x11) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x11))) (> x11 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (not (> x105 10141204801825835211973625643007)) (>= x566 0) (> x566 0) (= (x1649 20282409603651670423947251286015 x2015) x105) (<= x566 18446744073709551615) (> 18446744073709551616 x566) (not x419)) (and (>= x1726 0) (> x1726 0) (= (x969 (- 0 x892)) x877) x419 (not (> x1989 10141204801825835211973625643007)) (= (x1649 20282409603651670423947251286015 x877) x446) (= (x958 x337) x878) (= (- (/ x446 x1726) (uninterp_frac x446 x1726)) x337) (< x1726 18446744073709551616) (<= x1726 18446744073709551615) (not (= x878 115792089237316195423570985008687907853269984655499359237631748795939503996928)) (= x892 (x958 x887)) (not (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x877) (and (= (<= x877 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (> 0 x877)))) (= x152 x1725) (= (x1649 20282409603651670423947251286015 x337) x1989) (not (= x892 115792089237316195423570985008687907853269984655499359237631748795939503996928)) (= (x969 (- 0 x878)) x152))) (= (x969 (- x1579 x1186)) x1482) (<= x610 20282409603651670423947251286015) (= x1052 (or (> (x958 x776) 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= true (<= (x958 x776) 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (< (x958 x776) 0)))) (<= x865 18446744073709551615) (= (x1649 x1830 x728) x487) (> 256 x1029) (= (x969 (- x790 x324)) x887) (= (ite (or (> x324 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= (<= x324 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (> 0 x324))) 1 0) x1319) (<= x18 18446744073709551615) (>= 255 x494) (= (x946 128) x448) (= (x1649 20282409603651670423947251286015 x1013) x1640) (< x638 20282409603651670423947251286016) (= x1830 (ite (not x2093) 1 0)) (> 18446744073709551616 x18) (< x2092 20282409603651670423947251286016) (<= x185 65535) (= (x1649 20282409603651670423947251286015 x889) x2066) (or (and (< x312 18446744073709551616) x314 (>= 18446744073709551615 x312) (<= 0 x312)) (and (>= 18446744073709551615 x192) (not x314) (< x192 18446744073709551616) (<= 0 x192))) (or (and x1189 (= x846 (x1649 20282409603651670423947251286015 x587)) (= (x958 x1350) x1304) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (* x1726 x846)) (= (x1649 20282409603651670423947251286015 x1350) x342) (= x1071 (* x1726 x846)) (>= x1726 0) (not (= 115792089237316195423570985008687907853269984655499359237631748795939503996928 x1304)) (not (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x587) (and (= true (<= x587 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (> 0 x587)))) (>= 18446744073709551615 x1726) (= (x969 (- 0 x1304)) x1406) (= x1406 x238) (not (= 115792089237316195423570985008687907853269984655499359237631748795939503996928 x723)) (> 18446744073709551616 x1726) (= (x969 (- 0 x723)) x587) (= x723 (x958 x448)) (= x1071 x1350) (not (> x342 10141204801825835211973625643007))) (and (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (* x623 x566)) (<= x566 18446744073709551615) (= (x1649 20282409603651670423947251286015 x448) x623) (not x1189) (= x238 x2118) (= (* x566 x623) x729) (< x566 18446744073709551616) (not (> x569 10141204801825835211973625643007)) (= (x958 x448) x1207) (<= 0 x566) (= (x1649 20282409603651670423947251286015 x2118) x569) (= x729 x2118) (not (or (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1207)) (> 0 x1207)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1207))))) (<= 0 x566) (= x2094 (= 0 x494)) (>= 20282409603651670423947251286015 x1773) (= (x1649 20282409603651670423947251286015 x426) x845) (> 18446744073709551616 x1726) (= (ite (or (and (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1730) (<= x790 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1730) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x790)) (> x790 x1730))) 1 0) x23) (= x1013 (- (/ x1902 x566) (uninterp_frac x1902 x566))) (<= 0 x1726) (<= 0 x1726)) x1322) (=> (and (or (and (not (> x957 10141204801825835211973625643007)) (not (= 115792089237316195423570985008687907853269984655499359237631748795939503996928 x1240)) (<= 0 x1726) (= x17 (x1649 20282409603651670423947251286015 x1573)) (= (* x1726 x17) x1716) (= x735 x1716) x2121 (= (x958 x735) x1137) (<= x1726 18446744073709551615) (= (x969 (- 0 x1137)) x734) (= (x1649 20282409603651670423947251286015 x735) x957) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (* x17 x1726)) (= x451 x734) (not (or (and (< x1573 0) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1573))) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1573))) (= x1573 (x969 (- 0 x1240))) (not (= x1137 115792089237316195423570985008687907853269984655499359237631748795939503996928)) (> 18446744073709551616 x1726)) (and (= x576 (x1649 20282409603651670423947251286015 x1240)) (= x1525 x379) (not (or (and (< x1240 0) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1240) true)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1240))) (= x118 (x1649 20282409603651670423947251286015 x379)) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (* x576 x566)) (< x566 18446744073709551616) (= x451 x379) (= (* x576 x566) x1525) (not x2121) (not (> x118 10141204801825835211973625643007)) (>= 18446744073709551615 x566) (>= x566 0))) (= (x1039 (x21 x784) x1691 0) x753) (< x1799 20282409603651670423947251286016) (= (x1649 340282366920938463463374607431768211455 x428) x742) (= (x969 (- x1666 x1968)) x428) (= (x1039 (x21 x758) (x1134 5) 0) x985) (>= x1146 0) (= x2104 (x969 (- x1745 x1742))) (= (ite (= 0 x1666) (not (= 0 (x1649 340282366920938463463374607431768211455 x428))) (= x1666 0)) x1142) (= (= 0 x1220) x1825) (= (x1649 340282366920938463463374607431768211455 x889) x1742) (or (and (= x1612 (not x1798)) (= 0 x1220) (= (= 0 x1666) x1798) (not x1142) (= (ite x1612 (= (x1649 340282366920938463463374607431768211455 x428) 0) x1612) x1753)) (and x1142 (= 1 x1220))) (= x1666 (x1236 x377)) (> 256 x190) (>= 340282366920938463463374607431768211455 x1666) (= (x1039 (x21 x758) (x1134 5) 0) x805) (= x1611 x870) (= x1502 (x1649 340282366920938463463374607431768211455 x2104)) (= (x1039 (x21 x1201) (x1134 2) 0) x1429) (= (x645 x1268) x839) (= x1496 x870) (= x194 (- x980 x1391)) (not (< x1745 x1742)) (= x189 (x1039 (x21 x870) x32 0)) (= x1250 (= x190 0)) (= (x1039 (x21 x758) (x1134 5) 0) x672) (= x1691 (x1039 (x21 x1146) (x1134 12) 0)) (= x1799 (x1135 x1271)) (= x1240 (x958 x1799)) (= x1271 (x1039 (x21 x758) (x1134 5) 0)) (= x1852 (ite (not x388) 1 0)) (<= x1146 65535) (>= 255 x190) (= (x1649 1461501637330902918203684832716283019655932542975 x297) x1201) (= x1146 (x614 x805)) (>= x839 0) (= x1480 (x1039 (x21 x1088) x689 0)) (= x880 (x1039 (x21 x758) (x1134 6) 0)) (= x1464 (x1801 x672)) (>= 20282409603651670423947251286015 x1799) (= x1745 (x2069 x1429)) (= x1117 (not x1250)) (= x1088 (x1649 1461501637330902918203684832716283019655932542975 x297)) (= x602 (= 0 x1220)) (> 340282366920938463463374607431768211456 x1666) (= (not x602) x1297) (= (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1240) (and (< x1240 0) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1240) true))) x2121) (<= 0 x1745) (= (x1039 (x21 x1852) x753 0) x1268) (= x689 (x1039 (x21 x839) (x1134 11) 0)) (= x69 x1117) (< x1146 65536) (= x377 (x1039 (x21 x1057) x880 0)) (= x2124 x742) (<= 0 x1666) (= x69 (not x1825)) (not x1847) (= x190 (x286 x1480)) (>= x1464 0) (< x1464 65536) (<= x1464 65535) (= (+ x194 x2124) x45) (= (not x1297) x388) (= (x1833 x1611) x980) (= x32 (x1039 (x21 x758) (x1134 6) 0)) (>= x757 0) (<= x839 65535) (> 65536 x839) (= (x1236 x189) x757) (= x1391 x757) (<= x757 340282366920938463463374607431768211455) (= (x1649 1461501637330902918203684832716283019655932542975 x297) x1057) (= (x1649 340282366920938463463374607431768211455 x889) x1968) (= (x1649 1461501637330902918203684832716283019655932542975 x297) x784) (<= x1745 340282366920938463463374607431768211455) (>= x190 0) (<= 0 x1799) (= (x1649 1461501637330902918203684832716283019655932542975 x297) x870) (< x1745 340282366920938463463374607431768211456) (not (> x1968 x1666))) x1168)))))
(assert (x1312 x545))
(assert (x1312 x759))
(assert (x1887 x1623 x597))
(assert (x1312 x1262))
(assert (=> (> (+ 10000 1) x535) (= (x1134 x535) (x21 x535))))
(assert (x1312 x1927))
(assert (= (x335 (x21 x997)) x997))
(assert (x1312 x221))
(assert (x1312 x95))
(assert (= true x917))
(assert (x1312 x1162))
(assert (= x1750 (and (not x1244) x1000)))
(assert (x1477 x776))
(assert (x1312 x374))
(assert (x1312 x47))
(assert (x1312 x1628))
(assert (= x1374 (x335 (x21 x1374))))
(assert (x1312 x340))
(assert (x1312 x2011))
(assert (x1312 x998))
(assert (= (and x888 (not x549)) x313))
(assert (= (and (not x1373) x62) x1235))
(assert (x1312 x2005))
(assert (x1312 x2088))
(assert (= (x335 (x1134 18446744073709551615)) 18446744073709551615))
(assert (= (x1134 1752364190) (x21 1752364190)))
(assert (= x1933 (or x953 (and (not x1522) x1537))))
(assert (x1477 x1671))
(assert (x1312 x1442))
(assert (x1312 x1875))
(assert (x1312 x1240))
(assert (x1312 x1968))
(assert (x1312 x1432))
(assert (= (x1134 274184521717934524641157099916833587209) (x21 274184521717934524641157099916833587209)))
(assert (x1477 x728))
(assert (x1688 x908))
(assert (x1312 x1675))
(assert (x1312 x137))
(assert (= 0 (x1276 x1550)))
(assert (x1312 x1330))
(assert (x1312 x78))
(assert (x1477 x570))
(assert (x1312 x479))
(assert (x1688 274184521717934524641157099916833587229))
(assert (x1312 x2092))
(assert (x1477 x836))
(assert (x1312 x2090))
(assert (x1688 x93))
(assert (x1312 x1543))
(assert (x1312 x1028))
(assert (x1312 x637))
(assert (x1477 x1762))
(assert (x1312 x1003))
(assert (x1312 x896))
(assert (x1312 x610))
(assert (x1267 x1773 x629))
(assert (x1312 x1198))
(assert (= 0 (x1808 x703)))
(assert (x251 x1845 x894))
(assert (x1312 x785))
(assert (x1312 x904))
(assert (x1312 x512))
(assert (x533 x1518 x104 x2055 x1367))
(assert (x1267 x426 x1355))
(assert (x1312 x709))
(assert (= (x1134 115792089237316195423570985008687907853269984665640564039457584007913129639935) (x21 115792089237316195423570985008687907853269984665640564039457584007913129639935)))
(assert (= (x335 (x1134 2000660004)) 2000660004))
(assert (x1312 x385))
(assert (x1477 x60))
(assert (= (and x941 (not x1892)) x686))
(assert (x1312 x1440))
(assert (x1312 x1559))
(assert (x1312 x134))
(assert (x1477 x340))
(assert (=> (< (- x1671 1) 10000) (= (x21 x1671) (x1134 x1671))))
(assert (x1312 x2109))
(assert (x1312 x166))
(assert (x1312 x663))
(assert (x1312 x144))
(assert (x1312 x262))
(assert (= (x1134 274184521717934524641157099916833587225) (x21 274184521717934524641157099916833587225)))
(assert (= (x21 170141183460469231731687303715884105727) (x1134 170141183460469231731687303715884105727)))
(assert (x1267 x1799 x1414))
(assert (x867 x1198 x801))
(assert (x1312 x53))
(assert (x1312 x713))
(assert (x1312 x535))
(assert (x1312 x73))
(assert (= 274184521717934524641157099916833587221 (x335 (x21 274184521717934524641157099916833587221))))
(assert (x1477 115792089237316195423570985008687907853269984665640564039457584007913129639904))
(assert (x1312 x919))
(assert (x687 x1830 x728))
(assert (x1312 x818))
(assert (x1312 x1619))
(assert (= (x1134 3950285521) (x21 3950285521)))
(assert (x1312 x106))
(assert (= x1671 (x335 (x21 x1671))))
(assert (x1267 x893 x1744))
(assert (x543 x844))
(assert (x1312 x1849))
(assert (x1312 x1082))
(assert (= (x1134 1034154046) (x21 1034154046)))
(assert (x1312 x1645))
(assert (x1312 x1676))
(assert (= (x21 2514000705) (x1134 2514000705)))
(assert (x1312 x1640))
(assert (= 10141204801825835211973625643007 (x335 (x1134 10141204801825835211973625643007))))
(assert (x1312 x626))
(assert (x1312 x561))
(assert (= x1643 x572))
(assert (x1312 x2040))
(assert (x1312 x600))
(assert (x1312 x1228))
(assert (= (x335 (x1329 x1327 1)) (+ (x335 x1327) 1)))
(assert (x1312 x1376))
(assert (x1312 x1633))
(assert (x867 x60 x212))
(assert (x1005 x1771 x855))
(assert (= (x1134 57896044618658097711785492504343953926634992332820282019728792003956564819967) (x21 57896044618658097711785492504343953926634992332820282019728792003956564819967)))
(assert (= (x335 (x21 x870)) x870))
(assert (x1312 x2066))
(assert (x1312 x275))
(assert (= (x1134 830980174) (x21 830980174)))
(assert (x1312 x1684))
(assert (x867 x1582 x98))
(assert (x1312 x2004))
(assert (= (x21 76450787359836037641860180984291677749980919077056822294353438043884394381312) (x1134 76450787359836037641860180984291677749980919077056822294353438043884394381312)))
(assert (x1312 x717))
(assert (= (x1134 2362581449) (x21 2362581449)))
(assert (x1312 x204))
(assert (x1312 x42))
(assert (= x1464 (x335 (x21 x1464))))
(assert (x1312 x1202))
(assert (x1477 x1451))
(assert (x1312 x1032))
(assert (= (x1620 288) (ite (and x950 x307) (x611 288) (x1170 288))))
(assert (= x249 (=> (and (= x1261 (x188 (+ 64 x817))) (> 340282366920938463463374607431768211456 x364) (>= 18446744073709551615 x1923) (>= 18446744073709551615 x90) (= x1581 (x1649 1461501637330902918203684832716283019655932542975 x1948)) (= x364 (x1236 x780)) (= (x1329 x711 2) x1114) (>= x364 0) (= x1581 x330) (<= 0 x1441) (<= 0 x261) (= x457 (x1329 x711 1)) (= x876 (x258 x285)) (< x1278 256) (<= x1441 18446744073709551615) (= x134 (x188 (+ x92 64))) (< x90 18446744073709551616) (= (x1649 1461501637330902918203684832716283019655932542975 x296) x1483) (= (x1039 (x1134 0) (x1134 9) 0) x1908) (<= x1233 1461501637330902918203684832716283019655932542975) (= x2068 (x1039 (x21 x528) (x1134 6) 0)) (<= x1278 255) (= x977 (x188 (+ 64 x386))) (= (x1329 x457 2) x1883) (= x1771 (x945 x817)) (= (x188 (+ x1284 384)) x817) (< x330 1461501637330902918203684832716283019655932542976) (= x642 0) (= (x1234 x1261) x296) (= (x188 (+ 64 x1759)) x92) (= x1538 0) (= x1584 (x396 x1883)) (< x1121 1461501637330902918203684832716283019655932542976) (= (x1193 x457) x1121) (= x285 (x188 (+ x1111 288))) (<= x261 18446744073709551615) (>= x1923 0) (> 18446744073709551616 x261) (<= 0 x1278) (= (x1889 x1114) x261) (= (x1159 x1908) x330) (<= 0 x1121) (= x1441 (x1651 x457)) (>= 1461501637330902918203684832716283019655932542975 x330) (= (x188 (+ x1111 512)) x89) (>= 340282366920938463463374607431768211455 x1584) (= (x112 x711) x1233) (= (x1649 1461501637330902918203684832716283019655932542975 x1671) x528) (= (x188 (+ 64 x817)) x1759) (= x1278 (x1307 x711)) (= (= 274184521717934524641157099916833587233 x1483) x1570) (> 1461501637330902918203684832716283019655932542976 x1233) (<= 0 x90) (= x1948 (x258 x480)) (= x290 0) (= x1703 4) (<= 0 x330) (>= x1584 0) (> 18446744073709551616 x1441) (= (x1649 1461501637330902918203684832716283019655932542975 x876) x988) (>= x1233 0) (= (x1649 255 x1771) x1538) (= (x1039 (x1134 0) (x1134 10) 0) x711) (= x386 (x188 (+ 64 x480))) (= (x188 (+ x977 64)) x1223) (> 340282366920938463463374607431768211456 x1584) (= (x1039 (x21 x988) x2068 0) x780) (< x1923 18446744073709551616) (<= x1121 1461501637330902918203684832716283019655932542975) (= (x188 (+ x1111 288)) x480) (<= x364 340282366920938463463374607431768211455) (= (x1881 x1114) x1923) (= x90 (x1793 x1114))) (and (=> (not x1570) x1332) (=> (and (= x4 160) (= x207 4) (<= x648 1208925819614629174706175) (= x1932 1) (= x635 (x1039 (x21 x1494) (x1134 1) 0)) (= 115197700812830431890159100217698998050002284567939525164234024451216521560064 x966) (> 1208925819614629174706176 x1838) (= x351 (x188 (+ 352 x817))) (= x256 (x935 224)) (= x726 (x935 224)) (= x1860 (x153 x635)) (>= x1860 0) (= (x935 160) x1379) (= (x188 (+ x817 384)) x497) (not (= x1646 4062139261)) (= 4272920204 x1646) (<= x591 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x1703 x207) (<= x2080 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x944 (x1855 (x21 274184521717934524641157099916833587233))) (<= 0 x2080) (<= 0 x1838) (= x1497 (x935 192)) (> 1208925819614629174706176 x648) (not (= x1646 3257672857)) (= (x935 128) x1038) (= (x935 128) x1723) (= x1354 (x935 160)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1860) (not (> 4 x207)) (>= 1208925819614629174706175 x1838) (< 0 x944) x1570 (= (x935 256) x345) (>= x591 0) (= (x935 192) x1345) (= (x188 (+ 288 x817)) x963) (= (x935 256) x1043) (not (> 2362581449 x1646)) (>= x648 0) (= (x188 (+ x817 320)) x397) (not (= 2362581449 x1646))) x1609)))))
(assert (= x417 (=> (= (or (and (> 0 x1884) (= true (<= x1884 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1884)) x1281) (and (=> x1281 x249) (=> (and (= x651 1) (not x1281)) x1382)))))
(assert (x1312 x65))
(assert (x1312 x1761))
(assert (x1312 x130))
(assert (x867 x1909 x482))
(assert (x1312 x621))
(assert (x1688 x1494))
(assert (= (x335 (x21 x535)) x535))
(assert (= x1057 (x335 (x21 x1057))))
(assert (x1312 x1004))
(assert (x1312 x2012))
(assert (= (x335 (x1329 x2067 2)) (+ 2 (x335 x2067))))
(assert (= (and (not x1896) x414) x1178))
(assert (x251 x883 x1960))
(assert (x1312 x1360))
(assert (x1312 x1033))
(assert (= (ite (and x307 x950) (x611 416) (x1170 416)) (x1620 416)))
(assert (x1312 x705))
(assert (x1312 x1458))
(assert (= (ite (and x492 x588) (x503 128) (x1872 128)) (x142 128)))
(assert (x543 x260))
(assert (x1688 274184521717934524641157099916833587221))
(assert (x1312 x1930))
(assert (x1477 x495))
(assert (= true x671))
(assert (x1312 x1008))
(assert (= (x1134 274184521717934524641157099916833587242) (x21 274184521717934524641157099916833587242)))
(assert (x1312 x2115))
(assert (x1312 x1072))
(assert (x1312 x1201))
(assert (x1312 x774))
(assert (= (x335 (x1134 115792089237316195423570985008687907853269984655499359237631748795939503996928)) 115792089237316195423570985008687907853269984655499359237631748795939503996928))
(assert (x1312 x1200))
(assert (x1477 x1582))
(assert (x1312 x504))
(assert (x1267 x887 x1917))
(assert (=> (< (- x1704 1) 10000) (= (x1134 x1704) (x21 x1704))))
(assert (x1477 x451))
(assert (x1312 x489))
(assert (x1267 x2078 x1939))
(assert (x1312 x1767))
(assert (x1312 x575))
(assert (= x1009 (=> (= x585 (or (and (< x777 0) (= (<= x777 57896044618658097711785492504343953926634992332820282019728792003956564819967) true)) (> x777 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (and (=> x585 x773) (=> (and (not x585) (= x355 1)) x2017)))))
(assert (x1477 x518))
(assert (= (and (not x588) x492) x86))
(assert (x1312 x864))
(assert (x1312 x1742))
(assert (x1312 x379))
(assert (x1312 x1258))
(assert (x1312 x1502))
(assert (x1477 x1936))
(assert (x687 x1319 x23))
(assert (x1312 x1179))
(assert (x1312 x357))
(assert (x1312 x2104))
(assert (x1312 x1563))
(assert (x1312 x1304))
(assert (= 1099511627775 (x335 (x1134 1099511627775))))
(assert (x1267 x1670 x1045))
(assert (x1477 x297))
(assert (= 830980174 (x335 (x1134 830980174))))
(assert (= (x335 (x21 x418)) x418))
(assert (x1477 x1504))
(assert (x1312 x1865))
(assert (x1267 x836 x1383))
(assert (x1312 x1814))
(assert (x1312 x1953))
(assert (= x1388 (or (and x588 x492) (and x632 x86))))
(assert (x1312 x1902))
(assert (x1477 x23))
(assert (x1312 x1963))
(assert (x1477 x876))
(assert (x1312 x1384))
(assert (= x1655 (or (and x676 x831) (and x549 x888))))
(assert (x1312 x1424))
(assert (= (x21 274184521717934524641157099916833587221) (x1134 274184521717934524641157099916833587221)))
(assert (x1312 x1029))
(assert (x1312 x1223))
(assert (x1312 x498))
(assert (x1312 x858))
(assert (= 0 (x389 x1380)))
(assert (= x2057 (and x1084 (not x343))))
(assert (x1312 x215))
(assert (x1477 x1013))
(assert (x1312 x495))
(assert (= (x1134 1736444767) (x21 1736444767)))
(assert (= x394 (=> (= (= x2027 274184521717934524641157099916833587225) x1044) (and (=> (and (= x840 x2037) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x913) (= (x1039 (x21 274184521717934524641157099916833587209) (x1134 1) 0) x1476) (= x656 2835717307) (>= x1070 0) (= x705 (x969 (- x913 x1934))) (= x1934 x1864) (not (> 826074471 x656)) (not (= x656 826074471)) (= (x1039 (x21 x697) (x1134 1) 0) x530) (= x556 (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x73) (and (> 64 x73) (= true (<= x73 57896044618658097711785492504343953926634992332820282019728792003956564819967))))) (= x1106 x2011) (= x2135 (< x913 x1934)) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x2037 x1070)) (not (= 1889567281 x656)) (= x913 (x1822 x1237)) (= x1070 x975) (= x1924 (+ x975 x840)) (= (x1944 x530) x1070) x1044 (= 32 x1317) (= x1934 x2037) (not x2135) (not x556) (<= x2011 1461501637330902918203684832716283019655932542975) (= x1202 (x1855 (x21 274184521717934524641157099916833587225))) (= x1300 274184521717934524641157099916833587209) (> x1202 0) (= x305 x1285) (= x697 (x1649 1461501637330902918203684832716283019655932542975 x2011)) (= (x1649 1461501637330902918203684832716283019655932542975 x2011) x150) (<= 0 x913) (= x348 274184521717934524641157099916833587209) (= x54 1) (<= x1070 115792089237316195423570985008687907853269984665640564039457584007913129639935) (not (= 2514000705 x656)) (= (x1039 (x21 274184521717934524641157099916833587209) (x1134 1) 0) x1237) (not (> 4 x1285)) (= 76450787359836037641860180984291677749980919077056822294353438043884394381312 x1336) (= x1285 68) (= (x969 (- x1285 4)) x73)) x924) (=> (not x1044) x2029)))))
(assert (x1312 x1403))
(assert (x1312 x654))
(assert (x1312 x1995))
(assert (x1312 x748))
(assert (= (x335 (x1134 274184521717934524641157099916833587229)) 274184521717934524641157099916833587229))
(assert (x1312 x1398))
(assert (x1312 x1369))
(assert (x1312 x1192))
(assert (x543 x735))
(assert (= (x531 x1784) 0))
(assert (= x2123 true))
(assert (x1312 x1805))
(assert (= (x335 (x1134 2835717307)) 2835717307))
(assert (x1312 x1795))
(assert (x1312 x428))
(assert (x1477 x1543))
(assert (x1312 x25))
(assert (x1267 x889 x1781))
(assert (x1312 x723))
(assert (x1312 x2107))
(assert (x1312 x649))
(assert (x1267 x741 x1067))
(assert (= (+ (x335 x1314) 1) (x335 (x1329 x1314 1))))
(assert (= (ite (and x950 x307) (x611 x703) (x1170 x703)) (x1620 x703)))
(assert (x1312 x1391))
(assert (x1312 x290))
(assert (= (x21 115792089237316195423570985008687907853269984665640564039457584007913129639904) (x1134 115792089237316195423570985008687907853269984665640564039457584007913129639904)))
(assert (x1312 x538))
(assert (x1688 x784))
(assert (x1312 x1632))
(assert (x1267 x379 x186))
(assert (= x2017 (=> (and (= x2059 (= x355 0)) (= (ite x850 1 0) x491) (= x850 (not x2059))) (=> (= x932 (not (= x491 0))) x931))))
(assert (x1005 x498 x1324))
(assert (x1312 x44))
(assert (x1312 x832))
(assert (x1312 x1711))
(assert (x1312 x1918))
(assert (x1312 x639))
(assert (x1312 x380))
(assert (x1312 x622))
(assert (x1312 x404))
(assert (x1312 x272))
(assert (= x1869 x2025))
(assert (x1312 x887))
(assert (x1312 x927))
(assert (x1312 x682))
(assert (x1887 x2011 x664))
(assert (x1312 x1946))
(assert (= (x335 (x1134 170141183460469231731687303715884105727)) 170141183460469231731687303715884105727))
(assert (x1312 x72))
(assert (x1312 x39))
(assert (x1312 x804))
(assert (x1477 x211))
(assert (x1312 x1473))
(assert (= (x21 1176186698) (x1134 1176186698)))
(assert (x543 x1670))
(assert (= x1565 (x335 (x21 x1565))))
(assert (x1312 x1859))
(assert (x1312 x1256))
(assert (x1312 x590))
(assert (x1312 x230))
(assert (= (=> (and (= (ite x922 1 0) x725) (= x423 x1279) (= x1143 (or (and (= true (<= x2106 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (< x2106 0)) (> x2106 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (= (not x1143) x922)) x29) x2028))
(assert (x1267 x1451 x26))
(assert (x543 x1725))
(assert (x1312 x836))
(assert (x251 x886 x616))
(assert (x1312 x1288))
(assert (x1312 x1337))
(assert (x1312 x150))
(assert (x1312 x1638))
(assert (x1267 x895 x88))
(assert (=> (> (+ 10000 1) x784) (= (x21 x784) (x1134 x784))))
(assert (x1312 x784))
(assert (x1312 x1446))
(assert (x1312 x1824))
(assert (= (x21 115197700812830431890159100217698998050002284567939525164234024451216521560064) (x1134 115197700812830431890159100217698998050002284567939525164234024451216521560064)))
(assert (x1312 x2071))
(assert (x1312 x1999))
(assert (x1312 x2086))
(assert (x1312 x1374))
(assert (x687 x927 x2128))
(assert (x1312 x1102))
(assert (x1312 x1434))
(assert (x1312 x1345))
(assert (x1312 x1185))
(assert (x1312 x829))
(assert (x1312 x1685))
(assert (x1477 x2058))
(assert (x1312 x471))
(assert (x1312 x550))
(assert (= x1515 (=> (and (= (ite x1171 1 0) x651) (= x1171 (not x1843)) (= x1843 (or (and (< x1809 0) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1809) true)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1809)))) x1382)))
(assert (x543 x776))
(assert (x1887 x876 x196))
(assert (x1312 x1871))
(assert (= (x1134 57896044618658097711785492504343953926634992332820282019728792003956564819968) (x21 57896044618658097711785492504343953926634992332820282019728792003956564819968)))
(assert (x1312 x1301))
(assert (x1312 x1583))
(assert (x1477 x1482))
(assert (x1312 x1129))
(assert (x1312 x2027))
(assert (x1312 x1773))
(assert (x1312 x254))
(assert (x1477 x470))
(assert (x1312 x623))
(assert (=> (< (- x870 1) 10000) (= (x1134 x870) (x21 x870))))
(assert (x1312 x1257))
(assert (x1312 x1648))
(assert (x1312 x646))
(assert (= (ite (and x307 x950) (x611 x113) (x1170 x113)) (x1620 x113)))
(assert (= (=> (and (< x2117 256) (>= x2117 0) (= 0 x900) (= (x1039 (x21 x908) x1119 0) x1188) (<= x2117 255) (<= x908 1461501637330902918203684832716283019655932542975) (= x268 (x1039 (x1134 0) (x1134 9) 0)) (> 1461501637330902918203684832716283019655932542976 x908) (>= x908 0) (= x2089 (= x2117 0)) (= x2117 (x286 x1188)) (= x1119 (x1039 (x21 x849) (x1134 11) 0)) (= (x1159 x268) x908)) (and (=> (not x2089) x1048) (=> (and (= x864 x486) x2089 (= x149 x521)) x1554))) x667))
(assert (=> (< (- x248 1) 10000) (= (x1134 x248) (x21 x248))))
(assert (x1267 x1013 x2098))
(assert (x1477 x1670))
(assert (x1312 x90))
(assert (x1312 x640))
(assert (x1312 x1154))
(assert (= (x142 x479) (ite (and x588 x492) (x503 x479) (x1872 x479))))
(assert (x687 x937 x1559))
(assert (= (and x872 (not x1410)) x1867))
(assert (= (x335 (x1134 840395849)) 840395849))
(assert (= (x335 (x21 x1736)) x1736))
(assert (x1312 x2129))
(assert (x1312 x147))
(assert (x1312 x1557))
(assert (= (x335 (x1329 x711 1)) (+ 1 (x335 x711))))
(assert (x1312 x297))
(assert (x1312 x2083))
(assert (= (x335 (x1329 x711 2)) (+ 2 (x335 x711))))
(assert (x1312 x163))
(assert (x1312 x467))
(assert (x1312 x1172))
(assert (x1312 x1431))
(assert (x1312 x1678))
(assert (x1312 x2062))
(assert (x1312 x1739))
(assert (x1312 x7))
(assert (x1312 x790))
(assert (x1312 x1339))
(assert (x1312 x659))
(assert (= (x335 (x21 x467)) x467))
(assert (x1312 x470))
(assert (x1312 x1049))
(assert (x1312 x261))
(assert (x1312 x1721))
(assert (x1312 x2124))
(assert (x1312 x1460))
(assert (x1312 x2034))
(assert (= x773 (=> (and (> 18446744073709551616 x1019) (>= 18446744073709551615 x1695) (<= x1019 18446744073709551615) (<= 0 x815) (= x535 (x1649 1461501637330902918203684832716283019655932542975 x596)) (< x915 340282366920938463463374607431768211456) (> 1461501637330902918203684832716283019655932542976 x1722) (= x1695 (x1651 x582)) (= x926 (x1329 x431 2)) (= (x1758 x1323) x512) (= x915 (x1710 x764)) (= x815 (x1793 x926)) (> 256 x1014) (= 0 x235) (= x2003 (x188 (+ x1557 64))) (= x764 (x1039 (x21 x93) x1227 0)) (= x2090 (x1159 x1439)) (= x1227 (x1039 (x21 x535) (x1134 6) 0)) (= (x188 (+ 64 x589)) x2051) (= 0 x75) (= x747 (x188 (+ 64 x1557))) (= x2134 (x1193 x582)) (= 4 x1790) (<= 0 x1695) (>= x1019 0) (= x1404 (x188 (+ x239 64))) (= (x1039 (x1134 0) (x1134 10) 0) x431) (> 340282366920938463463374607431768211456 x2119) (= x936 (x1649 1461501637330902918203684832716283019655932542975 x228)) (= x235 (x1649 255 x708)) (>= x1014 0) (>= 1461501637330902918203684832716283019655932542975 x2090) (= (x1307 x431) x1014) (>= x774 0) (<= x774 18446744073709551615) (= x1722 (x112 x431)) (= x1356 0) (<= 0 x2090) (= x2090 x936) (> 18446744073709551616 x774) (>= 255 x1014) (>= x915 0) (>= 340282366920938463463374607431768211455 x2119) (= x228 (x1758 x239)) (< x815 18446744073709551616) (= x1323 (x188 (+ 288 x87))) (= (x1649 1461501637330902918203684832716283019655932542975 x512) x93) (= x774 (x1889 x926)) (>= x2119 0) (= (= 274184521717934524641157099916833587233 x785) x1308) (>= x1722 0) (= (x1329 x582 2) x799) (<= x2134 1461501637330902918203684832716283019655932542975) (= x1557 (x188 (+ x1092 384))) (= x708 (x378 x1557)) (= x65 (x188 (+ x87 512))) (>= x2134 0) (= (x188 (+ x1034 64)) x1865) (= x589 (x188 (+ x1404 64))) (= x2119 (x396 x799)) (= (x1329 x431 1) x582) (= x785 (x1649 1461501637330902918203684832716283019655932542975 x598)) (= x598 (x1182 x747)) (> 18446744073709551616 x1695) (= x1034 (x188 (+ x2003 64))) (= x239 (x188 (+ 288 x87))) (> 1461501637330902918203684832716283019655932542976 x2134) (= x1019 (x1881 x926)) (= x1439 (x1039 (x1134 0) (x1134 9) 0)) (<= x1722 1461501637330902918203684832716283019655932542975) (<= x915 340282366920938463463374607431768211455) (> 1461501637330902918203684832716283019655932542976 x2090) (<= x815 18446744073709551615)) (and (=> (not x1308) x365) (=> (and (= x187 (x188 (+ 320 x1557))) (not (= 4062139261 x853)) (<= x1395 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= x591 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= x1838 0) (= x1816 4) (>= x648 0) (= x1637 (x188 (+ 288 x1557))) (= (x188 (+ 384 x1557)) x1260) (<= x2080 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= x1395 0) (= (x1039 (x21 x287) (x1134 1) 0) x1130) (= x1395 (x153 x1130)) (= 1 x1531) (= (x1562 192) x370) (= x1875 (x1562 224)) (= (x1562 192) x1017) (= (x1562 256) x1848) (= (x1562 256) x1685) (= x1816 x1790) (not (= x853 2362581449)) (not (< x1816 4)) (= 115197700812830431890159100217698998050002284567939525164234024451216521560064 x1686) x1308 (= x139 (x1562 128)) (>= 1208925819614629174706175 x1838) (= (x1562 224) x1886) (= (x188 (+ x1557 352)) x1078) (> 1208925819614629174706176 x648) (not (< x853 2362581449)) (< x1838 1208925819614629174706176) (<= 0 x591) (= x1859 (x1562 128)) (= 160 x1509) (>= x2080 0) (= x612 (x1562 160)) (> x270 0) (>= 1208925819614629174706175 x648) (not (= x853 3257672857)) (= x1280 (x1562 160)) (= (x1855 (x21 274184521717934524641157099916833587233)) x270) (= 4272920204 x853)) x1738)))))
(assert (=> (> (+ 10000 1) x759) (= (x1134 x759) (x21 x759))))
(assert (x1312 x1610))
(assert (x1267 x1602 x1283))
(assert (x1312 x1148))
(assert (x1312 x1694))
(assert (x1477 x296))
(assert (x1312 x456))
(assert (= x492 (and (not x1847) x146)))
(assert (= (x21 806251499) (x1134 806251499)))
(assert (x1312 x1151))
(assert (x1312 x1088))
(assert (x1312 x1174))
(assert (x1477 x904))
(assert (x1312 x1076))
(assert (x1312 x532))
(assert (x1312 x948))
(assert (x1312 x1021))
(assert (= x3 (and (not x1308) x1036)))
(assert (x1688 x535))
(assert (x1312 x9))
(assert (= (x335 (x21 x1852)) x1852))
(assert (= 0 (x1778 x1684)))
(assert (x1312 x1068))
(assert (x1312 x1026))
(assert (= (or x478 (and (not x585) x244)) x2025))
(assert (= (x335 (x1134 2362581449)) 2362581449))
(assert (x1312 x293))
(assert (x1312 x453))
(assert (x1312 x565))
(assert (x1312 x1842))
(assert (x1477 x1491))
(assert (x1312 x1489))
(assert (x1312 x656))
(assert (x1312 x276))
(assert (x1312 x296))
(assert (= x1147 (or x1718 x1490)))
(assert (= (and (not x2089) x442) x1537))
(assert (x1312 x1161))
(assert (x1312 x324))
(assert (= (x1134 3257672857) (x21 3257672857)))
(assert (= (x335 (x1134 826074471)) 826074471))
(assert (x1312 x136))
(assert (x543 x1702))
(assert (x1688 x849))
(assert (x1312 x2108))
(assert (x1312 x1827))
(assert (x1312 x771))
(assert (x1312 x77))
(assert (x867 x513 x1364))
(assert (x1312 x184))
(assert (x1312 x1319))
(assert (x1312 x697))
(assert (x1312 x1885))
(assert (x1312 x1952))
(assert (= 1558726628 (x335 (x1134 1558726628))))
(assert (x533 x174 x746 x1079 x1507))
(assert (x1312 x1615))
(assert (x1312 x1066))
(assert (x1312 x1016))
(assert (x1312 x1646))
(assert (x1312 x876))
(assert (x1312 x1815))
(assert (x1312 x1674))
(assert (x1312 x1784))
(assert (= 0 (x1124 x1323)))
(assert (x1312 x1216))
(assert (x1312 x1891))
(assert (x1312 x1771))
(assert (x1312 x1736))
(assert (x1312 x618))
(assert (= (x1134 4062139261) (x21 4062139261)))
(assert (x1312 x168))
(assert (= (x335 (x1134 274184521717934524641157099916833587209)) 274184521717934524641157099916833587209))
(assert (x1312 x1406))
(assert true)
(assert (x1477 x877))
(assert (x1312 x1636))
(assert (x1312 x830))
(assert (x1267 x340 x1835))
(assert (= (x2084 x1840) (ite (= x1840 x1601) 115197700812830431890159100217698998050002284567939525164234024451216521560064 (x142 x1840))))
(assert (x1312 x1323))
(assert (x1312 x17))
(assert (x1312 x140))
(assert (x1312 x491))
(assert (x1312 x305))
(assert (x1312 x13))
(assert (= (and x655 (not x537)) x244))
(assert (= (=> (and (not x24) (= x1795 x1819) (= (> x1399 1) x24) (= x1399 (x1649 255 x498))) x1667) x1600))
(assert (x1887 x1948 x125))
(assert (= (x21 18446744073709551616) (x1134 18446744073709551616)))
(assert (x1312 x782))
(assert (x1312 x1741))
(assert (x1312 x878))
(assert (x1477 x827))
(assert (x1312 x1014))
(assert (x1312 x1195))
(assert (x1005 x276 x1998))
(assert (x1312 x304))
(assert (x1887 x296 x2042))
(assert (x1477 x1592))
(assert (x1477 x1456))
(assert (x1477 x663))
(assert (= (x142 x1840) (ite (and x588 x492) (x503 x1840) (x1872 x1840))))
(assert (x1312 x758))
(assert (x1312 x71))
(assert (x1312 x448))
(assert (x1312 x661))
(assert (x1312 x529))
(assert (x1477 255))
(assert (x687 x1004 x272))
(assert (x1312 x232))
(assert (x1312 x1848))
(assert (x1312 x971))
(assert (x543 x887))
(assert (x1477 x1963))
(assert (x1312 x1766))
(assert (x1312 x1153))
(assert (x1312 x794))
(assert (x1312 x1491))
(assert (x1312 x1341))
(assert (x1312 x1097))
(assert (x1477 x114))
(assert (x1312 x1483))
(assert (x1312 x2137))
(assert (x1477 x64))
(assert (= x1898 (=> (and (not (ite x1454 x1454 (and (< 170141183460469231731687303715884105727 x438) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x438) true)))) (= x1545 (uninterp_mod (* x1086 (x1811 x302)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= (not x890) x1454) (= (x1649 255 x498) x948) (= (and (> x438 0) (= (<= x438 57896044618658097711785492504343953926634992332820282019728792003956564819967) true)) x890) (not (= x1803 0)) (= (x142 160) x438) (= x682 (x188 (+ x1734 128))) (= x336 0) (= x1734 (x1649 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1936)) (>= 1208925819614629174706175 x71) (= x316 (x142 256)) (not (or (and (= true (<= x1922 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (< x1922 160)) (> x1922 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (<= x316 1208925819614629174706175) (= (> x948 0) x970) (= (x188 (+ x1922 31)) x1936) (= (x142 128) x71) (= (x1649 340282366920938463463374607431768211455 x438) x1086)) (and (=> (and (= x1545 x1375) (not x970) (= x420 x682)) x1951) (=> x970 x1914)))))
(assert (x1312 x490))
(assert (= 274184521717934524641157099916833587233 (x335 (x1134 274184521717934524641157099916833587233))))
(assert (x1312 x160))
(assert (x1312 x1057))
(assert (x1267 x844 x1950))
(assert (x1312 x2037))
(assert (x1312 x1863))
(assert (x1312 x294))
(assert (x1312 x363))
(assert (x1312 x570))
(assert (x1312 x1397))
(assert (x1312 x1259))
(assert (= x1800 (=> (= (= x673 274184521717934524641157099916833587231) x1133) (and (=> (and (<= x1972 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= 115197700812830431890159100217698998050002284567939525164234024451216521560064 x126) (= (x2008 256) x130) (= x25 (x2008 160)) (not (= x2075 4062139261)) (>= x1216 0) (<= x1216 115792089237316195423570985008687907853269984665640564039457584007913129639935) (> 1208925819614629174706176 x1349) (= 4272920204 x2075) (> 1208925819614629174706176 x2112) (= 1 x1262) (<= 0 x1251) (= (x2008 192) x828) (= x1073 (x2008 224)) (not (= 2362581449 x2075)) (> x1010 0) (= (x2008 128) x1163) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1251) (= 4 x191) (not (> 2362581449 x2075)) (>= x2112 0) (not (= x2075 3257672857)) (= 160 x1103) (= (x1039 (x21 x287) (x1134 1) 0) x1715) (= (x1855 (x21 274184521717934524641157099916833587231)) x1010) (not (> 4 x191)) (<= 0 x1349) (>= 1208925819614629174706175 x1349) (= x180 (x2008 224)) (= x1675 (x2008 192)) (>= 1208925819614629174706175 x2112) x1133 (= x147 (x2008 160)) (= x1583 (x2008 256)) (= x905 (x2008 128)) (= x191 4) (= (x1215 x1715) x1216) (<= 0 x1972)) x288) (=> (not x1133) x671)))))
(assert (x1312 x426))
(assert (x1312 x1019))
(assert (x1312 x311))
(assert (= x968 x1084))
(assert (x1312 x1791))
(assert (x1312 x1945))
(assert (= (x335 (x1134 1889567281)) 1889567281))
(assert (x2101 x883))
(assert (x1688 x1565))
(assert (x1267 x735 x1407))
(assert (x1312 x1819))
(assert (= (x335 (x1134 57896044618658097711785492504343953926634992332820282019728792003956564819968)) 57896044618658097711785492504343953926634992332820282019728792003956564819968))
(assert (x1312 x1380))
(assert (x1312 x505))
(assert (x1312 x1895))
(assert (x1312 x1509))
(assert (x1312 x1395))
(assert (x1312 x1246))
(assert (x543 x1350))
(assert (x1312 x359))
(assert (x251 x505 x2))
(assert (x1312 x551))
(assert (x1688 x1374))
(assert (x543 x663))
(assert (x1312 x1254))
(assert (x1312 x1990))
(assert (x1312 x2081))
(assert (= x756 (=> (= (= 274184521717934524641157099916833587231 x559) x1410) (and (=> (not x1410) x462) (=> (and (not (= x916 3257672857)) (= x1645 1) (= x171 (x1039 (x21 x1339) (x1134 1) 0)) (> x1814 0) (= (x1215 x171) x1091) (= x1203 160) (= x818 (x999 160)) (= x1993 4) (= x707 (x999 192)) (<= x2112 1208925819614629174706175) (>= x1091 0) (= x916 4272920204) (<= 0 x1251) (not (= 4062139261 x916)) (>= x1972 0) (not (> 2362581449 x916)) (= x1814 (x1855 (x21 274184521717934524641157099916833587231))) (= 4 x1993) (> 1208925819614629174706176 x1349) (< x2112 1208925819614629174706176) (>= x1349 0) (= (x999 256) x1446) (not (= x916 2362581449)) x1410 (= (x999 224) x216) (= x1661 (x999 160)) (= x1387 (x999 256)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1972) (not (< x1993 4)) (= x573 (x999 128)) (= x526 (x999 192)) (>= x2112 0) (<= x1091 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= x1251 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x999 128) x1603) (= x813 115197700812830431890159100217698998050002284567939525164234024451216521560064) (= (x999 224) x463) (>= 1208925819614629174706175 x1349)) x361)))))
(assert (x1312 x1091))
(assert (x1312 x152))
(assert (x1312 x246))
(assert (= 0 (x395 x1591)))
(assert (x1688 x215))
(assert (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x335 (x1134 115792089237316195423570985008687907853269984665640564039457584007913129639935))))
(assert (x1312 x1336))
(assert (x1312 x347))
(assert (x1312 x1420))
(assert (x1312 x18))
(assert (x1312 x668))
(assert (x1312 x2112))
(assert (x1312 x2051))
(assert (x1312 x5))
(assert (x1312 x238))
(assert (x1688 x287))
(assert (x1312 x961))
(assert (x1312 x1862))
(assert (= (ite (= x1550 128) 115197700812830431890159100217698998050002284567939525164234024451216521560064 (x1276 x1550)) (x1450 x1550)))
(assert (x1312 x1924))
(assert (x1312 x2106))
(assert (x1312 x446))
(assert (= (and (not x950) x307) x872))
(assert (x1312 x754))
(assert (x1312 x615))
(assert (x1312 x2075))
(assert (x1688 x997))
(assert (x1312 x1686))
(assert (x1312 x2136))
(assert (= (x335 (x1134 1034154046)) 1034154046))
(assert (x1312 x642))
(assert (x1312 x915))
(assert (x1312 x874))
(assert (x1312 x480))
(assert (x1312 x54))
(assert (x1312 x167))
(assert (x1312 x114))
(assert (x1267 x337 x1986))
(assert (= 1752364190 (x335 (x1134 1752364190))))
(assert (x1312 x1550))
(assert (x1312 x279))
(assert (x1477 x893))
(assert (x1312 x207))
(assert (x1312 x1275))
(assert (= (=> (and (= x1102 x1375) (= (> x461 1) x657) (= x781 x420) (= (x1649 255 x498) x461) (not x657)) x1951) x834))
(assert (x1312 x1661))
(assert (x1312 x11))
(assert (x1312 x1043))
(assert (x1312 x877))
(assert (x1005 x339 x644))
(assert (x1312 x1780))
(assert (x1312 x796))
(assert (x1477 65535))
(assert (= x1704 (x335 (x21 x1704))))
(assert (= (=> (= (= 274184521717934524641157099916833587231 x910) x1230) (and (=> (not x1230) x2123) (=> (and (= (x188 (+ x1294 288)) x1548) (= x1012 115197700812830431890159100217698998050002284567939525164234024451216521560064) (<= x1251 115792089237316195423570985008687907853269984665640564039457584007913129639935) (not (= x933 2362581449)) (not (< x933 2362581449)) (= x1719 (x581 224)) (<= 0 x52) (not (> 4 x800)) (= x1 (x188 (+ x1294 384))) (= (x1039 (x21 x1339) (x1134 1) 0) x1834) (not (= x933 4062139261)) (= (x581 256) x859) (= x874 160) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x52) (< x1349 1208925819614629174706176) (= (x581 256) x195) x1230 (= (x1215 x1834) x52) (<= x1349 1208925819614629174706175) (= x564 (x581 160)) (= (x581 192) x432) (>= x1972 0) (= x1731 (x581 192)) (<= x2112 1208925819614629174706175) (= 4272920204 x933) (= x1066 (x581 160)) (<= 0 x2112) (= (x581 128) x646) (<= x1972 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x1432 (x581 128)) (= 4 x800) (<= 0 x1349) (not (= 3257672857 x933)) (> 1208925819614629174706176 x2112) (= x1752 (x188 (+ x1294 320))) (= x241 (x1855 (x21 274184521717934524641157099916833587231))) (= x96 (x188 (+ 352 x1294))) (= x1805 x800) (= x1514 (x581 224)) (>= x1251 0) (= x1930 1) (> x241 0)) x127))) x1938))
(assert (x1312 x390))
(assert (x1688 x1339))
(assert (= 0 (x1997 x103)))
(assert (x543 x448))
(assert (x543 x1773))
(assert (x1312 x1713))
(assert (x1267 x1543 x522))
(assert (x1312 x1354))
(assert (=> (< (- x1146 1) 10000) (= (x1134 x1146) (x21 x1146))))
(assert (x1887 x598 x1205))
(assert (x1312 x455))
(assert (x1312 x1730))
(assert (x1312 x476))
(assert (x1312 x126))
(assert (x1267 x495 x1093))
(assert (= (x1134 614716962) (x21 614716962)))
(assert (= (x1134 340282366920938463463374607431768211455) (x21 340282366920938463463374607431768211455)))
(assert (x1312 x187))
(assert (x251 x1536 x218))
(assert (x543 x2078))
(assert (x1312 x1462))
(assert (x1312 x1542))
(assert (= 1176186698 (x335 (x1134 1176186698))))
(assert (x1477 x1771))
(assert (= (x335 (x1329 x1314 2)) (+ (x335 x1314) 2)))
(assert (x1312 x236))
(assert (x1312 x438))
(assert (x1312 x203))
(assert (x1312 x892))
(assert (= 274184521717934524641157099916833587209 (x335 (x21 274184521717934524641157099916833587209))))
(assert (x1477 x1751))
(assert (x1477 x1767))
(assert (x1477 x1909))
(assert (=> (< (- x596 1) 10000) (= (x21 x596) (x1134 x596))))
(assert (x1312 x358))
(assert (x1312 x386))
(assert (x1312 x1387))
(assert (x1477 x276))
(assert (x1312 x1368))
(assert (x1477 x505))
(assert (= (x335 (x1134 4072298103)) 4072298103))
(assert (x1477 x426))
(assert (x1477 x587))
(assert (= (x1808 x1840) 0))
(assert (= (and x585 x244) x1036))
(assert (x1312 x853))
(assert (x251 x1083 x710))
(assert (x1887 x1400 x674))
(assert (x1312 x991))
(assert (x1312 x1598))
(assert (x1312 x800))
(assert (=> (> (+ 10000 1) x418) (= (x21 x418) (x1134 x418))))
(assert (x1312 x534))
(assert (x1312 x914))
(assert (x1312 x1637))
(assert (x1312 x372))
(assert (x1312 x815))
(assert (x1688 x1671))
(assert (x1312 x216))
(assert (x1312 x1464))
(assert (x1312 x1725))
(assert (x1312 x75))
(assert (= (=> (and (= (x1649 255 x498) x1311) (= x1809 x1035) (not x1794) (= (> x1311 1) x1794)) x1515) x1467))
(assert (x1312 x1578))
(assert (x251 x254 x1680))
(assert (x1477 x816))
(assert (x1312 x638))
(assert (x1312 x1603))
(assert (x1312 x1670))
(assert (x1312 x413))
(assert (x1312 x1948))
(assert (= x1735 (=> (and (<= x1907 255) (<= 0 x1726) (<= x494 255) (= x1761 (x292 (x21 274184521717934524641157099916833587233))) x1118 (<= 0 x2092) (= x653 false) (= x1608 x1460) (>= x393 0) (>= x162 0) (<= 0 x2112) (>= 1099511627775 x2126) (<= 0 x192) (>= 1208925819614629174706175 x1349) (>= x1838 0) (<= 0 x79) (= x393 (x292 (x21 274184521717934524641157099916833587242))) (<= 0 x638) (= (x292 (x21 274184521717934524641157099916833587209)) x167) (<= x639 1461501637330902918203684832716283019655932542975) (= x36 false) (>= x494 0) (= (> (x1855 (x21 274184521717934524641157099916833587231)) 0) x321) x321 (= (x292 (x21 274184521717934524641157099916833587225)) x881) (<= 0 x78) (<= x42 18446744073709551615) (>= 18446744073709551615 x1282) (>= x42 0) (<= x578 1461501637330902918203684832716283019655932542975) (= x1118 (not (= x788 274184521717934524641157099916833587209))) (<= x1460 1461501637330902918203684832716283019655932542975) (= x1460 x788) (>= 1208925819614629174706175 x648) x1888 (<= 0 x546) (= 4093572003 x1082) (<= 0 x1460) (= (x292 (x21 274184521717934524641157099916833587221)) x79) (>= 255 x382) (<= x1851 255) (>= x639 0) (= false x826) (<= x1838 1208925819614629174706175) (<= x1003 255) x1617 (<= 0 x1907) (>= x1851 0) (>= x382 0) (<= 0 x578) (>= 18446744073709551615 x33) (= x1617 (< 0 (x1855 (x21 274184521717934524641157099916833587209)))) (>= 20282409603651670423947251286015 x1458) (<= 0 x1780) (>= 1208925819614629174706175 x2112) (= (> (x1855 (x21 274184521717934524641157099916833587242)) 0) x1870) (<= x312 18446744073709551615) (>= x33 0) (<= 0 x1282) (>= x566 0) x1306 (= x1888 (< 0 (x1855 (x21 274184521717934524641157099916833587221)))) x1988 (<= 0 x312) (= (< 0 (x1855 (x21 274184521717934524641157099916833587233))) x1988) (<= 0 x986) (>= 18446744073709551615 x192) x1870 (= (x292 (x21 274184521717934524641157099916833587229)) x1780) x1866 (>= 20282409603651670423947251286015 x546) (>= x1349 0) (<= 0 x2126) (= x578 x758) (>= 18446744073709551615 x162) (= (x292 (x21 274184521717934524641157099916833587231)) x986) (>= 18446744073709551615 x566) (>= 20282409603651670423947251286015 x638) (>= x648 0) (<= 0 x881) (= (> (x1855 (x21 274184521717934524641157099916833587225)) 0) x1866) (>= x1761 0) (>= x167 0) (= x511 false) (= x1306 (> (x1855 (x21 274184521717934524641157099916833587229)) 0)) (= 274184521717934524641157099916833587209 x666) (<= 0 x1458) (= 2 x1064) (= x639 x5) (<= x2092 20282409603651670423947251286015) (>= 18446744073709551615 x1726) (>= x1003 0) (<= x78 1099511627775)) x1206)))
(assert (=> (> (+ 10000 1) x1464) (= (x1134 x1464) (x21 x1464))))
(assert (x1312 x1967))
(assert (x1312 x174))
(assert (x543 x827))
(assert (x1312 x1007))
(assert (x1688 x1088))
(assert (x1312 x421))
(assert (x1477 x1845))
(assert (= x1481 (and (not x632) x86)))
(assert (x1312 x1289))
(assert (x1312 x1251))
(assert (x1312 x666))
(assert (x1688 x418))
(assert (x1312 x837))
(assert (x1312 x599))
(assert (x1312 x418))
(assert (x533 x1328 x861 x680 x819))
(assert (x1477 340282366920938463463374607431768211455))
(assert (x1477 x844))
(assert (= x201 (=> (and (<= 0 x654) (= (= 0 x1967) x537) (< x1967 256) (= x1967 (x286 x869)) (>= 255 x1967) (= x869 (x1039 (x21 x654) x1213 0)) (= 0 x934) (<= 0 x1967) (= x1213 (x1039 (x21 x1565) (x1134 11) 0)) (< x654 1461501637330902918203684832716283019655932542976) (= (x1039 (x1134 0) (x1134 9) 0) x1160) (= (x1159 x1160) x654) (>= 1461501637330902918203684832716283019655932542975 x654)) (and (=> (not x537) x1009) (=> (and x537 (= x777 x1819)) x1600)))))
(assert (= (or (and x2089 x442) x562) x200))
(assert (x1312 x1573))
(assert (x1312 x1907))
(assert (x1312 x256))
(assert (x1312 x1326))
(assert (= 0 (x1024 x311)))
(assert (x1312 x1219))
(assert (x543 x1543))
(assert (x1887 x297 x1164))
(assert (x1312 x882))
(assert (x1887 x2058 x2054))
(assert (x1267 x1739 x1732))
(assert (= (x1620 320) (ite (and x307 x950) (x611 320) (x1170 320))))
(assert (x1312 x1629))
(assert (= (x335 (x21 x1494)) x1494))
(assert (x1312 x566))
(assert (= x931 (=> (and (= (or x1022 (not x822)) x1764) (= x932 x1022)) x1764)))
(assert (x1312 x936))
(assert (= (or x1933 (and x1987 (not x1664))) x1490))
(assert (= (x335 (x21 x528)) x528))
(assert (x1312 x1762))
(assert (x1312 x116))
(assert (x1477 x1350))
(assert (x1477 x339))
(assert (x1688 274184521717934524641157099916833587209))
(assert (x1477 x2002))
(assert (= 1208925819614629174706176 (x335 (x1134 1208925819614629174706176))))
(assert (x1312 x900))
(assert (x1312 x328))
(assert (= x941 (and x970 x1388)))
(assert (x1312 x1278))
(assert (x1312 x624))
(assert (x1312 x797))
(assert (x1312 x214))
(assert (x1312 x1448))
(assert (x1312 x1714))
(assert (x1312 x2126))
(assert (x1312 x1284))
(assert (x1312 x1909))
(assert (x1312 x1837))
(assert (= (x1134 2059260625) (x21 2059260625)))
(assert (x1477 x1624))
(assert (x1312 x1078))
(assert (x1688 x1464))
(assert (x1267 x448 x1173))
(assert (= 340282366920938463463374607431768211455 (x335 (x1134 340282366920938463463374607431768211455))))
(assert (x1312 x636))
(assert (x1312 x302))
(assert (= x1147 x968))
(assert (x1312 x2128))
(assert (= (x335 (x21 x1088)) x1088))
(assert (x1312 x94))
(assert (x1312 x1530))
(assert (x1312 x1669))
(assert (=> (< (- x1852 1) 10000) (= (x1134 x1852) (x21 x1852))))
(assert (x1312 x1752))
(assert (x543 x1451))
(assert (x1312 x1207))
(assert (x1312 x327))
(assert (x1312 x1693))
(assert (x2101 x302))
(assert (x1312 x410))
(assert (= (x335 (x21 x849)) x849))
(assert (= (x335 (x1134 4272920204)) 4272920204))
(assert (x1312 x1852))
(assert (= x288 (=> (and (= (x1649 255 x498) x1746) (= x87 (x188 (+ x1092 128))) (= x1574 (< 0 x1746)) (not (or (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1103)) (> 160 x1103)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1103))) (= (and (> x886 0) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x886))) x630) (>= 1208925819614629174706175 x1905) (not (= 0 x1262)) (= x2086 (x1649 340282366920938463463374607431768211455 x886)) (= (x128 256) x168) (>= 1208925819614629174706175 x168) (= (x188 (+ x1103 31)) x174) (not (ite x1958 x1958 (and (= true (<= x886 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (> x886 170141183460469231731687303715884105727)))) (= (x1649 115792089237316195423570985008687907853269984665640564039457584007913129639904 x174) x1092) (= x886 (x128 160)) (= x1905 (x128 128)) (= x777 (uninterp_mod (* x2086 (x1811 x254)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= x1862 0) (= (not x630) x1958)) (and (=> (and (= x1795 x777) (not x1574)) x1667) (=> x1574 x201)))))
(assert (x1312 x1381))
(assert (x1477 x967))
(assert (x1477 x1623))
(assert (x1267 x816 x1167))
(assert (x1312 x1899))
(assert (x1312 x1035))
(assert (x1312 x1838))
(assert (x1312 x625))
(assert (= (x335 (x21 x759)) x759))
(assert (x1312 x494))
(assert (x543 x238))
(assert (x1312 x846))
(assert (x1688 x1608))
(assert (x1312 x1012))
(assert (x1312 x1108))
(assert (x1312 x944))
(assert (=> (< (- x654 1) 10000) (= (x1134 x654) (x21 x654))))
(assert (x1312 x1769))
(assert (= 0 (x1366 x1156)))
(assert (x1312 x1430))
(assert (x1312 x1436))
(assert (x1312 x802))
(assert (x1312 x1310))
(assert (x1312 x889))
(assert (x1477 x272))
(assert (x1477 x372))
(assert (x1312 x1279))
(assert (x1312 x180))
(assert (x1312 x1591))
(assert (x1312 x1957))
(assert (x1477 x2015))
(assert (x1312 x1494))
(assert (x1312 x596))
(assert (x1312 x1597))
(assert (x1312 x1261))
(assert (x1312 x1103))
(assert (x1312 x1371))
(assert (x1312 x2023))
(assert (= (x1134 18446744073709551615) (x21 18446744073709551615)))
(assert (x1477 x2128))
(assert (x1477 x914))
(assert (x1312 x132))
(assert (x1312 x559))
(assert (= (=> (and (= x308 (> x1772 1)) (= x1279 x486) (= x2106 x521) (not x308) (= (x1649 255 x498) x1772)) x2028) x1554))
(assert (x1312 x183))
(assert (x1312 x598))
(assert (=> (> (+ 10000 1) x528) (= (x1134 x528) (x21 x528))))
(assert (x1312 x1565))
(assert (x1312 x1613))
(assert (x1312 x1245))
(assert (x1312 x956))
(assert (x1312 x1934))
(assert (x1312 x211))
(assert (= (x779 x81) (ite (= 128 x81) 115197700812830431890159100217698998050002284567939525164234024451216521560064 (x1778 x81))))
(assert (x1312 x1925))
(assert (x1312 x235))
(assert (x1267 x776 x560))
(assert (x1312 x1584))
(assert (= (x1134 3638949393) (x21 3638949393)))
(assert (x1312 x1346))
(assert (x1312 x883))
(assert (= (=> (and (= x173 (x1039 (x21 x418) (x1134 1) 0)) (not (= x1766 1889567281)) (= x700 (x1039 (x21 274184521717934524641157099916833587209) (x1134 1) 0)) (= x1783 76450787359836037641860180984291677749980919077056822294353438043884394381312) (= (< x327 x558) x1526) (= (not x873) x352) (= x182 (or (and (> 64 x132) (= true (<= x132 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (> x132 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (= x1766 2835717307) (= x204 (x969 (- x327 x558))) (= x2136 (x1687 x173)) (= x1150 (x188 (+ x184 68))) (< 0 x1183) (= x1100 274184521717934524641157099916833587229) (= (x2030 x184) x1411) (= x1623 x1106) (= (x1649 20282409603651670423947251286015 x889) x310) (>= x2136 0) (<= x2136 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x873 (= x1411 0)) (<= x327 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x95 274184521717934524641157099916833587209) (= x374 (x188 (+ x184 36))) (= x2136 x133) (= x1411 x1377) (= 68 x1681) (> x1411 0) (= 274184521717934524641157099916833587229 x1942) (not x1526) (= x418 (x1649 1461501637330902918203684832716283019655932542975 x1623)) (= (x188 (+ x184 4)) x1214) (= x1681 x137) (= x310 x558) (= (x1855 (x21 274184521717934524641157099916833587229)) x1183) (not (> 826074471 x1766)) (= x1628 x1642) (= 274184521717934524641157099916833587209 x2062) (= x1341 (x1649 1461501637330902918203684832716283019655932542975 x1623)) (= x10 (x1039 (x21 274184521717934524641157099916833587209) (x1134 1) 0)) (= x1377 (ite x352 1 0)) (>= 1461501637330902918203684832716283019655932542975 x1623) (= x327 (x838 x700)) (not (< x1681 4)) (= x558 x1628) (not (= x1766 826074471)) (>= x327 0) (= x1288 (+ x1642 x133)) (< (+ x1628 x2136) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= (x969 (- x1681 4)) x132) (= x137 (x969 (- x1150 x184))) (not (= 2514000705 x1766)) (not x182)) x1222) x131))
(assert (x1312 x1618))
(assert (= (ite (= 128 x479) 115197700812830431890159100217698998050002284567939525164234024451216521560064 (x1808 x479)) (x1131 x479)))
(assert (x1312 x383))
(assert (x1312 x1282))
(assert (= (x21 4093572003) (x1134 4093572003)))
(assert (x1312 x1548))
(assert (x1477 x448))
(assert (x1312 x557))
(assert (x1312 x847))
(assert (x1688 x1146))
(assert (x1477 x586))
(assert (x1312 x1239))
(assert (x1312 x1379))
(assert (= 20282409603651670423947251286016 (x335 (x1134 20282409603651670423947251286016))))
(assert (x1688 x697))
(assert (x251 x889 x2095))
(assert (x1312 x158))
(assert (x1477 x883))
(assert (x1312 x1702))
(assert (x1312 x1538))
(assert (x1312 x1017))
(assert (x1312 x571))
(assert (x1312 x1942))
(check-sat)
