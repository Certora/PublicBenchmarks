(set-option :print-success false)
(set-option :produce-models true)
(set-logic QF_UFDTNRA)
(declare-fun uninterp_frac (Real Real) Real)
(define-fun axiom_frac_bound ((d1 Real) (d2 Real)) Bool (and (=> (> d2 0) (and (<= 0.0 (uninterp_frac d1 d2)) (< (uninterp_frac d1 d2) 1.0))) (=> (< d2 0) (and (>= 0.0 (uninterp_frac d1 d2)) (> (uninterp_frac d1 d2) (- 1.0))))))
(define-fun axiom_frac_zero ((d1 Real) (d2 Real) (m1 Real) (m2 Real) (e Real)) Bool (=> (and (= d1 (* m1 m2)) (or (= d2 m1) (= d2 m2))) (= e 0)))
(define-fun uninterp_mod ((x Real) (m Real)) Real (ite (and (>= x 0) (< x m)) x (ite (and (>= x m) (< x (+ m m))) (- x m) (ite (and (>= x (- m)) (< x 0)) (+ x m) (* m (uninterp_frac x m))))))
(define-fun axiom_int_approximation ((x Real)) Bool (or (= x 0) (>= x 1) (<= x (- 1))))
(declare-datatypes ((x2268 0)) (((x94 (x1289 Real)) (x1817 (x169 x2268) (x187 Real)) (x1551 (x1841 x2268) (x2382 x2268) (x2331 Real)))))
(declare-fun x2593 () Real)
(declare-fun x1448 () Bool)
(declare-fun x1480 () Bool)
(declare-fun x51 () Real)
(declare-fun x1965 () Bool)
(declare-fun x1753 () Real)
(declare-fun x1124 () Bool)
(declare-fun x2531 () Bool)
(declare-fun x766 () Bool)
(declare-fun x2501 (Real) Real)
(declare-fun x2007 () Real)
(declare-fun x1214 () Bool)
(declare-fun x2242 (Real Real) Real)
(declare-fun x2422 () Bool)
(declare-fun x1198 () Bool)
(declare-fun x862 () Real)
(declare-fun x933 () Real)
(declare-fun x2873 () Real)
(declare-fun x2524 () Real)
(declare-fun x2008 () Real)
(declare-fun x1867 () Real)
(declare-fun x2490 () Bool)
(declare-fun x3046 () Bool)
(declare-fun x1456 () Real)
(declare-fun x1567 () Real)
(declare-fun x257 () Bool)
(declare-fun x1458 () Bool)
(declare-fun x972 () Bool)
(declare-fun x777 () Bool)
(declare-fun x1683 () Bool)
(declare-fun x488 () Bool)
(declare-fun x2493 () Real)
(declare-fun x1398 () Bool)
(declare-fun x1128 () Real)
(declare-fun x2539 () Real)
(declare-fun x2763 () Bool)
(declare-fun x691 () Real)
(declare-fun x1081 () Bool)
(declare-fun x407 () Real)
(declare-fun x1044 () Bool)
(declare-fun x633 () x2268)
(declare-fun x1691 () Real)
(declare-fun x37 () Real)
(declare-fun x2588 () Bool)
(declare-fun x1611 () Bool)
(declare-fun x582 () Real)
(declare-fun x584 () Bool)
(declare-fun x2604 () Bool)
(declare-fun x2615 () Bool)
(declare-fun x1400 () Bool)
(declare-fun x1255 () Real)
(declare-fun x2284 () Bool)
(declare-fun x1679 () Bool)
(declare-fun x1164 () Bool)
(declare-fun x998 () Real)
(declare-fun x1220 () Real)
(declare-fun x526 () Bool)
(declare-fun x1741 () Bool)
(declare-fun x1291 () Bool)
(declare-fun x1211 () Bool)
(declare-fun x2678 () Bool)
(declare-fun x2583 () Bool)
(declare-fun x2912 () Real)
(declare-fun x1325 () Real)
(declare-fun x1158 () Bool)
(declare-fun x2378 () Real)
(declare-fun x586 (Real) Real)
(declare-fun x892 () Real)
(declare-fun x307 () Real)
(declare-fun x1286 () Real)
(declare-fun x2878 () Real)
(declare-fun x2965 () Real)
(declare-fun x2940 () Real)
(declare-fun x3089 () Real)
(declare-fun x580 () Real)
(declare-fun x1112 () Bool)
(declare-fun x1489 () Real)
(declare-fun x2746 () Bool)
(declare-fun x320 () Real)
(declare-fun x2699 () Bool)
(declare-fun x2609 () Real)
(declare-fun x318 () Bool)
(declare-fun x2541 () Bool)
(declare-fun x508 () Real)
(declare-fun x475 () Real)
(declare-fun x2432 (Real) Real)
(declare-fun x742 () Real)
(declare-fun x683 () Bool)
(declare-fun x595 () Real)
(declare-fun x1076 () Real)
(declare-fun x1789 () Bool)
(declare-fun x1048 () Real)
(declare-fun x1631 () Real)
(declare-fun x1980 () Real)
(declare-fun x2044 (x2268) Real)
(declare-fun x1413 () Bool)
(declare-fun x834 () Real)
(declare-fun x1006 () Real)
(declare-fun x2850 (x2268) Real)
(declare-fun x1832 (Real) Real)
(declare-fun x2549 () Bool)
(declare-fun x2788 () Bool)
(declare-fun x75 () Real)
(declare-fun x1465 () Bool)
(declare-fun x758 (Real) Real)
(declare-fun x417 () Real)
(declare-fun x2057 () Bool)
(declare-fun x2975 () Bool)
(declare-fun x599 () Real)
(declare-fun x1957 () Bool)
(declare-fun x776 () Bool)
(declare-fun x14 () Real)
(declare-fun x1773 () Real)
(declare-fun x1240 () Real)
(declare-fun x1579 (x2268) Real)
(declare-fun x2000 () Bool)
(declare-fun x119 () Real)
(declare-fun x3119 () Real)
(declare-fun x1777 () Real)
(declare-fun x941 () x2268)
(declare-fun x2736 () Bool)
(declare-fun x1005 () Real)
(declare-fun x951 () Real)
(declare-fun x1618 () Bool)
(declare-fun x1569 () Bool)
(declare-fun x1948 () Bool)
(declare-fun x1635 () Bool)
(declare-fun x2070 (Real) Real)
(declare-fun x2665 () Real)
(declare-fun x1701 () Real)
(declare-fun x147 () Bool)
(declare-fun x2693 () Bool)
(declare-fun x980 () Bool)
(declare-fun x2945 (Real) Real)
(declare-fun x2325 () Real)
(declare-fun x2130 () Bool)
(declare-fun x233 () Real)
(declare-fun x2399 () Bool)
(declare-fun x290 () Bool)
(declare-fun x2126 () Bool)
(declare-fun x2225 () Bool)
(declare-fun x664 () Bool)
(declare-fun x2728 () Real)
(declare-fun x2795 (Real) Real)
(declare-fun x1283 () Bool)
(declare-fun x3083 () Real)
(declare-fun x1550 () Real)
(declare-fun x1279 () Bool)
(declare-fun x1495 () Bool)
(declare-fun x2871 () Bool)
(declare-fun x3030 () Real)
(declare-fun x2519 () Bool)
(declare-fun x2918 () Bool)
(declare-fun x2831 () Bool)
(declare-fun x2847 () Real)
(declare-fun x2267 () Real)
(declare-fun x550 () Bool)
(declare-fun x163 () Real)
(declare-fun x801 () Real)
(declare-fun x398 () Bool)
(declare-fun x1664 () Real)
(declare-fun x1344 () Real)
(declare-fun x2257 () Bool)
(declare-fun x1680 () Bool)
(declare-fun x3142 () Real)
(declare-fun x2352 () Real)
(declare-fun x1643 () Bool)
(declare-fun x2071 () Real)
(declare-fun x1713 () Real)
(declare-fun x225 () Real)
(declare-fun x1632 () Real)
(declare-fun x2416 () Bool)
(declare-fun x3013 (Real) Real)
(declare-fun x2815 () Bool)
(declare-fun x310 () Real)
(declare-fun x1174 () Real)
(declare-fun x2803 () Bool)
(declare-fun x2286 () Bool)
(declare-fun x2982 () Real)
(declare-fun x1014 () Bool)
(declare-fun x537 () Real)
(declare-fun x2478 () Bool)
(declare-fun x2927 () Real)
(declare-fun x1487 () Bool)
(declare-fun x1842 () Bool)
(declare-fun x1184 () Bool)
(declare-fun x387 () Bool)
(declare-fun x1541 () Bool)
(declare-fun x1845 () Real)
(declare-fun x2210 () Bool)
(declare-fun x336 () Bool)
(declare-fun x944 () Real)
(declare-fun x2159 () Bool)
(declare-fun x2347 () Real)
(declare-fun x2376 () Real)
(declare-fun x2720 (Real) Real)
(declare-fun x2375 () Real)
(declare-fun x2202 () Real)
(declare-fun x3079 (Real) Real)
(declare-fun x2956 () Bool)
(declare-fun x1053 () Real)
(declare-fun x819 () Real)
(declare-fun x2319 (Real) Real)
(declare-fun x2470 () Bool)
(declare-fun x2155 () Bool)
(declare-fun x1486 () Bool)
(declare-fun x2661 () Real)
(declare-fun x1555 () Bool)
(declare-fun x684 () Real)
(declare-fun x1270 () Real)
(declare-fun x2201 () Real)
(declare-fun x1999 () Bool)
(declare-fun x3037 () Real)
(declare-fun x1381 () Bool)
(declare-fun x1209 () Real)
(declare-fun x1370 () Real)
(declare-fun x2046 () Bool)
(declare-fun x694 () Bool)
(declare-fun x1259 () x2268)
(declare-fun x2285 () Real)
(declare-fun x730 () Real)
(declare-fun x1148 () Bool)
(declare-fun x1748 () Bool)
(declare-fun x897 () Real)
(declare-fun x403 () Real)
(declare-fun x102 () Bool)
(declare-fun x489 () Real)
(declare-fun x1488 () Bool)
(declare-fun x2917 () Real)
(declare-fun x1177 () Bool)
(declare-fun x1301 () Bool)
(declare-fun x1846 () Real)
(declare-fun x2190 () Real)
(declare-fun x2233 () Bool)
(declare-fun x1303 () Bool)
(declare-fun x1234 () Real)
(declare-fun x1658 () Real)
(declare-fun x1000 () Real)
(declare-fun x1849 () Real)
(declare-fun x1222 () Bool)
(declare-fun x945 () Bool)
(declare-fun x405 () Bool)
(declare-fun x1231 (Real) Real)
(declare-fun x27 () x2268)
(declare-fun x3005 () Bool)
(declare-fun x3080 () Real)
(declare-fun x741 () Bool)
(declare-fun x2238 (Real) x2268)
(declare-fun x1382 () Bool)
(declare-fun x3059 () Real)
(declare-fun x738 () Real)
(declare-fun x2624 () Bool)
(declare-fun x1067 () Real)
(declare-fun x600 () Bool)
(declare-fun x2770 () Bool)
(declare-fun x2696 () Real)
(declare-fun x1503 () Real)
(declare-fun x971 () Bool)
(declare-fun x476 () Bool)
(declare-fun x470 () Real)
(declare-fun x857 () Real)
(declare-fun x1788 () Real)
(declare-fun x2576 () Bool)
(declare-fun x831 () Real)
(declare-fun x2589 () Bool)
(declare-fun x1334 () Bool)
(declare-fun x3051 () Bool)
(declare-fun x1437 () Real)
(declare-fun x2223 () x2268)
(declare-fun x815 () Bool)
(declare-fun x341 () Real)
(declare-fun x3050 () Bool)
(declare-fun x1578 () Bool)
(declare-fun x2771 () Bool)
(declare-fun x3082 () Bool)
(declare-fun x1438 () Real)
(declare-fun x2504 () Bool)
(declare-fun x1060 () Bool)
(declare-fun x438 () Bool)
(declare-fun x196 () Bool)
(declare-fun x1641 () Bool)
(declare-fun x754 () Bool)
(declare-fun x2933 () Real)
(declare-fun x936 () Real)
(declare-fun x1606 () Real)
(declare-fun x2656 () Bool)
(declare-fun x1919 () Real)
(declare-fun x667 () Real)
(declare-fun x2966 () Real)
(declare-fun x1120 () x2268)
(declare-fun x992 () Bool)
(declare-fun x1859 () Real)
(declare-fun x1796 () Bool)
(declare-fun x1082 () Real)
(declare-fun x2337 () Bool)
(declare-fun x3140 () Real)
(declare-fun x2384 () Real)
(declare-fun x74 () Bool)
(declare-fun x2445 () Bool)
(declare-fun x1404 () Bool)
(declare-fun x2937 (x2268) Real)
(declare-fun x2228 () Real)
(declare-fun x2962 () Real)
(declare-fun x295 () Bool)
(declare-fun x647 () Bool)
(declare-fun x2876 () Real)
(declare-fun x1987 () Real)
(declare-fun x603 () Real)
(declare-fun x2718 () Bool)
(declare-fun x739 () Bool)
(declare-fun x1981 () Bool)
(declare-fun x164 () Bool)
(declare-fun x2017 () Bool)
(declare-fun x823 () Real)
(declare-fun x2077 () Real)
(declare-fun x2898 () Real)
(declare-fun x1445 () Real)
(declare-fun x3097 (Real) Real)
(declare-fun x1807 () Real)
(declare-fun x176 () Bool)
(declare-fun x2563 () Bool)
(declare-fun x60 (Real) Real)
(declare-fun x718 (Real) Real)
(declare-fun x1633 () Bool)
(declare-fun x2658 () Bool)
(declare-fun x1843 () Bool)
(declare-fun x746 () Bool)
(declare-fun x204 () Real)
(declare-fun x2377 () Real)
(declare-fun x950 () Real)
(declare-fun x1865 () Bool)
(declare-fun x271 () Bool)
(declare-fun x190 () Real)
(declare-fun x2477 () Real)
(declare-fun x884 () Bool)
(declare-fun x452 () Bool)
(declare-fun x1765 () Bool)
(declare-fun x2235 () Real)
(declare-fun x83 () Bool)
(declare-fun x1622 () Real)
(declare-fun x2140 () Bool)
(declare-fun x1514 () Real)
(declare-fun x136 (Real) Real)
(declare-fun x2396 () Real)
(declare-fun x2273 (Real) Real)
(declare-fun x710 () Real)
(declare-fun x382 () Bool)
(declare-fun x1155 () Real)
(declare-fun x2435 () Bool)
(declare-fun x1359 () Real)
(declare-fun x1210 () Bool)
(declare-fun x238 () Real)
(declare-fun x3108 () Bool)
(declare-fun x2657 () Real)
(declare-fun x2101 () Real)
(declare-fun x2395 () Real)
(declare-fun x2186 () Bool)
(declare-fun x3020 () Bool)
(declare-fun x627 () x2268)
(declare-fun x1528 (Real) Real)
(declare-fun x1894 () Bool)
(declare-fun x891 () Real)
(declare-fun x2630 () Real)
(declare-fun x343 () Bool)
(declare-fun x2036 (Real) Real)
(declare-fun x2868 () Bool)
(declare-fun x1054 () Bool)
(declare-fun x2648 () Real)
(declare-fun x2461 () Bool)
(declare-fun x172 () Real)
(declare-fun x2858 () Bool)
(declare-fun x2523 () Real)
(declare-fun x2949 () Bool)
(declare-fun x2408 () Bool)
(declare-fun x457 () Bool)
(declare-fun x590 () Real)
(declare-fun x2446 () Bool)
(declare-fun x889 () Real)
(declare-fun x330 () Real)
(declare-fun x1657 () Bool)
(declare-fun x1505 () Bool)
(declare-fun x1409 () Real)
(declare-fun x994 () Bool)
(declare-fun x386 () Bool)
(declare-fun x2689 () Real)
(declare-fun x376 () Real)
(declare-fun x672 () Bool)
(declare-fun x2455 (Real) Real)
(declare-fun x32 () Bool)
(declare-fun x2659 () Real)
(declare-fun x2060 () Bool)
(declare-fun x902 () Bool)
(declare-fun x1302 () Bool)
(declare-fun x1601 () Bool)
(declare-fun x1724 () Real)
(declare-fun x1498 () Bool)
(declare-fun x915 (Real) Real)
(declare-fun x962 () Real)
(declare-fun x305 () Bool)
(declare-fun x2605 () Real)
(declare-fun x1162 () Bool)
(declare-fun x1967 () Real)
(declare-fun x3071 () Real)
(declare-fun x503 () Real)
(declare-fun x2254 () Bool)
(declare-fun x2035 () Bool)
(declare-fun x946 () Bool)
(declare-fun x24 () Real)
(declare-fun x553 () Bool)
(declare-fun x266 () Bool)
(declare-fun x2522 () Bool)
(declare-fun x912 () Real)
(declare-fun x245 () Bool)
(declare-fun x1207 () Bool)
(declare-fun x939 () Real)
(declare-fun x2737 () Real)
(declare-fun x2289 () Bool)
(declare-fun x767 () Bool)
(declare-fun x839 () Bool)
(declare-fun x1755 () Bool)
(declare-fun x1034 () Real)
(declare-fun x104 () Real)
(declare-fun x541 () Bool)
(declare-fun x2644 () Bool)
(declare-fun x3095 () Bool)
(declare-fun x1574 () Real)
(declare-fun x2934 () Bool)
(declare-fun x1394 () Bool)
(declare-fun x2575 () Bool)
(declare-fun x1716 () Real)
(declare-fun x1388 () Bool)
(declare-fun x565 () Bool)
(declare-fun x153 () Bool)
(declare-fun x1154 () Bool)
(declare-fun x2865 () Real)
(declare-fun x2726 () Bool)
(declare-fun x395 () Bool)
(declare-fun x809 () Bool)
(declare-fun x2198 () Real)
(declare-fun x636 () Bool)
(declare-fun x2336 () Real)
(declare-fun x235 () Bool)
(declare-fun x1524 () Real)
(declare-fun x2642 () Real)
(declare-fun x1441 () Real)
(declare-fun x2717 () Real)
(declare-fun x1620 () Bool)
(declare-fun x1145 () Real)
(declare-fun x1612 () Real)
(declare-fun x726 () Real)
(declare-fun x2653 () Bool)
(declare-fun x3086 () Real)
(declare-fun x335 () Real)
(declare-fun x2019 () Bool)
(declare-fun x1403 () Real)
(declare-fun x1990 () Bool)
(declare-fun x474 () Real)
(declare-fun x812 () Real)
(declare-fun x2843 () Real)
(declare-fun x2279 () Bool)
(declare-fun x589 () Real)
(declare-fun x2517 () Real)
(declare-fun x2216 () Real)
(declare-fun x516 () Bool)
(declare-fun x1695 () Real)
(declare-fun x1467 () Real)
(declare-fun x782 () Bool)
(declare-fun x1880 () Real)
(declare-fun x2747 () Bool)
(declare-fun x2833 () Bool)
(declare-fun x1935 () Bool)
(declare-fun x577 () Real)
(declare-fun x1733 () Real)
(declare-fun x2141 () Real)
(declare-fun x64 () Real)
(declare-fun x1530 (Real) Real)
(declare-fun x1719 () Bool)
(declare-fun x2875 () Bool)
(declare-fun x1449 () Bool)
(declare-fun x1055 () Real)
(declare-fun x955 () Real)
(declare-fun x1942 () Real)
(declare-fun x757 () Real)
(declare-fun x1321 () Bool)
(declare-fun x1134 () Bool)
(declare-fun x1855 () Bool)
(declare-fun x824 () Bool)
(declare-fun x2857 () Bool)
(declare-fun x237 () Bool)
(declare-fun x2808 () Real)
(declare-fun x1349 () Real)
(declare-fun x2105 () Real)
(declare-fun x1675 () Bool)
(declare-fun x1041 () Bool)
(declare-fun x2695 () Bool)
(declare-fun x2623 () Bool)
(declare-fun x3056 () Bool)
(declare-fun x2393 () Bool)
(declare-fun x2542 () Bool)
(declare-fun x2066 () Real)
(declare-fun x294 () Bool)
(declare-fun x938 () Bool)
(declare-fun x231 () Real)
(declare-fun x2226 () Bool)
(declare-fun x202 () Real)
(declare-fun x3068 () Real)
(declare-fun x2548 () Real)
(declare-fun x2723 () Bool)
(declare-fun x1608 () Real)
(declare-fun x514 () Real)
(declare-fun x1599 () Real)
(declare-fun x1341 () Bool)
(declare-fun x252 () Bool)
(declare-fun x1902 () Real)
(declare-fun x2425 () Real)
(declare-fun x2986 () Real)
(declare-fun x1887 () Real)
(declare-fun x1200 () Real)
(declare-fun x2157 (Real) Real)
(declare-fun x3041 () Bool)
(declare-fun x1899 () Real)
(declare-fun x394 () Bool)
(declare-fun x1326 () Bool)
(declare-fun x1332 () Bool)
(declare-fun x2123 () Bool)
(declare-fun x2401 () Bool)
(declare-fun x2434 () Real)
(declare-fun x2009 () Real)
(declare-fun x3073 () Real)
(declare-fun x3101 () Real)
(declare-fun x113 () Bool)
(declare-fun x2055 () Real)
(declare-fun x3107 () Bool)
(declare-fun x871 () Bool)
(declare-fun x3010 () Bool)
(declare-fun x314 (Real) Real)
(declare-fun x2309 () Bool)
(declare-fun x2403 () Bool)
(declare-fun x2745 () Bool)
(declare-fun x3023 () Real)
(declare-fun x1471 () Real)
(declare-fun x1520 () Bool)
(declare-fun x31 () Bool)
(declare-fun x2813 () Bool)
(declare-fun x2509 () Bool)
(declare-fun x496 () Bool)
(declare-fun x2829 () Real)
(declare-fun x785 () Real)
(declare-fun x2162 () Real)
(declare-fun x800 () Bool)
(declare-fun x360 () Bool)
(declare-fun x1493 () Real)
(declare-fun x254 () Bool)
(declare-fun x644 () Bool)
(declare-fun x1052 () Real)
(declare-fun x2889 () Bool)
(declare-fun x1519 () Bool)
(declare-fun x960 () Real)
(declare-fun x670 () Bool)
(declare-fun x2846 () Bool)
(declare-fun x2830 () Bool)
(declare-fun x2407 () Bool)
(declare-fun x1242 () Real)
(declare-fun x910 () Bool)
(declare-fun x829 () Bool)
(declare-fun x1224 () Bool)
(declare-fun x1336 () Bool)
(declare-fun x408 () Real)
(declare-fun x178 (x2268) Real)
(declare-fun x2349 () Real)
(declare-fun x2584 () Real)
(declare-fun x1476 () Real)
(declare-fun x617 () Real)
(declare-fun x1642 (Real) Real)
(declare-fun x1094 () Real)
(declare-fun x772 () Real)
(declare-fun x1540 () Real)
(declare-fun x1160 () Real)
(declare-fun x1190 () Bool)
(declare-fun x609 () Bool)
(declare-fun x369 () Real)
(declare-fun x870 () Bool)
(declare-fun x486 () Bool)
(declare-fun x1371 () Bool)
(declare-fun x1399 () Real)
(declare-fun x251 () Bool)
(declare-fun x3110 () Real)
(declare-fun x1906 () Real)
(declare-fun x1070 () Real)
(declare-fun x1151 () Bool)
(declare-fun x1739 () Real)
(declare-fun x1508 () Bool)
(declare-fun x1426 () Bool)
(declare-fun x1496 (x2268) Real)
(declare-fun x1953 () Real)
(declare-fun x2926 () Real)
(declare-fun x2792 () Real)
(declare-fun x708 () Bool)
(declare-fun x648 () Bool)
(declare-fun x123 () Real)
(declare-fun x783 () Bool)
(declare-fun x558 () Bool)
(declare-fun x1309 () Real)
(declare-fun x2163 () Bool)
(declare-fun x2991 () Real)
(declare-fun x461 () Bool)
(declare-fun x2643 () Bool)
(declare-fun x2580 () Real)
(declare-fun x363 () Bool)
(declare-fun x3126 () Bool)
(declare-fun x1389 () Bool)
(declare-fun x1264 () Bool)
(declare-fun x1346 () Bool)
(declare-fun x2109 () Bool)
(declare-fun x1122 () Bool)
(declare-fun x1604 () Bool)
(declare-fun x1363 () Real)
(declare-fun x761 () Bool)
(declare-fun x1996 () Bool)
(declare-fun x2405 () Bool)
(declare-fun x3102 () Bool)
(declare-fun x3024 () Real)
(declare-fun x100 () Real)
(declare-fun x2113 () Real)
(declare-fun x1897 () Real)
(declare-fun x830 (Real) Real)
(declare-fun x1513 () Bool)
(declare-fun x907 () Bool)
(declare-fun x150 () Bool)
(declare-fun x2855 () Real)
(declare-fun x2134 () Real)
(declare-fun x2329 () Bool)
(declare-fun x1822 () x2268)
(declare-fun x1431 () Real)
(declare-fun x1435 () Real)
(declare-fun x1668 () Bool)
(declare-fun x2085 () Real)
(declare-fun x539 () Real)
(declare-fun x512 () Real)
(declare-fun x259 () Bool)
(declare-fun x2181 () Real)
(declare-fun x155 () Bool)
(declare-fun x2963 () Real)
(declare-fun x1597 () Real)
(declare-fun x268 () Real)
(declare-fun x2229 () Bool)
(declare-fun x1732 () Bool)
(declare-fun x1315 () Bool)
(declare-fun x2760 () Bool)
(declare-fun x1518 (Real) Real)
(declare-fun x2844 () Real)
(declare-fun x1562 () Real)
(declare-fun x2853 (x2268) Real)
(declare-fun x399 (Real) Real)
(declare-fun x415 () Real)
(declare-fun x2819 () Bool)
(declare-fun x2315 () Bool)
(declare-fun x1461 () Bool)
(declare-fun x18 () Real)
(declare-fun x1004 () Bool)
(declare-fun x2957 () Real)
(declare-fun x572 () Bool)
(declare-fun x1282 () Real)
(declare-fun x1285 () Real)
(declare-fun x1042 () Real)
(declare-fun x434 () Bool)
(declare-fun x2836 () Bool)
(declare-fun x2556 () Real)
(declare-fun x2782 () Real)
(declare-fun x1964 () Real)
(declare-fun x1243 () Bool)
(declare-fun x244 () Bool)
(declare-fun x1115 () Real)
(declare-fun x1584 (Real) Real)
(declare-fun x2295 () Bool)
(declare-fun x2383 () Real)
(declare-fun x46 () Real)
(declare-fun x947 () Bool)
(declare-fun x286 () Real)
(declare-fun x1116 () Bool)
(declare-fun x1179 () Bool)
(declare-fun x1566 () Real)
(declare-fun x2414 () x2268)
(declare-fun x931 () Real)
(declare-fun x3008 () Real)
(declare-fun x847 () Bool)
(declare-fun x2428 () Bool)
(declare-fun x133 () Bool)
(declare-fun x658 () Bool)
(declare-fun x540 () Real)
(declare-fun x472 () Real)
(declare-fun x2559 () Bool)
(declare-fun x624 () Real)
(declare-fun x1700 () Real)
(declare-fun x1715 () Bool)
(declare-fun x137 () Bool)
(declare-fun x1229 () Bool)
(declare-fun x2168 () Bool)
(declare-fun x814 () Real)
(declare-fun x2249 () Bool)
(declare-fun x2891 () Real)
(declare-fun x1352 () Bool)
(declare-fun x1453 () Real)
(declare-fun x2670 () Real)
(declare-fun x1907 () Bool)
(declare-fun x2012 () Real)
(declare-fun x53 () Bool)
(declare-fun x1307 () Real)
(declare-fun x1881 (Real) Real)
(declare-fun x673 () Real)
(declare-fun x1501 () Real)
(declare-fun x1813 () Real)
(declare-fun x2334 () Real)
(declare-fun x2806 () Bool)
(declare-fun x1201 () Real)
(declare-fun x1924 (Real) Real)
(declare-fun x2450 () Real)
(declare-fun x234 () Bool)
(declare-fun x2097 () Real)
(declare-fun x2821 () Real)
(declare-fun x920 () Bool)
(declare-fun x2056 () Bool)
(declare-fun x446 () Bool)
(declare-fun x3076 () Bool)
(declare-fun x2247 () Real)
(declare-fun x3131 () Bool)
(declare-fun x1056 () Bool)
(declare-fun x1870 () Real)
(declare-fun x986 () Bool)
(declare-fun x3125 () Bool)
(declare-fun x2203 () Bool)
(declare-fun x65 () Bool)
(declare-fun x3134 () Real)
(declare-fun x1969 () Real)
(declare-fun x810 () Bool)
(declare-fun x2629 () Real)
(declare-fun x481 () Real)
(declare-fun x23 () Bool)
(declare-fun x618 () Bool)
(declare-fun x159 () Bool)
(declare-fun x182 () Bool)
(declare-fun x1960 () Bool)
(declare-fun x219 () Real)
(declare-fun x1216 () Real)
(declare-fun x2676 () Bool)
(declare-fun x2730 () Real)
(declare-fun x1619 () Real)
(declare-fun x2128 () Real)
(declare-fun x2433 () Bool)
(declare-fun x1557 () Bool)
(declare-fun x662 () Real)
(declare-fun x856 () Real)
(declare-fun x1659 () Bool)
(declare-fun x935 (Real) Real)
(declare-fun x1915 () Bool)
(declare-fun x2683 () Bool)
(declare-fun x2175 () Real)
(declare-fun x2775 () Bool)
(declare-fun x2568 () Bool)
(declare-fun x149 () Bool)
(declare-fun x1947 () Real)
(declare-fun x803 () Bool)
(declare-fun x1793 () Bool)
(declare-fun x3036 () Bool)
(declare-fun x2088 () x2268)
(declare-fun x134 () Real)
(declare-fun x2650 () Real)
(declare-fun x1362 () Real)
(declare-fun x2421 () Bool)
(declare-fun x442 () Bool)
(declare-fun x985 () Real)
(declare-fun x659 () Real)
(declare-fun x1537 () Bool)
(declare-fun x156 () Real)
(declare-fun x2449 () x2268)
(declare-fun x122 () Bool)
(declare-fun x2807 () Bool)
(declare-fun x2901 () Bool)
(declare-fun x784 () Real)
(declare-fun x879 () Real)
(declare-fun x2990 () Bool)
(declare-fun x344 () Real)
(declare-fun x1090 () Real)
(declare-fun x2048 () Bool)
(declare-fun x1405 () Bool)
(declare-fun x2897 () Bool)
(declare-fun x527 () Real)
(declare-fun x702 () Real)
(declare-fun x1219 () Real)
(declare-fun x1771 () Real)
(declare-fun x274 () Real)
(declare-fun x2132 () Real)
(declare-fun x453 () Bool)
(declare-fun x3070 () Bool)
(declare-fun x1580 () Real)
(declare-fun x2256 () Real)
(declare-fun x2789 () Real)
(declare-fun x3084 () Real)
(declare-fun x981 () Bool)
(declare-fun x2214 (Real) Real)
(declare-fun x1171 () Bool)
(declare-fun x129 () Real)
(declare-fun x2118 () Real)
(declare-fun x2711 () Real)
(declare-fun x1723 () Bool)
(declare-fun x154 () Real)
(declare-fun x1159 () Bool)
(declare-fun x764 () Bool)
(declare-fun x1452 (Real) Real)
(declare-fun x2443 () Real)
(declare-fun x1710 () Real)
(declare-fun x2532 () Bool)
(declare-fun x1886 () Real)
(declare-fun x1769 () Real)
(declare-fun x1888 (Real) Real)
(declare-fun x1759 () Real)
(declare-fun x1615 () Bool)
(declare-fun x2121 () Real)
(declare-fun x3123 () Real)
(declare-fun x869 () Bool)
(declare-fun x555 () Bool)
(declare-fun x653 () Real)
(declare-fun x2664 () Real)
(declare-fun x866 () Bool)
(declare-fun x3065 () Bool)
(declare-fun x1457 () Real)
(declare-fun x2969 () Bool)
(declare-fun x1768 () Bool)
(declare-fun x1772 () Bool)
(declare-fun x493 () Bool)
(declare-fun x3096 () Bool)
(declare-fun x2687 () Real)
(declare-fun x2082 () Real)
(declare-fun x1878 () Real)
(declare-fun x2951 () Bool)
(declare-fun x325 () Real)
(declare-fun x2164 () Real)
(declare-fun x1543 () Bool)
(declare-fun x2987 () Real)
(declare-fun x2885 (x2268) Real)
(declare-fun x2274 () x2268)
(declare-fun x859 () Bool)
(declare-fun x2232 () Bool)
(declare-fun x2765 () Bool)
(declare-fun x1978 () Bool)
(declare-fun x2265 (Real) Real)
(declare-fun x1722 () Bool)
(declare-fun x2173 () Real)
(declare-fun x1905 () Real)
(declare-fun x2083 () Real)
(declare-fun x2597 () Bool)
(declare-fun x1872 () Bool)
(declare-fun x1861 () Real)
(declare-fun x1141 () x2268)
(declare-fun x158 () Real)
(declare-fun x6 () Real)
(declare-fun x836 () Real)
(declare-fun x1477 () Real)
(declare-fun x1447 () Real)
(declare-fun x466 () Bool)
(declare-fun x1113 () Bool)
(declare-fun x1030 () Real)
(declare-fun x1860 () Bool)
(declare-fun x1213 () Bool)
(declare-fun x1873 () Real)
(declare-fun x2479 () Real)
(declare-fun x2566 () Real)
(declare-fun x1327 () Bool)
(declare-fun x1257 () Bool)
(declare-fun x2258 () Bool)
(declare-fun x2872 () Real)
(declare-fun x2622 () Bool)
(declare-fun x731 () Bool)
(declare-fun x1181 () Bool)
(declare-fun x1684 () Real)
(declare-fun x2719 () Real)
(declare-fun x1095 () Bool)
(declare-fun x2293 (x2268) Real)
(declare-fun x656 () Bool)
(declare-fun x1355 () Real)
(declare-fun x193 () Real)
(declare-fun x392 () Real)
(declare-fun x1130 () Real)
(declare-fun x2418 () Bool)
(declare-fun x2143 () Real)
(declare-fun x1299 () Bool)
(declare-fun x883 () Real)
(declare-fun x2158 (Real) Real)
(declare-fun x410 () Bool)
(declare-fun x171 () Real)
(declare-fun x1185 () Bool)
(declare-fun x2180 () Real)
(declare-fun x2866 () Bool)
(declare-fun x1123 () Real)
(declare-fun x329 () Real)
(declare-fun x740 () Real)
(declare-fun x2487 () Real)
(declare-fun x1709 () Real)
(declare-fun x569 () Real)
(declare-fun x1704 () Bool)
(declare-fun x1570 () Bool)
(declare-fun x1023 (Real) Real)
(declare-fun x1140 () Real)
(declare-fun x1280 () Bool)
(declare-fun x1650 () Real)
(declare-fun x25 () Real)
(declare-fun x1847 () Real)
(declare-fun x2087 () Bool)
(declare-fun x1137 () Bool)
(declare-fun x1820 () Real)
(declare-fun x141 () Bool)
(declare-fun x1814 () Real)
(declare-fun x1463 () Bool)
(declare-fun x531 () Real)
(declare-fun x7 () Real)
(declare-fun x262 () Bool)
(declare-fun x3106 () Real)
(declare-fun x423 () Real)
(declare-fun x1885 () Real)
(declare-fun x2950 () Bool)
(declare-fun x1544 () Bool)
(declare-fun x378 () Bool)
(declare-fun x573 () Real)
(declare-fun x2507 () Bool)
(declare-fun x2988 () Bool)
(declare-fun x1534 () x2268)
(declare-fun x2886 () Real)
(declare-fun x214 () Real)
(declare-fun x1926 () Real)
(declare-fun x358 () Real)
(declare-fun x3137 () Real)
(declare-fun x1101 () Bool)
(declare-fun x431 () Bool)
(declare-fun x1952 () Bool)
(declare-fun x2686 () Real)
(declare-fun x2920 () Real)
(declare-fun x2922 () Bool)
(declare-fun x1256 () x2268)
(declare-fun x1830 () Real)
(declare-fun x668 () Real)
(declare-fun x439 () Bool)
(declare-fun x2691 () Bool)
(declare-fun x367 () Real)
(declare-fun x2804 () Real)
(declare-fun x372 () Real)
(declare-fun x1078 () Real)
(declare-fun x551 () Bool)
(declare-fun x1729 () Real)
(declare-fun x601 () Bool)
(declare-fun x1512 (Real) Real)
(declare-fun x2424 () Bool)
(declare-fun x1144 () Real)
(declare-fun x1966 () Real)
(declare-fun x2514 (Real) Real)
(declare-fun x29 () Bool)
(declare-fun x769 () Bool)
(declare-fun x556 () Bool)
(declare-fun x914 () Real)
(declare-fun x2220 () Bool)
(declare-fun x132 () Bool)
(declare-fun x1395 () Real)
(declare-fun x657 () Bool)
(declare-fun x2639 () Bool)
(declare-fun x825 (Real) Real)
(declare-fun x2465 () Bool)
(declare-fun x1665 () Bool)
(declare-fun x61 () Real)
(declare-fun x3012 () Bool)
(declare-fun x2 () Bool)
(declare-fun x1784 () Real)
(declare-fun x1387 () Bool)
(declare-fun x1889 () Bool)
(declare-fun x1354 () Bool)
(declare-fun x2222 () Bool)
(declare-fun x2320 () Bool)
(declare-fun x2291 () Bool)
(declare-fun x1591 () Bool)
(declare-fun x1951 () Bool)
(declare-fun x704 () Bool)
(declare-fun x2685 () Bool)
(declare-fun x1828 () Bool)
(declare-fun x2561 () Real)
(declare-fun x1131 () Real)
(declare-fun x3019 () Bool)
(declare-fun x2282 () Real)
(declare-fun x2974 () Real)
(declare-fun x2125 () Bool)
(declare-fun x3064 () Bool)
(declare-fun x905 () Bool)
(declare-fun x3136 () Bool)
(declare-fun x2558 () Real)
(declare-fun x87 () Real)
(declare-fun x256 () Bool)
(declare-fun x1893 () Bool)
(declare-fun x300 () Real)
(declare-fun x2038 () Bool)
(declare-fun x1628 () Real)
(declare-fun x273 () Real)
(declare-fun x1232 (Real) Real)
(declare-fun x2119 () Bool)
(declare-fun x1731 () Bool)
(declare-fun x1816 () Real)
(declare-fun x3055 () Bool)
(declare-fun x1386 () Bool)
(declare-fun x108 () Real)
(declare-fun x2612 () x2268)
(declare-fun x135 () Bool)
(declare-fun x607 () Real)
(declare-fun x429 () Real)
(declare-fun x33 () Real)
(declare-fun x2896 () Real)
(declare-fun x1750 () Bool)
(declare-fun x443 () Bool)
(declare-fun x826 () Real)
(declare-fun x1245 () Bool)
(declare-fun x1338 () Bool)
(declare-fun x124 (Real) Real)
(declare-fun x2394 () Bool)
(declare-fun x2031 (Real) Real)
(declare-fun x2106 () Real)
(declare-fun x5 () Bool)
(declare-fun x126 () Real)
(declare-fun x468 () Bool)
(declare-fun x1272 () Real)
(declare-fun x2776 () Bool)
(declare-fun x751 () Bool)
(declare-fun x184 () Bool)
(declare-fun x1592 () Real)
(declare-fun x2358 () Bool)
(declare-fun x2907 () Bool)
(declare-fun x1083 () Real)
(declare-fun x1074 () Real)
(declare-fun x71 () Real)
(declare-fun x1365 () Real)
(declare-fun x2660 () Bool)
(declare-fun x2861 () Real)
(declare-fun x1542 () Real)
(declare-fun x2480 () Real)
(declare-fun x1002 () Bool)
(declare-fun x1484 () Real)
(declare-fun x2802 () x2268)
(declare-fun x940 () x2268)
(declare-fun x1146 () Bool)
(declare-fun x1266 () Bool)
(declare-fun x3145 () Real)
(declare-fun x1954 () Bool)
(declare-fun x1424 () Bool)
(declare-fun x173 () Real)
(declare-fun x370 () Bool)
(declare-fun x2065 () Real)
(declare-fun x2323 () Real)
(declare-fun x674 () Real)
(declare-fun x2108 () Real)
(declare-fun x682 () Bool)
(declare-fun x77 () Real)
(declare-fun x2753 () Bool)
(declare-fun x1638 () Bool)
(declare-fun x2652 () Bool)
(declare-fun x563 () Real)
(declare-fun x63 () Real)
(declare-fun x608 () Real)
(declare-fun x2034 () Bool)
(declare-fun x1932 (Real) Real)
(declare-fun x2146 () Bool)
(declare-fun x2328 () Real)
(declare-fun x1247 () Real)
(declare-fun x2895 (Real) Real)
(declare-fun x326 () Real)
(declare-fun x2491 () Bool)
(declare-fun x278 () Real)
(declare-fun x2752 () Bool)
(declare-fun x1322 () Real)
(declare-fun x2734 () Bool)
(declare-fun x2877 () Real)
(declare-fun x1673 () Real)
(declare-fun x3038 () Bool)
(declare-fun x2595 () Bool)
(declare-fun x2218 () Real)
(declare-fun x1662 () Real)
(declare-fun x1670 () Real)
(declare-fun x629 () Bool)
(declare-fun x2817 () Bool)
(declare-fun x227 (x2268) Real)
(declare-fun x759 () Bool)
(declare-fun x2636 () Real)
(declare-fun x1197 () Bool)
(declare-fun x436 () Real)
(declare-fun x59 () Bool)
(declare-fun x2628 () Real)
(declare-fun x1760 () Real)
(declare-fun x2942 () Real)
(declare-fun x2117 () Bool)
(declare-fun x315 () Bool)
(declare-fun x756 () Bool)
(declare-fun x30 () Bool)
(declare-fun x2006 () Bool)
(declare-fun x890 () Bool)
(declare-fun x2596 () Bool)
(declare-fun x2244 () Real)
(declare-fun x1835 () Real)
(declare-fun x2091 () Real)
(declare-fun x2041 () Bool)
(declare-fun x2525 (Real) Real)
(declare-fun x768 () Bool)
(declare-fun x1923 () Real)
(declare-fun x168 () Real)
(declare-fun x2398 () Bool)
(declare-fun x430 () Bool)
(declare-fun x2272 () Real)
(declare-fun x524 () Real)
(declare-fun x591 () Bool)
(declare-fun x152 () Real)
(declare-fun x2954 () Bool)
(declare-fun x109 () Bool)
(declare-fun x1699 () Bool)
(declare-fun x2948 () Bool)
(declare-fun x96 () Bool)
(declare-fun x3077 () Bool)
(declare-fun x1676 () Real)
(declare-fun x1407 () Bool)
(declare-fun x1833 () Bool)
(declare-fun x841 () Bool)
(declare-fun x1061 () Bool)
(declare-fun x371 () Real)
(declare-fun x1690 () Bool)
(declare-fun x2217 () Bool)
(declare-fun x2318 () Real)
(declare-fun x1290 () Real)
(declare-fun x498 () Real)
(declare-fun x1258 () Bool)
(declare-fun x2013 () Bool)
(declare-fun x1378 (Real) Real)
(declare-fun x306 () Real)
(declare-fun x1749 () Bool)
(declare-fun x1472 () Real)
(declare-fun x2635 () Bool)
(declare-fun x2259 () Bool)
(declare-fun x70 () Bool)
(declare-fun x3040 () Bool)
(declare-fun x1844 () Real)
(declare-fun x2332 () Real)
(declare-fun x1825 () Real)
(declare-fun x2809 () Bool)
(declare-fun x1110 () Real)
(declare-fun x317 () Bool)
(declare-fun x1908 () Bool)
(declare-fun x2133 (Real) Real)
(declare-fun x3130 () Real)
(declare-fun x547 () Bool)
(declare-fun x2311 () Real)
(declare-fun x2296 () Real)
(declare-fun x2343 () Bool)
(declare-fun x1554 () Real)
(declare-fun x2004 () Real)
(declare-fun x1157 () Bool)
(declare-fun x2417 () Bool)
(declare-fun x220 () Real)
(declare-fun x736 () Bool)
(declare-fun x2462 () Real)
(declare-fun x232 (x2268) Real)
(declare-fun x913 () Bool)
(declare-fun x1176 () Real)
(declare-fun x1856 () Real)
(declare-fun x447 (Real) Real)
(declare-fun x1745 () Real)
(declare-fun x3085 () Real)
(declare-fun x1766 () Real)
(declare-fun x1028 () Real)
(declare-fun x1236 () Real)
(declare-fun x2466 () Bool)
(declare-fun x2785 () Bool)
(declare-fun x1133 () Bool)
(declare-fun x1139 () Bool)
(declare-fun x1504 () Bool)
(declare-fun x645 () Real)
(declare-fun x2411 () Real)
(declare-fun x932 () Real)
(declare-fun x416 () Real)
(declare-fun x2245 () Bool)
(declare-fun x445 () Real)
(declare-fun x1929 () Real)
(declare-fun x1818 () Bool)
(declare-fun x1575 () Bool)
(declare-fun x2972 (Real) Real)
(declare-fun x993 () Real)
(declare-fun x2372 () Real)
(declare-fun x1811 () x2268)
(declare-fun x506 () Real)
(declare-fun x1669 () Bool)
(declare-fun x2725 () Real)
(declare-fun x2246 () Real)
(declare-fun x622 () Bool)
(declare-fun x680 () Real)
(declare-fun x319 () Real)
(declare-fun x861 () Real)
(declare-fun x248 () Bool)
(declare-fun x1933 () Real)
(declare-fun x638 () Real)
(declare-fun x2409 () Bool)
(declare-fun x557 () Bool)
(declare-fun x1107 () Real)
(declare-fun x339 (x2268) Real)
(declare-fun x2206 () Bool)
(declare-fun x1879 () Bool)
(declare-fun x2824 () Bool)
(declare-fun x2380 () Real)
(declare-fun x2943 () Real)
(declare-fun x895 () Bool)
(declare-fun x1460 () Bool)
(declare-fun x687 (x2268) Real)
(declare-fun x1316 () Bool)
(declare-fun x1757 () Bool)
(declare-fun x1375 () Real)
(declare-fun x1913 () Bool)
(declare-fun x1033 () Bool)
(declare-fun x2370 () Bool)
(declare-fun x1244 () Bool)
(declare-fun x1485 () Bool)
(declare-fun x297 () Bool)
(declare-fun x948 () Bool)
(declare-fun x949 (Real) Real)
(declare-fun x332 () Real)
(declare-fun x477 () Bool)
(declare-fun x3113 () Bool)
(declare-fun x2156 () Real)
(declare-fun x3016 () Bool)
(declare-fun x3127 () Real)
(declare-fun x167 () Real)
(declare-fun x1376 () Real)
(declare-fun x291 () Bool)
(declare-fun x101 () Real)
(declare-fun x495 () Bool)
(declare-fun x1977 () Bool)
(declare-fun x2251 (Real) Real)
(declare-fun x2841 () Real)
(declare-fun x462 () Real)
(declare-fun x1451 () Bool)
(declare-fun x999 () Bool)
(declare-fun x322 () Real)
(declare-fun x1199 () Real)
(declare-fun x143 (Real) Real)
(declare-fun x2513 () Bool)
(declare-fun x269 () Bool)
(declare-fun x2552 () Real)
(declare-fun x2870 () Bool)
(declare-fun x1432 () Bool)
(declare-fun x412 () Bool)
(declare-fun x2204 () Real)
(declare-fun x2646 () Real)
(declare-fun x1168 () Real)
(declare-fun x1147 () Bool)
(declare-fun x90 () Real)
(declare-fun x2766 () Bool)
(declare-fun x2607 () Real)
(declare-fun x1241 () Bool)
(declare-fun x1263 () Real)
(declare-fun x1805 (Real) Real)
(declare-fun x1296 () Bool)
(declare-fun x1340 () Real)
(declare-fun x518 () x2268)
(declare-fun x337 () Real)
(declare-fun x1228 () Bool)
(declare-fun x2114 () Bool)
(declare-fun x1102 () x2268)
(declare-fun x693 () Bool)
(declare-fun x144 () Real)
(declare-fun x1016 () Bool)
(declare-fun x2743 () Real)
(declare-fun x1728 () Bool)
(declare-fun x199 () Bool)
(declare-fun x802 () Bool)
(declare-fun x717 () Real)
(declare-fun x356 () Bool)
(declare-fun x649 () Real)
(declare-fun x362 () Real)
(declare-fun x2152 () Real)
(declare-fun x967 () Real)
(declare-fun x422 () Bool)
(declare-fun x711 () Real)
(declare-fun x260 (Real) Real)
(declare-fun x116 () Bool)
(declare-fun x1251 () Bool)
(declare-fun x81 () Real)
(declare-fun x1248 () Real)
(declare-fun x1364 () Real)
(declare-fun x2938 () Bool)
(declare-fun x3035 () x2268)
(declare-fun x1703 () Bool)
(declare-fun x1647 () Bool)
(declare-fun x1910 () Real)
(declare-fun x448 () Real)
(declare-fun x1393 () Bool)
(declare-fun x2269 () Bool)
(declare-fun x502 () Real)
(declare-fun x840 () Real)
(declare-fun x2496 () Bool)
(declare-fun x1414 () Bool)
(declare-fun x191 () Real)
(declare-fun x1851 () Real)
(declare-fun x1979 (Real) Real)
(declare-fun x970 () Real)
(declare-fun x1928 () Bool)
(declare-fun x903 () Real)
(declare-fun x587 () Real)
(declare-fun x1108 () Bool)
(declare-fun x596 () Bool)
(declare-fun x1297 () Bool)
(declare-fun x2529 () Bool)
(declare-fun x328 () Bool)
(declare-fun x1468 () Bool)
(declare-fun x2773 () Real)
(declare-fun x1277 () Bool)
(declare-fun x1781 () Real)
(declare-fun x345 () Real)
(declare-fun x3044 () Bool)
(declare-fun x1661 () Bool)
(declare-fun x1276 () Real)
(declare-fun x26 () Bool)
(declare-fun x2441 () Real)
(declare-fun x1320 () Bool)
(declare-fun x2546 () Real)
(declare-fun x2735 () Bool)
(declare-fun x2212 () Real)
(declare-fun x93 () Real)
(declare-fun x2742 () Real)
(declare-fun x2275 () Real)
(declare-fun x11 (Real Real) Real)
(declare-fun x2996 (Real) Real)
(declare-fun x853 () Real)
(declare-fun x2252 () Bool)
(declare-fun x735 () Real)
(declare-fun x922 (x2268) Real)
(declare-fun x3144 () Real)
(declare-fun x961 () Real)
(declare-fun x705 () Bool)
(declare-fun x2715 () Bool)
(declare-fun x2314 () Bool)
(declare-fun x1834 () Bool)
(declare-fun x1153 () Real)
(declare-fun x1774 () Real)
(declare-fun x480 () Bool)
(declare-fun x1711 () Bool)
(declare-fun x919 () Real)
(declare-fun x1317 () Real)
(declare-fun x851 () Bool)
(declare-fun x401 () Real)
(declare-fun x520 () Real)
(declare-fun x632 () Real)
(declare-fun x1319 () Real)
(declare-fun x1038 () Bool)
(declare-fun x1011 () Bool)
(declare-fun x1013 () Bool)
(declare-fun x666 () Bool)
(declare-fun x361 () Bool)
(declare-fun x614 () Bool)
(declare-fun x1945 () Bool)
(declare-fun x296 () Bool)
(declare-fun x1563 () Bool)
(declare-fun x247 () Real)
(declare-fun x2992 () Real)
(declare-fun x2092 () Real)
(declare-fun x2357 () Real)
(declare-fun x2827 () Bool)
(declare-fun x1065 () Real)
(declare-fun x1630 () Real)
(declare-fun x1693 () Real)
(declare-fun x559 () Bool)
(declare-fun x2099 () Bool)
(declare-fun x2294 () Real)
(declare-fun x1178 () Real)
(declare-fun x1558 () Bool)
(declare-fun x1295 () Bool)
(declare-fun x576 () Real)
(declare-fun x2967 () Real)
(declare-fun x1217 () Real)
(declare-fun x2931 () Bool)
(declare-fun x2037 () Real)
(declare-fun x1366 () Real)
(declare-fun x365 () Bool)
(declare-fun x333 () Bool)
(declare-fun x2645 () x2268)
(declare-fun x2081 () Bool)
(declare-fun x2921 () Bool)
(declare-fun x2165 () Bool)
(declare-fun x2093 () Bool)
(declare-fun x2703 () Real)
(declare-fun x1984 () Real)
(declare-fun x523 () Bool)
(declare-fun x500 () Bool)
(declare-fun x2385 () Real)
(declare-fun x1583 () Real)
(declare-fun x127 () Real)
(declare-fun x483 (Real) Real)
(declare-fun x2570 () Real)
(declare-fun x2993 (Real) Real)
(declare-fun x2183 () Bool)
(declare-fun x1738 () Real)
(declare-fun x1858 () Bool)
(declare-fun x1152 () Bool)
(declare-fun x2805 () Real)
(declare-fun x2184 () Real)
(declare-fun x198 () Real)
(declare-fun x1221 () Real)
(declare-fun x1031 () Bool)
(declare-fun x368 () Bool)
(declare-fun x552 () Bool)
(declare-fun x1536 () x2268)
(declare-fun x793 () Bool)
(declare-fun x454 () Real)
(declare-fun x2064 () Real)
(declare-fun x1088 () Real)
(declare-fun x2301 () Bool)
(declare-fun x978 () Real)
(declare-fun x473 () Real)
(declare-fun x597 () Real)
(declare-fun x1688 () Real)
(declare-fun x719 () Real)
(declare-fun x1218 () Bool)
(declare-fun x1335 () Bool)
(declare-fun x1553 () Bool)
(declare-fun x1737 () Bool)
(declare-fun x686 () Bool)
(declare-fun x1794 () Bool)
(declare-fun x1522 () Real)
(declare-fun x441 () Bool)
(declare-fun x2464 () Real)
(declare-fun x2089 () x2268)
(declare-fun x639 () Real)
(declare-fun x2211 () Real)
(declare-fun x1261 () Bool)
(declare-fun x1260 () Bool)
(declare-fun x1194 () Real)
(declare-fun x1046 () Bool)
(declare-fun x2671 () Real)
(declare-fun x419 () Bool)
(declare-fun x1411 () Real)
(declare-fun x2603 () Bool)
(declare-fun x49 () Bool)
(declare-fun x2567 () Bool)
(declare-fun x1790 () Real)
(declare-fun x48 () Real)
(declare-fun x47 () Bool)
(declare-fun x1995 () Bool)
(declare-fun x1721 (Real) Real)
(declare-fun x868 () Real)
(declare-fun x1066 () Bool)
(declare-fun x1063 () Real)
(declare-fun x1071 () Real)
(declare-fun x2335 () Bool)
(declare-fun x562 () Bool)
(declare-fun x2968 () Bool)
(declare-fun x1401 () Bool)
(declare-fun x1573 () Bool)
(declare-fun x2601 () Bool)
(declare-fun x2754 () Bool)
(declare-fun x157 () Bool)
(declare-fun x289 () Real)
(declare-fun x1323 () Real)
(declare-fun x1854 () Bool)
(declare-fun x937 () Bool)
(declare-fun x242 () Bool)
(declare-fun x917 () x2268)
(declare-fun x111 () Bool)
(declare-fun x161 () Real)
(declare-fun x1051 () Bool)
(declare-fun x882 () Real)
(declare-fun x1806 () Bool)
(declare-fun x1029 () Bool)
(declare-fun x797 () Bool)
(declare-fun x1380 () Real)
(declare-fun x2219 () Bool)
(declare-fun x2115 () Bool)
(declare-fun x2884 () Real)
(declare-fun x1250 () Real)
(declare-fun x1949 () Bool)
(declare-fun x1762 () Bool)
(declare-fun x2489 () Bool)
(declare-fun x1235 () Bool)
(declare-fun x2290 () Real)
(declare-fun x954 () Real)
(declare-fun x790 () Bool)
(declare-fun x2955 () Bool)
(declare-fun x1098 () Real)
(declare-fun x820 () Bool)
(declare-fun x383 () Bool)
(declare-fun x733 () Bool)
(declare-fun x1274 () Real)
(declare-fun x82 () Real)
(declare-fun x1020 () Bool)
(declare-fun x1019 () Real)
(declare-fun x1871 () Bool)
(declare-fun x1687 (Real) Real)
(declare-fun x1798 () Real)
(declare-fun x2701 () Bool)
(declare-fun x2704 () Bool)
(declare-fun x1328 () Bool)
(declare-fun x2750 () Bool)
(declare-fun x1831 () Bool)
(declare-fun x1576 () Bool)
(declare-fun x166 () Real)
(declare-fun x1852 () Bool)
(declare-fun x2710 () Real)
(declare-fun x2946 () Bool)
(declare-fun x1007 () Bool)
(declare-fun x2709 (x2268) Real)
(declare-fun x44 () Real)
(declare-fun x798 () Bool)
(declare-fun x566 () Real)
(declare-fun x2053 () Real)
(declare-fun x2503 () Bool)
(declare-fun x1535 () Bool)
(declare-fun x3025 (Real) Real)
(declare-fun x3088 () Real)
(declare-fun x2705 () Bool)
(declare-fun x643 () Bool)
(declare-fun x1491 () Real)
(declare-fun x1971 () Bool)
(declare-fun x1829 () Real)
(declare-fun x534 () Bool)
(declare-fun x2796 () Real)
(declare-fun x979 () Real)
(declare-fun x2798 () Bool)
(declare-fun x192 () Bool)
(declare-fun x1494 () Bool)
(declare-fun x284 (Real) Real)
(declare-fun x697 () Real)
(declare-fun x848 () Bool)
(declare-fun x351 () Bool)
(declare-fun x2454 () Bool)
(declare-fun x873 () Real)
(declare-fun x1627 () Bool)
(declare-fun x1077 (x2268) Real)
(declare-fun x1718 () Bool)
(declare-fun x2045 () Real)
(declare-fun x1105 () Bool)
(declare-fun x532 () Bool)
(declare-fun x2234 (Real) Real)
(declare-fun x1402 () Bool)
(declare-fun x66 () Real)
(declare-fun x2577 () Bool)
(declare-fun x338 () Real)
(declare-fun x464 () Bool)
(declare-fun x1057 () Real)
(declare-fun x2042 () Bool)
(declare-fun x3042 () Bool)
(declare-fun x2458 () Real)
(declare-fun x3129 (Real) Real)
(declare-fun x952 () Bool)
(declare-fun x2448 () Real)
(declare-fun x1823 () Bool)
(declare-fun x205 (Real) Real)
(declare-fun x1895 (Real) Real)
(declare-fun x2366 () Real)
(declare-fun x1446 () Bool)
(declare-fun x1068 () Bool)
(declare-fun x2620 () Bool)
(declare-fun x1126 () Real)
(declare-fun x2688 () Bool)
(declare-fun x807 () Real)
(declare-fun x3007 () Real)
(declare-fun x301 () Bool)
(declare-fun x1312 (Real) Real)
(declare-fun x3061 () Bool)
(declare-fun x813 () Bool)
(declare-fun x1564 () Bool)
(declare-fun x3060 () Bool)
(declare-fun x3091 () Real)
(declare-fun x188 () Real)
(declare-fun x927 () Bool)
(declare-fun x2084 () Bool)
(declare-fun x210 () Bool)
(declare-fun x1936 () Real)
(declare-fun x2882 () Real)
(declare-fun x2739 () Bool)
(declare-fun x2979 () Bool)
(declare-fun x2820 () Real)
(declare-fun x1810 () Real)
(declare-fun x2379 () Bool)
(declare-fun x2614 () Bool)
(declare-fun x1502 () Real)
(declare-fun x1511 () Real)
(declare-fun x605 () Bool)
(declare-fun x1311 () Bool)
(declare-fun x1018 () Real)
(declare-fun x1909 () Real)
(declare-fun x1509 () Real)
(declare-fun x2177 () Real)
(declare-fun x115 () Real)
(declare-fun x3028 () Bool)
(declare-fun x1582 () Bool)
(declare-fun x1351 () Bool)
(declare-fun x2697 () Bool)
(declare-fun x283 () Bool)
(declare-fun x2774 () Bool)
(declare-fun x2388 () Real)
(declare-fun x2978 () Real)
(declare-fun x2727 () Real)
(declare-fun x62 () Bool)
(declare-fun x2694 () Real)
(declare-fun x3121 () Real)
(declare-fun x2363 () Real)
(declare-fun x3135 () Bool)
(declare-fun x2028 () Bool)
(declare-fun x1651 () Bool)
(declare-fun x671 () Bool)
(declare-fun x1383 () Real)
(declare-fun x393 () Real)
(declare-fun x709 () Real)
(declare-fun x420 () Bool)
(declare-fun x2313 () Real)
(declare-fun x207 () Bool)
(declare-fun x72 () Real)
(declare-fun x789 () Real)
(declare-fun x226 () Real)
(declare-fun x1594 () Bool)
(declare-fun x2067 (Real) Real)
(declare-fun x561 () Bool)
(declare-fun x3017 () Bool)
(declare-fun x331 () Bool)
(declare-fun x837 () Bool)
(declare-fun x2913 () Bool)
(declare-fun x2475 () Real)
(declare-fun x911 () Real)
(declare-fun x2741 () Real)
(declare-fun x3053 () Real)
(declare-fun x145 (Real) Real)
(declare-fun x1422 (x2268) Real)
(declare-fun x2150 () Real)
(declare-fun x2816 () Real)
(declare-fun x304 () Real)
(declare-fun x1292 () Bool)
(declare-fun x1333 () Bool)
(declare-fun x2107 (Real) Real)
(declare-fun x504 () Bool)
(declare-fun x174 () Real)
(declare-fun x380 () Bool)
(declare-fun x1287 () Real)
(declare-fun x2051 () Bool)
(declare-fun x2192 () Bool)
(declare-fun x346 () Bool)
(declare-fun x748 () Real)
(declare-fun x2021 () Real)
(declare-fun x906 () Real)
(declare-fun x2494 () Real)
(declare-fun x1974 () Bool)
(declare-fun x146 () Real)
(declare-fun x1075 () Real)
(declare-fun x92 () Bool)
(declare-fun x112 () Bool)
(declare-fun x2565 () Bool)
(declare-fun x221 () Real)
(declare-fun x433 () Real)
(declare-fun x3122 () Bool)
(declare-fun x2838 () Real)
(declare-fun x2651 () Bool)
(declare-fun x969 () Real)
(declare-fun x548 () Real)
(declare-fun x1003 () Bool)
(declare-fun x3147 () Bool)
(declare-fun x925 () Real)
(declare-fun x2262 () Real)
(declare-fun x2621 () Real)
(declare-fun x1170 () Bool)
(declare-fun x2287 () Real)
(declare-fun x2481 () Bool)
(declare-fun x2863 () Real)
(declare-fun x628 () Bool)
(declare-fun x612 () Bool)
(declare-fun x579 () Real)
(declare-fun x1827 () Bool)
(declare-fun x1916 () Bool)
(declare-fun x1037 (x2268) Real)
(declare-fun x1304 () Bool)
(declare-fun x342 () Real)
(declare-fun x3027 () Bool)
(declare-fun x2759 () Bool)
(declare-fun x2052 () Bool)
(declare-fun x602 () Real)
(declare-fun x2176 () Real)
(declare-fun x1698 () Bool)
(declare-fun x194 () Real)
(declare-fun x1043 () Real)
(declare-fun x1598 () Bool)
(declare-fun x55 () Bool)
(declare-fun x1025 () Bool)
(declare-fun x490 () Real)
(declare-fun x2261 () Real)
(declare-fun x140 () Real)
(declare-fun x2569 () Real)
(declare-fun x1324 () Bool)
(declare-fun x50 () x2268)
(declare-fun x546 () Bool)
(declare-fun x1838 () Bool)
(declare-fun x2879 () Bool)
(declare-fun x2647 () Real)
(declare-fun x1883 () Bool)
(declare-fun x1617 () Bool)
(declare-fun x2316 () Real)
(declare-fun x1314 () Real)
(declare-fun x2330 () Real)
(declare-fun x1440 () Bool)
(declare-fun x2902 () Bool)
(declare-fun x2510 () Real)
(declare-fun x105 () Real)
(declare-fun x1705 () Bool)
(declare-fun x773 () Bool)
(declare-fun x456 () Real)
(declare-fun x2431 (Real) Real)
(declare-fun x309 () Bool)
(declare-fun x3098 () Bool)
(declare-fun x2537 (x2268) Real)
(declare-fun x2536 () Bool)
(declare-fun x661 (Real Real) Real)
(declare-fun x2928 () Bool)
(declare-fun x2288 () Bool)
(declare-fun x2681 () Real)
(declare-fun x728 () Real)
(declare-fun x2679 () Bool)
(declare-fun x1764 () Bool)
(declare-fun x1360 (Real) Real)
(declare-fun x2740 () Real)
(declare-fun x1369 () Real)
(declare-fun x1215 () Bool)
(declare-fun x2894 () Bool)
(declare-fun x2457 () Real)
(declare-fun x21 () Bool)
(declare-fun x1609 (Real Real) Real)
(declare-fun x1874 () Real)
(declare-fun x2732 () Bool)
(declare-fun x1803 () Real)
(declare-fun x349 () Bool)
(declare-fun x3022 () Real)
(declare-fun x975 () Bool)
(declare-fun x206 () Bool)
(declare-fun x272 () Real)
(declare-fun x2460 (Real) Real)
(declare-fun x2069 () Real)
(declare-fun x604 () Real)
(declare-fun x1586 () Real)
(declare-fun x2135 () Bool)
(declare-fun x2351 () Real)
(declare-fun x942 () Real)
(declare-fun x222 () Bool)
(declare-fun x2138 () Bool)
(declare-fun x2292 () Bool)
(declare-fun x2102 () Bool)
(declare-fun x1866 () Bool)
(declare-fun x791 () Real)
(declare-fun x1747 () Real)
(declare-fun x2591 () Real)
(declare-fun x1121 () Bool)
(declare-fun x2200 () Real)
(declare-fun x2721 () Real)
(declare-fun x34 () Real)
(declare-fun x821 () Bool)
(declare-fun x2090 () Real)
(declare-fun x794 () Real)
(declare-fun x1064 () Bool)
(declare-fun x2148 () Real)
(declare-fun x2492 () Bool)
(declare-fun x2160 () Bool)
(declare-fun x2516 () Bool)
(declare-fun x513 () Real)
(declare-fun x2832 () Real)
(declare-fun x2195 (Real) Real)
(declare-fun x1927 () Real)
(declare-fun x303 () Real)
(declare-fun x2587 () Real)
(declare-fun x1269 () Real)
(declare-fun x1166 () Bool)
(declare-fun x2079 () Real)
(declare-fun x3054 () Bool)
(declare-fun x1896 () Real)
(declare-fun x3029 () Bool)
(declare-fun x139 () Bool)
(declare-fun x1783 () Real)
(declare-fun x1752 () Bool)
(declare-fun x3087 () Bool)
(declare-fun x646 () Bool)
(declare-fun x564 () Bool)
(declare-fun x1636 () Bool)
(declare-fun x373 () Bool)
(declare-fun x3014 () Real)
(declare-fun x142 () Real)
(declare-fun x1226 () Real)
(declare-fun x2243 () Bool)
(declare-fun x2724 () Bool)
(declare-fun x744 () Real)
(declare-fun x347 () Bool)
(declare-fun x1648 () Bool)
(declare-fun x2170 (Real) Real)
(declare-fun x3133 (Real) Real)
(declare-fun x928 () Bool)
(declare-fun x1692 () Real)
(declare-fun x1357 () Bool)
(declare-fun x811 () Real)
(declare-fun x1329 () Real)
(declare-fun x990 () Real)
(declare-fun x519 () Bool)
(declare-fun x3072 () Real)
(declare-fun x1483 () Bool)
(declare-fun x2360 () Bool)
(declare-fun x3093 () Bool)
(declare-fun x1373 () Bool)
(declare-fun x2356 () Real)
(declare-fun x1808 () Real)
(declare-fun x1111 () Real)
(declare-fun x598 () Bool)
(declare-fun x487 () Bool)
(declare-fun x2456 () Real)
(declare-fun x1602 () Real)
(declare-fun x414 () Real)
(declare-fun x2834 (Real) Real)
(declare-fun x2231 () Real)
(declare-fun x1353 () Bool)
(declare-fun x1587 () Bool)
(declare-fun x592 () Bool)
(declare-fun x1571 () Bool)
(declare-fun x2255 () Real)
(declare-fun x1548 () Bool)
(declare-fun x1746 () Real)
(declare-fun x1561 () Bool)
(declare-fun x2638 (Real) Real)
(declare-fun x909 () Bool)
(declare-fun x1135 () Bool)
(declare-fun x669 () Real)
(declare-fun x1983 () Bool)
(declare-fun x725 () Real)
(declare-fun x181 () Bool)
(declare-fun x1986 () Real)
(declare-fun x2189 () Bool)
(declare-fun x2880 () Bool)
(declare-fun x200 () Bool)
(declare-fun x774 () Real)
(declare-fun x131 () Real)
(declare-fun x1212 () Real)
(declare-fun x1192 () Bool)
(declare-fun x1754 () Bool)
(declare-fun x85 () Bool)
(declare-fun x2122 () Bool)
(declare-fun x875 () Real)
(declare-fun x2627 () Bool)
(declare-fun x1204 () Bool)
(declare-fun x2835 () Real)
(declare-fun x1305 () Real)
(declare-fun x3066 () Real)
(declare-fun x1278 () Real)
(declare-fun x2545 () Bool)
(declare-fun x2112 (Real) Real)
(declare-fun x2667 () Real)
(declare-fun x2022 () Real)
(declare-fun x545 () Real)
(declare-fun x2469 () Bool)
(declare-fun x877 () Real)
(declare-fun x1091 () Bool)
(declare-fun x1973 () Bool)
(declare-fun x1640 () Real)
(declare-fun x898 () Bool)
(declare-fun x3141 () Real)
(declare-fun x2348 () Bool)
(declare-fun x1267 () Bool)
(declare-fun x2810 () Bool)
(declare-fun x1406 () Real)
(declare-fun x1377 () Bool)
(declare-fun x2887 () Real)
(declare-fun x2590 () x2268)
(declare-fun x567 () Bool)
(declare-fun x15 () Bool)
(declare-fun x2277 () Bool)
(declare-fun x2499 () Bool)
(declare-fun x727 () Bool)
(declare-fun x2521 () Bool)
(declare-fun x1479 () Real)
(declare-fun x2826 () Bool)
(declare-fun x2266 () Bool)
(declare-fun x2767 (Real) Real)
(declare-fun x953 () Real)
(declare-fun x2608 () Real)
(declare-fun x2368 () Bool)
(declare-fun x2054 () Bool)
(declare-fun x2837 () Real)
(declare-fun x1912 () Real)
(declare-fun x2906 () Bool)
(declare-fun x2058 () Bool)
(declare-fun x1743 () Real)
(declare-fun x2550 () Real)
(declare-fun x1252 (Real) Real)
(declare-fun x3032 () Real)
(declare-fun x121 () Real)
(declare-fun x2867 () Bool)
(declare-fun x118 () Real)
(declare-fun x2812 () Bool)
(declare-fun x2618 () Bool)
(declare-fun x755 () Bool)
(declare-fun x788 () Real)
(declare-fun x2520 () Real)
(declare-fun x2762 () Real)
(declare-fun x678 () Bool)
(declare-fun x3048 () Real)
(declare-fun x987 () Real)
(declare-fun x864 () Bool)
(declare-fun x1072 () Bool)
(declare-fun x775 () Real)
(declare-fun x2207 () Bool)
(declare-fun x2312 () Bool)
(declare-fun x654 () Real)
(declare-fun x3094 () Bool)
(declare-fun x750 () Bool)
(declare-fun x3058 (Real) Real)
(declare-fun x1572 () Bool)
(declare-fun x1694 () Real)
(declare-fun x1156 () Real)
(declare-fun x2237 () Bool)
(declare-fun x690 () Bool)
(declare-fun x2572 () Real)
(declare-fun x808 () Bool)
(declare-fun x1646 () Real)
(declare-fun x3043 (Real) Real)
(declare-fun x114 () Bool)
(declare-fun x1667 () Bool)
(declare-fun x2451 () Bool)
(declare-fun x1345 () Real)
(declare-fun x2308 () Bool)
(declare-fun x1238 (Real) Real)
(declare-fun x1223 () Bool)
(declare-fun x542 () Real)
(declare-fun x921 () Bool)
(declare-fun x2365 () Bool)
(declare-fun x2110 () Bool)
(declare-fun x1188 (Real) Real)
(declare-fun x2625 () Real)
(declare-fun x1857 (Real) Real)
(declare-fun x3011 () Bool)
(declare-fun x1645 () x2268)
(declare-fun x186 () Real)
(declare-fun x313 () Bool)
(declare-fun x2707 () Real)
(declare-fun x613 () Bool)
(declare-fun x2350 () Real)
(declare-fun x402 () Real)
(declare-fun x478 () Bool)
(declare-fun x3105 (Real) Real)
(declare-fun x2387 () Bool)
(declare-fun x1350 () x2268)
(declare-fun x692 () Bool)
(declare-fun x1073 () Bool)
(declare-fun x1262 () Bool)
(declare-fun x2908 () Bool)
(declare-fun x1169 () Bool)
(declare-fun x2306 () Bool)
(declare-fun x1955 () Bool)
(declare-fun x352 () Real)
(declare-fun x88 () Real)
(declare-fun x324 () Real)
(declare-fun x1922 () Bool)
(declare-fun x2574 () Real)
(declare-fun x1412 () Real)
(declare-fun x2970 () Bool)
(declare-fun x1444 () Real)
(declare-fun x507 () Real)
(declare-fun x1589 () Bool)
(declare-fun x2404 (Real) Real)
(declare-fun x2304 () Bool)
(declare-fun x106 () Bool)
(declare-fun x2142 () Real)
(declare-fun x229 () Real)
(declare-fun x2713 () Real)
(declare-fun x1681 () Real)
(declare-fun x723 () Bool)
(declare-fun x1175 () Bool)
(declare-fun x1559 (Real) Real)
(declare-fun x3031 () Bool)
(declare-fun x574 () Real)
(declare-fun x2702 () Real)
(declare-fun x2854 () Bool)
(declare-fun x610 () Real)
(declare-fun x863 (Real) Real)
(declare-fun x2096 () Real)
(declare-fun x17 () Real)
(declare-fun x2888 () Bool)
(declare-fun x2500 () Real)
(declare-fun x1163 () Real)
(declare-fun x583 () Bool)
(declare-fun x878 () Bool)
(declare-fun x2682 () Real)
(declare-fun x2859 () Real)
(declare-fun x216 () Bool)
(declare-fun x989 () Bool)
(declare-fun x2020 () Real)
(declare-fun x2437 () Bool)
(declare-fun x1385 () Bool)
(declare-fun x2560 () Real)
(declare-fun x1233 () Bool)
(declare-fun x1775 () Bool)
(declare-fun x2849 () Bool)
(declare-fun x2367 () x2268)
(declare-fun x418 () Bool)
(declare-fun x2924 () Real)
(declare-fun x384 () Real)
(declare-fun x2144 () Bool)
(declare-fun x36 () x2268)
(declare-fun x279 () Bool)
(declare-fun x250 () Bool)
(declare-fun x69 (Real) Real)
(declare-fun x195 () Real)
(declare-fun x1925 () Bool)
(declare-fun x2600 () Real)
(declare-fun x2339 () Bool)
(declare-fun x2369 () Real)
(declare-fun x2944 () Bool)
(declare-fun x2342 () Bool)
(declare-fun x679 () Real)
(declare-fun x2716 () Bool)
(declare-fun x578 () Bool)
(declare-fun x966 () Bool)
(declare-fun x1685 () Bool)
(declare-fun x787 () Real)
(declare-fun x3132 () Bool)
(declare-fun x293 () Real)
(declare-fun x1096 () x2268)
(declare-fun x1268 () Bool)
(declare-fun x1298 () Bool)
(declare-fun x1674 () Bool)
(declare-fun x536 () Bool)
(declare-fun x1708 () Real)
(declare-fun x2182 () Real)
(declare-fun x379 () Real)
(declare-fun x1786 () Real)
(declare-fun x650 () Bool)
(declare-fun x276 () Bool)
(declare-fun x2136 () Bool)
(declare-fun x1596 () Bool)
(declare-fun x1313 () Bool)
(declare-fun x2406 () Bool)
(declare-fun x1142 () Real)
(declare-fun x340 () Bool)
(declare-fun x1392 (Real) Real)
(declare-fun x2592 () Bool)
(declare-fun x2547 () Bool)
(declare-fun x1208 () Bool)
(declare-fun x4 () Bool)
(declare-fun x1049 () Real)
(declare-fun x2506 () Real)
(declare-fun x3018 () Real)
(declare-fun x255 () Bool)
(declare-fun x770 () Real)
(declare-fun x1193 () Bool)
(declare-fun x2354 () Bool)
(declare-fun x43 () Bool)
(declare-fun x2139 () Bool)
(declare-fun x1202 () Bool)
(declare-fun x2631 () Bool)
(declare-fun x1795 () Real)
(declare-fun x12 () Bool)
(declare-fun x974 () Bool)
(declare-fun x2690 () Real)
(declare-fun x1186 () Real)
(declare-fun x1689 () Real)
(declare-fun x799 () Real)
(declare-fun x2415 () Real)
(declare-fun x2392 () Real)
(declare-fun x1045 () Real)
(declare-fun x714 () Bool)
(declare-fun x2822 () Real)
(declare-fun x665 () Bool)
(declare-fun x2641 (Real) Real)
(declare-fun x2823 () Bool)
(declare-fun x2276 () Bool)
(declare-fun x781 () Bool)
(declare-fun x1944 () Bool)
(declare-fun x2755 () Bool)
(declare-fun x1920 () Bool)
(declare-fun x1443 () Real)
(declare-fun x2654 () Real)
(declare-fun x355 () Bool)
(declare-fun x2749 () Bool)
(declare-fun x1415 () Real)
(declare-fun x1161 () x2268)
(declare-fun x2582 () Real)
(declare-fun x482 (Real) Real)
(declare-fun x832 () Real)
(declare-fun x1474 () Real)
(declare-fun x2786 (Real) Real)
(declare-fun x849 () Bool)
(declare-fun x743 () Real)
(declare-fun x1603 (Real) Real)
(declare-fun x2153 () Bool)
(declare-fun x10 (Real) Real)
(declare-fun x2919 () Bool)
(declare-fun x1568 () Real)
(declare-fun x2511 () Real)
(declare-fun x1546 () Real)
(declare-fun x977 () Bool)
(declare-fun x2149 () Real)
(declare-fun x491 () Real)
(declare-fun x2769 () Bool)
(declare-fun x2073 () Bool)
(declare-fun x1132 () Real)
(declare-fun x1891 () Real)
(declare-fun x2039 () Bool)
(declare-fun x1459 () Bool)
(declare-fun x2874 () Real)
(declare-fun x2001 () Real)
(declare-fun x2598 () Bool)
(declare-fun x2412 () Bool)
(declare-fun x2429 () Bool)
(declare-fun x3128 () Real)
(declare-fun x1455 () Real)
(declare-fun x2059 () Real)
(declare-fun x1959 (Real) Real)
(declare-fun x510 () Real)
(declare-fun x298 () Bool)
(declare-fun x2447 () Real)
(declare-fun x676 () Bool)
(declare-fun x1787 () Real)
(declare-fun x107 () Real)
(declare-fun x1035 () Real)
(declare-fun x930 () Bool)
(declare-fun x2299 () Real)
(declare-fun x427 () Bool)
(declare-fun x2777 () Real)
(declare-fun x52 () Real)
(declare-fun x1281 () Bool)
(declare-fun x1702 () Bool)
(declare-fun x700 () Real)
(declare-fun x2899 () Bool)
(declare-fun x2002 () Bool)
(declare-fun x2467 () Bool)
(declare-fun x1625 () Bool)
(declare-fun x1093 () Real)
(declare-fun x2856 () Bool)
(declare-fun x3033 () Real)
(declare-fun x2533 () Real)
(declare-fun x3117 () Bool)
(declare-fun x1607 () Real)
(declare-fun x2959 () Bool)
(declare-fun x827 () Bool)
(declare-fun x1001 () Real)
(declare-fun x1358 () Bool)
(declare-fun x1361 () Bool)
(declare-fun x713 () Bool)
(declare-fun x1565 () Bool)
(declare-fun x1439 () Real)
(declare-fun x3063 () Bool)
(declare-fun x2973 () Bool)
(declare-fun x1577 () Real)
(declare-fun x712 () Bool)
(declare-fun x2166 () Real)
(declare-fun x353 () Real)
(declare-fun x2930 () Real)
(declare-fun x804 (Real) Real)
(declare-fun x2280 () Real)
(declare-fun x1032 () Bool)
(declare-fun x2794 () Bool)
(declare-fun x2498 () Real)
(declare-fun x2900 () Real)
(declare-fun x926 () Bool)
(declare-fun x1782 () Bool)
(declare-fun x3067 () Real)
(declare-fun x593 () Bool)
(declare-fun x2321 () Real)
(declare-fun x2905 () Real)
(declare-fun x696 () Real)
(declare-fun x1804 () Bool)
(declare-fun x411 () Real)
(declare-fun x208 () Bool)
(declare-fun x1982 () Real)
(declare-fun x1654 () Bool)
(declare-fun x2655 () Bool)
(declare-fun x3062 () Real)
(declare-fun x763 () Real)
(declare-fun x1182 () Real)
(declare-fun x2205 () Real)
(declare-fun x965 () Real)
(declare-fun x1727 () Real)
(declare-fun x816 () Real)
(declare-fun x120 () Real)
(declare-fun x1616 () Real)
(declare-fun x2111 () Real)
(declare-fun x265 () Real)
(declare-fun x2562 () Bool)
(declare-fun x201 () Bool)
(declare-fun x688 () Bool)
(declare-fun x1629 () Bool)
(declare-fun x79 () Bool)
(declare-fun x263 () Bool)
(declare-fun x1613 () Real)
(declare-fun x2751 () Bool)
(declare-fun x2748 () Real)
(declare-fun x833 () Bool)
(declare-fun x1621 () Real)
(declare-fun x874 () Real)
(declare-fun x1196 () Bool)
(declare-fun x2471 (x2268) Real)
(declare-fun x1356 () Real)
(declare-fun x58 () Bool)
(declare-fun x2706 () Bool)
(declare-fun x1425 () Real)
(declare-fun x2814 () Bool)
(declare-fun x375 () Bool)
(declare-fun x469 () Real)
(declare-fun x2005 () Real)
(declare-fun x3124 () Real)
(declare-fun x3111 () Bool)
(declare-fun x1581 () Bool)
(declare-fun x635 () Bool)
(declare-fun x1839 () Real)
(declare-fun x2825 () Real)
(declare-fun x280 () Bool)
(declare-fun x2616 () Real)
(declare-fun x2534 () Bool)
(declare-fun x1430 () Bool)
(declare-fun x479 (Real) Real)
(declare-fun x850 () Bool)
(declare-fun x2999 () Real)
(declare-fun x2353 () Real)
(declare-fun x3034 () Bool)
(declare-fun x779 () Bool)
(declare-fun x2535 () Bool)
(declare-fun x1531 () Real)
(declare-fun x872 () Bool)
(declare-fun x2964 () Bool)
(declare-fun x99 () Bool)
(declare-fun x2188 () Real)
(declare-fun x2426 () Bool)
(declare-fun x3109 () Real)
(declare-fun x2172 () Real)
(declare-fun x354 () Real)
(declare-fun x1237 () Real)
(declare-fun x45 () Real)
(declare-fun x175 () Bool)
(declare-fun x9 () Bool)
(declare-fun x3004 () Real)
(declare-fun x1677 () Bool)
(declare-fun x908 () Bool)
(declare-fun x845 () Real)
(declare-fun x1021 () Bool)
(declare-fun x805 () Real)
(declare-fun x749 () Bool)
(declare-fun x2100 () Bool)
(declare-fun x2839 () Real)
(declare-fun x1109 () Bool)
(declare-fun x1946 () Real)
(declare-fun x425 () Bool)
(declare-fun x1418 () Bool)
(declare-fun x2322 () Real)
(declare-fun x2043 () Bool)
(declare-fun x2515 () Real)
(declare-fun x778 () Bool)
(declare-fun x1756 () Real)
(declare-fun x1417 () Bool)
(declare-fun x2527 () Bool)
(declare-fun x1717 () Real)
(declare-fun x2271 () Bool)
(declare-fun x1862 () Bool)
(declare-fun x1972 () Bool)
(declare-fun x1853 () Real)
(declare-fun x707 () Real)
(declare-fun x2420 () Bool)
(declare-fun x2845 () Bool)
(declare-fun x241 () Bool)
(declare-fun x3090 () Bool)
(declare-fun x437 () Real)
(declare-fun x2637 () Real)
(declare-fun x1499 (x2268) Real)
(declare-fun x2131 () Bool)
(declare-fun x2939 () Real)
(declare-fun x963 () Bool)
(declare-fun x2980 () Bool)
(declare-fun x2554 () Bool)
(declare-fun x1533 () Bool)
(declare-fun x543 () Real)
(declare-fun x594 () Real)
(declare-fun x288 () Bool)
(declare-fun x581 () Bool)
(declare-fun x1195 () Bool)
(declare-fun x530 () Bool)
(declare-fun x2672 () Real)
(declare-fun x1785 () Real)
(declare-fun x2674 () Bool)
(declare-fun x893 () Bool)
(declare-fun x843 () Bool)
(declare-fun x138 () Bool)
(declare-fun x1585 () Real)
(declare-fun x964 () Bool)
(declare-fun x835 () Bool)
(declare-fun x1510 () Bool)
(declare-fun x404 () Real)
(declare-fun x217 () Real)
(declare-fun x1423 () Real)
(declare-fun x3078 () Real)
(declare-fun x2179 () Real)
(declare-fun x1136 () Real)
(declare-fun x1900 (Real) Real)
(declare-fun x2932 () Real)
(declare-fun x2733 () Bool)
(declare-fun x771 () Real)
(declare-fun x1434 () Bool)
(declare-fun x471 () Real)
(declare-fun x308 () Bool)
(declare-fun x1992 () Bool)
(declare-fun x1898 () Bool)
(declare-fun x1085 (x2268) Real)
(declare-fun x311 () Bool)
(declare-fun x2191 (Real) Real)
(declare-fun x3 () Bool)
(declare-fun x1246 () Real)
(declare-fun x1203 () Real)
(declare-fun x292 () Real)
(declare-fun x240 () Bool)
(declare-fun x660 () Bool)
(declare-fun x2698 () Bool)
(declare-fun x533 () Bool)
(declare-fun x896 (Real) Real)
(declare-fun x2586 (Real) Real)
(declare-fun x359 () Bool)
(declare-fun x465 () Real)
(declare-fun x1963 () Bool)
(declare-fun x2283 () Bool)
(declare-fun x2253 () Bool)
(declare-fun x1284 () Real)
(declare-fun x1767 () Bool)
(declare-fun x1989 () Real)
(declare-fun x1433 () Real)
(declare-fun x1273 () Bool)
(declare-fun x2502 () Real)
(declare-fun x2666 () Bool)
(declare-fun x2025 (Real) Real)
(declare-fun x2680 () Real)
(declare-fun x20 () Bool)
(declare-fun x1800 () Bool)
(declare-fun x2911 () Real)
(declare-fun x1970 () Real)
(declare-fun x806 () Bool)
(declare-fun x1040 () Real)
(declare-fun x2528 () Real)
(declare-fun x1084 () Bool)
(declare-fun x3143 () Real)
(declare-fun x1036 () Bool)
(declare-fun x1523 () Bool)
(declare-fun x128 (Real) Real)
(declare-fun x374 () Real)
(declare-fun x2512 () Real)
(declare-fun x1429 () Bool)
(declare-fun x1106 () Bool)
(declare-fun x2983 () Bool)
(declare-fun x3139 () x2268)
(declare-fun x1778 () Bool)
(declare-fun x2485 () Bool)
(declare-fun x2215 () Real)
(declare-fun x1869 () Real)
(declare-fun x1391 () Bool)
(declare-fun x1991 () Real)
(declare-fun x1059 () Bool)
(declare-fun x275 () Real)
(declare-fun x2961 (Real) Real)
(declare-fun x929 () Bool)
(declare-fun x2439 () Real)
(declare-fun x655 () Real)
(declare-fun x2768 () Real)
(declare-fun x2904 () Bool)
(declare-fun x2484 () Bool)
(declare-fun x98 () Real)
(declare-fun x698 () Bool)
(declare-fun x689 () Real)
(declare-fun x428 () Bool)
(declare-fun x1470 () Real)
(declare-fun x854 () Bool)
(declare-fun x2029 () Bool)
(declare-fun x323 () Bool)
(declare-fun x1809 (Real) Real)
(declare-fun x89 () Bool)
(declare-fun x2553 () Real)
(declare-fun x2194 () Bool)
(declare-fun x1086 () Real)
(declare-fun x3003 () Bool)
(declare-fun x2263 () Real)
(declare-fun x494 () Real)
(declare-fun x1707 () Real)
(declare-fun x2463 () Bool)
(declare-fun x2784 () Bool)
(declare-fun x2811 () x2268)
(declare-fun x641 () Bool)
(declare-fun x934 () Real)
(declare-fun x1475 () Real)
(declare-fun x2914 () Bool)
(declare-fun x2799 () Bool)
(declare-fun x956 () Real)
(declare-fun x97 () Real)
(declare-fun x2196 () Real)
(declare-fun x348 (Real) Real)
(declare-fun x440 () Bool)
(declare-fun x1994 () Bool)
(declare-fun x2860 () Bool)
(declare-fun x2840 () Bool)
(declare-fun x2626 () Bool)
(declare-fun x615 () Real)
(declare-fun x792 () Real)
(declare-fun x1837 () Real)
(declare-fun x215 () Bool)
(declare-fun x2935 () Bool)
(declare-fun x2663 () Real)
(declare-fun x1428 () Bool)
(declare-fun x651 (Real) Real)
(declare-fun x982 () Real)
(declare-fun x924 () Real)
(declare-fun x1089 () Bool)
(declare-fun x203 () Bool)
(declare-fun x900 () Bool)
(declare-fun x1538 (x2268) Real)
(declare-fun x1656 () Real)
(declare-fun x2892 () Bool)
(declare-fun x2402 () Bool)
(declare-fun x860 (Real) Real)
(declare-fun x2602 () Bool)
(declare-fun x1024 () Bool)
(declare-fun x2851 () Bool)
(declare-fun x2074 () Bool)
(declare-fun x1624 () Bool)
(declare-fun x467 () Bool)
(declare-fun x2015 () Bool)
(declare-fun x606 () Bool)
(declare-fun x2797 () Real)
(declare-fun x1819 () Real)
(declare-fun x177 () Bool)
(declare-fun x1526 () Real)
(declare-fun x1191 () Real)
(declare-fun x1921 () Real)
(declare-fun x267 () Bool)
(declare-fun x1118 (Real) Real)
(declare-fun x1100 (Real Real) Real)
(declare-fun x1797 () Real)
(declare-fun x1588 (x2268) Real)
(declare-fun x995 () Bool)
(declare-fun x1850 () Real)
(declare-fun x2248 () Real)
(declare-fun x2555 () Bool)
(declare-fun x1610 () Bool)
(declare-fun x2023 () Real)
(declare-fun x1941 () Real)
(declare-fun x1127 () Bool)
(declare-fun x2178 () Bool)
(declare-fun x695 () Real)
(declare-fun x1306 () Real)
(declare-fun x1634 () Bool)
(declare-fun x246 () Bool)
(declare-fun x3114 () Real)
(declare-fun x3002 () Real)
(declare-fun x2981 () Bool)
(declare-fun x2869 () Real)
(declare-fun x3009 () Bool)
(declare-fun x1421 () Real)
(declare-fun x2033 () Real)
(declare-fun x1770 () Bool)
(declare-fun x1454 () Bool)
(declare-fun x2761 () Bool)
(declare-fun x396 () Bool)
(declare-fun x2764 () Real)
(declare-fun x2270 () Real)
(declare-fun x2495 () Bool)
(declare-fun x19 () Real)
(declare-fun x1678 () Bool)
(declare-fun x1225 () Bool)
(declare-fun x2800 () Real)
(declare-fun x2581 () Bool)
(declare-fun x1740 () Real)
(declare-fun x1539 (Real) Real)
(declare-fun x2579 () Real)
(declare-fun x2538 () Real)
(declare-fun x1492 () Real)
(declare-fun x2199 () Real)
(declare-fun x2497 () Bool)
(declare-fun x2482 () Real)
(declare-fun x2526 (Real) Real)
(declare-fun x2327 () Real)
(declare-fun x1275 () Bool)
(declare-fun x2779 () Bool)
(declare-fun x528 () Bool)
(declare-fun x8 () Real)
(declare-fun x1464 () Bool)
(declare-fun x1917 () Bool)
(declare-fun x2953 () Real)
(declare-fun x2649 () Real)
(declare-fun x2430 () Bool)
(declare-fun x1545 () Bool)
(declare-fun x888 () Real)
(declare-fun x2772 () Bool)
(declare-fun x855 () Real)
(declare-fun x2050 (Real) Real)
(declare-fun x451 () Bool)
(declare-fun x2633 () Real)
(declare-fun x2047 () Bool)
(declare-fun x2952 () Bool)
(declare-fun x2024 () Real)
(declare-fun x2925 () Bool)
(declare-fun x2161 () Bool)
(declare-fun x485 () Real)
(declare-fun x2061 () Real)
(declare-fun x2893 () Bool)
(declare-fun x1532 () x2268)
(declare-fun x458 () Bool)
(declare-fun x1875 () Real)
(declare-fun x2419 () Real)
(declare-fun x1988 () Real)
(declare-fun x1696 (Real) Real)
(declare-fun x1903 () Bool)
(declare-fun x2116 () Bool)
(declare-fun x852 () Real)
(declare-fun x3057 () Real)
(declare-fun x984 () Bool)
(declare-fun x3138 () Real)
(declare-fun x675 () Real)
(declare-fun x706 () Bool)
(declare-fun x1812 () Bool)
(declare-fun x334 () Real)
(declare-fun x3112 () Bool)
(declare-fun x3118 () Real)
(declare-fun x1010 () Real)
(declare-fun x1097 () Bool)
(declare-fun x2915 () Bool)
(declare-fun x2208 () Real)
(declare-fun x91 () Real)
(declare-fun x1183 () Bool)
(declare-fun x1187 () Bool)
(declare-fun x1254 () Bool)
(declare-fun x685 () Bool)
(declare-fun x78 () Real)
(declare-fun x2076 () Real)
(declare-fun x3120 () Bool)
(declare-fun x570 () Bool)
(declare-fun x125 () Real)
(declare-fun x2390 () Bool)
(declare-fun x435 () Real)
(declare-fun x2075 () Bool)
(declare-fun x1826 () Real)
(declare-fun x80 () Real)
(declare-fun x1473 () Real)
(declare-fun x1015 () Bool)
(declare-fun x2068 () Bool)
(declare-fun x285 () Real)
(declare-fun x1396 () Bool)
(declare-fun x2473 () Real)
(declare-fun x2193 () Real)
(declare-fun x1655 () Real)
(declare-fun x2297 () Real)
(declare-fun x865 () Real)
(declare-fun x976 () Bool)
(declare-fun x1300 () Bool)
(declare-fun x2985 () Bool)
(declare-fun x1792 () Real)
(declare-fun x1337 () Real)
(declare-fun x2848 () Bool)
(declare-fun x2236 () Real)
(declare-fun x2240 () Real)
(declare-fun x1497 () Real)
(declare-fun x2619 () Bool)
(declare-fun x747 () Bool)
(declare-fun x459 () Bool)
(declare-fun x2787 () Bool)
(declare-fun x2410 () Bool)
(declare-fun x1288 () Real)
(declare-fun x2976 () Real)
(declare-fun x611 () Bool)
(declare-fun x1962 () Bool)
(declare-fun x1397 () Bool)
(declare-fun x2675 () Bool)
(declare-fun x1347 () Real)
(declare-fun x818 () Real)
(declare-fun x3021 (x2268) Real)
(declare-fun x2791 () Real)
(declare-fun x2391 () Bool)
(declare-fun x3116 () Bool)
(declare-fun x2361 () Bool)
(declare-fun x1490 () Real)
(declare-fun x2278 () Real)
(declare-fun x2668 () Bool)
(declare-fun x904 () Bool)
(declare-fun x2344 () Bool)
(declare-fun x620 () Real)
(declare-fun x626 () Real)
(declare-fun x1039 () Bool)
(declare-fun x2120 () Bool)
(declare-fun x287 () Real)
(declare-fun x2818 () Bool)
(declare-fun x1379 () Bool)
(declare-fun x1901 (Real) Real)
(declare-fun x997 () Bool)
(declare-fun x2573 () Bool)
(declare-fun x3146 () Real)
(declare-fun x2345 () Real)
(declare-fun x619 () Bool)
(declare-fun x13 () Real)
(declare-fun x223 () Bool)
(declare-fun x1593 () Real)
(declare-fun x86 () Real)
(declare-fun x795 () Real)
(declare-fun x2673 () Bool)
(declare-fun x1697 () Bool)
(declare-fun x2187 () Real)
(declare-fun x2427 () Bool)
(declare-fun x364 () Real)
(declare-fun x842 () Bool)
(declare-fun x1663 () Real)
(declare-fun x623 () Real)
(declare-fun x1876 () Real)
(declare-fun x535 () Bool)
(declare-fun x463 () Bool)
(declare-fun x2264 () Bool)
(declare-fun x2984 () Bool)
(declare-fun x1249 () Bool)
(declare-fun x2793 () Bool)
(declare-fun x1339 () Bool)
(declare-fun x357 () Bool)
(declare-fun x2632 () Real)
(declare-fun x652 () Bool)
(declare-fun x2213 () Bool)
(declare-fun x162 () Bool)
(declare-fun x1614 () Real)
(declare-fun x894 () Real)
(declare-fun x677 () Real)
(declare-fun x2801 () Bool)
(declare-fun x1478 () Real)
(declare-fun x2997 () Bool)
(declare-fun x511 () Bool)
(declare-fun x2530 () Real)
(declare-fun x1069 () Bool)
(declare-fun x2669 () Bool)
(declare-fun x321 () Bool)
(declare-fun x42 () Bool)
(declare-fun x1884 () Real)
(declare-fun x2014 () Bool)
(declare-fun x1149 () Real)
(declare-fun x1556 () Bool)
(declare-fun x366 () Real)
(declare-fun x1761 () Bool)
(declare-fun x2790 () Real)
(declare-fun x786 () x2268)
(declare-fun x1368 () Real)
(declare-fun x1348 () Real)
(declare-fun x3069 () Real)
(declare-fun x2260 () Bool)
(declare-fun x2346 () Real)
(declare-fun x1882 () Real)
(declare-fun x538 () Bool)
(declare-fun x277 () Bool)
(declare-fun x2151 () Real)
(declare-fun x1331 () Bool)
(declare-fun x729 () Real)
(declare-fun x1 () Bool)
(declare-fun x2508 () Bool)
(declare-fun x1173 () Bool)
(declare-fun x1726 () Real)
(declare-fun x1890 () Bool)
(declare-fun x377 () Bool)
(declare-fun x406 () Real)
(declare-fun x1138 (Real) Real)
(declare-fun x2423 () x2268)
(declare-fun x1958 () Bool)
(declare-fun x1791 () Bool)
(declare-fun x1436 () Bool)
(declare-fun x2032 () Bool)
(declare-fun x699 () Bool)
(declare-fun x2303 () Real)
(declare-fun x2374 () Real)
(declare-fun x2341 () Real)
(declare-fun x2756 () Bool)
(declare-fun x734 () Bool)
(declare-fun x1271 () Real)
(declare-fun x1840 () Bool)
(declare-fun x630 () Bool)
(declare-fun x1682 () Real)
(declare-fun x2571 () Bool)
(declare-fun x73 () Bool)
(declare-fun x1026 () Bool)
(declare-fun x2062 () Bool)
(declare-fun x880 (Real) Real)
(declare-fun x2459 () Bool)
(declare-fun x68 () Real)
(declare-fun x2147 () Real)
(declare-fun x2852 () Bool)
(declare-fun x1253 () Bool)
(declare-fun x2209 () Real)
(declare-fun x397 () Bool)
(declare-fun x54 () Bool)
(declare-fun x1666 () Real)
(declare-fun x432 () Bool)
(declare-fun x3045 () Real)
(declare-fun x1150 () Bool)
(declare-fun x585 () Bool)
(declare-fun x3115 () Real)
(declare-fun x2080 () Real)
(declare-fun x2386 () Bool)
(declare-fun x901 () Bool)
(declare-fun x1931 () Real)
(declare-fun x3092 () Bool)
(declare-fun x2371 () Bool)
(declare-fun x1993 () Real)
(declare-fun x1918 () Real)
(declare-fun x1239 () Bool)
(declare-fun x663 () Real)
(declare-fun x1600 () Real)
(declare-fun x413 () Real)
(declare-fun x2758 () Real)
(declare-fun x1342 () Bool)
(declare-fun x1968 () Bool)
(declare-fun x2971 () Bool)
(declare-fun x1079 () Real)
(declare-fun x1143 () Real)
(declare-fun x1934 () Bool)
(declare-fun x3047 () Bool)
(declare-fun x822 (Real) Real)
(declare-fun x1904 () Real)
(declare-fun x2757 () Bool)
(declare-fun x1914 () Real)
(declare-fun x381 () Bool)
(declare-fun x780 () Real)
(declare-fun x2778 () Bool)
(declare-fun x1092 () Real)
(declare-fun x2472 () Bool)
(declare-fun x2174 () Bool)
(declare-fun x1976 () Real)
(declare-fun x1877 () Real)
(declare-fun x1172 () Bool)
(declare-fun x2738 () Bool)
(declare-fun x1742 () Bool)
(declare-fun x1420 () Real)
(declare-fun x2016 () Bool)
(declare-fun x197 () Bool)
(declare-fun x1318 () Bool)
(declare-fun x1744 (Real) Real)
(declare-fun x621 () Bool)
(declare-fun x2862 () Real)
(declare-fun x2250 () x2268)
(declare-fun x2072 () Bool)
(declare-fun x1998 (Real) Real)
(declare-fun x1506 () Real)
(declare-fun x887 () Real)
(declare-fun x817 () Real)
(declare-fun x1712 () Real)
(declare-fun x762 () Real)
(declare-fun x1384 () Bool)
(declare-fun x1372 () Real)
(declare-fun x2995 () Bool)
(declare-fun x2780 () Bool)
(declare-fun x560 () Real)
(declare-fun x2103 () Bool)
(declare-fun x1552 () Bool)
(declare-fun x2505 () Bool)
(declare-fun x57 () Real)
(declare-fun x1706 () Real)
(declare-fun x2413 () Bool)
(declare-fun x316 () Bool)
(declare-fun x258 () Real)
(declare-fun x720 () Real)
(declare-fun x1017 (Real) Real)
(declare-fun x2610 () Real)
(declare-fun x1027 () Bool)
(declare-fun x261 () Real)
(declare-fun x1623 () Real)
(declare-fun x867 () Bool)
(declare-fun x1462 () Bool)
(declare-fun x1653 () Real)
(declare-fun x95 () Bool)
(declare-fun x1367 () Bool)
(declare-fun x2373 () Real)
(declare-fun x1605 () Real)
(declare-fun x1714 () Real)
(declare-fun x40 () Bool)
(declare-fun x1419 () Bool)
(declare-fun x838 () Bool)
(declare-fun x2977 (x2268) Real)
(declare-fun x1595 () Bool)
(declare-fun x2027 () Bool)
(declare-fun x84 (Real) Real)
(declare-fun x2929 () Real)
(declare-fun x505 () Bool)
(declare-fun x2468 () Real)
(declare-fun x2281 () Bool)
(declare-fun x2030 () Bool)
(declare-fun x2227 () Real)
(declare-fun x681 () Bool)
(declare-fun x424 () Real)
(declare-fun x212 () Bool)
(declare-fun x450 () Real)
(declare-fun x2239 () Real)
(declare-fun x1469 () x2268)
(declare-fun x389 () Real)
(declare-fun x189 () Bool)
(declare-fun x2154 () Bool)
(declare-fun x2729 () Bool)
(declare-fun x218 () Real)
(declare-fun x1725 () Bool)
(declare-fun x3039 () Bool)
(declare-fun x3026 () Bool)
(declare-fun x765 () Bool)
(declare-fun x2040 () Bool)
(declare-fun x1047 () Real)
(declare-fun x2936 () Real)
(declare-fun x2486 () Real)
(declare-fun x1911 () Bool)
(declare-fun x2960 () Real)
(declare-fun x1099 () Bool)
(declare-fun x2543 () x2268)
(declare-fun x2095 () Real)
(declare-fun x2355 () Real)
(declare-fun x2557 () Bool)
(declare-fun x1117 () Bool)
(declare-fun x1507 () Real)
(declare-fun x2684 () Bool)
(declare-fun x2474 () Real)
(declare-fun x16 () Bool)
(declare-fun x1516 () Bool)
(declare-fun x2551 () Real)
(declare-fun x3081 () Bool)
(declare-fun x2145 () Bool)
(declare-fun x732 () Bool)
(declare-fun x957 () Real)
(declare-fun x1937 () Bool)
(declare-fun x28 (Real) Real)
(declare-fun x2518 () Real)
(declare-fun x1390 () Real)
(declare-fun x2606 () Bool)
(declare-fun x151 () Real)
(declare-fun x1080 () Real)
(declare-fun x2989 () Bool)
(declare-fun x1802 () Real)
(declare-fun x796 () Bool)
(declare-fun x209 () Real)
(declare-fun x2010 (x2268) Real)
(declare-fun x2444 () Real)
(declare-fun x2307 () Real)
(declare-fun x973 () Real)
(declare-fun x1022 () Real)
(declare-fun x224 () Bool)
(declare-fun x2722 () Real)
(declare-fun x1058 () Real)
(declare-fun x67 () Real)
(declare-fun x2998 () Bool)
(declare-fun x2129 () Real)
(define-fun x2302 ((x2268 x2268) (x886 Real)) x2268 (ite ((_ is x1817) x2268) (x1817 (x169 x2268) (+ x886 (x187 x2268))) (ite ((_ is x1551) x2268) (x1551 (x1841 x2268) (x2382 x2268) (+ (x2331 x2268) x886)) (x94 (+ x886 (x1289 x2268))))))
(define-fun x631 ((x1864 Real)) Real (ite (and (< x1864 115792089237316195423570985008687907853269984665640564039457584007913129639936) (<= 0 x1864)) x1864 (- x1864 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(define-fun x2890 ((x1864 Real)) Real (ite (and (> 0 x1864) (>= x1864 (- 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (+ 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1864) x1864))
(define-fun x2452 ((x991 Real)) Bool (and (<= 0 x991) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 x991)))
(define-fun x281 ((x991 Real)) Bool (and (= (x11 x991 115792089237316195423570985008687907853269984665640564039457584007913129639935) x991) (= (x11 115792089237316195423570985008687907853269984665640564039457584007913129639935 x991) x991)))
(define-fun x499 ((x991 Real)) Bool (and (= (x11 x991 0) 0) (= (x11 0 x991) 0)))
(define-fun x2185 ((x991 Real)) Bool (= (x11 x991 x991) x991))
(define-fun x1863 ((x991 Real)) Bool (and (x281 x991) (x2185 x991) (x499 x991)))
(define-fun x385 ((x991 Real)) Bool (= (x11 1461501637330902918203684832716283019655932542975 (x11 1461501637330902918203684832716283019655932542975 x991)) (x11 1461501637330902918203684832716283019655932542975 x991)))
(define-fun x2544 ((x991 Real)) Bool (=> (and (< x991 1461501637330902918203684832716283019655932542976) (>= x991 0)) (= x991 (x11 1461501637330902918203684832716283019655932542975 x991))))
(define-fun x1265 ((x991 Real)) Bool (=> (= x991 (x11 1461501637330902918203684832716283019655932542975 x991)) (and (> 1461501637330902918203684832716283019655932542976 x991) (<= 0 x991))))
(define-fun x1087 ((x991 Real)) Bool (=> (and (< x991 2923003274661805836407369665432566039311865085952) (<= 1461501637330902918203684832716283019655932542976 x991)) (= (- x991 1461501637330902918203684832716283019655932542976) (x11 1461501637330902918203684832716283019655932542975 x991))))
(define-fun x828 ((x991 Real) (x2011 Real)) Bool (and (= (+ (* x2011 1461501637330902918203684832716283019655932542976) (x11 1461501637330902918203684832716283019655932542975 x991)) x991) (<= 0 x2011)))
(define-fun x575 ((x991 Real) (x2617 Real)) Bool (and (x1265 x991) (x828 x991 x2617) (x1087 x991) (x385 x991) (x2544 x991)))
(define-fun x1938 ((x991 Real) (x2011 Real)) Bool (= (x11 x2011 x991) (x11 x991 x2011)))
(define-fun x1836 ((x991 Real) (x2011 Real)) Bool (and (>= (x11 x991 x2011) 0) (=> (>= x2011 0) (>= x2011 (x11 x991 x2011))) (=> (>= x991 0) (>= x991 (x11 x991 x2011)))))
(define-fun x1206 ((x991 Real) (x2011 Real)) Bool (and (x1938 x991 x2011) (x1836 x991 x2011)))
(define-fun x1758 ((x991 Real) (x2617 Real)) Bool (and (x1206 x991 1461501637330902918203684832716283019655932542975) (x575 x991 x2617)))
(define-fun x236 ((x991 Real)) Bool (= (x11 115792089237316195423570985008687907853269984665640564039457584007913129639904 x991) (x11 115792089237316195423570985008687907853269984665640564039457584007913129639904 (x11 115792089237316195423570985008687907853269984665640564039457584007913129639904 x991))))
(define-fun x148 ((x991 Real)) Bool (=> (and (> 32 x991) (>= x991 0)) (= 0 (x11 115792089237316195423570985008687907853269984665640564039457584007913129639904 x991))))
(define-fun x737 ((x991 Real) (x2011 Real) (x1961 Real) (x554 Real)) Bool (and (< x1961 3618502788666131106986593281521497120414687020801267626233049500247285301248) (>= x1961 0) (= x991 (+ x2011 (* x1961 32) (* x554 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (<= 0 x2011) (<= 0 x554) (> 32 x2011) (< x554 1) (= (x11 115792089237316195423570985008687907853269984665640564039457584007913129639904 x991) (* 32 x1961))))
(define-fun x525 ((x991 Real) (x2317 Real) (x1799 Real) (x1481 Real)) Bool (and (x737 x991 x2317 x1799 x1481) (x236 x991) (x148 x991)))
(define-fun x642 ((x991 Real) (x2317 Real) (x1799 Real) (x1481 Real)) Bool (and (x1206 x991 115792089237316195423570985008687907853269984665640564039457584007913129639904) (x525 x991 x2317 x1799 x1481)))
(define-fun x1637 ((x991 Real)) Bool (= (x11 26959946667150639794667015087019630673637144422540572481103610249215 x991) (x11 26959946667150639794667015087019630673637144422540572481103610249215 (x11 26959946667150639794667015087019630673637144422540572481103610249215 x991))))
(define-fun x1103 ((x991 Real)) Bool (=> (and (< x991 26959946667150639794667015087019630673637144422540572481103610249216) (>= x991 0)) (= x991 (x11 26959946667150639794667015087019630673637144422540572481103610249215 x991))))
(define-fun x753 ((x991 Real)) Bool (=> (= x991 (x11 26959946667150639794667015087019630673637144422540572481103610249215 x991)) (and (<= 0 x991) (> 26959946667150639794667015087019630673637144422540572481103610249216 x991))))
(define-fun x1997 ((x991 Real)) Bool (=> (and (> 53919893334301279589334030174039261347274288845081144962207220498432 x991) (>= x991 26959946667150639794667015087019630673637144422540572481103610249216)) (= (- x991 26959946667150639794667015087019630673637144422540572481103610249216) (x11 26959946667150639794667015087019630673637144422540572481103610249215 x991))))
(define-fun x983 ((x991 Real) (x2011 Real)) Bool (and (= x991 (+ (* 26959946667150639794667015087019630673637144422540572481103610249216 x2011) (x11 26959946667150639794667015087019630673637144422540572481103610249215 x991))) (>= x2011 0)))
(define-fun x2842 ((x991 Real) (x2617 Real)) Bool (and (x983 x991 x2617) (x1637 x991) (x1997 x991) (x1103 x991) (x753 x991)))
(define-fun x2864 ((x991 Real) (x2617 Real)) Bool (and (x2842 x991 x2617) (x1206 x991 26959946667150639794667015087019630673637144422540572481103610249215)))
(define-fun x484 ((x991 Real)) Bool (= (x11 255 (x11 255 x991)) (x11 255 x991)))
(define-fun x1343 ((x991 Real)) Bool (=> (and (> 256 x991) (>= x991 0)) (= (x11 255 x991) x991)))
(define-fun x2662 ((x991 Real)) Bool (=> (= x991 (x11 255 x991)) (and (<= 0 x991) (> 256 x991))))
(define-fun x3015 ((x991 Real)) Bool (=> (and (< x991 512) (<= 256 x991)) (= (- x991 256) (x11 255 x991))))
(define-fun x2026 ((x991 Real) (x2011 Real)) Bool (and (= (+ (* x2011 256) (x11 255 x991)) x991) (<= 0 x2011)))
(define-fun x2400 ((x991 Real) (x2617 Real)) Bool (and (x3015 x991) (x2026 x991 x2617) (x1343 x991) (x484 x991) (x2662 x991)))
(define-fun x988 ((x991 Real) (x2617 Real)) Bool (and (x2400 x991 x2617) (x1206 x991 255)))
(define-fun x846 ((x991 Real)) Bool (and (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x1609 115792089237316195423570985008687907853269984665640564039457584007913129639935 x991)) (= (x1609 x991 115792089237316195423570985008687907853269984665640564039457584007913129639935) 115792089237316195423570985008687907853269984665640564039457584007913129639935)))
(define-fun x2137 ((x991 Real)) Bool (and (= x991 (x1609 0 x991)) (= (x1609 x991 0) x991)))
(define-fun x885 ((x991 Real)) Bool (= (x1609 x991 x991) x991))
(define-fun x2171 ((x991 Real)) Bool (and (x846 x991) (x885 x991) (x2137 x991)))
(define-fun x2923 ((x991 Real) (x2011 Real)) Bool (= (x1609 x991 x2011) (x1609 x2011 x991)))
(define-fun x1821 ((x991 Real) (x2011 Real)) Bool (and (<= (x1609 x991 x2011) (+ x2011 x991)) (=> (>= x2011 0) (>= (x1609 x991 x2011) x2011)) (=> (>= x991 0) (<= x991 (x1609 x991 x2011)))))
(define-fun x1293 ((x991 Real) (x2011 Real)) Bool (and (x1821 x991 x2011) (x2923 x991 x2011)))
(define-fun x2692 ((x991 Real)) Bool (= (x11 1 x991) (x11 1 (x11 1 x991))))
(define-fun x1515 ((x991 Real)) Bool (=> (and (> 2 x991) (<= 0 x991)) (= x991 (x11 1 x991))))
(define-fun x1294 ((x991 Real)) Bool (=> (= x991 (x11 1 x991)) (and (> 2 x991) (>= x991 0))))
(define-fun x2483 ((x991 Real)) Bool (=> (and (< x991 4) (>= x991 2)) (= (x11 1 x991) (- x991 2))))
(define-fun x1930 ((x991 Real) (x2011 Real)) Bool (and (<= 0 x2011) (= x991 (+ (x11 1 x991) (* x2011 2)))))
(define-fun x701 ((x991 Real) (x2617 Real)) Bool (and (x1515 x991) (x2483 x991) (x1294 x991) (x2692 x991) (x1930 x991 x2617)))
(define-fun x1012 ((x991 Real) (x2617 Real)) Bool (and (x1206 x991 1) (x701 x991 x2617)))
(define-fun x1672 ((x715 Real)) Real (x1539 x715))
(define-fun x2994 ((x715 Real)) Real (ite (= x1622 x715) x324 (x205 x715)))
(define-fun x923 ((x715 Real)) Real (ite (and (not x2785) (not x600) (not x2391) x2875) (x205 x715) (ite (and x600 x2875 (not x2785)) (x1252 x715) (x2994 x715))))
(define-fun x2049 ((x715 Real)) Real (ite (= x715 x2940) x2670 (x804 x715)))
(define-fun x568 ((x715 Real)) Real (ite (= x715 x1219) x2962 (x260 x715)))
(define-fun x2078 ((x715 Real)) Real (ite (= x1347 x715) 0 (x2586 x715)))
(define-fun x1956 ((x715 Real)) Real (ite (= x2876 x715) 0 (x1696 x715)))
(define-fun x2167 ((x715 Real)) Real (ite (= x2773 x715) 0 (x483 x715)))
(define-fun x2916 ((x715 Real)) Real (ite (= x715 x3014) 0 (x2031 x715)))
(define-fun x2941 ((x715 Real)) Real (ite (= x1123 x715) 0 (x2404 x715)))
(define-fun x634 ((x715 Real)) Real (ite (= x715 x1826) 0 (x2036 x715)))
(define-fun x1763 ((x715 Real)) Real (ite (= x2696 x715) x1347 (x2641 x715)))
(define-fun x724 ((x715 Real)) Real (ite (= x715 x202) x2800 (x2067 x715)))
(define-fun x2086 ((x715 Real)) Real (ite (= x715 x2882) x445 (x1959 x715)))
(define-fun x253 ((x715 Real)) Real (ite (= x715 x2076) x2151 (x1895 x715)))
(define-fun x1590 ((x715 x2268)) Real (ite (= x715 x1645) x2270 (x1496 x715)))
(define-fun x752 ((x715 x2268)) Real (ite (and x2959 (not x3065)) (x1496 x715) (x1590 x715)))
(define-fun x844 ((x715 Real)) Real (ite (= x715 x2512) x2247 (x863 x715)))
(define-fun x1644 ((x715 x2268)) Real (ite (= x715 x2088) x1506 (x2537 x715)))
(define-fun x183 ((x715 x2268)) Real (ite (and (not x3065) x2959) (x1644 x715) (x2537 x715)))
(define-fun x2700 ((x715 Real)) Real (ite (= x715 x1628) x1317 (x1231 x715)))
(define-fun x501 ((x715 Real)) Real (ite (= x715 x3138) x161 (x2025 x715)))
(define-fun x391 ((x715 Real)) Real (ite (= x715 x1290) x202 (x2786 x715)))
(define-fun x2221 ((x715 Real)) Real (ite (and x1812 (not x2934)) (x1895 x715) (x253 x715)))
(define-fun x2326 ((x715 Real)) Real (ite (and (not x2934) x1812) (x1231 x715) (x2700 x715)))
(define-fun x2712 ((x715 Real)) Real (ite (and x1812 (not x2934)) (x2786 x715) (x391 x715)))
(define-fun x1892 ((x715 Real)) Real (ite (and (not x2934) x1812) (x1959 x715) (x2086 x715)))
(define-fun x1167 ((x715 Real)) Real (ite (and x1812 (not x2934)) (x2067 x715) (x724 x715)))
(define-fun x239 ((x715 Real)) Real (ite (and (not x2934) x1812) (x863 x715) (x844 x715)))
(define-fun x2634 ((x715 Real)) Real (ite (and x1812 (not x2934)) (x2025 x715) (x501 x715)))
(define-fun x1686 ((x715 Real)) Real (ite (= x1562 x715) x3145 (x1721 x715)))
(define-fun x22 ((x715 Real)) Real (ite (= x2443 x715) 274184521717934524641157099916833587231 (x2514 x715)))
(define-fun x41 ((x715 Real)) Real (ite (= x715 x2150) x2940 (x1888 x715)))
(define-fun x2362 ((x715 Real)) Real (ite (= x2667 x715) x1219 (x896 x715)))
(define-fun x110 ((x715 Real)) Real (ite (= x489 x715) x792 (x586 x715)))
(define-fun x1560 ((x715 Real)) Real (ite (= 128 x715) 50942633119752846454219349998365661925608737367104304655302372697894809501696 (x2157 x715)))
(define-fun x616 ((x715 Real)) Real (ite (= x715 128) x924 (x2050 x715)))
(define-fun x388 ((x715 Real)) Real (ite (= 128 x715) x2198 (x2050 x715)))
(define-fun x2910 ((x715 Real)) Real (ite x1109 (ite x1668 (x2050 x715) (x616 x715)) (ite x1737 (x2050 x715) (x388 x715))))
(define-fun x2127 ((x715 Real)) Real (ite (= x715 x2560) x1795 (x1392 x715)))
(define-fun x2333 ((x715 Real)) Real (ite (= x2560 x715) x2790 (x1392 x715)))
(define-fun x2783 ((x715 Real)) Real (ite (and x1598 x1084) (x2127 x715) (x2333 x715)))
(define-fun x1529 ((x715 Real)) Real (ite (= 128 x715) x1795 (x2720 x715)))
(define-fun x529 ((x715 Real)) Real (ite (= x715 128) x2790 (x2720 x715)))
(define-fun x1730 ((x715 Real)) Real (ite (and x2144 x1944) (x1529 x715) (x529 x715)))
(define-fun x2828 ((x715 Real)) Real (ite (= x1212 x715) 71356987572919795984103299673912204194632180251134163011139925636576289226752 (x2767 x715)))
(define-fun x2124 ((x715 Real)) Real (ite (= x2001 x715) x792 (x2828 x715)))
(define-fun x444 ((x715 Real)) Real (ite (and (< x715 (+ x1212 0)) (<= x1212 x715)) (x128 (+ 0 (- x715 x1212))) (x1360 x715)))
(define-fun x327 ((x715 Real)) Real (ite (= x807 x715) x1653 (x28 x715)))
(define-fun x1939 ((x715 Real)) Real (ite (= x407 x715) 0 (x758 x715)))
(define-fun x1500 ((x715 Real)) Real (ite (= x2236 x715) x3124 (x2432 x715)))
(define-fun x1950 ((x715 Real)) Real (ite x1913 (x2432 x715) (x1500 x715)))
(define-fun x449 ((x715 Real)) Real (ite (= x2236 x715) x3106 (x2432 x715)))
(define-fun x881 ((x715 Real)) Real (ite x1091 (x2432 x715) (x449 x715)))
(define-fun x2381 ((x715 Real)) Real (ite x3042 (x1950 x715) (x881 x715)))
(define-fun x2438 ((x715 Real)) Real (ite x2997 (x2381 x715) (x2432 x715)))
(define-fun x544 ((x715 Real)) Real (ite (= 128 x715) 50942633119752846454219349998365661925608737367104304655302372697894809501696 (x2157 x715)))
(define-fun x38 ((x715 Real)) Real (ite (= 128 x715) x1475 (x1901 x715)))
(define-fun x165 ((x715 Real)) Real (ite (= 128 x715) x1929 (x1901 x715)))
(define-fun x2677 ((x715 Real)) Real (ite x2233 (ite x463 (x1901 x715) (x38 x715)) (ite x2889 (x1901 x715) (x165 x715))))
(define-fun x1985 ((x715 Real)) Real (ite (= x715 x632) x1795 (x1809 x715)))
(define-fun x2169 ((x715 Real)) Real (ite (= x632 x715) x2790 (x1809 x715)))
(define-fun x3049 ((x715 Real)) Real (ite (and x2 x1426) (x1985 x715) (x2169 x715)))
(define-fun x421 ((x715 Real)) Real (ite (= 128 x715) x1795 (x1518 x715)))
(define-fun x2324 ((x715 Real)) Real (ite (= x715 128) x2790 (x1518 x715)))
(define-fun x959 ((x715 Real)) Real (ite (and x2183 x2315) (x421 x715) (x2324 x715)))
(define-fun x1408 ((x715 Real)) Real (ite (= x1203 x715) 71356987572919795984103299673912204194632180251134163011139925636576289226752 (x136 x715)))
(define-fun x1735 ((x715 Real)) Real (ite (= x715 x2605) x792 (x1408 x715)))
(define-fun x1517 ((x715 Real)) Real (ite (and (<= x1203 x715) (< x715 (+ 0 x1203))) (x2996 (+ (- x715 x1203) 0)) (x2158 x715)))
(define-fun x521 ((x715 Real)) Real (ite (= x715 x2083) x123 (x2112 x715)))
(define-fun x1227 ((x715 Real)) Real (ite (= x1247 x715) 0 (x1138 x715)))
(define-fun x460 ((x715 Real)) Real (ite (= x715 x726) x2369 (x2070 x715)))
(define-fun x1050 ((x715 Real)) Real (ite x2513 (x2070 x715) (x460 x715)))
(define-fun x179 ((x715 Real)) Real (ite (= x715 x726) x37 (x2070 x715)))
(define-fun x1660 ((x715 Real)) Real (ite x1039 (x2070 x715) (x179 x715)))
(define-fun x876 ((x715 Real)) Real (ite x2547 (x1050 x715) (x1660 x715)))
(define-fun x2340 ((x715 Real)) Real (ite x971 (x876 x715) (x2070 x715)))
(define-fun x549 ((x715 Real)) Real (ite (= x715 x306) 32884410799705633174121290916597065681711743008034783737682747490404042539008 (x1530 x715)))
(define-fun x1205 ((x715 Real)) Real (ite (= x715 x1746) x1479 (x549 x715)))
(define-fun x2018 ((x715 Real)) Real (ite (and (>= x715 x306) (< x715 (+ 32 x306))) (x348 (+ 0 (- x715 x306))) (x1512 x715)))
(define-fun x211 ((x715 Real)) Real (ite (and x2153 x2057 (not x1311)) (x2018 x715) (x1512 x715)))
(define-fun x517 ((x715 Real)) Real (ite (= x715 x1849) 80455309404869098397086765254582893697288411140986131472514049311582516674560 (x211 x715)))
(define-fun x160 ((x715 Real)) Real (ite (= x527 x715) x491 (x517 x715)))
(define-fun x703 ((x715 Real)) Real (ite (= x1803 x715) x3045 (x160 x715)))
(define-fun x640 ((x715 Real)) Real (ite (and (< x715 (+ 32 x1849)) (<= x1849 x715)) (x1023 (+ 0 (- x715 x1849))) (x1924 x715)))
(define-fun x2440 ((x715 Real)) Real (ite (and (not x2627) x3126 x2774) (x640 x715) (x1924 x715)))
(define-fun x996 ((x715 Real)) Real (ite (= x715 x330) 50942633119752846454219349998365661925608737367104304655302372697894809501696 (x2440 x715)))
(define-fun x1975 ((x715 Real)) Real (ite (= x715 x330) x1443 (x3129 x715)))
(define-fun x76 ((x715 Real)) Real (ite (= x330 x715) x2764 (x3129 x715)))
(define-fun x2947 ((x715 Real)) Real (ite (= x715 x57) x795 (x284 x715)))
(define-fun x637 ((x715 Real)) Real (ite (= x715 x57) x2654 (x284 x715)))
(define-fun x497 ((x715 Real)) Real (ite (and x2093 x1741) (x2947 x715) (x637 x715)))
(define-fun x2958 ((x715 Real)) Real (ite (and (not x1273) x2763) (x1530 x715) (ite (and x1157 x2505) (x2273 x715) (x497 x715))))
(define-fun x858 ((x715 Real)) Real (ite (and (> (+ x2681 32) x715) (>= x715 x2681)) (x949 (+ 0 (- x715 x2681))) (x825 x715)))
(define-fun x455 ((x715 Real)) Real (ite (= x715 x1724) x1813 (x2319 x715)))
(define-fun x1779 ((x715 x2268)) Real (ite (and x2814 x1218) (x178 x715) (ite (and x1396 x1703) (x922 x715) (ite (and x201 (not x3117)) (x922 x715) (ite (and x2418 x910) (x922 x715) (ite (and x3102 x1957) (x922 x715) (x178 x715)))))))
(define-fun x2564 ((x715 x2268)) Real (ite (= x715 x917) x1554 (x178 x715)))
(define-fun x1310 ((x715 x2268)) Real (ite x1091 (x1779 x715) (x2564 x715)))
(define-fun x2488 ((x715 x2268)) Real (ite x3042 (x922 x715) (x1310 x715)))
(define-fun x130 ((x715 x2268)) Real (ite x2997 (x2488 x715) (x922 x715)))
(define-fun x1008 ((x715 x2268)) Real (ite (and x241 x1508) (x2977 x715) (ite (and x295 x2399) (x2044 x715) (ite (and (not x2601) x1715) (x2044 x715) (ite (and x2492 x2207) (x2044 x715) (ite (and x2894 x1213) (x2044 x715) (x2977 x715)))))))
(define-fun x2744 ((x715 x2268)) Real (ite (= x2802 x715) x469 (x2977 x715)))
(define-fun x1780 ((x715 x2268)) Real (ite x1039 (x1008 x715) (x2744 x715)))
(define-fun x2364 ((x715 x2268)) Real (ite x2547 (x2044 x715) (x1780 x715)))
(define-fun x264 ((x715 x2268)) Real (ite x971 (x2364 x715) (x2044 x715)))
(define-fun x2708 ((x715 x2268)) Real (ite (and x2959 (not x3065)) (ite x820 (x130 x715) (x2471 x715)) (ite x2135 (x264 x715) (x2471 x715))))
(define-fun x1940 ((x715 x2268)) Real (ite (and x2949 x2422) (x1538 x715) (ite (and x1095 x2824) (x2010 x715) (ite (and x989 (not x593)) (x2010 x715) (ite (and x1596 x442) (x2010 x715) (ite (and x1582 x1398) (x2010 x715) (x1538 x715)))))))
(define-fun x2094 ((x715 x2268)) Real (ite (= x715 x3035) x140 (x1538 x715)))
(define-fun x1868 ((x715 x2268)) Real (ite x1913 (x1940 x715) (x2094 x715)))
(define-fun x1125 ((x715 x2268)) Real (ite x3042 (x1868 x715) (x2010 x715)))
(define-fun x3052 ((x715 x2268)) Real (ite x2997 (x1125 x715) (x2010 x715)))
(define-fun x1848 ((x715 x2268)) Real (ite (and x2989 x534) (x1037 x715) (ite (and x2122 x464) (x232 x715) (ite (and (not x2739) x1133) (x232 x715) (ite (and x412 x821) (x232 x715) (ite (and x1179 x909) (x232 x715) (x1037 x715)))))))
(define-fun x2310 ((x715 x2268)) Real (ite (= x633 x715) x823 (x1037 x715)))
(define-fun x492 ((x715 x2268)) Real (ite x2513 (x1848 x715) (x2310 x715)))
(define-fun x1308 ((x715 x2268)) Real (ite x2547 (x492 x715) (x232 x715)))
(define-fun x1736 ((x715 x2268)) Real (ite x971 (x1308 x715) (x232 x715)))
(define-fun x3103 ((x715 x2268)) Real (ite (and x2959 (not x3065)) (ite x820 (x3052 x715) (x2853 x715)) (ite x2135 (x1736 x715) (x2853 x715))))
(define-fun x3104 ((x715 Real)) Real (ite (= x2097 x715) x1420 (x2526 x715)))
(define-fun x213 ((x715 Real)) Real (ite (and (> (+ x1774 x104) x715) (>= x715 x1774)) (x1539 (+ (- x715 x1774) x82)) (x1559 x715)))
(define-fun x2613 ((x715 Real)) Real (ite (= x587 x715) x345 (x3133 x715)))
(define-fun x2389 ((x715 Real)) Real (ite (and x2763 (not x1273)) (x3133 x715) (x2613 x715)))
(define-fun x243 ((x715 Real)) Real (ite (= x81 x715) x403 (x2834 x715)))
(define-fun x958 ((x715 Real)) Real (ite (and (> (+ x3059 x831) x715) (>= x715 x3059)) (x1539 (+ (- x715 x3059) x82)) (x718 x715)))
(define-fun x3000 ((x715 Real)) Real (ite (= x715 x1740) x3071 (x1900 x715)))
(define-fun x299 ((x715 Real)) Real (ite (and x343 (not x3028)) (x1900 x715) (ite (and x2787 x74) (x3000 x715) (x1900 x715))))
(define-fun x270 ((x715 Real)) Real (ite (and (< x715 (+ x217 x2791)) (>= x715 x217)) (x1539 (+ (- x715 x217) x82)) (x1832 x715)))
(define-fun x721 ((x715 Real)) Real (ite (= x728 x715) x957 (x1017 x715)))
(define-fun x117 ((x715 Real)) Real (ite (and x1367 (not x2699)) (x1017 x715) (ite (and x1907 x550) (x721 x715) (x1017 x715))))
(define-fun x1410 ((x715 Real)) Real (ite (= x186 x715) x1365 (x2460 x715)))
(define-fun x103 ((x715 Real)) Real (ite (and (>= x715 x2572) (< x715 (+ x2572 x689))) (x1539 (+ (- x715 x2572) x82)) (x1998 x715)))
(define-fun x2397 ((x715 Real)) Real (ite (= x715 x1759) x1876 (x479 x715)))
(define-fun x1009 ((x715 Real)) Real (ite (and (not x592) x2116) (x479 x715) (ite (and x318 x644) (x2397 x715) (x479 x715))))
(define-fun x2909 ((x715 Real)) Real (ite (= x3118 x715) 29667888499431518244405524310122331055235727797159756471206109933501488824320 (x69 x715)))
(define-fun x1815 ((x715 Real)) Real (ite (and (<= x3118 x715) (< x715 (+ 32 x3118))) (x2265 (+ 0 (- x715 x3118))) (x1979 x715)))
(define-fun x2003 ((x715 Real)) Real (ite (and x2461 x2034 (not x4)) (x1815 x715) (x1979 x715)))
(define-fun x1639 ((x715 Real)) Real (ite (= x715 x2462) x2607 (x2170 x715)))
(define-fun x180 ((x715 Real)) Real (ite (= x715 x2462) x1248 (x2170 x715)))
(define-fun x2611 ((x715 Real)) Real (ite (and x1335 x2017) (x1639 x715) (x180 x715)))
(define-fun x625 ((x715 Real)) Real (ite (= x791 x715) 50942633119752846454219349998365661925608737367104304655302372697894809501696 (x2234 x715)))
(define-fun x390 ((x715 Real)) Real (ite (= x791 x715) x413 (x1584 x715)))
(define-fun x2298 ((x715 Real)) Real (ite (= x791 x715) x1356 (x1584 x715)))
(define-fun x1114 ((x715 Real)) Real (ite x222 (ite x1571 (x1584 x715) (x390 x715)) (ite x1449 (x1584 x715) (x2298 x715))))
(define-fun x2453 ((x715 Real)) Real (ite (= x2500 x715) 50942633119752846454219349998365661925608737367104304655302372697894809501696 (x1114 x715)))
(define-fun x2540 ((x715 Real)) Real (ite (= x2500 x715) x379 (x2525 x715)))
(define-fun x1626 ((x715 Real)) Real (ite (= x715 x2500) x2630 (x2525 x715)))
(define-fun x2585 ((x715 Real)) Real (ite (= x2905 x715) 32884410799705633174121290916597065681711743008034783737682747490404042539008 (x1528 x715)))
(define-fun x588 ((x715 Real)) Real (ite (= x2546 x715) x1769 (x2585 x715)))
(define-fun x722 ((x715 Real)) Real (ite (and (>= x715 x2905) (> (+ x2905 32) x715)) (x2133 (+ (- x715 x2905) 0)) (x10 x715)))
(define-fun x3075 ((x715 Real)) Real (ite (and x1302 x2655 (not x2806)) (x722 x715) (x10 x715)))
(define-fun x916 ((x715 Real)) Real (ite (= x715 x2636) 80455309404869098397086765254582893697288411140986131472514049311582516674560 (x3075 x715)))
(define-fun x1230 ((x715 Real)) Real (ite (= x715 x322) x931 (x916 x715)))
(define-fun x426 ((x715 Real)) Real (ite (= x715 x2493) x1010 (x1230 x715)))
(define-fun x1720 ((x715 Real)) Real (ite (and (> (+ 32 x2636) x715) (>= x715 x2636)) (x2455 (+ 0 (- x715 x2636))) (x84 x715)))
(define-fun x1104 ((x715 Real)) Real (ite (and (> (+ 32 x589) x715) (<= x589 x715)) (x2972 (+ (- x715 x589) 0)) (x2638 x715)))
(define-fun x2903 ((x715 Real)) Real (ite (and (not x1304) x1651 x3064) (x1104 x715) (x2638 x715)))
(define-fun x1416 ((x715 Real)) Real (ite (= x715 x2690) x795 (x60 x715)))
(define-fun x1482 ((x715 Real)) Real (ite (= x715 x2690) x2654 (x60 x715)))
(define-fun x2881 ((x715 Real)) Real (ite (and x375 x2810) (x1416 x715) (x1482 x715)))
(define-fun x760 ((x715 Real)) Real (ite (= x715 x2366) x795 (x2195 x715)))
(define-fun x2338 ((x715 Real)) Real (ite (= x2366 x715) x2654 (x2195 x715)))
(define-fun x1427 ((x715 Real)) Real (ite (and x2060 x2413) (x760 x715) (x2338 x715)))
(define-fun x302 ((x715 Real)) Real (ite (and x2595 x2484) (x1642 x715) (x1427 x715)))
(define-fun x1180 ((x715 Real)) Real (ite (= x715 x307) 29667888499431518244405524310122331055235727797159756471206109933501488824320 (x2795 x715)))
(define-fun x2359 ((x715 Real)) Real (ite (and (<= x307 x715) (< x715 (+ 32 x307))) (x2251 (+ (- x715 x307) 0)) (x1312 x715)))
(define-fun x1547 ((x715 Real)) Real (ite (and (not x1504) x1382 x2358) (x2359 x715) (x1312 x715)))
(define-fun x745 ((x715 Real)) Real (ite (= 0 x715) x2607 (x651 x715)))
(define-fun x2594 ((x715 Real)) Real (ite (= x715 x2377) x2607 (x3058 x715)))
(define-fun x228 ((x715 Real)) Real (ite (= 0 x715) x2607 (x1238 x715)))
(define-fun x1525 ((x715 Real)) Real (ite (= x715 x2377) x1248 (x3058 x715)))
(define-fun x2436 ((x715 Real)) Real (ite (and x1641 x255) (x2594 x715) (x1525 x715)))
(define-fun x1330 ((x715 Real)) Real (ite (and x343 (not x3028)) (x2795 x715) (ite (and x2787 x74) (x2436 x715) (x2795 x715))))
(define-fun x716 ((x715 Real)) Real (ite (= x3128 x715) 22876116169567568662247501733108717860502184539943453785307321755797215510528 (x1330 x715)))
(define-fun x2063 ((x715 Real)) Real (ite (= x715 x2474) x1250 (x716 x715)))
(define-fun x39 ((x715 Real)) Real (ite (and (> (+ x3128 32) x715) (<= x3128 x715)) (x860 (+ 0 (- x715 x3128))) (x399 x715)))
(define-fun x1189 ((x715 Real)) Real (ite (= 0 x715) x1795 (x143 x715)))
(define-fun x2197 ((x715 Real)) Real (ite (= x715 0) x1795 (x3043 x715)))
(define-fun x899 ((x715 Real)) Real (ite (= 0 x715) x1795 (x2501 x715)))
(define-fun x312 ((x715 Real)) Real (ite (= 0 x715) x1795 (x124 x715)))
(define-fun x1521 ((x715 Real)) Real (ite (= x715 x2341) x792 (x1378 x715)))
(define-fun x1671 ((x715 Real)) Real (ite (= x715 x1726) x951 (x1521 x715)))
(define-fun x409 ((x715 Real)) Real (ite (= x1203 x715) x604 (x830 x715)))
(define-fun x1652 ((x715 Real)) Real (ite (= x2287 x715) x1383 (x1671 x715)))
(define-fun x3001 ((x715 Real)) Real (ite (= x715 x874) x792 (x3079 x715)))
(define-fun x350 ((x715 Real)) Real (ite (= x1663 x715) x2290 (x3001 x715)))
(define-fun x515 ((x715 Real)) Real (ite (= x1212 x715) x2444 (x314 x715)))
(define-fun x1751 ((x715 Real)) Real (ite (= x107 x715) x3057 (x350 x715)))
(define-fun x2640 ((x715 Real)) Real (ite (= x726 x715) x2069 (x482 x715)))
(define-fun x522 ((x715 Real)) Real (ite (and x2306 x2427) (x482 x715) (x2640 x715)))
(define-fun x3006 ((x715 Real)) Real (ite (= x2236 x715) x1688 (x482 x715)))
(define-fun x1776 ((x715 Real)) Real (ite (and x1495 x2048) (x482 x715) (x3006 x715)))
(define-fun x968 ((x715 Real)) Real (ite (= x715 0) x795 (x2945 x715)))
(define-fun x2230 ((x715 Real)) Real (ite (= x715 0) x795 (x1452 x715)))
(define-fun x1649 ((x715 Real)) Real (ite (= 0 x715) x795 (x935 x715)))
(define-fun x2476 ((x715 Real)) Real (ite (= 0 x715) 1 (x2107 x715)))
(define-fun x2305 ((x715 Real)) Real (ite x2513 (x2107 x715) (x2476 x715)))
(define-fun x571 ((x715 Real)) Real (ite (= 0 x715) 1 (x2107 x715)))
(define-fun x1165 ((x715 Real)) Real (ite x1039 (x2107 x715) (x571 x715)))
(define-fun x1129 ((x715 Real)) Real (ite x971 (ite x2547 (x2305 x715) (x1165 x715)) (x880 x715)))
(define-fun x943 ((x715 Real)) Real (ite (and (<= x2282 x715) (> (+ x2282 x2069) x715)) (x1129 (+ 0 (- x715 x2282))) (x1603 x715)))
(define-fun x2599 ((x715 x2268)) Real (ite (and x2598 (not x584) x200) (x1579 x715) (x1077 x715)))
(define-fun x509 ((x715 x2268)) Real (ite (= (x2238 274184521717934524641157099916833587231) x715) x63 (x2599 x715)))
(define-fun x1801 ((x715 x2268)) Real (ite (= (x2238 x883) x715) x2782 (x509 x715)))
(define-fun x1943 ((x715 Real)) Real (ite (= x715 0) 1 (x1857 x715)))
(define-fun x2883 ((x715 Real)) Real (ite x1913 (x1857 x715) (x1943 x715)))
(define-fun x3100 ((x715 Real)) Real (ite (= 0 x715) 1 (x1857 x715)))
(define-fun x1450 ((x715 Real)) Real (ite x1091 (x1857 x715) (x3100 x715)))
(define-fun x2731 ((x715 Real)) Real (ite x2997 (ite x3042 (x2883 x715) (x1450 x715)) (x1687 x715)))
(define-fun x1527 ((x715 Real)) Real (ite (and (< x715 (+ x1688 x1991)) (<= x1991 x715)) (x2731 (+ (- x715 x1991) 0)) (x2191 x715)))
(define-fun x282 ((x715 x2268)) Real (ite (and x2269 (not x1654) x291) (x687 x715) (x1077 x715)))
(define-fun x1062 ((x715 x2268)) Real (ite (= (x2238 274184521717934524641157099916833587231) x715) x2494 (x282 x715)))
(define-fun x1442 ((x715 x2268)) Real (ite (= (x2238 x2999) x715) x868 (x1062 x715)))
(define-fun x1549 ((x715 Real)) Real (ite (and x2306 x2427) (x1603 x715) (x943 x715)))
(define-fun x400 ((x715 Real)) Real (ite (and x1495 x2048) (x2191 x715) (x1527 x715)))
(define-fun x2578 ((x715 Real)) Real (ite (and (not x2944) x964 x2160) (x39 x715) (x399 x715)))
(define-fun x918 ((x715 Real)) Real (ite (= 0 x715) x1248 (x651 x715)))
(define-fun x1734 ((x715 Real)) Real (ite (= x715 0) x1248 (x1238 x715)))
(define-fun x2714 ((x715 Real)) Real (ite (= x715 0) x2790 (x143 x715)))
(define-fun x249 ((x715 Real)) Real (ite (= x715 0) x2790 (x3043 x715)))
(define-fun x2781 ((x715 Real)) Real (ite (= x715 0) x2790 (x2501 x715)))
(define-fun x185 ((x715 Real)) Real (ite (= 0 x715) x2790 (x124 x715)))
(define-fun x2241 ((x715 Real)) Real (ite (= 0 x715) x2654 (x2945 x715)))
(define-fun x1119 ((x715 Real)) Real (ite (= 0 x715) x2654 (x1452 x715)))
(define-fun x1466 ((x715 Real)) Real (ite (= 0 x715) x2654 (x935 x715)))
(define-fun x3099 ((x715 x2268)) Real (ite (= (x2238 x883) x715) x2982 (x1801 x715)))
(define-fun x170 ((x715 x2268)) Real (ite (= x715 (x2238 x2999)) x1052 (x1442 x715)))
(define-fun x2442 ((x715 Real)) Real (ite (= 0 x715) x1929 (x1232 x715)))
(define-fun x2098 ((x715 Real)) Real (ite (= 0 x715) x1475 (x1232 x715)))
(define-fun x2300 ((x715 Real)) Real (ite (= x715 0) x2198 (x2214 x715)))
(define-fun x1374 ((x715 Real)) Real (ite (= 0 x715) x924 (x2214 x715)))
(define-fun x3074 ((x715 Real)) Real (ite (= 0 x715) x2764 (x2993 x715)))
(define-fun x56 ((x715 Real)) Real (ite (= 0 x715) x1443 (x2993 x715)))
(define-fun x2104 ((x715 Real)) Real (ite (= 0 x715) x1356 (x2895 x715)))
(define-fun x2224 ((x715 Real)) Real (ite (= 0 x715) x413 (x2895 x715)))
(define-fun x35 ((x715 Real)) Real (ite (= 0 x715) x2630 (x1188 x715)))
(define-fun x230 ((x715 Real)) Real (ite (= x715 0) x379 (x1188 x715)))
(define-fun x1824 ((x991 Real)) Bool (=> (and (not (= x991 826074471)) (not (= x991 274184521717934524641157099916833587231)) (not (= x991 1000000000000000000)) (not (= x991 274184521717934524641157099916833587202)) (not (= 80455309404869098397086765254582893697288411140986131472514049311582516674560 x991)) (not (= 4168891048 x991)) (not (= 274184521717934524641157099916833587206 x991)) (not (= x991 117300739)) (not (= x991 18446744073709551615)) (not (= x991 22270923681254677845691103109158760375340177724800803888364822332811285364736)) (not (= x991 115792089237316195423570985008687907853269984665640564039457584007913129639935)) (not (= 157198259 x991)) (not (= 1461501637330902918203684832716283019655932542976 x991)) (not (= x991 10894474682274239493831243662817379401261526446360622092269559273883068006400)) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639904 x991)) (not (= x991 22876116169567568662247501733108717860502184539943453785307321755797215510528)) (not (= 2514000705 x991)) (not (= x991 2743638299)) (not (= 71356987572919795984103299673912204194632180251134163011139925636576289226752 x991)) (not (= x991 17154740991736861046558774992177620686056526479738507590741468237373194108928)) (not (= 1889567281 x991)) (not (= 1461501637330902918203684832716283019655932542975 x991)) (not (= x991 32884410799705633174121290916597065681711743008034783737682747490404042539008)) (not (= 76450787359836037641860180984291677749980919077056822294353438043884394381312 x991)) (< 10000 x991) (not (= x991 42459404708690159261654315324267577519400883839135586425952143822324095778816)) (not (= 3939881817 x991)) (not (= 404098525 x991)) (not (= x991 50942633119752846454219349998365661925608737367104304655302372697894809501696)) (not (= 2835717307 x991)) (not (= x991 4294967296)) (not (= 26959946667150639794667015087019630673637144422540572481103610249215 x991)) (not (= 29667888499431518244405524310122331055235727797159756471206109933501488824320 x991))) (not ((_ is x94) (x2238 x991)))))
(assert (axiom_frac_bound (* 1000000000000000000 x1491) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (* 1000000000000000000 x1491) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x1491 (uninterp_frac (* 1000000000000000000 x1491) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x1491) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x2196 (uninterp_frac (* 1000000000000000000 x1491) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x1491) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1365 (uninterp_frac (* 1000000000000000000 x1491) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x1491) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1420 (uninterp_frac (* 1000000000000000000 x1491) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x1491) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1813 (uninterp_frac (* 1000000000000000000 x1491) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x1491) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2670 (uninterp_frac (* 1000000000000000000 x1491) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x1491) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x403 (uninterp_frac (* 1000000000000000000 x1491) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x1491) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1420 32 (uninterp_frac (* 1000000000000000000 x1491) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x1491) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1701 x470 (uninterp_frac (* 1000000000000000000 x1491) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x1491) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x174 x1717 (uninterp_frac (* 1000000000000000000 x1491) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x1491) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1813 32 (uninterp_frac (* 1000000000000000000 x1491) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x1491) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1870 x540 (uninterp_frac (* 1000000000000000000 x1491) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x1491) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2020 x607 (uninterp_frac (* 1000000000000000000 x1491) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x1491) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x219 x2872 (uninterp_frac (* 1000000000000000000 x1491) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x1491) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2448 x2311 (uninterp_frac (* 1000000000000000000 x1491) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x1491) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x25 x1511 (uninterp_frac (* 1000000000000000000 x1491) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x1491) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2629 x1816 (uninterp_frac (* 1000000000000000000 x1491) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x1491) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2670 32 (uninterp_frac (* 1000000000000000000 x1491) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x1491) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2727 x2303 (uninterp_frac (* 1000000000000000000 x1491) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x1491) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2877 x1739 (uninterp_frac (* 1000000000000000000 x1491) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x1491) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2932 x709 (uninterp_frac (* 1000000000000000000 x1491) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x1491) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2962 32 (uninterp_frac (* 1000000000000000000 x1491) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x1491) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3115 x738 (uninterp_frac (* 1000000000000000000 x1491) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x1491) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x403 32 (uninterp_frac (* 1000000000000000000 x1491) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x1491) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x408 x2710 (uninterp_frac (* 1000000000000000000 x1491) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x1491) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x540 x852 (uninterp_frac (* 1000000000000000000 x1491) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x1491) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x679 x985 (uninterp_frac (* 1000000000000000000 x1491) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (* 1000000000000000000 x2196) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (* 1000000000000000000 x2196) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x1491 (uninterp_frac (* 1000000000000000000 x2196) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x2196) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x2196 (uninterp_frac (* 1000000000000000000 x2196) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x2196) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1365 (uninterp_frac (* 1000000000000000000 x2196) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x2196) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1420 (uninterp_frac (* 1000000000000000000 x2196) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x2196) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1813 (uninterp_frac (* 1000000000000000000 x2196) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x2196) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2670 (uninterp_frac (* 1000000000000000000 x2196) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x2196) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x403 (uninterp_frac (* 1000000000000000000 x2196) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x2196) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1420 32 (uninterp_frac (* 1000000000000000000 x2196) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x2196) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1701 x470 (uninterp_frac (* 1000000000000000000 x2196) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x2196) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x174 x1717 (uninterp_frac (* 1000000000000000000 x2196) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x2196) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1813 32 (uninterp_frac (* 1000000000000000000 x2196) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x2196) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1870 x540 (uninterp_frac (* 1000000000000000000 x2196) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x2196) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2020 x607 (uninterp_frac (* 1000000000000000000 x2196) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x2196) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x219 x2872 (uninterp_frac (* 1000000000000000000 x2196) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x2196) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2448 x2311 (uninterp_frac (* 1000000000000000000 x2196) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x2196) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x25 x1511 (uninterp_frac (* 1000000000000000000 x2196) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x2196) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2629 x1816 (uninterp_frac (* 1000000000000000000 x2196) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x2196) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2670 32 (uninterp_frac (* 1000000000000000000 x2196) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x2196) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2727 x2303 (uninterp_frac (* 1000000000000000000 x2196) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x2196) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2877 x1739 (uninterp_frac (* 1000000000000000000 x2196) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x2196) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2932 x709 (uninterp_frac (* 1000000000000000000 x2196) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x2196) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2962 32 (uninterp_frac (* 1000000000000000000 x2196) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x2196) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3115 x738 (uninterp_frac (* 1000000000000000000 x2196) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x2196) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x403 32 (uninterp_frac (* 1000000000000000000 x2196) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x2196) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x408 x2710 (uninterp_frac (* 1000000000000000000 x2196) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x2196) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x540 x852 (uninterp_frac (* 1000000000000000000 x2196) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x2196) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x679 x985 (uninterp_frac (* 1000000000000000000 x2196) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (* 32 x1365) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (* 32 x1365) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x1491 (uninterp_frac (* 32 x1365) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1365) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x2196 (uninterp_frac (* 32 x1365) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1365) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1365 (uninterp_frac (* 32 x1365) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1365) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1420 (uninterp_frac (* 32 x1365) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1365) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1813 (uninterp_frac (* 32 x1365) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1365) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2670 (uninterp_frac (* 32 x1365) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1365) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x403 (uninterp_frac (* 32 x1365) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1365) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1420 32 (uninterp_frac (* 32 x1365) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1365) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1701 x470 (uninterp_frac (* 32 x1365) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1365) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x174 x1717 (uninterp_frac (* 32 x1365) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1365) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1813 32 (uninterp_frac (* 32 x1365) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1365) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1870 x540 (uninterp_frac (* 32 x1365) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1365) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2020 x607 (uninterp_frac (* 32 x1365) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1365) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x219 x2872 (uninterp_frac (* 32 x1365) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1365) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2448 x2311 (uninterp_frac (* 32 x1365) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1365) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x25 x1511 (uninterp_frac (* 32 x1365) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1365) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2629 x1816 (uninterp_frac (* 32 x1365) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1365) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2670 32 (uninterp_frac (* 32 x1365) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1365) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2727 x2303 (uninterp_frac (* 32 x1365) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1365) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2877 x1739 (uninterp_frac (* 32 x1365) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1365) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2932 x709 (uninterp_frac (* 32 x1365) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1365) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2962 32 (uninterp_frac (* 32 x1365) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1365) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3115 x738 (uninterp_frac (* 32 x1365) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1365) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x403 32 (uninterp_frac (* 32 x1365) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1365) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x408 x2710 (uninterp_frac (* 32 x1365) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1365) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x540 x852 (uninterp_frac (* 32 x1365) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1365) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x679 x985 (uninterp_frac (* 32 x1365) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (* 32 x1420) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (* 32 x1420) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x1491 (uninterp_frac (* 32 x1420) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1420) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x2196 (uninterp_frac (* 32 x1420) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1420) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1365 (uninterp_frac (* 32 x1420) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1420) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1420 (uninterp_frac (* 32 x1420) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1420) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1813 (uninterp_frac (* 32 x1420) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1420) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2670 (uninterp_frac (* 32 x1420) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1420) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x403 (uninterp_frac (* 32 x1420) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1420) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1420 32 (uninterp_frac (* 32 x1420) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1420) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1701 x470 (uninterp_frac (* 32 x1420) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1420) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x174 x1717 (uninterp_frac (* 32 x1420) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1420) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1813 32 (uninterp_frac (* 32 x1420) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1420) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1870 x540 (uninterp_frac (* 32 x1420) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1420) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2020 x607 (uninterp_frac (* 32 x1420) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1420) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x219 x2872 (uninterp_frac (* 32 x1420) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1420) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2448 x2311 (uninterp_frac (* 32 x1420) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1420) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x25 x1511 (uninterp_frac (* 32 x1420) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1420) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2629 x1816 (uninterp_frac (* 32 x1420) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1420) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2670 32 (uninterp_frac (* 32 x1420) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1420) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2727 x2303 (uninterp_frac (* 32 x1420) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1420) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2877 x1739 (uninterp_frac (* 32 x1420) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1420) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2932 x709 (uninterp_frac (* 32 x1420) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1420) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2962 32 (uninterp_frac (* 32 x1420) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1420) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3115 x738 (uninterp_frac (* 32 x1420) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1420) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x403 32 (uninterp_frac (* 32 x1420) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1420) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x408 x2710 (uninterp_frac (* 32 x1420) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1420) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x540 x852 (uninterp_frac (* 32 x1420) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1420) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x679 x985 (uninterp_frac (* 32 x1420) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (* 32 x1813) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (* 32 x1813) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x1491 (uninterp_frac (* 32 x1813) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1813) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x2196 (uninterp_frac (* 32 x1813) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1813) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1365 (uninterp_frac (* 32 x1813) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1813) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1420 (uninterp_frac (* 32 x1813) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1813) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1813 (uninterp_frac (* 32 x1813) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1813) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2670 (uninterp_frac (* 32 x1813) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1813) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x403 (uninterp_frac (* 32 x1813) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1813) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1420 32 (uninterp_frac (* 32 x1813) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1813) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1701 x470 (uninterp_frac (* 32 x1813) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1813) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x174 x1717 (uninterp_frac (* 32 x1813) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1813) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1813 32 (uninterp_frac (* 32 x1813) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1813) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1870 x540 (uninterp_frac (* 32 x1813) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1813) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2020 x607 (uninterp_frac (* 32 x1813) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1813) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x219 x2872 (uninterp_frac (* 32 x1813) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1813) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2448 x2311 (uninterp_frac (* 32 x1813) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1813) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x25 x1511 (uninterp_frac (* 32 x1813) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1813) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2629 x1816 (uninterp_frac (* 32 x1813) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1813) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2670 32 (uninterp_frac (* 32 x1813) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1813) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2727 x2303 (uninterp_frac (* 32 x1813) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1813) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2877 x1739 (uninterp_frac (* 32 x1813) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1813) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2932 x709 (uninterp_frac (* 32 x1813) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1813) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2962 32 (uninterp_frac (* 32 x1813) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1813) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3115 x738 (uninterp_frac (* 32 x1813) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1813) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x403 32 (uninterp_frac (* 32 x1813) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1813) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x408 x2710 (uninterp_frac (* 32 x1813) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1813) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x540 x852 (uninterp_frac (* 32 x1813) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x1813) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x679 x985 (uninterp_frac (* 32 x1813) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (* 32 x2670) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (* 32 x2670) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x1491 (uninterp_frac (* 32 x2670) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2670) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x2196 (uninterp_frac (* 32 x2670) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2670) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1365 (uninterp_frac (* 32 x2670) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2670) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1420 (uninterp_frac (* 32 x2670) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2670) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1813 (uninterp_frac (* 32 x2670) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2670) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2670 (uninterp_frac (* 32 x2670) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2670) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x403 (uninterp_frac (* 32 x2670) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2670) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1420 32 (uninterp_frac (* 32 x2670) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2670) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1701 x470 (uninterp_frac (* 32 x2670) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2670) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x174 x1717 (uninterp_frac (* 32 x2670) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2670) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1813 32 (uninterp_frac (* 32 x2670) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2670) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1870 x540 (uninterp_frac (* 32 x2670) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2670) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2020 x607 (uninterp_frac (* 32 x2670) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2670) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x219 x2872 (uninterp_frac (* 32 x2670) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2670) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2448 x2311 (uninterp_frac (* 32 x2670) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2670) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x25 x1511 (uninterp_frac (* 32 x2670) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2670) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2629 x1816 (uninterp_frac (* 32 x2670) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2670) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2670 32 (uninterp_frac (* 32 x2670) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2670) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2727 x2303 (uninterp_frac (* 32 x2670) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2670) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2877 x1739 (uninterp_frac (* 32 x2670) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2670) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2932 x709 (uninterp_frac (* 32 x2670) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2670) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2962 32 (uninterp_frac (* 32 x2670) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2670) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3115 x738 (uninterp_frac (* 32 x2670) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2670) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x403 32 (uninterp_frac (* 32 x2670) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2670) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x408 x2710 (uninterp_frac (* 32 x2670) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2670) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x540 x852 (uninterp_frac (* 32 x2670) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x2670) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x679 x985 (uninterp_frac (* 32 x2670) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (* 32 x403) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (* 32 x403) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x1491 (uninterp_frac (* 32 x403) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x403) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x2196 (uninterp_frac (* 32 x403) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x403) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1365 (uninterp_frac (* 32 x403) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x403) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1420 (uninterp_frac (* 32 x403) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x403) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1813 (uninterp_frac (* 32 x403) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x403) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2670 (uninterp_frac (* 32 x403) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x403) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x403 (uninterp_frac (* 32 x403) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x403) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1420 32 (uninterp_frac (* 32 x403) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x403) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1701 x470 (uninterp_frac (* 32 x403) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x403) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x174 x1717 (uninterp_frac (* 32 x403) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x403) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1813 32 (uninterp_frac (* 32 x403) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x403) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1870 x540 (uninterp_frac (* 32 x403) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x403) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2020 x607 (uninterp_frac (* 32 x403) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x403) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x219 x2872 (uninterp_frac (* 32 x403) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x403) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2448 x2311 (uninterp_frac (* 32 x403) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x403) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x25 x1511 (uninterp_frac (* 32 x403) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x403) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2629 x1816 (uninterp_frac (* 32 x403) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x403) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2670 32 (uninterp_frac (* 32 x403) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x403) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2727 x2303 (uninterp_frac (* 32 x403) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x403) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2877 x1739 (uninterp_frac (* 32 x403) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x403) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2932 x709 (uninterp_frac (* 32 x403) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x403) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2962 32 (uninterp_frac (* 32 x403) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x403) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3115 x738 (uninterp_frac (* 32 x403) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x403) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x403 32 (uninterp_frac (* 32 x403) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x403) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x408 x2710 (uninterp_frac (* 32 x403) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x403) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x540 x852 (uninterp_frac (* 32 x403) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x403) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x679 x985 (uninterp_frac (* 32 x403) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (* x1420 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (* x1420 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x1491 (uninterp_frac (* x1420 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1420 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x2196 (uninterp_frac (* x1420 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1420 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1365 (uninterp_frac (* x1420 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1420 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1420 (uninterp_frac (* x1420 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1420 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1813 (uninterp_frac (* x1420 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1420 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2670 (uninterp_frac (* x1420 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1420 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x403 (uninterp_frac (* x1420 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1420 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1420 32 (uninterp_frac (* x1420 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1420 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1701 x470 (uninterp_frac (* x1420 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1420 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x174 x1717 (uninterp_frac (* x1420 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1420 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1813 32 (uninterp_frac (* x1420 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1420 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1870 x540 (uninterp_frac (* x1420 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1420 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2020 x607 (uninterp_frac (* x1420 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1420 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x219 x2872 (uninterp_frac (* x1420 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1420 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2448 x2311 (uninterp_frac (* x1420 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1420 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x25 x1511 (uninterp_frac (* x1420 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1420 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2629 x1816 (uninterp_frac (* x1420 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1420 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2670 32 (uninterp_frac (* x1420 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1420 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2727 x2303 (uninterp_frac (* x1420 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1420 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2877 x1739 (uninterp_frac (* x1420 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1420 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2932 x709 (uninterp_frac (* x1420 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1420 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2962 32 (uninterp_frac (* x1420 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1420 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3115 x738 (uninterp_frac (* x1420 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1420 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x403 32 (uninterp_frac (* x1420 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1420 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x408 x2710 (uninterp_frac (* x1420 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1420 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x540 x852 (uninterp_frac (* x1420 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1420 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x679 x985 (uninterp_frac (* x1420 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (* x1701 x470) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (* x1701 x470) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x1491 (uninterp_frac (* x1701 x470) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1701 x470) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x2196 (uninterp_frac (* x1701 x470) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1701 x470) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1365 (uninterp_frac (* x1701 x470) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1701 x470) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1420 (uninterp_frac (* x1701 x470) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1701 x470) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1813 (uninterp_frac (* x1701 x470) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1701 x470) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2670 (uninterp_frac (* x1701 x470) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1701 x470) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x403 (uninterp_frac (* x1701 x470) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1701 x470) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1420 32 (uninterp_frac (* x1701 x470) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1701 x470) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1701 x470 (uninterp_frac (* x1701 x470) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1701 x470) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x174 x1717 (uninterp_frac (* x1701 x470) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1701 x470) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1813 32 (uninterp_frac (* x1701 x470) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1701 x470) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1870 x540 (uninterp_frac (* x1701 x470) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1701 x470) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2020 x607 (uninterp_frac (* x1701 x470) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1701 x470) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x219 x2872 (uninterp_frac (* x1701 x470) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1701 x470) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2448 x2311 (uninterp_frac (* x1701 x470) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1701 x470) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x25 x1511 (uninterp_frac (* x1701 x470) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1701 x470) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2629 x1816 (uninterp_frac (* x1701 x470) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1701 x470) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2670 32 (uninterp_frac (* x1701 x470) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1701 x470) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2727 x2303 (uninterp_frac (* x1701 x470) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1701 x470) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2877 x1739 (uninterp_frac (* x1701 x470) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1701 x470) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2932 x709 (uninterp_frac (* x1701 x470) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1701 x470) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2962 32 (uninterp_frac (* x1701 x470) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1701 x470) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3115 x738 (uninterp_frac (* x1701 x470) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1701 x470) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x403 32 (uninterp_frac (* x1701 x470) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1701 x470) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x408 x2710 (uninterp_frac (* x1701 x470) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1701 x470) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x540 x852 (uninterp_frac (* x1701 x470) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1701 x470) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x679 x985 (uninterp_frac (* x1701 x470) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (* x174 x1717) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (* x174 x1717) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x1491 (uninterp_frac (* x174 x1717) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x174 x1717) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x2196 (uninterp_frac (* x174 x1717) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x174 x1717) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1365 (uninterp_frac (* x174 x1717) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x174 x1717) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1420 (uninterp_frac (* x174 x1717) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x174 x1717) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1813 (uninterp_frac (* x174 x1717) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x174 x1717) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2670 (uninterp_frac (* x174 x1717) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x174 x1717) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x403 (uninterp_frac (* x174 x1717) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x174 x1717) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1420 32 (uninterp_frac (* x174 x1717) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x174 x1717) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1701 x470 (uninterp_frac (* x174 x1717) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x174 x1717) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x174 x1717 (uninterp_frac (* x174 x1717) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x174 x1717) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1813 32 (uninterp_frac (* x174 x1717) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x174 x1717) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1870 x540 (uninterp_frac (* x174 x1717) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x174 x1717) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2020 x607 (uninterp_frac (* x174 x1717) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x174 x1717) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x219 x2872 (uninterp_frac (* x174 x1717) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x174 x1717) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2448 x2311 (uninterp_frac (* x174 x1717) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x174 x1717) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x25 x1511 (uninterp_frac (* x174 x1717) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x174 x1717) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2629 x1816 (uninterp_frac (* x174 x1717) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x174 x1717) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2670 32 (uninterp_frac (* x174 x1717) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x174 x1717) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2727 x2303 (uninterp_frac (* x174 x1717) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x174 x1717) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2877 x1739 (uninterp_frac (* x174 x1717) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x174 x1717) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2932 x709 (uninterp_frac (* x174 x1717) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x174 x1717) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2962 32 (uninterp_frac (* x174 x1717) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x174 x1717) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3115 x738 (uninterp_frac (* x174 x1717) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x174 x1717) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x403 32 (uninterp_frac (* x174 x1717) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x174 x1717) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x408 x2710 (uninterp_frac (* x174 x1717) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x174 x1717) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x540 x852 (uninterp_frac (* x174 x1717) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x174 x1717) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x679 x985 (uninterp_frac (* x174 x1717) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (* x1813 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (* x1813 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x1491 (uninterp_frac (* x1813 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1813 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x2196 (uninterp_frac (* x1813 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1813 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1365 (uninterp_frac (* x1813 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1813 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1420 (uninterp_frac (* x1813 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1813 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1813 (uninterp_frac (* x1813 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1813 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2670 (uninterp_frac (* x1813 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1813 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x403 (uninterp_frac (* x1813 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1813 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1420 32 (uninterp_frac (* x1813 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1813 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1701 x470 (uninterp_frac (* x1813 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1813 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x174 x1717 (uninterp_frac (* x1813 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1813 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1813 32 (uninterp_frac (* x1813 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1813 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1870 x540 (uninterp_frac (* x1813 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1813 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2020 x607 (uninterp_frac (* x1813 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1813 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x219 x2872 (uninterp_frac (* x1813 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1813 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2448 x2311 (uninterp_frac (* x1813 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1813 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x25 x1511 (uninterp_frac (* x1813 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1813 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2629 x1816 (uninterp_frac (* x1813 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1813 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2670 32 (uninterp_frac (* x1813 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1813 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2727 x2303 (uninterp_frac (* x1813 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1813 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2877 x1739 (uninterp_frac (* x1813 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1813 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2932 x709 (uninterp_frac (* x1813 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1813 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2962 32 (uninterp_frac (* x1813 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1813 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3115 x738 (uninterp_frac (* x1813 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1813 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x403 32 (uninterp_frac (* x1813 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1813 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x408 x2710 (uninterp_frac (* x1813 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1813 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x540 x852 (uninterp_frac (* x1813 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1813 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x679 x985 (uninterp_frac (* x1813 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (* x1870 x540) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (* x1870 x540) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x1491 (uninterp_frac (* x1870 x540) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1870 x540) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x2196 (uninterp_frac (* x1870 x540) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1870 x540) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1365 (uninterp_frac (* x1870 x540) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1870 x540) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1420 (uninterp_frac (* x1870 x540) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1870 x540) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1813 (uninterp_frac (* x1870 x540) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1870 x540) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2670 (uninterp_frac (* x1870 x540) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1870 x540) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x403 (uninterp_frac (* x1870 x540) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1870 x540) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1420 32 (uninterp_frac (* x1870 x540) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1870 x540) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1701 x470 (uninterp_frac (* x1870 x540) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1870 x540) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x174 x1717 (uninterp_frac (* x1870 x540) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1870 x540) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1813 32 (uninterp_frac (* x1870 x540) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1870 x540) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1870 x540 (uninterp_frac (* x1870 x540) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1870 x540) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2020 x607 (uninterp_frac (* x1870 x540) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1870 x540) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x219 x2872 (uninterp_frac (* x1870 x540) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1870 x540) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2448 x2311 (uninterp_frac (* x1870 x540) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1870 x540) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x25 x1511 (uninterp_frac (* x1870 x540) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1870 x540) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2629 x1816 (uninterp_frac (* x1870 x540) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1870 x540) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2670 32 (uninterp_frac (* x1870 x540) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1870 x540) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2727 x2303 (uninterp_frac (* x1870 x540) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1870 x540) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2877 x1739 (uninterp_frac (* x1870 x540) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1870 x540) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2932 x709 (uninterp_frac (* x1870 x540) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1870 x540) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2962 32 (uninterp_frac (* x1870 x540) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1870 x540) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3115 x738 (uninterp_frac (* x1870 x540) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1870 x540) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x403 32 (uninterp_frac (* x1870 x540) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1870 x540) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x408 x2710 (uninterp_frac (* x1870 x540) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1870 x540) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x540 x852 (uninterp_frac (* x1870 x540) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1870 x540) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x679 x985 (uninterp_frac (* x1870 x540) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (* x2020 x607) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (* x2020 x607) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x1491 (uninterp_frac (* x2020 x607) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2020 x607) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x2196 (uninterp_frac (* x2020 x607) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2020 x607) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1365 (uninterp_frac (* x2020 x607) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2020 x607) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1420 (uninterp_frac (* x2020 x607) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2020 x607) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1813 (uninterp_frac (* x2020 x607) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2020 x607) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2670 (uninterp_frac (* x2020 x607) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2020 x607) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x403 (uninterp_frac (* x2020 x607) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2020 x607) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1420 32 (uninterp_frac (* x2020 x607) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2020 x607) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1701 x470 (uninterp_frac (* x2020 x607) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2020 x607) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x174 x1717 (uninterp_frac (* x2020 x607) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2020 x607) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1813 32 (uninterp_frac (* x2020 x607) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2020 x607) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1870 x540 (uninterp_frac (* x2020 x607) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2020 x607) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2020 x607 (uninterp_frac (* x2020 x607) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2020 x607) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x219 x2872 (uninterp_frac (* x2020 x607) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2020 x607) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2448 x2311 (uninterp_frac (* x2020 x607) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2020 x607) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x25 x1511 (uninterp_frac (* x2020 x607) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2020 x607) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2629 x1816 (uninterp_frac (* x2020 x607) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2020 x607) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2670 32 (uninterp_frac (* x2020 x607) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2020 x607) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2727 x2303 (uninterp_frac (* x2020 x607) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2020 x607) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2877 x1739 (uninterp_frac (* x2020 x607) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2020 x607) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2932 x709 (uninterp_frac (* x2020 x607) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2020 x607) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2962 32 (uninterp_frac (* x2020 x607) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2020 x607) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3115 x738 (uninterp_frac (* x2020 x607) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2020 x607) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x403 32 (uninterp_frac (* x2020 x607) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2020 x607) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x408 x2710 (uninterp_frac (* x2020 x607) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2020 x607) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x540 x852 (uninterp_frac (* x2020 x607) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2020 x607) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x679 x985 (uninterp_frac (* x2020 x607) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (* x219 x2872) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (* x219 x2872) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x1491 (uninterp_frac (* x219 x2872) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x219 x2872) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x2196 (uninterp_frac (* x219 x2872) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x219 x2872) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1365 (uninterp_frac (* x219 x2872) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x219 x2872) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1420 (uninterp_frac (* x219 x2872) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x219 x2872) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1813 (uninterp_frac (* x219 x2872) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x219 x2872) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2670 (uninterp_frac (* x219 x2872) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x219 x2872) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x403 (uninterp_frac (* x219 x2872) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x219 x2872) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1420 32 (uninterp_frac (* x219 x2872) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x219 x2872) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1701 x470 (uninterp_frac (* x219 x2872) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x219 x2872) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x174 x1717 (uninterp_frac (* x219 x2872) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x219 x2872) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1813 32 (uninterp_frac (* x219 x2872) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x219 x2872) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1870 x540 (uninterp_frac (* x219 x2872) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x219 x2872) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2020 x607 (uninterp_frac (* x219 x2872) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x219 x2872) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x219 x2872 (uninterp_frac (* x219 x2872) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x219 x2872) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2448 x2311 (uninterp_frac (* x219 x2872) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x219 x2872) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x25 x1511 (uninterp_frac (* x219 x2872) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x219 x2872) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2629 x1816 (uninterp_frac (* x219 x2872) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x219 x2872) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2670 32 (uninterp_frac (* x219 x2872) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x219 x2872) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2727 x2303 (uninterp_frac (* x219 x2872) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x219 x2872) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2877 x1739 (uninterp_frac (* x219 x2872) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x219 x2872) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2932 x709 (uninterp_frac (* x219 x2872) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x219 x2872) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2962 32 (uninterp_frac (* x219 x2872) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x219 x2872) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3115 x738 (uninterp_frac (* x219 x2872) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x219 x2872) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x403 32 (uninterp_frac (* x219 x2872) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x219 x2872) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x408 x2710 (uninterp_frac (* x219 x2872) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x219 x2872) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x540 x852 (uninterp_frac (* x219 x2872) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x219 x2872) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x679 x985 (uninterp_frac (* x219 x2872) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (* x2448 x2311) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (* x2448 x2311) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x1491 (uninterp_frac (* x2448 x2311) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2448 x2311) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x2196 (uninterp_frac (* x2448 x2311) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2448 x2311) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1365 (uninterp_frac (* x2448 x2311) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2448 x2311) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1420 (uninterp_frac (* x2448 x2311) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2448 x2311) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1813 (uninterp_frac (* x2448 x2311) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2448 x2311) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2670 (uninterp_frac (* x2448 x2311) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2448 x2311) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x403 (uninterp_frac (* x2448 x2311) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2448 x2311) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1420 32 (uninterp_frac (* x2448 x2311) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2448 x2311) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1701 x470 (uninterp_frac (* x2448 x2311) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2448 x2311) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x174 x1717 (uninterp_frac (* x2448 x2311) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2448 x2311) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1813 32 (uninterp_frac (* x2448 x2311) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2448 x2311) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1870 x540 (uninterp_frac (* x2448 x2311) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2448 x2311) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2020 x607 (uninterp_frac (* x2448 x2311) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2448 x2311) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x219 x2872 (uninterp_frac (* x2448 x2311) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2448 x2311) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2448 x2311 (uninterp_frac (* x2448 x2311) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2448 x2311) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x25 x1511 (uninterp_frac (* x2448 x2311) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2448 x2311) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2629 x1816 (uninterp_frac (* x2448 x2311) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2448 x2311) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2670 32 (uninterp_frac (* x2448 x2311) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2448 x2311) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2727 x2303 (uninterp_frac (* x2448 x2311) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2448 x2311) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2877 x1739 (uninterp_frac (* x2448 x2311) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2448 x2311) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2932 x709 (uninterp_frac (* x2448 x2311) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2448 x2311) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2962 32 (uninterp_frac (* x2448 x2311) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2448 x2311) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3115 x738 (uninterp_frac (* x2448 x2311) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2448 x2311) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x403 32 (uninterp_frac (* x2448 x2311) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2448 x2311) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x408 x2710 (uninterp_frac (* x2448 x2311) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2448 x2311) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x540 x852 (uninterp_frac (* x2448 x2311) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2448 x2311) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x679 x985 (uninterp_frac (* x2448 x2311) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (* x25 x1511) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (* x25 x1511) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x1491 (uninterp_frac (* x25 x1511) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x25 x1511) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x2196 (uninterp_frac (* x25 x1511) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x25 x1511) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1365 (uninterp_frac (* x25 x1511) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x25 x1511) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1420 (uninterp_frac (* x25 x1511) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x25 x1511) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1813 (uninterp_frac (* x25 x1511) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x25 x1511) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2670 (uninterp_frac (* x25 x1511) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x25 x1511) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x403 (uninterp_frac (* x25 x1511) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x25 x1511) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1420 32 (uninterp_frac (* x25 x1511) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x25 x1511) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1701 x470 (uninterp_frac (* x25 x1511) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x25 x1511) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x174 x1717 (uninterp_frac (* x25 x1511) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x25 x1511) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1813 32 (uninterp_frac (* x25 x1511) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x25 x1511) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1870 x540 (uninterp_frac (* x25 x1511) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x25 x1511) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2020 x607 (uninterp_frac (* x25 x1511) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x25 x1511) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x219 x2872 (uninterp_frac (* x25 x1511) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x25 x1511) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2448 x2311 (uninterp_frac (* x25 x1511) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x25 x1511) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x25 x1511 (uninterp_frac (* x25 x1511) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x25 x1511) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2629 x1816 (uninterp_frac (* x25 x1511) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x25 x1511) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2670 32 (uninterp_frac (* x25 x1511) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x25 x1511) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2727 x2303 (uninterp_frac (* x25 x1511) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x25 x1511) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2877 x1739 (uninterp_frac (* x25 x1511) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x25 x1511) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2932 x709 (uninterp_frac (* x25 x1511) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x25 x1511) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2962 32 (uninterp_frac (* x25 x1511) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x25 x1511) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3115 x738 (uninterp_frac (* x25 x1511) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x25 x1511) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x403 32 (uninterp_frac (* x25 x1511) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x25 x1511) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x408 x2710 (uninterp_frac (* x25 x1511) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x25 x1511) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x540 x852 (uninterp_frac (* x25 x1511) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x25 x1511) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x679 x985 (uninterp_frac (* x25 x1511) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (* x2629 x1816) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (* x2629 x1816) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x1491 (uninterp_frac (* x2629 x1816) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2629 x1816) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x2196 (uninterp_frac (* x2629 x1816) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2629 x1816) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1365 (uninterp_frac (* x2629 x1816) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2629 x1816) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1420 (uninterp_frac (* x2629 x1816) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2629 x1816) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1813 (uninterp_frac (* x2629 x1816) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2629 x1816) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2670 (uninterp_frac (* x2629 x1816) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2629 x1816) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x403 (uninterp_frac (* x2629 x1816) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2629 x1816) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1420 32 (uninterp_frac (* x2629 x1816) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2629 x1816) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1701 x470 (uninterp_frac (* x2629 x1816) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2629 x1816) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x174 x1717 (uninterp_frac (* x2629 x1816) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2629 x1816) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1813 32 (uninterp_frac (* x2629 x1816) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2629 x1816) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1870 x540 (uninterp_frac (* x2629 x1816) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2629 x1816) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2020 x607 (uninterp_frac (* x2629 x1816) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2629 x1816) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x219 x2872 (uninterp_frac (* x2629 x1816) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2629 x1816) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2448 x2311 (uninterp_frac (* x2629 x1816) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2629 x1816) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x25 x1511 (uninterp_frac (* x2629 x1816) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2629 x1816) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2629 x1816 (uninterp_frac (* x2629 x1816) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2629 x1816) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2670 32 (uninterp_frac (* x2629 x1816) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2629 x1816) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2727 x2303 (uninterp_frac (* x2629 x1816) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2629 x1816) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2877 x1739 (uninterp_frac (* x2629 x1816) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2629 x1816) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2932 x709 (uninterp_frac (* x2629 x1816) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2629 x1816) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2962 32 (uninterp_frac (* x2629 x1816) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2629 x1816) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3115 x738 (uninterp_frac (* x2629 x1816) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2629 x1816) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x403 32 (uninterp_frac (* x2629 x1816) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2629 x1816) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x408 x2710 (uninterp_frac (* x2629 x1816) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2629 x1816) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x540 x852 (uninterp_frac (* x2629 x1816) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2629 x1816) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x679 x985 (uninterp_frac (* x2629 x1816) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (* x2670 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (* x2670 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x1491 (uninterp_frac (* x2670 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2670 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x2196 (uninterp_frac (* x2670 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2670 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1365 (uninterp_frac (* x2670 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2670 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1420 (uninterp_frac (* x2670 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2670 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1813 (uninterp_frac (* x2670 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2670 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2670 (uninterp_frac (* x2670 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2670 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x403 (uninterp_frac (* x2670 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2670 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1420 32 (uninterp_frac (* x2670 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2670 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1701 x470 (uninterp_frac (* x2670 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2670 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x174 x1717 (uninterp_frac (* x2670 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2670 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1813 32 (uninterp_frac (* x2670 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2670 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1870 x540 (uninterp_frac (* x2670 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2670 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2020 x607 (uninterp_frac (* x2670 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2670 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x219 x2872 (uninterp_frac (* x2670 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2670 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2448 x2311 (uninterp_frac (* x2670 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2670 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x25 x1511 (uninterp_frac (* x2670 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2670 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2629 x1816 (uninterp_frac (* x2670 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2670 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2670 32 (uninterp_frac (* x2670 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2670 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2727 x2303 (uninterp_frac (* x2670 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2670 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2877 x1739 (uninterp_frac (* x2670 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2670 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2932 x709 (uninterp_frac (* x2670 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2670 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2962 32 (uninterp_frac (* x2670 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2670 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3115 x738 (uninterp_frac (* x2670 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2670 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x403 32 (uninterp_frac (* x2670 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2670 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x408 x2710 (uninterp_frac (* x2670 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2670 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x540 x852 (uninterp_frac (* x2670 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2670 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x679 x985 (uninterp_frac (* x2670 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (* x2727 x2303) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (* x2727 x2303) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x1491 (uninterp_frac (* x2727 x2303) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2727 x2303) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x2196 (uninterp_frac (* x2727 x2303) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2727 x2303) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1365 (uninterp_frac (* x2727 x2303) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2727 x2303) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1420 (uninterp_frac (* x2727 x2303) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2727 x2303) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1813 (uninterp_frac (* x2727 x2303) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2727 x2303) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2670 (uninterp_frac (* x2727 x2303) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2727 x2303) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x403 (uninterp_frac (* x2727 x2303) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2727 x2303) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1420 32 (uninterp_frac (* x2727 x2303) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2727 x2303) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1701 x470 (uninterp_frac (* x2727 x2303) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2727 x2303) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x174 x1717 (uninterp_frac (* x2727 x2303) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2727 x2303) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1813 32 (uninterp_frac (* x2727 x2303) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2727 x2303) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1870 x540 (uninterp_frac (* x2727 x2303) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2727 x2303) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2020 x607 (uninterp_frac (* x2727 x2303) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2727 x2303) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x219 x2872 (uninterp_frac (* x2727 x2303) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2727 x2303) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2448 x2311 (uninterp_frac (* x2727 x2303) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2727 x2303) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x25 x1511 (uninterp_frac (* x2727 x2303) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2727 x2303) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2629 x1816 (uninterp_frac (* x2727 x2303) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2727 x2303) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2670 32 (uninterp_frac (* x2727 x2303) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2727 x2303) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2727 x2303 (uninterp_frac (* x2727 x2303) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2727 x2303) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2877 x1739 (uninterp_frac (* x2727 x2303) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2727 x2303) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2932 x709 (uninterp_frac (* x2727 x2303) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2727 x2303) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2962 32 (uninterp_frac (* x2727 x2303) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2727 x2303) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3115 x738 (uninterp_frac (* x2727 x2303) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2727 x2303) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x403 32 (uninterp_frac (* x2727 x2303) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2727 x2303) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x408 x2710 (uninterp_frac (* x2727 x2303) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2727 x2303) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x540 x852 (uninterp_frac (* x2727 x2303) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2727 x2303) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x679 x985 (uninterp_frac (* x2727 x2303) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (* x2877 x1739) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (* x2877 x1739) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x1491 (uninterp_frac (* x2877 x1739) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2877 x1739) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x2196 (uninterp_frac (* x2877 x1739) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2877 x1739) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1365 (uninterp_frac (* x2877 x1739) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2877 x1739) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1420 (uninterp_frac (* x2877 x1739) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2877 x1739) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1813 (uninterp_frac (* x2877 x1739) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2877 x1739) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2670 (uninterp_frac (* x2877 x1739) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2877 x1739) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x403 (uninterp_frac (* x2877 x1739) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2877 x1739) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1420 32 (uninterp_frac (* x2877 x1739) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2877 x1739) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1701 x470 (uninterp_frac (* x2877 x1739) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2877 x1739) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x174 x1717 (uninterp_frac (* x2877 x1739) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2877 x1739) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1813 32 (uninterp_frac (* x2877 x1739) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2877 x1739) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1870 x540 (uninterp_frac (* x2877 x1739) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2877 x1739) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2020 x607 (uninterp_frac (* x2877 x1739) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2877 x1739) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x219 x2872 (uninterp_frac (* x2877 x1739) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2877 x1739) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2448 x2311 (uninterp_frac (* x2877 x1739) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2877 x1739) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x25 x1511 (uninterp_frac (* x2877 x1739) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2877 x1739) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2629 x1816 (uninterp_frac (* x2877 x1739) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2877 x1739) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2670 32 (uninterp_frac (* x2877 x1739) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2877 x1739) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2727 x2303 (uninterp_frac (* x2877 x1739) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2877 x1739) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2877 x1739 (uninterp_frac (* x2877 x1739) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2877 x1739) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2932 x709 (uninterp_frac (* x2877 x1739) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2877 x1739) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2962 32 (uninterp_frac (* x2877 x1739) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2877 x1739) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3115 x738 (uninterp_frac (* x2877 x1739) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2877 x1739) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x403 32 (uninterp_frac (* x2877 x1739) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2877 x1739) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x408 x2710 (uninterp_frac (* x2877 x1739) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2877 x1739) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x540 x852 (uninterp_frac (* x2877 x1739) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2877 x1739) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x679 x985 (uninterp_frac (* x2877 x1739) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (* x2932 x709) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (* x2932 x709) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x1491 (uninterp_frac (* x2932 x709) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2932 x709) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x2196 (uninterp_frac (* x2932 x709) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2932 x709) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1365 (uninterp_frac (* x2932 x709) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2932 x709) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1420 (uninterp_frac (* x2932 x709) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2932 x709) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1813 (uninterp_frac (* x2932 x709) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2932 x709) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2670 (uninterp_frac (* x2932 x709) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2932 x709) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x403 (uninterp_frac (* x2932 x709) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2932 x709) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1420 32 (uninterp_frac (* x2932 x709) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2932 x709) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1701 x470 (uninterp_frac (* x2932 x709) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2932 x709) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x174 x1717 (uninterp_frac (* x2932 x709) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2932 x709) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1813 32 (uninterp_frac (* x2932 x709) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2932 x709) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1870 x540 (uninterp_frac (* x2932 x709) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2932 x709) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2020 x607 (uninterp_frac (* x2932 x709) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2932 x709) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x219 x2872 (uninterp_frac (* x2932 x709) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2932 x709) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2448 x2311 (uninterp_frac (* x2932 x709) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2932 x709) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x25 x1511 (uninterp_frac (* x2932 x709) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2932 x709) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2629 x1816 (uninterp_frac (* x2932 x709) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2932 x709) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2670 32 (uninterp_frac (* x2932 x709) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2932 x709) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2727 x2303 (uninterp_frac (* x2932 x709) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2932 x709) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2877 x1739 (uninterp_frac (* x2932 x709) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2932 x709) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2932 x709 (uninterp_frac (* x2932 x709) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2932 x709) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2962 32 (uninterp_frac (* x2932 x709) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2932 x709) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3115 x738 (uninterp_frac (* x2932 x709) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2932 x709) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x403 32 (uninterp_frac (* x2932 x709) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2932 x709) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x408 x2710 (uninterp_frac (* x2932 x709) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2932 x709) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x540 x852 (uninterp_frac (* x2932 x709) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2932 x709) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x679 x985 (uninterp_frac (* x2932 x709) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (* x2962 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (* x2962 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x1491 (uninterp_frac (* x2962 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2962 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x2196 (uninterp_frac (* x2962 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2962 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1365 (uninterp_frac (* x2962 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2962 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1420 (uninterp_frac (* x2962 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2962 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1813 (uninterp_frac (* x2962 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2962 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2670 (uninterp_frac (* x2962 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2962 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x403 (uninterp_frac (* x2962 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2962 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1420 32 (uninterp_frac (* x2962 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2962 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1701 x470 (uninterp_frac (* x2962 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2962 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x174 x1717 (uninterp_frac (* x2962 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2962 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1813 32 (uninterp_frac (* x2962 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2962 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1870 x540 (uninterp_frac (* x2962 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2962 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2020 x607 (uninterp_frac (* x2962 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2962 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x219 x2872 (uninterp_frac (* x2962 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2962 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2448 x2311 (uninterp_frac (* x2962 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2962 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x25 x1511 (uninterp_frac (* x2962 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2962 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2629 x1816 (uninterp_frac (* x2962 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2962 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2670 32 (uninterp_frac (* x2962 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2962 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2727 x2303 (uninterp_frac (* x2962 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2962 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2877 x1739 (uninterp_frac (* x2962 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2962 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2932 x709 (uninterp_frac (* x2962 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2962 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2962 32 (uninterp_frac (* x2962 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2962 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3115 x738 (uninterp_frac (* x2962 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2962 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x403 32 (uninterp_frac (* x2962 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2962 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x408 x2710 (uninterp_frac (* x2962 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2962 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x540 x852 (uninterp_frac (* x2962 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2962 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x679 x985 (uninterp_frac (* x2962 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (* x3115 x738) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (* x3115 x738) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x1491 (uninterp_frac (* x3115 x738) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3115 x738) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x2196 (uninterp_frac (* x3115 x738) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3115 x738) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1365 (uninterp_frac (* x3115 x738) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3115 x738) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1420 (uninterp_frac (* x3115 x738) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3115 x738) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1813 (uninterp_frac (* x3115 x738) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3115 x738) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2670 (uninterp_frac (* x3115 x738) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3115 x738) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x403 (uninterp_frac (* x3115 x738) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3115 x738) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1420 32 (uninterp_frac (* x3115 x738) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3115 x738) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1701 x470 (uninterp_frac (* x3115 x738) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3115 x738) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x174 x1717 (uninterp_frac (* x3115 x738) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3115 x738) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1813 32 (uninterp_frac (* x3115 x738) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3115 x738) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1870 x540 (uninterp_frac (* x3115 x738) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3115 x738) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2020 x607 (uninterp_frac (* x3115 x738) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3115 x738) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x219 x2872 (uninterp_frac (* x3115 x738) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3115 x738) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2448 x2311 (uninterp_frac (* x3115 x738) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3115 x738) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x25 x1511 (uninterp_frac (* x3115 x738) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3115 x738) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2629 x1816 (uninterp_frac (* x3115 x738) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3115 x738) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2670 32 (uninterp_frac (* x3115 x738) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3115 x738) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2727 x2303 (uninterp_frac (* x3115 x738) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3115 x738) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2877 x1739 (uninterp_frac (* x3115 x738) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3115 x738) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2932 x709 (uninterp_frac (* x3115 x738) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3115 x738) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2962 32 (uninterp_frac (* x3115 x738) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3115 x738) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3115 x738 (uninterp_frac (* x3115 x738) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3115 x738) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x403 32 (uninterp_frac (* x3115 x738) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3115 x738) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x408 x2710 (uninterp_frac (* x3115 x738) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3115 x738) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x540 x852 (uninterp_frac (* x3115 x738) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3115 x738) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x679 x985 (uninterp_frac (* x3115 x738) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (* x403 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (* x403 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x1491 (uninterp_frac (* x403 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x403 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x2196 (uninterp_frac (* x403 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x403 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1365 (uninterp_frac (* x403 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x403 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1420 (uninterp_frac (* x403 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x403 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1813 (uninterp_frac (* x403 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x403 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2670 (uninterp_frac (* x403 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x403 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x403 (uninterp_frac (* x403 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x403 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1420 32 (uninterp_frac (* x403 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x403 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1701 x470 (uninterp_frac (* x403 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x403 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x174 x1717 (uninterp_frac (* x403 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x403 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1813 32 (uninterp_frac (* x403 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x403 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1870 x540 (uninterp_frac (* x403 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x403 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2020 x607 (uninterp_frac (* x403 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x403 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x219 x2872 (uninterp_frac (* x403 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x403 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2448 x2311 (uninterp_frac (* x403 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x403 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x25 x1511 (uninterp_frac (* x403 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x403 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2629 x1816 (uninterp_frac (* x403 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x403 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2670 32 (uninterp_frac (* x403 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x403 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2727 x2303 (uninterp_frac (* x403 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x403 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2877 x1739 (uninterp_frac (* x403 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x403 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2932 x709 (uninterp_frac (* x403 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x403 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2962 32 (uninterp_frac (* x403 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x403 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3115 x738 (uninterp_frac (* x403 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x403 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x403 32 (uninterp_frac (* x403 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x403 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x408 x2710 (uninterp_frac (* x403 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x403 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x540 x852 (uninterp_frac (* x403 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x403 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x679 x985 (uninterp_frac (* x403 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (* x408 x2710) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (* x408 x2710) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x1491 (uninterp_frac (* x408 x2710) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x408 x2710) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x2196 (uninterp_frac (* x408 x2710) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x408 x2710) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1365 (uninterp_frac (* x408 x2710) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x408 x2710) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1420 (uninterp_frac (* x408 x2710) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x408 x2710) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1813 (uninterp_frac (* x408 x2710) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x408 x2710) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2670 (uninterp_frac (* x408 x2710) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x408 x2710) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x403 (uninterp_frac (* x408 x2710) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x408 x2710) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1420 32 (uninterp_frac (* x408 x2710) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x408 x2710) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1701 x470 (uninterp_frac (* x408 x2710) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x408 x2710) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x174 x1717 (uninterp_frac (* x408 x2710) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x408 x2710) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1813 32 (uninterp_frac (* x408 x2710) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x408 x2710) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1870 x540 (uninterp_frac (* x408 x2710) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x408 x2710) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2020 x607 (uninterp_frac (* x408 x2710) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x408 x2710) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x219 x2872 (uninterp_frac (* x408 x2710) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x408 x2710) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2448 x2311 (uninterp_frac (* x408 x2710) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x408 x2710) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x25 x1511 (uninterp_frac (* x408 x2710) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x408 x2710) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2629 x1816 (uninterp_frac (* x408 x2710) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x408 x2710) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2670 32 (uninterp_frac (* x408 x2710) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x408 x2710) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2727 x2303 (uninterp_frac (* x408 x2710) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x408 x2710) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2877 x1739 (uninterp_frac (* x408 x2710) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x408 x2710) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2932 x709 (uninterp_frac (* x408 x2710) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x408 x2710) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2962 32 (uninterp_frac (* x408 x2710) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x408 x2710) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3115 x738 (uninterp_frac (* x408 x2710) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x408 x2710) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x403 32 (uninterp_frac (* x408 x2710) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x408 x2710) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x408 x2710 (uninterp_frac (* x408 x2710) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x408 x2710) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x540 x852 (uninterp_frac (* x408 x2710) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x408 x2710) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x679 x985 (uninterp_frac (* x408 x2710) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (* x540 x852) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (* x540 x852) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x1491 (uninterp_frac (* x540 x852) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x540 x852) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x2196 (uninterp_frac (* x540 x852) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x540 x852) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1365 (uninterp_frac (* x540 x852) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x540 x852) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1420 (uninterp_frac (* x540 x852) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x540 x852) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1813 (uninterp_frac (* x540 x852) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x540 x852) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2670 (uninterp_frac (* x540 x852) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x540 x852) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x403 (uninterp_frac (* x540 x852) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x540 x852) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1420 32 (uninterp_frac (* x540 x852) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x540 x852) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1701 x470 (uninterp_frac (* x540 x852) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x540 x852) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x174 x1717 (uninterp_frac (* x540 x852) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x540 x852) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1813 32 (uninterp_frac (* x540 x852) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x540 x852) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1870 x540 (uninterp_frac (* x540 x852) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x540 x852) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2020 x607 (uninterp_frac (* x540 x852) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x540 x852) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x219 x2872 (uninterp_frac (* x540 x852) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x540 x852) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2448 x2311 (uninterp_frac (* x540 x852) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x540 x852) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x25 x1511 (uninterp_frac (* x540 x852) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x540 x852) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2629 x1816 (uninterp_frac (* x540 x852) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x540 x852) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2670 32 (uninterp_frac (* x540 x852) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x540 x852) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2727 x2303 (uninterp_frac (* x540 x852) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x540 x852) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2877 x1739 (uninterp_frac (* x540 x852) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x540 x852) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2932 x709 (uninterp_frac (* x540 x852) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x540 x852) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2962 32 (uninterp_frac (* x540 x852) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x540 x852) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3115 x738 (uninterp_frac (* x540 x852) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x540 x852) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x403 32 (uninterp_frac (* x540 x852) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x540 x852) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x408 x2710 (uninterp_frac (* x540 x852) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x540 x852) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x540 x852 (uninterp_frac (* x540 x852) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x540 x852) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x679 x985 (uninterp_frac (* x540 x852) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (* x679 x985) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (* x679 x985) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x1491 (uninterp_frac (* x679 x985) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x679 x985) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x2196 (uninterp_frac (* x679 x985) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x679 x985) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1365 (uninterp_frac (* x679 x985) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x679 x985) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1420 (uninterp_frac (* x679 x985) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x679 x985) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1813 (uninterp_frac (* x679 x985) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x679 x985) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2670 (uninterp_frac (* x679 x985) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x679 x985) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x403 (uninterp_frac (* x679 x985) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x679 x985) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1420 32 (uninterp_frac (* x679 x985) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x679 x985) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1701 x470 (uninterp_frac (* x679 x985) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x679 x985) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x174 x1717 (uninterp_frac (* x679 x985) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x679 x985) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1813 32 (uninterp_frac (* x679 x985) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x679 x985) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1870 x540 (uninterp_frac (* x679 x985) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x679 x985) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2020 x607 (uninterp_frac (* x679 x985) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x679 x985) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x219 x2872 (uninterp_frac (* x679 x985) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x679 x985) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2448 x2311 (uninterp_frac (* x679 x985) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x679 x985) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x25 x1511 (uninterp_frac (* x679 x985) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x679 x985) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2629 x1816 (uninterp_frac (* x679 x985) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x679 x985) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2670 32 (uninterp_frac (* x679 x985) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x679 x985) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2727 x2303 (uninterp_frac (* x679 x985) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x679 x985) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2877 x1739 (uninterp_frac (* x679 x985) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x679 x985) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2932 x709 (uninterp_frac (* x679 x985) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x679 x985) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2962 32 (uninterp_frac (* x679 x985) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x679 x985) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3115 x738 (uninterp_frac (* x679 x985) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x679 x985) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x403 32 (uninterp_frac (* x679 x985) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x679 x985) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x408 x2710 (uninterp_frac (* x679 x985) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x679 x985) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x540 x852 (uninterp_frac (* x679 x985) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x679 x985) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x679 x985 (uninterp_frac (* x679 x985) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (- (x2709 x2250) (x2709 x2543)) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (- (x2709 x2250) (x2709 x2543)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x1491 (uninterp_frac (- (x2709 x2250) (x2709 x2543)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x2709 x2250) (x2709 x2543)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x2196 (uninterp_frac (- (x2709 x2250) (x2709 x2543)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x2709 x2250) (x2709 x2543)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1365 (uninterp_frac (- (x2709 x2250) (x2709 x2543)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x2709 x2250) (x2709 x2543)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1420 (uninterp_frac (- (x2709 x2250) (x2709 x2543)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x2709 x2250) (x2709 x2543)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1813 (uninterp_frac (- (x2709 x2250) (x2709 x2543)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x2709 x2250) (x2709 x2543)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2670 (uninterp_frac (- (x2709 x2250) (x2709 x2543)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x2709 x2250) (x2709 x2543)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x403 (uninterp_frac (- (x2709 x2250) (x2709 x2543)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x2709 x2250) (x2709 x2543)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1420 32 (uninterp_frac (- (x2709 x2250) (x2709 x2543)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x2709 x2250) (x2709 x2543)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1701 x470 (uninterp_frac (- (x2709 x2250) (x2709 x2543)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x2709 x2250) (x2709 x2543)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x174 x1717 (uninterp_frac (- (x2709 x2250) (x2709 x2543)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x2709 x2250) (x2709 x2543)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1813 32 (uninterp_frac (- (x2709 x2250) (x2709 x2543)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x2709 x2250) (x2709 x2543)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1870 x540 (uninterp_frac (- (x2709 x2250) (x2709 x2543)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x2709 x2250) (x2709 x2543)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2020 x607 (uninterp_frac (- (x2709 x2250) (x2709 x2543)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x2709 x2250) (x2709 x2543)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x219 x2872 (uninterp_frac (- (x2709 x2250) (x2709 x2543)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x2709 x2250) (x2709 x2543)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2448 x2311 (uninterp_frac (- (x2709 x2250) (x2709 x2543)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x2709 x2250) (x2709 x2543)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x25 x1511 (uninterp_frac (- (x2709 x2250) (x2709 x2543)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x2709 x2250) (x2709 x2543)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2629 x1816 (uninterp_frac (- (x2709 x2250) (x2709 x2543)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x2709 x2250) (x2709 x2543)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2670 32 (uninterp_frac (- (x2709 x2250) (x2709 x2543)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x2709 x2250) (x2709 x2543)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2727 x2303 (uninterp_frac (- (x2709 x2250) (x2709 x2543)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x2709 x2250) (x2709 x2543)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2877 x1739 (uninterp_frac (- (x2709 x2250) (x2709 x2543)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x2709 x2250) (x2709 x2543)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2932 x709 (uninterp_frac (- (x2709 x2250) (x2709 x2543)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x2709 x2250) (x2709 x2543)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2962 32 (uninterp_frac (- (x2709 x2250) (x2709 x2543)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x2709 x2250) (x2709 x2543)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3115 x738 (uninterp_frac (- (x2709 x2250) (x2709 x2543)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x2709 x2250) (x2709 x2543)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x403 32 (uninterp_frac (- (x2709 x2250) (x2709 x2543)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x2709 x2250) (x2709 x2543)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x408 x2710 (uninterp_frac (- (x2709 x2250) (x2709 x2543)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x2709 x2250) (x2709 x2543)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x540 x852 (uninterp_frac (- (x2709 x2250) (x2709 x2543)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x2709 x2250) (x2709 x2543)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x679 x985 (uninterp_frac (- (x2709 x2250) (x2709 x2543)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (- (x2709 x2612) (x2709 x3139)) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (- (x2709 x2612) (x2709 x3139)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x1491 (uninterp_frac (- (x2709 x2612) (x2709 x3139)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x2709 x2612) (x2709 x3139)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x2196 (uninterp_frac (- (x2709 x2612) (x2709 x3139)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x2709 x2612) (x2709 x3139)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1365 (uninterp_frac (- (x2709 x2612) (x2709 x3139)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x2709 x2612) (x2709 x3139)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1420 (uninterp_frac (- (x2709 x2612) (x2709 x3139)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x2709 x2612) (x2709 x3139)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x1813 (uninterp_frac (- (x2709 x2612) (x2709 x3139)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x2709 x2612) (x2709 x3139)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x2670 (uninterp_frac (- (x2709 x2612) (x2709 x3139)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x2709 x2612) (x2709 x3139)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x403 (uninterp_frac (- (x2709 x2612) (x2709 x3139)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x2709 x2612) (x2709 x3139)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1420 32 (uninterp_frac (- (x2709 x2612) (x2709 x3139)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x2709 x2612) (x2709 x3139)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1701 x470 (uninterp_frac (- (x2709 x2612) (x2709 x3139)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x2709 x2612) (x2709 x3139)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x174 x1717 (uninterp_frac (- (x2709 x2612) (x2709 x3139)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x2709 x2612) (x2709 x3139)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1813 32 (uninterp_frac (- (x2709 x2612) (x2709 x3139)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x2709 x2612) (x2709 x3139)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1870 x540 (uninterp_frac (- (x2709 x2612) (x2709 x3139)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x2709 x2612) (x2709 x3139)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2020 x607 (uninterp_frac (- (x2709 x2612) (x2709 x3139)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x2709 x2612) (x2709 x3139)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x219 x2872 (uninterp_frac (- (x2709 x2612) (x2709 x3139)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x2709 x2612) (x2709 x3139)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2448 x2311 (uninterp_frac (- (x2709 x2612) (x2709 x3139)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x2709 x2612) (x2709 x3139)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x25 x1511 (uninterp_frac (- (x2709 x2612) (x2709 x3139)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x2709 x2612) (x2709 x3139)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2629 x1816 (uninterp_frac (- (x2709 x2612) (x2709 x3139)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x2709 x2612) (x2709 x3139)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2670 32 (uninterp_frac (- (x2709 x2612) (x2709 x3139)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x2709 x2612) (x2709 x3139)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2727 x2303 (uninterp_frac (- (x2709 x2612) (x2709 x3139)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x2709 x2612) (x2709 x3139)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2877 x1739 (uninterp_frac (- (x2709 x2612) (x2709 x3139)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x2709 x2612) (x2709 x3139)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2932 x709 (uninterp_frac (- (x2709 x2612) (x2709 x3139)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x2709 x2612) (x2709 x3139)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2962 32 (uninterp_frac (- (x2709 x2612) (x2709 x3139)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x2709 x2612) (x2709 x3139)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3115 x738 (uninterp_frac (- (x2709 x2612) (x2709 x3139)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x2709 x2612) (x2709 x3139)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x403 32 (uninterp_frac (- (x2709 x2612) (x2709 x3139)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x2709 x2612) (x2709 x3139)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x408 x2710 (uninterp_frac (- (x2709 x2612) (x2709 x3139)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x2709 x2612) (x2709 x3139)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x540 x852 (uninterp_frac (- (x2709 x2612) (x2709 x3139)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (- (x2709 x2612) (x2709 x3139)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x679 x985 (uninterp_frac (- (x2709 x2612) (x2709 x3139)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (uninterp_mod (- (x2709 x2250) (x2709 x2543)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1))
(assert (axiom_frac_zero (uninterp_mod (- (x2709 x2250) (x2709 x2543)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 1000000000000000000 x1491 (uninterp_frac (uninterp_mod (- (x2709 x2250) (x2709 x2543)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- (x2709 x2250) (x2709 x2543)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 1000000000000000000 x2196 (uninterp_frac (uninterp_mod (- (x2709 x2250) (x2709 x2543)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- (x2709 x2250) (x2709 x2543)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 32 x1365 (uninterp_frac (uninterp_mod (- (x2709 x2250) (x2709 x2543)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- (x2709 x2250) (x2709 x2543)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 32 x1420 (uninterp_frac (uninterp_mod (- (x2709 x2250) (x2709 x2543)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- (x2709 x2250) (x2709 x2543)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 32 x1813 (uninterp_frac (uninterp_mod (- (x2709 x2250) (x2709 x2543)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- (x2709 x2250) (x2709 x2543)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 32 x2670 (uninterp_frac (uninterp_mod (- (x2709 x2250) (x2709 x2543)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- (x2709 x2250) (x2709 x2543)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 32 x403 (uninterp_frac (uninterp_mod (- (x2709 x2250) (x2709 x2543)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- (x2709 x2250) (x2709 x2543)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x1420 32 (uninterp_frac (uninterp_mod (- (x2709 x2250) (x2709 x2543)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- (x2709 x2250) (x2709 x2543)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x1701 x470 (uninterp_frac (uninterp_mod (- (x2709 x2250) (x2709 x2543)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- (x2709 x2250) (x2709 x2543)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x174 x1717 (uninterp_frac (uninterp_mod (- (x2709 x2250) (x2709 x2543)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- (x2709 x2250) (x2709 x2543)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x1813 32 (uninterp_frac (uninterp_mod (- (x2709 x2250) (x2709 x2543)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- (x2709 x2250) (x2709 x2543)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x1870 x540 (uninterp_frac (uninterp_mod (- (x2709 x2250) (x2709 x2543)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- (x2709 x2250) (x2709 x2543)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x2020 x607 (uninterp_frac (uninterp_mod (- (x2709 x2250) (x2709 x2543)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- (x2709 x2250) (x2709 x2543)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x219 x2872 (uninterp_frac (uninterp_mod (- (x2709 x2250) (x2709 x2543)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- (x2709 x2250) (x2709 x2543)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x2448 x2311 (uninterp_frac (uninterp_mod (- (x2709 x2250) (x2709 x2543)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- (x2709 x2250) (x2709 x2543)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x25 x1511 (uninterp_frac (uninterp_mod (- (x2709 x2250) (x2709 x2543)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- (x2709 x2250) (x2709 x2543)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x2629 x1816 (uninterp_frac (uninterp_mod (- (x2709 x2250) (x2709 x2543)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- (x2709 x2250) (x2709 x2543)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x2670 32 (uninterp_frac (uninterp_mod (- (x2709 x2250) (x2709 x2543)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- (x2709 x2250) (x2709 x2543)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x2727 x2303 (uninterp_frac (uninterp_mod (- (x2709 x2250) (x2709 x2543)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- (x2709 x2250) (x2709 x2543)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x2877 x1739 (uninterp_frac (uninterp_mod (- (x2709 x2250) (x2709 x2543)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- (x2709 x2250) (x2709 x2543)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x2932 x709 (uninterp_frac (uninterp_mod (- (x2709 x2250) (x2709 x2543)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- (x2709 x2250) (x2709 x2543)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x2962 32 (uninterp_frac (uninterp_mod (- (x2709 x2250) (x2709 x2543)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- (x2709 x2250) (x2709 x2543)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x3115 x738 (uninterp_frac (uninterp_mod (- (x2709 x2250) (x2709 x2543)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- (x2709 x2250) (x2709 x2543)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x403 32 (uninterp_frac (uninterp_mod (- (x2709 x2250) (x2709 x2543)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- (x2709 x2250) (x2709 x2543)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x408 x2710 (uninterp_frac (uninterp_mod (- (x2709 x2250) (x2709 x2543)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- (x2709 x2250) (x2709 x2543)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x540 x852 (uninterp_frac (uninterp_mod (- (x2709 x2250) (x2709 x2543)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- (x2709 x2250) (x2709 x2543)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x679 x985 (uninterp_frac (uninterp_mod (- (x2709 x2250) (x2709 x2543)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_bound (uninterp_mod (- (x2709 x2612) (x2709 x3139)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1))
(assert (axiom_frac_zero (uninterp_mod (- (x2709 x2612) (x2709 x3139)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 1000000000000000000 x1491 (uninterp_frac (uninterp_mod (- (x2709 x2612) (x2709 x3139)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- (x2709 x2612) (x2709 x3139)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 1000000000000000000 x2196 (uninterp_frac (uninterp_mod (- (x2709 x2612) (x2709 x3139)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- (x2709 x2612) (x2709 x3139)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 32 x1365 (uninterp_frac (uninterp_mod (- (x2709 x2612) (x2709 x3139)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- (x2709 x2612) (x2709 x3139)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 32 x1420 (uninterp_frac (uninterp_mod (- (x2709 x2612) (x2709 x3139)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- (x2709 x2612) (x2709 x3139)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 32 x1813 (uninterp_frac (uninterp_mod (- (x2709 x2612) (x2709 x3139)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- (x2709 x2612) (x2709 x3139)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 32 x2670 (uninterp_frac (uninterp_mod (- (x2709 x2612) (x2709 x3139)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- (x2709 x2612) (x2709 x3139)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 32 x403 (uninterp_frac (uninterp_mod (- (x2709 x2612) (x2709 x3139)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- (x2709 x2612) (x2709 x3139)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x1420 32 (uninterp_frac (uninterp_mod (- (x2709 x2612) (x2709 x3139)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- (x2709 x2612) (x2709 x3139)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x1701 x470 (uninterp_frac (uninterp_mod (- (x2709 x2612) (x2709 x3139)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- (x2709 x2612) (x2709 x3139)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x174 x1717 (uninterp_frac (uninterp_mod (- (x2709 x2612) (x2709 x3139)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- (x2709 x2612) (x2709 x3139)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x1813 32 (uninterp_frac (uninterp_mod (- (x2709 x2612) (x2709 x3139)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- (x2709 x2612) (x2709 x3139)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x1870 x540 (uninterp_frac (uninterp_mod (- (x2709 x2612) (x2709 x3139)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- (x2709 x2612) (x2709 x3139)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x2020 x607 (uninterp_frac (uninterp_mod (- (x2709 x2612) (x2709 x3139)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- (x2709 x2612) (x2709 x3139)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x219 x2872 (uninterp_frac (uninterp_mod (- (x2709 x2612) (x2709 x3139)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- (x2709 x2612) (x2709 x3139)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x2448 x2311 (uninterp_frac (uninterp_mod (- (x2709 x2612) (x2709 x3139)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- (x2709 x2612) (x2709 x3139)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x25 x1511 (uninterp_frac (uninterp_mod (- (x2709 x2612) (x2709 x3139)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- (x2709 x2612) (x2709 x3139)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x2629 x1816 (uninterp_frac (uninterp_mod (- (x2709 x2612) (x2709 x3139)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- (x2709 x2612) (x2709 x3139)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x2670 32 (uninterp_frac (uninterp_mod (- (x2709 x2612) (x2709 x3139)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- (x2709 x2612) (x2709 x3139)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x2727 x2303 (uninterp_frac (uninterp_mod (- (x2709 x2612) (x2709 x3139)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- (x2709 x2612) (x2709 x3139)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x2877 x1739 (uninterp_frac (uninterp_mod (- (x2709 x2612) (x2709 x3139)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- (x2709 x2612) (x2709 x3139)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x2932 x709 (uninterp_frac (uninterp_mod (- (x2709 x2612) (x2709 x3139)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- (x2709 x2612) (x2709 x3139)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x2962 32 (uninterp_frac (uninterp_mod (- (x2709 x2612) (x2709 x3139)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- (x2709 x2612) (x2709 x3139)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x3115 x738 (uninterp_frac (uninterp_mod (- (x2709 x2612) (x2709 x3139)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- (x2709 x2612) (x2709 x3139)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x403 32 (uninterp_frac (uninterp_mod (- (x2709 x2612) (x2709 x3139)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- (x2709 x2612) (x2709 x3139)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x408 x2710 (uninterp_frac (uninterp_mod (- (x2709 x2612) (x2709 x3139)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- (x2709 x2612) (x2709 x3139)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x540 x852 (uninterp_frac (uninterp_mod (- (x2709 x2612) (x2709 x3139)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_zero (uninterp_mod (- (x2709 x2612) (x2709 x3139)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1 x679 x985 (uninterp_frac (uninterp_mod (- (x2709 x2612) (x2709 x3139)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)))
(assert (axiom_frac_bound 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1491))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1491 1000000000000000000 x1491 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1491)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1491 1000000000000000000 x2196 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1491)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1491 32 x1365 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1491)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1491 32 x1420 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1491)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1491 32 x1813 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1491)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1491 32 x2670 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1491)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1491 32 x403 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1491)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1491 x1420 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1491)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1491 x1701 x470 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1491)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1491 x174 x1717 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1491)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1491 x1813 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1491)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1491 x1870 x540 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1491)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1491 x2020 x607 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1491)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1491 x219 x2872 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1491)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1491 x2448 x2311 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1491)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1491 x25 x1511 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1491)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1491 x2629 x1816 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1491)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1491 x2670 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1491)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1491 x2727 x2303 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1491)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1491 x2877 x1739 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1491)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1491 x2932 x709 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1491)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1491 x2962 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1491)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1491 x3115 x738 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1491)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1491 x403 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1491)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1491 x408 x2710 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1491)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1491 x540 x852 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1491)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1491 x679 x985 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1491)))
(assert (axiom_frac_bound 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1701))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1701 1000000000000000000 x1491 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1701)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1701 1000000000000000000 x2196 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1701)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1701 32 x1365 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1701)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1701 32 x1420 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1701)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1701 32 x1813 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1701)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1701 32 x2670 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1701)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1701 32 x403 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1701)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1701 x1420 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1701)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1701 x1701 x470 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1701)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1701 x174 x1717 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1701)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1701 x1813 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1701)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1701 x1870 x540 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1701)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1701 x2020 x607 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1701)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1701 x219 x2872 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1701)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1701 x2448 x2311 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1701)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1701 x25 x1511 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1701)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1701 x2629 x1816 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1701)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1701 x2670 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1701)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1701 x2727 x2303 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1701)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1701 x2877 x1739 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1701)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1701 x2932 x709 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1701)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1701 x2962 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1701)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1701 x3115 x738 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1701)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1701 x403 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1701)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1701 x408 x2710 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1701)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1701 x540 x852 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1701)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1701 x679 x985 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1701)))
(assert (axiom_frac_bound 115792089237316195423570985008687907853269984665640564039457584007913129639935 x174))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x174 1000000000000000000 x1491 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x174)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x174 1000000000000000000 x2196 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x174)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x174 32 x1365 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x174)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x174 32 x1420 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x174)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x174 32 x1813 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x174)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x174 32 x2670 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x174)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x174 32 x403 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x174)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x174 x1420 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x174)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x174 x1701 x470 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x174)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x174 x174 x1717 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x174)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x174 x1813 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x174)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x174 x1870 x540 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x174)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x174 x2020 x607 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x174)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x174 x219 x2872 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x174)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x174 x2448 x2311 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x174)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x174 x25 x1511 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x174)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x174 x2629 x1816 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x174)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x174 x2670 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x174)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x174 x2727 x2303 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x174)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x174 x2877 x1739 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x174)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x174 x2932 x709 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x174)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x174 x2962 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x174)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x174 x3115 x738 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x174)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x174 x403 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x174)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x174 x408 x2710 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x174)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x174 x540 x852 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x174)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x174 x679 x985 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x174)))
(assert (axiom_frac_bound 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2196))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2196 1000000000000000000 x1491 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2196)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2196 1000000000000000000 x2196 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2196)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2196 32 x1365 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2196)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2196 32 x1420 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2196)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2196 32 x1813 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2196)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2196 32 x2670 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2196)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2196 32 x403 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2196)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2196 x1420 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2196)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2196 x1701 x470 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2196)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2196 x174 x1717 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2196)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2196 x1813 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2196)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2196 x1870 x540 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2196)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2196 x2020 x607 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2196)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2196 x219 x2872 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2196)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2196 x2448 x2311 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2196)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2196 x25 x1511 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2196)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2196 x2629 x1816 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2196)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2196 x2670 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2196)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2196 x2727 x2303 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2196)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2196 x2877 x1739 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2196)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2196 x2932 x709 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2196)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2196 x2962 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2196)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2196 x3115 x738 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2196)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2196 x403 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2196)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2196 x408 x2710 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2196)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2196 x540 x852 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2196)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2196 x679 x985 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2196)))
(assert (axiom_frac_bound 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2311))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2311 1000000000000000000 x1491 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2311)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2311 1000000000000000000 x2196 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2311)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2311 32 x1365 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2311)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2311 32 x1420 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2311)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2311 32 x1813 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2311)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2311 32 x2670 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2311)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2311 32 x403 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2311)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2311 x1420 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2311)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2311 x1701 x470 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2311)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2311 x174 x1717 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2311)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2311 x1813 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2311)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2311 x1870 x540 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2311)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2311 x2020 x607 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2311)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2311 x219 x2872 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2311)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2311 x2448 x2311 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2311)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2311 x25 x1511 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2311)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2311 x2629 x1816 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2311)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2311 x2670 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2311)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2311 x2727 x2303 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2311)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2311 x2877 x1739 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2311)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2311 x2932 x709 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2311)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2311 x2962 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2311)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2311 x3115 x738 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2311)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2311 x403 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2311)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2311 x408 x2710 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2311)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2311 x540 x852 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2311)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2311 x679 x985 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2311)))
(assert (axiom_frac_bound 115792089237316195423570985008687907853269984665640564039457584007913129639935 x25))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x25 1000000000000000000 x1491 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x25)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x25 1000000000000000000 x2196 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x25)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x25 32 x1365 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x25)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x25 32 x1420 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x25)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x25 32 x1813 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x25)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x25 32 x2670 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x25)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x25 32 x403 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x25)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x25 x1420 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x25)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x25 x1701 x470 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x25)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x25 x174 x1717 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x25)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x25 x1813 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x25)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x25 x1870 x540 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x25)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x25 x2020 x607 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x25)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x25 x219 x2872 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x25)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x25 x2448 x2311 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x25)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x25 x25 x1511 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x25)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x25 x2629 x1816 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x25)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x25 x2670 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x25)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x25 x2727 x2303 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x25)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x25 x2877 x1739 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x25)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x25 x2932 x709 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x25)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x25 x2962 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x25)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x25 x3115 x738 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x25)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x25 x403 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x25)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x25 x408 x2710 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x25)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x25 x540 x852 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x25)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x25 x679 x985 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x25)))
(assert (axiom_frac_bound 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2629))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2629 1000000000000000000 x1491 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2629)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2629 1000000000000000000 x2196 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2629)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2629 32 x1365 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2629)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2629 32 x1420 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2629)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2629 32 x1813 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2629)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2629 32 x2670 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2629)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2629 32 x403 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2629)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2629 x1420 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2629)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2629 x1701 x470 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2629)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2629 x174 x1717 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2629)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2629 x1813 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2629)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2629 x1870 x540 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2629)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2629 x2020 x607 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2629)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2629 x219 x2872 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2629)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2629 x2448 x2311 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2629)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2629 x25 x1511 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2629)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2629 x2629 x1816 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2629)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2629 x2670 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2629)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2629 x2727 x2303 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2629)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2629 x2877 x1739 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2629)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2629 x2932 x709 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2629)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2629 x2962 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2629)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2629 x3115 x738 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2629)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2629 x403 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2629)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2629 x408 x2710 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2629)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2629 x540 x852 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2629)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2629 x679 x985 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2629)))
(assert (axiom_frac_bound 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2727))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2727 1000000000000000000 x1491 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2727)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2727 1000000000000000000 x2196 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2727)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2727 32 x1365 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2727)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2727 32 x1420 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2727)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2727 32 x1813 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2727)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2727 32 x2670 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2727)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2727 32 x403 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2727)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2727 x1420 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2727)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2727 x1701 x470 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2727)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2727 x174 x1717 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2727)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2727 x1813 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2727)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2727 x1870 x540 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2727)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2727 x2020 x607 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2727)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2727 x219 x2872 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2727)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2727 x2448 x2311 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2727)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2727 x25 x1511 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2727)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2727 x2629 x1816 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2727)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2727 x2670 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2727)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2727 x2727 x2303 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2727)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2727 x2877 x1739 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2727)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2727 x2932 x709 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2727)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2727 x2962 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2727)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2727 x3115 x738 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2727)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2727 x403 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2727)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2727 x408 x2710 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2727)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2727 x540 x852 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2727)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2727 x679 x985 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2727)))
(assert (axiom_frac_bound 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2872))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2872 1000000000000000000 x1491 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2872)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2872 1000000000000000000 x2196 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2872)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2872 32 x1365 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2872)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2872 32 x1420 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2872)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2872 32 x1813 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2872)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2872 32 x2670 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2872)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2872 32 x403 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2872)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2872 x1420 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2872)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2872 x1701 x470 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2872)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2872 x174 x1717 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2872)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2872 x1813 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2872)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2872 x1870 x540 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2872)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2872 x2020 x607 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2872)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2872 x219 x2872 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2872)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2872 x2448 x2311 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2872)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2872 x25 x1511 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2872)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2872 x2629 x1816 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2872)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2872 x2670 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2872)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2872 x2727 x2303 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2872)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2872 x2877 x1739 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2872)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2872 x2932 x709 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2872)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2872 x2962 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2872)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2872 x3115 x738 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2872)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2872 x403 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2872)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2872 x408 x2710 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2872)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2872 x540 x852 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2872)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2872 x679 x985 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2872)))
(assert (axiom_frac_bound 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2877))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2877 1000000000000000000 x1491 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2877)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2877 1000000000000000000 x2196 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2877)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2877 32 x1365 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2877)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2877 32 x1420 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2877)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2877 32 x1813 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2877)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2877 32 x2670 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2877)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2877 32 x403 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2877)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2877 x1420 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2877)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2877 x1701 x470 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2877)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2877 x174 x1717 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2877)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2877 x1813 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2877)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2877 x1870 x540 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2877)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2877 x2020 x607 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2877)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2877 x219 x2872 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2877)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2877 x2448 x2311 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2877)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2877 x25 x1511 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2877)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2877 x2629 x1816 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2877)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2877 x2670 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2877)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2877 x2727 x2303 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2877)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2877 x2877 x1739 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2877)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2877 x2932 x709 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2877)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2877 x2962 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2877)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2877 x3115 x738 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2877)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2877 x403 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2877)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2877 x408 x2710 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2877)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2877 x540 x852 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2877)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2877 x679 x985 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2877)))
(assert (axiom_frac_bound 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2932))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2932 1000000000000000000 x1491 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2932)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2932 1000000000000000000 x2196 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2932)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2932 32 x1365 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2932)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2932 32 x1420 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2932)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2932 32 x1813 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2932)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2932 32 x2670 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2932)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2932 32 x403 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2932)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2932 x1420 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2932)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2932 x1701 x470 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2932)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2932 x174 x1717 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2932)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2932 x1813 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2932)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2932 x1870 x540 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2932)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2932 x2020 x607 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2932)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2932 x219 x2872 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2932)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2932 x2448 x2311 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2932)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2932 x25 x1511 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2932)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2932 x2629 x1816 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2932)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2932 x2670 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2932)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2932 x2727 x2303 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2932)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2932 x2877 x1739 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2932)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2932 x2932 x709 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2932)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2932 x2962 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2932)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2932 x3115 x738 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2932)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2932 x403 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2932)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2932 x408 x2710 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2932)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2932 x540 x852 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2932)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2932 x679 x985 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2932)))
(assert (axiom_frac_bound 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3115))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3115 1000000000000000000 x1491 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3115)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3115 1000000000000000000 x2196 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3115)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3115 32 x1365 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3115)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3115 32 x1420 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3115)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3115 32 x1813 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3115)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3115 32 x2670 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3115)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3115 32 x403 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3115)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3115 x1420 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3115)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3115 x1701 x470 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3115)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3115 x174 x1717 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3115)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3115 x1813 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3115)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3115 x1870 x540 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3115)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3115 x2020 x607 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3115)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3115 x219 x2872 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3115)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3115 x2448 x2311 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3115)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3115 x25 x1511 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3115)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3115 x2629 x1816 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3115)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3115 x2670 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3115)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3115 x2727 x2303 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3115)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3115 x2877 x1739 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3115)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3115 x2932 x709 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3115)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3115 x2962 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3115)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3115 x3115 x738 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3115)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3115 x403 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3115)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3115 x408 x2710 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3115)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3115 x540 x852 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3115)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3115 x679 x985 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3115)))
(assert (axiom_frac_bound 115792089237316195423570985008687907853269984665640564039457584007913129639935 x408))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x408 1000000000000000000 x1491 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x408)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x408 1000000000000000000 x2196 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x408)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x408 32 x1365 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x408)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x408 32 x1420 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x408)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x408 32 x1813 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x408)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x408 32 x2670 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x408)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x408 32 x403 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x408)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x408 x1420 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x408)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x408 x1701 x470 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x408)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x408 x174 x1717 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x408)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x408 x1813 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x408)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x408 x1870 x540 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x408)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x408 x2020 x607 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x408)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x408 x219 x2872 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x408)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x408 x2448 x2311 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x408)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x408 x25 x1511 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x408)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x408 x2629 x1816 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x408)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x408 x2670 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x408)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x408 x2727 x2303 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x408)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x408 x2877 x1739 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x408)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x408 x2932 x709 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x408)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x408 x2962 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x408)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x408 x3115 x738 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x408)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x408 x403 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x408)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x408 x408 x2710 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x408)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x408 x540 x852 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x408)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x408 x679 x985 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x408)))
(assert (axiom_frac_bound 115792089237316195423570985008687907853269984665640564039457584007913129639935 x540))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x540 1000000000000000000 x1491 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x540)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x540 1000000000000000000 x2196 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x540)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x540 32 x1365 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x540)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x540 32 x1420 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x540)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x540 32 x1813 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x540)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x540 32 x2670 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x540)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x540 32 x403 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x540)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x540 x1420 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x540)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x540 x1701 x470 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x540)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x540 x174 x1717 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x540)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x540 x1813 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x540)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x540 x1870 x540 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x540)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x540 x2020 x607 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x540)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x540 x219 x2872 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x540)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x540 x2448 x2311 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x540)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x540 x25 x1511 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x540)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x540 x2629 x1816 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x540)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x540 x2670 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x540)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x540 x2727 x2303 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x540)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x540 x2877 x1739 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x540)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x540 x2932 x709 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x540)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x540 x2962 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x540)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x540 x3115 x738 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x540)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x540 x403 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x540)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x540 x408 x2710 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x540)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x540 x540 x852 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x540)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x540 x679 x985 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x540)))
(assert (axiom_frac_bound 115792089237316195423570985008687907853269984665640564039457584007913129639935 x607))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x607 1000000000000000000 x1491 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x607)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x607 1000000000000000000 x2196 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x607)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x607 32 x1365 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x607)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x607 32 x1420 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x607)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x607 32 x1813 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x607)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x607 32 x2670 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x607)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x607 32 x403 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x607)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x607 x1420 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x607)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x607 x1701 x470 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x607)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x607 x174 x1717 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x607)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x607 x1813 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x607)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x607 x1870 x540 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x607)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x607 x2020 x607 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x607)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x607 x219 x2872 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x607)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x607 x2448 x2311 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x607)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x607 x25 x1511 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x607)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x607 x2629 x1816 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x607)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x607 x2670 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x607)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x607 x2727 x2303 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x607)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x607 x2877 x1739 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x607)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x607 x2932 x709 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x607)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x607 x2962 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x607)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x607 x3115 x738 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x607)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x607 x403 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x607)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x607 x408 x2710 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x607)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x607 x540 x852 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x607)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x607 x679 x985 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x607)))
(assert (axiom_frac_bound 115792089237316195423570985008687907853269984665640564039457584007913129639935 x679))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x679 1000000000000000000 x1491 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x679)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x679 1000000000000000000 x2196 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x679)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x679 32 x1365 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x679)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x679 32 x1420 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x679)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x679 32 x1813 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x679)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x679 32 x2670 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x679)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x679 32 x403 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x679)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x679 x1420 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x679)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x679 x1701 x470 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x679)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x679 x174 x1717 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x679)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x679 x1813 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x679)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x679 x1870 x540 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x679)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x679 x2020 x607 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x679)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x679 x219 x2872 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x679)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x679 x2448 x2311 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x679)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x679 x25 x1511 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x679)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x679 x2629 x1816 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x679)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x679 x2670 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x679)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x679 x2727 x2303 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x679)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x679 x2877 x1739 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x679)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x679 x2932 x709 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x679)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x679 x2962 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x679)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x679 x3115 x738 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x679)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x679 x403 32 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x679)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x679 x408 x2710 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x679)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x679 x540 x852 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x679)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x679 x679 x985 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x679)))
(assert (axiom_frac_bound x1136 1000000000000000000))
(assert (axiom_frac_zero x1136 1000000000000000000 1000000000000000000 x1491 (uninterp_frac x1136 1000000000000000000)))
(assert (axiom_frac_zero x1136 1000000000000000000 1000000000000000000 x2196 (uninterp_frac x1136 1000000000000000000)))
(assert (axiom_frac_zero x1136 1000000000000000000 32 x1365 (uninterp_frac x1136 1000000000000000000)))
(assert (axiom_frac_zero x1136 1000000000000000000 32 x1420 (uninterp_frac x1136 1000000000000000000)))
(assert (axiom_frac_zero x1136 1000000000000000000 32 x1813 (uninterp_frac x1136 1000000000000000000)))
(assert (axiom_frac_zero x1136 1000000000000000000 32 x2670 (uninterp_frac x1136 1000000000000000000)))
(assert (axiom_frac_zero x1136 1000000000000000000 32 x403 (uninterp_frac x1136 1000000000000000000)))
(assert (axiom_frac_zero x1136 1000000000000000000 x1420 32 (uninterp_frac x1136 1000000000000000000)))
(assert (axiom_frac_zero x1136 1000000000000000000 x1701 x470 (uninterp_frac x1136 1000000000000000000)))
(assert (axiom_frac_zero x1136 1000000000000000000 x174 x1717 (uninterp_frac x1136 1000000000000000000)))
(assert (axiom_frac_zero x1136 1000000000000000000 x1813 32 (uninterp_frac x1136 1000000000000000000)))
(assert (axiom_frac_zero x1136 1000000000000000000 x1870 x540 (uninterp_frac x1136 1000000000000000000)))
(assert (axiom_frac_zero x1136 1000000000000000000 x2020 x607 (uninterp_frac x1136 1000000000000000000)))
(assert (axiom_frac_zero x1136 1000000000000000000 x219 x2872 (uninterp_frac x1136 1000000000000000000)))
(assert (axiom_frac_zero x1136 1000000000000000000 x2448 x2311 (uninterp_frac x1136 1000000000000000000)))
(assert (axiom_frac_zero x1136 1000000000000000000 x25 x1511 (uninterp_frac x1136 1000000000000000000)))
(assert (axiom_frac_zero x1136 1000000000000000000 x2629 x1816 (uninterp_frac x1136 1000000000000000000)))
(assert (axiom_frac_zero x1136 1000000000000000000 x2670 32 (uninterp_frac x1136 1000000000000000000)))
(assert (axiom_frac_zero x1136 1000000000000000000 x2727 x2303 (uninterp_frac x1136 1000000000000000000)))
(assert (axiom_frac_zero x1136 1000000000000000000 x2877 x1739 (uninterp_frac x1136 1000000000000000000)))
(assert (axiom_frac_zero x1136 1000000000000000000 x2932 x709 (uninterp_frac x1136 1000000000000000000)))
(assert (axiom_frac_zero x1136 1000000000000000000 x2962 32 (uninterp_frac x1136 1000000000000000000)))
(assert (axiom_frac_zero x1136 1000000000000000000 x3115 x738 (uninterp_frac x1136 1000000000000000000)))
(assert (axiom_frac_zero x1136 1000000000000000000 x403 32 (uninterp_frac x1136 1000000000000000000)))
(assert (axiom_frac_zero x1136 1000000000000000000 x408 x2710 (uninterp_frac x1136 1000000000000000000)))
(assert (axiom_frac_zero x1136 1000000000000000000 x540 x852 (uninterp_frac x1136 1000000000000000000)))
(assert (axiom_frac_zero x1136 1000000000000000000 x679 x985 (uninterp_frac x1136 1000000000000000000)))
(assert (axiom_frac_bound x1444 x2710))
(assert (axiom_frac_zero x1444 x2710 1000000000000000000 x1491 (uninterp_frac x1444 x2710)))
(assert (axiom_frac_zero x1444 x2710 1000000000000000000 x2196 (uninterp_frac x1444 x2710)))
(assert (axiom_frac_zero x1444 x2710 32 x1365 (uninterp_frac x1444 x2710)))
(assert (axiom_frac_zero x1444 x2710 32 x1420 (uninterp_frac x1444 x2710)))
(assert (axiom_frac_zero x1444 x2710 32 x1813 (uninterp_frac x1444 x2710)))
(assert (axiom_frac_zero x1444 x2710 32 x2670 (uninterp_frac x1444 x2710)))
(assert (axiom_frac_zero x1444 x2710 32 x403 (uninterp_frac x1444 x2710)))
(assert (axiom_frac_zero x1444 x2710 x1420 32 (uninterp_frac x1444 x2710)))
(assert (axiom_frac_zero x1444 x2710 x1701 x470 (uninterp_frac x1444 x2710)))
(assert (axiom_frac_zero x1444 x2710 x174 x1717 (uninterp_frac x1444 x2710)))
(assert (axiom_frac_zero x1444 x2710 x1813 32 (uninterp_frac x1444 x2710)))
(assert (axiom_frac_zero x1444 x2710 x1870 x540 (uninterp_frac x1444 x2710)))
(assert (axiom_frac_zero x1444 x2710 x2020 x607 (uninterp_frac x1444 x2710)))
(assert (axiom_frac_zero x1444 x2710 x219 x2872 (uninterp_frac x1444 x2710)))
(assert (axiom_frac_zero x1444 x2710 x2448 x2311 (uninterp_frac x1444 x2710)))
(assert (axiom_frac_zero x1444 x2710 x25 x1511 (uninterp_frac x1444 x2710)))
(assert (axiom_frac_zero x1444 x2710 x2629 x1816 (uninterp_frac x1444 x2710)))
(assert (axiom_frac_zero x1444 x2710 x2670 32 (uninterp_frac x1444 x2710)))
(assert (axiom_frac_zero x1444 x2710 x2727 x2303 (uninterp_frac x1444 x2710)))
(assert (axiom_frac_zero x1444 x2710 x2877 x1739 (uninterp_frac x1444 x2710)))
(assert (axiom_frac_zero x1444 x2710 x2932 x709 (uninterp_frac x1444 x2710)))
(assert (axiom_frac_zero x1444 x2710 x2962 32 (uninterp_frac x1444 x2710)))
(assert (axiom_frac_zero x1444 x2710 x3115 x738 (uninterp_frac x1444 x2710)))
(assert (axiom_frac_zero x1444 x2710 x403 32 (uninterp_frac x1444 x2710)))
(assert (axiom_frac_zero x1444 x2710 x408 x2710 (uninterp_frac x1444 x2710)))
(assert (axiom_frac_zero x1444 x2710 x540 x852 (uninterp_frac x1444 x2710)))
(assert (axiom_frac_zero x1444 x2710 x679 x985 (uninterp_frac x1444 x2710)))
(assert (axiom_frac_bound x1693 2))
(assert (axiom_frac_zero x1693 2 1000000000000000000 x1491 (uninterp_frac x1693 2)))
(assert (axiom_frac_zero x1693 2 1000000000000000000 x2196 (uninterp_frac x1693 2)))
(assert (axiom_frac_zero x1693 2 32 x1365 (uninterp_frac x1693 2)))
(assert (axiom_frac_zero x1693 2 32 x1420 (uninterp_frac x1693 2)))
(assert (axiom_frac_zero x1693 2 32 x1813 (uninterp_frac x1693 2)))
(assert (axiom_frac_zero x1693 2 32 x2670 (uninterp_frac x1693 2)))
(assert (axiom_frac_zero x1693 2 32 x403 (uninterp_frac x1693 2)))
(assert (axiom_frac_zero x1693 2 x1420 32 (uninterp_frac x1693 2)))
(assert (axiom_frac_zero x1693 2 x1701 x470 (uninterp_frac x1693 2)))
(assert (axiom_frac_zero x1693 2 x174 x1717 (uninterp_frac x1693 2)))
(assert (axiom_frac_zero x1693 2 x1813 32 (uninterp_frac x1693 2)))
(assert (axiom_frac_zero x1693 2 x1870 x540 (uninterp_frac x1693 2)))
(assert (axiom_frac_zero x1693 2 x2020 x607 (uninterp_frac x1693 2)))
(assert (axiom_frac_zero x1693 2 x219 x2872 (uninterp_frac x1693 2)))
(assert (axiom_frac_zero x1693 2 x2448 x2311 (uninterp_frac x1693 2)))
(assert (axiom_frac_zero x1693 2 x25 x1511 (uninterp_frac x1693 2)))
(assert (axiom_frac_zero x1693 2 x2629 x1816 (uninterp_frac x1693 2)))
(assert (axiom_frac_zero x1693 2 x2670 32 (uninterp_frac x1693 2)))
(assert (axiom_frac_zero x1693 2 x2727 x2303 (uninterp_frac x1693 2)))
(assert (axiom_frac_zero x1693 2 x2877 x1739 (uninterp_frac x1693 2)))
(assert (axiom_frac_zero x1693 2 x2932 x709 (uninterp_frac x1693 2)))
(assert (axiom_frac_zero x1693 2 x2962 32 (uninterp_frac x1693 2)))
(assert (axiom_frac_zero x1693 2 x3115 x738 (uninterp_frac x1693 2)))
(assert (axiom_frac_zero x1693 2 x403 32 (uninterp_frac x1693 2)))
(assert (axiom_frac_zero x1693 2 x408 x2710 (uninterp_frac x1693 2)))
(assert (axiom_frac_zero x1693 2 x540 x852 (uninterp_frac x1693 2)))
(assert (axiom_frac_zero x1693 2 x679 x985 (uninterp_frac x1693 2)))
(assert (axiom_frac_bound x173 x219))
(assert (axiom_frac_zero x173 x219 1000000000000000000 x1491 (uninterp_frac x173 x219)))
(assert (axiom_frac_zero x173 x219 1000000000000000000 x2196 (uninterp_frac x173 x219)))
(assert (axiom_frac_zero x173 x219 32 x1365 (uninterp_frac x173 x219)))
(assert (axiom_frac_zero x173 x219 32 x1420 (uninterp_frac x173 x219)))
(assert (axiom_frac_zero x173 x219 32 x1813 (uninterp_frac x173 x219)))
(assert (axiom_frac_zero x173 x219 32 x2670 (uninterp_frac x173 x219)))
(assert (axiom_frac_zero x173 x219 32 x403 (uninterp_frac x173 x219)))
(assert (axiom_frac_zero x173 x219 x1420 32 (uninterp_frac x173 x219)))
(assert (axiom_frac_zero x173 x219 x1701 x470 (uninterp_frac x173 x219)))
(assert (axiom_frac_zero x173 x219 x174 x1717 (uninterp_frac x173 x219)))
(assert (axiom_frac_zero x173 x219 x1813 32 (uninterp_frac x173 x219)))
(assert (axiom_frac_zero x173 x219 x1870 x540 (uninterp_frac x173 x219)))
(assert (axiom_frac_zero x173 x219 x2020 x607 (uninterp_frac x173 x219)))
(assert (axiom_frac_zero x173 x219 x219 x2872 (uninterp_frac x173 x219)))
(assert (axiom_frac_zero x173 x219 x2448 x2311 (uninterp_frac x173 x219)))
(assert (axiom_frac_zero x173 x219 x25 x1511 (uninterp_frac x173 x219)))
(assert (axiom_frac_zero x173 x219 x2629 x1816 (uninterp_frac x173 x219)))
(assert (axiom_frac_zero x173 x219 x2670 32 (uninterp_frac x173 x219)))
(assert (axiom_frac_zero x173 x219 x2727 x2303 (uninterp_frac x173 x219)))
(assert (axiom_frac_zero x173 x219 x2877 x1739 (uninterp_frac x173 x219)))
(assert (axiom_frac_zero x173 x219 x2932 x709 (uninterp_frac x173 x219)))
(assert (axiom_frac_zero x173 x219 x2962 32 (uninterp_frac x173 x219)))
(assert (axiom_frac_zero x173 x219 x3115 x738 (uninterp_frac x173 x219)))
(assert (axiom_frac_zero x173 x219 x403 32 (uninterp_frac x173 x219)))
(assert (axiom_frac_zero x173 x219 x408 x2710 (uninterp_frac x173 x219)))
(assert (axiom_frac_zero x173 x219 x540 x852 (uninterp_frac x173 x219)))
(assert (axiom_frac_zero x173 x219 x679 x985 (uninterp_frac x173 x219)))
(assert (axiom_frac_bound x1910 1000000000000000000))
(assert (axiom_frac_zero x1910 1000000000000000000 1000000000000000000 x1491 (uninterp_frac x1910 1000000000000000000)))
(assert (axiom_frac_zero x1910 1000000000000000000 1000000000000000000 x2196 (uninterp_frac x1910 1000000000000000000)))
(assert (axiom_frac_zero x1910 1000000000000000000 32 x1365 (uninterp_frac x1910 1000000000000000000)))
(assert (axiom_frac_zero x1910 1000000000000000000 32 x1420 (uninterp_frac x1910 1000000000000000000)))
(assert (axiom_frac_zero x1910 1000000000000000000 32 x1813 (uninterp_frac x1910 1000000000000000000)))
(assert (axiom_frac_zero x1910 1000000000000000000 32 x2670 (uninterp_frac x1910 1000000000000000000)))
(assert (axiom_frac_zero x1910 1000000000000000000 32 x403 (uninterp_frac x1910 1000000000000000000)))
(assert (axiom_frac_zero x1910 1000000000000000000 x1420 32 (uninterp_frac x1910 1000000000000000000)))
(assert (axiom_frac_zero x1910 1000000000000000000 x1701 x470 (uninterp_frac x1910 1000000000000000000)))
(assert (axiom_frac_zero x1910 1000000000000000000 x174 x1717 (uninterp_frac x1910 1000000000000000000)))
(assert (axiom_frac_zero x1910 1000000000000000000 x1813 32 (uninterp_frac x1910 1000000000000000000)))
(assert (axiom_frac_zero x1910 1000000000000000000 x1870 x540 (uninterp_frac x1910 1000000000000000000)))
(assert (axiom_frac_zero x1910 1000000000000000000 x2020 x607 (uninterp_frac x1910 1000000000000000000)))
(assert (axiom_frac_zero x1910 1000000000000000000 x219 x2872 (uninterp_frac x1910 1000000000000000000)))
(assert (axiom_frac_zero x1910 1000000000000000000 x2448 x2311 (uninterp_frac x1910 1000000000000000000)))
(assert (axiom_frac_zero x1910 1000000000000000000 x25 x1511 (uninterp_frac x1910 1000000000000000000)))
(assert (axiom_frac_zero x1910 1000000000000000000 x2629 x1816 (uninterp_frac x1910 1000000000000000000)))
(assert (axiom_frac_zero x1910 1000000000000000000 x2670 32 (uninterp_frac x1910 1000000000000000000)))
(assert (axiom_frac_zero x1910 1000000000000000000 x2727 x2303 (uninterp_frac x1910 1000000000000000000)))
(assert (axiom_frac_zero x1910 1000000000000000000 x2877 x1739 (uninterp_frac x1910 1000000000000000000)))
(assert (axiom_frac_zero x1910 1000000000000000000 x2932 x709 (uninterp_frac x1910 1000000000000000000)))
(assert (axiom_frac_zero x1910 1000000000000000000 x2962 32 (uninterp_frac x1910 1000000000000000000)))
(assert (axiom_frac_zero x1910 1000000000000000000 x3115 x738 (uninterp_frac x1910 1000000000000000000)))
(assert (axiom_frac_zero x1910 1000000000000000000 x403 32 (uninterp_frac x1910 1000000000000000000)))
(assert (axiom_frac_zero x1910 1000000000000000000 x408 x2710 (uninterp_frac x1910 1000000000000000000)))
(assert (axiom_frac_zero x1910 1000000000000000000 x540 x852 (uninterp_frac x1910 1000000000000000000)))
(assert (axiom_frac_zero x1910 1000000000000000000 x679 x985 (uninterp_frac x1910 1000000000000000000)))
(assert (axiom_frac_bound x2118 x1969))
(assert (axiom_frac_zero x2118 x1969 1000000000000000000 x1491 (uninterp_frac x2118 x1969)))
(assert (axiom_frac_zero x2118 x1969 1000000000000000000 x2196 (uninterp_frac x2118 x1969)))
(assert (axiom_frac_zero x2118 x1969 32 x1365 (uninterp_frac x2118 x1969)))
(assert (axiom_frac_zero x2118 x1969 32 x1420 (uninterp_frac x2118 x1969)))
(assert (axiom_frac_zero x2118 x1969 32 x1813 (uninterp_frac x2118 x1969)))
(assert (axiom_frac_zero x2118 x1969 32 x2670 (uninterp_frac x2118 x1969)))
(assert (axiom_frac_zero x2118 x1969 32 x403 (uninterp_frac x2118 x1969)))
(assert (axiom_frac_zero x2118 x1969 x1420 32 (uninterp_frac x2118 x1969)))
(assert (axiom_frac_zero x2118 x1969 x1701 x470 (uninterp_frac x2118 x1969)))
(assert (axiom_frac_zero x2118 x1969 x174 x1717 (uninterp_frac x2118 x1969)))
(assert (axiom_frac_zero x2118 x1969 x1813 32 (uninterp_frac x2118 x1969)))
(assert (axiom_frac_zero x2118 x1969 x1870 x540 (uninterp_frac x2118 x1969)))
(assert (axiom_frac_zero x2118 x1969 x2020 x607 (uninterp_frac x2118 x1969)))
(assert (axiom_frac_zero x2118 x1969 x219 x2872 (uninterp_frac x2118 x1969)))
(assert (axiom_frac_zero x2118 x1969 x2448 x2311 (uninterp_frac x2118 x1969)))
(assert (axiom_frac_zero x2118 x1969 x25 x1511 (uninterp_frac x2118 x1969)))
(assert (axiom_frac_zero x2118 x1969 x2629 x1816 (uninterp_frac x2118 x1969)))
(assert (axiom_frac_zero x2118 x1969 x2670 32 (uninterp_frac x2118 x1969)))
(assert (axiom_frac_zero x2118 x1969 x2727 x2303 (uninterp_frac x2118 x1969)))
(assert (axiom_frac_zero x2118 x1969 x2877 x1739 (uninterp_frac x2118 x1969)))
(assert (axiom_frac_zero x2118 x1969 x2932 x709 (uninterp_frac x2118 x1969)))
(assert (axiom_frac_zero x2118 x1969 x2962 32 (uninterp_frac x2118 x1969)))
(assert (axiom_frac_zero x2118 x1969 x3115 x738 (uninterp_frac x2118 x1969)))
(assert (axiom_frac_zero x2118 x1969 x403 32 (uninterp_frac x2118 x1969)))
(assert (axiom_frac_zero x2118 x1969 x408 x2710 (uninterp_frac x2118 x1969)))
(assert (axiom_frac_zero x2118 x1969 x540 x852 (uninterp_frac x2118 x1969)))
(assert (axiom_frac_zero x2118 x1969 x679 x985 (uninterp_frac x2118 x1969)))
(assert (axiom_frac_bound x2350 x2510))
(assert (axiom_frac_zero x2350 x2510 1000000000000000000 x1491 (uninterp_frac x2350 x2510)))
(assert (axiom_frac_zero x2350 x2510 1000000000000000000 x2196 (uninterp_frac x2350 x2510)))
(assert (axiom_frac_zero x2350 x2510 32 x1365 (uninterp_frac x2350 x2510)))
(assert (axiom_frac_zero x2350 x2510 32 x1420 (uninterp_frac x2350 x2510)))
(assert (axiom_frac_zero x2350 x2510 32 x1813 (uninterp_frac x2350 x2510)))
(assert (axiom_frac_zero x2350 x2510 32 x2670 (uninterp_frac x2350 x2510)))
(assert (axiom_frac_zero x2350 x2510 32 x403 (uninterp_frac x2350 x2510)))
(assert (axiom_frac_zero x2350 x2510 x1420 32 (uninterp_frac x2350 x2510)))
(assert (axiom_frac_zero x2350 x2510 x1701 x470 (uninterp_frac x2350 x2510)))
(assert (axiom_frac_zero x2350 x2510 x174 x1717 (uninterp_frac x2350 x2510)))
(assert (axiom_frac_zero x2350 x2510 x1813 32 (uninterp_frac x2350 x2510)))
(assert (axiom_frac_zero x2350 x2510 x1870 x540 (uninterp_frac x2350 x2510)))
(assert (axiom_frac_zero x2350 x2510 x2020 x607 (uninterp_frac x2350 x2510)))
(assert (axiom_frac_zero x2350 x2510 x219 x2872 (uninterp_frac x2350 x2510)))
(assert (axiom_frac_zero x2350 x2510 x2448 x2311 (uninterp_frac x2350 x2510)))
(assert (axiom_frac_zero x2350 x2510 x25 x1511 (uninterp_frac x2350 x2510)))
(assert (axiom_frac_zero x2350 x2510 x2629 x1816 (uninterp_frac x2350 x2510)))
(assert (axiom_frac_zero x2350 x2510 x2670 32 (uninterp_frac x2350 x2510)))
(assert (axiom_frac_zero x2350 x2510 x2727 x2303 (uninterp_frac x2350 x2510)))
(assert (axiom_frac_zero x2350 x2510 x2877 x1739 (uninterp_frac x2350 x2510)))
(assert (axiom_frac_zero x2350 x2510 x2932 x709 (uninterp_frac x2350 x2510)))
(assert (axiom_frac_zero x2350 x2510 x2962 32 (uninterp_frac x2350 x2510)))
(assert (axiom_frac_zero x2350 x2510 x3115 x738 (uninterp_frac x2350 x2510)))
(assert (axiom_frac_zero x2350 x2510 x403 32 (uninterp_frac x2350 x2510)))
(assert (axiom_frac_zero x2350 x2510 x408 x2710 (uninterp_frac x2350 x2510)))
(assert (axiom_frac_zero x2350 x2510 x540 x852 (uninterp_frac x2350 x2510)))
(assert (axiom_frac_zero x2350 x2510 x679 x985 (uninterp_frac x2350 x2510)))
(assert (axiom_frac_bound x2384 x2009))
(assert (axiom_frac_zero x2384 x2009 1000000000000000000 x1491 (uninterp_frac x2384 x2009)))
(assert (axiom_frac_zero x2384 x2009 1000000000000000000 x2196 (uninterp_frac x2384 x2009)))
(assert (axiom_frac_zero x2384 x2009 32 x1365 (uninterp_frac x2384 x2009)))
(assert (axiom_frac_zero x2384 x2009 32 x1420 (uninterp_frac x2384 x2009)))
(assert (axiom_frac_zero x2384 x2009 32 x1813 (uninterp_frac x2384 x2009)))
(assert (axiom_frac_zero x2384 x2009 32 x2670 (uninterp_frac x2384 x2009)))
(assert (axiom_frac_zero x2384 x2009 32 x403 (uninterp_frac x2384 x2009)))
(assert (axiom_frac_zero x2384 x2009 x1420 32 (uninterp_frac x2384 x2009)))
(assert (axiom_frac_zero x2384 x2009 x1701 x470 (uninterp_frac x2384 x2009)))
(assert (axiom_frac_zero x2384 x2009 x174 x1717 (uninterp_frac x2384 x2009)))
(assert (axiom_frac_zero x2384 x2009 x1813 32 (uninterp_frac x2384 x2009)))
(assert (axiom_frac_zero x2384 x2009 x1870 x540 (uninterp_frac x2384 x2009)))
(assert (axiom_frac_zero x2384 x2009 x2020 x607 (uninterp_frac x2384 x2009)))
(assert (axiom_frac_zero x2384 x2009 x219 x2872 (uninterp_frac x2384 x2009)))
(assert (axiom_frac_zero x2384 x2009 x2448 x2311 (uninterp_frac x2384 x2009)))
(assert (axiom_frac_zero x2384 x2009 x25 x1511 (uninterp_frac x2384 x2009)))
(assert (axiom_frac_zero x2384 x2009 x2629 x1816 (uninterp_frac x2384 x2009)))
(assert (axiom_frac_zero x2384 x2009 x2670 32 (uninterp_frac x2384 x2009)))
(assert (axiom_frac_zero x2384 x2009 x2727 x2303 (uninterp_frac x2384 x2009)))
(assert (axiom_frac_zero x2384 x2009 x2877 x1739 (uninterp_frac x2384 x2009)))
(assert (axiom_frac_zero x2384 x2009 x2932 x709 (uninterp_frac x2384 x2009)))
(assert (axiom_frac_zero x2384 x2009 x2962 32 (uninterp_frac x2384 x2009)))
(assert (axiom_frac_zero x2384 x2009 x3115 x738 (uninterp_frac x2384 x2009)))
(assert (axiom_frac_zero x2384 x2009 x403 32 (uninterp_frac x2384 x2009)))
(assert (axiom_frac_zero x2384 x2009 x408 x2710 (uninterp_frac x2384 x2009)))
(assert (axiom_frac_zero x2384 x2009 x540 x852 (uninterp_frac x2384 x2009)))
(assert (axiom_frac_zero x2384 x2009 x679 x985 (uninterp_frac x2384 x2009)))
(assert (axiom_frac_bound x2502 1000000000000000000))
(assert (axiom_frac_zero x2502 1000000000000000000 1000000000000000000 x1491 (uninterp_frac x2502 1000000000000000000)))
(assert (axiom_frac_zero x2502 1000000000000000000 1000000000000000000 x2196 (uninterp_frac x2502 1000000000000000000)))
(assert (axiom_frac_zero x2502 1000000000000000000 32 x1365 (uninterp_frac x2502 1000000000000000000)))
(assert (axiom_frac_zero x2502 1000000000000000000 32 x1420 (uninterp_frac x2502 1000000000000000000)))
(assert (axiom_frac_zero x2502 1000000000000000000 32 x1813 (uninterp_frac x2502 1000000000000000000)))
(assert (axiom_frac_zero x2502 1000000000000000000 32 x2670 (uninterp_frac x2502 1000000000000000000)))
(assert (axiom_frac_zero x2502 1000000000000000000 32 x403 (uninterp_frac x2502 1000000000000000000)))
(assert (axiom_frac_zero x2502 1000000000000000000 x1420 32 (uninterp_frac x2502 1000000000000000000)))
(assert (axiom_frac_zero x2502 1000000000000000000 x1701 x470 (uninterp_frac x2502 1000000000000000000)))
(assert (axiom_frac_zero x2502 1000000000000000000 x174 x1717 (uninterp_frac x2502 1000000000000000000)))
(assert (axiom_frac_zero x2502 1000000000000000000 x1813 32 (uninterp_frac x2502 1000000000000000000)))
(assert (axiom_frac_zero x2502 1000000000000000000 x1870 x540 (uninterp_frac x2502 1000000000000000000)))
(assert (axiom_frac_zero x2502 1000000000000000000 x2020 x607 (uninterp_frac x2502 1000000000000000000)))
(assert (axiom_frac_zero x2502 1000000000000000000 x219 x2872 (uninterp_frac x2502 1000000000000000000)))
(assert (axiom_frac_zero x2502 1000000000000000000 x2448 x2311 (uninterp_frac x2502 1000000000000000000)))
(assert (axiom_frac_zero x2502 1000000000000000000 x25 x1511 (uninterp_frac x2502 1000000000000000000)))
(assert (axiom_frac_zero x2502 1000000000000000000 x2629 x1816 (uninterp_frac x2502 1000000000000000000)))
(assert (axiom_frac_zero x2502 1000000000000000000 x2670 32 (uninterp_frac x2502 1000000000000000000)))
(assert (axiom_frac_zero x2502 1000000000000000000 x2727 x2303 (uninterp_frac x2502 1000000000000000000)))
(assert (axiom_frac_zero x2502 1000000000000000000 x2877 x1739 (uninterp_frac x2502 1000000000000000000)))
(assert (axiom_frac_zero x2502 1000000000000000000 x2932 x709 (uninterp_frac x2502 1000000000000000000)))
(assert (axiom_frac_zero x2502 1000000000000000000 x2962 32 (uninterp_frac x2502 1000000000000000000)))
(assert (axiom_frac_zero x2502 1000000000000000000 x3115 x738 (uninterp_frac x2502 1000000000000000000)))
(assert (axiom_frac_zero x2502 1000000000000000000 x403 32 (uninterp_frac x2502 1000000000000000000)))
(assert (axiom_frac_zero x2502 1000000000000000000 x408 x2710 (uninterp_frac x2502 1000000000000000000)))
(assert (axiom_frac_zero x2502 1000000000000000000 x540 x852 (uninterp_frac x2502 1000000000000000000)))
(assert (axiom_frac_zero x2502 1000000000000000000 x679 x985 (uninterp_frac x2502 1000000000000000000)))
(assert (axiom_frac_bound x2574 1000000000000000000))
(assert (axiom_frac_zero x2574 1000000000000000000 1000000000000000000 x1491 (uninterp_frac x2574 1000000000000000000)))
(assert (axiom_frac_zero x2574 1000000000000000000 1000000000000000000 x2196 (uninterp_frac x2574 1000000000000000000)))
(assert (axiom_frac_zero x2574 1000000000000000000 32 x1365 (uninterp_frac x2574 1000000000000000000)))
(assert (axiom_frac_zero x2574 1000000000000000000 32 x1420 (uninterp_frac x2574 1000000000000000000)))
(assert (axiom_frac_zero x2574 1000000000000000000 32 x1813 (uninterp_frac x2574 1000000000000000000)))
(assert (axiom_frac_zero x2574 1000000000000000000 32 x2670 (uninterp_frac x2574 1000000000000000000)))
(assert (axiom_frac_zero x2574 1000000000000000000 32 x403 (uninterp_frac x2574 1000000000000000000)))
(assert (axiom_frac_zero x2574 1000000000000000000 x1420 32 (uninterp_frac x2574 1000000000000000000)))
(assert (axiom_frac_zero x2574 1000000000000000000 x1701 x470 (uninterp_frac x2574 1000000000000000000)))
(assert (axiom_frac_zero x2574 1000000000000000000 x174 x1717 (uninterp_frac x2574 1000000000000000000)))
(assert (axiom_frac_zero x2574 1000000000000000000 x1813 32 (uninterp_frac x2574 1000000000000000000)))
(assert (axiom_frac_zero x2574 1000000000000000000 x1870 x540 (uninterp_frac x2574 1000000000000000000)))
(assert (axiom_frac_zero x2574 1000000000000000000 x2020 x607 (uninterp_frac x2574 1000000000000000000)))
(assert (axiom_frac_zero x2574 1000000000000000000 x219 x2872 (uninterp_frac x2574 1000000000000000000)))
(assert (axiom_frac_zero x2574 1000000000000000000 x2448 x2311 (uninterp_frac x2574 1000000000000000000)))
(assert (axiom_frac_zero x2574 1000000000000000000 x25 x1511 (uninterp_frac x2574 1000000000000000000)))
(assert (axiom_frac_zero x2574 1000000000000000000 x2629 x1816 (uninterp_frac x2574 1000000000000000000)))
(assert (axiom_frac_zero x2574 1000000000000000000 x2670 32 (uninterp_frac x2574 1000000000000000000)))
(assert (axiom_frac_zero x2574 1000000000000000000 x2727 x2303 (uninterp_frac x2574 1000000000000000000)))
(assert (axiom_frac_zero x2574 1000000000000000000 x2877 x1739 (uninterp_frac x2574 1000000000000000000)))
(assert (axiom_frac_zero x2574 1000000000000000000 x2932 x709 (uninterp_frac x2574 1000000000000000000)))
(assert (axiom_frac_zero x2574 1000000000000000000 x2962 32 (uninterp_frac x2574 1000000000000000000)))
(assert (axiom_frac_zero x2574 1000000000000000000 x3115 x738 (uninterp_frac x2574 1000000000000000000)))
(assert (axiom_frac_zero x2574 1000000000000000000 x403 32 (uninterp_frac x2574 1000000000000000000)))
(assert (axiom_frac_zero x2574 1000000000000000000 x408 x2710 (uninterp_frac x2574 1000000000000000000)))
(assert (axiom_frac_zero x2574 1000000000000000000 x540 x852 (uninterp_frac x2574 1000000000000000000)))
(assert (axiom_frac_zero x2574 1000000000000000000 x679 x985 (uninterp_frac x2574 1000000000000000000)))
(assert (axiom_frac_bound x258 2))
(assert (axiom_frac_zero x258 2 1000000000000000000 x1491 (uninterp_frac x258 2)))
(assert (axiom_frac_zero x258 2 1000000000000000000 x2196 (uninterp_frac x258 2)))
(assert (axiom_frac_zero x258 2 32 x1365 (uninterp_frac x258 2)))
(assert (axiom_frac_zero x258 2 32 x1420 (uninterp_frac x258 2)))
(assert (axiom_frac_zero x258 2 32 x1813 (uninterp_frac x258 2)))
(assert (axiom_frac_zero x258 2 32 x2670 (uninterp_frac x258 2)))
(assert (axiom_frac_zero x258 2 32 x403 (uninterp_frac x258 2)))
(assert (axiom_frac_zero x258 2 x1420 32 (uninterp_frac x258 2)))
(assert (axiom_frac_zero x258 2 x1701 x470 (uninterp_frac x258 2)))
(assert (axiom_frac_zero x258 2 x174 x1717 (uninterp_frac x258 2)))
(assert (axiom_frac_zero x258 2 x1813 32 (uninterp_frac x258 2)))
(assert (axiom_frac_zero x258 2 x1870 x540 (uninterp_frac x258 2)))
(assert (axiom_frac_zero x258 2 x2020 x607 (uninterp_frac x258 2)))
(assert (axiom_frac_zero x258 2 x219 x2872 (uninterp_frac x258 2)))
(assert (axiom_frac_zero x258 2 x2448 x2311 (uninterp_frac x258 2)))
(assert (axiom_frac_zero x258 2 x25 x1511 (uninterp_frac x258 2)))
(assert (axiom_frac_zero x258 2 x2629 x1816 (uninterp_frac x258 2)))
(assert (axiom_frac_zero x258 2 x2670 32 (uninterp_frac x258 2)))
(assert (axiom_frac_zero x258 2 x2727 x2303 (uninterp_frac x258 2)))
(assert (axiom_frac_zero x258 2 x2877 x1739 (uninterp_frac x258 2)))
(assert (axiom_frac_zero x258 2 x2932 x709 (uninterp_frac x258 2)))
(assert (axiom_frac_zero x258 2 x2962 32 (uninterp_frac x258 2)))
(assert (axiom_frac_zero x258 2 x3115 x738 (uninterp_frac x258 2)))
(assert (axiom_frac_zero x258 2 x403 32 (uninterp_frac x258 2)))
(assert (axiom_frac_zero x258 2 x408 x2710 (uninterp_frac x258 2)))
(assert (axiom_frac_zero x258 2 x540 x852 (uninterp_frac x258 2)))
(assert (axiom_frac_zero x258 2 x679 x985 (uninterp_frac x258 2)))
(assert (axiom_frac_bound x2703 x2633))
(assert (axiom_frac_zero x2703 x2633 1000000000000000000 x1491 (uninterp_frac x2703 x2633)))
(assert (axiom_frac_zero x2703 x2633 1000000000000000000 x2196 (uninterp_frac x2703 x2633)))
(assert (axiom_frac_zero x2703 x2633 32 x1365 (uninterp_frac x2703 x2633)))
(assert (axiom_frac_zero x2703 x2633 32 x1420 (uninterp_frac x2703 x2633)))
(assert (axiom_frac_zero x2703 x2633 32 x1813 (uninterp_frac x2703 x2633)))
(assert (axiom_frac_zero x2703 x2633 32 x2670 (uninterp_frac x2703 x2633)))
(assert (axiom_frac_zero x2703 x2633 32 x403 (uninterp_frac x2703 x2633)))
(assert (axiom_frac_zero x2703 x2633 x1420 32 (uninterp_frac x2703 x2633)))
(assert (axiom_frac_zero x2703 x2633 x1701 x470 (uninterp_frac x2703 x2633)))
(assert (axiom_frac_zero x2703 x2633 x174 x1717 (uninterp_frac x2703 x2633)))
(assert (axiom_frac_zero x2703 x2633 x1813 32 (uninterp_frac x2703 x2633)))
(assert (axiom_frac_zero x2703 x2633 x1870 x540 (uninterp_frac x2703 x2633)))
(assert (axiom_frac_zero x2703 x2633 x2020 x607 (uninterp_frac x2703 x2633)))
(assert (axiom_frac_zero x2703 x2633 x219 x2872 (uninterp_frac x2703 x2633)))
(assert (axiom_frac_zero x2703 x2633 x2448 x2311 (uninterp_frac x2703 x2633)))
(assert (axiom_frac_zero x2703 x2633 x25 x1511 (uninterp_frac x2703 x2633)))
(assert (axiom_frac_zero x2703 x2633 x2629 x1816 (uninterp_frac x2703 x2633)))
(assert (axiom_frac_zero x2703 x2633 x2670 32 (uninterp_frac x2703 x2633)))
(assert (axiom_frac_zero x2703 x2633 x2727 x2303 (uninterp_frac x2703 x2633)))
(assert (axiom_frac_zero x2703 x2633 x2877 x1739 (uninterp_frac x2703 x2633)))
(assert (axiom_frac_zero x2703 x2633 x2932 x709 (uninterp_frac x2703 x2633)))
(assert (axiom_frac_zero x2703 x2633 x2962 32 (uninterp_frac x2703 x2633)))
(assert (axiom_frac_zero x2703 x2633 x3115 x738 (uninterp_frac x2703 x2633)))
(assert (axiom_frac_zero x2703 x2633 x403 32 (uninterp_frac x2703 x2633)))
(assert (axiom_frac_zero x2703 x2633 x408 x2710 (uninterp_frac x2703 x2633)))
(assert (axiom_frac_zero x2703 x2633 x540 x852 (uninterp_frac x2703 x2633)))
(assert (axiom_frac_zero x2703 x2633 x679 x985 (uninterp_frac x2703 x2633)))
(assert (axiom_frac_bound x2713 x2933))
(assert (axiom_frac_zero x2713 x2933 1000000000000000000 x1491 (uninterp_frac x2713 x2933)))
(assert (axiom_frac_zero x2713 x2933 1000000000000000000 x2196 (uninterp_frac x2713 x2933)))
(assert (axiom_frac_zero x2713 x2933 32 x1365 (uninterp_frac x2713 x2933)))
(assert (axiom_frac_zero x2713 x2933 32 x1420 (uninterp_frac x2713 x2933)))
(assert (axiom_frac_zero x2713 x2933 32 x1813 (uninterp_frac x2713 x2933)))
(assert (axiom_frac_zero x2713 x2933 32 x2670 (uninterp_frac x2713 x2933)))
(assert (axiom_frac_zero x2713 x2933 32 x403 (uninterp_frac x2713 x2933)))
(assert (axiom_frac_zero x2713 x2933 x1420 32 (uninterp_frac x2713 x2933)))
(assert (axiom_frac_zero x2713 x2933 x1701 x470 (uninterp_frac x2713 x2933)))
(assert (axiom_frac_zero x2713 x2933 x174 x1717 (uninterp_frac x2713 x2933)))
(assert (axiom_frac_zero x2713 x2933 x1813 32 (uninterp_frac x2713 x2933)))
(assert (axiom_frac_zero x2713 x2933 x1870 x540 (uninterp_frac x2713 x2933)))
(assert (axiom_frac_zero x2713 x2933 x2020 x607 (uninterp_frac x2713 x2933)))
(assert (axiom_frac_zero x2713 x2933 x219 x2872 (uninterp_frac x2713 x2933)))
(assert (axiom_frac_zero x2713 x2933 x2448 x2311 (uninterp_frac x2713 x2933)))
(assert (axiom_frac_zero x2713 x2933 x25 x1511 (uninterp_frac x2713 x2933)))
(assert (axiom_frac_zero x2713 x2933 x2629 x1816 (uninterp_frac x2713 x2933)))
(assert (axiom_frac_zero x2713 x2933 x2670 32 (uninterp_frac x2713 x2933)))
(assert (axiom_frac_zero x2713 x2933 x2727 x2303 (uninterp_frac x2713 x2933)))
(assert (axiom_frac_zero x2713 x2933 x2877 x1739 (uninterp_frac x2713 x2933)))
(assert (axiom_frac_zero x2713 x2933 x2932 x709 (uninterp_frac x2713 x2933)))
(assert (axiom_frac_zero x2713 x2933 x2962 32 (uninterp_frac x2713 x2933)))
(assert (axiom_frac_zero x2713 x2933 x3115 x738 (uninterp_frac x2713 x2933)))
(assert (axiom_frac_zero x2713 x2933 x403 32 (uninterp_frac x2713 x2933)))
(assert (axiom_frac_zero x2713 x2933 x408 x2710 (uninterp_frac x2713 x2933)))
(assert (axiom_frac_zero x2713 x2933 x540 x852 (uninterp_frac x2713 x2933)))
(assert (axiom_frac_zero x2713 x2933 x679 x985 (uninterp_frac x2713 x2933)))
(assert (axiom_frac_bound x3067 x1689))
(assert (axiom_frac_zero x3067 x1689 1000000000000000000 x1491 (uninterp_frac x3067 x1689)))
(assert (axiom_frac_zero x3067 x1689 1000000000000000000 x2196 (uninterp_frac x3067 x1689)))
(assert (axiom_frac_zero x3067 x1689 32 x1365 (uninterp_frac x3067 x1689)))
(assert (axiom_frac_zero x3067 x1689 32 x1420 (uninterp_frac x3067 x1689)))
(assert (axiom_frac_zero x3067 x1689 32 x1813 (uninterp_frac x3067 x1689)))
(assert (axiom_frac_zero x3067 x1689 32 x2670 (uninterp_frac x3067 x1689)))
(assert (axiom_frac_zero x3067 x1689 32 x403 (uninterp_frac x3067 x1689)))
(assert (axiom_frac_zero x3067 x1689 x1420 32 (uninterp_frac x3067 x1689)))
(assert (axiom_frac_zero x3067 x1689 x1701 x470 (uninterp_frac x3067 x1689)))
(assert (axiom_frac_zero x3067 x1689 x174 x1717 (uninterp_frac x3067 x1689)))
(assert (axiom_frac_zero x3067 x1689 x1813 32 (uninterp_frac x3067 x1689)))
(assert (axiom_frac_zero x3067 x1689 x1870 x540 (uninterp_frac x3067 x1689)))
(assert (axiom_frac_zero x3067 x1689 x2020 x607 (uninterp_frac x3067 x1689)))
(assert (axiom_frac_zero x3067 x1689 x219 x2872 (uninterp_frac x3067 x1689)))
(assert (axiom_frac_zero x3067 x1689 x2448 x2311 (uninterp_frac x3067 x1689)))
(assert (axiom_frac_zero x3067 x1689 x25 x1511 (uninterp_frac x3067 x1689)))
(assert (axiom_frac_zero x3067 x1689 x2629 x1816 (uninterp_frac x3067 x1689)))
(assert (axiom_frac_zero x3067 x1689 x2670 32 (uninterp_frac x3067 x1689)))
(assert (axiom_frac_zero x3067 x1689 x2727 x2303 (uninterp_frac x3067 x1689)))
(assert (axiom_frac_zero x3067 x1689 x2877 x1739 (uninterp_frac x3067 x1689)))
(assert (axiom_frac_zero x3067 x1689 x2932 x709 (uninterp_frac x3067 x1689)))
(assert (axiom_frac_zero x3067 x1689 x2962 32 (uninterp_frac x3067 x1689)))
(assert (axiom_frac_zero x3067 x1689 x3115 x738 (uninterp_frac x3067 x1689)))
(assert (axiom_frac_zero x3067 x1689 x403 32 (uninterp_frac x3067 x1689)))
(assert (axiom_frac_zero x3067 x1689 x408 x2710 (uninterp_frac x3067 x1689)))
(assert (axiom_frac_zero x3067 x1689 x540 x852 (uninterp_frac x3067 x1689)))
(assert (axiom_frac_zero x3067 x1689 x679 x985 (uninterp_frac x3067 x1689)))
(assert (axiom_frac_bound x3085 x2510))
(assert (axiom_frac_zero x3085 x2510 1000000000000000000 x1491 (uninterp_frac x3085 x2510)))
(assert (axiom_frac_zero x3085 x2510 1000000000000000000 x2196 (uninterp_frac x3085 x2510)))
(assert (axiom_frac_zero x3085 x2510 32 x1365 (uninterp_frac x3085 x2510)))
(assert (axiom_frac_zero x3085 x2510 32 x1420 (uninterp_frac x3085 x2510)))
(assert (axiom_frac_zero x3085 x2510 32 x1813 (uninterp_frac x3085 x2510)))
(assert (axiom_frac_zero x3085 x2510 32 x2670 (uninterp_frac x3085 x2510)))
(assert (axiom_frac_zero x3085 x2510 32 x403 (uninterp_frac x3085 x2510)))
(assert (axiom_frac_zero x3085 x2510 x1420 32 (uninterp_frac x3085 x2510)))
(assert (axiom_frac_zero x3085 x2510 x1701 x470 (uninterp_frac x3085 x2510)))
(assert (axiom_frac_zero x3085 x2510 x174 x1717 (uninterp_frac x3085 x2510)))
(assert (axiom_frac_zero x3085 x2510 x1813 32 (uninterp_frac x3085 x2510)))
(assert (axiom_frac_zero x3085 x2510 x1870 x540 (uninterp_frac x3085 x2510)))
(assert (axiom_frac_zero x3085 x2510 x2020 x607 (uninterp_frac x3085 x2510)))
(assert (axiom_frac_zero x3085 x2510 x219 x2872 (uninterp_frac x3085 x2510)))
(assert (axiom_frac_zero x3085 x2510 x2448 x2311 (uninterp_frac x3085 x2510)))
(assert (axiom_frac_zero x3085 x2510 x25 x1511 (uninterp_frac x3085 x2510)))
(assert (axiom_frac_zero x3085 x2510 x2629 x1816 (uninterp_frac x3085 x2510)))
(assert (axiom_frac_zero x3085 x2510 x2670 32 (uninterp_frac x3085 x2510)))
(assert (axiom_frac_zero x3085 x2510 x2727 x2303 (uninterp_frac x3085 x2510)))
(assert (axiom_frac_zero x3085 x2510 x2877 x1739 (uninterp_frac x3085 x2510)))
(assert (axiom_frac_zero x3085 x2510 x2932 x709 (uninterp_frac x3085 x2510)))
(assert (axiom_frac_zero x3085 x2510 x2962 32 (uninterp_frac x3085 x2510)))
(assert (axiom_frac_zero x3085 x2510 x3115 x738 (uninterp_frac x3085 x2510)))
(assert (axiom_frac_zero x3085 x2510 x403 32 (uninterp_frac x3085 x2510)))
(assert (axiom_frac_zero x3085 x2510 x408 x2710 (uninterp_frac x3085 x2510)))
(assert (axiom_frac_zero x3085 x2510 x540 x852 (uninterp_frac x3085 x2510)))
(assert (axiom_frac_zero x3085 x2510 x679 x985 (uninterp_frac x3085 x2510)))
(assert (axiom_frac_bound x649 x1058))
(assert (axiom_frac_zero x649 x1058 1000000000000000000 x1491 (uninterp_frac x649 x1058)))
(assert (axiom_frac_zero x649 x1058 1000000000000000000 x2196 (uninterp_frac x649 x1058)))
(assert (axiom_frac_zero x649 x1058 32 x1365 (uninterp_frac x649 x1058)))
(assert (axiom_frac_zero x649 x1058 32 x1420 (uninterp_frac x649 x1058)))
(assert (axiom_frac_zero x649 x1058 32 x1813 (uninterp_frac x649 x1058)))
(assert (axiom_frac_zero x649 x1058 32 x2670 (uninterp_frac x649 x1058)))
(assert (axiom_frac_zero x649 x1058 32 x403 (uninterp_frac x649 x1058)))
(assert (axiom_frac_zero x649 x1058 x1420 32 (uninterp_frac x649 x1058)))
(assert (axiom_frac_zero x649 x1058 x1701 x470 (uninterp_frac x649 x1058)))
(assert (axiom_frac_zero x649 x1058 x174 x1717 (uninterp_frac x649 x1058)))
(assert (axiom_frac_zero x649 x1058 x1813 32 (uninterp_frac x649 x1058)))
(assert (axiom_frac_zero x649 x1058 x1870 x540 (uninterp_frac x649 x1058)))
(assert (axiom_frac_zero x649 x1058 x2020 x607 (uninterp_frac x649 x1058)))
(assert (axiom_frac_zero x649 x1058 x219 x2872 (uninterp_frac x649 x1058)))
(assert (axiom_frac_zero x649 x1058 x2448 x2311 (uninterp_frac x649 x1058)))
(assert (axiom_frac_zero x649 x1058 x25 x1511 (uninterp_frac x649 x1058)))
(assert (axiom_frac_zero x649 x1058 x2629 x1816 (uninterp_frac x649 x1058)))
(assert (axiom_frac_zero x649 x1058 x2670 32 (uninterp_frac x649 x1058)))
(assert (axiom_frac_zero x649 x1058 x2727 x2303 (uninterp_frac x649 x1058)))
(assert (axiom_frac_zero x649 x1058 x2877 x1739 (uninterp_frac x649 x1058)))
(assert (axiom_frac_zero x649 x1058 x2932 x709 (uninterp_frac x649 x1058)))
(assert (axiom_frac_zero x649 x1058 x2962 32 (uninterp_frac x649 x1058)))
(assert (axiom_frac_zero x649 x1058 x3115 x738 (uninterp_frac x649 x1058)))
(assert (axiom_frac_zero x649 x1058 x403 32 (uninterp_frac x649 x1058)))
(assert (axiom_frac_zero x649 x1058 x408 x2710 (uninterp_frac x649 x1058)))
(assert (axiom_frac_zero x649 x1058 x540 x852 (uninterp_frac x649 x1058)))
(assert (axiom_frac_zero x649 x1058 x679 x985 (uninterp_frac x649 x1058)))
(assert (axiom_frac_bound x684 x1323))
(assert (axiom_frac_zero x684 x1323 1000000000000000000 x1491 (uninterp_frac x684 x1323)))
(assert (axiom_frac_zero x684 x1323 1000000000000000000 x2196 (uninterp_frac x684 x1323)))
(assert (axiom_frac_zero x684 x1323 32 x1365 (uninterp_frac x684 x1323)))
(assert (axiom_frac_zero x684 x1323 32 x1420 (uninterp_frac x684 x1323)))
(assert (axiom_frac_zero x684 x1323 32 x1813 (uninterp_frac x684 x1323)))
(assert (axiom_frac_zero x684 x1323 32 x2670 (uninterp_frac x684 x1323)))
(assert (axiom_frac_zero x684 x1323 32 x403 (uninterp_frac x684 x1323)))
(assert (axiom_frac_zero x684 x1323 x1420 32 (uninterp_frac x684 x1323)))
(assert (axiom_frac_zero x684 x1323 x1701 x470 (uninterp_frac x684 x1323)))
(assert (axiom_frac_zero x684 x1323 x174 x1717 (uninterp_frac x684 x1323)))
(assert (axiom_frac_zero x684 x1323 x1813 32 (uninterp_frac x684 x1323)))
(assert (axiom_frac_zero x684 x1323 x1870 x540 (uninterp_frac x684 x1323)))
(assert (axiom_frac_zero x684 x1323 x2020 x607 (uninterp_frac x684 x1323)))
(assert (axiom_frac_zero x684 x1323 x219 x2872 (uninterp_frac x684 x1323)))
(assert (axiom_frac_zero x684 x1323 x2448 x2311 (uninterp_frac x684 x1323)))
(assert (axiom_frac_zero x684 x1323 x25 x1511 (uninterp_frac x684 x1323)))
(assert (axiom_frac_zero x684 x1323 x2629 x1816 (uninterp_frac x684 x1323)))
(assert (axiom_frac_zero x684 x1323 x2670 32 (uninterp_frac x684 x1323)))
(assert (axiom_frac_zero x684 x1323 x2727 x2303 (uninterp_frac x684 x1323)))
(assert (axiom_frac_zero x684 x1323 x2877 x1739 (uninterp_frac x684 x1323)))
(assert (axiom_frac_zero x684 x1323 x2932 x709 (uninterp_frac x684 x1323)))
(assert (axiom_frac_zero x684 x1323 x2962 32 (uninterp_frac x684 x1323)))
(assert (axiom_frac_zero x684 x1323 x3115 x738 (uninterp_frac x684 x1323)))
(assert (axiom_frac_zero x684 x1323 x403 32 (uninterp_frac x684 x1323)))
(assert (axiom_frac_zero x684 x1323 x408 x2710 (uninterp_frac x684 x1323)))
(assert (axiom_frac_zero x684 x1323 x540 x852 (uninterp_frac x684 x1323)))
(assert (axiom_frac_zero x684 x1323 x679 x985 (uninterp_frac x684 x1323)))
(assert (axiom_int_approximation x100))
(assert (axiom_int_approximation x1000))
(assert (axiom_int_approximation x1001))
(assert (axiom_int_approximation x1005))
(assert (axiom_int_approximation x1006))
(assert (axiom_int_approximation x101))
(assert (axiom_int_approximation x1010))
(assert (axiom_int_approximation x1018))
(assert (axiom_int_approximation x1019))
(assert (axiom_int_approximation x1022))
(assert (axiom_int_approximation x1028))
(assert (axiom_int_approximation x1030))
(assert (axiom_int_approximation x1034))
(assert (axiom_int_approximation x1035))
(assert (axiom_int_approximation x104))
(assert (axiom_int_approximation x1040))
(assert (axiom_int_approximation x1042))
(assert (axiom_int_approximation x1043))
(assert (axiom_int_approximation x1045))
(assert (axiom_int_approximation x1047))
(assert (axiom_int_approximation x1048))
(assert (axiom_int_approximation x1049))
(assert (axiom_int_approximation x105))
(assert (axiom_int_approximation x1052))
(assert (axiom_int_approximation x1053))
(assert (axiom_int_approximation x1055))
(assert (axiom_int_approximation x1057))
(assert (axiom_int_approximation x1058))
(assert (axiom_int_approximation x1063))
(assert (axiom_int_approximation x1065))
(assert (axiom_int_approximation x1067))
(assert (axiom_int_approximation x107))
(assert (axiom_int_approximation x1070))
(assert (axiom_int_approximation x1071))
(assert (axiom_int_approximation x1074))
(assert (axiom_int_approximation x1075))
(assert (axiom_int_approximation x1076))
(assert (axiom_int_approximation x1078))
(assert (axiom_int_approximation x1079))
(assert (axiom_int_approximation x108))
(assert (axiom_int_approximation x1080))
(assert (axiom_int_approximation x1082))
(assert (axiom_int_approximation x1083))
(assert (axiom_int_approximation x1086))
(assert (axiom_int_approximation x1088))
(assert (axiom_int_approximation x1090))
(assert (axiom_int_approximation x1092))
(assert (axiom_int_approximation x1093))
(assert (axiom_int_approximation x1094))
(assert (axiom_int_approximation x1098))
(assert (axiom_int_approximation x1107))
(assert (axiom_int_approximation x1110))
(assert (axiom_int_approximation x1111))
(assert (axiom_int_approximation x1115))
(assert (axiom_int_approximation x1123))
(assert (axiom_int_approximation x1126))
(assert (axiom_int_approximation x1128))
(assert (axiom_int_approximation x1130))
(assert (axiom_int_approximation x1131))
(assert (axiom_int_approximation x1132))
(assert (axiom_int_approximation x1136))
(assert (axiom_int_approximation x1140))
(assert (axiom_int_approximation x1142))
(assert (axiom_int_approximation x1143))
(assert (axiom_int_approximation x1144))
(assert (axiom_int_approximation x1145))
(assert (axiom_int_approximation x1149))
(assert (axiom_int_approximation x115))
(assert (axiom_int_approximation x1153))
(assert (axiom_int_approximation x1155))
(assert (axiom_int_approximation x1156))
(assert (axiom_int_approximation x1160))
(assert (axiom_int_approximation x1163))
(assert (axiom_int_approximation x1168))
(assert (axiom_int_approximation x1174))
(assert (axiom_int_approximation x1176))
(assert (axiom_int_approximation x1178))
(assert (axiom_int_approximation x118))
(assert (axiom_int_approximation x1182))
(assert (axiom_int_approximation x1186))
(assert (axiom_int_approximation x119))
(assert (axiom_int_approximation x1191))
(assert (axiom_int_approximation x1194))
(assert (axiom_int_approximation x1199))
(assert (axiom_int_approximation x120))
(assert (axiom_int_approximation x1200))
(assert (axiom_int_approximation x1201))
(assert (axiom_int_approximation x1203))
(assert (axiom_int_approximation x1209))
(assert (axiom_int_approximation x121))
(assert (axiom_int_approximation x1212))
(assert (axiom_int_approximation x1216))
(assert (axiom_int_approximation x1217))
(assert (axiom_int_approximation x1219))
(assert (axiom_int_approximation x1220))
(assert (axiom_int_approximation x1221))
(assert (axiom_int_approximation x1226))
(assert (axiom_int_approximation x123))
(assert (axiom_int_approximation x1234))
(assert (axiom_int_approximation x1236))
(assert (axiom_int_approximation x1237))
(assert (axiom_int_approximation x1240))
(assert (axiom_int_approximation x1242))
(assert (axiom_int_approximation x1246))
(assert (axiom_int_approximation x1247))
(assert (axiom_int_approximation x1248))
(assert (axiom_int_approximation x125))
(assert (axiom_int_approximation x1250))
(assert (axiom_int_approximation x1255))
(assert (axiom_int_approximation x126))
(assert (axiom_int_approximation x1263))
(assert (axiom_int_approximation x1269))
(assert (axiom_int_approximation x127))
(assert (axiom_int_approximation x1270))
(assert (axiom_int_approximation x1271))
(assert (axiom_int_approximation x1272))
(assert (axiom_int_approximation x1274))
(assert (axiom_int_approximation x1276))
(assert (axiom_int_approximation x1278))
(assert (axiom_int_approximation x1282))
(assert (axiom_int_approximation x1284))
(assert (axiom_int_approximation x1285))
(assert (axiom_int_approximation x1286))
(assert (axiom_int_approximation x1287))
(assert (axiom_int_approximation x1288))
(assert (axiom_int_approximation x129))
(assert (axiom_int_approximation x1290))
(assert (axiom_int_approximation x13))
(assert (axiom_int_approximation x1305))
(assert (axiom_int_approximation x1306))
(assert (axiom_int_approximation x1307))
(assert (axiom_int_approximation x1309))
(assert (axiom_int_approximation x131))
(assert (axiom_int_approximation x1314))
(assert (axiom_int_approximation x1317))
(assert (axiom_int_approximation x1319))
(assert (axiom_int_approximation x1322))
(assert (axiom_int_approximation x1323))
(assert (axiom_int_approximation x1325))
(assert (axiom_int_approximation x1329))
(assert (axiom_int_approximation x1337))
(assert (axiom_int_approximation x134))
(assert (axiom_int_approximation x1340))
(assert (axiom_int_approximation x1344))
(assert (axiom_int_approximation x1345))
(assert (axiom_int_approximation x1347))
(assert (axiom_int_approximation x1348))
(assert (axiom_int_approximation x1349))
(assert (axiom_int_approximation x1355))
(assert (axiom_int_approximation x1356))
(assert (axiom_int_approximation x1359))
(assert (axiom_int_approximation x1362))
(assert (axiom_int_approximation x1363))
(assert (axiom_int_approximation x1364))
(assert (axiom_int_approximation x1365))
(assert (axiom_int_approximation x1366))
(assert (axiom_int_approximation x1368))
(assert (axiom_int_approximation x1369))
(assert (axiom_int_approximation x1370))
(assert (axiom_int_approximation x1372))
(assert (axiom_int_approximation x1375))
(assert (axiom_int_approximation x1376))
(assert (axiom_int_approximation x1380))
(assert (axiom_int_approximation x1383))
(assert (axiom_int_approximation x1390))
(assert (axiom_int_approximation x1395))
(assert (axiom_int_approximation x1399))
(assert (axiom_int_approximation x14))
(assert (axiom_int_approximation x140))
(assert (axiom_int_approximation x1403))
(assert (axiom_int_approximation x1406))
(assert (axiom_int_approximation x1409))
(assert (axiom_int_approximation x1411))
(assert (axiom_int_approximation x1412))
(assert (axiom_int_approximation x1415))
(assert (axiom_int_approximation x142))
(assert (axiom_int_approximation x1420))
(assert (axiom_int_approximation x1421))
(assert (axiom_int_approximation x1423))
(assert (axiom_int_approximation x1425))
(assert (axiom_int_approximation x1431))
(assert (axiom_int_approximation x1433))
(assert (axiom_int_approximation x1435))
(assert (axiom_int_approximation x1437))
(assert (axiom_int_approximation x1438))
(assert (axiom_int_approximation x1439))
(assert (axiom_int_approximation x144))
(assert (axiom_int_approximation x1441))
(assert (axiom_int_approximation x1443))
(assert (axiom_int_approximation x1444))
(assert (axiom_int_approximation x1445))
(assert (axiom_int_approximation x1447))
(assert (axiom_int_approximation x1453))
(assert (axiom_int_approximation x1455))
(assert (axiom_int_approximation x1456))
(assert (axiom_int_approximation x1457))
(assert (axiom_int_approximation x146))
(assert (axiom_int_approximation x1467))
(assert (axiom_int_approximation x1470))
(assert (axiom_int_approximation x1471))
(assert (axiom_int_approximation x1472))
(assert (axiom_int_approximation x1473))
(assert (axiom_int_approximation x1474))
(assert (axiom_int_approximation x1475))
(assert (axiom_int_approximation x1476))
(assert (axiom_int_approximation x1477))
(assert (axiom_int_approximation x1478))
(assert (axiom_int_approximation x1479))
(assert (axiom_int_approximation x1484))
(assert (axiom_int_approximation x1489))
(assert (axiom_int_approximation x1490))
(assert (axiom_int_approximation x1491))
(assert (axiom_int_approximation x1492))
(assert (axiom_int_approximation x1493))
(assert (axiom_int_approximation x1497))
(assert (axiom_int_approximation x1501))
(assert (axiom_int_approximation x1502))
(assert (axiom_int_approximation x1503))
(assert (axiom_int_approximation x1506))
(assert (axiom_int_approximation x1507))
(assert (axiom_int_approximation x1509))
(assert (axiom_int_approximation x151))
(assert (axiom_int_approximation x1511))
(assert (axiom_int_approximation x1514))
(assert (axiom_int_approximation x152))
(assert (axiom_int_approximation x1522))
(assert (axiom_int_approximation x1524))
(assert (axiom_int_approximation x1526))
(assert (axiom_int_approximation x1531))
(assert (axiom_int_approximation x154))
(assert (axiom_int_approximation x1540))
(assert (axiom_int_approximation x1542))
(assert (axiom_int_approximation x1546))
(assert (axiom_int_approximation x1550))
(assert (axiom_int_approximation x1554))
(assert (axiom_int_approximation x156))
(assert (axiom_int_approximation x1562))
(assert (axiom_int_approximation x1566))
(assert (axiom_int_approximation x1567))
(assert (axiom_int_approximation x1568))
(assert (axiom_int_approximation x1574))
(assert (axiom_int_approximation x1577))
(assert (axiom_int_approximation x158))
(assert (axiom_int_approximation x1580))
(assert (axiom_int_approximation x1583))
(assert (axiom_int_approximation x1585))
(assert (axiom_int_approximation x1586))
(assert (axiom_int_approximation x1592))
(assert (axiom_int_approximation x1593))
(assert (axiom_int_approximation x1597))
(assert (axiom_int_approximation x1599))
(assert (axiom_int_approximation x1600))
(assert (axiom_int_approximation x1602))
(assert (axiom_int_approximation x1605))
(assert (axiom_int_approximation x1606))
(assert (axiom_int_approximation x1607))
(assert (axiom_int_approximation x1608))
(assert (axiom_int_approximation x161))
(assert (axiom_int_approximation x1612))
(assert (axiom_int_approximation x1613))
(assert (axiom_int_approximation x1614))
(assert (axiom_int_approximation x1616))
(assert (axiom_int_approximation x1619))
(assert (axiom_int_approximation x1621))
(assert (axiom_int_approximation x1622))
(assert (axiom_int_approximation x1623))
(assert (axiom_int_approximation x1628))
(assert (axiom_int_approximation x163))
(assert (axiom_int_approximation x1630))
(assert (axiom_int_approximation x1631))
(assert (axiom_int_approximation x1632))
(assert (axiom_int_approximation x1640))
(assert (axiom_int_approximation x1646))
(assert (axiom_int_approximation x1650))
(assert (axiom_int_approximation x1653))
(assert (axiom_int_approximation x1655))
(assert (axiom_int_approximation x1656))
(assert (axiom_int_approximation x1658))
(assert (axiom_int_approximation x166))
(assert (axiom_int_approximation x1662))
(assert (axiom_int_approximation x1663))
(assert (axiom_int_approximation x1664))
(assert (axiom_int_approximation x1666))
(assert (axiom_int_approximation x167))
(assert (axiom_int_approximation x1670))
(assert (axiom_int_approximation x1673))
(assert (axiom_int_approximation x1676))
(assert (axiom_int_approximation x168))
(assert (axiom_int_approximation x1681))
(assert (axiom_int_approximation x1682))
(assert (axiom_int_approximation x1684))
(assert (axiom_int_approximation x1688))
(assert (axiom_int_approximation x1689))
(assert (axiom_int_approximation x1691))
(assert (axiom_int_approximation x1692))
(assert (axiom_int_approximation x1693))
(assert (axiom_int_approximation x1694))
(assert (axiom_int_approximation x1695))
(assert (axiom_int_approximation x17))
(assert (axiom_int_approximation x1700))
(assert (axiom_int_approximation x1701))
(assert (axiom_int_approximation x1706))
(assert (axiom_int_approximation x1707))
(assert (axiom_int_approximation x1708))
(assert (axiom_int_approximation x1709))
(assert (axiom_int_approximation x171))
(assert (axiom_int_approximation x1710))
(assert (axiom_int_approximation x1712))
(assert (axiom_int_approximation x1713))
(assert (axiom_int_approximation x1714))
(assert (axiom_int_approximation x1716))
(assert (axiom_int_approximation x1717))
(assert (axiom_int_approximation x172))
(assert (axiom_int_approximation x1724))
(assert (axiom_int_approximation x1726))
(assert (axiom_int_approximation x1727))
(assert (axiom_int_approximation x1729))
(assert (axiom_int_approximation x173))
(assert (axiom_int_approximation x1733))
(assert (axiom_int_approximation x1738))
(assert (axiom_int_approximation x1739))
(assert (axiom_int_approximation x174))
(assert (axiom_int_approximation x1740))
(assert (axiom_int_approximation x1743))
(assert (axiom_int_approximation x1745))
(assert (axiom_int_approximation x1746))
(assert (axiom_int_approximation x1747))
(assert (axiom_int_approximation x1753))
(assert (axiom_int_approximation x1756))
(assert (axiom_int_approximation x1759))
(assert (axiom_int_approximation x1760))
(assert (axiom_int_approximation x1766))
(assert (axiom_int_approximation x1769))
(assert (axiom_int_approximation x1771))
(assert (axiom_int_approximation x1773))
(assert (axiom_int_approximation x1774))
(assert (axiom_int_approximation x1777))
(assert (axiom_int_approximation x1781))
(assert (axiom_int_approximation x1783))
(assert (axiom_int_approximation x1784))
(assert (axiom_int_approximation x1785))
(assert (axiom_int_approximation x1786))
(assert (axiom_int_approximation x1787))
(assert (axiom_int_approximation x1788))
(assert (axiom_int_approximation x1790))
(assert (axiom_int_approximation x1792))
(assert (axiom_int_approximation x1795))
(assert (axiom_int_approximation x1797))
(assert (axiom_int_approximation x1798))
(assert (axiom_int_approximation x18))
(assert (axiom_int_approximation x1802))
(assert (axiom_int_approximation x1803))
(assert (axiom_int_approximation x1807))
(assert (axiom_int_approximation x1808))
(assert (axiom_int_approximation x1810))
(assert (axiom_int_approximation x1813))
(assert (axiom_int_approximation x1814))
(assert (axiom_int_approximation x1816))
(assert (axiom_int_approximation x1819))
(assert (axiom_int_approximation x1820))
(assert (axiom_int_approximation x1825))
(assert (axiom_int_approximation x1826))
(assert (axiom_int_approximation x1829))
(assert (axiom_int_approximation x1830))
(assert (axiom_int_approximation x1835))
(assert (axiom_int_approximation x1837))
(assert (axiom_int_approximation x1839))
(assert (axiom_int_approximation x1844))
(assert (axiom_int_approximation x1845))
(assert (axiom_int_approximation x1846))
(assert (axiom_int_approximation x1847))
(assert (axiom_int_approximation x1849))
(assert (axiom_int_approximation x1850))
(assert (axiom_int_approximation x1851))
(assert (axiom_int_approximation x1853))
(assert (axiom_int_approximation x1856))
(assert (axiom_int_approximation x1859))
(assert (axiom_int_approximation x186))
(assert (axiom_int_approximation x1861))
(assert (axiom_int_approximation x1867))
(assert (axiom_int_approximation x1869))
(assert (axiom_int_approximation x1870))
(assert (axiom_int_approximation x1873))
(assert (axiom_int_approximation x1874))
(assert (axiom_int_approximation x1875))
(assert (axiom_int_approximation x1876))
(assert (axiom_int_approximation x1877))
(assert (axiom_int_approximation x1878))
(assert (axiom_int_approximation x188))
(assert (axiom_int_approximation x1880))
(assert (axiom_int_approximation x1882))
(assert (axiom_int_approximation x1884))
(assert (axiom_int_approximation x1885))
(assert (axiom_int_approximation x1886))
(assert (axiom_int_approximation x1887))
(assert (axiom_int_approximation x1891))
(assert (axiom_int_approximation x1896))
(assert (axiom_int_approximation x1897))
(assert (axiom_int_approximation x1899))
(assert (axiom_int_approximation x19))
(assert (axiom_int_approximation x190))
(assert (axiom_int_approximation x1902))
(assert (axiom_int_approximation x1904))
(assert (axiom_int_approximation x1905))
(assert (axiom_int_approximation x1906))
(assert (axiom_int_approximation x1909))
(assert (axiom_int_approximation x191))
(assert (axiom_int_approximation x1910))
(assert (axiom_int_approximation x1912))
(assert (axiom_int_approximation x1914))
(assert (axiom_int_approximation x1918))
(assert (axiom_int_approximation x1919))
(assert (axiom_int_approximation x1921))
(assert (axiom_int_approximation x1923))
(assert (axiom_int_approximation x1926))
(assert (axiom_int_approximation x1927))
(assert (axiom_int_approximation x1929))
(assert (axiom_int_approximation x193))
(assert (axiom_int_approximation x1931))
(assert (axiom_int_approximation x1933))
(assert (axiom_int_approximation x1936))
(assert (axiom_int_approximation x194))
(assert (axiom_int_approximation x1941))
(assert (axiom_int_approximation x1942))
(assert (axiom_int_approximation x1946))
(assert (axiom_int_approximation x1947))
(assert (axiom_int_approximation x195))
(assert (axiom_int_approximation x1953))
(assert (axiom_int_approximation x1964))
(assert (axiom_int_approximation x1966))
(assert (axiom_int_approximation x1967))
(assert (axiom_int_approximation x1969))
(assert (axiom_int_approximation x1970))
(assert (axiom_int_approximation x1976))
(assert (axiom_int_approximation x198))
(assert (axiom_int_approximation x1980))
(assert (axiom_int_approximation x1982))
(assert (axiom_int_approximation x1984))
(assert (axiom_int_approximation x1986))
(assert (axiom_int_approximation x1987))
(assert (axiom_int_approximation x1988))
(assert (axiom_int_approximation x1989))
(assert (axiom_int_approximation x1991))
(assert (axiom_int_approximation x1993))
(assert (axiom_int_approximation x2001))
(assert (axiom_int_approximation x2004))
(assert (axiom_int_approximation x2005))
(assert (axiom_int_approximation x2007))
(assert (axiom_int_approximation x2008))
(assert (axiom_int_approximation x2009))
(assert (axiom_int_approximation x2012))
(assert (axiom_int_approximation x202))
(assert (axiom_int_approximation x2020))
(assert (axiom_int_approximation x2021))
(assert (axiom_int_approximation x2022))
(assert (axiom_int_approximation x2023))
(assert (axiom_int_approximation x2024))
(assert (axiom_int_approximation x2033))
(assert (axiom_int_approximation x2037))
(assert (axiom_int_approximation x204))
(assert (axiom_int_approximation x2045))
(assert (axiom_int_approximation x2053))
(assert (axiom_int_approximation x2055))
(assert (axiom_int_approximation x2059))
(assert (axiom_int_approximation x2061))
(assert (axiom_int_approximation x2064))
(assert (axiom_int_approximation x2065))
(assert (axiom_int_approximation x2066))
(assert (axiom_int_approximation x2069))
(assert (axiom_int_approximation x2071))
(assert (axiom_int_approximation x2076))
(assert (axiom_int_approximation x2077))
(assert (axiom_int_approximation x2079))
(assert (axiom_int_approximation x2080))
(assert (axiom_int_approximation x2082))
(assert (axiom_int_approximation x2083))
(assert (axiom_int_approximation x2085))
(assert (axiom_int_approximation x209))
(assert (axiom_int_approximation x2090))
(assert (axiom_int_approximation x2091))
(assert (axiom_int_approximation x2092))
(assert (axiom_int_approximation x2095))
(assert (axiom_int_approximation x2096))
(assert (axiom_int_approximation x2097))
(assert (axiom_int_approximation x2101))
(assert (axiom_int_approximation x2105))
(assert (axiom_int_approximation x2106))
(assert (axiom_int_approximation x2108))
(assert (axiom_int_approximation x2111))
(assert (axiom_int_approximation x2113))
(assert (axiom_int_approximation x2118))
(assert (axiom_int_approximation x2121))
(assert (axiom_int_approximation x2128))
(assert (axiom_int_approximation x2129))
(assert (axiom_int_approximation x2132))
(assert (axiom_int_approximation x2134))
(assert (axiom_int_approximation x214))
(assert (axiom_int_approximation x2141))
(assert (axiom_int_approximation x2142))
(assert (axiom_int_approximation x2143))
(assert (axiom_int_approximation x2147))
(assert (axiom_int_approximation x2148))
(assert (axiom_int_approximation x2149))
(assert (axiom_int_approximation x2150))
(assert (axiom_int_approximation x2151))
(assert (axiom_int_approximation x2152))
(assert (axiom_int_approximation x2156))
(assert (axiom_int_approximation x2162))
(assert (axiom_int_approximation x2164))
(assert (axiom_int_approximation x2166))
(assert (axiom_int_approximation x217))
(assert (axiom_int_approximation x2172))
(assert (axiom_int_approximation x2173))
(assert (axiom_int_approximation x2175))
(assert (axiom_int_approximation x2176))
(assert (axiom_int_approximation x2177))
(assert (axiom_int_approximation x2179))
(assert (axiom_int_approximation x218))
(assert (axiom_int_approximation x2180))
(assert (axiom_int_approximation x2181))
(assert (axiom_int_approximation x2182))
(assert (axiom_int_approximation x2184))
(assert (axiom_int_approximation x2187))
(assert (axiom_int_approximation x2188))
(assert (axiom_int_approximation x219))
(assert (axiom_int_approximation x2190))
(assert (axiom_int_approximation x2193))
(assert (axiom_int_approximation x2196))
(assert (axiom_int_approximation x2198))
(assert (axiom_int_approximation x2199))
(assert (axiom_int_approximation x220))
(assert (axiom_int_approximation x2200))
(assert (axiom_int_approximation x2201))
(assert (axiom_int_approximation x2202))
(assert (axiom_int_approximation x2204))
(assert (axiom_int_approximation x2205))
(assert (axiom_int_approximation x2208))
(assert (axiom_int_approximation x2209))
(assert (axiom_int_approximation x221))
(assert (axiom_int_approximation x2211))
(assert (axiom_int_approximation x2212))
(assert (axiom_int_approximation x2215))
(assert (axiom_int_approximation x2216))
(assert (axiom_int_approximation x2218))
(assert (axiom_int_approximation x2227))
(assert (axiom_int_approximation x2228))
(assert (axiom_int_approximation x2231))
(assert (axiom_int_approximation x2235))
(assert (axiom_int_approximation x2236))
(assert (axiom_int_approximation x2239))
(assert (axiom_int_approximation x2240))
(assert (axiom_int_approximation x2244))
(assert (axiom_int_approximation x2246))
(assert (axiom_int_approximation x2247))
(assert (axiom_int_approximation x2248))
(assert (axiom_int_approximation x225))
(assert (axiom_int_approximation x2255))
(assert (axiom_int_approximation x2256))
(assert (axiom_int_approximation x226))
(assert (axiom_int_approximation x2261))
(assert (axiom_int_approximation x2262))
(assert (axiom_int_approximation x2263))
(assert (axiom_int_approximation x2267))
(assert (axiom_int_approximation x2270))
(assert (axiom_int_approximation x2272))
(assert (axiom_int_approximation x2275))
(assert (axiom_int_approximation x2278))
(assert (axiom_int_approximation x2280))
(assert (axiom_int_approximation x2282))
(assert (axiom_int_approximation x2285))
(assert (axiom_int_approximation x2287))
(assert (axiom_int_approximation x229))
(assert (axiom_int_approximation x2290))
(assert (axiom_int_approximation x2294))
(assert (axiom_int_approximation x2296))
(assert (axiom_int_approximation x2297))
(assert (axiom_int_approximation x2299))
(assert (axiom_int_approximation x2303))
(assert (axiom_int_approximation x2307))
(assert (axiom_int_approximation x231))
(assert (axiom_int_approximation x2311))
(assert (axiom_int_approximation x2313))
(assert (axiom_int_approximation x2316))
(assert (axiom_int_approximation x2318))
(assert (axiom_int_approximation x2321))
(assert (axiom_int_approximation x2322))
(assert (axiom_int_approximation x2323))
(assert (axiom_int_approximation x2325))
(assert (axiom_int_approximation x2327))
(assert (axiom_int_approximation x2328))
(assert (axiom_int_approximation x233))
(assert (axiom_int_approximation x2330))
(assert (axiom_int_approximation x2332))
(assert (axiom_int_approximation x2334))
(assert (axiom_int_approximation x2336))
(assert (axiom_int_approximation x2341))
(assert (axiom_int_approximation x2345))
(assert (axiom_int_approximation x2346))
(assert (axiom_int_approximation x2347))
(assert (axiom_int_approximation x2349))
(assert (axiom_int_approximation x2350))
(assert (axiom_int_approximation x2351))
(assert (axiom_int_approximation x2352))
(assert (axiom_int_approximation x2353))
(assert (axiom_int_approximation x2355))
(assert (axiom_int_approximation x2356))
(assert (axiom_int_approximation x2357))
(assert (axiom_int_approximation x2363))
(assert (axiom_int_approximation x2366))
(assert (axiom_int_approximation x2369))
(assert (axiom_int_approximation x2372))
(assert (axiom_int_approximation x2373))
(assert (axiom_int_approximation x2374))
(assert (axiom_int_approximation x2375))
(assert (axiom_int_approximation x2376))
(assert (axiom_int_approximation x2377))
(assert (axiom_int_approximation x2378))
(assert (axiom_int_approximation x238))
(assert (axiom_int_approximation x2380))
(assert (axiom_int_approximation x2383))
(assert (axiom_int_approximation x2384))
(assert (axiom_int_approximation x2385))
(assert (axiom_int_approximation x2388))
(assert (axiom_int_approximation x2392))
(assert (axiom_int_approximation x2395))
(assert (axiom_int_approximation x2396))
(assert (axiom_int_approximation x24))
(assert (axiom_int_approximation x2411))
(assert (axiom_int_approximation x2415))
(assert (axiom_int_approximation x2419))
(assert (axiom_int_approximation x2425))
(assert (axiom_int_approximation x2434))
(assert (axiom_int_approximation x2439))
(assert (axiom_int_approximation x2441))
(assert (axiom_int_approximation x2443))
(assert (axiom_int_approximation x2444))
(assert (axiom_int_approximation x2447))
(assert (axiom_int_approximation x2448))
(assert (axiom_int_approximation x2450))
(assert (axiom_int_approximation x2456))
(assert (axiom_int_approximation x2457))
(assert (axiom_int_approximation x2458))
(assert (axiom_int_approximation x2462))
(assert (axiom_int_approximation x2464))
(assert (axiom_int_approximation x2468))
(assert (axiom_int_approximation x247))
(assert (axiom_int_approximation x2473))
(assert (axiom_int_approximation x2474))
(assert (axiom_int_approximation x2475))
(assert (axiom_int_approximation x2477))
(assert (axiom_int_approximation x2479))
(assert (axiom_int_approximation x2480))
(assert (axiom_int_approximation x2482))
(assert (axiom_int_approximation x2486))
(assert (axiom_int_approximation x2487))
(assert (axiom_int_approximation x2493))
(assert (axiom_int_approximation x2494))
(assert (axiom_int_approximation x2498))
(assert (axiom_int_approximation x25))
(assert (axiom_int_approximation x2500))
(assert (axiom_int_approximation x2502))
(assert (axiom_int_approximation x2506))
(assert (axiom_int_approximation x2510))
(assert (axiom_int_approximation x2511))
(assert (axiom_int_approximation x2512))
(assert (axiom_int_approximation x2515))
(assert (axiom_int_approximation x2517))
(assert (axiom_int_approximation x2518))
(assert (axiom_int_approximation x2520))
(assert (axiom_int_approximation x2523))
(assert (axiom_int_approximation x2524))
(assert (axiom_int_approximation x2528))
(assert (axiom_int_approximation x2530))
(assert (axiom_int_approximation x2533))
(assert (axiom_int_approximation x2538))
(assert (axiom_int_approximation x2539))
(assert (axiom_int_approximation x2546))
(assert (axiom_int_approximation x2548))
(assert (axiom_int_approximation x2550))
(assert (axiom_int_approximation x2551))
(assert (axiom_int_approximation x2552))
(assert (axiom_int_approximation x2553))
(assert (axiom_int_approximation x2556))
(assert (axiom_int_approximation x2558))
(assert (axiom_int_approximation x2560))
(assert (axiom_int_approximation x2561))
(assert (axiom_int_approximation x2566))
(assert (axiom_int_approximation x2569))
(assert (axiom_int_approximation x2570))
(assert (axiom_int_approximation x2572))
(assert (axiom_int_approximation x2574))
(assert (axiom_int_approximation x2579))
(assert (axiom_int_approximation x258))
(assert (axiom_int_approximation x2580))
(assert (axiom_int_approximation x2582))
(assert (axiom_int_approximation x2584))
(assert (axiom_int_approximation x2587))
(assert (axiom_int_approximation x2591))
(assert (axiom_int_approximation x2593))
(assert (axiom_int_approximation x2600))
(assert (axiom_int_approximation x2605))
(assert (axiom_int_approximation x2607))
(assert (axiom_int_approximation x2608))
(assert (axiom_int_approximation x2609))
(assert (axiom_int_approximation x261))
(assert (axiom_int_approximation x2610))
(assert (axiom_int_approximation x2616))
(assert (axiom_int_approximation x2621))
(assert (axiom_int_approximation x2625))
(assert (axiom_int_approximation x2628))
(assert (axiom_int_approximation x2629))
(assert (axiom_int_approximation x2630))
(assert (axiom_int_approximation x2632))
(assert (axiom_int_approximation x2633))
(assert (axiom_int_approximation x2636))
(assert (axiom_int_approximation x2637))
(assert (axiom_int_approximation x2642))
(assert (axiom_int_approximation x2646))
(assert (axiom_int_approximation x2647))
(assert (axiom_int_approximation x2648))
(assert (axiom_int_approximation x2649))
(assert (axiom_int_approximation x265))
(assert (axiom_int_approximation x2650))
(assert (axiom_int_approximation x2654))
(assert (axiom_int_approximation x2657))
(assert (axiom_int_approximation x2659))
(assert (axiom_int_approximation x2661))
(assert (axiom_int_approximation x2663))
(assert (axiom_int_approximation x2664))
(assert (axiom_int_approximation x2665))
(assert (axiom_int_approximation x2667))
(assert (axiom_int_approximation x2670))
(assert (axiom_int_approximation x2671))
(assert (axiom_int_approximation x2672))
(assert (axiom_int_approximation x268))
(assert (axiom_int_approximation x2680))
(assert (axiom_int_approximation x2681))
(assert (axiom_int_approximation x2682))
(assert (axiom_int_approximation x2686))
(assert (axiom_int_approximation x2687))
(assert (axiom_int_approximation x2689))
(assert (axiom_int_approximation x2690))
(assert (axiom_int_approximation x2694))
(assert (axiom_int_approximation x2696))
(assert (axiom_int_approximation x2702))
(assert (axiom_int_approximation x2703))
(assert (axiom_int_approximation x2707))
(assert (axiom_int_approximation x2710))
(assert (axiom_int_approximation x2711))
(assert (axiom_int_approximation x2713))
(assert (axiom_int_approximation x2717))
(assert (axiom_int_approximation x2719))
(assert (axiom_int_approximation x272))
(assert (axiom_int_approximation x2721))
(assert (axiom_int_approximation x2722))
(assert (axiom_int_approximation x2725))
(assert (axiom_int_approximation x2727))
(assert (axiom_int_approximation x2728))
(assert (axiom_int_approximation x273))
(assert (axiom_int_approximation x2730))
(assert (axiom_int_approximation x2737))
(assert (axiom_int_approximation x274))
(assert (axiom_int_approximation x2740))
(assert (axiom_int_approximation x2741))
(assert (axiom_int_approximation x2742))
(assert (axiom_int_approximation x2743))
(assert (axiom_int_approximation x2748))
(assert (axiom_int_approximation x275))
(assert (axiom_int_approximation x2758))
(assert (axiom_int_approximation x2762))
(assert (axiom_int_approximation x2764))
(assert (axiom_int_approximation x2768))
(assert (axiom_int_approximation x2773))
(assert (axiom_int_approximation x2777))
(assert (axiom_int_approximation x278))
(assert (axiom_int_approximation x2782))
(assert (axiom_int_approximation x2789))
(assert (axiom_int_approximation x2790))
(assert (axiom_int_approximation x2791))
(assert (axiom_int_approximation x2792))
(assert (axiom_int_approximation x2796))
(assert (axiom_int_approximation x2797))
(assert (axiom_int_approximation x2800))
(assert (axiom_int_approximation x2804))
(assert (axiom_int_approximation x2805))
(assert (axiom_int_approximation x2808))
(assert (axiom_int_approximation x2816))
(assert (axiom_int_approximation x2820))
(assert (axiom_int_approximation x2821))
(assert (axiom_int_approximation x2822))
(assert (axiom_int_approximation x2825))
(assert (axiom_int_approximation x2829))
(assert (axiom_int_approximation x2832))
(assert (axiom_int_approximation x2835))
(assert (axiom_int_approximation x2837))
(assert (axiom_int_approximation x2838))
(assert (axiom_int_approximation x2839))
(assert (axiom_int_approximation x2841))
(assert (axiom_int_approximation x2843))
(assert (axiom_int_approximation x2844))
(assert (axiom_int_approximation x2847))
(assert (axiom_int_approximation x285))
(assert (axiom_int_approximation x2855))
(assert (axiom_int_approximation x2859))
(assert (axiom_int_approximation x286))
(assert (axiom_int_approximation x2861))
(assert (axiom_int_approximation x2862))
(assert (axiom_int_approximation x2863))
(assert (axiom_int_approximation x2865))
(assert (axiom_int_approximation x2869))
(assert (axiom_int_approximation x287))
(assert (axiom_int_approximation x2872))
(assert (axiom_int_approximation x2873))
(assert (axiom_int_approximation x2874))
(assert (axiom_int_approximation x2876))
(assert (axiom_int_approximation x2877))
(assert (axiom_int_approximation x2878))
(assert (axiom_int_approximation x2882))
(assert (axiom_int_approximation x2884))
(assert (axiom_int_approximation x2886))
(assert (axiom_int_approximation x2887))
(assert (axiom_int_approximation x289))
(assert (axiom_int_approximation x2891))
(assert (axiom_int_approximation x2896))
(assert (axiom_int_approximation x2898))
(assert (axiom_int_approximation x2900))
(assert (axiom_int_approximation x2905))
(assert (axiom_int_approximation x2911))
(assert (axiom_int_approximation x2912))
(assert (axiom_int_approximation x2917))
(assert (axiom_int_approximation x292))
(assert (axiom_int_approximation x2920))
(assert (axiom_int_approximation x2924))
(assert (axiom_int_approximation x2926))
(assert (axiom_int_approximation x2927))
(assert (axiom_int_approximation x2929))
(assert (axiom_int_approximation x293))
(assert (axiom_int_approximation x2930))
(assert (axiom_int_approximation x2932))
(assert (axiom_int_approximation x2933))
(assert (axiom_int_approximation x2936))
(assert (axiom_int_approximation x2939))
(assert (axiom_int_approximation x2940))
(assert (axiom_int_approximation x2942))
(assert (axiom_int_approximation x2943))
(assert (axiom_int_approximation x2953))
(assert (axiom_int_approximation x2957))
(assert (axiom_int_approximation x2960))
(assert (axiom_int_approximation x2962))
(assert (axiom_int_approximation x2963))
(assert (axiom_int_approximation x2965))
(assert (axiom_int_approximation x2966))
(assert (axiom_int_approximation x2967))
(assert (axiom_int_approximation x2974))
(assert (axiom_int_approximation x2976))
(assert (axiom_int_approximation x2978))
(assert (axiom_int_approximation x2982))
(assert (axiom_int_approximation x2986))
(assert (axiom_int_approximation x2987))
(assert (axiom_int_approximation x2991))
(assert (axiom_int_approximation x2992))
(assert (axiom_int_approximation x2999))
(assert (axiom_int_approximation x300))
(assert (axiom_int_approximation x3002))
(assert (axiom_int_approximation x3004))
(assert (axiom_int_approximation x3007))
(assert (axiom_int_approximation x3008))
(assert (axiom_int_approximation x3014))
(assert (axiom_int_approximation x3018))
(assert (axiom_int_approximation x3022))
(assert (axiom_int_approximation x3023))
(assert (axiom_int_approximation x3024))
(assert (axiom_int_approximation x303))
(assert (axiom_int_approximation x3030))
(assert (axiom_int_approximation x3032))
(assert (axiom_int_approximation x3033))
(assert (axiom_int_approximation x3037))
(assert (axiom_int_approximation x304))
(assert (axiom_int_approximation x3045))
(assert (axiom_int_approximation x3048))
(assert (axiom_int_approximation x3053))
(assert (axiom_int_approximation x3057))
(assert (axiom_int_approximation x3059))
(assert (axiom_int_approximation x306))
(assert (axiom_int_approximation x3062))
(assert (axiom_int_approximation x3066))
(assert (axiom_int_approximation x3067))
(assert (axiom_int_approximation x3068))
(assert (axiom_int_approximation x3069))
(assert (axiom_int_approximation x307))
(assert (axiom_int_approximation x3071))
(assert (axiom_int_approximation x3072))
(assert (axiom_int_approximation x3073))
(assert (axiom_int_approximation x3078))
(assert (axiom_int_approximation x3080))
(assert (axiom_int_approximation x3083))
(assert (axiom_int_approximation x3084))
(assert (axiom_int_approximation x3085))
(assert (axiom_int_approximation x3086))
(assert (axiom_int_approximation x3088))
(assert (axiom_int_approximation x3089))
(assert (axiom_int_approximation x3091))
(assert (axiom_int_approximation x310))
(assert (axiom_int_approximation x3101))
(assert (axiom_int_approximation x3106))
(assert (axiom_int_approximation x3109))
(assert (axiom_int_approximation x3110))
(assert (axiom_int_approximation x3114))
(assert (axiom_int_approximation x3115))
(assert (axiom_int_approximation x3118))
(assert (axiom_int_approximation x3119))
(assert (axiom_int_approximation x3121))
(assert (axiom_int_approximation x3123))
(assert (axiom_int_approximation x3124))
(assert (axiom_int_approximation x3127))
(assert (axiom_int_approximation x3128))
(assert (axiom_int_approximation x3130))
(assert (axiom_int_approximation x3134))
(assert (axiom_int_approximation x3137))
(assert (axiom_int_approximation x3138))
(assert (axiom_int_approximation x3140))
(assert (axiom_int_approximation x3141))
(assert (axiom_int_approximation x3142))
(assert (axiom_int_approximation x3143))
(assert (axiom_int_approximation x3144))
(assert (axiom_int_approximation x3145))
(assert (axiom_int_approximation x3146))
(assert (axiom_int_approximation x319))
(assert (axiom_int_approximation x320))
(assert (axiom_int_approximation x322))
(assert (axiom_int_approximation x324))
(assert (axiom_int_approximation x325))
(assert (axiom_int_approximation x326))
(assert (axiom_int_approximation x329))
(assert (axiom_int_approximation x33))
(assert (axiom_int_approximation x330))
(assert (axiom_int_approximation x332))
(assert (axiom_int_approximation x334))
(assert (axiom_int_approximation x335))
(assert (axiom_int_approximation x337))
(assert (axiom_int_approximation x338))
(assert (axiom_int_approximation x34))
(assert (axiom_int_approximation x341))
(assert (axiom_int_approximation x342))
(assert (axiom_int_approximation x344))
(assert (axiom_int_approximation x345))
(assert (axiom_int_approximation x352))
(assert (axiom_int_approximation x353))
(assert (axiom_int_approximation x354))
(assert (axiom_int_approximation x358))
(assert (axiom_int_approximation x362))
(assert (axiom_int_approximation x364))
(assert (axiom_int_approximation x366))
(assert (axiom_int_approximation x367))
(assert (axiom_int_approximation x369))
(assert (axiom_int_approximation x37))
(assert (axiom_int_approximation x371))
(assert (axiom_int_approximation x372))
(assert (axiom_int_approximation x374))
(assert (axiom_int_approximation x376))
(assert (axiom_int_approximation x379))
(assert (axiom_int_approximation x384))
(assert (axiom_int_approximation x389))
(assert (axiom_int_approximation x392))
(assert (axiom_int_approximation x393))
(assert (axiom_int_approximation x401))
(assert (axiom_int_approximation x402))
(assert (axiom_int_approximation x403))
(assert (axiom_int_approximation x404))
(assert (axiom_int_approximation x406))
(assert (axiom_int_approximation x407))
(assert (axiom_int_approximation x408))
(assert (axiom_int_approximation x411))
(assert (axiom_int_approximation x413))
(assert (axiom_int_approximation x414))
(assert (axiom_int_approximation x415))
(assert (axiom_int_approximation x416))
(assert (axiom_int_approximation x417))
(assert (axiom_int_approximation x423))
(assert (axiom_int_approximation x424))
(assert (axiom_int_approximation x429))
(assert (axiom_int_approximation x433))
(assert (axiom_int_approximation x435))
(assert (axiom_int_approximation x436))
(assert (axiom_int_approximation x437))
(assert (axiom_int_approximation x44))
(assert (axiom_int_approximation x445))
(assert (axiom_int_approximation x448))
(assert (axiom_int_approximation x45))
(assert (axiom_int_approximation x450))
(assert (axiom_int_approximation x454))
(assert (axiom_int_approximation x456))
(assert (axiom_int_approximation x46))
(assert (axiom_int_approximation x462))
(assert (axiom_int_approximation x465))
(assert (axiom_int_approximation x469))
(assert (axiom_int_approximation x470))
(assert (axiom_int_approximation x471))
(assert (axiom_int_approximation x472))
(assert (axiom_int_approximation x473))
(assert (axiom_int_approximation x474))
(assert (axiom_int_approximation x475))
(assert (axiom_int_approximation x48))
(assert (axiom_int_approximation x481))
(assert (axiom_int_approximation x485))
(assert (axiom_int_approximation x489))
(assert (axiom_int_approximation x490))
(assert (axiom_int_approximation x491))
(assert (axiom_int_approximation x494))
(assert (axiom_int_approximation x498))
(assert (axiom_int_approximation x502))
(assert (axiom_int_approximation x503))
(assert (axiom_int_approximation x506))
(assert (axiom_int_approximation x507))
(assert (axiom_int_approximation x508))
(assert (axiom_int_approximation x51))
(assert (axiom_int_approximation x510))
(assert (axiom_int_approximation x512))
(assert (axiom_int_approximation x513))
(assert (axiom_int_approximation x514))
(assert (axiom_int_approximation x52))
(assert (axiom_int_approximation x520))
(assert (axiom_int_approximation x524))
(assert (axiom_int_approximation x527))
(assert (axiom_int_approximation x531))
(assert (axiom_int_approximation x537))
(assert (axiom_int_approximation x539))
(assert (axiom_int_approximation x540))
(assert (axiom_int_approximation x542))
(assert (axiom_int_approximation x543))
(assert (axiom_int_approximation x545))
(assert (axiom_int_approximation x548))
(assert (axiom_int_approximation x560))
(assert (axiom_int_approximation x563))
(assert (axiom_int_approximation x566))
(assert (axiom_int_approximation x569))
(assert (axiom_int_approximation x57))
(assert (axiom_int_approximation x573))
(assert (axiom_int_approximation x574))
(assert (axiom_int_approximation x576))
(assert (axiom_int_approximation x577))
(assert (axiom_int_approximation x579))
(assert (axiom_int_approximation x580))
(assert (axiom_int_approximation x582))
(assert (axiom_int_approximation x587))
(assert (axiom_int_approximation x589))
(assert (axiom_int_approximation x590))
(assert (axiom_int_approximation x594))
(assert (axiom_int_approximation x595))
(assert (axiom_int_approximation x597))
(assert (axiom_int_approximation x599))
(assert (axiom_int_approximation x6))
(assert (axiom_int_approximation x602))
(assert (axiom_int_approximation x603))
(assert (axiom_int_approximation x604))
(assert (axiom_int_approximation x607))
(assert (axiom_int_approximation x608))
(assert (axiom_int_approximation x61))
(assert (axiom_int_approximation x610))
(assert (axiom_int_approximation x615))
(assert (axiom_int_approximation x617))
(assert (axiom_int_approximation x620))
(assert (axiom_int_approximation x623))
(assert (axiom_int_approximation x624))
(assert (axiom_int_approximation x626))
(assert (axiom_int_approximation x63))
(assert (axiom_int_approximation x632))
(assert (axiom_int_approximation x638))
(assert (axiom_int_approximation x639))
(assert (axiom_int_approximation x64))
(assert (axiom_int_approximation x645))
(assert (axiom_int_approximation x649))
(assert (axiom_int_approximation x653))
(assert (axiom_int_approximation x654))
(assert (axiom_int_approximation x655))
(assert (axiom_int_approximation x659))
(assert (axiom_int_approximation x66))
(assert (axiom_int_approximation x662))
(assert (axiom_int_approximation x663))
(assert (axiom_int_approximation x667))
(assert (axiom_int_approximation x668))
(assert (axiom_int_approximation x669))
(assert (axiom_int_approximation x67))
(assert (axiom_int_approximation x673))
(assert (axiom_int_approximation x674))
(assert (axiom_int_approximation x675))
(assert (axiom_int_approximation x677))
(assert (axiom_int_approximation x679))
(assert (axiom_int_approximation x68))
(assert (axiom_int_approximation x680))
(assert (axiom_int_approximation x684))
(assert (axiom_int_approximation x689))
(assert (axiom_int_approximation x691))
(assert (axiom_int_approximation x695))
(assert (axiom_int_approximation x696))
(assert (axiom_int_approximation x697))
(assert (axiom_int_approximation x7))
(assert (axiom_int_approximation x700))
(assert (axiom_int_approximation x702))
(assert (axiom_int_approximation x707))
(assert (axiom_int_approximation x709))
(assert (axiom_int_approximation x71))
(assert (axiom_int_approximation x710))
(assert (axiom_int_approximation x711))
(assert (axiom_int_approximation x717))
(assert (axiom_int_approximation x719))
(assert (axiom_int_approximation x72))
(assert (axiom_int_approximation x720))
(assert (axiom_int_approximation x725))
(assert (axiom_int_approximation x726))
(assert (axiom_int_approximation x728))
(assert (axiom_int_approximation x729))
(assert (axiom_int_approximation x730))
(assert (axiom_int_approximation x735))
(assert (axiom_int_approximation x738))
(assert (axiom_int_approximation x740))
(assert (axiom_int_approximation x742))
(assert (axiom_int_approximation x743))
(assert (axiom_int_approximation x744))
(assert (axiom_int_approximation x748))
(assert (axiom_int_approximation x75))
(assert (axiom_int_approximation x757))
(assert (axiom_int_approximation x762))
(assert (axiom_int_approximation x763))
(assert (axiom_int_approximation x77))
(assert (axiom_int_approximation x770))
(assert (axiom_int_approximation x771))
(assert (axiom_int_approximation x772))
(assert (axiom_int_approximation x774))
(assert (axiom_int_approximation x775))
(assert (axiom_int_approximation x78))
(assert (axiom_int_approximation x780))
(assert (axiom_int_approximation x784))
(assert (axiom_int_approximation x785))
(assert (axiom_int_approximation x787))
(assert (axiom_int_approximation x788))
(assert (axiom_int_approximation x789))
(assert (axiom_int_approximation x791))
(assert (axiom_int_approximation x792))
(assert (axiom_int_approximation x794))
(assert (axiom_int_approximation x795))
(assert (axiom_int_approximation x799))
(assert (axiom_int_approximation x8))
(assert (axiom_int_approximation x80))
(assert (axiom_int_approximation x801))
(assert (axiom_int_approximation x805))
(assert (axiom_int_approximation x807))
(assert (axiom_int_approximation x81))
(assert (axiom_int_approximation x811))
(assert (axiom_int_approximation x812))
(assert (axiom_int_approximation x814))
(assert (axiom_int_approximation x816))
(assert (axiom_int_approximation x817))
(assert (axiom_int_approximation x818))
(assert (axiom_int_approximation x819))
(assert (axiom_int_approximation x82))
(assert (axiom_int_approximation x823))
(assert (axiom_int_approximation x826))
(assert (axiom_int_approximation x831))
(assert (axiom_int_approximation x832))
(assert (axiom_int_approximation x834))
(assert (axiom_int_approximation x836))
(assert (axiom_int_approximation x840))
(assert (axiom_int_approximation x845))
(assert (axiom_int_approximation x852))
(assert (axiom_int_approximation x853))
(assert (axiom_int_approximation x855))
(assert (axiom_int_approximation x856))
(assert (axiom_int_approximation x857))
(assert (axiom_int_approximation x86))
(assert (axiom_int_approximation x861))
(assert (axiom_int_approximation x862))
(assert (axiom_int_approximation x865))
(assert (axiom_int_approximation x868))
(assert (axiom_int_approximation x87))
(assert (axiom_int_approximation x873))
(assert (axiom_int_approximation x874))
(assert (axiom_int_approximation x875))
(assert (axiom_int_approximation x877))
(assert (axiom_int_approximation x879))
(assert (axiom_int_approximation x88))
(assert (axiom_int_approximation x882))
(assert (axiom_int_approximation x883))
(assert (axiom_int_approximation x887))
(assert (axiom_int_approximation x888))
(assert (axiom_int_approximation x889))
(assert (axiom_int_approximation x891))
(assert (axiom_int_approximation x892))
(assert (axiom_int_approximation x894))
(assert (axiom_int_approximation x897))
(assert (axiom_int_approximation x90))
(assert (axiom_int_approximation x903))
(assert (axiom_int_approximation x906))
(assert (axiom_int_approximation x91))
(assert (axiom_int_approximation x911))
(assert (axiom_int_approximation x912))
(assert (axiom_int_approximation x914))
(assert (axiom_int_approximation x919))
(assert (axiom_int_approximation x924))
(assert (axiom_int_approximation x925))
(assert (axiom_int_approximation x93))
(assert (axiom_int_approximation x931))
(assert (axiom_int_approximation x932))
(assert (axiom_int_approximation x933))
(assert (axiom_int_approximation x934))
(assert (axiom_int_approximation x936))
(assert (axiom_int_approximation x939))
(assert (axiom_int_approximation x942))
(assert (axiom_int_approximation x944))
(assert (axiom_int_approximation x950))
(assert (axiom_int_approximation x951))
(assert (axiom_int_approximation x953))
(assert (axiom_int_approximation x954))
(assert (axiom_int_approximation x955))
(assert (axiom_int_approximation x956))
(assert (axiom_int_approximation x957))
(assert (axiom_int_approximation x960))
(assert (axiom_int_approximation x961))
(assert (axiom_int_approximation x962))
(assert (axiom_int_approximation x965))
(assert (axiom_int_approximation x967))
(assert (axiom_int_approximation x969))
(assert (axiom_int_approximation x97))
(assert (axiom_int_approximation x970))
(assert (axiom_int_approximation x973))
(assert (axiom_int_approximation x978))
(assert (axiom_int_approximation x979))
(assert (axiom_int_approximation x98))
(assert (axiom_int_approximation x982))
(assert (axiom_int_approximation x985))
(assert (axiom_int_approximation x987))
(assert (axiom_int_approximation x990))
(assert (axiom_int_approximation x993))
(assert (axiom_int_approximation x998))
(assert (x2452 x728))
(assert (x2452 x1851))
(assert (x1863 x1710))
(assert (= (ite (= x2500 x969) x2511 (x2453 x2500)) (x2525 x2500)))
(assert (x2452 x1820))
(assert (x2452 x744))
(assert (x2452 x379))
(assert (= (=> (and (= (= x408 0) x1405) (= (- (/ 115792089237316195423570985008687907853269984665640564039457584007913129639935 x408) (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x408)) x3114) (= (= x2450 0) x2951) (= (x11 x1802 x2943) x2450) (= x2943 (ite (< x3114 x2710) 1 0)) (= (ite (not x1405) 1 0) x1802)) (and (=> x2951 x782) (=> (not x2951) x2678))) x2761))
(assert (= x2072 (=> (and (= x2574 (uninterp_mod (* x2629 x1816) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= x1750 (< x193 x2932)) (= x193 (x2890 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2434))) (= (- (/ x1910 1000000000000000000) (uninterp_frac x1910 1000000000000000000)) x2434) (= (- (/ x2574 1000000000000000000) (uninterp_frac x2574 1000000000000000000)) x1910)) (and (=> (not x1750) x3026) (=> x1750 x2678)))))
(assert (x2452 x738))
(assert (= x2997 (or x3042 x2420)))
(assert (x2452 x774))
(assert (x1824 x2960))
(assert (x1824 x883))
(assert (x2452 x1688))
(assert (x2452 x1918))
(assert (x1863 x502))
(assert (= true x2527))
(assert (x2452 x1906))
(assert (= (=> (and (= x2929 x481) (= x286 0)) x2679) x1552))
(assert (x2452 x3022))
(assert (= (x2238 274184521717934524641157099916833587202) (x94 274184521717934524641157099916833587202)))
(assert (x2452 x498))
(assert (= x1764 (and x533 x2245)))
(assert (= x2154 (and (not x1488) x53)))
(assert (= x1678 (or x1446 x2052)))
(assert (= x1972 (=> (and (= (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1049) (and (< x1049 32) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1049) true))) x1187) (= (x631 (+ x3118 x573)) x2462) (= (x11 115792089237316195423570985008687907853269984665640564039457584007913129639904 x2917) x573) (= (x631 (+ 31 x1049)) x2917)) (and (=> (not x1187) x3098) (=> x1187 x2678)))))
(assert (x2452 x1709))
(assert (x1863 x67))
(assert (x2452 x161))
(assert (= x2065 (x2709 (x2238 x2065))))
(assert (= (or (and x1426 x2) (and x242 x3096)) x714))
(assert (x2452 x2021))
(assert (x1863 x2392))
(assert (= (x2044 x2414) (ite (and x200 x2598 (not x584)) (x2885 x2414) (x2471 x2414))))
(assert (= (=> (and (= x1984 (x923 x2847)) (= x2274 (x2302 x1536 2)) (<= 0 x445) (= x2247 (x752 x2811)) (< x445 1461501637330902918203684832716283019655932542976) (= (x631 (+ x2940 32)) x2847) (= x2800 (x227 x1536)) (>= x2151 0) (= (> x2963 0) x1647) (= (x2302 x2811 2) x2590) (= (x1422 x2274) x2151) (= (x631 (+ x202 192)) x2080) (= (x2850 x627) x445) (= (x568 x1219) x2963) (> 1461501637330902918203684832716283019655932542976 x2151) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2247) (>= x2247 0) (<= x2800 1461501637330902918203684832716283019655932542975) (= x1317 (x183 x2367)) (>= x161 0) (<= x1317 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x1536 (x1551 (x2238 x1220) (x94 2) 0)) (= (x11 1461501637330902918203684832716283019655932542975 x1984) x1220) (= x2811 (x2302 x627 2)) (= x2512 (x631 (+ 64 x2882))) (> 1461501637330902918203684832716283019655932542976 x2800) (= x161 (x1588 x2590)) (<= 0 x2800) (= x627 (x2302 x1536 1)) (<= x161 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= x1317 0) (= x2367 (x2302 x2274 2)) (= (x631 (+ x202 64)) x2076) (= (x631 (+ 32 x202)) x2882) (= (x631 (+ 64 x2076)) x1628) (>= 1461501637330902918203684832716283019655932542975 x2151) (<= x445 1461501637330902918203684832716283019655932542975) (= (x631 (+ 64 x2512)) x3138)) (and (=> (not x1647) x2678) (=> (and (= (> x1896 1) x240) (= (x2049 x2940) x1896) (= x1562 x2080) x1647 (= (x631 (+ 32 x1219)) x1290) (not x240)) x1210))) x829))
(assert (= (ite (= x518 x1120) x2204 (x2010 x1120)) (x1538 x1120)))
(assert (x2452 x362))
(assert (x2452 x1272))
(assert (x2452 x2900))
(assert (x2452 x2530))
(assert (x2452 x1612))
(assert (x2452 x2713))
(assert (x642 x474 x2188 x1566 x1282))
(assert (= x1553 (=> (= x561 (> x1006 0)) (and (=> x561 x2467) (=> (not x561) x2678)))))
(assert (= x3094 (and x2830 x1031)))
(assert (x2452 x1878))
(assert (x2452 x2920))
(assert (x2452 x1693))
(assert (x2452 x1484))
(assert (x2452 x679))
(assert (= (and (not x2627) x3126) x439))
(assert (x2452 x649))
(assert (x2452 x1236))
(assert (x2452 x502))
(assert (x1863 x2477))
(assert (x2452 x787))
(assert (= (=> (= x3087 (= 274184521717934524641157099916833587202 x1415)) (and (=> (not x3087) x2123) (=> (and (not (< x1709 4)) (> 826074471 x2375) (= 404098525 x2375) (<= x2790 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= 0 x2790) (= 4 x1709) (= (x3021 (x2238 274184521717934524641157099916833587202)) x1630) (= 1 x2838) x3087 (< 0 x1630) (= 32 x638) (= 4 x1709) (not (= 117300739 x2375)) (= 10894474682274239493831243662817379401261526446360622092269559273883068006400 x2930) (not (= 157198259 x2375))) x175))) x841))
(assert (= x1952 (=> (= x1279 (= x231 0)) (and (=> x1279 x2678) (=> (not x1279) x1459)))))
(assert (= (=> (and (= (> 0 x2966) x1620) (= x2873 (x117 x450)) (= (x631 (+ x81 32)) x450) (= x2966 (x2890 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2873)))) (and (=> (and (= (x243 x81) x2179) (not x2478) (= x1684 x2196) (not x1620) (= x1684 x2873) (= x2478 (> x2179 1))) x672) (=> x1620 x2678))) x331))
(assert (= x945 (=> (and (= x2419 1) (= x653 1) (= x569 (ite (> 78 x1693) 1 0)) (= (x11 x653 x569) x950) (= (= (x1609 x950 x2816) 0) x2507) (= x67 (ite (< x1693 32) 1 0)) (= (x11 x2419 x67) x2816)) (and (=> (and (= (x1100 10 x1693) x1323) (not x2507)) x333) (=> (and (or (and x646 (= x2489 (< 1 x265)) (not x2489) (= x470 (ite x177 1 10)) (= x1701 100) (= x1349 (x11 1 x1693)) (= x265 (x2242 x1693 1)) (= (= 0 x1349) x177)) (and (not x646) (= x470 1) (= x1701 10))) (= (> x1693 1) x646) x2507) x2734)))))
(assert (= 0 (x3079 x2239)))
(assert (x2452 x401))
(assert (= x1329 (x2709 (x2238 x1329))))
(assert (x2452 x799))
(assert (= (and (not x1440) x1033) x2027))
(assert (= (x178 x2414) (ite (= x2414 x2645) x1540 (x922 x2414))))
(assert (= (=> (and x1264 (= (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3099 (x2238 274184521717934524641157099916833587231))) x1264) (= x2069 x2978) (= x2176 x1790) (= (x1801 (x2238 x883)) x2982)) x1328) x109))
(assert (= (=> (and (= 128 x3023) (= (= x862 0) x216) (= (x3021 (x2238 x1415)) x862)) (and (=> x216 x2678) (=> (not x216) x2257))) x2954))
(assert (= (and x3054 (not x2047)) x1429))
(assert (x2452 x1240))
(assert (= x1925 (=> (and (= (x1442 (x2238 x2999)) x1052) x476 (= x1688 x545) (= x278 x1923) (= x476 (< (x170 (x2238 274184521717934524641157099916833587231)) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) x2040)))
(assert (= (x2010 x1350) (ite (and x2269 x291 (not x1654)) (x1499 x1350) (x2853 x1350))))
(assert (x1863 x2967))
(assert (x2452 x168))
(assert (= (=> (and (= x2051 (= x1359 x735)) (= x735 (x11 1461501637330902918203684832716283019655932542975 x1359))) (and (=> (not x2051) x2683) (=> (and (= 1 x1531) (= x27 (x1551 (x2238 x1931) (x94 1) 0)) (<= x1475 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x853 32) x2051 (<= 0 x1475) (= (x11 1461501637330902918203684832716283019655932542975 x2551) x1931) (= (x2853 x27) x1475)) x1731))) x2243))
(assert (x2452 x2896))
(assert (x2452 x3130))
(assert (x2452 x607))
(assert (= (ite (and (not x2260) x2360 x583) (x1881 x1200) (ite (and x2360 (not x2260) (not x583) (not x309)) (x2641 x1200) (x1763 x1200))) (x2786 x1200)))
(assert (x2452 x353))
(assert (x2452 x1123))
(assert (x2452 x1666))
(assert (x2452 x906))
(assert (= (=> (and (= x1242 x1695) (= x2372 0)) x535) x181))
(assert (x2452 x1329))
(assert (x2452 x2967))
(assert (= (=> (and (= x498 (x2049 x1490)) (= x1516 (= x498 x1425)) (= x1490 (x41 x2150)) (= (x3104 x2097) x1425)) (and (=> (not x1516) x2678) (=> x1516 x541))) x2291))
(assert (x2452 x13))
(assert (= (ite (= x539 x2182) x655 (x1252 x2182)) (x205 x2182)))
(assert (= x733 (=> (and (= x1057 x3084) (= (= x3084 x1478) x948)) (and (=> (not x948) x181) (=> (and x948 (= x1256 (x1551 (x2238 x3084) (x94 1) 0)) (<= 0 x2764) (= 1 x2372) (= x2764 (x2708 x1256)) (= x1242 32) (<= x2764 115792089237316195423570985008687907853269984665640564039457584007913129639935)) x535)))))
(assert (= x2229 (=> (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2480) (= x1532 (x1551 (x2238 x2960) (x94 1) 0)) (= (x1551 (x2238 274184521717934524641157099916833587231) (x94 1) 0) x518) (= 274184521717934524641157099916833587231 x2008) (= (< x801 x2480) x2030) (= (x11 1461501637330902918203684832716283019655932542975 x1325) x2960) (= x801 (x2890 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x338))) (>= x2480 0) (= (x1538 x1532) x2480) (= x2204 (x2890 (- x1837 x338)))) (and (=> x2030 x1235) (=> (not x2030) x546)))))
(assert (= x2678 (=> (= true x1705) x1026)))
(assert (= x2120 (and (not x2913) x2639)))
(assert (x2452 x7))
(assert (x1863 x1276))
(assert (x2452 x1506))
(assert (= x73 (and (not x1598) x1084)))
(assert (x2452 x1237))
(assert (=> (< (- x2024 1) 10000) (= (x2238 x2024) (x94 x2024))))
(assert (x1863 x1807))
(assert (= x2656 (=> (and (= x2411 (x11 115792089237316195423570985008687907853269984665640564039457584007913129639904 x615)) (= x615 (x631 (+ x304 31))) (= x1849 (x631 (+ x2411 x306))) (= (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x304) (and (= (<= x304 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (> 32 x304))) x3)) (and (=> (not x3) x1099) (=> x3 x2678)))))
(assert (= (or (and x2810 x375) (and x1823 x2892)) x1413))
(assert (= x1610 (and (not x1770) x1576)))
(assert (x1863 x474))
(assert (= (=> (and (= x2149 (x2049 x2336)) (= (> x2149 0) x3028)) (and (=> x3028 x234) (=> (and (= x3128 x307) (not x3028)) x418))) x2576))
(assert (= 117300739 (x2709 (x94 117300739))))
(assert (x2452 x892))
(assert (= (x2709 (x2238 274184521717934524641157099916833587202)) 274184521717934524641157099916833587202))
(assert (x2452 x171))
(assert (x2452 x448))
(assert (= (ite x2102 (ite x3036 (x3129 x330) (x1975 x330)) (ite x1843 (x3129 x330) (x76 x330))) (x2273 x330)))
(assert (= (and (not x1557) x2772) x2880))
(assert (= (and x532 x1296) x432))
(assert (x2452 x1509))
(assert (= (and x2042 (not x1195)) x635))
(assert (x2452 x2986))
(assert (x2452 x3110))
(assert (= (and x749 x1068) x2840))
(assert (x2452 x2966))
(assert (= (x260 x93) 0))
(assert (= x1872 (=> (and (= x329 (x69 x2681)) (= x2141 (x11 1461501637330902918203684832716283019655932542975 x329)) (= (= x329 x2141) x904)) (and (=> (not x904) x2678) (=> x904 x2291)))))
(assert (x2452 x1825))
(assert (x2452 x1107))
(assert (x2452 x1131))
(assert (x1293 x950 x2816))
(assert true)
(assert (x2452 x1502))
(assert (x642 x1788 x1592 x1438 x2212))
(assert (= 0 (x804 x1412)))
(assert (= (or (and x3092 x1072) (and x815 x1298)) x2178))
(assert (x2452 x491))
(assert (x2452 x1070))
(assert (= (and x904 x699) x1962))
(assert (x2452 x1896))
(assert (x2452 x590))
(assert (= (=> (and (= x2805 (x243 x81)) (= x2583 (< 0 x2805))) (and (=> x2583 x331) (=> (not x2583) x2678))) x2217))
(assert (x2452 x1242))
(assert (x1206 x1970 x2912))
(assert (=> (< (- x1899 1) 10000) (= (x2238 x1899) (x94 x1899))))
(assert (= x2747 (=> (and (= x965 (x3021 (x2238 x1375))) (= (= x965 0) x1358) (= x2487 128)) (and (=> (not x1358) x2904) (=> x1358 x2678)))))
(assert (x2452 x423))
(assert (= x2854 (=> (and (= x2629 (uninterp_mod (* x2932 x709) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= (x11 x2077 x1035) x389) (= (= x389 0) x328) (= (- (/ 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2629) (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2629)) x2609) (= x1035 (ite (> x1816 x2609) 1 0)) (= x2077 (ite (not x2163) 1 0)) (= x2163 (= x2629 0))) (and (=> x328 x2072) (=> (not x328) x2678)))))
(assert (x2452 x1663))
(assert (x2452 x3073))
(assert (x2452 x883))
(assert (x2452 x3101))
(assert (x2452 x2632))
(assert (x2452 x2511))
(assert (x2452 x2076))
(assert (x2452 x2303))
(assert (= 17154740991736861046558774992177620686056526479738507590741468237373194108928 (x2638 x589)))
(assert (= (=> (and (= (x3021 (x2238 x393)) x3144) (= x2311 (x299 x1694)) (= x1694 (x631 (+ 32 x1724))) (= (x11 1461501637330902918203684832716283019655932542975 x1691) x1250) (= x2944 (= x3144 0)) (= x2474 (x631 (+ 4 x3128))) (= x268 (x11 1461501637330902918203684832716283019655932542975 x502)) (= (x11 1461501637330902918203684832716283019655932542975 x1143) x393) (= (x631 (+ x3128 36)) x1927)) (and (=> (and (not x2944) (or (and x2160 (< x582 4294967296) (= x1964 1)) (and (= x1964 x1886) (not x2160))) (= x2160 (> x1886 0))) x2952) (=> x2944 x2678))) x1898))
(assert (x2452 x1745))
(assert (x2452 x384))
(assert (= (=> (= x2060 (= x2721 274184521717934524641157099916833587206)) (and (=> (and (= x2661 x1825) (= x2021 404098525) (> x2991 0) (= x1606 1) (not (= x2021 117300739)) (= (x3021 (x2238 274184521717934524641157099916833587206)) x2991) (= x2702 32) (<= 0 x795) (not (= 157198259 x2021)) (not (> 4 x2661)) (> 826074471 x2021) (= 10894474682274239493831243662817379401261526446360622092269559273883068006400 x740) (= 4 x2661) (<= x795 115792089237316195423570985008687907853269984665640564039457584007913129639935) x2060) x182) (=> (not x2060) x2755))) x244))
(assert (x2452 x2898))
(assert (x2452 x2177))
(assert (x2452 x1987))
(assert (x2452 x2670))
(assert (x2452 x77))
(assert (x2452 x2411))
(assert (= x96 (and x2813 x606)))
(assert (= (ite (= x406 x539) x655 (x1252 x406)) (x205 x406)))
(assert (= (x1924 x1849) (ite (= x1707 x1849) x134 (x703 x1849))))
(assert (= x1465 (=> (and (= x220 x1787) (= x163 x2366)) x2496)))
(assert (= (and x277 (not x216)) x2386))
(assert (x2452 x2248))
(assert (x2452 x2275))
(assert (x2452 x626))
(assert (x1758 x1237 x891))
(assert (x1863 x204))
(assert (= (or (and x948 x2253) x1843) x1436))
(assert (x2452 x2862))
(assert (x2452 x445))
(assert (x2452 x1307))
(assert (= (x2709 (x94 274184521717934524641157099916833587202)) 274184521717934524641157099916833587202))
(assert (= (=> (= x1054 (= x2721 274184521717934524641157099916833587202)) (and (=> (not x1054) x1260) (=> (and (= x763 x1825) (= x2702 32) (not (= x2425 117300739)) (= x1606 1) (< 0 x1431) (not (= 157198259 x2425)) (= x763 4) (= 10894474682274239493831243662817379401261526446360622092269559273883068006400 x1846) (< x2425 826074471) (>= x2654 0) (= (x3021 (x2238 274184521717934524641157099916833587202)) x1431) (<= x2654 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x2425 404098525) x1054 (not (> 4 x763))) x182))) x2755))
(assert (= (=> (and (= x481 x2737) (= 0 x1074)) x112) x1235))
(assert (= x793 (=> (and (= x2216 x1236) (= x2267 x788)) x905)))
(assert (x2452 x2227))
(assert (= x2732 (or (and x3111 x1519) (and x3009 x867) (and x1556 x1883) (and x487 x42))))
(assert (= (=> (= x2785 (= 0 x792)) (and (=> x2785 x2678) (=> (and (= (= x2670 0) x600) (= (uninterp_mod (* 32 x2670) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x172) (= x539 (x631 (+ x2940 32))) (= (x631 (+ 32 x172)) x2280) (or x600 (and (< x655 1461501637330902918203684832716283019655932542976) (= x2391 (> x2591 x1622)) (= (x631 (+ x2940 64)) x1622) (or (and x2391 (not x1865) (<= x324 1461501637330902918203684832716283019655932542975) (< x324 1461501637330902918203684832716283019655932542976) (<= 0 x324) (= (- (/ (uninterp_mod (- (x2709 x2250) (x2709 x2543)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1) (uninterp_frac (uninterp_mod (- (x2709 x2250) (x2709 x2543)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1)) x1798) (= (x631 (+ x539 64)) x229) (= (x1817 (x94 1) 0) x2543) (= x1865 (< x229 x2591)) (= x324 (x2937 x2250))) (not x2391)) (= x2612 (x1817 (x94 1) 0)) (>= x655 0) (<= x655 1461501637330902918203684832716283019655932542975) (= (x1817 (x94 1) 0) x3139) (= x3024 (uninterp_mod (* x2670 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (not x600) (= (x2302 x2612 1) x2250) (= x1727 (- (/ (uninterp_mod (- (x2709 x2612) (x2709 x3139)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1) (uninterp_frac (uninterp_mod (- (x2709 x2612) (x2709 x3139)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1))) (= x2591 (x631 (+ x3024 x539))) (= x655 (x2937 x2612)))) (not x2785) (= x1219 (x631 (+ x2280 x2940)))) x2277))) x1015))
(assert (x1863 x2095))
(assert (x2452 x2773))
(assert (x2452 x2855))
(assert (x2452 x3091))
(assert (= x380 (=> (and (not (= x2349 826074471)) (= x3084 x1478) (= x2349 1889567281) (= 50942633119752846454219349998365661925608737367104304655302372697894809501696 x1873) (= x691 (x3021 (x2238 274184521717934524641157099916833587202))) (> x691 0) (= x12 (or (> x401 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (> 32 x401) (= (<= x401 57896044618658097711785492504343953926634992332820282019728792003956564819967) true)))) (= (x2890 (- x1110 4)) x401) (not (> 826074471 x2349)) (= x1110 x436) (= x1110 36) (not (> 4 x1110))) (and (=> x12 x181) (=> (not x12) x733)))))
(assert (= (and x2534 x1113) x2981))
(assert (x2452 x623))
(assert (x2452 x2782))
(assert (x2452 x127))
(assert (x2452 x1250))
(assert (x2452 x3062))
(assert (= x1387 (=> (and (= x2584 x142) (= x1509 x2101) (= x1156 x2869) (= x1246 x3073) (= x3048 x2211) (= x1847 x416) (= x2299 x2290)) x2752)))
(assert (= (=> (and (< 0 x6) (= (or (and (< x2878 32) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2878) true)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2878)) x681) (not (= x757 826074471)) (= x2878 (x2890 (- x1090 4))) (= x1090 36) (= x1807 x1359) (not (< x757 826074471)) (= x1363 50942633119752846454219349998365661925608737367104304655302372697894809501696) (= 1889567281 x757) (not (> 4 x1090)) (= x1090 36) (= (x3021 (x2238 274184521717934524641157099916833587202)) x6)) (and (=> (not x681) x2935) (=> x681 x2499))) x1159))
(assert (= (=> (and (= x3008 x1242) (= x1288 x2372)) x427) x535))
(assert (x2452 x2235))
(assert (x2452 x358))
(assert (x2452 x2345))
(assert (x1863 x1522))
(assert (x2452 x1853))
(assert (= x405 (=> (and (= x1456 36) (not (< x1456 4)) (not (= 826074471 x371)) (< 0 x423) (= x371 1889567281) (= x2792 50942633119752846454219349998365661925608737367104304655302372697894809501696) (= (or (and (> 32 x524) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x524) true)) (> x524 57896044618658097711785492504343953926634992332820282019728792003956564819967)) x1488) (= x436 x1456) (= x1478 x127) (not (< x371 826074471)) (= (x2890 (- x1456 4)) x524) (= x423 (x3021 (x2238 274184521717934524641157099916833587206)))) (and (=> (not x1488) x2403) (=> x1488 x1338)))))
(assert (x2452 x2313))
(assert (= (=> (and (= (< 0 x2933) x3017) (= (uninterp_mod (* x408 x2710) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x2713)) (and (=> (and (= x2347 x662) x3017 (= x2347 (- (/ x2713 x2933) (uninterp_frac x2713 x2933)))) x2103) (=> (not x3017) x2678))) x782))
(assert (x2452 x108))
(assert (= (=> (and (= (< 0 (x3021 (x2238 274184521717934524641157099916833587206))) x1297) (= x2012 x1891) (< 99 x82) (= x1522 x1286) (= false x2295) (= x2722 x1514) (= false x2833) (= x1608 x540) x2155 (= (<= x82 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) x937 (= (x1077 (x2238 274184521717934524641157099916833587231)) x2672) (<= 0 x1263) (= (x1077 (x2238 274184521717934524641157099916833587202)) x2255) x1297 (= x3002 x2055) (= x1263 x792) (>= x2255 0) (>= x599 0) (>= 1461501637330902918203684832716283019655932542975 x1359) (<= x3066 1461501637330902918203684832716283019655932542975) (<= x1514 1461501637330902918203684832716283019655932542975) (>= 1461501637330902918203684832716283019655932542975 x1263) (>= x2672 0) (= x599 (x1077 (x2238 274184521717934524641157099916833587206))) (<= 0 x1514) (= 3939881817 x3007) (= x134 x19) (= false x848) (= x1468 false) (= x937 (< 0 (x3021 (x2238 274184521717934524641157099916833587231)))) (= 3 x344) (<= 0 x1829) (>= x3066 0) (= x1359 x792) (<= x1829 1461501637330902918203684832716283019655932542975) (= (> (x3021 (x2238 274184521717934524641157099916833587202)) 0) x2155) (= x3066 x3002) (<= 0 x1359)) x564) x3108))
(assert (x1206 x1670 x742))
(assert (= x842 (=> (and (= (or (and (= true (<= x1236 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (< x1236 32)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1236)) x1871) (= x474 (x631 (+ 31 x1236))) (= (x631 (+ x2500 x1421)) x2905) (= (x11 115792089237316195423570985008687907853269984665640564039457584007913129639904 x474) x1421)) (and (=> x1871 x2678) (=> (not x1871) x1152)))))
(assert (=> (< (- x2256 1) 10000) (= (x2238 x2256) (x94 x2256))))
(assert (x2452 x123))
(assert (x2452 x1923))
(assert (= (ite (and x291 x2269 (not x1654)) (x1499 x941) (x2853 x941)) (x2010 x941)))
(assert (= x2110 (and x2778 (not x55))))
(assert (x2452 x702))
(assert (x2452 x2642))
(assert (x2452 x1364))
(assert (= x1715 (and x2492 (not x2207))))
(assert (= (=> (and (= x1813 (x2049 x2336)) (= x164 (> x1813 18446744073709551615))) (and (=> (and (not x164) (= (= x1813 0) x54) (= x1986 (x631 (+ x1546 32))) (or (and (= x831 (uninterp_mod (* 32 x1813) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (not x54) (= x3059 (x631 (+ 32 x1724)))) x54) (= x1546 (uninterp_mod (* x1813 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= (x631 (+ x1986 x1724)) x307)) x2576) (=> x164 x2678))) x1454))
(assert (x2452 x2141))
(assert (= (x1378 x1019) 0))
(assert (= (and (not x1838) x2780) x59))
(assert (x1863 x272))
(assert (= x1137 (=> (and (= x34 x46) (= 0 x939)) x1404)))
(assert (x2452 x2737))
(assert (= x153 (=> (and (= x852 (x959 128)) (= x3112 (ite (= x852 0) (= x852 0) (= x219 0)))) (and (=> (and (= x540 x1708) x3112) x761) (=> (not x3112) x2119)))))
(assert (x2452 x1899))
(assert (x1824 x548))
(assert (x2452 x654))
(assert (= (=> (and (= x1852 (or (and (> 96 x77) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x77) true)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x77))) (= x1042 3939881817) (not (> 3939881817 x1042)) (= (x2890 (- x82 4)) x77) (not (> 4 x82)) (> 4168891048 x1042) (not (> 2743638299 x1042))) (and (=> (not x1852) x2626) (=> x1852 x2678))) x1635))
(assert (= (or x3036 (and x3046 x2154)) x2102))
(assert (x2452 x1083))
(assert (= (or (and x2413 x2060) (and x1054 x1243)) x2412))
(assert (= (or (and x2116 (not x592)) x3038) x2084))
(assert (x2452 x944))
(assert (x2452 x429))
(assert (x2452 x71))
(assert (x2452 x332))
(assert (x2452 x2517))
(assert (= (=> (= x2913 (= 0 x1355)) (and (=> (not x2913) x2597) (=> x2913 x2678))) x297))
(assert (= (=> (= x2131 (= 0 x2209)) (and (=> (not x2131) x1407) (=> x2131 x2678))) x2602))
(assert (x2452 x44))
(assert (x1824 x2616))
(assert (x1863 x817))
(assert (x2452 x1849))
(assert (= x3083 (x2709 (x2238 x3083))))
(assert (= x1339 (=> (and (= x2933 (x2783 x2560)) (= x1032 (ite (= x2933 0) (= 0 x2933) (= x2710 0)))) (and (=> (not x1032) x2761) (=> (and (= x662 0) x1032) x2103)))))
(assert (x1863 x615))
(assert (= x2306 x1275))
(assert (= x563 (x2709 (x2238 x563))))
(assert (x1863 x512))
(assert (x2452 x1363))
(assert (x2452 x25))
(assert (x2452 x2865))
(assert (x1824 x1526))
(assert (x2452 x2957))
(assert (x2452 x785))
(assert (x2452 x1411))
(assert (= (=> (= x1598 (= x1375 274184521717934524641157099916833587206)) (and (=> (not x1598) x1669) (=> (and (>= x1795 0) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1795) (= 4 x2659) (= 1 x816) (< 0 x1115) (= 10894474682274239493831243662817379401261526446360622092269559273883068006400 x1967) (not (= 117300739 x2106)) (not (= x2106 157198259)) x1598 (= 32 x289) (= x285 x2659) (= 404098525 x2106) (not (> 4 x2659)) (= x1115 (x3021 (x2238 274184521717934524641157099916833587206))) (< x2106 826074471)) x851))) x2472))
(assert (x2452 x2978))
(assert (= (=> (and (= (x11 x2184 x1593) x1348) (= x431 (= 0 x1348)) (= (= x2932 0) x457) (= (- (/ 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2932) (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2932)) x1155) (= (ite (> x709 x1155) 1 0) x1593) (= (ite (not x457) 1 0) x2184) (= (x2890 (- 1000000000000000000 x1747)) x1816)) (and (=> (not x431) x2678) (=> x431 x2854))) x1685))
(assert (x2452 x1111))
(assert (x2452 x1317))
(assert (x2452 x2777))
(assert (x2452 x371))
(assert (x2452 x2106))
(assert (= (+ 2 (x2709 x1161)) (x2709 (x2302 x1161 2))))
(assert (= (and x2159 x1541) x2054))
(assert (x2452 x2843))
(assert (x2452 x560))
(assert (x1758 x1984 x218))
(assert (x2452 x1271))
(assert (x2452 x376))
(assert (x1863 x1035))
(assert (x2452 x2079))
(assert (x2452 x2703))
(assert (x1758 x711 x1989))
(assert (= (or (and x1625 x2465) (and x708 x908)) x2276))
(assert (= x2283 (=> (and (= (x1427 x2366) x1969) (= x2658 (ite (= 0 x1969) (= x1969 0) (= 0 x738)))) (and (=> (not x2658) x1303) (=> (and (= x2865 0) x2658) x215)))))
(assert (x2452 x1186))
(assert (x2452 x2825))
(assert (x2452 x1115))
(assert (x2452 x2538))
(assert (x2452 x868))
(assert (= (ite (and (not x2260) x2360 x583) (x1805 x520) (ite (and (not x309) (not x583) (not x2260) x2360) (x2586 x520) (x2078 x520))) (x2067 x520)))
(assert (= x643 (and x1267 (not x556))))
(assert (= x2779 (=> (and (= (x1686 x1562) x1143) (= (x2049 x1412) x2272) (= (= x2939 x2272) x2888) (= (x455 x1724) x2939) (= (x41 x2150) x1412) (= x1691 (x22 x2443))) (and (=> (not x2888) x2678) (=> x2888 x570)))))
(assert (x1863 x1309))
(assert (x2452 x597))
(assert (x2452 x3069))
(assert (= x1146 (=> (= (= 274184521717934524641157099916833587202 x2587) x2603) (and (=> (and (= x1337 x61) (not (> 4 x61)) (<= 0 x1248) x2603 (= 22270923681254677845691103109158760375340177724800803888364822332811285364736 x1706) (= x2900 826074471) (not (< x2900 826074471)) (= x2323 1) (= (x3021 (x2238 274184521717934524641157099916833587202)) x1859) (= 32 x2664) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1248) (> x1859 0) (= 4 x61)) x1749) (=> (not x2603) x966)))))
(assert (= x2043 (and x1516 x1962)))
(assert (x2452 x1047))
(assert (x2452 x303))
(assert (x2452 x2330))
(assert (x2452 x392))
(assert (x1863 x2147))
(assert (=> (> (+ 10000 1) x2721) (= (x94 x2721) (x2238 x2721))))
(assert (= (or x1913 (and (not x2949) x2422)) x3042))
(assert (x2452 x1028))
(assert (x2452 x2654))
(assert (x2452 x2533))
(assert (x2452 x221))
(assert (x2452 x2297))
(assert (= (and x1633 x2174) x2465))
(assert (= x2815 (=> (and (= 128 x577) (= (= x730 0) x2125) (= x730 (x3021 (x2238 x1415)))) (and (=> x2125 x2678) (=> (not x2125) x739)))))
(assert (x2452 x985))
(assert (= x565 (=> (and (= x531 (x243 x81)) (= x630 (> x531 0))) (and (=> (and (= 0 x2196) (not x630)) x672) (=> x630 x2217)))))
(assert (= x1303 (=> (and (= (= 0 x2321) x806) (= (= x3115 0) x155) (= x2205 (ite (> x738 x1216) 1 0)) (= x1276 (ite (not x155) 1 0)) (= x1216 (- (/ 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3115) (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3115))) (= x2321 (x11 x1276 x2205))) (and (=> (not x806) x2678) (=> x806 x2565)))))
(assert (= (=> (and (= x1831 (= x1359 x2346)) (= (x11 1461501637330902918203684832716283019655932542975 x1359) x2346)) (and (=> (not x1831) x1858) (=> (and x1831 (= (x11 1461501637330902918203684832716283019655932542975 x2477) x18) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2198) (= x2198 (x2471 x2223)) (= x784 1) (= 32 x836) (>= x2198 0) (= (x1551 (x2238 x18) (x94 1) 0) x2223)) x694))) x890))
(assert (= x2567 (=> (and (= x3045 (x11 1461501637330902918203684832716283019655932542975 x272)) (= (= x1568 0) x2627) (= (x631 (+ 64 x527)) x1707) (= (x631 (+ x1849 36)) x1803) (= (x11 1461501637330902918203684832716283019655932542975 x2628) x491) (= x527 (x631 (+ x1849 4))) (= x1568 (x3021 (x2238 x1526)))) (and (=> x2627 x2678) (=> (and (= x2774 (> x2352 0)) (not x2627) (or (and (not x2774) (= x1885 x2352)) (and x2774 (= 1 x1885) (> 4294967296 x2108)))) x2624)))))
(assert (= x2093 (and x621 (not x3041))))
(assert (x1863 x66))
(assert (= (ite (and x583 (not x2260) x2360) (x822 x2468) (ite (and x2360 (not x2260) (not x309) (not x583)) (x2404 x2468) (x2941 x2468))) (x1231 x2468)))
(assert (x2452 x2080))
(assert (x1863 x2248))
(assert (= x2024 (x2709 (x2238 x2024))))
(assert (x2452 x2579))
(assert (= (ite (= x1435 x539) x655 (x1252 x1435)) (x205 x1435)))
(assert (x1863 x1670))
(assert (= (x544 128) (x1901 128)))
(assert (x2452 x1542))
(assert (= x2577 (and x567 x363)))
(assert (x2452 x2740))
(assert (= (=> (and (= (> x3018 0) x2644) (= x3018 (x455 x1724))) (and (=> x2644 x1169) (=> (not x2644) x2678))) x2304))
(assert (= (=> (and (= x563 (x11 1461501637330902918203684832716283019655932542975 x1237)) (= (x631 (+ x1199 32)) x1083) (= (x11 1461501637330902918203684832716283019655932542975 x2523) x1478) (= (x631 (+ x330 4)) x2649) (= x2523 (x110 x489)) (= x982 (x631 (+ 36 x330))) (= (x2890 (- x982 x330)) x436) (= (x631 (+ 64 x1240)) x1906) (= x1237 (x2221 x1906)) (= x1240 (x2712 x1083)) (= (x3021 (x2238 x563)) x1034) (= (= x1034 0) x557)) (and (=> (not x557) x365) (=> x557 x2678))) x1402))
(assert (=> (< (- x2742 1) 10000) (= (x94 x2742) (x2238 x2742))))
(assert (x1758 x204 x2593))
(assert (= x1415 (x2709 (x2238 x1415))))
(assert (= (and (not x2944) x964) x2623))
(assert (= x997 (=> (and (= x45 (x11 115792089237316195423570985008687907853269984665640564039457584007913129639904 x2711)) (= (x631 (+ x2681 x45)) x81) (= (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1875) (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1875) true) (< x1875 32))) x2845) (= (x631 (+ 31 x1875)) x2711)) (and (=> (not x2845) x1872) (=> x2845 x2678)))))
(assert (= x619 (and x591 x2970)))
(assert (= (x2242 x258 1) (- (/ x258 2) (uninterp_frac x258 2))))
(assert (x2452 x1503))
(assert (x2452 x888))
(assert (= (=> (and (= x1359 x2477) (= (x2890 (- x2396 4)) x1370) (= 36 x2396) (not (= x2090 826074471)) (= 36 x2396) (< 0 x125) (not (> 826074471 x2090)) (= (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1370) (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1370) true) (> 32 x1370))) x1241) (= x2090 1889567281) (= (x3021 (x2238 274184521717934524641157099916833587202)) x125) (not (> 4 x2396)) (= x2632 50942633119752846454219349998365661925608737367104304655302372697894809501696)) (and (=> x1241 x1858) (=> (not x1241) x890))) x1283))
(assert (x2452 x2963))
(assert (= 0 (x1378 x960)))
(assert (= (x2709 (x94 1461501637330902918203684832716283019655932542975)) 1461501637330902918203684832716283019655932542975))
(assert (x642 x873 x1784 x435 x1905))
(assert (= (x94 2743638299) (x2238 2743638299)))
(assert (x2452 x1156))
(assert (x2452 x2520))
(assert (x2452 x2261))
(assert (= x127 (x2709 (x2238 x127))))
(assert (x1758 x247 x1043))
(assert (x2452 x1063))
(assert (x2452 x2200))
(assert (= (or (and x681 x2370) (and x2379 (not x2606))) x2889))
(assert (x2452 x1583))
(assert (x2452 x1773))
(assert (x2452 x1967))
(assert (=> (> (+ 10000 1) x1982) (= (x94 x1982) (x2238 x1982))))
(assert (= x1545 (and x1175 (not x1796))))
(assert (= (=> (= (= 274184521717934524641157099916833587206 x2065) x1741) (and (=> (and (= (x3021 (x2238 274184521717934524641157099916833587206)) x639) (> x639 0) (not (= 117300739 x514)) x1741 (= 32 x1577) (not (= 157198259 x514)) (< x514 826074471) (= 404098525 x514) (= 10894474682274239493831243662817379401261526446360622092269559273883068006400 x490) (= x912 4) (<= x795 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x2395 1) (= x882 x912) (>= x795 0) (not (< x912 4))) x301) (=> (not x1741) x2393))) x2979))
(assert (x2452 x285))
(assert (= (and x558 x611) x442))
(assert (x2452 x1874))
(assert (x2452 x602))
(assert (x2452 x2502))
(assert (=> (> (+ 10000 1) x329) (= (x94 x329) (x2238 x329))))
(assert (x2452 x2285))
(assert (= 0 (x804 x151)))
(assert (x2452 x638))
(assert (x2452 x2832))
(assert (x2452 x794))
(assert (x2452 x1055))
(assert (= (x1037 x941) (ite (= x941 x1259) x2837 (x232 x941))))
(assert (= (=> (and (= x417 x2862) (= (= x2862 x2511) x1332)) (and (=> (not x1332) x2014) (=> (and x1332 (= 32 x594) (<= 0 x379) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x379) (= (x3103 x1120) x379) (= x1120 (x1551 (x2238 x2862) (x94 1) 0)) (= x1080 1)) x2983))) x419))
(assert (x1863 x2917))
(assert (= x1177 (and x1513 (not x2867))))
(assert (= (x825 x2681) 42459404708690159261654315324267577519400883839135586425952143822324095778816))
(assert (= x308 (=> (and (= (x631 (+ x330 x1655)) x57) (= x2136 (or (and (< x3008 32) (= (<= x3008 57896044618658097711785492504343953926634992332820282019728792003956564819967) true)) (> x3008 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (= x1655 (x11 115792089237316195423570985008687907853269984665640564039457584007913129639904 x2561)) (= x2561 (x631 (+ x3008 31)))) (and (=> (not x2136) x2394) (=> x2136 x2678)))))
(assert (= (x2709 (x2238 x18)) x18))
(assert (= (=> (and (= (= 0 x1491) x1464) (= (x11 x1670 x742) x956) (= (- (/ 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1491) (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1491)) x1445) (= (ite (> 1000000000000000000 x1445) 1 0) x742) (= x2350 (uninterp_mod (* 1000000000000000000 x2196) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= (ite (not x1464) 1 0) x1670) (= (= 0 x956) x1556) (= x2829 (- (/ x2350 x2510) (uninterp_frac x2350 x2510)))) (and (=> (not x1556) x2678) (=> (and (= x3085 (uninterp_mod (* 1000000000000000000 x1491) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= x1149 x1877) x1556 (= x1877 (- (/ x3085 x2510) (uninterp_frac x3085 x2510))) (= x2829 x1130)) x1935))) x267))
(assert (x2452 x3037))
(assert (= x1384 (and x803 x1223)))
(assert (x2452 x836))
(assert (x1758 x2874 x1656))
(assert (x2452 x3141))
(assert (x2452 x1788))
(assert (= (ite (and (not x2260) x2360 x583) (x1881 x376) (ite (and (not x309) x2360 (not x2260) (not x583)) (x2641 x376) (x1763 x376))) (x2786 x376)))
(assert (x2452 x742))
(assert (= (=> (and (= x316 (= x2024 x602)) (= x1600 x2024)) (and (=> (not x316) x2165) (=> (and (= x1356 (x2708 x2414)) (= 32 x1078) (= 1 x2456) x316 (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1356) (<= 0 x1356) (= x2414 (x1551 (x2238 x2024) (x94 1) 0))) x2684))) x2301))
(assert (x2452 x2876))
(assert (x2452 x2992))
(assert (x2452 x125))
(assert (x2452 x2762))
(assert (= x259 (=> (and (= x708 (ite (= x1870 0) (= 0 x1870) (= 0 x2710))) (= x1870 (x1730 128))) (and (=> (not x708) x1336) (=> (and (= x785 x540) x708) x2669)))))
(assert (x2452 x961))
(assert (x2452 x2591))
(assert (x2452 x2378))
(assert (x2452 x548))
(assert (x2452 x1040))
(assert (= (or x1486 (and x2484 x2595)) x2410))
(assert (x2452 x1145))
(assert (x2452 x231))
(assert (= x2989 (and (not x1920) x279)))
(assert (x2452 x587))
(assert (x2452 x689))
(assert (x642 x2884 x471 x2768 x2728))
(assert (x2452 x2940))
(assert (x2452 x1602))
(assert (= x1705 x1379))
(assert (= (or x2889 (and x2606 x2379)) x2753))
(assert (= x1097 (or x1215 x2975)))
(assert (x642 x615 x2648 x743 x1819))
(assert (= (and x714 (not x386)) x2868))
(assert (x2452 x1729))
(assert (= (x1512 x306) (ite (= x384 x306) x1287 (x1205 x306))))
(assert (= x201 (and (not x2418) x910)))
(assert (x2452 x819))
(assert (= (x94 2835717307) (x2238 2835717307)))
(assert (x2452 x2262))
(assert (x1863 115792089237316195423570985008687907853269984665640564039457584007913129639904))
(assert (= x21 (=> (and (<= 0 x2071) (= 274184521717934524641157099916833587231 x2663) (= (< x2071 x951) x2399) (= x1075 x1079) (= (x1551 (x2238 274184521717934524641157099916833587231) (x94 1) 0) x50) (= x2071 (x2044 x50)) (<= x2071 115792089237316195423570985008687907853269984665640564039457584007913129639935)) (and (=> x2399 x2430) (=> (not x2399) x859)))))
(assert (x2452 x3059))
(assert (x2452 x655))
(assert (x1012 x258 x129))
(assert (= (and x528 (not x557)) x2225))
(assert (x2452 x882))
(assert (= 22270923681254677845691103109158760375340177724800803888364822332811285364736 (x2709 (x94 22270923681254677845691103109158760375340177724800803888364822332811285364736))))
(assert (x2452 x366))
(assert (x2452 x1478))
(assert (x2452 x1919))
(assert (x2452 x233))
(assert (= (ite (= x1259 x1350) x2837 (x232 x1350)) (x1037 x1350)))
(assert (x2452 x472))
(assert (x2452 x1988))
(assert (= x1996 (and x2015 (not x99))))
(assert (x2452 x2820))
(assert (x2452 x2231))
(assert (x2452 x2085))
(assert (= x1931 (x2709 (x2238 x1931))))
(assert (= (=> (= (= 0 x1502) x2907) (and (=> (not x2907) x526) (=> x2907 x2678))) x2220))
(assert (x2171 x950))
(assert (x2452 x2707))
(assert (= 0 (x482 x2835)))
(assert (x1863 x1851))
(assert (= (and (not x736) x1960) x2810))
(assert (x1863 x329))
(assert (= (=> (and (= x1531 0) (= x853 x1621)) x1731) x2683))
(assert (x2452 x1010))
(assert (= (x94 50942633119752846454219349998365661925608737367104304655302372697894809501696) (x2238 50942633119752846454219349998365661925608737367104304655302372697894809501696)))
(assert (x2452 x57))
(assert (= x291 (and x690 (not x2704))))
(assert (x2452 x437))
(assert (= (x2191 x1585) 0))
(assert (= (=> (= (= x1415 274184521717934524641157099916833587206) x2) (and (=> (not x2) x505) (=> (and (<= 0 x1795) (< 0 x2974) (not (= 157198259 x1623)) (= x2665 x2296) x2 (not (< x2665 4)) (> 826074471 x1623) (not (= x1623 117300739)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1795) (= 4 x2665) (= x2974 (x3021 (x2238 274184521717934524641157099916833587206))) (= 10894474682274239493831243662817379401261526446360622092269559273883068006400 x144) (= 404098525 x1623) (= 32 x879) (= x832 1)) x79))) x2416))
(assert (= (=> (and (= x1287 (x11 1461501637330902918203684832716283019655932542975 x272)) (= x1746 (x631 (+ 4 x306))) (= (= x2861 0) x1311) (= (x11 1461501637330902918203684832716283019655932542975 x2628) x1479) (= (x923 x1897) x272) (= (x11 1461501637330902918203684832716283019655932542975 x204) x494) (= (x3021 (x2238 x494)) x2861) (= x1897 (x631 (+ x2313 32))) (= (x631 (+ x306 36)) x384)) (and (=> (and (not x1311) (or (and (< x304 4294967296) (= 1 x1186) x2153) (and (not x2153) (= x1186 x2332))) (= x2153 (> x2332 0))) x2928) (=> x1311 x2678))) x802))
(assert (and (= (x1100 10 3) 1000) (= (x1100 10 8) 100000000) (= (x1100 10 12) 1000000000000) (= 100000000000000000000000 (x1100 10 23)) (= (x1100 10 1) 10) (= (x1100 10 10) 10000000000) (= (x1100 10 16) 10000000000000000) (= 100 (x1100 10 2)) (= (x1100 10 11) 100000000000) (= 100000000000000000 (x1100 10 17)) (= (x1100 10 18) 1000000000000000000) (= (x1100 10 20) 100000000000000000000) (= (x1100 10 13) 10000000000000) (= (x1100 10 5) 100000) (= (x1100 10 25) 10000000000000000000000000) (= 10000000 (x1100 10 7)) (= 100000000000000 (x1100 10 14)) (= (x1100 10 26) 100000000000000000000000000) (= (x1100 10 24) 1000000000000000000000000) (= 1000000000000000000000000000 (x1100 10 27)) (= 10000000000000000000000000000 (x1100 10 28)) (= (x1100 10 15) 1000000000000000) (= (x1100 10 19) 10000000000000000000) (= (x1100 10 6) 1000000) (= (x1100 10 0) 1) (= (x1100 10 4) 10000) (= (x1100 10 9) 1000000000) (= 10000000000000000000000 (x1100 10 22)) (= (x1100 10 30) 1000000000000000000000000000000) (= (x1100 10 21) 1000000000000000000000) (= 100000000000000000000000000000 (x1100 10 29))))
(assert (= (x1538 x1532) (ite (= x1532 x518) x2204 (x2010 x1532))))
(assert (x2452 x1356))
(assert (= x1244 (and (not x1324) x47)))
(assert (= (=> (= (= x2587 274184521717934524641157099916833587206) x1641) (and (=> (and (= x543 x1337) (= 22270923681254677845691103109158760375340177724800803888364822332811285364736 x1613) (not (< x2355 826074471)) (= x1583 (x3021 (x2238 274184521717934524641157099916833587206))) (>= x2607 0) (= 1 x2323) x1641 (= x543 4) (not (< x543 4)) (= 826074471 x2355) (> x1583 0) (= x2664 32) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2607)) x1749) (=> (not x1641) x1146))) x1193))
(assert (x2452 x936))
(assert (= x2660 true))
(assert (= x1254 (=> (and (= (< 0 x2330) x318) (= (x631 (+ x942 x220)) x1876) (= x2330 (x1410 x186))) (and (=> (and (= x1759 (x631 (+ x186 32))) x318 (= x1874 x2378)) x237) (=> (not x318) x2678)))))
(assert (x2452 x1706))
(assert (= x1361 (and x705 x2706)))
(assert (x2452 x1348))
(assert (x2452 x2419))
(assert (x2452 x524))
(assert (= x1458 (=> (and (= (x11 1461501637330902918203684832716283019655932542975 x1359) x1285) (= x593 (= x1285 x1359))) (and (=> (not x593) x1235) (=> x593 x65)))))
(assert (x2452 x942))
(assert (x2452 x1785))
(assert (= x2595 (or x1101 (and x2622 x2733))))
(assert (x1863 x2184))
(assert (= (and (not x3112) x2831) x2013))
(assert (x2452 x604))
(assert (= (=> (= (= x979 0) x796) (and (=> x796 x2678) (=> (not x796) x902))) x2693))
(assert (x2452 x1403))
(assert (x2452 x104))
(assert (x2452 x2464))
(assert (= (or (and x2017 x1335) (and x2651 x1228)) x1029))
(assert (x642 x512 x507 x126 x1423))
(assert (= (ite (= x1534 x1822) x48 (x2044 x1822)) (x2977 x1822)))
(assert (x1863 x1760))
(assert (= x2894 (and (not x2399) x295)))
(assert (= (and (not x1187) x2589) x652))
(assert (x2452 x1694))
(assert (x2452 x219))
(assert (= x395 (or (and x550 x1907) (and x2284 x96))))
(assert (x2452 x2628))
(assert (x2452 x134))
(assert (x2452 x1153))
(assert (x2452 x2962))
(assert (x2452 x275))
(assert (= 0 (x447 x2965)))
(assert (x2452 x2621))
(assert (= (x2709 (x94 2743638299)) 2743638299))
(assert (x2452 x2239))
(assert (x2452 x1522))
(assert (x2452 x3014))
(assert (x2452 x1079))
(assert (x2452 x473))
(assert (x2452 x465))
(assert (x2452 x1395))
(assert (= (x915 x75) 0))
(assert (= x1648 (=> (and (= x2059 (x522 x2835)) (= x3031 (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2059) (and (< x2059 32) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2059) true))))) (and (=> (not x3031) x849) (=> x3031 x2678)))))
(assert (x2452 x287))
(assert (x2452 x1867))
(assert (x2452 x2572))
(assert (x2452 x675))
(assert (= x541 (=> (and (= (< 18446744073709551615 x403) x3056) (= x403 (x2049 x1490))) (and (=> x3056 x2678) (=> (and (= x1772 (= 0 x403)) (not x3056) (= x3118 (x631 (+ x1714 x81))) (or x1772 (and (= (x631 (+ 32 x81)) x217) (= (uninterp_mod (* 32 x403) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x2791) (not x1772))) (= (x631 (+ x325 32)) x1714) (= (uninterp_mod (* x403 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x325)) x1162)))))
(assert (= (x1900 x1835) (ite (and x1171 x54 (not x164)) (x718 x1835) (x958 x1835))))
(assert (x1824 x465))
(assert (= (=> (= x1838 (= x2566 0)) (and (=> (not x1838) x976) (=> x1838 x2678))) x1300))
(assert (x1824 x608))
(assert (= (x1805 x1140) 0))
(assert (x2452 x286))
(assert (x1863 x71))
(assert (x2452 x2396))
(assert (x2452 x580))
(assert (not x3108))
(assert (= x1804 (=> (and (= (x1551 (x2238 x2616) (x94 3) 0) x1161) (= x1908 (> x2202 2)) (= (x1085 x2449) x2202) (= (x2302 x1161 2) x2449) (= x2616 (x11 1461501637330902918203684832716283019655932542975 x1522)) (< x2202 256)) (and (=> x1908 x2678) (=> (not x1908) x2554)))))
(assert (= (and x647 x779) x2948))
(assert (x2452 x3119))
(assert (x2452 x1701))
(assert (= (=> (and (= (x923 x406) x502) (= (< 0 x1814) x547) (= (x631 (+ 32 x1412)) x406) (= x1814 (x455 x1724))) (and (=> (not x547) x2678) (=> x547 x1898))) x3135))
(assert (x2452 x324))
(assert (= (ite (= x520 x603) 0 (x1805 x520)) (x2586 x520)))
(assert (x1863 x233))
(assert (x2452 x1708))
(assert (x2452 x817))
(assert (x2452 x156))
(assert (= x1974 (=> (and (= (uninterp_mod (* x679 x985) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x3067) (= x666 (> x1689 0))) (and (=> x666 x1204) (=> (not x666) x2678)))))
(assert (= x2192 (=> (and (= (x631 (+ 4 x3118)) x1942) (= x4 (= x1884 0)) (= x2182 (x631 (+ x1490 32))) (= x772 (x11 1461501637330902918203684832716283019655932542975 x2180)) (= (x3021 (x2238 x329)) x1884) (= x2180 (x923 x2182))) (and (=> (and (= x2034 (< 0 x1307)) (or (and (not x2034) (= x1082 x1307)) (and (> 4294967296 x1049) x2034 (= 1 x1082))) (not x4)) x2776) (=> x4 x2678)))))
(assert (= true x288))
(assert (= x1196 (=> (and (= (x41 x2150) x987) (= x1001 (x2049 x987)) (= x1273 (< 0 x1001))) (and (=> (and (= x306 x2681) (not x1273)) x356) (=> x1273 x1354)))))
(assert (= 0 (x718 x1835)))
(assert (x1824 x1899))
(assert (x2452 x735))
(assert (x2452 x1030))
(assert (= (or (and (not x1106) x1945) (and x2545 (not x196))) x2729))
(assert (x2452 x1747))
(assert (= (or (and x1488 x53) (and x2154 (not x3046))) x3036))
(assert (x2452 x2512))
(assert (x2452 x209))
(assert (x2452 x772))
(assert (= x1533 (or (and (not x2339) x980) (and x3029 (not x387)) (and (not x2507) x1916))))
(assert (x2452 x1540))
(assert (= x2824 (and x593 x989)))
(assert (= x1124 (=> (and (= x1681 x1288) (= x2859 x3008)) x427)))
(assert (= x533 (or (and (not x3051) x2726) (and x1711 (not x2068)) (and (not x1460) x2914))))
(assert (= (=> (and (= (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1086) (and (= true (<= x1086 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (> 32 x1086))) x1557) (= x659 50942633119752846454219349998365661925608737367104304655302372697894809501696) (not (< x292 826074471)) (= x1359 x1662) (= (x2890 (- x1131 4)) x1086) (= (x3021 (x2238 274184521717934524641157099916833587206)) x1947) (= 36 x1131) (= 1889567281 x292) (not (= 826074471 x292)) (< 0 x1947) (= x1131 36) (not (> 4 x1131))) (and (=> (not x1557) x1016) (=> x1557 x2788))) x2194))
(assert (x2452 x595))
(assert (= x1208 (=> (and (= x2254 (> x274 0)) (= x274 (x2049 x1490))) (and (=> (not x2254) x2678) (=> x2254 x2192)))))
(assert (x2452 x1425))
(assert (x1824 x2156))
(assert (x2452 x2395))
(assert (x1824 x18))
(assert (x2452 x1885))
(assert (x2452 x2924))
(assert (= x989 (and (not x1596) x442)))
(assert (= x658 (or (and x1239 x1021) (and x2763 (not x1273)))))
(assert (= (and x2583 x1983) x2984))
(assert (x2452 x1399))
(assert (x1758 x2551 x1650))
(assert (x2452 x1507))
(assert (= x2848 (=> (and (= x2012 x1437) (<= 0 x2322) (<= x2322 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x540 x1682) (= (= 2 x2322) x106)) (and (=> (not x106) x1804) (=> x106 x2678)))))
(assert (x2452 x75))
(assert (x2452 x1562))
(assert (x1824 x2862))
(assert (x2452 x2493))
(assert (= (=> (and (= x597 x853) (= x1988 x1531)) x452) x1731))
(assert (= (and (not x1852) x2826) x2706))
(assert (= (=> (and (= (- (/ 115792089237316195423570985008687907853269984665640564039457584007913129639935 x540) (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x540)) x1830) (= (= 0 x1682) x1683) (= (ite (not x1683) 1 0) x1005) (= x495 (= x770 0)) (= x2275 (ite (> x852 x1830) 1 0)) (= x770 (x11 x1005 x2275))) (and (=> (not x495) x2678) (=> x495 x461))) x2119))
(assert (x2452 x2711))
(assert (= (x2977 x1256) (ite (= x1534 x1256) x48 (x2044 x1256))))
(assert (= (x2709 (x2238 x1071)) x1071))
(assert (x2452 x2877))
(assert (= x2406 (or (and x2732 x1184) x2950)))
(assert (x2452 x2278))
(assert (= (=> (and (not (= 1889567281 x1987)) (= x1325 x1359) (= x1596 (or (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x953)) (< x953 64)) (> x953 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (not (= 2514000705 x1987)) (not (= 826074471 x1987)) (not (> 4 x1474)) (not (> 826074471 x1987)) (= (x2890 (- x1474 4)) x953) (= x338 x2290) (= x1474 68) (= x1433 x1474) (= (x3021 (x2238 274184521717934524641157099916833587206)) x3072) (= x1987 2835717307) (= 76450787359836037641860180984291677749980919077056822294353438043884394381312 x1473) (< 0 x3072)) (and (=> (not x1596) x1458) (=> x1596 x1235))) x1003))
(assert (x1206 x2967 x369))
(assert (x2452 x1155))
(assert (= (=> (= x375 (= x2742 274184521717934524641157099916833587206)) (and (=> (not x375) x605) (=> (and (= 4 x680) (= 10894474682274239493831243662817379401261526446360622092269559273883068006400 x1602) (= x680 x1063) (not (= x366 117300739)) x375 (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x795) (< x366 826074471) (= 404098525 x366) (not (< x680 4)) (= x2886 (x3021 (x2238 274184521717934524641157099916833587206))) (not (= 157198259 x366)) (= 32 x2199) (= x979 1) (<= 0 x795) (> x2886 0)) x2693))) x298))
(assert (x2452 x1306))
(assert (= (=> (= (> x707 x1409) x3102) (and (=> x3102 x1552) (=> (not x3102) x2466))) x800))
(assert (x2452 x2600))
(assert (x2452 x82))
(assert (= (x2238 71356987572919795984103299673912204194632180251134163011139925636576289226752) (x94 71356987572919795984103299673912204194632180251134163011139925636576289226752)))
(assert (x2452 x2108))
(assert (x2452 x3137))
(assert (x2864 x1142 x354))
(assert (= x2429 (and (not x2315) x2183)))
(assert (x1863 x337))
(assert (x2452 x334))
(assert (x1863 x2180))
(assert (x2452 x1631))
(assert (x2452 x1707))
(assert (x2452 x2933))
(assert (x2452 x3004))
(assert (= x1665 (=> (and (= 4 x1825) (= (x1892 x75) x247) (= (x3021 (x2238 x2721)) x1472) (= x252 (= x1472 0)) (= x2721 (x11 1461501637330902918203684832716283019655932542975 x247)) (= x2468 (x631 (+ 128 x520))) (= x75 (x631 (+ x520 32))) (= x738 (x2326 x2468))) (and (=> x252 x2678) (=> (not x252) x244)))))
(assert (x2452 x2209))
(assert (x1863 x1399))
(assert (x2452 x2150))
(assert (= (and x2115 (not x1400)) x1068))
(assert (x2452 x691))
(assert (x2452 x475))
(assert (x2452 x1716))
(assert (x2452 x2927))
(assert (= x553 (=> (and (= x719 (x2049 x1412)) (= x1197 (> x719 0))) (and (=> (not x1197) x2678) (=> x1197 x3135)))))
(assert (x2452 x1726))
(assert (x2452 x3072))
(assert (x1863 x1941))
(assert (x1863 x1005))
(assert (= true x2402))
(assert (x2452 x1149))
(assert (x2452 x1431))
(assert (x2452 x462))
(assert (x2452 x1182))
(assert (x2452 x1655))
(assert (= (ite (and x2360 (not x2260) x583) (x1805 x1140) (ite (and (not x583) x2360 (not x2260) (not x309)) (x2586 x1140) (x2078 x1140))) (x2067 x1140)))
(assert (= (x2709 (x2238 x2616)) x2616))
(assert (x2452 x662))
(assert (= (x205 x2863) (ite (= x539 x2863) x655 (x1252 x2863))))
(assert (x2452 x982))
(assert (= (+ (x2709 x2811) 2) (x2709 (x2302 x2811 2))))
(assert (x2452 x2037))
(assert (x2452 x1942))
(assert (x2452 x272))
(assert (= (or (and x2577 x2542) (and (not x203) x2555)) x1571))
(assert (x1863 x2064))
(assert (x2452 x545))
(assert (x2452 x2710))
(assert (= (=> (and (= x607 (x2634 x2965)) (= (- (/ 115792089237316195423570985008687907853269984665640564039457584007913129639935 x607) (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x607)) x2748) (= x781 (= 0 x607)) (= x2965 (x631 (+ 160 x1240))) (= x1775 (= x3068 0)) (= (x11 x1710 x225) x3068) (= x1710 (ite (not x781) 1 0)) (= x225 (ite (< x2748 x2020) 1 0))) (and (=> x1775 x3077) (=> (not x1775) x2678))) x2140))
(assert (x1863 x247))
(assert (x2452 x573))
(assert (x2452 x1886))
(assert (= 0 (x3079 x2796)))
(assert (x2452 x807))
(assert (= x2669 (=> (and (= x2290 x540) (= x1212 x2327) (= x785 x3073)) x1266)))
(assert (x2452 x1376))
(assert (= x2433 (=> (and (= (x2049 x508) x1365) (= x508 (x41 x2150)) (= (< 18446744073709551615 x1365) x263)) (and (=> (and (= (x631 (+ x186 x1274)) x791) (not x263) (= (= x1365 0) x1937) (= (uninterp_mod (* 32 x1365) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x2936) (or x1937 (and (not x1937) (= (x631 (+ 32 x186)) x2572) (= x689 (uninterp_mod (* 32 x1365) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (= x1274 (x631 (+ x2936 32)))) x3055) (=> x263 x2678)))))
(assert (x2452 x190))
(assert (= x1418 (and x2308 (not x2652))))
(assert (x1863 x711))
(assert (x2452 x2566))
(assert (= (and x2417 (not x370)) x1036))
(assert (x2452 x2574))
(assert (x1863 x1286))
(assert (= (and (not x2405) x2387) x1))
(assert (x2452 x404))
(assert (= (and x558 (not x611)) x47))
(assert (= (x2709 (x2238 x2742)) x2742))
(assert (= (=> (= x1483 (= 274184521717934524641157099916833587202 x2004)) (and (=> (not x1483) x1105) (=> x1483 x754))) x2329))
(assert (= (x804 x2336) 0))
(assert (= x2014 (=> (and (= 0 x1080) (= x2132 x594)) x2983)))
(assert (= x1576 (and x2759 (not x349))))
(assert (x2452 x1441))
(assert (= x3029 (and x2507 x1916)))
(assert (x2452 x1760))
(assert (= x2015 (and (not x692) x1429)))
(assert (= x664 true))
(assert (x2452 x1370))
(assert (= (=> (= x1213 (> x1075 x2071)) (and (=> x1213 x2430) (=> (not x1213) x132))) x859))
(assert (= x1296 (and x1812 x2934)))
(assert (= x2914 (and x884 x619)))
(assert (= x1982 (x2709 (x2238 x1982))))
(assert (x2452 x86))
(assert (x2452 x577))
(assert (= (ite (and x2269 (not x1654) x291) (x2293 x1811) (x2471 x1811)) (x922 x1811)))
(assert (x2452 x2468))
(assert (x2452 x1305))
(assert (x2452 x1771))
(assert (=> (< (- x1220 1) 10000) (= (x2238 x1220) (x94 x1220))))
(assert (= x2899 (and x1384 (not x3031))))
(assert (x2452 x1203))
(assert (= 0 (x1998 x1542)))
(assert (= (=> (and (= x595 (x631 (+ 31 x1771))) (= (x631 (+ x2905 x1132)) x2636) (= x2666 (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1771) (and (= true (<= x1771 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (> 32 x1771)))) (= (x11 115792089237316195423570985008687907853269984665640564039457584007913129639904 x595) x1132)) (and (=> x2666 x2678) (=> (not x2666) x2289))) x976))
(assert (x1824 x2256))
(assert (= (ite (and (not x1654) x2269 x291) (x2293 x2414) (x2471 x2414)) (x922 x2414)))
(assert (= (x232 x1120) (ite (and (not x584) x200 x2598) (x339 x1120) (x2853 x1120))))
(assert (=> (< (- x2616 1) 10000) (= (x2238 x2616) (x94 x2616))))
(assert (x2452 x1599))
(assert (= x2042 (or x1436 x2102)))
(assert (= (=> (and (= x1095 (> x2290 x1837)) (= x894 x338) (= (x2010 x1141) x1837) (<= x1837 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= x1837 0) (= x1141 (x1551 (x2238 274184521717934524641157099916833587231) (x94 1) 0)) (= 274184521717934524641157099916833587231 x961)) (and (=> x1095 x1235) (=> (not x1095) x2117))) x65))
(assert (= x1192 x2406))
(assert (= (and (not x351) x713) x2213))
(assert (x2452 x1619))
(assert (x2452 x1837))
(assert (x2452 x2748))
(assert (= (x2709 (x94 32884410799705633174121290916597065681711743008034783737682747490404042539008)) 32884410799705633174121290916597065681711743008034783737682747490404042539008))
(assert (x2452 x1383))
(assert (x1863 x2111))
(assert (= (x2786 x3101) (ite (and (not x2260) x583 x2360) (x1881 x3101) (ite (and (not x2260) (not x309) x2360 (not x583)) (x2641 x3101) (x1763 x3101)))))
(assert (x2452 x46))
(assert (= x1789 (and x255 (not x1641))))
(assert (x1758 x71 x1201))
(assert (x2452 x812))
(assert (= (=> (and (= x1902 (x11 1461501637330902918203684832716283019655932542975 x1359)) (= x2739 (= x1902 x1359))) (and (=> x2739 x2836) (=> (not x2739) x1137))) x1523))
(assert (x2452 x1455))
(assert (x2452 x2280))
(assert (= x1169 (=> (and (= x2820 (x299 x1835)) (= (x2890 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2820)) x579) (= x1981 (> 0 x579)) (= x1835 (x631 (+ 32 x1724)))) (and (=> (and (= x1306 (x455 x1724)) (= x2820 x1745) (not x1981) (= (< 1 x1306) x837) (not x837) (= x1745 x2510)) x1768) (=> x1981 x2678)))))
(assert (= (=> (and (= x74 (> x1467 0)) (= x3071 (- (/ x3067 x1689) (uninterp_frac x3067 x1689))) (= (x455 x1724) x1467)) (and (=> (and (= (x631 (+ 32 x1724)) x1740) (= x875 x1126) x74) x467) (=> (not x74) x2678))) x1204))
(assert (x2452 x2164))
(assert (x2452 x2332))
(assert (x1758 x66 x411))
(assert (x2452 x2372))
(assert (x2452 x469))
(assert (x2452 x897))
(assert (x1863 x225))
(assert (= (and (not x708) x908) x1633))
(assert (x642 x2743 x2187 x805 x2228))
(assert (x2452 x729))
(assert (x2452 x98))
(assert (x2452 x1746))
(assert (x2452 x342))
(assert (x2452 x933))
(assert (x2452 x1887))
(assert (= x363 (and (not x1977) x3113)))
(assert (x2452 x513))
(assert (= (=> (= x647 (= x1375 274184521717934524641157099916833587202)) (and (=> x647 x1283) (=> (not x647) x288))) x2559))
(assert (= 0 (x482 x1362)))
(assert (x2452 x18))
(assert (x2452 x574))
(assert (= (x2238 117300739) (x94 117300739)))
(assert (= (x2709 (x94 404098525)) 404098525))
(assert (x2452 x970))
(assert (x2452 x3123))
(assert (= x2004 (x2709 (x2238 x2004))))
(assert (x2452 x2118))
(assert (x2452 x823))
(assert (x1863 x560))
(assert (x2452 x37))
(assert (x1758 x2180 x1713))
(assert (x1758 x1143 x415))
(assert (=> (< (- x2874 1) 10000) (= (x2238 x2874) (x94 x2874))))
(assert (x2452 x2256))
(assert (= x1698 (=> (and (= (x1009 x1542) x1098) (= (= x1098 0) x2867) (= x1542 (x631 (+ x186 32)))) (and (=> (and x2867 (= x307 x875)) x467) (=> (not x2867) x2029)))))
(assert (= (and x1440 x1033) x2056))
(assert (= x1154 (=> (and (= x1504 (= x2262 0)) (= x1760 (x923 x1435)) (= (x631 (+ 32 x2336)) x1435) (= x101 (x631 (+ x307 4))) (= (x11 1461501637330902918203684832716283019655932542975 x1760) x2113) (= (x3021 (x2238 x329)) x2262)) (and (=> (and (or (and (not x1382) (= x2142 x1355)) (and x1382 (= 1 x1355) (< x1586 4294967296))) (not x1504) (= (> x2142 0) x1382)) x297) (=> x1504 x2678)))))
(assert (= x2513 (or (and x821 x412) (and x1179 x909) (and x464 x2122) (and x1133 (not x2739)) (and x2989 x534) (and x1920 x279))))
(assert (x2452 x862))
(assert (= (=> (= (= 0 x832) x386) (and (=> (not x386) x975) (=> x386 x2678))) x79))
(assert (= (and x1429 x692) x1757))
(assert (= (and (not x2756) x2623) x1971))
(assert (= x461 (=> (and (= (< 0 x219) x446) (= x173 (uninterp_mod (* x540 x852) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (and (=> (not x446) x2678) (=> (and (= (- (/ x173 x219) (uninterp_frac x173 x219)) x812) x446 (= x812 x1708)) x761)))))
(assert (= (x1881 x3101) 0))
(assert (x1824 x2065))
(assert (x2452 x1126))
(assert (x2452 x811))
(assert (x2452 x3138))
(assert (= (and x1133 x2739) x2122))
(assert (x2452 x289))
(assert (x2452 x2082))
(assert (x2452 x2175))
(assert (x2452 x1001))
(assert (= (x2238 3939881817) (x94 3939881817)))
(assert (x2452 x775))
(assert (x2452 x1717))
(assert (= x1211 (=> (and (= (> x1792 0) x1994) (= x1792 (x3104 x2097))) (and (=> (not x1994) x2678) (=> x1994 x1318)))))
(assert (x2452 x191))
(assert (x2452 x2287))
(assert (x2452 x503))
(assert (= (- (/ x1693 2) (uninterp_frac x1693 2)) (x2242 x1693 1)))
(assert (= x3090 (=> (and (= (or (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x590)) (< x590 32)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x590)) x3107) (= (x631 (+ 128 x2240)) x2327) (= (x11 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1182) x2240) (= x1182 (x631 (+ 31 x590)))) (and (=> x3107 x2678) (=> (not x3107) x259)))))
(assert (x2452 x2524))
(assert (x2452 x2474))
(assert (x2452 x2667))
(assert (x642 x2561 x2356 x152 x1368))
(assert (= x1224 true))
(assert (= (ite (and x2360 x583 (not x2260)) (x1744 x404) (ite (and (not x309) (not x583) (not x2260) x2360) (x2031 x404) (x2916 x404))) (x863 x404)))
(assert (x2452 x1263))
(assert (= x2075 (=> (and (= x1716 (x568 x1631)) (= (< 0 x1716) x361) (= x1631 (x2362 x2667)) (= (x1932 x2636) x709)) (and (=> (not x361) x2678) (=> x361 x704)))))
(assert (x2452 x1362))
(assert (= x2635 (=> (and (= x1565 (< 0 x1455)) (= x985 (x1547 x307)) (= (x2049 x2336) x1455)) (and (=> x1565 x2956) (=> (not x1565) x2678)))))
(assert (x2452 x408))
(assert (= x1723 (=> (= (= x1415 274184521717934524641157099916833587202) x223) (and (=> (not x223) x2402) (=> x223 x1159)))))
(assert (x2452 x1475))
(assert (x2452 x912))
(assert (x1863 x2205))
(assert (= x769 (=> (and (= (x1410 x186) x2986) (= (= x1808 x2986) x1782) (= x2336 (x41 x2150)) (= x1808 (x2049 x2336))) (and (=> x1782 x1454) (=> (not x1782) x2678)))))
(assert (x2452 x406))
(assert (x2452 x2548))
(assert (x2452 x1176))
(assert (x2452 x1567))
(assert (x2452 x142))
(assert (= (and (not x1013) x1992) x1462))
(assert (= (x2238 (x2709 x2543)) x2543))
(assert (= 0 (x804 x987)))
(assert (= (=> (and (= x1926 x2825) (= 0 x1612)) x994) x2788))
(assert (x2452 x2091))
(assert (= (=> (= x1388 (= x1375 274184521717934524641157099916833587202)) (and (=> (not x1388) x2915) (=> (and (not (= x1344 157198259)) (<= x2790 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= 1 x1174) (= x1344 404098525) (<= 0 x2790) (not (= 117300739 x1344)) (< x1344 826074471) (= x2911 4) x1388 (= 4 x2911) (= x590 32) (not (> 4 x2911)) (= x485 10894474682274239493831243662817379401261526446360622092269559273883068006400) (< 0 x1372) (= x1372 (x3021 (x2238 274184521717934524641157099916833587202)))) x1281))) x3005))
(assert (x2452 x326))
(assert (x2452 x2838))
(assert (= (and x1651 (not x1304)) x2308))
(assert (x2452 x1209))
(assert (x1758 x1359 x1966))
(assert (= (=> (= x114 (= 0 x2267)) (and (=> x114 x2678) (=> (not x114) x842))) x905))
(assert (= x1675 (=> (= x2652 (= x2105 0)) (and (=> x2652 x2678) (=> (not x2652) x1591)))))
(assert (= x2445 (=> (and (= x1625 (> x2710 0)) (= (uninterp_mod (* x1870 x540) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x1444)) (and (=> (and (= x2646 (- (/ x1444 x2710) (uninterp_frac x1444 x2710))) x1625 (= x2646 x785)) x2669) (=> (not x1625) x2678)))))
(assert (= x1262 (and x1775 x766)))
(assert (= (x260 x1646) 0))
(assert (= (=> (and (= x1460 (> x258 0)) (= (x1009 x1542) x679)) (and (=> (and (not x1460) (= x1689 1)) x1480) (=> x1460 x2856))) x206))
(assert (x2452 x2128))
(assert (x1863 x1319))
(assert (= (=> (and (= x1700 x1203) (= x951 x540) (= x1708 x762)) x551) x761))
(assert (= (=> (and (= 0 x2517) (= x2808 x1692)) x1027) x1069))
(assert (x2452 x527))
(assert (= 0 (x804 x508)))
(assert (x2452 x172))
(assert (= x766 (and (not x2505) x1157)))
(assert (= (and (not x1257) x1190) x2817))
(assert (x2452 x2480))
(assert (= (and (not x1054) x1243) x2312))
(assert (x2452 x1479))
(assert (= x3139 (x2238 (x2709 x3139))))
(assert (= (ite (= x2965 x1191) 0 (x447 x2965)) (x2036 x2965)))
(assert (= (x1832 x450) 0))
(assert (x2452 x34))
(assert (x1863 x1325))
(assert (x2452 x344))
(assert (x2452 x953))
(assert (= (and (not x111) x478) x2002))
(assert (x2452 x2976))
(assert (=> (< (- x1163 1) 10000) (= (x94 x1163) (x2238 x1163))))
(assert (= (ite (and x2981 x2099 (not x929)) (x1559 x2740) (x213 x2740)) (x3133 x2740)))
(assert (= x1051 (and x3076 x2028)))
(assert (= (=> (= x2801 (= x1174 0)) (and (=> x2801 x2678) (=> (not x2801) x3090))) x1281))
(assert (x2452 x973))
(assert (x2452 x620))
(assert (x2452 x1130))
(assert (x2452 x2439))
(assert (x2452 x1288))
(assert (= (x2709 (x94 3939881817)) 3939881817))
(assert (= (and (not x3) x2817) x1548))
(assert (= (and x2840 x1994) x980))
(assert (= (=> (and (= (x1410 x186) x2246) (= x884 (< 0 x2246))) (and (=> x884 x206) (=> (not x884) x2678))) x207))
(assert (= (=> (and (= (> x1497 0) x803) (= x1497 (x522 x2835))) (and (=> x803 x1648) (=> (not x803) x2467))) x2673))
(assert (= (and x291 (not x1654)) x1292))
(assert (x2452 x1194))
(assert (x2452 x3007))
(assert (= (and x2339 x980) x1916))
(assert (x1758 x1760 x2686))
(assert (= (and x280 (not x3125)) x2830))
(assert (= (x3133 x3123) (ite (and (not x929) x2099 x2981) (x1559 x3123) (x213 x3123))))
(assert (= (and (not x2320) x439) x1755))
(assert (= (and (not x3056) x2043) x1367))
(assert (= (and x2914 x1460) x2726))
(assert (x2452 x1759))
(assert (x2452 x2290))
(assert (= x1101 (or (and x280 x3125) (and x3094 x1487))))
(assert (x2452 x2742))
(assert (x2452 x2148))
(assert (x2452 x2325))
(assert (x2452 x711))
(assert (x2452 x2162))
(assert (x1824 x563))
(assert (x2452 x730))
(assert (x2452 x2792))
(assert (x2452 x1322))
(assert (= (x2709 (x2238 x393)) x393))
(assert (x2452 x1577))
(assert (x2452 x304))
(assert (x1824 x2024))
(assert (= x1026 x1379))
(assert (x2452 x2077))
(assert (x2452 x1492))
(assert (x2452 x1600))
(assert (= x1601 (=> (and (= x131 (x11 x2064 x146)) (= (ite (> x1717 x1128) 1 0) x146) (= x1299 (= x174 0)) (= x283 (= 0 x131)) (= x1128 (- (/ 115792089237316195423570985008687907853269984665640564039457584007913129639935 x174) (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x174))) (= x2064 (ite (not x1299) 1 0))) (and (=> x283 x790) (=> (not x283) x2678)))))
(assert (= x1270 (x2709 (x2238 x1270))))
(assert (x2452 x2498))
(assert (=> (< (- x2065 1) 10000) (= (x94 x2065) (x2238 x2065))))
(assert (= x971 (or x2226 x2547)))
(assert (x2452 x274))
(assert (x2452 x1435))
(assert (= (and x2536 (not x1122)) x2906))
(assert (x2452 x1826))
(assert (x2452 x2582))
(assert (x2452 x1670))
(assert (x2452 x2681))
(assert (x2452 x710))
(assert (x2452 x2151))
(assert (= x665 (=> (and (= (x2362 x2667) x2175) (= x1797 (x568 x2175)) (= x794 (x2362 x2667)) (= x1401 (= x1797 x2441)) (= x2441 (x568 x794))) (and (=> x1401 x2433) (=> (not x1401) x2678)))))
(assert (x2452 x2560))
(assert (x2452 x1421))
(assert (x2452 x278))
(assert (= 0 (x3079 x107)))
(assert (= x182 (=> (= (= 0 x1606) x1089) (and (=> (not x1089) x2971) (=> x1089 x2678)))))
(assert (x2452 x659))
(assert (x2452 x771))
(assert (x2452 x2661))
(assert (x1863 x742))
(assert (= x773 true))
(assert (x1206 x2891 x233))
(assert (x2452 x1835))
(assert (= (=> (= (= x2227 0) x2361) (and (=> (not x2361) x212) (=> x2361 x2678))) x598))
(assert (x1206 x2419 x67))
(assert (x1863 255))
(assert (= (and x1173 x150) x2545))
(assert (x642 x542 x2092 x1914 x188))
(assert (x2452 x2608))
(assert (x2452 x1314))
(assert (x1824 x2552))
(assert (x2452 x2953))
(assert (= (ite (= x1927 x3128) x268 (x2063 x3128)) (x399 x3128)))
(assert (= (x718 x1694) 0))
(assert (x1758 x2190 x903))
(assert (x2452 x3084))
(assert (x2452 x669))
(assert (x2452 x792))
(assert (x2452 x2352))
(assert (= (ite (and x2598 x200 (not x584)) (x339 x1469) (x2853 x1469)) (x232 x1469)))
(assert (x2452 x1174))
(assert (x2452 x14))
(assert (= x2956 (=> (and (= x1777 (x3021 (x2238 x2587))) (= (x923 x1435) x1492) (= x1337 4) (= (x11 1461501637330902918203684832716283019655932542975 x1492) x2587) (= x2803 (= 0 x1777))) (and (=> x2803 x2678) (=> (not x2803) x1193)))))
(assert (x2452 x3146))
(assert (= (x1959 x75) (ite (and x583 x2360 (not x2260)) (x915 x75) (ite (and (not x2260) (not x309) x2360 (not x583)) (x1696 x75) (x1956 x75)))))
(assert (x2452 x2369))
(assert (x1824 x329))
(assert (x2452 x325))
(assert (x2171 x2816))
(assert (= x1702 (=> (and (= x1487 (> x2633 0)) (= x2703 (uninterp_mod (* x2877 x1739) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (and (=> (and (= (- (/ x2703 x2633) (uninterp_frac x2703 x2633)) x1067) (= x1067 x1787) x1487) x1465) (=> (not x1487) x2678)))))
(assert (x2452 x1947))
(assert (= x2618 (and x1973 (not x1032))))
(assert (x2452 x485))
(assert (x2452 x962))
(assert (= (=> (= x370 (= x816 0)) (and (=> x370 x2678) (=> (not x370) x2249))) x851))
(assert (x988 x1693 x1839))
(assert (x1863 x146))
(assert (x2452 x788))
(assert (=> (> (+ 10000 1) x1270) (= (x94 x1270) (x2238 x1270))))
(assert (= (x1603 x2201) 0))
(assert (= 0 (x260 x794)))
(assert (x2452 x2334))
(assert (x2452 x238))
(assert (= (x1687 (- x1585 x1991)) 0))
(assert (= (x3079 x119) 0))
(assert (x2452 x1927))
(assert (= (and x614 (not x1791)) x1889))
(assert (x2452 x2942))
(assert (= x1944 (and (not x251) x1996)))
(assert (x2452 x2147))
(assert (x2452 x91))
(assert (x2452 x2663))
(assert (x2452 x1797))
(assert (= (and (not x430) x1915) x808))
(assert (x1824 x2999))
(assert (x2452 x1278))
(assert (x2452 x2004))
(assert (x1863 x2380))
(assert (x2452 x1412))
(assert (x2452 x2353))
(assert (= x1957 (and (not x1703) x1396)))
(assert (= x1668 (or (and x2880 (not x147)) (and x2772 x1557))))
(assert (x1863 x669))
(assert (= (or (and (not x3028) x343) x1261) x1806))
(assert (x2452 x2375))
(assert (x2452 x2327))
(assert (x2452 x1623))
(assert (= x280 (and x2860 (not x1020))))
(assert (x2452 x2764))
(assert (x2452 x875))
(assert (x2452 x88))
(assert (x2452 x2506))
(assert (= (x1378 x2687) 0))
(assert (x2452 x1850))
(assert (=> (< (- x563 1) 10000) (= (x2238 x563) (x94 x563))))
(assert (x2452 x831))
(assert (= x2975 (or (and x1419 x759) (and x116 x676))))
(assert (x2452 x2561))
(assert (x2452 x1067))
(assert (= x1163 (x2709 (x2238 x1163))))
(assert (= (and (not x2258) x1073) x1508))
(assert (x2452 x1090))
(assert (= (and x921 x1333) x2772))
(assert (= (x2025 x2965) (ite (and x2360 (not x2260) x583) (x447 x2965) (ite (and (not x2260) (not x583) x2360 (not x309)) (x2036 x2965) (x634 x2965)))))
(assert (= (x2709 (x2238 x2256)) x2256))
(assert (x2452 x639))
(assert (x1824 274184521717934524641157099916833587206))
(assert (x2452 x680))
(assert (= (x1538 x1350) (ite (= x1350 x518) x2204 (x2010 x1350))))
(assert (= (=> (= (= x2004 274184521717934524641157099916833587206) x567) (and (=> x567 x727) (=> (not x567) x2329))) x530))
(assert (x2452 x2181))
(assert (= x1173 (and x1971 (not x2469))))
(assert (x2452 x594))
(assert (x2452 x2033))
(assert (x2452 x2205))
(assert (= (=> (and (= x2524 (x11 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1309)) (= (x631 (+ 31 x879)) x1309) (= x2844 (x631 (+ x632 x2524))) (= x23 (or (> x879 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= true (<= x879 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (< x879 32))))) (and (=> x23 x2678) (=> (not x23) x2532))) x975))
(assert (x2452 x1160))
(assert (= (=> (and (= (> x1323 0) x1611) (= x684 (uninterp_mod (* x2727 x2303) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (and (=> x1611 x1351) (=> (not x1611) x2678))) x1575))
(assert (x2452 x101))
(assert (x2452 x757))
(assert (x2452 x939))
(assert (x2452 x2196))
(assert (= (x178 x1256) (ite (= x2645 x1256) x1540 (x922 x1256))))
(assert (x1863 1))
(assert (x2452 x1614))
(assert (= x356 (=> (and (= (> x2777 0) x1879) (= x2777 (x3104 x2097))) (and (=> x1879 x3019) (=> (and (= 0 x818) (not x1879)) x1147)))))
(assert (= x1535 (=> (and (= x597 x1088) (= x1786 x1988)) x452)))
(assert (x2452 x2216))
(assert (x2452 x202))
(assert (= (=> (= x2484 (= x3115 0)) (and (=> (and (= x2366 x1874) (= 0 x942) x2484) x1108) (=> (not x2484) x1665))) x2496))
(assert (= (x922 x36) (ite (and (not x1654) x2269 x291) (x2293 x36) (x2471 x36))))
(assert (= x1581 (and x2644 x2368)))
(assert (x2452 x2847))
(assert (x2452 x470))
(assert (= (x2709 (x94 22876116169567568662247501733108717860502184539943453785307321755797215510528)) 22876116169567568662247501733108717860502184539943453785307321755797215510528))
(assert (x2452 x345))
(assert (x2452 x1931))
(assert (= (=> (and (= (x11 1461501637330902918203684832716283019655932542975 x1359) x934) (= x147 (= x934 x1359))) (and (=> (and (= (x11 1461501637330902918203684832716283019655932542975 x1662) x1071) (= x924 (x2853 x2089)) (= x1612 1) (= (x1551 (x2238 x1071) (x94 1) 0) x2089) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x924) (>= x924 0) x147 (= 32 x1926)) x994) (=> (not x147) x2788))) x1016))
(assert (= x1407 (=> (and (= (x631 (+ x1055 31)) x817) (= x2530 (x631 (+ x2447 x2462))) (= x2447 (x11 115792089237316195423570985008687907853269984665640564039457584007913129639904 x817)) (= (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1055) (and (< x1055 32) (= true (<= x1055 57896044618658097711785492504343953926634992332820282019728792003956564819967)))) x1400)) (and (=> x1400 x2678) (=> (not x1400) x2139)))))
(assert (x1758 x1286 x3142))
(assert (x2452 x2374))
(assert (x2452 x1420))
(assert (x2452 x1766))
(assert (= x1267 (and (not x2588) x686)))
(assert (x2452 x667))
(assert (= (=> (and (= x2859 x1695) (= 0 x1681)) x1124) x1338))
(assert (= (=> (= x1335 (= 274184521717934524641157099916833587206 x1982)) (and (=> (and (= x1055 32) (= x1144 4) (= 22270923681254677845691103109158760375340177724800803888364822332811285364736 x2235) (= x1476 x1144) (= x2053 826074471) (>= x2607 0) (> x2261 0) (<= x2607 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x3021 (x2238 274184521717934524641157099916833587206)) x2261) (= 1 x2209) (not (> 4 x1144)) x1335 (not (< x2053 826074471))) x2602) (=> (not x1335) x1954))) x2491))
(assert (x2452 x1622))
(assert (x2452 x2960))
(assert (x2452 x1876))
(assert (= x276 (=> (and (not x572) (= (< 1 x2707) x572) (= x887 x186) (= (x2049 x1490) x2707)) x565)))
(assert (x2452 x2152))
(assert (x2452 x2316))
(assert (= x1992 (or (and x1741 x2093) (and x2232 x428))))
(assert (= x1336 (=> (and (= (- (/ 115792089237316195423570985008687907853269984665640564039457584007913129639935 x540) (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x540)) x3089) (= x2992 (x11 x1395 x2095)) (= (= 0 x1682) x1334) (= (ite (> x1870 x3089) 1 0) x2095) (= x2174 (= x2992 0)) (= (ite (not x1334) 1 0) x1395)) (and (=> (not x2174) x2678) (=> x2174 x2445)))))
(assert (= (or (and x3087 x2429) (and x2183 x2315)) x2716))
(assert (= (x94 1000000000000000000) (x2238 1000000000000000000)))
(assert (x2452 x2005))
(assert (x2452 x2134))
(assert (x2452 x608))
(assert (x2452 x1798))
(assert (x2452 x1191))
(assert (= 0 (x822 x2468)))
(assert (x2452 x2550))
(assert (x2452 x789))
(assert (= x2901 (=> (and (= (< x823 x2520) x534) (= x823 (x631 (+ x195 x2520)))) (and (=> x534 x1137) (=> (and (not x534) (= x939 1) (= 32 x46) (= (x11 1461501637330902918203684832716283019655932542975 x2392) x1163) (= (x1551 (x2238 x1163) (x94 1) 0) x633) (= x1845 x2369)) x1404)))))
(assert (= (and x394 x1051) x558))
(assert (x2452 x2129))
(assert (= (x2709 (x94 1461501637330902918203684832716283019655932542976)) 1461501637330902918203684832716283019655932542976))
(assert (= 18446744073709551615 (x2709 (x94 18446744073709551615))))
(assert (x2452 x1437))
(assert (= x670 (and (not x2232) x428)))
(assert (x2452 x956))
(assert (= (and (not x1213) x2894) x1073))
(assert (x1758 x3078 x33))
(assert (x2452 x2473))
(assert (= (=> (and (>= x2079 0) (= x448 (x11 1461501637330902918203684832716283019655932542975 x711)) (= (x1551 (x2238 x448) (x94 1) 0) x1822) (= x48 (x2890 (- x2071 x1075))) (= (x1551 (x2238 274184521717934524641157099916833587231) (x94 1) 0) x1534) (= x2079 (x2977 x1822)) (= (> x2079 x2177) x2258) (<= x2079 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x2177 (x2890 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1075))) (= x1912 274184521717934524641157099916833587231)) (and (=> (not x2258) x2931) (=> x2258 x2430))) x132))
(assert (x2452 x2569))
(assert (x2452 x1255))
(assert (= x1316 (=> (and (= (= x702 0) x294) (= x702 (x631 (+ x2877 x3115)))) (and (=> (not x294) x2365) (=> (and (= x2905 x2378) x294) x237)))))
(assert (x1758 x272 x1489))
(assert (= x2874 (x2709 (x2238 x2874))))
(assert (x1824 x127))
(assert (= x629 (and x1754 (not x1854))))
(assert (x2452 x740))
(assert (x1863 x1526))
(assert (= (and (not x1241) x2948) x2529))
(assert (= x2573 (and (not x746) x1418)))
(assert (x1863 x2218))
(assert (= (x804 x2022) 0))
(assert (= (x2238 1461501637330902918203684832716283019655932542975) (x94 1461501637330902918203684832716283019655932542975)))
(assert (x2452 x2965))
(assert (= (=> (and (= (x11 1461501637330902918203684832716283019655932542975 x2874) x191) (= x2354 (= x191 x2874)) (= x2874 (x3075 x2905))) (and (=> x2354 x29) (=> (not x2354) x2678))) x2289))
(assert (x2452 x719))
(assert (x2452 x3030))
(assert (x2452 x3018))
(assert (x1863 x1593))
(assert (= x1260 true))
(assert (= (and (not x2361) x1564) x1038))
(assert (= (and (not x2401) x2906) x1426))
(assert (= (x2238 (x2709 x2250)) x2250))
(assert (=> (> (+ 10000 1) x883) (= (x94 x883) (x2238 x883))))
(assert (x2452 x2515))
(assert (= (ite (= x1083 x335) x603 (x1881 x1083)) (x2641 x1083)))
(assert (= x1459 (=> (and (= (x631 (+ x1212 32)) x107) (= x3057 (x631 (+ 76450787359836037641860180984291677749980919077056822294353438043884394381312 x2285))) (= x874 (x631 (+ x1212 36))) (= (x11 26959946667150639794667015087019630673637144422540572481103610249215 x1142) x2285) (= (x2890 (- x1743 x1212)) x2533) (= x2028 (> x1580 0)) (= x2444 (x2890 (- x2533 32))) (= x2236 (x631 (+ 128 x874))) (= (x350 x107) x1142) (= (x631 (+ x1212 68)) x1663) (= (x631 (+ 100 x1212)) x1743) (= (x11 1461501637330902918203684832716283019655932542975 x1522) x2999) (= x80 0) (= (x3021 (x2238 x2999)) x1580)) (and (=> (not x2028) x2678) (=> (and (= x2039 (> x3137 x341)) x2028 (or (and (not x1056) (= x3137 0)) (and (= x3062 x2236) (or (and (not x1995) (= x3137 32)) (and (or (and (not x1968) (= x3137 64)) (and (= (x1751 x2796) x667) (= x2522 (< 96 x341)) (= (x631 (+ x1743 128)) x3033) (or (and (= x3137 96) (not x2522)) (and (= 128 x3137) (= x2239 (x631 (+ x1212 128))) (not x224) (= (x1751 x2239) x1653) (= x224 (< 128 x341)) x2522 (= (x631 (+ x1743 160)) x807))) (= x2796 (x631 (+ 96 x1212))) x1968)) x1995 (= (x1751 x978) x3134) (= (x631 (+ x1212 64)) x978) (= (< 64 x341) x1968) (= x472 (x631 (+ x1743 96))))) x1056 (= x107 x119) (= (> x341 32) x1995) (= x1861 (x1751 x119)))) (= x341 (x515 x1212)) (= (< 0 x341) x1056) (or (and (= (x631 (+ x341 x2236)) x407) x2039) (not x2039))) x847)))))
(assert (x2452 x2156))
(assert (= x2684 (=> (and (= x3141 x2456) (= x1078 x1284)) x778)))
(assert (x1824 x2721))
(assert (x2452 x174))
(assert (x2452 x1274))
(assert (x2452 x1616))
(assert (= (ite (and x583 (not x2260) x2360) (x1881 x1083) (ite (and (not x2260) x2360 (not x309) (not x583)) (x2641 x1083) (x1763 x1083))) (x2786 x1083)))
(assert (x2452 x1048))
(assert (x2452 x474))
(assert (x2452 x322))
(assert (= x1513 (and x2062 x1498)))
(assert (= x902 (=> (and (= x1020 (or (and (= (<= x2199 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (> 32 x2199)) (> x2199 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (= x2884 (x631 (+ x2199 31))) (= x163 (x631 (+ x2690 x293))) (= x293 (x11 115792089237316195423570985008687907853269984665640564039457584007913129639904 x2884))) (and (=> (not x1020) x1414) (=> x1020 x2678)))))
(assert (x2452 x300))
(assert (= (=> (and (= (x239 x404) x2932) (= (x631 (+ x520 96)) x404) (= (= x2553 0) x1304) (= (x11 1461501637330902918203684832716283019655932542975 x2111) x3083) (= x2553 (x3021 (x2238 x3083)))) (and (=> (and (or (and (= x2105 x2762) (not x3064)) (and x3064 (< x2822 4294967296) (= x2105 1))) (not x1304) (= (> x2762 0) x3064)) x1675) (=> x1304 x2678))) x1214))
(assert (x2452 x90))
(assert (x2452 x2199))
(assert (= (ite (= x404 x2096) 0 (x1744 x404)) (x2031 x404)))
(assert (= x820 (or (and x764 x1793) (and x629 (not x95)))))
(assert (= x686 (and (not x3111) x1519)))
(assert (x2452 x119))
(assert (x2452 x2926))
(assert (= (x2010 x1141) (ite (and x2269 (not x1654) x291) (x1499 x1141) (x2853 x1141))))
(assert (x2452 x2878))
(assert (= (=> (= x613 (= 274184521717934524641157099916833587202 x1375)) (and (=> (not x613) x3027) (=> (and (= x819 404098525) (= 1 x816) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2790) (> 826074471 x819) (not (= x819 117300739)) (< 0 x275) (not (> 4 x1153)) (= x1820 10894474682274239493831243662817379401261526446360622092269559273883068006400) (= 32 x289) (= x1153 x285) (<= 0 x2790) x613 (= 4 x1153) (not (= 157198259 x819)) (= x275 (x3021 (x2238 274184521717934524641157099916833587202)))) x851))) x1669))
(assert (x2452 x1724))
(assert (x1824 x393))
(assert (x2452 x2680))
(assert (= (and x1611 x3020) x550))
(assert (x2452 x1217))
(assert (= x2226 (or (and x1508 (not x241)) x1039)))
(assert (= (and x1565 x266) x1352))
(assert (= (=> (and (= x46 x2978) (= x2176 x939)) x109) x1404))
(assert (x2452 x2193))
(assert (= x2679 (=> (and (= x278 x286) (= x2929 x545)) x1925)))
(assert (x2452 x2659))
(assert (= (and x2410 (not x2592)) x644))
(assert (= (ite (= x3118 x1942) x772 (x2909 x3118)) (x1979 x3118)))
(assert (x2452 x2172))
(assert (= (x2709 (x2302 x2612 1)) (+ 1 (x2709 x2612))))
(assert (= x1157 (and x635 (not x2136))))
(assert (x2452 x840))
(assert (x2452 x1910))
(assert (x1758 x2569 x454))
(assert (= x3113 (and x1617 x317)))
(assert (x2452 x852))
(assert (x1206 x653 x569))
(assert (x2452 x3118))
(assert (= x3077 (=> (and (= x2173 (x2890 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x787))) (= (uninterp_mod (* x2020 x607) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x1136) (= x488 (> x607 x2173)) (= x787 (- (/ x1136 1000000000000000000) (uninterp_frac x1136 1000000000000000000)))) (and (=> x488 x2678) (=> (not x488) x2866)))))
(assert (x2452 x589))
(assert (= (=> (= x1257 (= 0 x1186)) (and (=> x1257 x2678) (=> (not x1257) x2656))) x2928))
(assert (= x440 (and x2412 (not x1089))))
(assert (= x425 (=> (and (= (uninterp_mod (* x219 x2872) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x2384) (= x676 (< 0 x2009))) (and (=> (and x676 (= x2621 (- (/ x2384 x2009) (uninterp_frac x2384 x2009))) (= x1045 x2621)) x612) (=> (not x676) x2678)))))
(assert (= x1604 (and (not x2658) x2964)))
(assert (x2452 x2800))
(assert (= (=> (and (= (x1776 x1362) x2797) (= (< 0 x2797) x95)) (and (=> (not x95) x1387) (=> x95 x383))) x952))
(assert (x2452 x1877))
(assert (= x1510 (=> (and (= (= x602 x2552) x203) (= x2552 x2719)) (and (=> (and (= (x1551 (x2238 x2552) (x94 1) 0) x941) (= 1 x2517) (= x413 (x3103 x941)) (>= x413 0) (= x2808 32) x203 (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x413)) x1027) (=> (not x203) x1069)))))
(assert (= (or (and x1332 x504) x648) x1446))
(assert (= x255 (and (not x2803) x1352)))
(assert (x2452 x1904))
(assert (= (and x1171 (not x164)) x343))
(assert (x2452 x582))
(assert (x2452 x1347))
(assert (= (and x1915 x430) x821))
(assert (= x2971 (=> (and (= x353 (x11 115792089237316195423570985008687907853269984665640564039457584007913129639904 x560)) (= (x631 (+ x2366 x353)) x2689) (= (x631 (+ 31 x2702)) x560) (= x1044 (or (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2702) true) (< x2702 32)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2702)))) (and (=> (not x1044) x2283) (=> x1044 x2678)))))
(assert (x2452 x1986))
(assert (= x1617 (and x2116 x592)))
(assert (= (and x1038 x555) x197))
(assert (x2452 x2702))
(assert (= 157198259 (x2709 (x94 157198259))))
(assert (x2452 x81))
(assert (x2452 x2629))
(assert (= x1147 (=> (= (= x818 0) x3111) (and (=> (and (= x1149 0) (= x1130 0) x3111) x1935) (=> (not x3111) x315)))))
(assert (= x2532 (=> (and (= (ite (= x2009 0) (= x2009 0) (= 0 x219)) x759) (= (x3049 x632) x2009)) (and (=> (and (= x1045 0) x759) x612) (=> (not x759) x741)))))
(assert (x2452 x2808))
(assert (x2452 x2347))
(assert (x2452 x2444))
(assert (x2452 x1086))
(assert (x2452 x3024))
(assert (= (and x1764 x666) x2787))
(assert (x2452 x2425))
(assert (= x478 (and x2421 x2354)))
(assert (= (x2709 (x2302 x1102 4)) (+ 4 (x2709 x1102))))
(assert (x2452 x2932))
(assert (x988 x258 x889))
(assert (x1863 x2884))
(assert (= x564 (=> (and (= (= x2148 0) x496) (> x623 0) (= (x3021 (x2238 274184521717934524641157099916833587231)) x623)) (and (=> x496 x1635) (=> (not x496) x2678)))))
(assert (= (x94 80455309404869098397086765254582893697288411140986131472514049311582516674560) (x2238 80455309404869098397086765254582893697288411140986131472514049311582516674560)))
(assert (x2452 x225))
(assert (x2452 x1605))
(assert (= (and x138 (not x2653)) x1164))
(assert (x2452 x1340))
(assert (x2452 x1593))
(assert (= (x2238 22876116169567568662247501733108717860502184539943453785307321755797215510528) (x94 22876116169567568662247501733108717860502184539943453785307321755797215510528)))
(assert (x2452 x2211))
(assert (x2452 x2974))
(assert (= x1657 (=> (and (= (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x509 (x2238 x883))) x1722) (= (= 274184521717934524641157099916833587206 x883) x430) (= (x509 (x2238 x883)) x2782) (= x63 (x2599 (x2238 274184521717934524641157099916833587231))) x1722) (and (=> (not x430) x189) (=> x430 x2695)))))
(assert (x2452 x2096))
(assert (= (=> (and (= x150 (= 0 x2172)) (= (x11 x677 x3130) x2172) (= x2448 (x2578 x3128)) (= (= x2311 0) x2988) (= (ite (> x2448 x156) 1 0) x3130) (= x156 (- (/ 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2311) (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2311))) (= x677 (ite (not x2988) 1 0))) (and (=> (not x150) x2678) (=> x150 x313))) x920))
(assert (x2452 x416))
(assert (x2452 x2202))
(assert (x2452 x1457))
(assert (x2452 x1006))
(assert (x2452 x217))
(assert (x2452 x3144))
(assert (x2452 x1372))
(assert (x2452 x2111))
(assert (= x466 (=> (and (= x2814 (> x158 x1554)) (= x1554 (x631 (+ x158 x707)))) (and (=> x2814 x1552) (=> (and (= x917 (x1551 (x2238 x1899) (x94 1) 0)) (= (x11 1461501637330902918203684832716283019655932542975 x2190) x1899) (= 32 x2929) (not x2814) (= x286 1) (= x1457 x3106)) x2679)))))
(assert (x1824 x494))
(assert (x1206 x2077 x1035))
(assert (= (=> (and (= x2066 2835717307) (not (< x2066 826074471)) (= 76450787359836037641860180984291677749980919077056822294353438043884394381312 x2464) (= 68 x2855) (= (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2927) (and (> 64 x2927) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2927) true))) x2418) (not (= 2514000705 x2066)) (= x2190 x1359) (not (= 826074471 x2066)) (= x2290 x707) (= x1433 x2855) (not (< x2855 4)) (not (= 1889567281 x2066)) (< 0 x414) (= (x2890 (- x2855 4)) x2927) (= (x3021 (x2238 274184521717934524641157099916833587202)) x414)) (and (=> x2418 x1552) (=> (not x2418) x3040))) x2631))
(assert (= x1220 (x2709 (x2238 x1220))))
(assert (= x2306 (or x971 (and (not x3070) x197))))
(assert (= x1915 (and x3070 x197)))
(assert (x2452 x1136))
(assert (= x2421 (and x59 (not x2666))))
(assert (x2452 x1287))
(assert (= (or x395 (and (not x2699) x1367)) x92))
(assert (x2452 x1803))
(assert (= (=> (= x487 (= x2510 0)) (and (=> (and (= 0 x1149) x487 (= x1130 115792089237316195423570985008687907853269984665640564039457584007913129639935)) x1935) (=> (not x487) x2779))) x1768))
(assert (x2452 x372))
(assert (= x113 (=> (and (= (x2362 x2667) x695) (= x317 (< 0 x1314)) (= x1314 (x568 x695))) (and (=> x317 x2252) (=> (not x317) x2678)))))
(assert (x1758 x2392 x78))
(assert (x2452 x330))
(assert (= x3054 (and x2990 (not x1908))))
(assert (= (or (and x2867 x1513) (and x2787 x74)) x1261))
(assert (x642 x595 x993 x674 x3143))
(assert (= (and (not x23) x2868) x1419))
(assert (x1863 x677))
(assert (= x2138 (=> (= x2144 (= 274184521717934524641157099916833587206 x1375)) (and (=> (and x2144 (not (= 157198259 x2278)) (> 826074471 x2278) (< 0 x3069) (= 1 x1174) (= 404098525 x2278) (<= 0 x1795) (= x1209 4) (= 32 x590) (= x1209 4) (= x3069 (x3021 (x2238 274184521717934524641157099916833587206))) (= x402 10894474682274239493831243662817379401261526446360622092269559273883068006400) (not (= x2278 117300739)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1795) (not (< x1209 4))) x1281) (=> (not x2144) x3005)))))
(assert (x2452 x3045))
(assert (= (and x768 x1483) x614))
(assert (= (x2238 115792089237316195423570985008687907853269984665640564039457584007913129639904) (x94 115792089237316195423570985008687907853269984665640564039457584007913129639904)))
(assert (= (=> (and (= x1726 (x631 (+ x1203 68))) (= x1271 (x1671 x2287)) (= (x631 (+ 76450787359836037641860180984291677749980919077056822294353438043884394381312 x437)) x1383) (= (x3021 (x2238 x883)) x1094) (= (x631 (+ x1203 32)) x2287) (= x1887 (x2890 (- x1853 x1203))) (= 0 x51) (= (x11 1461501637330902918203684832716283019655932542975 x1522) x883) (= (x2890 (- x1887 32)) x604) (= (x631 (+ x1203 100)) x1853) (= x555 (< 0 x1094)) (= x726 (x631 (+ x2341 128))) (= x437 (x11 26959946667150639794667015087019630673637144422540572481103610249215 x1271)) (= (x631 (+ x1203 36)) x2341)) (and (=> (and x555 (= x947 (> x2208 x845)) (= x845 (x409 x1203)) (or (and (= x1247 (x631 (+ x845 x726))) x947) (not x947)) (or (and (not x246) (= 0 x2208)) (and (or (and (= x2208 32) (not x359)) (and (or (and x3132 (= (x631 (+ x1853 128)) x1666) (= x2091 (x1652 x2687)) (or (and (= (x1652 x1403) x123) x1903 (= (x631 (+ x1853 160)) x2083) (= x2446 (> x845 128)) (= 128 x2208) (not x2446) (= (x631 (+ x1203 128)) x1403)) (and (not x1903) (= 96 x2208))) (= x2687 (x631 (+ x1203 96))) (= x1903 (> x845 96))) (and (not x3132) (= 64 x2208))) (= (x631 (+ 64 x1203)) x960) (= (> x845 64) x3132) x359 (= (x631 (+ x1853 96)) x1550) (= x2045 (x1652 x960)))) (= (x1652 x1019) x221) (= x726 x1221) (= x359 (> x845 32)) (= x1019 x2287) x246)) (= (> x845 0) x246)) x2145) (=> (not x555) x2678))) x212))
(assert (= x1828 true))
(assert (= (and x1181 (not x2161)) x1218))
(assert (x2452 x2844))
(assert (= x1913 (or (and x1582 x1398) (and x2422 x2949) (and x2824 x1095) (and x2030 x552) (and x1596 x442) (and x989 (not x593)))))
(assert (x2452 x214))
(assert (x642 x2917 x118 x2518 x1439))
(assert (= x1133 (and x821 (not x412))))
(assert (= (=> (and (= (> x2480 x140) x2949) (= (x631 (+ x2480 x338)) x140)) (and (=> x2949 x1235) (=> (and (= 1 x1074) (= x548 (x11 1461501637330902918203684832716283019655932542975 x1325)) (= 32 x2737) (= x3124 x725) (not x2949) (= (x1551 (x2238 x548) (x94 1) 0) x3035)) x112))) x546))
(assert (x2452 x489))
(assert (x2452 x93))
(assert (= (=> (= (= x1988 0) x2922) (and (=> (not x2922) x2893) (=> x2922 x2678))) x452))
(assert (x2452 x413))
(assert (= x2368 (and x1301 x1806)))
(assert (x2452 x998))
(assert (= (x2709 (x2238 x1526)) x1526))
(assert (x1206 x2184 x1593))
(assert (= (and x2716 (not x2337)) x1326))
(assert (x1863 x1788))
(assert (x2452 x8))
(assert (x1863 x2569))
(assert (= (or (and (not x1485) x2054) (and x658 (not x1879))) x1519))
(assert (x2452 x2665))
(assert (x1758 x1691 x717))
(assert (x2452 x1380))
(assert (x2452 x1511))
(assert (= x463 (or (and (not x2051) x999) (and x871 x1569))))
(assert (= x2237 (=> (and (= x1785 (x11 255 x258)) (= (= x1785 x258) x591) (= x258 (x2436 x2377))) (and (=> (not x591) x2678) (=> x591 x207)))))
(assert (x2452 x319))
(assert (= (=> (and (= (x41 x2150) x1000) (= (x631 (+ 32 x1562)) x2443) (= x489 (x631 (+ 64 x2150))) (= x2582 1) (= x3145 (x11 1461501637330902918203684832716283019655932542975 x1107)) (= (x631 (+ x1562 64)) x2150) (= x2097 (x631 (+ x1562 160))) (= (= x1766 x2061) x2534) (= x2667 (x631 (+ 64 x2443))) (= x1646 (x2362 x2667)) (= x1766 (x2049 x1000)) (= (x568 x1646) x2061)) (and (=> (not x2534) x2678) (=> x2534 x2771))) x1210))
(assert (= x2277 (=> (and (= x2260 (< 18446744073709551615 x2962)) (= x2962 (x2049 x2940))) (and (=> (and (not x2260) (= (x631 (+ 32 x1018)) x100) (= (uninterp_mod (* x2962 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x1018) (or (and (= x603 x202) x583) (and (= x309 (< 0 x2388)) (= (x631 (+ x2096 64)) x1191) (= (x2890 (- x2962 1)) x2388) (not x583) (= x2696 (x631 (+ 64 x1219))) (or (and (= x1123 (x631 (+ 64 x2773))) (= x199 (> x1390 0)) x309 (= x1111 (x631 (+ 384 x603))) (= (x631 (+ 64 x1347)) x2773) (= x1376 x1111) (= x2876 (x631 (+ x603 224))) (= x3014 (x631 (+ x2876 64))) (not x199) (= x1390 (x2890 (- x2388 1))) (= x1826 (x631 (+ 64 x3014)))) (and (not x309) (= x1376 x1347))) (= (x631 (+ x603 64)) x1453) (= x2096 (x631 (+ x1856 64))) (= x1376 x202) (= x335 (x631 (+ x1219 32))) (= (x631 (+ x603 32)) x1856) (= x1380 (x631 (+ x1453 64))) (= (x631 (+ x603 192)) x1347))) (= x583 (= 0 x2962)) (= x603 (x631 (+ x1219 x100)))) x1116) (=> x2260 x2678)))))
(assert (x1824 x1220))
(assert (= (=> (and (= (x11 1461501637330902918203684832716283019655932542975 x1359) x906) (= (= x1359 x906) x2606)) (and (=> (not x2606) x2499) (=> (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1929) (= x786 (x1551 (x2238 x44) (x94 1) 0)) (= x1088 32) (= 1 x1786) (= x1929 (x2471 x786)) x2606 (= (x11 1461501637330902918203684832716283019655932542975 x1807) x44) (>= x1929 0)) x1535))) x2935))
(assert (x2452 x1984))
(assert (x642 x669 x154 x2479 x198))
(assert (= x175 (=> (= (= x2838 0) x2337) (and (=> x2337 x2678) (=> (not x2337) x3122)))))
(assert (= (ite (= x2847 x539) x655 (x1252 x2847)) (x205 x2847)))
(assert (x642 x2248 x780 x2143 x1756))
(assert (x642 x1053 x3086 x1664 x855))
(assert (x1824 x3083))
(assert (x2452 x695))
(assert (x2171 x2538))
(assert (=> (> (+ 10000 1) x2862) (= (x94 x2862) (x2238 x2862))))
(assert (x1758 x1867 x925))
(assert (= (=> (and (= x1106 (< 0 x1477)) (= x1477 (x2049 x1412))) (and (=> (and (= x1491 0) (not x1106)) x767) (=> x1106 x553))) x570))
(assert (x2452 x3115))
(assert (x2452 x1323))
(assert (= x2393 (=> (= x2232 (= 274184521717934524641157099916833587202 x2065)) (and (=> (and (= x2395 1) (not (> 4 x3121)) (< x303 826074471) (< 0 x1844) (<= 0 x2654) (<= x2654 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x1305 10894474682274239493831243662817379401261526446360622092269559273883068006400) (= x303 404098525) (= x1844 (x3021 (x2238 274184521717934524641157099916833587202))) (= x3121 x882) (not (= x303 117300739)) (= x1577 32) (= x3121 4) x2232 (not (= 157198259 x303))) x301) (=> (not x2232) x664)))))
(assert (x2452 x531))
(assert (x2452 x1284))
(assert (= x3082 (and x1634 x431)))
(assert (= x2017 (and (not x2998) x2819)))
(assert (= x1346 (and x1945 x1106)))
(assert (= x1223 (and x1275 (not x2000))))
(assert (x1206 x2064 x146))
(assert (= (and x808 (not x1561)) x2745))
(assert (= x2547 (or x2513 (and (not x534) x2989))))
(assert (x2452 x2341))
(assert (x2452 x2822))
(assert (= (x2709 (x2238 x448)) x448))
(assert (= x1742 (=> (and (= x3123 (x631 (+ x1562 192))) (= x2284 (= 0 x3109)) (= x3109 (x2389 x3123))) (and (=> (not x2284) x1208) (=> (and (= x887 x3118) x2284) x276)))))
(assert (= (and x1569 (not x871)) x999))
(assert (= x315 (=> (and (= x2588 (= 0 x566)) (= (x1686 x1562) x1867) (= (x3021 (x2238 x1329)) x566) (= (x11 1461501637330902918203684832716283019655932542975 x1867) x1329)) (and (=> x2588 x2678) (=> (and (= x2186 (> x933 0)) (not x2588) (or (and x2186 (= x171 1) (> 4294967296 x1875)) (and (not x2186) (= x933 x171)))) x137)))))
(assert (= (x2709 (x94 50942633119752846454219349998365661925608737367104304655302372697894809501696)) 50942633119752846454219349998365661925608737367104304655302372697894809501696))
(assert (= (x2709 (x2302 x627 2)) (+ 2 (x2709 x627))))
(assert (= (and (not x1279) x1292) x3076))
(assert (= x2252 (=> (and (= x1319 (x110 x489)) (= (x11 1461501637330902918203684832716283019655932542975 x914) x2004) (= x1140 (x2712 x3101)) (= x14 (x631 (+ x791 4))) (= (x3021 (x2238 x2004)) x2005) (= (x2890 (- x503 x791)) x3004) (= (= x2005 0) x1977) (= x503 (x631 (+ 36 x791))) (= (x1167 x1140) x914) (= (x631 (+ x695 32)) x3101) (= x602 (x11 1461501637330902918203684832716283019655932542975 x1319))) (and (=> x1977 x2678) (=> (not x1977) x530)))))
(assert (x2452 x2121))
(assert (x2452 x3089))
(assert (x2452 x2201))
(assert (= (and x361 x1545) x2733))
(assert (= (=> (and (= x2020 (x2440 x1849)) (= x1255 (x568 x1199)) (= x1199 (x2362 x2667)) (= x62 (< 0 x1255))) (and (=> x62 x1402) (=> (not x62) x2678))) x500))
(assert (= (x2709 (x2238 x52)) x52))
(assert (= (x69 x2681) (ite (and (not x2588) x2186 x686) (x858 x2681) (x825 x2681))))
(assert (x2452 x1646))
(assert (x2452 x87))
(assert (x2452 x17))
(assert (x2452 x1909))
(assert (= x2210 (or x2753 x2233)))
(assert (x1206 x3140 x2380))
(assert (= x1351 (=> (and (= (> x748 0) x1907) (= (x243 x81) x748) (= (- (/ x684 x1323) (uninterp_frac x684 x1323)) x957)) (and (=> (not x1907) x2678) (=> (and (= x2530 x887) x1907 (= (x631 (+ x81 32)) x728)) x276)))))
(assert (=> (< (- x1931 1) 10000) (= (x2238 x1931) (x94 x1931))))
(assert (= (and x2002 (not x2750)) x1175))
(assert (=> (< (- x3083 1) 10000) (= (x2238 x3083) (x94 x3083))))
(assert (x2452 x2939))
(assert (x2452 x2113))
(assert (x2452 x1653))
(assert (x2452 x2299))
(assert (x2452 x2272))
(assert (= (x94 18446744073709551615) (x2238 18446744073709551615)))
(assert (= (=> (and (= (< x962 x470) x387) (= x962 (- (/ 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1701) (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1701)))) (and (=> x387 x2678) (=> (and (= x190 (uninterp_mod (* x1701 x470) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= x1323 x190) (not x387)) x333))) x2734))
(assert (= 0 (x1252 x406)))
(assert (= (x3025 x1906) 0))
(assert (x1824 x2587))
(assert (= (x94 22270923681254677845691103109158760375340177724800803888364822332811285364736) (x2238 22270923681254677845691103109158760375340177724800803888364822332811285364736)))
(assert (x2452 x1144))
(assert (= (and x2057 (not x1311)) x1190))
(assert (= (and x2386 (not x208)) x2851))
(assert (x2452 x3008))
(assert (=> (> (+ 10000 1) x548) (= (x94 x548) (x2238 x548))))
(assert (x2452 x2696))
(assert (x2452 x2936))
(assert (= (x804 x2166) 0))
(assert (= x2073 (=> (and (= (= x2256 x2511) x3063) (= x2256 x2506)) (and (=> (and (= x2630 (x2708 x1811)) (<= x2630 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= 1 x788) (= (x1551 (x2238 x2256) (x94 1) 0) x1811) x3063 (>= x2630 0) (= 32 x2216)) x793) (=> (not x3063) x928)))))
(assert (= (=> (and (= (x2049 x1490) x1272) (= (> x1272 0) x2699)) (and (=> (and (= x186 x3118) (not x2699)) x565) (=> x2699 x2531))) x1162))
(assert (x2452 x1813))
(assert (x2452 x979))
(assert (x1206 x2147 x1851))
(assert (x2452 x1580))
(assert (= (and x2084 x1782) x1171))
(assert (= 0 (x804 x1599)))
(assert (x2452 x329))
(assert (x2452 x3109))
(assert (= x3081 (=> (= (< x219 x1909) x1893) (and (=> (and (= x2270 (x2890 (- x219 x1909))) (= x1194 x1248) (= x2607 x87) (= x2654 x1322) (not x1893) (= x319 x2940) (= x795 x2193) (= x1909 x342)) x1015) (=> x1893 x2678)))))
(assert (x2452 x932))
(assert (x2452 x1792))
(assert (x2452 x1476))
(assert (x2452 x748))
(assert (x2452 x3124))
(assert (x2452 x2204))
(assert (x2452 x874))
(assert (= x694 (=> (and (= x784 x1502) (= x1936 x836)) x2220)))
(assert (= x1983 (and x92 x630)))
(assert (x2452 x1199))
(assert (x1206 x1005 x2275))
(assert (x1758 x1107 x320))
(assert (x2452 x229))
(assert (x2452 x1658))
(assert (x2452 x2357))
(assert (= (x94 2514000705) (x2238 2514000705)))
(assert (x2452 x2218))
(assert (x2452 x3128))
(assert (= (ite (= x1259 x1120) x2837 (x232 x1120)) (x1037 x1120)))
(assert (= (and (not x114) x1678) x1245))
(assert (= (ite (and x2598 x200 (not x584)) (x339 x1350) (x2853 x1350)) (x232 x1350)))
(assert (x2452 x566))
(assert (x2452 x1071))
(assert (= x2139 (=> (and (= x749 (= x3091 x1693)) (= x1693 (x2611 x2462)) (= (x11 255 x1693) x3091)) (and (=> x749 x1211) (=> (not x749) x2678)))))
(assert (x2452 x1673))
(assert (x642 x1309 x2307 x115 x1781))
(assert (x2452 x2730))
(assert (x2452 x1873))
(assert (= 2835717307 (x2709 (x94 2835717307))))
(assert (x2452 x2066))
(assert (x2452 x1453))
(assert (x2452 x1700))
(assert (x2452 x2609))
(assert (x2452 x763))
(assert (= 26959946667150639794667015087019630673637144422540572481103610249215 (x2709 (x94 26959946667150639794667015087019630673637144422540572481103610249215))))
(assert (x2452 x2886))
(assert (=> (< (- x2960 1) 10000) (= (x94 x2960) (x2238 x2960))))
(assert (x2452 x2475))
(assert (x1824 274184521717934524641157099916833587202))
(assert (x1863 x774))
(assert (x2452 x1285))
(assert (x2452 x1221))
(assert (x2864 x1271 x1471))
(assert (x2452 x2318))
(assert (x2452 x1168))
(assert (= (x1959 x72) (ite (and x583 (not x2260) x2360) (x915 x72) (ite (and (not x583) x2360 (not x2260) (not x309)) (x1696 x72) (x1956 x72)))))
(assert (x2452 x1035))
(assert (= (and x245 x1610) x138))
(assert (x2452 x2149))
(assert (x1863 x2711))
(assert (x2452 x1042))
(assert (x2452 x1613))
(assert (=> (> (+ 10000 1) x18) (= (x94 x18) (x2238 x18))))
(assert (x2452 x68))
(assert (= 0 (x260 x1199)))
(assert (x1863 x2743))
(assert (= (ite (= x307 x101) x2113 (x1180 x307)) (x1312 x307)))
(assert (x2452 x337))
(assert (x2452 x2610))
(assert (= x2057 (and x2459 x2206)))
(assert (= (and x2093 (not x1741)) x428))
(assert (= (=> (and (= x1522 x2376) (= (= x167 x1286) x705) (= (x11 1461501637330902918203684832716283019655932542975 x1286) x167)) (and (=> (not x705) x2678) (=> x705 x2848))) x2626))
(assert (x2452 x2023))
(assert (= x790 (=> (and (= x1072 (< 0 x1058)) (= x649 (uninterp_mod (* x174 x1717) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (and (=> (not x1072) x2678) (=> (and (= x1507 (- (/ x649 x1058) (uninterp_frac x649 x1058))) (= x1507 x2363) x1072) x83)))))
(assert (x2452 x539))
(assert (x2452 x193))
(assert (= x313 (=> (and (= (- (/ x2502 1000000000000000000) (uninterp_frac x2502 1000000000000000000)) x799) (= x2502 (uninterp_mod (* x2448 x2311) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= (x2890 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x799)) x358) (= x196 (> 0 x358))) (and (=> x196 x2678) (=> (and (= x1491 x1470) (= (> x1278 1) x2390) (= x1470 x799) (not x2390) (not x196) (= x1278 (x2049 x1412))) x767)))))
(assert (x2452 x814))
(assert (x2452 x80))
(assert (x1863 x2912))
(assert (= x20 (=> (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2520) (= (> x2520 x2486) x1920) (= x2520 (x1037 x1469)) (= (x2890 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x195)) x2486) (= x2837 (x2890 (- x2832 x195))) (= x1469 (x1551 (x2238 x52) (x94 1) 0)) (= x1259 (x1551 (x2238 274184521717934524641157099916833587231) (x94 1) 0)) (= 274184521717934524641157099916833587231 x97) (= x52 (x11 1461501637330902918203684832716283019655932542975 x2392)) (>= x2520 0)) (and (=> x1920 x1137) (=> (not x1920) x2901)))))
(assert (= x764 (and x1229 x656)))
(assert (= (=> (and (= (- (/ 115792089237316195423570985008687907853269984665640564039457584007913129639935 x679) (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x679)) x675) (= (ite (not x1170) 1 0) x3140) (= x1170 (= x679 0)) (= (ite (> x985 x675) 1 0) x2380) (= x2245 (= 0 x13)) (= (x11 x3140 x2380) x13)) (and (=> x2245 x1974) (=> (not x2245) x2678))) x1480))
(assert (= (or (and (not x555) x1038) (and (not x2644) x2368) (and x2074 x3107) (and (not x2614) x1548) (and x2868 x23) (and x621 x3041) (and x766 (not x1775)) (and x635 x2136) (and x3054 x2047) (and x964 x2944) (and (not x1229) x656) (and x2286 x926) (and x2412 x1089) (and (not x283) x1331) (and x1245 x1871) (and x2785 x2875) (and x2959 x3065) (and x1617 (not x317)) (and x1654 x291) (and x164 x1171) (and x755 x263) (and x2759 x349) (and x55 x2778) (and x2913 x2639) (and x1195 x2042) (and x2729 (not x1627)) (and x2308 x2652) (and x1021 (not x1239)) (and x2213 x2562) (and x2819 x2998) (and x1122 x2536) (and x478 x111) (and x1358 x1834) (and (not x2028) x3076) (and x2043 x3056) (and x1498 (not x2062)) (and x3034 x1750) (and (not x777) x357) (and x2120 x2426) (and x387 x3029) (and x2921 x2907) (and x1413 x796) (and x713 x351) (and (not x3017) x2751) (and x1838 x2780) (and x2787 (not x74)) (and x2623 x2756) (and x2627 x3126) (and x266 (not x1565)) (and x644 (not x318)) (and (not x1907) x550) (and x1678 x114) (and x2970 (not x591)) (and (not x438) x2902) (and x2803 x1352) (and x2732 (not x1184)) (and x901 x1) (and x2715 x252) (and x1292 x1279) (and x2588 x686) (and x1854 x1754) (and x2840 (not x1994)) (and (not x396) x2189) (and (not x2354) x2421) (and x557 x528) (and (not x749) x1068) (and x1852 x2826) (and (not x1782) x2084) (and x440 x1044) (and x1296 (not x532)) (and x2990 x1908) (and x1326 x271) (and x1013 x1992) (and x2358 x1504) (and x2922 x2210) (and x1418 x746) (and x2337 x2716) (and x1960 x736) (and x2405 x2387) (and x2115 x1400) (and x1764 (not x666)) (and (not x1401) x1280) (and (not x1647) x432) (and x1711 x2068) (and (not x2813) x606) (and x1304 x1651) (and x556 x1267) (and (not x2292) x2899) (and x2459 (not x2206)) (and x1955 (not x561)) (and (not x907) x1295) (and x2801 x3003) (and x1620 x2984) (and x2410 x2592) (and x3020 (not x1611)) (and (not x884) x619) (and x643 x2845) (and x1634 (not x431)) (and x1533 (not x601)) (and x2219 x2125) (and x584 x200) (and (not x1541) x2159) (and x1661 x1025) (and x439 x2320) (and x59 x2666) (and x2401 x2906) (and x1177 (not x2604)) (and x2057 x1311) (and (not x1197) x1346) (and x714 x386) (and x370 x2417) (and x2131 x1029) (and x3050 x378) (and x2054 x1485) (and x1113 (not x2534)) (and x2013 (not x495)) (and x196 x2545) (and x2573 x1728) (and x1462 x2793) (and (not x2888) x2723) (and x3094 (not x1487)) (and x2465 (not x1625)) (and x2000 x1275) (and x488 x1262) (and x1020 x2860) (and (not x895) x652) (and (not x1556) x1883) (and x2589 x1187) (and x2361 x1564) (and x1036 x1202) (and x533 (not x2245)) (and x810 x1198) (and x1545 (not x361)) (and x2618 (not x2951)) (and x2830 (not x1031)) (and x1357 (not x62)) (and x1175 x1796) (and x2655 x2806) (and x3092 (not x1072)) (and x106 x1361) (and x2461 x4) (and x699 (not x904)) (and x1962 (not x1516)) (and x1983 (not x2583)) (and x1257 x1190) (and x2260 x2360) (and x1173 (not x150)) (and x2981 x929) (and (not x676) x116) (and x3031 x1384) (and x1971 x2469) (and x1604 (not x806)) (and x1755 x1718) (and x1581 x1981) (and x1024 (not x496)) (and x1893 x1397) (and x1633 (not x2174)) (and (not x2254) x1572) (and x2817 x3) (and (not x547) x1732) (and x251 x1996) (and x3082 (not x328)) (and (not x705) x2706) (and x1977 x3113) (and x2002 x2750) (and x277 x216) (and (not x446) x1434) (and (not x1793) x764)) x2950))
(assert (= 0 (x1881 x1083)))
(assert (x2452 x2443))
(assert (x2452 x1574))
(assert (= x1116 (=> (and (= x2934 (< 0 x2843)) (= x2843 (x2049 x2940))) (and (=> x2934 x2509) (=> (and (not x2934) (= x202 x1562)) x1210)))))
(assert (x2452 x684))
(assert (= (and x1661 (not x1025)) x656))
(assert (= (and x496 x1024) x2826))
(assert (x2452 x417))
(assert (x2452 x1078))
(assert (x1293 x2334 x2538))
(assert (= x1965 (and (not x223) x2851)))
(assert (= (x94 1889567281) (x2238 1889567281)))
(assert (= 274184521717934524641157099916833587231 (x2709 (x94 274184521717934524641157099916833587231))))
(assert (= (and (not x929) x2981) x2763))
(assert (x2452 x2835))
(assert (= (ite (= x2636 x2231) x134 (x426 x2636)) (x84 x2636)))
(assert (x1863 x334))
(assert (x2452 x1936))
(assert (x2452 x3106))
(assert (x2452 x2184))
(assert (x2452 x1433))
(assert (= (=> (= x1184 (not (< x1149 x1130))) (and (=> (and x1184 (= false x1705)) x1026) (=> (not x1184) x2678))) x1935))
(assert (x1863 x595))
(assert (x2452 x173))
(assert (= 76450787359836037641860180984291677749980919077056822294353438043884394381312 (x2709 (x94 76450787359836037641860180984291677749980919077056822294353438043884394381312))))
(assert (x2452 x2166))
(assert (= (ite x1446 (ite x648 (x2525 x2500) (x2540 x2500)) (ite x2766 (x2525 x2500) (x1626 x2500))) (x1528 x2500)))
(assert (= (x94 826074471) (x2238 826074471)))
(assert (x2452 x2450))
(assert (x2452 x510))
(assert (x2452 x2071))
(assert (x2452 x2097))
(assert (x2452 x1769))
(assert (= (=> (and (= x2865 x942) (= x1874 x2689)) x1108) x215))
(assert (=> (< (- x2156 1) 10000) (= (x2238 x2156) (x94 x2156))))
(assert (x2452 x1053))
(assert (= (and x47 x1324) x910))
(assert (x1206 x677 x3130))
(assert (x2452 x873))
(assert (x1863 x3078))
(assert (= (=> (and (= x2118 (uninterp_mod (* x3115 x738) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= (> x1969 0) x396)) (and (=> (and x396 (= (- (/ x2118 x1969) (uninterp_frac x2118 x1969)) x2920) (= x2865 x2920)) x215) (=> (not x396) x2678))) x2565))
(assert (x2452 x2551))
(assert (x2452 x2863))
(assert (x2452 x2727))
(assert (x1206 x334 x337))
(assert (x2452 x1075))
(assert (x2452 x1621))
(assert (= x2983 (=> (and (= x1236 x594) (= x2267 x1080)) x905)))
(assert (= (x2238 404098525) (x94 404098525)))
(assert (x2452 x924))
(assert (x2452 x1991))
(assert (= (ite (= x539 x1897) x655 (x1252 x1897)) (x205 x1897)))
(assert (=> (< (- x1071 1) 10000) (= (x94 x1071) (x2238 x1071))))
(assert (= (and x2017 (not x1335)) x1228))
(assert (x1863 x1271))
(assert (x2452 x2247))
(assert (x2452 x3127))
(assert (x1758 x2523 x1524))
(assert (= (and (not x2131) x1029) x2115))
(assert (x2452 x2719))
(assert (x2452 x1216))
(assert (x2452 x2486))
(assert (= (=> (and (= x3128 x875) (not x1862) (= x2841 (x2049 x2336)) (= x1862 (> x2841 1))) x418) x467))
(assert (= (x1696 x75) (ite (= x1856 x75) 0 (x915 x75))))
(assert (= (or x463 (and x999 x2051)) x2233))
(assert (x2452 x826))
(assert (x2452 x1473))
(assert (x1758 x914 x367))
(assert (= (x94 274184521717934524641157099916833587231) (x2238 274184521717934524641157099916833587231)))
(assert (x2452 x2630))
(assert (x2452 x167))
(assert (= (and (not x242) x3096) x1127))
(assert (x2452 x2447))
(assert (x1824 x2874))
(assert (x2452 x1110))
(assert (x2452 x2721))
(assert (x2452 x1628))
(assert (x2452 x1710))
(assert (x2452 x1846))
(assert (x2452 x617))
(assert (= x116 (and x357 x777)))
(assert (x1758 x2111 x1022))
(assert (x1863 x1970))
(assert (= (=> (and (= x662 x2290) (= x408 x3073) (= x1212 x2610)) x1266) x2103))
(assert (x2452 x2671))
(assert (x2452 x1921))
(assert (x2452 x48))
(assert (= x2249 (=> (and (= x1202 (or (and (> 32 x289) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x289))) (> x289 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (= x1941 (x631 (+ x289 31))) (= (x11 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1941) x91) (= (x631 (+ x2560 x91)) x2610)) (and (=> x1202 x2678) (=> (not x1202) x1339)))))
(assert (= (and (not x2516) x1371) x504))
(assert (x2452 x1143))
(assert (= (x94 4294967296) (x2238 4294967296)))
(assert (x1863 x873))
(assert (x2452 x1005))
(assert (x2452 x1859))
(assert (= (and x1944 (not x2144)) x1752))
(assert (= x2509 (=> (and (= x372 (x2049 x2940)) (= (< 0 x372) x532)) (and (=> x532 x829) (=> (not x532) x2678)))))
(assert (= (x2586 x1140) (ite (= x603 x1140) 0 (x1805 x1140))))
(assert (x2452 x1902))
(assert (x2452 x2012))
(assert (= x1243 (and (not x2060) x2413)))
(assert (x2452 x3083))
(assert (x2452 x1319))
(assert (= x946 (and x73 (not x613))))
(assert (x2452 x2132))
(assert (x2452 x624))
(assert (= true x1105))
(assert (= (x922 x2423) (ite (and x291 x2269 (not x1654)) (x2293 x2423) (x2471 x2423))))
(assert (x1863 x2551))
(assert (= x1697 (=> (and (= (x631 (+ 31 x1076)) x2743) (= x1640 (x11 115792089237316195423570985008687907853269984665640564039457584007913129639904 x2743)) (= (x631 (+ x2636 x1640)) x589) (= x1796 (or (> x1076 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1076) true) (> 32 x1076))))) (and (=> x1796 x2678) (=> (not x1796) x2075)))))
(assert (x2452 x195))
(assert (x2452 x2636))
(assert (x2452 x1490))
(assert (= (or (and x92 (not x630)) (and x2984 (not x1620))) x3009))
(assert (= 274184521717934524641157099916833587206 (x2709 (x2238 274184521717934524641157099916833587206))))
(assert (x1758 x1319 x1501))
(assert (= (=> (and (= x584 (= 0 x2821)) (= x209 (x631 (+ 36 x1203))) (= x2821 (x3021 (x2238 x1415))) (= (x631 (+ x1203 4)) x2605)) (and (=> x584 x2678) (=> (and (not x584) (= x2598 (> x2227 0)) (or (and x2598 x2643 (< x2439 4294967296) (= x392 x697) (= x3080 x856) (= (x1077 (x2238 274184521717934524641157099916833587231)) x668) (= x1030 x2128) (= (= x2351 (x1579 (x2238 x1415))) x2643) x2925 (= (x1077 (x2238 x1415)) x2351) (= x888 x1616) (= x2925 (>= (x1579 (x2238 274184521717934524641157099916833587231)) x668))) (and (= x1030 x2790) (not x2598) (= x888 x121) (= x392 x2033) (= x1795 x856)))) x598))) x657))
(assert (= (x1378 x2287) 0))
(assert (x2452 x2346))
(assert (x2452 x1608))
(assert (= (=> (and (= (x1686 x1562) x3078) (= x2082 (x2049 x2166)) (= x710 (x22 x2443)) (= (x41 x2150) x2166) (= x438 (< 0 x2082))) (and (=> (not x438) x2678) (=> x438 x360))) x2365))
(assert (= x1749 (=> (= (= 0 x2323) x351) (and (=> x351 x2678) (=> (not x351) x149)))))
(assert (x1863 x1802))
(assert (x2452 x1550))
(assert (= (and (not x1504) x2358) x2639))
(assert (= (=> (= (= 274184521717934524641157099916833587206 x1375) x921) (and (=> (not x921) x2559) (=> x921 x2194))) x2904))
(assert (x2452 x24))
(assert (x2452 x2743))
(assert (x2452 x3114))
(assert (= x1615 (=> (= (> x195 x2832) x909) (and (=> x909 x1137) (=> (not x909) x20)))))
(assert (= (and x1331 x283) x3092))
(assert (= (x1252 x2847) 0))
(assert (x2452 x1349))
(assert (= x713 (or (and x2603 x1789) (and x255 x1641))))
(assert (x2452 x1845))
(assert (x2452 x293))
(assert (x2452 x1390))
(assert (x1824 x2742))
(assert (= (x1881 x376) 0))
(assert (x2452 x2869))
(assert (x2452 x2741))
(assert (x2452 x1290))
(assert (x2452 x2804))
(assert (x2452 x1816))
(assert (x1758 x1526 x1783))
(assert (x2452 x1057))
(assert (x2452 x3057))
(assert (x2452 x2350))
(assert (=> (< (- x1226 1) 10000) (= (x94 x1226) (x2238 x1226))))
(assert (= x1432 (or (and x316 x1889) x1449)))
(assert (x2452 x2095))
(assert (x2452 x1692))
(assert (= (and x2899 x2292) x1955))
(assert (x2452 x2351))
(assert (= (=> (and (= x1198 (= x3110 0)) (= x285 4) (= (x2910 128) x408) (= x3110 (x3021 (x2238 x1375)))) (and (=> x1198 x2678) (=> (not x1198) x2472))) x2266))
(assert (= x336 (=> (and (= x1409 (x922 x36)) (= (x1551 (x2238 274184521717934524641157099916833587231) (x94 1) 0) x36) (= x120 x707) (= 274184521717934524641157099916833587231 x2318) (>= x1409 0) (= x1703 (> x2290 x1409)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1409)) (and (=> (not x1703) x800) (=> x1703 x1552)))))
(assert (= x704 (=> (and (= x2111 (x1686 x1562)) (= x520 (x2712 x1200)) (= x2622 (= x2877 0)) (= (x631 (+ 32 x1631)) x1200)) (and (=> (and x2622 (= x220 0) (= x589 x2366)) x2496) (=> (not x2622) x1214)))))
(assert (= (x2709 (x94 17154740991736861046558774992177620686056526479738507590741468237373194108928)) 17154740991736861046558774992177620686056526479738507590741468237373194108928))
(assert (x2452 x1049))
(assert (x2452 x2546))
(assert (x2452 x1676))
(assert (= 42459404708690159261654315324267577519400883839135586425952143822324095778816 (x2709 (x94 42459404708690159261654315324267577519400883839135586425952143822324095778816))))
(assert (x2452 x1933))
(assert (x2452 x2796))
(assert (x2452 x1882))
(assert (= x1099 (=> (and (= x2121 (x11 1461501637330902918203684832716283019655932542975 x1526)) (= (= x1526 x2121) x2614) (= x1526 (x211 x306))) (and (=> x2614 x2567) (=> (not x2614) x2678)))))
(assert (= (x2709 (x94 1000000000000000000)) 1000000000000000000))
(assert (= x1505 (=> (and (= x1040 (x11 115792089237316195423570985008687907853269984665640564039457584007913129639904 x967)) (= x2162 (x631 (+ x1040 x57))) (= (x631 (+ x1577 31)) x967) (= x2793 (or (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1577) true) (> 32 x1577)) (> x1577 57896044618658097711785492504343953926634992332820282019728792003956564819967)))) (and (=> x2793 x2678) (=> (not x2793) x2454)))))
(assert (= x1917 (=> (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2710) (= x1375 (x2850 x940)) (>= 1461501637330902918203684832716283019655932542975 x1375) (= x2710 (x2537 x2088)) (= 0 x610) (= x2088 (x2302 x1102 4)) (<= 0 x1375) (= (x2302 x1102 1) x940) (< x1375 1461501637330902918203684832716283019655932542976) (= x99 (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x540)) (<= 0 x2710)) (and (=> (not x99) x43) (=> x99 x2747)))))
(assert (= (=> (and (= x1126 (x631 (+ x2037 x2377))) (= (x11 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1053) x2037) (= (or (and (= (<= x2664 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (> 32 x2664)) (> x2664 57896044618658097711785492504343953926634992332820282019728792003956564819967)) x2562) (= (x631 (+ 31 x2664)) x1053)) (and (=> (not x2562) x2237) (=> x2562 x2678))) x149))
(assert (= x2695 (=> (and (= x897 x2473) (not (< x2473 4)) (not (= x2647 1889567281)) (= x1359 x2392) (not (= x2647 2514000705)) (= x412 (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x729) (and (> 64 x729) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x729) true)))) (= (x2890 (- x2473 4)) x729) (= 2835717307 x2647) (= x1160 76450787359836037641860180984291677749980919077056822294353438043884394381312) (> x1597 0) (= 68 x2473) (= x195 x951) (not (> 826074471 x2647)) (= x1597 (x3021 (x2238 274184521717934524641157099916833587206))) (not (= x2647 826074471))) (and (=> (not x412) x1523) (=> x412 x1137)))))
(assert (=> (> (+ 10000 1) x494) (= (x2238 x494) (x94 x494))))
(assert (x2452 x2321))
(assert (x2452 x697))
(assert (= x2420 (or x1091 (and (not x2814) x1218))))
(assert (= x741 (=> (and (= x3060 (= x2872 0)) (= x1851 (ite (< x789 x219) 1 0)) (= x789 (- (/ 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2872) (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2872))) (= (= x700 0) x777) (= x2147 (ite (not x3060) 1 0)) (= (x11 x2147 x1851) x700)) (and (=> (not x777) x2678) (=> x777 x425)))))
(assert (x2452 x1247))
(assert (x2452 x140))
(assert (x2452 x2943))
(assert (x1863 x2345))
(assert (x2452 x1443))
(assert (= (x2044 x1822) (ite (and x2598 x200 (not x584)) (x2885 x1822) (x2471 x1822))))
(assert (= x1084 (and x810 (not x1198))))
(assert (= x2117 (=> (= x1398 (> x338 x1837)) (and (=> (not x1398) x2229) (=> x1398 x1235)))))
(assert (x1863 x258))
(assert (= x1661 (and x629 x95)))
(assert (x2452 x2246))
(assert (x2452 x247))
(assert (x2452 x2384))
(assert (= (and (not x2260) x2360) x1812))
(assert (= x605 (=> (= (= 274184521717934524641157099916833587202 x2742) x2892) (and (=> (not x2892) x1828) (=> (and (not (= 157198259 x475)) (= 10894474682274239493831243662817379401261526446360622092269559273883068006400 x1919) (not (> 4 x1047)) (< 0 x2804) (= 32 x2199) x2892 (<= x2654 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= 1 x979) (< x475 826074471) (= (x3021 (x2238 274184521717934524641157099916833587202)) x2804) (= 404098525 x475) (= 4 x1047) (>= x2654 0) (= x1063 x1047) (not (= x475 117300739))) x2693)))))
(assert (= (x232 x1096) (ite (and (not x584) x2598 x200) (x339 x1096) (x2853 x1096))))
(assert (= (=> (and (= x2832 (x232 x1096)) (= x510 x195) (<= x2832 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x998 274184521717934524641157099916833587231) (= (x1551 (x2238 274184521717934524641157099916833587231) (x94 1) 0) x1096) (<= 0 x2832) (= x464 (> x951 x2832))) (and (=> x464 x1137) (=> (not x464) x1615))) x2836))
(assert (= (and x1789 (not x2603)) x688))
(assert (x2452 x1444))
(assert (x1758 x329 x3032))
(assert (x2452 x2349))
(assert (= x765 (=> (= (> x1980 0) x1793) (and (=> (not x1793) x2678) (=> x1793 x1387)))))
(assert (= (=> (and (= x1493 (x3104 x2097)) (= x2813 (< 0 x1493))) (and (=> (not x2813) x2678) (=> x2813 x1742))) x2531))
(assert (= (ite (and (not x584) x2598 x200) (x2885 x1256) (x2471 x1256)) (x2044 x1256)))
(assert (= (and x2120 (not x2426)) x266))
(assert (= x2379 (and x2370 (not x681))))
(assert (x2452 x2380))
(assert (= x2771 (=> (and (= x929 (< 18446744073709551615 x1420)) (= (x2049 x2022) x1420) (= (x41 x2150) x2022)) (and (=> x929 x2678) (=> (and (or x2099 (and (= (uninterp_mod (* x1420 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x104) (= (x631 (+ x1562 192)) x1774) (not x2099))) (not x929) (= (uninterp_mod (* 32 x1420) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x506) (= (= x1420 0) x2099) (= x300 (x631 (+ x506 32))) (= (x631 (+ x300 x2097)) x306)) x1196)))))
(assert (x2452 x2649))
(assert (x642 x2218 x273 x2383 x1447))
(assert (= (x2238 17154740991736861046558774992177620686056526479738507590741468237373194108928) (x94 17154740991736861046558774992177620686056526479738507590741468237373194108928)))
(assert (= (=> (= (= 274184521717934524641157099916833587202 x563) x1440) (and (=> x1440 x380) (=> (not x1440) x2691))) x2754))
(assert (= x1181 (and (not x3102) x1957)))
(assert (= (x1560 128) (x2050 128)))
(assert (= x2032 (=> (and (= x2862 x2511) (= x2325 36) (= 1889567281 x1406) (not (= 826074471 x1406)) (not (< x1406 826074471)) (= x2550 x2325) (= (x2890 (- x2325 4)) x1619) (= 50942633119752846454219349998365661925608737367104304655302372697894809501696 x1269) (not (< x2325 4)) (= x24 (x3021 (x2238 274184521717934524641157099916833587206))) (= (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1619) (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1619) true) (> 32 x1619))) x2516) (< 0 x24)) (and (=> x2516 x2014) (=> (not x2516) x419)))))
(assert (x642 x967 x2887 x645 x2694))
(assert (x1206 x774 x194))
(assert (x2452 x1844))
(assert (= x2776 (=> (= (= x1082 0) x3050) (and (=> (not x3050) x1972) (=> x3050 x2678)))))
(assert (= (ite (and x291 x2269 (not x1654)) (x2293 x1256) (x2471 x1256)) (x922 x1256)))
(assert (x2452 x1359))
(assert (= x137 (=> (= (= 0 x171) x556) (and (=> x556 x2678) (=> (not x556) x997)))))
(assert (x2452 x1869))
(assert (x2452 x204))
(assert (= true x3027))
(assert (= (or (and x2880 x147) x1668) x1109))
(assert (= (and x1245 (not x1871)) x2778))
(assert (x2452 x2101))
(assert (x2452 x2373))
(assert (x2452 x2917))
(assert (= (x2238 274184521717934524641157099916833587206) (x94 274184521717934524641157099916833587206)))
(assert (x2452 x1226))
(assert (= x1207 (=> (and (= (x2903 x589) x1747) (= x1728 (< 1000000000000000000 x1747))) (and (=> (not x1728) x1685) (=> x1728 x2678)))))
(assert (= x1486 (or (and x2658 x2964) (and x2189 x396))))
(assert (x2452 x1830))
(assert (= (and x1757 (not x85)) x2219))
(assert (x2452 x1993))
(assert (x2452 x2190))
(assert (x2452 x1132))
(assert (x1824 x3084))
(assert (x2452 x950))
(assert (= (x2709 (x2302 x1102 3)) (+ (x2709 x1102) 3)))
(assert (x2452 x1337))
(assert (x2452 x1861))
(assert (= x2960 (x2709 (x2238 x2960))))
(assert (x2452 x3048))
(assert (= x321 (=> (= (= 0 x654) x2750) (and (=> x2750 x2678) (=> (not x2750) x1697)))))
(assert (= (and (not x464) x2122) x1179))
(assert (= (=> (and (= x2085 (x2389 x2740)) (= (< x98 0) x1485) (= x98 (x2890 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2085))) (= (x631 (+ x1562 192)) x2740)) (and (=> x1485 x2678) (=> (and (= x818 x2642) (not x1485) (= x2642 x2085) (= (x3104 x2097) x2987) (= (< 1 x2987) x290) (not x290)) x1147))) x1268))
(assert (x1206 x1395 x2095))
(assert (= true x2371))
(assert (= (and (not x1728) x2573) x1634))
(assert (x2452 x1743))
(assert (x2452 x146))
(assert (x1824 x1226))
(assert (= (ite (= x335 x3101) x603 (x1881 x3101)) (x2641 x3101)))
(assert (x2452 x1630))
(assert (x2452 x1248))
(assert (= x465 (x2709 (x2238 x465))))
(assert (x1824 x448))
(assert (x2452 x2392))
(assert (= (x1559 x3123) 0))
(assert (x1758 x2458 x2385))
(assert (= x3034 (and x3082 x328)))
(assert (x2452 x696))
(assert (= (and x2763 x1273) x2459))
(assert (= (x2238 29667888499431518244405524310122331055235727797159756471206109933501488824320) (x94 29667888499431518244405524310122331055235727797159756471206109933501488824320)))
(assert (x2452 x389))
(assert (x2452 x306))
(assert (x2452 x3071))
(assert (= (=> (= x2897 (= 274184521717934524641157099916833587206 x563)) (and (=> x2897 x405) (=> (not x2897) x2754))) x365))
(assert (x2452 x2616))
(assert (= (=> (and (not (> 4 x3119)) (= x3119 68) (not (> 826074471 x1065)) (not (= 826074471 x1065)) (= x1217 (x2890 (- x3119 4))) (= x2215 (x3021 (x2238 274184521717934524641157099916833587202))) (= x1065 2835717307) (not (= 1889567281 x1065)) (not (= x1065 2514000705)) (= x936 76450787359836037641860180984291677749980919077056822294353438043884394381312) (= x897 x3119) (= (or (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1217)) (> 64 x1217)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1217)) x2207) (> x2215 0) (= x711 x1359) (= x951 x1075)) (and (=> x2207 x2430) (=> (not x2207) x977))) x2973))
(assert (=> (< (- x52 1) 10000) (= (x94 x52) (x2238 x52))))
(assert (x2452 x1098))
(assert (x2452 x2415))
(assert (x1863 x653))
(assert (= (and x1346 x1197) x1732))
(assert (x1758 x2477 x2482))
(assert (x2452 x1246))
(assert (x2452 x2987))
(assert (x1863 x1237))
(assert (= (or x2178 (and x2505 x1157)) x1021))
(assert (= (=> (and (= x2727 (x2389 x3123)) (= (< 0 x1693) x2339)) (and (=> (and (= x1323 1) (not x2339)) x333) (=> x2339 x945))) x1318))
(assert (= x754 (=> (and (= x1614 (x2890 (- x2374 4))) (= 50942633119752846454219349998365661925608737367104304655302372697894809501696 x1878) (not (> 826074471 x1176)) (> x2328 0) (= x2024 x602) (= x2374 x3004) (not (> 4 x2374)) (= x2374 36) (= (x3021 (x2238 274184521717934524641157099916833587202)) x2328) (not (= 826074471 x1176)) (= x1176 1889567281) (= (or (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1614) true) (> 32 x1614)) (> x1614 57896044618658097711785492504343953926634992332820282019728792003956564819967)) x1791)) (and (=> (not x1791) x2301) (=> x1791 x2165)))))
(assert (x2452 x599))
(assert (x2452 x1491))
(assert (x2452 x816))
(assert (= x606 (and x1367 x2699)))
(assert (x1863 x1503))
(assert (x2452 x2282))
(assert (=> (< (- x608 1) 10000) (= (x2238 x608) (x94 x608))))
(assert (x2452 x2633))
(assert (= (or x1432 x222) x2387))
(assert (= (or x1794 x2276) x690))
(assert (= (x3129 x330) (ite (= x330 x2649) x1478 (x996 x330))))
(assert (= x2757 (=> (= (= x2999 274184521717934524641157099916833587202) x1324) (and (=> x1324 x2631) (=> (not x1324) x2371)))))
(assert (x2452 x610))
(assert (= (ite (and x1772 (not x3056) x2043) (x1832 x450) (x270 x450)) (x1017 x450)))
(assert (x1206 x1276 x2205))
(assert (x2452 x1365))
(assert (= (x2709 (x2238 x1226)) x1226))
(assert (= x383 (=> (and (= (or (> x932 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= true (<= x932 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (> 32 x932))) x1025) (= x932 (x1776 x1362))) (and (=> (not x1025) x2409) (=> x1025 x2678)))))
(assert (= (or (and x1073 x2258) (and (not x2601) x1715) (and x2207 x2492) (and x295 x2399) (and x1213 x2894) (and x241 x1508)) x1039))
(assert (= true x2691))
(assert (= (ite (= x2645 x1811) x1540 (x922 x1811)) (x178 x1811)))
(assert (= (x178 x2423) (ite (= x2645 x2423) x1540 (x922 x2423))))
(assert (= x2862 (x2709 (x2238 x2862))))
(assert (x2452 x1409))
(assert (x2452 x955))
(assert (x2452 x1774))
(assert (x1863 x1143))
(assert (= (and x1298 (not x815)) x1331))
(assert (x2452 x2024))
(assert (x2452 x3002))
(assert (x2452 x1795))
(assert (x2452 x2646))
(assert (= x2413 (and x2715 (not x252))))
(assert (= x768 (and x363 (not x567))))
(assert (x2452 x2020))
(assert (x2452 x2911))
(assert (= 826074471 (x2709 (x94 826074471))))
(assert (x2452 x2053))
(assert (x2452 x818))
(assert (x1863 x2419))
(assert (= (=> (and (= x2065 (x11 1461501637330902918203684832716283019655932542975 x66)) (= (= 0 x574) x3041) (= x882 4) (= (x3021 (x2238 x2065)) x574) (= x1717 (x631 (+ x787 x607))) (= x66 (x2221 x1906))) (and (=> x3041 x2678) (=> (not x3041) x2979))) x2866))
(assert (= x2116 (and x755 (not x263))))
(assert (= x189 (=> (= x1561 (= x883 274184521717934524641157099916833587202)) (and (=> (not x1561) x2698) (=> x1561 x2973)))))
(assert (=> (> (+ 10000 1) x1375) (= (x94 x1375) (x2238 x1375))))
(assert (x2452 x456))
(assert (x2452 x2510))
(assert (x2452 x2311))
(assert (= (x2709 (x2238 x2587)) x2587))
(assert (x2452 x1870))
(assert (x2452 x220))
(assert (= x2766 (or (and x138 x2653) (and (not x3063) x1164))))
(assert (= x397 (=> (and (= x1869 0) (= (x227 x1102) x1415) (= x219 (x1496 x1645)) (= (x2302 x1102 3) x1645) (>= x219 0) (< x1415 1461501637330902918203684832716283019655932542976) (= (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x540) x85) (<= x1415 1461501637330902918203684832716283019655932542975) (<= x219 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= x1415 0)) (and (=> (not x85) x2815) (=> x85 x2954)))))
(assert (x2452 x801))
(assert (x2452 x700))
(assert (x2452 x258))
(assert (= (=> (and (= (or (and (< x1586 32) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1586))) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1586)) x2426) (= (x631 (+ 31 x1586)) x1788) (= (x631 (+ x973 x307)) x2377) (= (x11 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1788) x973)) (and (=> (not x2426) x2635) (=> x2426 x2678))) x2597))
(assert (= x2461 (and x2254 x1572)))
(assert (= x2130 (=> (and (= (x2677 128) x2872) (= (= x775 0) x2401) (= x775 (x3021 (x2238 x1415))) (= 4 x2296)) (and (=> (not x2401) x2416) (=> x2401 x2678)))))
(assert (x2452 x1880))
(assert (= (=> (and (= x2976 (x11 115792089237316195423570985008687907853269984665640564039457584007913129639904 x90)) (= (or (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1284)) (< x1284 32)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1284)) x901) (= x2500 (x631 (+ x791 x2976))) (= x90 (x631 (+ x1284 31)))) (and (=> (not x901) x2871) (=> x901 x2678))) x2857))
(assert (x2452 x1695))
(assert (x1863 x967))
(assert (= (=> (and (= x2456 0) (= x1692 x1078)) x2684) x2165))
(assert (x2452 x3033))
(assert (x2452 x1355))
(assert (x2452 x2625))
(assert (= (and x1610 (not x245)) x256))
(assert (= 0 (x804 x1729)))
(assert (= (=> (and x734 (= (x1062 (x2238 x2999)) x868) (= (x282 (x2238 274184521717934524641157099916833587231)) x2494) (= (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1062 (x2238 x2999))) x734) (= (= 274184521717934524641157099916833587206 x2999) x611)) (and (=> x611 x1003) (=> (not x611) x2757))) x1059))
(assert (x2452 x2790))
(assert (= x2253 (and (not x12) x2056)))
(assert (x2452 x52))
(assert (x2452 x1270))
(assert (x2452 x2434))
(assert (x2452 x2905))
(assert (= (x2709 (x94 71356987572919795984103299673912204194632180251134163011139925636576289226752)) 71356987572919795984103299673912204194632180251134163011139925636576289226752))
(assert (= x964 (and x1732 x547)))
(assert (x2452 x2363))
(assert (= (=> (= (= 274184521717934524641157099916833587206 x1415) x2315) (and (=> (not x2315) x841) (=> (and (= x429 10894474682274239493831243662817379401261526446360622092269559273883068006400) (not (> 4 x214)) (= x17 404098525) (= 4 x214) (> 826074471 x17) (< 0 x580) (= 1 x2838) (= 4 x214) x2315 (= x580 (x3021 (x2238 274184521717934524641157099916833587206))) (= 32 x638) (not (= 117300739 x17)) (not (= x17 157198259)) (<= x1795 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= x1795 0)) x175))) x739))
(assert (= (=> (= (= 0 x2196) x867) (and (=> (and (= x1130 0) x867 (= x1149 0)) x1935) (=> (not x867) x665))) x672))
(assert (= (x804 x1000) 0))
(assert (x1824 x2004))
(assert (x2452 x579))
(assert (x1863 x1662))
(assert (x2452 x45))
(assert (= (x2709 (x2302 x2274 2)) (+ (x2709 x2274) 2)))
(assert (= x1333 (and x1834 (not x1358))))
(assert (= (x1252 x2182) 0))
(assert (x2452 x506))
(assert (x2452 x1369))
(assert (=> (> (+ 10000 1) x465) (= (x2238 x465) (x94 x465))))
(assert (x2452 x144))
(assert (x2452 x2176))
(assert (x1824 x1329))
(assert (= x2970 (and (not x2562) x2213)))
(assert (x2452 x1554))
(assert (= x1978 (=> (and (> x310 0) (= x2730 36) (= 36 x2730) (= x2515 1889567281) (= 50942633119752846454219349998365661925608737367104304655302372697894809501696 x840) (not (< x2515 826074471)) (not (= 826074471 x2515)) (= x310 (x3021 (x2238 274184521717934524641157099916833587206))) (= (or (> x2637 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= (<= x2637 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (> 32 x2637))) x871) (not (> 4 x2730)) (= x2637 (x2890 (- x2730 4))) (= x1359 x2551)) (and (=> x871 x2683) (=> (not x871) x2243)))))
(assert (x2452 x2061))
(assert (x2452 x338))
(assert (= x1860 (and (not x2651) x1228)))
(assert (x2452 x2377))
(assert (x2452 x393))
(assert (x2452 x2322))
(assert (x2452 x2296))
(assert (x2452 x120))
(assert (= x1651 (and (not x2622) x2733)))
(assert (x2452 x615))
(assert (x2452 x2929))
(assert (=> (< (- x127 1) 10000) (= (x94 x127) (x2238 x127))))
(assert (x2452 x2500))
(assert (= (=> (and (= (x631 (+ x2500 36)) x364) (= (x2890 (- x364 x2500)) x2550) (= x2511 (x11 1461501637330902918203684832716283019655932542975 x71)) (= x2608 (x2712 x376)) (= (x631 (+ x2608 32)) x72) (= x2569 (x1892 x72)) (= x168 (x3021 (x2238 x1226))) (= (x631 (+ x2500 4)) x969) (= (x631 (+ x93 32)) x376) (= x71 (x110 x489)) (= x1226 (x11 1461501637330902918203684832716283019655932542975 x2569)) (= (= 0 x168) x349)) (and (=> (not x349) x893) (=> x349 x2678))) x981))
(assert (x2452 x2215))
(assert (= (and (not x2806) x2655) x2780))
(assert (x2452 x1344))
(assert (=> (> (+ 10000 1) x1329) (= (x2238 x1329) (x94 x1329))))
(assert (x2452 x632))
(assert (x2452 x2208))
(assert (= x1295 (and (not x901) x1)))
(assert (x2452 x1415))
(assert (x2452 x2462))
(assert (x2452 x1808))
(assert (= (=> (and (= (x1410 x186) x1145) (= (> x1145 0) x2062)) (and (=> x2062 x1698) (=> (not x2062) x2678))) x234))
(assert (x2452 x934))
(assert (= (and x1533 x601) x3020))
(assert (x642 x90 x990 x861 x2570))
(assert (= 115792089237316195423570985008687907853269984665640564039457584007913129639904 (x2709 (x94 115792089237316195423570985008687907853269984665640564039457584007913129639904))))
(assert (= (and x1770 x1576) x1371))
(assert (= (=> (and (= x127 x2556) (= x3046 (= x127 x1478))) (and (=> (and (>= x1443 0) (<= x1443 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x1681 1) (= x1350 (x1551 (x2238 x127) (x94 1) 0)) (= (x3103 x1350) x1443) x3046 (= 32 x2859)) x1124) (=> (not x3046) x1338))) x2403))
(assert (= x42 (or (and (not x1301) x1806) (and x1581 (not x1981)))))
(assert (x2452 x265))
(assert (x2452 x1897))
(assert (x2452 x2065))
(assert (x2452 x1662))
(assert (x2452 x72))
(assert (x2452 x186))
(assert (= (and (not x909) x1179) x279))
(assert (= (x94 42459404708690159261654315324267577519400883839135586425952143822324095778816) (x2238 42459404708690159261654315324267577519400883839135586425952143822324095778816)))
(assert (x1863 x1693))
(assert (=> (> (+ 10000 1) x2552) (= (x94 x2552) (x2238 x2552))))
(assert (x2452 x2930))
(assert (= x1233 (=> (and (= (x11 1461501637330902918203684832716283019655932542975 x1399) x1982) (= 4 x1476) (= (= x3037 0) x2998) (= x3037 (x3021 (x2238 x1982))) (= (x923 x2182) x1399)) (and (=> (not x2998) x2491) (=> x2998 x2678)))))
(assert (= x2467 (=> (and (= x87 x392) (= x1605 x319) (= x1322 x1030) (= x951 x1909) (= x1904 x762) (= x856 x2193) (= x888 x1194)) x3081)))
(assert (x2452 x1474))
(assert (x2452 x1493))
(assert (x2452 x2022))
(assert (=> (< (- x393 1) 10000) (= (x2238 x393) (x94 x393))))
(assert (= 0 (x880 (- x2201 x2282))))
(assert (x2452 x2487))
(assert (x2452 x97))
(assert (= x2074 (and x3003 (not x2801))))
(assert (= x1033 (and x2225 (not x2897))))
(assert (x2452 x911))
(assert (= (x2709 (x2238 x608)) x608))
(assert (x1758 x1807 x2244))
(assert (x2452 x2142))
(assert (x2452 x914))
(assert (x2452 x726))
(assert (x2452 x987))
(assert (x2452 x403))
(assert (= (and x1426 (not x2)) x3096))
(assert (x2452 x2816))
(assert (= x1564 (and (not x584) x200)))
(assert (x2452 x2009))
(assert (x2452 x978))
(assert (x1206 x1802 x2943))
(assert (x2452 x2722))
(assert (x2452 x1786))
(assert (= 0 (x804 x1490)))
(assert (x2452 x707))
(assert (= (=> (= x2000 (= x1790 0)) (and (=> (not x2000) x2673) (=> x2000 x2678))) x262))
(assert (x2452 x514))
(assert (x2452 x2884))
(assert (x2452 x6))
(assert (= (and x2810 (not x375)) x1823))
(assert (= x2394 (=> (and (= (= x174 0) x2505) (= (x2273 x330) x174)) (and (=> (not x2505) x2140) (=> (and x2505 (= x57 x3127) (= 0 x345)) x1866)))))
(assert (= x329 (x2709 (x2238 x329))))
(assert (x1824 x1163))
(assert (x2452 x2991))
(assert (= (=> (and (= (x631 (+ 31 x2108)) x669) (= (or (> x2108 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (< x2108 32) (= (<= x2108 57896044618658097711785492504343953926634992332820282019728792003956564819967) true))) x1718) (= x330 (x631 (+ x2353 x1849))) (= (x11 115792089237316195423570985008687907853269984665640564039457584007913129639904 x669) x2353)) (and (=> (not x1718) x500) (=> x1718 x2678))) x139))
(assert (x2452 x1607))
(assert (= x2794 (=> (and (= (= 0 x2012) x692) (= (x1551 (x2238 x2156) (x94 2) 0) x1102) (= x2156 (x11 1461501637330902918203684832716283019655932542975 x1522))) (and (=> (not x692) x1917) (=> x692 x397)))))
(assert (x2452 x3140))
(assert (= (x260 x2175) 0))
(assert (= (=> (and (or (and (= (x631 (+ 63 x1688)) x2218) (= (x631 (+ x226 x2236)) x2926) (not x1495) (= (x11 115792089237316195423570985008687907853269984665640564039457584007913129639904 x2218) x226) (= x2236 x1362) (= x1991 (x631 (+ x1743 96))) (= x2926 x2584)) (and (= x2236 x2584) (= 96 x1362) x1495)) (= x1495 (= 0 x1688))) x1761) x2040))
(assert (x2452 x1140))
(assert (= (and x2729 x1627) x1883))
(assert (x1863 x2561))
(assert (x642 x2711 x2758 x954 x1345))
(assert (x1824 x1375))
(assert (x2452 x2556))
(assert (= (x94 115792089237316195423570985008687907853269984665640564039457584007913129639935) (x2238 115792089237316195423570985008687907853269984665640564039457584007913129639935)))
(assert (x2452 x107))
(assert (x2452 x1034))
(assert (= (+ 1 (x2709 x1102)) (x2709 (x2302 x1102 1))))
(assert (= (x2709 (x2238 x2156)) x2156))
(assert (x2452 x494))
(assert (x2452 x1514))
(assert (x2452 x1926))
(assert (= x2499 (=> (and (= x1088 x1621) (= x1786 0)) x1535)))
(assert (x2452 x1739))
(assert (x2452 x2821))
(assert (= x2159 (and x658 x1879)))
(assert (x2452 x784))
(assert (= (and x3051 x2726) x1711))
(assert (= 0 (x260 x695)))
(assert (x2452 x1810))
(assert (= x810 (and (not x2286) x926)))
(assert (= (x2641 x1200) (ite (= x335 x1200) x603 (x1881 x1200))))
(assert (= (x2709 (x2238 x2999)) x2999))
(assert (= x2554 (=> (= (= x2202 0) x2047) (and (=> (not x2047) x2794) (=> x2047 x2678)))))
(assert (= (=> (and (= x2872 x762) (= x2844 x1203) (= x1045 x951)) x551) x612))
(assert (= (=> (= x3065 (> x2299 x2710)) (and (=> (and (= x342 x2299) (not x3065) (= x2607 x2211) (= x1506 (x2890 (- x2710 x2299))) (= x142 x2940) (= x2654 x416) (= x2869 x1248) (= x795 x2101)) x1015) (=> x3065 x2678))) x2752))
(assert (= (=> (and (= 0 x788) (= x2132 x2216)) x793) x928))
(assert (x1758 x1399 x2580))
(assert (x2452 x2388))
(assert (x2452 x1807))
(assert (= (and (not x2284) x96) x1572))
(assert (= x1150 (and x779 (not x647))))
(assert (= true x966))
(assert (= (x2238 10894474682274239493831243662817379401261526446360622092269559273883068006400) (x94 10894474682274239493831243662817379401261526446360622092269559273883068006400)))
(assert (x2452 x1969))
(assert (= x3084 (x2709 (x2238 x3084))))
(assert (x2452 x2198))
(assert (= x2715 (and x2595 (not x2484))))
(assert (= (ite (and x368 x478 (not x111)) (x1720 x2636) (x84 x2636)) (x1932 x2636)))
(assert (x2452 x424))
(assert (x2452 x1220))
(assert (= (ite (and x200 x2598 (not x584)) (x339 x941) (x2853 x941)) (x232 x941)))
(assert (= (=> (= x2756 (= x1964 0)) (and (=> x2756 x2678) (=> (not x2756) x2271))) x2952))
(assert (x2452 x725))
(assert (= 0 (x260 x1631)))
(assert (x2452 x2587))
(assert (= x926 (and (not x2907) x2921)))
(assert (= (=> (and (= x2475 x2176) (= x108 x2978)) x109) x2463))
(assert (x1824 x52))
(assert (x2452 x1790))
(assert (= (and x2723 x2888) x1945))
(assert (x2452 x1597))
(assert (= x1396 (and x3117 x201)))
(assert (x2452 x2267))
(assert (= x427 (=> (= (= 0 x1288) x1195) (and (=> (not x1195) x308) (=> x1195 x2678)))))
(assert (x2452 x1740))
(assert (= (=> (= (= 274184521717934524641157099916833587202 x1415) x242) (and (=> (not x242) x773) (=> (and (not (= x166 117300739)) (not (= x166 157198259)) (= 404098525 x166) (= x3030 10894474682274239493831243662817379401261526446360622092269559273883068006400) (< x166 826074471) (<= 0 x2790) (not (< x2657 4)) (= x2657 4) x242 (<= x2790 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x2657 x2296) (< 0 x771) (= x879 32) (= x832 1) (= x771 (x3021 (x2238 274184521717934524641157099916833587202)))) x79))) x505))
(assert (= x2430 (=> (and (= x108 x34) (= 0 x2475)) x2463)))
(assert (x2452 x2064))
(assert (= (x94 26959946667150639794667015087019630673637144422540572481103610249215) (x2238 26959946667150639794667015087019630673637144422540572481103610249215)))
(assert (= (and x3034 (not x1750)) x1960))
(assert (x2452 x1366))
(assert (x2452 x1964))
(assert (x2452 x542))
(assert (x2452 x1802))
(assert (x2452 x931))
(assert (= (x94 76450787359836037641860180984291677749980919077056822294353438043884394381312) (x2238 76450787359836037641860180984291677749980919077056822294353438043884394381312)))
(assert (= x2875 (or (and (not x3065) x2959) (and x1397 (not x1893)))))
(assert (x2452 x2882))
(assert (x1863 x2523))
(assert (= (x2709 (x94 4168891048)) 4168891048))
(assert (x2452 x307))
(assert (x2452 x1847))
(assert (= (=> (and (= x465 (x11 1461501637330902918203684832716283019655932542975 x2190)) (= (x2890 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x707)) x2896) (= x2423 (x1551 (x2238 x465) (x94 1) 0)) (= x1540 (x2890 (- x1409 x707))) (<= 0 x158) (= (x178 x2423) x158) (= (x1551 (x2238 274184521717934524641157099916833587231) (x94 1) 0) x2645) (= (> x158 x2896) x2161) (<= x158 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= 274184521717934524641157099916833587231 x1733)) (and (=> (not x2161) x466) (=> x2161 x1552))) x2466))
(assert (x1863 x2458))
(assert (=> (< (- x3084 1) 10000) (= (x94 x3084) (x2238 x3084))))
(assert (x2452 x1733))
(assert (x2452 x100))
(assert (x2452 x845))
(assert (x2452 x450))
(assert (x1863 x2874))
(assert (x2452 x2553))
(assert (x1863 x2077))
(assert (= (ite (= x72 x1856) 0 (x915 x72)) (x1696 x72)))
(assert (= x2552 (x2709 (x2238 x2552))))
(assert (= x908 (and (not x3107) x2074)))
(assert (= true x2123))
(assert (x1863 x1107))
(assert (x2452 x292))
(assert (= (or (and x446 x1434) (and x2831 x3112)) x1215))
(assert (x1863 x2190))
(assert (= (and x907 x1295) x2759))
(assert (x2452 x879))
(assert (x2452 x51))
(assert (x2452 x762))
(assert (x1863 x2275))
(assert (x1863 x2628))
(assert (= (or (and x294 x2110) (and x318 x644)) x3038))
(assert (= (x1805 x520) 0))
(assert (x2452 x226))
(assert (= x494 (x2709 (x2238 x494))))
(assert (= true x2698))
(assert (x2452 x2105))
(assert (x2452 x569))
(assert (x2452 x2456))
(assert (x2452 x2607))
(assert (x1863 x1359))
(assert (x2452 x2647))
(assert (= x3003 (or (and x1944 x2144) (and x1388 x1752))))
(assert (= x44 (x2709 (x2238 x44))))
(assert (= (ite (= x1534 x2414) x48 (x2044 x2414)) (x2977 x2414)))
(assert (= (and (not x3050) x378) x2589))
(assert (= x1434 (and x495 x2013)))
(assert (x2452 x163))
(assert (= (=> (= (= 0 x2395) x1013) (and (=> x1013 x2678) (=> (not x1013) x1505))) x301))
(assert (=> (> (+ 10000 1) x1415) (= (x94 x1415) (x2238 x1415))))
(assert (= 0 (x1252 x1435)))
(assert (= x2831 (and (not x271) x1326)))
(assert (x2452 x121))
(assert (x2452 x668))
(assert (x2452 x673))
(assert (= (and (not x294) x2110) x2902))
(assert (x2452 x2328))
(assert (x2452 x1065))
(assert (= (x94 32884410799705633174121290916597065681711743008034783737682747490404042539008) (x2238 32884410799705633174121290916597065681711743008034783737682747490404042539008)))
(assert (x2452 x709))
(assert (x642 x2345 x1712 x433 x64))
(assert (x642 x560 x1753 x2682 x576))
(assert (x2452 x1019))
(assert (= x2409 (=> (and (= x1585 (x631 (+ 32 x1362))) (= x1980 (x400 x1585)) (= x2259 (not x2619)) (= (= x1980 (ite x2259 1 0)) x1229) (= (= 0 x1980) x2619)) (and (=> x1229 x765) (=> (not x1229) x2678)))))
(assert (x2452 x1912))
(assert (= x2145 (=> (and (= (and (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1673) (>= x919 0)) x3070) (= x845 x897) (= x919 (x2599 (x2238 274184521717934524641157099916833587231))) (= (x2599 (x2238 x883)) x1673)) (and (=> (and (= x2069 0) (not x3070) (= 0 x1790)) x1328) (=> x3070 x1657)))))
(assert (= 0 (x1252 x2863)))
(assert (x2452 x2336))
(assert (x2452 x563))
(assert (x1758 x2628 x877))
(assert (= x3122 (=> (and (= x271 (or (> x638 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= true (<= x638 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (< x638 32)))) (= (x631 (+ x638 31)) x542) (= x2357 (x11 115792089237316195423570985008687907853269984665640564039457584007913129639904 x542)) (= x1700 (x631 (+ x2357 128)))) (and (=> x271 x2678) (=> (not x271) x153)))))
(assert (= (and (not x1044) x440) x2964))
(assert (= (and (not x1483) x768) x1004))
(assert (x2452 x1018))
(assert (x1863 x2891))
(assert (x2452 x2083))
(assert (x2452 x481))
(assert (x2452 x2173))
(assert (= (and x552 (not x2030)) x2422))
(assert (=> (> (+ 10000 1) x2004) (= (x94 x2004) (x2238 x2004))))
(assert (= (=> (and (= x3115 (x1528 x2500)) (= x55 (> x2877 x1567)) (= x1567 (x2890 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3115)))) (and (=> x55 x2678) (=> (not x55) x1316))) x1152))
(assert (x2452 x2523))
(assert (= x2723 (and x42 (not x487))))
(assert (= x977 (=> (and (= x2680 (x11 1461501637330902918203684832716283019655932542975 x1359)) (= (= x2680 x1359) x2601)) (and (=> x2601 x21) (=> (not x2601) x2430)))))
(assert (= (x1538 x941) (ite (= x941 x518) x2204 (x2010 x941))))
(assert (x2452 x1076))
(assert (x2452 x3121))
(assert (x2452 x3066))
(assert (= x779 (and x1333 (not x921))))
(assert (x2452 x1814))
(assert (= (ite (= x376 x335) x603 (x1881 x376)) (x2641 x376)))
(assert (x2452 x2717))
(assert (= x1582 (and x2824 (not x1095))))
(assert (x2452 x957))
(assert (=> (< (- x1526 1) 10000) (= (x94 x1526) (x2238 x1526))))
(assert (= x849 (=> (and (= (= (ite x2100 1 0) x1006) x2292) (= (not x1315) x2100) (= x1315 (= x1006 0)) (= (x631 (+ x2835 32)) x2201) (= x1006 (x1549 x2201))) (and (=> x2292 x1553) (=> (not x2292) x2678)))))
(assert (x1824 x44))
(assert (= x2492 (and x1561 x808)))
(assert (x2452 x66))
(assert (= x528 (and x62 x1357)))
(assert (x2452 x2055))
(assert (x2452 x1875))
(assert (x2452 x1586))
(assert (x2452 x2059))
(assert (= (and x208 x2386) x1569))
(assert (= (and (not x2542) x2577) x2555))
(assert (x642 x1941 x2007 x2539 x2650))
(assert (x2452 x2791))
(assert (x2452 x2664))
(assert (= 0 (x804 x2313)))
(assert (= (and x2618 x2951) x2751))
(assert (= (x915 x72) 0))
(assert (= x3026 (=> (and (= 4 x1063) (= (x631 (+ x2932 x2434)) x1739) (= (= 0 x2600) x736) (= x1503 (x1167 x520)) (= (x3021 (x2238 x2742)) x2600) (= x2742 (x11 1461501637330902918203684832716283019655932542975 x1503))) (and (=> x736 x2678) (=> (not x736) x298)))))
(assert (= (and x2902 x438) x2655))
(assert (= x3098 (=> (and (= x2303 (x2003 x3118)) (= (> x1574 0) x895) (= x1574 (x2049 x1490))) (and (=> (not x895) x2678) (=> x895 x1233)))))
(assert (x2452 x310))
(assert (x2452 x2999))
(assert (x2452 x2323))
(assert (= x1298 (and (not x2793) x1462)))
(assert (= 0 (x1744 x404)))
(assert (= (=> (and (= x2363 x345) (= x2162 x3127)) x1866) x83))
(assert (= (and (not x796) x1413) x2860))
(assert (= x1890 (=> (and (not (> 4 x620)) (= (x2890 (- x620 4)) x2717) (= x2550 x620) (= x1441 1889567281) (< 0 x1933) (= x1933 (x3021 (x2238 274184521717934524641157099916833587202))) (= 36 x620) (= x2256 x2511) (= x2263 50942633119752846454219349998365661925608737367104304655302372697894809501696) (not (= x1441 826074471)) (= (or (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2717) true) (> 32 x2717)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2717)) x2653) (not (> 826074471 x1441))) (and (=> x2653 x928) (=> (not x2653) x2073)))))
(assert (x1863 x1182))
(assert (= (=> (= x245 (= 274184521717934524641157099916833587202 x1226)) (and (=> (not x245) x2660) (=> x245 x1890))) x1563))
(assert (x2452 x1891))
(assert (x1863 x2943))
(assert (x2452 x2457))
(assert (= (=> (and (= (- (/ 115792089237316195423570985008687907853269984665640564039457584007913129639935 x25) (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x25)) x744) (= x2068 (< x744 x1511))) (and (=> x2068 x2678) (=> (and (= (uninterp_mod (* x25 x1511) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x826) (= x1689 x826) (not x2068)) x1480))) x1277))
(assert (x2452 x151))
(assert (x2452 x1163))
(assert (= (or (and x2529 x1831) x1737) x2809))
(assert (x1758 x1325 x857))
(assert (x2452 x2240))
(assert (x2452 x158))
(assert (x2452 x2605))
(assert (x2452 x1477))
(assert (x2452 x791))
(assert (x1824 x1931))
(assert (x1863 x542))
(assert (= x1899 (x2709 (x2238 x1899))))
(assert (= (or (and x2516 x1371) (and x504 (not x1332))) x648))
(assert (x2452 x1691))
(assert (= (=> (and (= (ite (= x2633 0) (= 0 x2633) (= x1739 0)) x3125) (= (x2881 x2690) x2633)) (and (=> (and (= 0 x1787) x3125) x1465) (=> (not x3125) x141))) x1414))
(assert (= (x2709 (x94 10894474682274239493831243662817379401261526446360622092269559273883068006400)) 10894474682274239493831243662817379401261526446360622092269559273883068006400))
(assert (x2452 x335))
(assert (x2452 x1714))
(assert (x2452 x2458))
(assert (x2452 x951))
(assert (= (or (and x1703 x1396) (and x2418 x910) (and x1181 x2161) (and x2814 x1218) (and (not x3117) x201) (and x1957 x3102)) x1091))
(assert (= (=> (= x1770 (= x1226 274184521717934524641157099916833587206)) (and (=> (not x1770) x1563) (=> x1770 x2032))) x893))
(assert (= x357 (and x1419 (not x759))))
(assert (= (x1559 x2740) 0))
(assert (x2452 x1200))
(assert (= 80455309404869098397086765254582893697288411140986131472514049311582516674560 (x2709 (x94 80455309404869098397086765254582893697288411140986131472514049311582516674560))))
(assert (x2452 x1497))
(assert (x1863 x369))
(assert (x2452 x19))
(assert (= (x2709 (x2238 x1375)) x1375))
(assert (x2452 x3067))
(assert (= (or (and (not x394) x1051) x2997) x2048))
(assert (x1863 x1053))
(assert (= (and x806 x1604) x2189))
(assert (x2452 x1045))
(assert (x1863 x569))
(assert (x1863 26959946667150639794667015087019630673637144422540572481103610249215))
(assert (x2452 x1456))
(assert (= (=> (and (or (and (not x2427) (= x86 (x631 (+ x1810 x726))) (= (x631 (+ 63 x2069)) x2345) (= x726 x2835) (= x86 x1605) (= (x11 115792089237316195423570985008687907853269984665640564039457584007913129639904 x2345) x1810) (= (x631 (+ 96 x1853)) x2282)) (and (= x2835 96) x2427 (= x1605 x726))) (= (= 0 x2069) x2427)) x262) x1328))
(assert (= (=> (and (= (x455 x1724) x696) (= x1301 (> x696 0))) (and (=> x1301 x2304) (=> (and (not x1301) (= x2510 0)) x1768))) x418))
(assert (= (x2238 1461501637330902918203684832716283019655932542976) (x94 1461501637330902918203684832716283019655932542976)))
(assert (= x1866 (=> (and (= (> x2957 0) x1239) (= (x3104 x2097) x2957)) (and (=> (not x1239) x2678) (=> (and (= x3127 x2681) x1239 (= x2579 (x2049 x1729)) (not x2309) (= x2309 (> x2579 1)) (= (x631 (+ 192 x1562)) x587) (= (x41 x2150) x1729)) x356)))))
(assert (x2452 x543))
(assert (= x526 (=> (and (= x2415 (x11 115792089237316195423570985008687907853269984665640564039457584007913129639904 x873)) (= (x631 (+ x2415 128)) x2560) (= (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1936) (and (< x1936 32) (= (<= x1936 57896044618658097711785492504343953926634992332820282019728792003956564819967) true))) x2286) (= x873 (x631 (+ x1936 31)))) (and (=> x2286 x2678) (=> (not x2286) x2266)))))
(assert (= (ite (and x2598 (not x584) x200) (x2885 x50) (x2471 x50)) (x2044 x50)))
(assert (= (x2709 (x94 4294967296)) 4294967296))
(assert (x1863 x1142))
(assert (= x847 (=> (and (= x2294 (x282 (x2238 x2999))) (= (and (<= 0 x2200) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2294)) x394) (= x341 x1433) (= (x282 (x2238 274184521717934524641157099916833587231)) x2200)) (and (=> x394 x1059) (=> (and (not x394) (= x1688 0) (= 0 x1923)) x2040)))))
(assert (x2452 x1219))
(assert (= x3126 (and x2614 x1548)))
(assert (= (ite (and (not x164) x54 x1171) (x718 x1694) (x958 x1694)) (x1900 x1694)))
(assert (= (=> (= x208 (= x1415 274184521717934524641157099916833587206)) (and (=> x208 x1978) (=> (not x208) x1723))) x2257))
(assert (x2452 x1092))
(assert (and (= 1461501637330902918203684832716283019655932542976 (x1100 2 160)) (= (x1100 2 248) 452312848583266388373324160190187140051835877600158453279131187530910662656) (= 16777216 (x1100 2 24)) (= 65536 (x1100 2 16)) (= 411376139330301510538742295639337626245683966408394965837152256 (x1100 2 208)) (= 1606938044258990275541962092341162602522202993782792835301376 (x1100 2 200)) (= 1099511627776 (x1100 2 40)) (= 309485009821345068724781056 (x1100 2 88)) (= (x1100 2 48) 281474976710656) (= (x1100 2 224) 26959946667150639794667015087019630673637144422540572481103610249216) (= 20282409603651670423947251286016 (x1100 2 104)) (= (x1100 2 216) 105312291668557186697918027683670432318895095400549111254310977536) (= (x1100 2 8) 256) (= 18446744073709551616 (x1100 2 64)) (= 1 (x1100 2 0)) (= 79228162514264337593543950336 (x1100 2 96)) (= (x1100 2 192) 6277101735386680763835789423207666416102355444464034512896) (= (x1100 2 56) 72057594037927936) (= (x1100 2 32) 4294967296) (= (x1100 2 80) 1208925819614629174706176) (= (x1100 2 240) 1766847064778384329583297500742918515827483896875618958121606201292619776) (= (x1100 2 136) 87112285931760246646623899502532662132736) (= (x1100 2 176) 95780971304118053647396689196894323976171195136475136) (= (x1100 2 256) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= (x1100 2 128) 340282366920938463463374607431768211456) (= 22300745198530623141535718272648361505980416 (x1100 2 144)) (= (x1100 2 184) 24519928653854221733733552434404946937899825954937634816) (= 1329227995784915872903807060280344576 (x1100 2 120)) (= (x1100 2 232) 6901746346790563787434755862277025452451108972170386555162524223799296) (= 374144419156711147060143317175368453031918731001856 (x1100 2 168)) (= (x1100 2 152) 5708990770823839524233143877797980545530986496) (= 5192296858534827628530496329220096 (x1100 2 112)) (= 4722366482869645213696 (x1100 2 72))))
(assert (x2452 x1058))
(assert (x2452 x1640))
(assert (= x1954 (=> (= x2651 (= 274184521717934524641157099916833587202 x1982)) (and (=> (and (> x2558 0) (not (< x424 826074471)) (= x2558 (x3021 (x2238 274184521717934524641157099916833587202))) (= 32 x1055) (<= 0 x1248) (= 1 x2209) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1248) (= 4 x1607) (= x1607 x1476) (= x1092 22270923681254677845691103109158760375340177724800803888364822332811285364736) (= x424 826074471) (not (> 4 x1607)) x2651) x2602) (=> (not x2651) x1224)))))
(assert (x2452 x1970))
(assert (x2452 x653))
(assert (= (and x3009 (not x867)) x1280))
(assert (= x1591 (=> (and (= x512 (x631 (+ 31 x2822))) (= (x631 (+ x589 x673)) x2690) (= (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2822) (and (< x2822 32) (= true (<= x2822 57896044618658097711785492504343953926634992332820282019728792003956564819967)))) x746) (= x673 (x11 115792089237316195423570985008687907853269984665640564039457584007913129639904 x512))) (and (=> (not x746) x1207) (=> x746 x2678)))))
(assert (= (=> (and (= (ite (not x1158) 1 0) x774) (= x1364 (- (/ 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2196) (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2196))) (= x1627 (= 0 x1411)) (= x194 (ite (> 1000000000000000000 x1364) 1 0)) (= (= x2196 0) x1158) (= (x11 x774 x194) x1411)) (and (=> (not x1627) x2678) (=> x1627 x267))) x767))
(assert (x2452 x2270))
(assert (x2452 x1080))
(assert (= 0 (x1378 x1403)))
(assert (= (=> (and (= (< x469 x2079) x241) (= x469 (x631 (+ x2079 x1075)))) (and (=> (and (= x2475 1) (not x241) (= x955 x37) (= x108 32) (= (x1551 (x2238 x1270) (x94 1) 0) x2802) (= (x11 1461501637330902918203684832716283019655932542975 x711) x1270)) x2463) (=> x241 x2430))) x2931))
(assert (= x2358 (and x1177 x2604)))
(assert (x1863 x3130))
(assert (x1012 x1693 x1234))
(assert (x2452 x3088))
(assert (x1758 x1492 x2839))
(assert (= x2454 (=> (and (= x1058 (x497 x57)) (= x815 (ite (= x1058 0) (= x1058 0) (= 0 x1717)))) (and (=> (and (= 0 x2363) x815) x83) (=> (not x815) x1601)))))
(assert (x2452 x2090))
(assert (x2452 x1128))
(assert (x2452 x1470))
(assert (= x2527 x1024))
(assert (= x2990 (and x1361 (not x106))))
(assert (= (and (not x2125) x2219) x2183))
(assert (x2452 x2477))
(assert (= (ite (and (not x1654) x2269 x291) (x1499 x1532) (x2853 x1532)) (x2010 x1532)))
(assert (x2452 x770))
(assert (x2452 x1684))
(assert (= x378 (and x2461 (not x4))))
(assert (= (ite (= x1469 x1259) x2837 (x232 x1469)) (x1037 x1469)))
(assert (x2452 x1472))
(assert (x1863 x3140))
(assert (x2452 x1606))
(assert (x2452 x1142))
(assert (x2452 x1094))
(assert (x2452 x2558))
(assert (= (and (not x1948) x1097) x200))
(assert (x2452 x3085))
(assert (x2452 x832))
(assert (x2452 x2179))
(assert (= (x2709 (x94 2514000705)) 2514000705))
(assert (= (=> (and (= (x3021 (x2238 x1375)) x332) (= x1654 (= 0 x332)) (= x1921 (x631 (+ x1212 36))) (= (x631 (+ x1212 4)) x2001)) (and (=> x1654 x2678) (=> (and (or (and x2269 (= x814 x3048) (= x2852 (<= x3022 (x687 (x2238 274184521717934524641157099916833587231)))) x2852 (= x1156 x1993) (> 4294967296 x238) x26 (= x1509 x2129) (= x626 x1847) (= (x1077 (x2238 x1375)) x462) (= x26 (= (x687 (x2238 x1375)) x462)) (= x3022 (x1077 (x2238 274184521717934524641157099916833587231)))) (and (= x121 x1156) (= x1847 x2790) (not x2269) (= x1509 x1795) (= x2033 x3048))) (not x1654) (= (> x231 0) x2269)) x1952))) x2521))
(assert (= (=> (and (= (- (/ 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2727) (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2727)) x2373) (= x601 (= 0 x1850)) (= (ite (< x2373 x2303) 1 0) x369) (= x2967 (ite (not x1680) 1 0)) (= (= 0 x2727) x1680) (= x1850 (x11 x2967 x369))) (and (=> (not x601) x2678) (=> x601 x1575))) x333))
(assert (= x2959 (or (and x690 x2704) x820)))
(assert (= (x2709 (x2238 x548)) x548))
(assert (=> (> (+ 10000 1) x2999) (= (x94 x2999) (x2238 x2999))))
(assert (x2452 x407))
(assert (x2452 x1585))
(assert (x2452 x603))
(assert (x2452 x2069))
(assert (x2452 x2294))
(assert (x1758 x710 x865))
(assert (x2452 x1309))
(assert (= (or (and x432 x1647) (and x1812 (not x2934))) x1113))
(assert (x2171 x2334))
(assert (= (=> (and (= x2825 x836) (= 0 x784)) x694) x1858))
(assert (= (=> (and (= x545 x2737) (= x278 x1074)) x1925) x112))
(assert (= x2721 (x2709 (x2238 x2721))))
(assert (x2452 x1787))
(assert (x2452 x3068))
(assert (= x1027 (=> (and (= x2808 x1284) (= x2517 x3141)) x778)))
(assert (x2452 x2552))
(assert (x1758 x1503 x1738))
(assert (= (=> (and (= x1658 (x11 1461501637330902918203684832716283019655932542975 x2458)) (= x2548 (x631 (+ x2905 36))) (= x2458 (x923 x2863)) (= (x11 1461501637330902918203684832716283019655932542975 x710) x1769) (= (x631 (+ 32 x2166)) x2863) (= (x631 (+ 4 x2905)) x2546) (= (x3021 (x2238 x608)) x2164) (= x608 (x11 1461501637330902918203684832716283019655932542975 x3078)) (= x2806 (= x2164 0))) (and (=> (and (or (and (> 4294967296 x1771) x1302 (= x2566 1)) (and (not x1302) (= x2498 x2566))) (not x2806) (= (> x2498 0) x1302)) x1300) (=> x2806 x2678))) x360))
(assert (x2452 x1074))
(assert (x2452 x720))
(assert (x2452 x919))
(assert (= x1449 (or (and x614 x1791) (and (not x316) x1889))))
(assert (= (and x1280 x1401) x755))
(assert (= (=> (and (= (x11 x2891 x233) x2538) (= x2334 (x11 x1970 x2912)) (= x2912 (ite (> 78 x258) 1 0)) (= 1 x2891) (= x233 (ite (> 32 x258) 1 0)) (= (= 0 (x1609 x2334 x2538)) x3051) (= x1970 1)) (and (=> (and (not x3051) (= (x1100 10 x258) x1689)) x1480) (=> (and (= (> x258 1) x250) (or (and (= (ite x311 1 10) x1511) x250 (= x1366 (x2242 x258 1)) (not x1394) (= x1394 (< 1 x1366)) (= x311 (= x362 0)) (= 100 x25) (= (x11 1 x258) x362)) (and (= x25 10) (= 1 x1511) (not x250))) x3051) x1277))) x2856))
(assert (x2452 x1000))
(assert (= (and x85 x1757) x277))
(assert (x2452 x1325))
(assert (x2452 x894))
(assert (x1863 x90))
(assert (x2452 x436))
(assert (x2452 x369))
(assert (= x222 (or x1571 (and x2555 x203))))
(assert (x2452 x2873))
(assert (x2452 x2255))
(assert (x1824 x1071))
(assert (= 1889567281 (x2709 (x94 1889567281))))
(assert (x2452 x1727))
(assert (= (x10 x2905) (ite (= x2905 x2548) x1658 (x588 x2905))))
(assert (x1863 x1492))
(assert (x2452 x490))
(assert (= x1855 (and (not x1388) x1752)))
(assert (x2452 x2872))
(assert (x1863 1461501637330902918203684832716283019655932542975))
(assert (x2452 x520))
(assert (= (or (and x1097 x1948) x2135) x1397))
(assert (x2452 x1286))
(assert (x2452 x967))
(assert (x2452 x166))
(assert (x2452 x2657))
(assert (= x1843 (or (and (not x948) x2253) (and x12 x2056))))
(assert (x642 x817 x1632 x2528 x374))
(assert (= x1354 (=> (and (= (x2049 x2313) x8) (= x204 (x1686 x1562)) (= x2628 (x22 x2443)) (= x2206 (< 0 x8)) (= x2313 (x41 x2150))) (and (=> (not x2206) x2678) (=> x2206 x802)))))
(assert (x2452 x537))
(assert (x2452 x2797))
(assert (= x1761 (=> (= (= x1923 0) x1854) (and (=> x1854 x2678) (=> (not x1854) x952)))))
(assert (x2452 x663))
(assert (= x2135 (or (and x1223 (not x803)) (and x561 x1955))))
(assert (x2452 x856))
(assert (x2452 x1375))
(assert (x2452 x1856))
(assert (= (x3079 x978) 0))
(assert (x2452 x2805))
(assert (x2452 x540))
(assert (x2452 x1467))
(assert (= (ite (and (not x1654) x2269 x291) (x1499 x1120) (x2853 x1120)) (x2010 x1120)))
(assert (x2452 x2837))
(assert (= (and x2225 x2897) x53))
(assert (x1863 x1691))
(assert (x2452 x1093))
(assert (= x551 (=> (= (= x951 0) x1948) (and (=> (and (= x2033 x87) x1948 (= x1904 0) (= x1194 x121) (= x1322 x2790) (= 0 x1909) (= x1795 x2193) (= x319 x1203)) x3081) (=> (not x1948) x657)))))
(assert (= (or (and x1598 x1084) (and x73 x613)) x2417))
(assert (= (x2238 157198259) (x94 157198259)))
(assert (x2452 x3145))
(assert (x642 x1182 x2789 x352 x105))
(assert (x2452 x1212))
(assert (x2452 x1269))
(assert (x2452 x364))
(assert (x2452 x1546))
(assert (= (=> (and (= x1612 x1502) (= x1926 x1936)) x2220) x994))
(assert (= (ite (= x1906 x1453) 0 (x3025 x1906)) (x483 x1906)))
(assert (x2452 x1088))
(assert (= (ite (= x14 x791) x602 (x625 x791)) (x1584 x791)))
(assert (x2452 x853))
(assert (x2452 x2687))
(assert (x2452 x3053))
(assert (= (and x1755 (not x1718)) x1357))
(assert (x1824 274184521717934524641157099916833587231))
(assert (x2452 x268))
(assert (x2452 x402))
(assert (= (and (not x1202) x1036) x1973))
(assert (x2452 x677))
(assert (x2452 x1929))
(assert (x2452 x2912))
(assert (x2452 x1276))
(assert (x2452 x194))
(assert (x1863 x710))
(assert (x2452 x2441))
(assert (x2452 x2861))
(assert (x2452 x131))
(assert (= (x479 x1542) (ite (and (not x263) x755 x1937) (x1998 x1542) (x103 x1542))))
(assert (= (=> (and (= x251 (= 0 x287)) (= (x3021 (x2238 x1375)) x287) (= x326 128)) (and (=> x251 x2678) (=> (not x251) x2138))) x43))
(assert (= 0 (x1252 x1897)))
(assert (= x3055 (=> (and (= (< 0 x261) x592) (= x261 (x2049 x1599)) (= x1599 (x41 x2150))) (and (=> (and (= x791 x1724) (not x592)) x769) (=> x592 x113)))))
(assert (x2452 x67))
(assert (= (x2238 (x2709 x2612)) x2612))
(assert (x2452 x2829))
(assert (= (and x343 x3028) x1498))
(assert (=> (> (+ 10000 1) x448) (= (x2238 x448) (x94 x448))))
(assert (x1824 x1270))
(assert (x2452 x1445))
(assert (x2452 x2637))
(assert (x2452 x2672))
(assert (= x1313 (and (not x2892) x1823)))
(assert (x2452 x2448))
(assert (= (and x2601 x1715) x295))
(assert (x1863 x1984))
(assert (x2452 x969))
(assert (= 0 (x1881 x1200)))
(assert (= x2271 (=> (= (or (> x582 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= true (<= x582 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (< x582 32))) x2469) (and (=> x2469 x2678) (=> (not x2469) x920)))))
(assert (x2452 x1829))
(assert (x1758 x1522 x2725))
(assert (x2452 x2689))
(assert (x1206 x1710 x225))
(assert (x2452 x1689))
(assert (x2452 x1953))
(assert (x2452 x2690))
(assert (x2452 x2045))
(assert (= (=> (= x2704 (= x2290 0)) (and (=> (not x2704) x2521) (=> (and (= 0 x1246) (= x2869 x121) (= x2790 x416) (= 0 x2299) (= x2101 x1795) (= x1212 x142) x2704 (= x2033 x2211)) x2752))) x1266))
(assert (= x141 (=> (and (= x776 (= 0 x2877)) (= (- (/ 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2877) (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2877)) x2924) (= x1031 (= x970 0)) (= x334 (ite (not x776) 1 0)) (= x970 (x11 x334 x337)) (= x337 (ite (< x2924 x1739) 1 0))) (and (=> (not x1031) x2678) (=> x1031 x1702)))))
(assert (= (and x2210 (not x2922)) x2536))
(assert (= x2048 x1754))
(assert (x2452 x3023))
(assert (= (and x2851 x223) x2370))
(assert (x2452 x795))
(assert (x2452 x1982))
(assert (x2452 x261))
(assert (x2452 x2001))
(assert (x2452 x960))
(assert (= (x2709 (x94 115792089237316195423570985008687907853269984665640564039457584007913129639935)) 115792089237316195423570985008687907853269984665640564039457584007913129639935))
(assert (x2452 x512))
(assert (= (ite (and x2360 x583 (not x2260)) (x3025 x1906) (ite (and (not x583) (not x309) (not x2260) x2360) (x483 x1906) (x2167 x1906))) (x1895 x1906)))
(assert (=> (> (+ 10000 1) x44) (= (x94 x44) (x2238 x44))))
(assert (x2452 x2355))
(assert (= (=> (and (= (or (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x597)) (> 32 x597)) (> x597 57896044618658097711785492504343953926634992332820282019728792003956564819967)) x1122) (= (x631 (+ 31 x597)) x2248) (= x632 (x631 (+ x1946 128))) (= x1946 (x11 115792089237316195423570985008687907853269984665640564039457584007913129639904 x2248))) (and (=> (not x1122) x2130) (=> x1122 x2678))) x2893))
(assert (x2452 x1082))
(assert (= (x2709 (x94 29667888499431518244405524310122331055235727797159756471206109933501488824320)) 29667888499431518244405524310122331055235727797159756471206109933501488824320))
(assert (= (=> (= x2405 (= x3141 0)) (and (=> (not x2405) x2857) (=> x2405 x2678))) x778))
(assert (x1863 x1867))
(assert (x1824 x1415))
(assert (= (x2977 x1811) (ite (= x1811 x1534) x48 (x2044 x1811))))
(assert (x2452 x414))
(assert (= (or (and x2529 (not x1831)) (and x1241 x2948)) x1737))
(assert (= x1794 (or (and x2751 x3017) (and x1973 x1032))))
(assert (= (x2709 (x2238 x883)) x883))
(assert (x2452 x1980))
(assert (x2452 x2376))
(assert (x2452 x965))
(assert (= (ite (and x2598 (not x584) x200) (x2885 x1811) (x2471 x1811)) (x2044 x1811)))
(assert (x2452 x341))
(assert (x2452 x1681))
(assert (= (=> (and (> x911 0) (= 1889567281 x1028) (not (> 826074471 x1028)) (= x1093 36) (= (x3021 (x2238 274184521717934524641157099916833587206)) x911) (= x2542 (or (> x88 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= (<= x88 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (> 32 x88)))) (= 50942633119752846454219349998365661925608737367104304655302372697894809501696 x1168) (not (= x1028 826074471)) (not (< x1093 4)) (= x1093 x3004) (= x88 (x2890 (- x1093 4))) (= x602 x2552)) (and (=> (not x2542) x1510) (=> x2542 x1069))) x727))
(assert (x1758 x502 x834))
(assert (x2452 x2182))
(assert (x1863 x1395))
(assert (= true x2915))
(assert (= (=> (and (= (< 0 x456) x1541) (= x456 (x3104 x2097))) (and (=> x1541 x1268) (=> (not x1541) x2678))) x3019))
(assert (= (or x1109 x2809) x2921))
(assert (= 274184521717934524641157099916833587206 (x2709 (x94 274184521717934524641157099916833587206))))
(assert (x1863 x914))
(assert (x2452 x1946))
(assert (x2452 x2236))
(assert (x2452 x2584))
(assert (= (x94 4168891048) (x2238 4168891048)))
(assert (= (x2709 (x2302 x1536 2)) (+ 2 (x2709 x1536))))
(assert (x2452 x1406))
(assert (x2452 x1884))
(assert (= (ite (= x2468 x1380) 0 (x822 x2468)) (x2404 x2468)))
(assert (= x1834 (and x2015 x99)))
(assert (= x2029 (=> (and (= (> x1918 0) x2604) (= (x2049 x2336) x1918)) (and (=> (not x2604) x2678) (=> x2604 x1154)))))
(assert (= x29 (=> (and (= x2231 (x631 (+ 64 x322))) (= x2297 (x3021 (x2238 x2874))) (= x931 (x11 1461501637330902918203684832716283019655932542975 x710)) (= x2493 (x631 (+ x2636 36))) (= x111 (= x2297 0)) (= x1010 (x11 1461501637330902918203684832716283019655932542975 x2458)) (= x322 (x631 (+ x2636 4)))) (and (=> x111 x2678) (=> (and (not x111) (or (and (not x368) (= x654 x1953)) (and (= 1 x654) x368 (< x1076 4294967296))) (= x368 (< 0 x1953))) x321)))))
(assert (x2452 x1178))
(assert (= x698 (and x2429 (not x3087))))
(assert (x2452 x3078))
(assert (= (=> (= x2320 (= 0 x1885)) (and (=> (not x2320) x139) (=> x2320 x2678))) x2624))
(assert (x1824 x1982))
(assert (= (=> (and (= x93 (x2362 x2667)) (= (< 0 x1880) x907) (= (x1114 x791) x2877) (= (x568 x93) x1880)) (and (=> x907 x981) (=> (not x907) x2678))) x2871))
(assert (x1863 x194))
(assert (= (and x895 x652) x2819))
(assert (= x699 (and x643 (not x2845))))
(assert (= (=> (and (= (x41 x2150) x151) (not x122) (= x122 (> x944 1)) (= x944 (x2049 x151)) (= x2378 x1724)) x769) x237))
(assert (x2452 x1526))
(assert (= x1108 (=> (and (= (x2890 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x942)) x473) (= x2592 (> x220 x473))) (and (=> x2592 x2678) (=> (not x2592) x1254)))))
(assert (x2452 x887))
(assert (x2452 x2841))
(assert (x1758 x1662 x1976))
(assert (= x3040 (=> (and (= (x11 1461501637330902918203684832716283019655932542975 x1359) x2898) (= (= x1359 x2898) x3117)) (and (=> x3117 x336) (=> (not x3117) x1552)))))
(assert (x2452 x61))
(assert (x2452 x2008))
(assert (x2452 x1941))
(assert (x2452 x508))
(assert (x2452 x2263))
(assert (= 274184521717934524641157099916833587231 (x2709 (x2238 274184521717934524641157099916833587231))))
(assert (x2452 x1682))
(assert (x2452 x2180))
(assert (x2452 x2874))
(assert (x2452 x2366))
(assert (= (and (not x2785) x2875) x2360))
(assert (= (and (not x488) x1262) x621))
(assert (= (+ 1 (x2709 x1536)) (x2709 (x2302 x1536 1))))
(assert (x2452 x3134))
(assert (x2452 x1531))
(assert (x2452 x1568))
(assert (x2452 x3080))
(assert (x2452 x2891))
(assert (x2452 x2859))
(assert (= (and x1582 (not x1398)) x552))
(assert (x2452 x1777))
(assert (=> (> (+ 10000 1) x2587) (= (x2238 x2587) (x94 x2587))))
(assert (= x2052 (or (and x1164 x3063) x2766)))
(check-sat)
