(set-option :print-success false)
(set-option :produce-models true)
(set-logic QF_UFDTNRA)
(declare-fun uninterp_frac (Real Real) Real)
(define-fun axiom_frac_bound ((d1 Real) (d2 Real)) Bool (and (=> (> d2 0) (and (<= 0.0 (uninterp_frac d1 d2)) (< (uninterp_frac d1 d2) 1.0))) (=> (< d2 0) (and (>= 0.0 (uninterp_frac d1 d2)) (> (uninterp_frac d1 d2) (- 1.0))))))
(define-fun axiom_frac_zero ((d1 Real) (d2 Real) (m1 Real) (m2 Real) (e Real)) Bool (=> (and (= d1 (* m1 m2)) (or (= d2 m1) (= d2 m2))) (= e 0)))
(define-fun uninterp_mod ((x Real) (m Real)) Real (ite (and (>= x 0) (< x m)) x (ite (and (>= x m) (< x (+ m m))) (- x m) (ite (and (>= x (- m)) (< x 0)) (+ x m) (* m (uninterp_frac x m))))))
(define-fun axiom_int_approximation ((x Real)) Bool (or (= x 0) (>= x 1) (<= x (- 1))))
(declare-datatypes ((x950 0)) (((x1128 (x1273 Real)) (x1052 (x353 x950) (x1000 x950) (x758 Real)) (x885 (x423 x950) (x87 Real)))))
(declare-fun x145 () Real)
(declare-fun x1066 () Real)
(declare-fun x158 () Bool)
(declare-fun x456 () Real)
(declare-fun x1310 (Real) Real)
(declare-fun x697 () Real)
(declare-fun x1566 () Real)
(declare-fun x437 () Bool)
(declare-fun x1571 () Real)
(declare-fun x890 () Bool)
(declare-fun x1076 () Bool)
(declare-fun x817 () Real)
(declare-fun x1036 () Real)
(declare-fun x1349 () Real)
(declare-fun x402 () Real)
(declare-fun x911 () Real)
(declare-fun x1411 () Bool)
(declare-fun x1081 () Bool)
(declare-fun x176 () Real)
(declare-fun x81 () Real)
(declare-fun x995 () Real)
(declare-fun x473 () Real)
(declare-fun x303 () Real)
(declare-fun x32 () Real)
(declare-fun x1175 () Real)
(declare-fun x745 () Real)
(declare-fun x1318 () Real)
(declare-fun x777 () Real)
(declare-fun x1421 () Real)
(declare-fun x695 () Bool)
(declare-fun x210 () Real)
(declare-fun x1407 () Real)
(declare-fun x213 () Real)
(declare-fun x1350 () Bool)
(declare-fun x1277 () Bool)
(declare-fun x280 () Real)
(declare-fun x766 () Bool)
(declare-fun x1475 () Real)
(declare-fun x203 () Real)
(declare-fun x1035 () Real)
(declare-fun x815 () Real)
(declare-fun x1038 () Real)
(declare-fun x1448 () Bool)
(declare-fun x1119 () Bool)
(declare-fun x743 () Real)
(declare-fun x279 () Bool)
(declare-fun x554 () x950)
(declare-fun x369 () Bool)
(declare-fun x1141 () Real)
(declare-fun x976 () Real)
(declare-fun x1155 () Real)
(declare-fun x256 () Real)
(declare-fun x450 () Real)
(declare-fun x1176 () Real)
(declare-fun x24 (Real) Real)
(declare-fun x977 () Real)
(declare-fun x719 () Real)
(declare-fun x1577 () Bool)
(declare-fun x902 () Bool)
(declare-fun x1297 () Real)
(declare-fun x78 (x950) Real)
(declare-fun x624 () Bool)
(declare-fun x1528 () Bool)
(declare-fun x1533 () Real)
(declare-fun x997 () Real)
(declare-fun x427 () Real)
(declare-fun x1070 () x950)
(declare-fun x122 () Bool)
(declare-fun x1457 (Real) Real)
(declare-fun x1243 () Real)
(declare-fun x64 () Real)
(declare-fun x104 () Real)
(declare-fun x740 () x950)
(declare-fun x8 () Real)
(declare-fun x268 () Real)
(declare-fun x551 () Real)
(declare-fun x377 () Bool)
(declare-fun x1414 () Real)
(declare-fun x497 () Bool)
(declare-fun x207 () Real)
(declare-fun x183 () Real)
(declare-fun x636 () Bool)
(declare-fun x532 () Bool)
(declare-fun x414 (Real) Real)
(declare-fun x536 () Bool)
(declare-fun x298 () Real)
(declare-fun x150 () Real)
(declare-fun x1132 () Bool)
(declare-fun x146 () Real)
(declare-fun x984 () Bool)
(declare-fun x400 () Real)
(declare-fun x1406 () Real)
(declare-fun x1029 () Real)
(declare-fun x1425 (x950) Real)
(declare-fun x23 () Bool)
(declare-fun x1163 () Real)
(declare-fun x1136 () Real)
(declare-fun x463 () Real)
(declare-fun x1517 () Real)
(declare-fun x1480 () Real)
(declare-fun x832 () Bool)
(declare-fun x1331 () Real)
(declare-fun x1389 () Real)
(declare-fun x403 () Real)
(declare-fun x1382 () Real)
(declare-fun x1445 () Real)
(declare-fun x987 () Real)
(declare-fun x638 () x950)
(declare-fun x43 () Real)
(declare-fun x1574 () Real)
(declare-fun x784 () Real)
(declare-fun x21 () Real)
(declare-fun x1100 () Real)
(declare-fun x1234 () Real)
(declare-fun x332 (Real) Real)
(declare-fun x510 () Bool)
(declare-fun x1005 () Real)
(declare-fun x469 () Real)
(declare-fun x999 () Bool)
(declare-fun x525 () Real)
(declare-fun x910 (Real) Real)
(declare-fun x242 () Real)
(declare-fun x1284 () Bool)
(declare-fun x1362 () Bool)
(declare-fun x252 () x950)
(declare-fun x838 () Bool)
(declare-fun x179 () Real)
(declare-fun x936 () Real)
(declare-fun x1120 () Real)
(declare-fun x447 () Real)
(declare-fun x594 () Real)
(declare-fun x741 () Real)
(declare-fun x737 () Bool)
(declare-fun x1270 () x950)
(declare-fun x875 () Real)
(declare-fun x409 () Real)
(declare-fun x343 () Real)
(declare-fun x757 () Real)
(declare-fun x1483 () Bool)
(declare-fun x521 () Real)
(declare-fun x700 () Real)
(declare-fun x541 () Real)
(declare-fun x657 () Real)
(declare-fun x4 () Real)
(declare-fun x850 () Real)
(declare-fun x134 () Real)
(declare-fun x1321 () Real)
(declare-fun x1299 () Bool)
(declare-fun x903 () Real)
(declare-fun x1065 () Real)
(declare-fun x1484 () Bool)
(declare-fun x1073 () Real)
(declare-fun x716 () Real)
(declare-fun x557 () Real)
(declare-fun x1367 () Real)
(declare-fun x972 (Real) Real)
(declare-fun x827 () Bool)
(declare-fun x1227 () Real)
(declare-fun x622 () Real)
(declare-fun x1102 () Real)
(declare-fun x656 () Bool)
(declare-fun x1169 () Real)
(declare-fun x124 () Real)
(declare-fun x895 () Real)
(declare-fun x375 () Bool)
(declare-fun x88 () Real)
(declare-fun x1049 (Real Real) Real)
(declare-fun x1193 () Real)
(declare-fun x1300 () Real)
(declare-fun x1168 () Real)
(declare-fun x1276 () x950)
(declare-fun x938 () Real)
(declare-fun x1274 () Real)
(declare-fun x1164 (Real) Real)
(declare-fun x582 () Bool)
(declare-fun x74 () Real)
(declare-fun x1241 (Real) Real)
(declare-fun x187 () Real)
(declare-fun x1099 () Real)
(declare-fun x219 () Real)
(declare-fun x253 () Real)
(declare-fun x1391 () Real)
(declare-fun x1209 () Real)
(declare-fun x736 (Real) Real)
(declare-fun x1215 () Bool)
(declare-fun x944 () Real)
(declare-fun x436 () Real)
(declare-fun x388 () Bool)
(declare-fun x1534 () Real)
(declare-fun x216 (Real) Real)
(declare-fun x796 () Real)
(declare-fun x284 (Real) Real)
(declare-fun x1148 () Real)
(declare-fun x1257 () Real)
(declare-fun x328 () Real)
(declare-fun x562 () Bool)
(declare-fun x804 () Real)
(declare-fun x305 () Bool)
(declare-fun x1359 () Real)
(declare-fun x590 () Real)
(declare-fun x1583 () Real)
(declare-fun x1069 () Real)
(declare-fun x586 () Real)
(declare-fun x1202 () Real)
(declare-fun x95 () Real)
(declare-fun x818 (Real Real) Real)
(declare-fun x208 () Real)
(declare-fun x488 () Real)
(declare-fun x560 () Real)
(declare-fun x1258 () Bool)
(declare-fun x136 () Real)
(declare-fun x165 () Real)
(declare-fun x330 () Real)
(declare-fun x1545 () Real)
(declare-fun x484 () Bool)
(declare-fun x709 () Bool)
(declare-fun x1381 () Real)
(declare-fun x72 () Real)
(declare-fun x135 () Real)
(declare-fun x690 () Real)
(declare-fun x1383 () Real)
(declare-fun x891 () Real)
(declare-fun x637 () Real)
(declare-fun x954 () Real)
(declare-fun x1453 () Real)
(declare-fun x606 () Real)
(declare-fun x959 () Real)
(declare-fun x1301 () Real)
(declare-fun x1271 () Real)
(declare-fun x516 () x950)
(declare-fun x556 () Real)
(declare-fun x429 () Real)
(declare-fun x863 () Real)
(declare-fun x425 () Real)
(declare-fun x1078 () Real)
(declare-fun x340 () Real)
(declare-fun x1212 () Real)
(declare-fun x626 () Bool)
(declare-fun x852 () x950)
(declare-fun x988 () Bool)
(declare-fun x761 () Bool)
(declare-fun x1061 () Real)
(declare-fun x1288 () Real)
(declare-fun x961 () Real)
(declare-fun x1283 () Real)
(declare-fun x126 () Real)
(declare-fun x22 () Real)
(declare-fun x482 () Real)
(declare-fun x853 () Real)
(declare-fun x922 () Real)
(declare-fun x566 () Real)
(declare-fun x366 () Real)
(declare-fun x830 () Real)
(declare-fun x865 () Real)
(declare-fun x583 () Real)
(declare-fun x157 () Real)
(declare-fun x937 () Real)
(declare-fun x893 () Real)
(declare-fun x1400 (x950) Real)
(declare-fun x350 () x950)
(declare-fun x503 () Bool)
(declare-fun x116 () Real)
(declare-fun x17 () Real)
(declare-fun x348 () Bool)
(declare-fun x162 () Bool)
(declare-fun x1259 () Real)
(declare-fun x722 () Real)
(declare-fun x948 () x950)
(declare-fun x144 () Real)
(declare-fun x131 () x950)
(declare-fun x1427 () Real)
(declare-fun x1230 () Real)
(declare-fun x281 () Real)
(declare-fun x1091 (Real) Real)
(declare-fun x442 () Bool)
(declare-fun x274 () Real)
(declare-fun x1210 () Real)
(declare-fun x567 () Real)
(declare-fun x732 () Real)
(declare-fun x654 () Real)
(declare-fun x1131 () Real)
(declare-fun x480 () Real)
(declare-fun x529 () Real)
(declare-fun x385 () Real)
(declare-fun x633 () Real)
(declare-fun x307 () Bool)
(declare-fun x161 () Real)
(declare-fun x759 () Bool)
(declare-fun x1398 () Real)
(declare-fun x1092 () Bool)
(declare-fun x225 () Real)
(declare-fun x1386 () Real)
(declare-fun x465 () Real)
(declare-fun x797 () Bool)
(declare-fun x373 () Bool)
(declare-fun x1443 () Real)
(declare-fun x918 () Bool)
(declare-fun x1127 () Real)
(declare-fun x1235 () Real)
(declare-fun x1438 () Bool)
(declare-fun x526 () Bool)
(declare-fun x258 () Real)
(declare-fun x964 () Real)
(declare-fun x1204 () Real)
(declare-fun x1393 () Real)
(declare-fun x681 (Real) Real)
(declare-fun x1548 () Bool)
(declare-fun x251 () Real)
(declare-fun x133 () Bool)
(declare-fun x1219 () Real)
(declare-fun x331 () Real)
(declare-fun x1544 (Real) Real)
(declare-fun x1575 () Real)
(declare-fun x821 () Real)
(declare-fun x899 () Real)
(declare-fun x286 () Real)
(declare-fun x1145 () Real)
(declare-fun x840 () x950)
(declare-fun x1397 () Real)
(declare-fun x1032 () Bool)
(declare-fun x120 () Real)
(declare-fun x1371 () Real)
(declare-fun x661 () Real)
(declare-fun x831 () Real)
(declare-fun x1403 () Real)
(declare-fun x38 () Real)
(declare-fun x115 () x950)
(declare-fun x1465 () Real)
(declare-fun x1408 () Real)
(declare-fun x604 () Real)
(declare-fun x960 () Bool)
(declare-fun x351 () x950)
(declare-fun x394 () Real)
(declare-fun x1368 () Real)
(declare-fun x1123 () Bool)
(declare-fun x916 (Real) Real)
(declare-fun x873 () Real)
(declare-fun x347 () x950)
(declare-fun x1303 () Real)
(declare-fun x1289 () Real)
(declare-fun x571 () Real)
(declare-fun x1026 () Real)
(declare-fun x1047 (Real) Real)
(declare-fun x220 () Real)
(declare-fun x1518 () Real)
(declare-fun x1117 () Real)
(declare-fun x440 () Real)
(declare-fun x1432 () Real)
(declare-fun x768 () Real)
(declare-fun x490 () Real)
(declare-fun x924 () Real)
(declare-fun x1044 () Real)
(declare-fun x148 () Real)
(declare-fun x762 () Real)
(declare-fun x1491 () Bool)
(declare-fun x1195 () Bool)
(declare-fun x1101 () Real)
(declare-fun x432 () Real)
(declare-fun x457 () Bool)
(declare-fun x1430 () Real)
(declare-fun x1295 () Bool)
(declare-fun x1109 () Real)
(declare-fun x1057 () Real)
(declare-fun x1296 (Real) Real)
(declare-fun x1139 () Real)
(declare-fun x178 () Real)
(declare-fun x1369 () Bool)
(declare-fun x785 () Real)
(declare-fun x257 () Real)
(declare-fun x1304 () Real)
(declare-fun x476 () Real)
(declare-fun x1030 () Real)
(declare-fun x9 () Real)
(declare-fun x1293 () Real)
(declare-fun x864 () Real)
(declare-fun x485 () Real)
(declare-fun x105 () Real)
(declare-fun x512 () Real)
(declare-fun x1015 () Bool)
(declare-fun x577 () Real)
(declare-fun x419 () Real)
(declare-fun x1067 () Real)
(declare-fun x1342 () Real)
(declare-fun x930 () Real)
(declare-fun x1095 () Real)
(declare-fun x523 () Real)
(declare-fun x610 () Bool)
(declare-fun x806 () Real)
(declare-fun x1033 () Real)
(declare-fun x1543 () Bool)
(declare-fun x118 () Real)
(declare-fun x1493 () x950)
(declare-fun x1196 () Real)
(declare-fun x1396 () Bool)
(declare-fun x926 () Real)
(declare-fun x561 () Real)
(declare-fun x1561 () Real)
(declare-fun x227 () Real)
(declare-fun x47 () Real)
(declare-fun x742 () x950)
(declare-fun x132 (Real) Real)
(declare-fun x1460 () Real)
(declare-fun x704 () Real)
(declare-fun x664 () Real)
(declare-fun x1514 () Real)
(declare-fun x197 () Bool)
(declare-fun x805 () Real)
(declare-fun x600 () Real)
(declare-fun x270 () Real)
(declare-fun x795 () Real)
(declare-fun x304 () Real)
(declare-fun x496 () Real)
(declare-fun x956 () Bool)
(declare-fun x180 () Real)
(declare-fun x1494 (x950) Real)
(declare-fun x1225 () Real)
(declare-fun x894 () Real)
(declare-fun x585 () Real)
(declare-fun x185 (Real) Real)
(declare-fun x1105 () Real)
(declare-fun x344 () Real)
(declare-fun x500 () Real)
(declare-fun x1197 () Bool)
(declare-fun x255 () Bool)
(declare-fun x605 () Bool)
(declare-fun x744 (Real) Real)
(declare-fun x1581 () Real)
(declare-fun x316 () x950)
(declare-fun x1489 () Bool)
(declare-fun x971 () Real)
(declare-fun x619 () Real)
(declare-fun x459 () Real)
(declare-fun x854 () Real)
(declare-fun x341 () Real)
(declare-fun x201 () Real)
(declare-fun x618 () Bool)
(declare-fun x882 () Real)
(declare-fun x293 () Bool)
(declare-fun x175 () Real)
(declare-fun x142 () Real)
(declare-fun x601 () Real)
(declare-fun x1042 () Real)
(declare-fun x1298 () Real)
(declare-fun x548 () Real)
(declare-fun x1247 () Bool)
(declare-fun x613 () Real)
(declare-fun x621 () Real)
(declare-fun x182 () Bool)
(declare-fun x905 () Real)
(declare-fun x1133 () Real)
(declare-fun x844 () Real)
(declare-fun x901 () Real)
(declare-fun x190 () Real)
(declare-fun x1142 () Real)
(declare-fun x7 () x950)
(declare-fun x569 () Bool)
(declare-fun x443 () Real)
(declare-fun x1522 () Real)
(declare-fun x247 () Bool)
(declare-fun x855 () Real)
(declare-fun x1520 () Bool)
(declare-fun x1021 () Real)
(declare-fun x221 () Real)
(declare-fun x760 () Real)
(declare-fun x444 () Real)
(declare-fun x513 (Real) Real)
(declare-fun x86 () Real)
(declare-fun x1390 () Real)
(declare-fun x1291 () Bool)
(declare-fun x909 () Real)
(declare-fun x125 () Bool)
(declare-fun x687 () Bool)
(declare-fun x876 () Bool)
(declare-fun x802 () Real)
(declare-fun x2 () Bool)
(declare-fun x828 () Real)
(declare-fun x1447 () Real)
(declare-fun x731 () Bool)
(declare-fun x720 () Bool)
(declare-fun x90 () Real)
(declare-fun x900 () Real)
(declare-fun x76 () Real)
(declare-fun x1353 () Bool)
(declare-fun x1402 () Real)
(declare-fun x1150 () Real)
(declare-fun x568 () Real)
(declare-fun x1547 () Real)
(declare-fun x266 () Real)
(declare-fun x609 () Bool)
(declare-fun x1530 () Real)
(declare-fun x289 () Real)
(declare-fun x315 () Bool)
(declare-fun x883 () x950)
(declare-fun x578 () Real)
(declare-fun x209 () Real)
(declare-fun x27 () Real)
(declare-fun x1110 () Real)
(declare-fun x781 () Real)
(declare-fun x1361 () Real)
(declare-fun x1357 () Real)
(declare-fun x866 () Real)
(declare-fun x534 () Real)
(declare-fun x51 () Real)
(declare-fun x110 () Real)
(declare-fun x297 () Bool)
(declare-fun x647 () Real)
(declare-fun x929 () Real)
(declare-fun x725 () Bool)
(declare-fun x963 () Real)
(declare-fun x1323 () Real)
(declare-fun x412 () Real)
(declare-fun x671 () Real)
(declare-fun x635 () Real)
(declare-fun x464 () Real)
(declare-fun x1262 () Real)
(declare-fun x1590 () Real)
(declare-fun x986 () Real)
(declare-fun x421 (Real) Real)
(declare-fun x1244 () Bool)
(declare-fun x1223 () Real)
(declare-fun x1559 () Real)
(declare-fun x405 () Bool)
(declare-fun x826 () Real)
(declare-fun x58 () Real)
(declare-fun x1444 () Real)
(declare-fun x1462 () Real)
(declare-fun x563 () Real)
(declare-fun x1490 () Real)
(declare-fun x171 () Bool)
(declare-fun x579 (Real) Real)
(declare-fun x1221 () Real)
(declare-fun x1159 () Real)
(declare-fun x1316 (x950) Real)
(declare-fun x1062 () Real)
(declare-fun x11 () Bool)
(declare-fun x542 () Bool)
(declare-fun x152 () Real)
(declare-fun x188 () Bool)
(declare-fun x867 () Real)
(declare-fun x1440 () Real)
(declare-fun x1360 () Real)
(declare-fun x683 () Bool)
(declare-fun x204 () Real)
(declare-fun x392 () Real)
(declare-fun x588 () Real)
(declare-fun x1003 () Real)
(declare-fun x639 () Real)
(declare-fun x70 () Real)
(declare-fun x244 () Real)
(declare-fun x614 () Real)
(declare-fun x271 () Bool)
(declare-fun x1328 () Real)
(declare-fun x397 () Real)
(declare-fun x1135 () Bool)
(declare-fun x345 () Real)
(declare-fun x650 () Real)
(declare-fun x1339 () Real)
(declare-fun x721 () Bool)
(declare-fun x1422 () Bool)
(declare-fun x996 () Real)
(declare-fun x113 () Real)
(declare-fun x1513 () Bool)
(declare-fun x692 () Real)
(declare-fun x625 () Real)
(declare-fun x468 () Real)
(declare-fun x1089 () Real)
(declare-fun x34 () Real)
(declare-fun x1087 () Real)
(declare-fun x318 () Bool)
(declare-fun x1292 () Real)
(declare-fun x1546 () Real)
(declare-fun x754 () x950)
(declare-fun x1218 () Bool)
(declare-fun x1059 () Real)
(declare-fun x335 (x950) Real)
(declare-fun x693 () Real)
(declare-fun x748 () Real)
(declare-fun x333 () Real)
(declare-fun x102 () Real)
(declare-fun x1255 () Real)
(declare-fun x1146 () Real)
(declare-fun x1477 () Real)
(declare-fun x684 () Bool)
(declare-fun x886 () Bool)
(declare-fun x155 () Real)
(declare-fun x668 () Real)
(declare-fun x352 () Bool)
(declare-fun x1374 () Real)
(declare-fun x314 () Real)
(declare-fun x123 () Bool)
(declare-fun x631 () Real)
(declare-fun x1311 () Real)
(declare-fun x1124 () Real)
(declare-fun x467 () Bool)
(declare-fun x1192 () Real)
(declare-fun x1208 () Real)
(declare-fun x1512 () Bool)
(declare-fun x475 () Bool)
(declare-fun x184 () Real)
(declare-fun x69 () Real)
(declare-fun x1237 () Real)
(declare-fun x283 () Real)
(declare-fun x147 () Bool)
(declare-fun x1495 () Real)
(declare-fun x581 () Bool)
(declare-fun x939 (x950) Real)
(declare-fun x1129 () Bool)
(declare-fun x1250 () Real)
(declare-fun x1248 () Bool)
(declare-fun x834 () Real)
(declare-fun x519 () Real)
(declare-fun x111 () Real)
(declare-fun x851 (Real) Real)
(declare-fun x1201 () Real)
(declare-fun x42 () Bool)
(declare-fun x1446 (Real) Real)
(declare-fun x669 () Real)
(declare-fun x1582 () Real)
(declare-fun x1126 () Real)
(declare-fun x701 () Real)
(declare-fun x1463 () Real)
(declare-fun x849 () Bool)
(declare-fun x1060 () Bool)
(declare-fun x1366 () Real)
(declare-fun x1508 (Real Real) Real)
(declare-fun x272 () Real)
(declare-fun x824 () Real)
(declare-fun x1348 () Real)
(declare-fun x367 () Real)
(declare-fun x481 () Real)
(declare-fun x232 () Bool)
(declare-fun x169 () Real)
(declare-fun x1584 () Real)
(declare-fun x1050 () Real)
(declare-fun x1340 () Real)
(declare-fun x387 () Real)
(declare-fun x1072 () Real)
(declare-fun x1337 () Real)
(declare-fun x787 () x950)
(declare-fun x381 () Real)
(declare-fun x98 () Real)
(declare-fun x223 () Real)
(declare-fun x983 () Real)
(declare-fun x487 () Real)
(declare-fun x793 () Real)
(declare-fun x1314 () Real)
(declare-fun x322 () Real)
(declare-fun x1 () Bool)
(declare-fun x1147 () Real)
(declare-fun x77 () Real)
(declare-fun x1285 () Real)
(declare-fun x1496 () Real)
(declare-fun x19 () Real)
(declare-fun x659 (Real) Real)
(declare-fun x1509 () Real)
(declare-fun x755 () Real)
(declare-fun x820 () Real)
(declare-fun x306 () Real)
(declare-fun x470 () Real)
(declare-fun x843 (x950) Real)
(declare-fun x1263 () Real)
(declare-fun x1395 () Real)
(declare-fun x822 () Bool)
(declare-fun x229 (Real) Real)
(declare-fun x461 (Real) Real)
(declare-fun x1415 () Real)
(declare-fun x1264 () Bool)
(declare-fun x691 () Real)
(declare-fun x919 () Real)
(declare-fun x1010 () Real)
(declare-fun x1476 () x950)
(declare-fun x1555 (Real) Real)
(declare-fun x1592 () Real)
(declare-fun x640 () Real)
(declare-fun x1121 () Real)
(declare-fun x990 () Real)
(declare-fun x816 () Bool)
(declare-fun x685 () Bool)
(declare-fun x215 () Real)
(declare-fun x439 () Bool)
(declare-fun x1376 () Bool)
(declare-fun x1053 () Real)
(declare-fun x129 () Real)
(declare-fun x1252 () Real)
(declare-fun x1265 () Real)
(declare-fun x454 () Real)
(declare-fun x1553 () Bool)
(declare-fun x1182 () Real)
(declare-fun x128 () Real)
(declare-fun x166 () Real)
(declare-fun x1570 () Real)
(declare-fun x1423 () Real)
(declare-fun x448 () Real)
(declare-fun x646 () Real)
(declare-fun x1347 () Real)
(declare-fun x1556 () Bool)
(declare-fun x398 () Real)
(declare-fun x642 () Real)
(declare-fun x1521 () Real)
(declare-fun x553 () Bool)
(declare-fun x1178 () Real)
(declare-fun x1090 () Real)
(declare-fun x1012 () Real)
(declare-fun x543 () Bool)
(declare-fun x326 () Real)
(declare-fun x238 () Real)
(declare-fun x1441 () Real)
(declare-fun x383 () Real)
(declare-fun x390 () Real)
(declare-fun x368 () Real)
(declare-fun x1418 (Real) x950)
(declare-fun x763 (Real) Real)
(declare-fun x527 () Bool)
(declare-fun x1079 () Real)
(declare-fun x965 () Real)
(declare-fun x15 () Real)
(declare-fun x329 () Bool)
(declare-fun x713 () Real)
(declare-fun x471 () Real)
(declare-fun x200 () Real)
(declare-fun x746 (Real Real) Real)
(declare-fun x957 () Real)
(declare-fun x602 () Real)
(declare-fun x1313 () Real)
(declare-fun x149 () Real)
(declare-fun x1113 () Real)
(declare-fun x1552 () Real)
(declare-fun x1334 () Real)
(declare-fun x841 () Real)
(declare-fun x491 () Bool)
(declare-fun x608 () Real)
(declare-fun x1587 () Real)
(declare-fun x1329 () Real)
(declare-fun x970 () Real)
(declare-fun x1080 () Bool)
(declare-fun x138 () x950)
(declare-fun x528 () Real)
(declare-fun x1254 (x950) Real)
(declare-fun x30 () Real)
(declare-fun x598 () Real)
(declare-fun x645 () Real)
(declare-fun x629 () Real)
(declare-fun x1370 () Bool)
(declare-fun x517 () Real)
(declare-fun x371 () Bool)
(declare-fun x979 () Real)
(declare-fun x1560 () Real)
(declare-fun x386 () Real)
(declare-fun x275 () Bool)
(declare-fun x308 () Real)
(declare-fun x276 () Real)
(declare-fun x25 () Real)
(declare-fun x896 () Real)
(declare-fun x196 (Real) Real)
(declare-fun x49 () Bool)
(declare-fun x14 () Real)
(declare-fun x811 () Real)
(declare-fun x466 () Bool)
(declare-fun x945 () Bool)
(declare-fun x320 (Real) Real)
(declare-fun x810 () Real)
(declare-fun x376 () Bool)
(declare-fun x550 () Real)
(declare-fun x1019 () Real)
(declare-fun x1449 () Real)
(declare-fun x714 () Real)
(declare-fun x1232 () Real)
(declare-fun x29 () Real)
(declare-fun x1161 () Real)
(declare-fun x546 () Real)
(declare-fun x18 () Real)
(declare-fun x334 () Real)
(declare-fun x1320 () Bool)
(declare-fun x346 (Real) Real)
(declare-fun x814 () Real)
(declare-fun x767 () Bool)
(declare-fun x1302 () Real)
(declare-fun x617 () Bool)
(declare-fun x1011 () Real)
(declare-fun x951 () Real)
(declare-fun x294 () Real)
(declare-fun x1405 () Real)
(declare-fun x206 () Real)
(declare-fun x698 () Bool)
(declare-fun x717 () Bool)
(declare-fun x231 () Real)
(declare-fun x191 () x950)
(declare-fun x653 () Real)
(declare-fun x66 () Real)
(declare-fun x458 () Real)
(declare-fun x1290 () Real)
(declare-fun x1083 () Real)
(declare-fun x1482 () Real)
(declare-fun x739 () Real)
(declare-fun x241 () Real)
(declare-fun x108 () Real)
(declare-fun x915 () Real)
(declare-fun x462 () Real)
(declare-fun x1179 () Bool)
(declare-fun x1338 () Real)
(declare-fun x6 () Real)
(declare-fun x172 () Real)
(declare-fun x538 () Real)
(declare-fun x401 () x950)
(declare-fun x738 () Bool)
(declare-fun x56 () Real)
(declare-fun x498 () Bool)
(declare-fun x870 () Real)
(declare-fun x1181 () Bool)
(declare-fun x518 () Real)
(declare-fun x727 () Real)
(declare-fun x989 () x950)
(declare-fun x153 () Real)
(declare-fun x933 () Real)
(declare-fun x477 () Bool)
(declare-fun x735 (x950) Real)
(declare-fun x1098 () Real)
(declare-fun x1189 () Bool)
(declare-fun x1506 () Real)
(declare-fun x495 () Real)
(declare-fun x898 () Real)
(declare-fun x991 () Real)
(declare-fun x887 () Real)
(declare-fun x1488 () x950)
(declare-fun x243 () Real)
(declare-fun x663 () Real)
(declare-fun x509 () Bool)
(declare-fun x1040 () Real)
(declare-fun x679 () Bool)
(declare-fun x982 () Real)
(declare-fun x212 () Bool)
(declare-fun x1183 () Real)
(declare-fun x1167 () Real)
(declare-fun x868 () Real)
(declare-fun x193 (Real) Real)
(declare-fun x54 () Real)
(declare-fun x1341 () Bool)
(declare-fun x393 () Real)
(declare-fun x1420 () Bool)
(declare-fun x1363 () Real)
(declare-fun x632 () Real)
(declare-fun x259 () Real)
(declare-fun x1404 () Real)
(declare-fun x942 () Real)
(declare-fun x501 () Real)
(declare-fun x349 () Bool)
(declare-fun x1473 () Real)
(declare-fun x1378 () Real)
(declare-fun x1579 () Bool)
(declare-fun x1013 () Real)
(declare-fun x773 () Real)
(declare-fun x1185 () Real)
(declare-fun x1046 () Real)
(declare-fun x555 () Real)
(declare-fun x1190 () Real)
(declare-fun x728 () x950)
(declare-fun x1529 () Real)
(declare-fun x374 () x950)
(declare-fun x1312 () Real)
(declare-fun x649 () Real)
(declare-fun x226 () Bool)
(declare-fun x1467 () Bool)
(declare-fun x418 () Real)
(declare-fun x688 () Bool)
(declare-fun x1064 () Real)
(declare-fun x540 (x950) Real)
(declare-fun x807 () Real)
(declare-fun x764 () Real)
(declare-fun x559 () Real)
(declare-fun x1027 () Bool)
(declare-fun x1325 () Bool)
(declare-fun x1481 () Real)
(declare-fun x677 () Real)
(declare-fun x776 () Real)
(declare-fun x1591 () Real)
(declare-fun x522 () Real)
(declare-fun x479 () Bool)
(declare-fun x311 () Real)
(declare-fun x1568 () Bool)
(declare-fun x889 () Real)
(declare-fun x1177 () Bool)
(declare-fun x1332 () Real)
(declare-fun x26 () Real)
(declare-fun x262 () Real)
(declare-fun x505 () Real)
(declare-fun x1008 (Real Real) Real)
(declare-fun x1118 () Real)
(declare-fun x707 () Real)
(declare-fun x1211 () Bool)
(declare-fun x502 () Real)
(declare-fun x301 () Real)
(declare-fun x611 () Bool)
(declare-fun x1172 () Bool)
(declare-fun x1373 () Bool)
(declare-fun x156 (Real) Real)
(declare-fun x520 () Real)
(declare-fun x1343 () Bool)
(declare-fun x644 () Real)
(declare-fun x535 () Bool)
(declare-fun x1459 () Real)
(declare-fun x1572 () Real)
(declare-fun x356 (Real) Real)
(declare-fun x1526 () Real)
(declare-fun x1236 () Bool)
(declare-fun x751 () Real)
(declare-fun x73 () Bool)
(declare-fun x248 () Bool)
(declare-fun x1504 () Real)
(declare-fun x877 () Real)
(declare-fun x791 () Real)
(declare-fun x173 (x950) Real)
(declare-fun x1540 () x950)
(declare-fun x61 () x950)
(declare-fun x1173 () x950)
(declare-fun x1429 () Real)
(declare-fun x71 () Real)
(declare-fun x881 () Real)
(declare-fun x1137 () Real)
(declare-fun x1461 (Real) Real)
(declare-fun x362 () Bool)
(declare-fun x1380 () Real)
(declare-fun x1138 () Real)
(declare-fun x291 () Real)
(declare-fun x847 () Real)
(declare-fun x130 () Real)
(declare-fun x1245 () Real)
(declare-fun x154 () Bool)
(declare-fun x1308 () Real)
(declare-fun x507 () x950)
(declare-fun x1229 () Bool)
(declare-fun x998 () Real)
(declare-fun x263 () Real)
(declare-fun x941 () Real)
(declare-fun x1122 () Real)
(declare-fun x549 () Real)
(declare-fun x993 () Real)
(declare-fun x1330 () Real)
(declare-fun x277 () Real)
(declare-fun x678 () Real)
(declare-fun x186 () Real)
(declare-fun x1093 () Bool)
(declare-fun x1585 () Bool)
(declare-fun x1275 () Real)
(declare-fun x1392 () Bool)
(declare-fun x1503 () Real)
(declare-fun x1539 () Real)
(declare-fun x809 () Real)
(declare-fun x932 () Real)
(declare-fun x91 () Real)
(declare-fun x823 () Bool)
(declare-fun x1365 (Real) Real)
(declare-fun x60 (Real) Real)
(declare-fun x980 () Real)
(declare-fun x360 () Real)
(declare-fun x1198 () Bool)
(declare-fun x1557 () Real)
(declare-fun x107 () Real)
(declare-fun x1336 () Real)
(declare-fun x1158 () Real)
(declare-fun x819 () Real)
(declare-fun x1345 () Real)
(declare-fun x1039 () Real)
(declare-fun x28 () Real)
(declare-fun x1401 (x950) Real)
(declare-fun x504 () Real)
(declare-fun x573 () Real)
(declare-fun x1589 () Real)
(declare-fun x336 () Real)
(declare-fun x842 () Real)
(declare-fun x1114 () Real)
(declare-fun x1333 () Real)
(declare-fun x1525 () Real)
(declare-fun x1419 () Bool)
(declare-fun x36 () Bool)
(declare-fun x1074 () Bool)
(declare-fun x1387 () Real)
(declare-fun x379 () Real)
(declare-fun x775 () Real)
(declare-fun x1246 (x950) Real)
(declare-fun x584 () Real)
(declare-fun x292 () Real)
(declare-fun x771 () Real)
(declare-fun x327 () Real)
(declare-fun x1588 (Real) Real)
(declare-fun x696 () Real)
(declare-fun x1450 () Real)
(declare-fun x1499 () Bool)
(declare-fun x515 () Real)
(declare-fun x1439 () Real)
(declare-fun x539 () Real)
(declare-fun x576 () Bool)
(declare-fun x493 () Real)
(declare-fun x907 () Real)
(declare-fun x801 () Bool)
(declare-fun x416 () Real)
(declare-fun x836 () Real)
(declare-fun x680 () Real)
(declare-fun x363 () Real)
(declare-fun x544 () Bool)
(declare-fun x1239 () Real)
(declare-fun x1538 () Real)
(declare-fun x323 () Real)
(declare-fun x1322 () Real)
(declare-fun x1143 () Real)
(declare-fun x441 () Real)
(declare-fun x1207 () x950)
(declare-fun x1433 () Real)
(declare-fun x1364 () Real)
(declare-fun x888 () Real)
(declare-fun x1156 () Real)
(declare-fun x79 () Real)
(declare-fun x1541 () Real)
(declare-fun x1153 () Bool)
(declare-fun x1249 () Real)
(declare-fun x1054 () Real)
(declare-fun x662 () Real)
(declare-fun x829 () Bool)
(declare-fun x324 () Real)
(declare-fun x417 () Real)
(declare-fun x1216 () Bool)
(declare-fun x1213 () Bool)
(declare-fun x365 () Bool)
(declare-fun x1018 () Real)
(declare-fun x1492 () Real)
(declare-fun x198 () Real)
(declare-fun x962 () Real)
(declare-fun x44 () Real)
(declare-fun x1077 () Real)
(declare-fun x794 () Bool)
(declare-fun x658 () Real)
(declare-fun x1220 () Real)
(declare-fun x514 () Real)
(declare-fun x474 () Bool)
(declare-fun x1455 () Real)
(declare-fun x1104 () Real)
(declare-fun x1356 () Real)
(declare-fun x45 () Real)
(declare-fun x230 () Real)
(declare-fun x591 () Real)
(declare-fun x310 () Real)
(declare-fun x985 (x950) Real)
(declare-fun x264 () Real)
(declare-fun x1399 () Real)
(declare-fun x254 () Real)
(declare-fun x702 () Real)
(declare-fun x80 () Real)
(declare-fun x260 () Real)
(declare-fun x749 () Real)
(declare-fun x189 () Real)
(declare-fun x1326 () Real)
(declare-fun x395 () Real)
(declare-fun x1256 () Real)
(declare-fun x359 () Real)
(declare-fun x1267 (Real) Real)
(declare-fun x1154 () Real)
(declare-fun x16 () Real)
(declare-fun x1106 () Bool)
(declare-fun x1203 () Real)
(declare-fun x234 (Real) Real)
(declare-fun x1111 () Real)
(declare-fun x747 () Bool)
(declare-fun x1028 () Real)
(declare-fun x1251 () Real)
(declare-fun x1384 () Real)
(declare-fun x1187 () Real)
(declare-fun x339 () Bool)
(declare-fun x780 () Real)
(declare-fun x63 () Real)
(declare-fun x99 () Real)
(declare-fun x835 () Real)
(declare-fun x798 () Real)
(declare-fun x1200 () Real)
(declare-fun x361 () Bool)
(declare-fun x1224 () Real)
(declare-fun x492 () Real)
(declare-fun x1199 () Real)
(declare-fun x1075 () Real)
(declare-fun x1487 () Bool)
(declare-fun x660 () Real)
(declare-fun x1034 () Real)
(declare-fun x426 () Real)
(declare-fun x1009 () Real)
(declare-fun x1309 () Real)
(declare-fun x857 () Real)
(declare-fun x245 () Real)
(declare-fun x869 () Real)
(declare-fun x897 () Real)
(declare-fun x765 () Real)
(declare-fun x85 () Real)
(declare-fun x774 () Bool)
(declare-fun x1324 () Real)
(declare-fun x779 () Real)
(declare-fun x1174 () Bool)
(declare-fun x449 () Real)
(declare-fun x1006 () Real)
(declare-fun x589 () Real)
(declare-fun x195 () Real)
(declare-fun x354 () Real)
(declare-fun x533 () Real)
(declare-fun x616 () Real)
(declare-fun x643 () Real)
(declare-fun x40 () Real)
(declare-fun x530 (Real) Real)
(declare-fun x839 () Real)
(declare-fun x800 () Bool)
(declare-fun x1024 () Bool)
(declare-fun x460 () x950)
(declare-fun x1238 () Bool)
(declare-fun x1086 () Real)
(declare-fun x302 () Real)
(declare-fun x1294 () Real)
(declare-fun x921 () Real)
(declare-fun x1157 () Real)
(declare-fun x101 () Real)
(declare-fun x65 () Bool)
(declare-fun x285 () Real)
(declare-fun x424 () Real)
(declare-fun x753 () Real)
(declare-fun x342 () Bool)
(declare-fun x1466 () Real)
(declare-fun x1281 () Real)
(declare-fun x278 () Bool)
(declare-fun x59 () x950)
(declare-fun x1151 () Bool)
(declare-fun x769 () Real)
(declare-fun x31 (x950) Real)
(declare-fun x452 () Real)
(declare-fun x537 () Real)
(declare-fun x1470 () Bool)
(declare-fun x94 () Real)
(declare-fun x545 () Real)
(declare-fun x1130 () Real)
(declare-fun x1497 (Real) Real)
(declare-fun x106 () Real)
(declare-fun x139 () Real)
(declare-fun x782 () Real)
(declare-fun x1524 () Real)
(declare-fun x422 () Real)
(declare-fun x1085 () x950)
(declare-fun x703 () Real)
(declare-fun x218 () Real)
(declare-fun x1214 () Real)
(declare-fun x1084 () Real)
(declare-fun x177 () Real)
(declare-fun x1578 () Real)
(declare-fun x1004 () Real)
(declare-fun x1536 () Real)
(declare-fun x892 () Real)
(declare-fun x1022 () Real)
(declare-fun x729 (Real) Real)
(declare-fun x1184 () Real)
(declare-fun x1501 () Bool)
(declare-fun x382 () Real)
(declare-fun x734 () Real)
(declare-fun x1507 () Bool)
(declare-fun x355 () Real)
(declare-fun x1554 () Bool)
(declare-fun x1532 () Real)
(declare-fun x1551 () x950)
(declare-fun x1162 () Real)
(declare-fun x1231 () Real)
(declare-fun x1222 () Bool)
(declare-fun x558 () Real)
(declare-fun x1043 () Bool)
(declare-fun x97 () Real)
(declare-fun x1268 () Real)
(declare-fun x1354 () Real)
(declare-fun x1537 () Real)
(declare-fun x1452 () Real)
(declare-fun x434 () Bool)
(declare-fun x119 () Real)
(declare-fun x912 () Real)
(declare-fun x1108 () Real)
(declare-fun x1037 () Real)
(declare-fun x705 () Bool)
(declare-fun x10 () Real)
(declare-fun x931 () Real)
(declare-fun x415 () Real)
(declare-fun x137 () x950)
(declare-fun x724 () Real)
(declare-fun x1031 () Real)
(declare-fun x674 () Real)
(declare-fun x62 () Bool)
(declare-fun x1001 () Real)
(declare-fun x1372 () Bool)
(declare-fun x947 () Real)
(declare-fun x871 () Real)
(declare-fun x1327 () x950)
(declare-fun x1344 () Real)
(declare-fun x1424 () Bool)
(declare-fun x93 () Real)
(declare-fun x955 () Bool)
(declare-fun x772 (Real) Real)
(declare-fun x13 () Real)
(declare-fun x708 () Bool)
(declare-fun x623 () Bool)
(declare-fun x615 () Bool)
(declare-fun x430 () x950)
(declare-fun x1458 () Bool)
(declare-fun x1355 () Real)
(declare-fun x565 () Real)
(declare-fun x906 () Real)
(declare-fun x1417 () Real)
(declare-fun x1565 () Bool)
(declare-fun x83 () Real)
(declare-fun x953 () Real)
(declare-fun x940 () Real)
(declare-fun x603 () Real)
(declare-fun x53 () x950)
(declare-fun x1240 () x950)
(declare-fun x1474 () Bool)
(declare-fun x265 () Real)
(declare-fun x1180 () Real)
(declare-fun x309 () Real)
(declare-fun x620 () Real)
(declare-fun x946 () Real)
(declare-fun x670 () Bool)
(declare-fun x37 () Real)
(declare-fun x1413 () Bool)
(declare-fun x1580 () Real)
(declare-fun x1335 () Bool)
(declare-fun x879 () Real)
(declare-fun x1346 () Real)
(declare-fun x483 () Real)
(declare-fun x723 () Bool)
(declare-fun x1511 () Real)
(declare-fun x250 () Bool)
(declare-fun x531 () Bool)
(declare-fun x872 () Real)
(declare-fun x1563 () Real)
(declare-fun x712 () Real)
(declare-fun x628 () x950)
(declare-fun x575 () Real)
(declare-fun x799 () Real)
(declare-fun x33 () Real)
(declare-fun x682 (Real Real) Real)
(declare-fun x837 () Bool)
(declare-fun x236 () Bool)
(declare-fun x357 () Real)
(declare-fun x1515 () Real)
(declare-fun x1498 () Real)
(declare-fun x121 () Real)
(declare-fun x1523 (Real) Real)
(declare-fun x655 () Real)
(declare-fun x384 () Real)
(declare-fun x217 () Real)
(declare-fun x48 () Real)
(declare-fun x282 () Real)
(declare-fun x923 () Real)
(declare-fun x237 () Real)
(declare-fun x168 () Real)
(declare-fun x235 () Real)
(declare-fun x143 () Real)
(declare-fun x160 () Bool)
(declare-fun x935 () Bool)
(declare-fun x499 () Real)
(declare-fun x599 () Real)
(declare-fun x451 () Real)
(declare-fun x634 () Real)
(declare-fun x1510 () Real)
(declare-fun x1242 () Real)
(declare-fun x82 () Real)
(declare-fun x1116 () Real)
(declare-fun x1500 () Bool)
(declare-fun x438 () Real)
(declare-fun x246 () Real)
(declare-fun x1472 () Bool)
(declare-fun x846 () Real)
(declare-fun x224 () Real)
(declare-fun x12 () Real)
(declare-fun x288 () Real)
(declare-fun x1045 () Real)
(declare-fun x1107 () Real)
(declare-fun x1456 () Real)
(declare-fun x358 () Real)
(declare-fun x715 () Real)
(declare-fun x494 () x950)
(declare-fun x396 () Real)
(declare-fun x1564 () Real)
(declare-fun x967 () Real)
(declare-fun x67 () Real)
(declare-fun x1454 () Real)
(declare-fun x1558 () Real)
(declare-fun x478 () Real)
(declare-fun x267 () Bool)
(declare-fun x675 () Real)
(declare-fun x1502 () Real)
(declare-fun x1394 () Real)
(declare-fun x319 () Real)
(declare-fun x973 () Real)
(declare-fun x1194 () Bool)
(declare-fun x934 () Real)
(declare-fun x978 () Bool)
(declare-fun x228 () Real)
(declare-fun x68 () Real)
(declare-fun x174 () Bool)
(declare-fun x364 () x950)
(declare-fun x372 () Real)
(declare-fun x884 () Real)
(declare-fun x574 () Real)
(declare-fun x1041 () Bool)
(declare-fun x547 () Real)
(declare-fun x1112 () Real)
(declare-fun x733 () Real)
(declare-fun x1226 () Real)
(declare-fun x858 () Real)
(declare-fun x597 () Real)
(declare-fun x20 () Bool)
(declare-fun x1233 () Real)
(declare-fun x927 () Real)
(declare-fun x1351 () Real)
(declare-fun x1567 () Real)
(declare-fun x612 () Real)
(declare-fun x1186 () Real)
(declare-fun x317 () Real)
(declare-fun x506 () Real)
(declare-fun x1020 () Real)
(declare-fun x428 () Bool)
(declare-fun x1471 () Bool)
(declare-fun x673 () Real)
(declare-fun x726 () Real)
(declare-fun x141 () Bool)
(define-fun x1170 ((x950 x950) (x1228 Real)) x950 (ite ((_ is x885) x950) (x885 (x423 x950) (+ (x87 x950) x1228)) (ite ((_ is x1052) x950) (x1052 (x353 x950) (x1000 x950) (+ x1228 (x758 x950))) (x1128 (+ (x1273 x950) x1228)))))
(define-fun x1436 ((x952 Real)) Real (ite (and (< x952 115792089237316195423570985008687907853269984665640564039457584007913129639936) (<= 0 x952)) x952 (- x952 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(define-fun x949 ((x952 Real)) Real (ite (and (> 0 x952) (<= (- 115792089237316195423570985008687907853269984665640564039457584007913129639936) x952)) (+ 115792089237316195423570985008687907853269984665640564039457584007913129639936 x952) x952))
(define-fun x420 ((x803 Real)) Bool (and (< x803 115792089237316195423570985008687907853269984665640564039457584007913129639936) (>= x803 0)))
(define-fun x1317 ((x803 Real)) Bool (and (= (x818 x803 115792089237316195423570985008687907853269984665640564039457584007913129639935) x803) (= x803 (x818 115792089237316195423570985008687907853269984665640564039457584007913129639935 x803))))
(define-fun x1388 ((x803 Real)) Bool (and (= 0 (x818 x803 0)) (= 0 (x818 0 x803))))
(define-fun x214 ((x803 Real)) Bool (= x803 (x818 x803 x803)))
(define-fun x1016 ((x803 Real)) Bool (and (x1388 x803) (x214 x803) (x1317 x803)))
(define-fun x1352 ((x803 Real)) Bool (= (x818 1099511627775 (x818 1099511627775 x803)) (x818 1099511627775 x803)))
(define-fun x813 ((x803 Real)) Bool (=> (and (< x803 1099511627776) (<= 0 x803)) (= x803 (x818 1099511627775 x803))))
(define-fun x1516 ((x803 Real)) Bool (=> (= x803 (x818 1099511627775 x803)) (and (>= x803 0) (< x803 1099511627776))))
(define-fun x1527 ((x803 Real)) Bool (=> (and (< x803 2199023255552) (<= 1099511627776 x803)) (= (x818 1099511627775 x803) (- x803 1099511627776))))
(define-fun x1531 ((x803 Real) (x112 Real)) Bool (and (<= 0 x112) (= x803 (+ (x818 1099511627775 x803) (* x112 1099511627776)))))
(define-fun x694 ((x803 Real) (x1479 Real)) Bool (and (x1352 x803) (x1531 x803 x1479) (x813 x803) (x1527 x803) (x1516 x803)))
(define-fun x1048 ((x803 Real) (x112 Real)) Bool (= (x818 x803 x112) (x818 x112 x803)))
(define-fun x453 ((x803 Real) (x112 Real)) Bool (and (=> (>= x112 0) (>= x112 (x818 x803 x112))) (=> (>= x803 0) (<= (x818 x803 x112) x803)) (>= (x818 x803 x112) 0)))
(define-fun x1056 ((x803 Real) (x112 Real)) Bool (and (x453 x803 x112) (x1048 x803 x112)))
(define-fun x920 ((x803 Real) (x1479 Real)) Bool (and (x1056 x803 1099511627775) (x694 x803 x1479)))
(define-fun x52 ((x803 Real)) Bool (= (x818 20282409603651670423947251286015 (x818 20282409603651670423947251286015 x803)) (x818 20282409603651670423947251286015 x803)))
(define-fun x222 ((x803 Real)) Bool (=> (and (> 20282409603651670423947251286016 x803) (<= 0 x803)) (= (x818 20282409603651670423947251286015 x803) x803)))
(define-fun x1166 ((x803 Real)) Bool (=> (= x803 (x818 20282409603651670423947251286015 x803)) (and (>= x803 0) (< x803 20282409603651670423947251286016))))
(define-fun x1272 ((x803 Real)) Bool (=> (and (>= x803 20282409603651670423947251286016) (> 40564819207303340847894502572032 x803)) (= (- x803 20282409603651670423947251286016) (x818 20282409603651670423947251286015 x803))))
(define-fun x1305 ((x803 Real) (x112 Real)) Bool (and (= x803 (+ (x818 20282409603651670423947251286015 x803) (* 20282409603651670423947251286016 x112))) (>= x112 0)))
(define-fun x790 ((x803 Real) (x1479 Real)) Bool (and (x222 x803) (x52 x803) (x1272 x803) (x1305 x803 x1479) (x1166 x803)))
(define-fun x1082 ((x803 Real) (x1479 Real)) Bool (and (x1056 x803 20282409603651670423947251286015) (x790 x803 x1479)))
(define-fun x389 ((x803 Real)) Bool (= (x818 18446744073709551615 (x818 18446744073709551615 x803)) (x818 18446744073709551615 x803)))
(define-fun x1409 ((x803 Real)) Bool (=> (and (> 18446744073709551616 x803) (<= 0 x803)) (= (x818 18446744073709551615 x803) x803)))
(define-fun x789 ((x803 Real)) Bool (=> (= (x818 18446744073709551615 x803) x803) (and (> 18446744073709551616 x803) (>= x803 0))))
(define-fun x1282 ((x803 Real)) Bool (=> (and (>= x803 18446744073709551616) (< x803 36893488147419103232)) (= (x818 18446744073709551615 x803) (- x803 18446744073709551616))))
(define-fun x756 ((x803 Real) (x112 Real)) Bool (and (<= 0 x112) (= x803 (+ (* x112 18446744073709551616) (x818 18446744073709551615 x803)))))
(define-fun x1410 ((x803 Real) (x1479 Real)) Bool (and (x756 x803 x1479) (x389 x803) (x789 x803) (x1282 x803) (x1409 x803)))
(define-fun x908 ((x803 Real) (x1479 Real)) Bool (and (x1410 x803 x1479) (x1056 x803 18446744073709551615)))
(define-fun x718 ((x803 Real)) Bool (= (x763 x803) (ite (< (x818 x803 20282409603651670423947251286015) 10141204801825835211973625643008) (x818 x803 20282409603651670423947251286015) (+ 115792089237316195423570985008687907853269984645358154435805913583965878353920 (x818 x803 20282409603651670423947251286015)))))
(define-fun x1279 ((x803 Real)) Bool (= (x818 16 x803) (x818 16 (x818 16 x803))))
(define-fun x1094 ((x803 Real)) Bool (=> (and (> 16 x803) (>= x803 0)) (= (x818 16 x803) 0)))
(define-fun x1416 ((x803 Real) (x112 Real) (x100 Real) (x1152 Real)) Bool (and (<= 0 x100) (= (+ x112 (* x100 16) (* x1152 32)) x803) (<= 0 x112) (> 3618502788666131106986593281521497120414687020801267626233049500247285301248 x1152) (<= 0 x1152) (> 2 x100) (< x112 16) (= (* x100 16) (x818 16 x803))))
(define-fun x1519 ((x803 Real) (x312 Real) (x711 Real) (x202 Real)) Bool (and (x1416 x803 x312 x711 x202) (x1094 x803) (x1279 x803)))
(define-fun x446 ((x803 Real) (x312 Real) (x711 Real) (x202 Real)) Bool (and (x1519 x803 x312 x711 x202) (x1056 x803 16)))
(define-fun x46 ((x803 Real)) Bool (= (x818 1461501637330902918203684832716283019655932542975 (x818 1461501637330902918203684832716283019655932542975 x803)) (x818 1461501637330902918203684832716283019655932542975 x803)))
(define-fun x370 ((x803 Real)) Bool (=> (and (> 1461501637330902918203684832716283019655932542976 x803) (<= 0 x803)) (= x803 (x818 1461501637330902918203684832716283019655932542975 x803))))
(define-fun x1096 ((x803 Real)) Bool (=> (= (x818 1461501637330902918203684832716283019655932542975 x803) x803) (and (< x803 1461501637330902918203684832716283019655932542976) (<= 0 x803))))
(define-fun x1485 ((x803 Real)) Bool (=> (and (< x803 2923003274661805836407369665432566039311865085952) (>= x803 1461501637330902918203684832716283019655932542976)) (= (- x803 1461501637330902918203684832716283019655932542976) (x818 1461501637330902918203684832716283019655932542975 x803))))
(define-fun x750 ((x803 Real) (x112 Real)) Bool (and (= x803 (+ (x818 1461501637330902918203684832716283019655932542975 x803) (* 1461501637330902918203684832716283019655932542976 x112))) (<= 0 x112)))
(define-fun x337 ((x803 Real) (x1479 Real)) Bool (and (x1485 x803) (x46 x803) (x1096 x803) (x370 x803) (x750 x803 x1479)))
(define-fun x564 ((x803 Real) (x1479 Real)) Bool (and (x337 x803 x1479) (x1056 x803 1461501637330902918203684832716283019655932542975)))
(define-fun x1017 ((x803 Real)) Bool (= (x818 1 x803) (x818 1 (x818 1 x803))))
(define-fun x878 ((x803 Real)) Bool (=> (and (> 2 x803) (>= x803 0)) (= x803 (x818 1 x803))))
(define-fun x552 ((x803 Real)) Bool (=> (= x803 (x818 1 x803)) (and (< x803 2) (>= x803 0))))
(define-fun x1280 ((x803 Real)) Bool (=> (and (>= x803 2) (> 4 x803)) (= (- x803 2) (x818 1 x803))))
(define-fun x399 ((x803 Real) (x112 Real)) Bool (and (<= 0 x112) (= x803 (+ (x818 1 x803) (* 2 x112)))))
(define-fun x943 ((x803 Real) (x1479 Real)) Bool (and (x1017 x803) (x552 x803) (x399 x803 x1479) (x1280 x803) (x878 x803)))
(define-fun x1188 ((x803 Real) (x1479 Real)) Bool (and (x943 x803 x1479) (x1056 x803 1)))
(define-fun x407 ((x803 Real)) Bool (= (x818 255 x803) (x818 255 (x818 255 x803))))
(define-fun x296 ((x803 Real)) Bool (=> (and (< x803 256) (>= x803 0)) (= x803 (x818 255 x803))))
(define-fun x511 ((x803 Real)) Bool (=> (= x803 (x818 255 x803)) (and (< x803 256) (<= 0 x803))))
(define-fun x975 ((x803 Real)) Bool (=> (and (< x803 512) (>= x803 256)) (= (x818 255 x803) (- x803 256))))
(define-fun x792 ((x803 Real) (x112 Real)) Bool (and (= (+ (x818 255 x803) (* 256 x112)) x803) (>= x112 0)))
(define-fun x1385 ((x803 Real) (x1479 Real)) Bool (and (x407 x803) (x792 x803 x1479) (x296 x803) (x511 x803) (x975 x803)))
(define-fun x290 ((x803 Real) (x1479 Real)) Bool (and (x1056 x803 255) (x1385 x803 x1479)))
(define-fun x845 ((x803 Real)) Bool (= (x818 65535 (x818 65535 x803)) (x818 65535 x803)))
(define-fun x3 ((x803 Real)) Bool (=> (and (>= x803 0) (> 65536 x803)) (= x803 (x818 65535 x803))))
(define-fun x1025 ((x803 Real)) Bool (=> (= (x818 65535 x803) x803) (and (> 65536 x803) (>= x803 0))))
(define-fun x194 ((x803 Real)) Bool (=> (and (>= x803 65536) (< x803 131072)) (= (- x803 65536) (x818 65535 x803))))
(define-fun x1160 ((x803 Real) (x112 Real)) Bool (and (= x803 (+ (x818 65535 x803) (* 65536 x112))) (>= x112 0)))
(define-fun x1206 ((x803 Real) (x1479 Real)) Bool (and (x3 x803) (x194 x803) (x1160 x803 x1479) (x845 x803) (x1025 x803)))
(define-fun x788 ((x803 Real) (x1479 Real)) Bool (and (x1056 x803 65535) (x1206 x803 x1479)))
(define-fun x433 ((x803 Real)) Bool (and (= (x1049 115792089237316195423570985008687907853269984665640564039457584007913129639935 x803) 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x1049 x803 115792089237316195423570985008687907853269984665640564039457584007913129639935))))
(define-fun x1442 ((x803 Real)) Bool (and (= x803 (x1049 x803 0)) (= x803 (x1049 0 x803))))
(define-fun x812 ((x803 Real)) Bool (= (x1049 x803 x803) x803))
(define-fun x1315 ((x803 Real)) Bool (and (x812 x803) (x1442 x803) (x433 x803)))
(define-fun x833 ((x803 Real) (x112 Real)) Bool (= (x1049 x803 x112) (x1049 x112 x803)))
(define-fun x445 ((x803 Real) (x112 Real)) Bool (and (=> (>= x803 0) (<= x803 (x1049 x803 x112))) (>= (+ x803 x112) (x1049 x803 x112)) (=> (<= 0 x112) (>= (x1049 x803 x112) x112))))
(define-fun x261 ((x803 Real) (x112 Real)) Bool (and (x833 x803 x112) (x445 x803 x112)))
(define-fun x1125 ((x803 Real)) Bool (= (x818 340282366920938463463374607431768211455 x803) (x818 340282366920938463463374607431768211455 (x818 340282366920938463463374607431768211455 x803))))
(define-fun x109 ((x803 Real)) Bool (=> (and (< x803 340282366920938463463374607431768211456) (>= x803 0)) (= (x818 340282366920938463463374607431768211455 x803) x803)))
(define-fun x1260 ((x803 Real)) Bool (=> (= x803 (x818 340282366920938463463374607431768211455 x803)) (and (<= 0 x803) (> 340282366920938463463374607431768211456 x803))))
(define-fun x211 ((x803 Real)) Bool (=> (and (<= 340282366920938463463374607431768211456 x803) (< x803 680564733841876926926749214863536422912)) (= (- x803 340282366920938463463374607431768211456) (x818 340282366920938463463374607431768211455 x803))))
(define-fun x1058 ((x803 Real) (x112 Real)) Bool (and (<= 0 x112) (= (+ (x818 340282366920938463463374607431768211455 x803) (* 340282366920938463463374607431768211456 x112)) x803)))
(define-fun x880 ((x803 Real) (x1479 Real)) Bool (and (x1260 x803) (x1125 x803) (x109 x803) (x211 x803) (x1058 x803 x1479)))
(define-fun x57 ((x803 Real) (x1479 Real)) Bool (and (x1056 x803 340282366920938463463374607431768211455) (x880 x803 x1479)))
(define-fun x413 ((x803 Real)) Bool (= (x1296 x803) (ite (< (x818 x803 340282366920938463463374607431768211455) 170141183460469231731687303715884105728) (x818 x803 340282366920938463463374607431768211455) (+ 115792089237316195423570985008687907852929702298719625575994209400481361428480 (x818 x803 340282366920938463463374607431768211455)))))
(define-fun x914 ((x803 Real)) Bool (= (x818 115792089237316195423570985008687907853269984665640564039457584007913129639904 x803) (x818 115792089237316195423570985008687907853269984665640564039457584007913129639904 (x818 115792089237316195423570985008687907853269984665640564039457584007913129639904 x803))))
(define-fun x699 ((x803 Real)) Bool (=> (and (<= 0 x803) (< x803 32)) (= 0 (x818 115792089237316195423570985008687907853269984665640564039457584007913129639904 x803))))
(define-fun x1217 ((x803 Real) (x112 Real) (x100 Real) (x1152 Real)) Bool (and (> 32 x112) (<= 0 x1152) (> 3618502788666131106986593281521497120414687020801267626233049500247285301248 x100) (= (x818 115792089237316195423570985008687907853269984665640564039457584007913129639904 x803) (* x100 32)) (<= 0 x100) (> 1 x1152) (= x803 (+ (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1152) (* x100 32) x112)) (>= x112 0)))
(define-fun x925 ((x803 Real) (x312 Real) (x711 Real) (x202 Real)) Bool (and (x1217 x803 x312 x711 x202) (x914 x803) (x699 x803)))
(define-fun x1165 ((x803 Real) (x312 Real) (x711 Real) (x202 Real)) Bool (and (x925 x803 x312 x711 x202) (x1056 x803 115792089237316195423570985008687907853269984665640564039457584007913129639904)))
(define-fun x1593 ((x1115 Real)) Real (ite (= 128 x1115) 50942633119752846454219349998365661925608737367104304655302372697894809501696 (x1310 x1115)))
(define-fun x592 ((x1115 Real)) Real (ite (= 0 x1115) x8 (x1497 x1115)))
(define-fun x572 ((x1115 Real)) Real (ite (= 128 x1115) x8 (x910 x1115)))
(define-fun x486 ((x1115 Real)) Real (ite (= x1115 128) x1402 (x910 x1115)))
(define-fun x1434 ((x1115 Real)) Real (ite (= 128 x1115) x799 (x910 x1115)))
(define-fun x295 ((x1115 Real)) Real (ite (= 128 x1115) x458 (x910 x1115)))
(define-fun x1014 ((x1115 Real)) Real (ite (and x1135 x349) (x572 x1115) (ite (and x293 x684) (x486 x1115) (ite (and x437 x1198) (x1434 x1115) (x295 x1115)))))
(define-fun x651 ((x1115 Real)) Real (ite (= x1560 x1115) 16156842317565293874272834530371880720966471053262404558597773956279093428224 (x1014 x1115)))
(define-fun x50 ((x1115 Real)) Real (ite (= x243 x1115) x603 (x651 x1115)))
(define-fun x1549 ((x1115 Real)) Real (ite (= x1115 x443) 274184521717934524641157099916833587211 (x50 x1115)))
(define-fun x1594 ((x1115 Real)) Real (ite (= x1560 x1115) 1 (x1588 x1115)))
(define-fun x249 ((x1115 Real)) Real (ite (= x1115 x1560) 1 (x1588 x1115)))
(define-fun x904 ((x1115 Real)) Real (ite (= x1115 x1560) 1 (x1588 x1115)))
(define-fun x380 ((x1115 Real)) Real (ite (and x1413 x902) (x1594 x1115) (ite (and x1244 x837) (x249 x1115) (x904 x1115))))
(define-fun x730 ((x1115 Real)) Real (ite (= x741 x1115) x1405 (x1241 x1115)))
(define-fun x92 ((x1115 Real)) Real (ite (= x1115 x973) x965 (x730 x1115)))
(define-fun x786 ((x1115 Real)) Real (ite (= x1115 x235) x1083 (x92 x1115)))
(define-fun x1535 ((x1115 Real)) Real (ite (= x355 x1115) x983 (x786 x1115)))
(define-fun x1412 ((x1115 Real)) Real (ite (= x1115 x820) x1346 (x1535 x1115)))
(define-fun x181 ((x1115 Real)) Real (ite (= x1115 x741) x1038 (x1241 x1115)))
(define-fun x489 ((x1115 Real)) Real (ite (= x1115 x565) x496 (x181 x1115)))
(define-fun x1307 ((x1115 Real)) Real (ite (= x1115 x1182) x1275 (x489 x1115)))
(define-fun x570 ((x1115 Real)) Real (ite (= x629 x1115) x1558 (x1307 x1115)))
(define-fun x808 ((x1115 Real)) Real (ite (= x1115 x266) x326 (x570 x1115)))
(define-fun x928 ((x1115 Real)) Real (ite (and x695 x797) (x1412 x1115) (x808 x1115)))
(define-fun x1379 ((x1115 Real)) Real (ite (= x1115 x1020) 115197700812830431890159100217698998050002284567939525164234024451216521560064 (x928 x1115)))
(define-fun x1068 ((x1115 Real)) Real (ite (= x1020 x1115) x447 (x1379 x1115)))
(define-fun x968 ((x1115 Real)) Real (ite (= x22 x1115) x195 (x1068 x1115)))
(define-fun x1149 ((x1115 Real)) Real (ite (= x1115 x1567) x324 (x968 x1115)))
(define-fun x1055 ((x1115 Real)) Real (ite (= x1115 x67) x839 (x1149 x1115)))
(define-fun x410 ((x1115 Real)) Real (ite (= x926 x1115) x1308 (x1055 x1115)))
(define-fun x862 ((x1115 Real)) Real (ite (= x1115 x322) 115197700812830431890159100217698998050002284567939525164234024451216521560064 (x410 x1115)))
(define-fun x273 ((x1115 Real)) Real (ite (= x322 x1115) x79 (x862 x1115)))
(define-fun x103 ((x1115 Real)) Real (ite (= x1208 x1115) x1022 (x273 x1115)))
(define-fun x300 ((x1115 Real)) Real (ite (= x1062 x1115) x549 (x103 x1115)))
(define-fun x435 ((x1115 Real)) Real (ite (= x1115 x1432) x831 (x300 x1115)))
(define-fun x167 ((x1115 Real)) Real (ite (= x344 x1115) x1403 (x234 x1115)))
(define-fun x1088 ((x1115 Real)) Real (ite (= x755 x1115) x1423 (x167 x1115)))
(define-fun x431 ((x1115 Real)) Real (ite (= x795 x1115) x1345 (x1088 x1115)))
(define-fun x580 ((x1115 Real)) Real (ite (= x245 x1115) x518 (x431 x1115)))
(define-fun x1287 ((x1115 Real)) Real (ite (= x1115 x1035) x1073 (x580 x1115)))
(define-fun x524 ((x1115 Real)) Real (ite (= x1115 x344) x1433 (x234 x1115)))
(define-fun x861 ((x1115 Real)) Real (ite (= x1115 x481) x971 (x524 x1115)))
(define-fun x1486 ((x1115 Real)) Real (ite (= x90 x1115) x538 (x861 x1115)))
(define-fun x1586 ((x1115 Real)) Real (ite (= x183 x1115) x427 (x1486 x1115)))
(define-fun x856 ((x1115 Real)) Real (ite (= x600 x1115) x997 (x1586 x1115)))
(define-fun x666 ((x1115 Real)) Real (ite (and x236 x1579) (x1287 x1115) (x856 x1115)))
(define-fun x5 ((x1115 Real)) Real (ite x342 (x666 x1115) (x1544 x1115)))
(define-fun x1051 ((x1115 Real)) Real (ite x731 (ite (and (not x849) x1438) (x1544 x1115) (x5 x1115)) (x1544 x1115)))
(define-fun x1426 ((x1115 Real)) Real (ite (= x1115 x732) 76450787359836037641860180984291677749980919077056822294353438043884394381312 (x1051 x1115)))
(define-fun x164 ((x1115 Real)) Real (ite (= x1115 x358) x480 (x1426 x1115)))
(define-fun x1358 ((x1115 x950)) Real (ite (= x1115 x59) x884 (x78 x1115)))
(define-fun x89 ((x1115 x950)) Real (ite (= x1085 x1115) x444 (x1358 x1115)))
(define-fun x648 ((x1115 x950)) Real (ite (and x902 x1413) (x89 x1115) (x78 x1115)))
(define-fun x1375 ((x1115 x950)) Real (ite (= x1115 x374) x1357 (x648 x1115)))
(define-fun x1191 ((x1115 Real)) Real (ite (= 0 x1115) 1 (x579 x1115)))
(define-fun x607 ((x1115 Real)) Real (ite (= x732 x1115) 1 (x1461 x1115)))
(define-fun x825 ((x1115 Real)) Real (ite (= x13 x1115) 0 (x284 x1115)))
(define-fun x117 ((x1115 Real)) Real (ite (= x207 x1115) x1095 (x1267 x1115)))
(define-fun x1306 ((x1115 Real)) Real (ite (= x357 x1115) x990 (x229 x1115)))
(define-fun x1171 ((x1115 Real)) Real (ite (= x448 x1115) x1066 (x1365 x1115)))
(define-fun x321 ((x1115 Real)) Real (ite (= x1115 x157) x38 (x1164 x1115)))
(define-fun x652 ((x1115 Real)) Real (ite (= x1089 x1115) x796 (x1457 x1115)))
(define-fun x994 ((x1115 Real)) Real (ite (= x1115 x392) x221 (x681 x1115)))
(define-fun x192 ((x1115 Real)) Real (ite (= x692 x1115) x1504 (x196 x1115)))
(define-fun x676 ((x1115 x950)) Real (ite (= x1115 x430) x419 (x1254 x1115)))
(define-fun x783 ((x1115 Real)) Real (ite (= 128 x1115) x213 (x513 x1115)))
(define-fun x151 ((x1115 Real)) Real (ite (= 160 x1115) x857 (x783 x1115)))
(define-fun x140 ((x1115 Real)) Real (ite (= x1115 192) x1473 (x151 x1115)))
(define-fun x1286 ((x1115 Real)) Real (ite (= x1115 224) x1480 (x140 x1115)))
(define-fun x770 ((x1115 Real)) Real (ite (= 256 x1115) x1019 (x1286 x1115)))
(define-fun x1261 ((x1115 Real)) Real (ite (= 0 x1115) x1037 (x744 x1115)))
(define-fun x641 ((x1115 Real)) Real (ite (= 32 x1115) x1169 (x1261 x1115)))
(define-fun x672 ((x1115 Real)) Real (ite (= 64 x1115) x436 (x641 x1115)))
(define-fun x404 ((x1115 Real)) Real (ite (= x1115 96) x923 (x672 x1115)))
(define-fun x338 ((x1115 Real)) Real (ite (= x1115 128) x1003 (x404 x1115)))
(define-fun x966 ((x1115 Real)) Real (ite (= x1115 x620) 0 (x132 x1115)))
(define-fun x667 ((x1115 Real)) Real (ite (= x824 x1115) x286 (x1047 x1115)))
(define-fun x1144 ((x1115 Real)) Real (ite (= x1115 x86) x19 (x1446 x1115)))
(define-fun x1377 ((x1115 Real)) Real (ite (= x1115 x72) x898 (x216 x1115)))
(define-fun x205 ((x1115 Real)) Real (ite (= x223 x1115) x327 (x461 x1115)))
(define-fun x313 ((x1115 Real)) Real (ite (= x631 x1115) x1196 (x729 x1115)))
(define-fun x127 ((x1115 Real)) Real (ite (= x941 x1115) x310 (x1523 x1115)))
(define-fun x39 ((x1115 Real)) Real (ite (= x765 x1115) x155 (x736 x1115)))
(define-fun x325 ((x1115 Real)) Real (ite (= 128 x1115) x213 (x24 x1115)))
(define-fun x710 ((x1115 Real)) Real (ite (= x1115 160) x144 (x325 x1115)))
(define-fun x1573 ((x1115 Real)) Real (ite (= x1115 192) x1473 (x710 x1115)))
(define-fun x1562 ((x1115 Real)) Real (ite (= x1115 224) x1480 (x1573 x1115)))
(define-fun x1550 ((x1115 Real)) Real (ite (= x1115 256) x1019 (x1562 x1115)))
(define-fun x1023 ((x1115 Real)) Real (ite (= 0 x1115) x1300 (x1555 x1115)))
(define-fun x1569 ((x1115 Real)) Real (ite (= 32 x1115) x1133 (x1023 x1115)))
(define-fun x233 ((x1115 Real)) Real (ite (= x1115 64) x911 (x1569 x1115)))
(define-fun x1468 ((x1115 Real)) Real (ite (= x1115 96) x546 (x233 x1115)))
(define-fun x170 ((x1115 Real)) Real (ite (= 128 x1115) x1582 (x1468 x1115)))
(define-fun x665 ((x1115 Real)) Real (ite (= x1115 0) x458 (x1497 x1115)))
(define-fun x859 ((x1115 Real)) Real (ite (= x1115 0) x799 (x1497 x1115)))
(define-fun x917 ((x1115 Real)) Real (ite (= 0 x1115) x1402 (x1497 x1115)))
(define-fun x1428 ((x1115 x950)) Real (ite (= x131 x1115) x944 (x31 x1115)))
(define-fun x1269 ((x1115 x950)) Real (ite (= x1115 x460) x810 (x1428 x1115)))
(define-fun x1007 ((x1115 Real)) Real (ite (= x1115 0) 1 (x421 x1115)))
(define-fun x1478 ((x1115 x950)) Real (ite (= x1115 x852) x768 (x985 x1115)))
(define-fun x593 ((x1115 x950)) Real (ite (= x1115 x1540) x514 (x1478 x1115)))
(define-fun x848 ((x1115 Real)) Real (ite (= x1115 0) 1 (x421 x1115)))
(define-fun x114 ((x1115 Real)) Real (ite (= 128 x1115) x1087 (x772 x1115)))
(define-fun x287 ((x1115 Real)) Real (ite (= x1115 160) x575 (x114 x1115)))
(define-fun x96 ((x1115 Real)) Real (ite (= 192 x1115) x1459 (x287 x1115)))
(define-fun x391 ((x1115 Real)) Real (ite (= x1115 224) x417 (x96 x1115)))
(define-fun x1205 ((x1115 Real)) Real (ite (= 256 x1115) x1243 (x391 x1115)))
(define-fun x969 ((x1115 Real)) Real (ite (= 0 x1115) x1547 (x1555 x1115)))
(define-fun x1103 ((x1115 Real)) Real (ite (= x1115 32) x492 (x969 x1115)))
(define-fun x55 ((x1115 Real)) Real (ite (= 64 x1115) x501 (x1103 x1115)))
(define-fun x159 ((x1115 Real)) Real (ite (= x1115 96) x468 (x55 x1115)))
(define-fun x958 ((x1115 Real)) Real (ite (= x1115 128) x1161 (x159 x1115)))
(define-fun x75 ((x1115 x950)) Real (ite (and x902 x1413) (x31 x1115) (ite (and x837 x1244) (x31 x1115) (x1269 x1115))))
(define-fun x455 ((x1115 x950)) Real (ite (= x1276 x1115) x1044 (x75 x1115)))
(define-fun x239 ((x1115 Real)) Real (ite (= 0 x1115) 1 (x579 x1115)))
(define-fun x913 ((x1115 Real)) Real (ite (= x732 x1115) 1 (x1461 x1115)))
(define-fun x1435 ((x1115 x950)) Real (ite (and x902 x1413) (x985 x1115) (ite (and x1244 x837) (x593 x1115) (x985 x1115))))
(define-fun x508 ((x1115 x950)) Real (ite (= x401 x1115) x1575 (x1435 x1115)))
(define-fun x269 ((x1115 Real)) Real (ite (= 0 x1115) 1 (x579 x1115)))
(define-fun x1431 ((x1115 Real)) Real (ite (= x732 x1115) 1 (x1461 x1115)))
(define-fun x1097 ((x1115 Real)) Real (ite (= 128 x1115) x1087 (x972 x1115)))
(define-fun x596 ((x1115 Real)) Real (ite (= x1115 160) x1013 (x1097 x1115)))
(define-fun x686 ((x1115 Real)) Real (ite (= 192 x1115) x1459 (x596 x1115)))
(define-fun x299 ((x1115 Real)) Real (ite (= 224 x1115) x417 (x686 x1115)))
(define-fun x860 ((x1115 Real)) Real (ite (= 256 x1115) x1243 (x299 x1115)))
(define-fun x1140 ((x1115 Real)) Real (ite (= 0 x1115) x1120 (x744 x1115)))
(define-fun x706 ((x1115 Real)) Real (ite (= 32 x1115) x274 (x1140 x1115)))
(define-fun x981 ((x1115 Real)) Real (ite (= 64 x1115) x493 (x706 x1115)))
(define-fun x199 ((x1115 Real)) Real (ite (= x1115 96) x263 (x981 x1115)))
(define-fun x35 ((x1115 Real)) Real (ite (= 128 x1115) x791 (x199 x1115)))
(define-fun x874 ((x1115 Real)) Real (ite (= 0 x1115) 1 (x421 x1115)))
(define-fun x1437 ((x1115 Real)) Real (ite (= x1115 128) x1087 (x659 x1115)))
(define-fun x974 ((x1115 Real)) Real (ite (= x1115 160) x1011 (x1437 x1115)))
(define-fun x587 ((x1115 Real)) Real (ite (= 192 x1115) x1459 (x974 x1115)))
(define-fun x378 ((x1115 Real)) Real (ite (= x1115 224) x417 (x587 x1115)))
(define-fun x472 ((x1115 Real)) Real (ite (= 256 x1115) x1243 (x378 x1115)))
(define-fun x689 ((x1115 Real)) Real (ite (= 0 x1115) x1338 (x156 x1115)))
(define-fun x1278 ((x1115 Real)) Real (ite (= 32 x1115) x303 (x689 x1115)))
(define-fun x1266 ((x1115 Real)) Real (ite (= 64 x1115) x650 (x1278 x1115)))
(define-fun x630 ((x1115 Real)) Real (ite (= 96 x1115) x402 (x1266 x1115)))
(define-fun x1319 ((x1115 Real)) Real (ite (= 128 x1115) x1380 (x630 x1115)))
(define-fun x406 ((x1115 Real)) Real (ite (= x573 x1115) 0 (x1091 x1115)))
(define-fun x1576 ((x1115 Real)) Real (ite (= x1224 x1115) x987 (x332 x1115)))
(define-fun x163 ((x1115 Real)) Real (ite (= x440 x1115) x488 (x530 x1115)))
(define-fun x1469 ((x1115 Real)) Real (ite (= x304 x1115) x637 (x185 x1115)))
(define-fun x1063 ((x1115 Real)) Real (ite (= x1115 x1235) x793 (x414 x1115)))
(define-fun x1451 ((x1115 Real)) Real (ite (= x1115 x452) x1322 (x193 x1115)))
(define-fun x240 ((x1115 Real)) Real (ite (= x394 x1115) x33 (x851 x1115)))
(define-fun x627 ((x1115 Real)) Real (ite (= x281 x1115) x776 (x60 x1115)))
(define-fun x41 ((x1115 x950)) Real (ite (= x1115 x628) x1285 (x939 x1115)))
(define-fun x752 ((x1115 x950)) Real (ite (= x494 x1115) x206 (x939 x1115)))
(define-fun x1002 ((x1115 x950)) Real (ite (and x738 (not x626)) (ite (and (not x935) x738 (not x626)) (x939 x1115) (x752 x1115)) (x41 x1115)))
(define-fun x595 ((x1115 Real)) Real (ite (= x1115 128) x1087 (x346 x1115)))
(define-fun x1542 ((x1115 Real)) Real (ite (= 160 x1115) x1439 (x595 x1115)))
(define-fun x1253 ((x1115 Real)) Real (ite (= 192 x1115) x1459 (x1542 x1115)))
(define-fun x992 ((x1115 Real)) Real (ite (= x1115 224) x417 (x1253 x1115)))
(define-fun x411 ((x1115 Real)) Real (ite (= x1115 256) x1243 (x992 x1115)))
(define-fun x1464 ((x1115 Real)) Real (ite (= 0 x1115) x1297 (x356 x1115)))
(define-fun x1071 ((x1115 Real)) Real (ite (= x1115 32) x1463 (x1464 x1115)))
(define-fun x408 ((x1115 Real)) Real (ite (= x1115 64) x359 (x1071 x1115)))
(define-fun x1505 ((x1115 Real)) Real (ite (= x1115 96) x557 (x408 x1115)))
(define-fun x84 ((x1115 Real)) Real (ite (= x1115 128) x1065 (x1505 x1115)))
(define-fun x1134 ((x1115 Real)) Real (ite (and x1179 x1513) (x607 x1115) (ite (and x271 x158) (x1431 x1115) (x913 x1115))))
(define-fun x778 ((x803 Real)) Bool (=> (and (not (= 4033150093 x803)) (not (= 3695885053 x803)) (not (= x803 20282409603651670423947251286015)) (not (= 117300739 x803)) (not (= x803 274184521717934524641157099916833587235)) (not (= 2799315671 x803)) (not (= 65536 x803)) (not (= x803 3119561463)) (not (= x803 404098525)) (not (= 4062139261 x803)) (not (= x803 274184521717934524641157099916833587227)) (not (= x803 3889878717)) (not (= 2661915226 x803)) (not (= x803 76450787359836037641860180984291677749980919077056822294353438043884394381312)) (not (= 57896044618658097711785492504343953926634992332820282019728792003956564819968 x803)) (not (= x803 274184521717934524641157099916833587211)) (not (= 3638949393 x803)) (not (= x803 18446744073709551616)) (not (= x803 826074471)) (not (= 18446744073709551615 x803)) (not (= 3257672857 x803)) (not (= x803 10141204801825835211973625643007)) (not (= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x803)) (not (= 115792089237316195423570985008687907853269984655499359237631748795939503996928 x803)) (not (= 157198259 x803)) (not (= x803 274184521717934524641157099916833587223)) (not (= 3253611544 x803)) (not (= x803 50942633119752846454219349998365661925608737367104304655302372697894809501696)) (> x803 10000) (not (= x803 65535)) (not (= 20282409603651670423947251286016 x803)) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x803)) (not (= 16156842317565293874272834530371880720966471053262404558597773956279093428224 x803)) (not (= x803 274184521717934524641157099916833587244)) (not (= x803 1889567281)) (not (= 170141183460469231731687303715884105727 x803)) (not (= 2835717307 x803)) (not (= x803 599290589)) (not (= 274184521717934524641157099916833587233 x803)) (not (= x803 3840337785)) (not (= 2362581449 x803)) (not (= 4272920204 x803)) (not (= 2068668150 x803)) (not (= x803 115792089237316195423570985008687907853269984665640564039457584007913129639904)) (not (= 3795249780 x803)) (not (= x803 1099511627775)) (not (= 1099511627776 x803)) (not (= x803 1461501637330902918203684832716283019655932542975)) (not (= x803 274184521717934524641157099916833587231)) (not (= 3833100637 x803)) (not (= 340282366920938463463374607431768211455 x803)) (not (= 2514000705 x803)) (not (= x803 340282366920938463463374607431768211456)) (not (= x803 1208925819614629174706175)) (not (= 1208925819614629174706176 x803)) (not (= 115197700812830431890159100217698998050002284567939525164234024451216521560064 x803))) (not ((_ is x1128) (x1418 x803)))))
(assert (axiom_frac_bound (* x126 x387) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (* x126 x387) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1030 x1490 (uninterp_frac (* x126 x387) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x126 x387) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1059 x48 (uninterp_frac (* x126 x387) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x126 x387) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1064 x209 (uninterp_frac (* x126 x387) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x126 x387) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1113 x251 (uninterp_frac (* x126 x387) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x126 x387) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1113 x426 (uninterp_frac (* x126 x387) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x126 x387) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1183 x690 (uninterp_frac (* x126 x387) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x126 x387) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x126 x387 (uninterp_frac (* x126 x387) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x126 x387) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1389 x934 (uninterp_frac (* x126 x387) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x126 x387) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1407 x1250 (uninterp_frac (* x126 x387) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x126 x387) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1490 x1030 (uninterp_frac (* x126 x387) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x126 x387) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1490 x882 (uninterp_frac (* x126 x387) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x126 x387) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1514 x172 (uninterp_frac (* x126 x387) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x126 x387) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1529 x241 (uninterp_frac (* x126 x387) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x126 x387) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1529 x690 (uninterp_frac (* x126 x387) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x126 x387) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x166 x777 (uninterp_frac (* x126 x387) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x126 x387) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x172 x1031 (uninterp_frac (* x126 x387) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x126 x387) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x172 x1514 (uninterp_frac (* x126 x387) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x126 x387) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x208 x398 (uninterp_frac (* x126 x387) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x126 x387) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x209 x262 (uninterp_frac (* x126 x387) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x126 x387) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x241 x1186 (uninterp_frac (* x126 x387) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x126 x387) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x241 x1529 (uninterp_frac (* x126 x387) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x126 x387) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x241 x276 (uninterp_frac (* x126 x387) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x126 x387) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x241 x525 (uninterp_frac (* x126 x387) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x126 x387) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x251 x1113 (uninterp_frac (* x126 x387) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x126 x387) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x262 x209 (uninterp_frac (* x126 x387) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x126 x387) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x262 x97 (uninterp_frac (* x126 x387) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x126 x387) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x276 x241 (uninterp_frac (* x126 x387) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x126 x387) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x311 x606 (uninterp_frac (* x126 x387) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x126 x387) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x37 x398 (uninterp_frac (* x126 x387) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x126 x387) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x386 x760 (uninterp_frac (* x126 x387) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x126 x387) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x400 x262 (uninterp_frac (* x126 x387) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x126 x387) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x426 x1113 (uninterp_frac (* x126 x387) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x126 x387) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x48 x1059 (uninterp_frac (* x126 x387) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x126 x387) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x525 x241 (uninterp_frac (* x126 x387) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x126 x387) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x599 (x1296 x733) (uninterp_frac (* x126 x387) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x126 x387) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x690 x1529 (uninterp_frac (* x126 x387) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x126 x387) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x734 x1441 (uninterp_frac (* x126 x387) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x126 x387) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x780 x262 (uninterp_frac (* x126 x387) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x126 x387) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x80 x1064 (uninterp_frac (* x126 x387) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x126 x387) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x882 x1490 (uninterp_frac (* x126 x387) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x126 x387) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x934 x1490 (uninterp_frac (* x126 x387) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x126 x387) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x97 x262 (uninterp_frac (* x126 x387) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (* x1407 x1250) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (* x1407 x1250) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1030 x1490 (uninterp_frac (* x1407 x1250) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1407 x1250) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1059 x48 (uninterp_frac (* x1407 x1250) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1407 x1250) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1064 x209 (uninterp_frac (* x1407 x1250) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1407 x1250) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1113 x251 (uninterp_frac (* x1407 x1250) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1407 x1250) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1113 x426 (uninterp_frac (* x1407 x1250) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1407 x1250) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1183 x690 (uninterp_frac (* x1407 x1250) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1407 x1250) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x126 x387 (uninterp_frac (* x1407 x1250) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1407 x1250) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1389 x934 (uninterp_frac (* x1407 x1250) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1407 x1250) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1407 x1250 (uninterp_frac (* x1407 x1250) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1407 x1250) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1490 x1030 (uninterp_frac (* x1407 x1250) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1407 x1250) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1490 x882 (uninterp_frac (* x1407 x1250) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1407 x1250) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1514 x172 (uninterp_frac (* x1407 x1250) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1407 x1250) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1529 x241 (uninterp_frac (* x1407 x1250) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1407 x1250) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1529 x690 (uninterp_frac (* x1407 x1250) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1407 x1250) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x166 x777 (uninterp_frac (* x1407 x1250) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1407 x1250) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x172 x1031 (uninterp_frac (* x1407 x1250) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1407 x1250) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x172 x1514 (uninterp_frac (* x1407 x1250) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1407 x1250) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x208 x398 (uninterp_frac (* x1407 x1250) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1407 x1250) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x209 x262 (uninterp_frac (* x1407 x1250) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1407 x1250) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x241 x1186 (uninterp_frac (* x1407 x1250) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1407 x1250) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x241 x1529 (uninterp_frac (* x1407 x1250) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1407 x1250) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x241 x276 (uninterp_frac (* x1407 x1250) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1407 x1250) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x241 x525 (uninterp_frac (* x1407 x1250) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1407 x1250) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x251 x1113 (uninterp_frac (* x1407 x1250) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1407 x1250) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x262 x209 (uninterp_frac (* x1407 x1250) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1407 x1250) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x262 x97 (uninterp_frac (* x1407 x1250) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1407 x1250) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x276 x241 (uninterp_frac (* x1407 x1250) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1407 x1250) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x311 x606 (uninterp_frac (* x1407 x1250) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1407 x1250) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x37 x398 (uninterp_frac (* x1407 x1250) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1407 x1250) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x386 x760 (uninterp_frac (* x1407 x1250) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1407 x1250) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x400 x262 (uninterp_frac (* x1407 x1250) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1407 x1250) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x426 x1113 (uninterp_frac (* x1407 x1250) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1407 x1250) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x48 x1059 (uninterp_frac (* x1407 x1250) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1407 x1250) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x525 x241 (uninterp_frac (* x1407 x1250) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1407 x1250) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x599 (x1296 x733) (uninterp_frac (* x1407 x1250) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1407 x1250) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x690 x1529 (uninterp_frac (* x1407 x1250) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1407 x1250) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x734 x1441 (uninterp_frac (* x1407 x1250) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1407 x1250) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x780 x262 (uninterp_frac (* x1407 x1250) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1407 x1250) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x80 x1064 (uninterp_frac (* x1407 x1250) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1407 x1250) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x882 x1490 (uninterp_frac (* x1407 x1250) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1407 x1250) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x934 x1490 (uninterp_frac (* x1407 x1250) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1407 x1250) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x97 x262 (uninterp_frac (* x1407 x1250) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (* x311 x606) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (* x311 x606) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1030 x1490 (uninterp_frac (* x311 x606) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x311 x606) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1059 x48 (uninterp_frac (* x311 x606) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x311 x606) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1064 x209 (uninterp_frac (* x311 x606) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x311 x606) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1113 x251 (uninterp_frac (* x311 x606) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x311 x606) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1113 x426 (uninterp_frac (* x311 x606) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x311 x606) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1183 x690 (uninterp_frac (* x311 x606) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x311 x606) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x126 x387 (uninterp_frac (* x311 x606) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x311 x606) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1389 x934 (uninterp_frac (* x311 x606) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x311 x606) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1407 x1250 (uninterp_frac (* x311 x606) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x311 x606) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1490 x1030 (uninterp_frac (* x311 x606) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x311 x606) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1490 x882 (uninterp_frac (* x311 x606) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x311 x606) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1514 x172 (uninterp_frac (* x311 x606) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x311 x606) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1529 x241 (uninterp_frac (* x311 x606) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x311 x606) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1529 x690 (uninterp_frac (* x311 x606) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x311 x606) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x166 x777 (uninterp_frac (* x311 x606) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x311 x606) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x172 x1031 (uninterp_frac (* x311 x606) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x311 x606) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x172 x1514 (uninterp_frac (* x311 x606) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x311 x606) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x208 x398 (uninterp_frac (* x311 x606) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x311 x606) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x209 x262 (uninterp_frac (* x311 x606) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x311 x606) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x241 x1186 (uninterp_frac (* x311 x606) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x311 x606) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x241 x1529 (uninterp_frac (* x311 x606) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x311 x606) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x241 x276 (uninterp_frac (* x311 x606) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x311 x606) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x241 x525 (uninterp_frac (* x311 x606) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x311 x606) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x251 x1113 (uninterp_frac (* x311 x606) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x311 x606) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x262 x209 (uninterp_frac (* x311 x606) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x311 x606) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x262 x97 (uninterp_frac (* x311 x606) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x311 x606) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x276 x241 (uninterp_frac (* x311 x606) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x311 x606) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x311 x606 (uninterp_frac (* x311 x606) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x311 x606) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x37 x398 (uninterp_frac (* x311 x606) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x311 x606) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x386 x760 (uninterp_frac (* x311 x606) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x311 x606) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x400 x262 (uninterp_frac (* x311 x606) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x311 x606) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x426 x1113 (uninterp_frac (* x311 x606) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x311 x606) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x48 x1059 (uninterp_frac (* x311 x606) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x311 x606) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x525 x241 (uninterp_frac (* x311 x606) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x311 x606) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x599 (x1296 x733) (uninterp_frac (* x311 x606) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x311 x606) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x690 x1529 (uninterp_frac (* x311 x606) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x311 x606) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x734 x1441 (uninterp_frac (* x311 x606) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x311 x606) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x780 x262 (uninterp_frac (* x311 x606) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x311 x606) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x80 x1064 (uninterp_frac (* x311 x606) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x311 x606) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x882 x1490 (uninterp_frac (* x311 x606) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x311 x606) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x934 x1490 (uninterp_frac (* x311 x606) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x311 x606) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x97 x262 (uninterp_frac (* x311 x606) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (* x599 (x1296 x733)) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (* x599 (x1296 x733)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1030 x1490 (uninterp_frac (* x599 (x1296 x733)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x599 (x1296 x733)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1059 x48 (uninterp_frac (* x599 (x1296 x733)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x599 (x1296 x733)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1064 x209 (uninterp_frac (* x599 (x1296 x733)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x599 (x1296 x733)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1113 x251 (uninterp_frac (* x599 (x1296 x733)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x599 (x1296 x733)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1113 x426 (uninterp_frac (* x599 (x1296 x733)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x599 (x1296 x733)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1183 x690 (uninterp_frac (* x599 (x1296 x733)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x599 (x1296 x733)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x126 x387 (uninterp_frac (* x599 (x1296 x733)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x599 (x1296 x733)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1389 x934 (uninterp_frac (* x599 (x1296 x733)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x599 (x1296 x733)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1407 x1250 (uninterp_frac (* x599 (x1296 x733)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x599 (x1296 x733)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1490 x1030 (uninterp_frac (* x599 (x1296 x733)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x599 (x1296 x733)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1490 x882 (uninterp_frac (* x599 (x1296 x733)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x599 (x1296 x733)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1514 x172 (uninterp_frac (* x599 (x1296 x733)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x599 (x1296 x733)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1529 x241 (uninterp_frac (* x599 (x1296 x733)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x599 (x1296 x733)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1529 x690 (uninterp_frac (* x599 (x1296 x733)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x599 (x1296 x733)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x166 x777 (uninterp_frac (* x599 (x1296 x733)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x599 (x1296 x733)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x172 x1031 (uninterp_frac (* x599 (x1296 x733)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x599 (x1296 x733)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x172 x1514 (uninterp_frac (* x599 (x1296 x733)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x599 (x1296 x733)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x208 x398 (uninterp_frac (* x599 (x1296 x733)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x599 (x1296 x733)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x209 x262 (uninterp_frac (* x599 (x1296 x733)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x599 (x1296 x733)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x241 x1186 (uninterp_frac (* x599 (x1296 x733)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x599 (x1296 x733)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x241 x1529 (uninterp_frac (* x599 (x1296 x733)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x599 (x1296 x733)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x241 x276 (uninterp_frac (* x599 (x1296 x733)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x599 (x1296 x733)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x241 x525 (uninterp_frac (* x599 (x1296 x733)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x599 (x1296 x733)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x251 x1113 (uninterp_frac (* x599 (x1296 x733)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x599 (x1296 x733)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x262 x209 (uninterp_frac (* x599 (x1296 x733)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x599 (x1296 x733)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x262 x97 (uninterp_frac (* x599 (x1296 x733)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x599 (x1296 x733)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x276 x241 (uninterp_frac (* x599 (x1296 x733)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x599 (x1296 x733)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x311 x606 (uninterp_frac (* x599 (x1296 x733)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x599 (x1296 x733)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x37 x398 (uninterp_frac (* x599 (x1296 x733)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x599 (x1296 x733)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x386 x760 (uninterp_frac (* x599 (x1296 x733)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x599 (x1296 x733)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x400 x262 (uninterp_frac (* x599 (x1296 x733)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x599 (x1296 x733)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x426 x1113 (uninterp_frac (* x599 (x1296 x733)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x599 (x1296 x733)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x48 x1059 (uninterp_frac (* x599 (x1296 x733)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x599 (x1296 x733)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x525 x241 (uninterp_frac (* x599 (x1296 x733)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x599 (x1296 x733)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x599 (x1296 x733) (uninterp_frac (* x599 (x1296 x733)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x599 (x1296 x733)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x690 x1529 (uninterp_frac (* x599 (x1296 x733)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x599 (x1296 x733)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x734 x1441 (uninterp_frac (* x599 (x1296 x733)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x599 (x1296 x733)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x780 x262 (uninterp_frac (* x599 (x1296 x733)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x599 (x1296 x733)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x80 x1064 (uninterp_frac (* x599 (x1296 x733)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x599 (x1296 x733)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x882 x1490 (uninterp_frac (* x599 (x1296 x733)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x599 (x1296 x733)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x934 x1490 (uninterp_frac (* x599 (x1296 x733)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x599 (x1296 x733)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x97 x262 (uninterp_frac (* x599 (x1296 x733)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (* x734 x1441) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (* x734 x1441) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1030 x1490 (uninterp_frac (* x734 x1441) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x734 x1441) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1059 x48 (uninterp_frac (* x734 x1441) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x734 x1441) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1064 x209 (uninterp_frac (* x734 x1441) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x734 x1441) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1113 x251 (uninterp_frac (* x734 x1441) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x734 x1441) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1113 x426 (uninterp_frac (* x734 x1441) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x734 x1441) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1183 x690 (uninterp_frac (* x734 x1441) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x734 x1441) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x126 x387 (uninterp_frac (* x734 x1441) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x734 x1441) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1389 x934 (uninterp_frac (* x734 x1441) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x734 x1441) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1407 x1250 (uninterp_frac (* x734 x1441) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x734 x1441) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1490 x1030 (uninterp_frac (* x734 x1441) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x734 x1441) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1490 x882 (uninterp_frac (* x734 x1441) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x734 x1441) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1514 x172 (uninterp_frac (* x734 x1441) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x734 x1441) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1529 x241 (uninterp_frac (* x734 x1441) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x734 x1441) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1529 x690 (uninterp_frac (* x734 x1441) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x734 x1441) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x166 x777 (uninterp_frac (* x734 x1441) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x734 x1441) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x172 x1031 (uninterp_frac (* x734 x1441) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x734 x1441) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x172 x1514 (uninterp_frac (* x734 x1441) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x734 x1441) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x208 x398 (uninterp_frac (* x734 x1441) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x734 x1441) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x209 x262 (uninterp_frac (* x734 x1441) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x734 x1441) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x241 x1186 (uninterp_frac (* x734 x1441) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x734 x1441) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x241 x1529 (uninterp_frac (* x734 x1441) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x734 x1441) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x241 x276 (uninterp_frac (* x734 x1441) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x734 x1441) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x241 x525 (uninterp_frac (* x734 x1441) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x734 x1441) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x251 x1113 (uninterp_frac (* x734 x1441) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x734 x1441) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x262 x209 (uninterp_frac (* x734 x1441) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x734 x1441) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x262 x97 (uninterp_frac (* x734 x1441) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x734 x1441) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x276 x241 (uninterp_frac (* x734 x1441) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x734 x1441) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x311 x606 (uninterp_frac (* x734 x1441) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x734 x1441) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x37 x398 (uninterp_frac (* x734 x1441) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x734 x1441) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x386 x760 (uninterp_frac (* x734 x1441) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x734 x1441) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x400 x262 (uninterp_frac (* x734 x1441) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x734 x1441) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x426 x1113 (uninterp_frac (* x734 x1441) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x734 x1441) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x48 x1059 (uninterp_frac (* x734 x1441) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x734 x1441) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x525 x241 (uninterp_frac (* x734 x1441) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x734 x1441) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x599 (x1296 x733) (uninterp_frac (* x734 x1441) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x734 x1441) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x690 x1529 (uninterp_frac (* x734 x1441) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x734 x1441) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x734 x1441 (uninterp_frac (* x734 x1441) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x734 x1441) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x780 x262 (uninterp_frac (* x734 x1441) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x734 x1441) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x80 x1064 (uninterp_frac (* x734 x1441) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x734 x1441) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x882 x1490 (uninterp_frac (* x734 x1441) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x734 x1441) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x934 x1490 (uninterp_frac (* x734 x1441) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x734 x1441) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x97 x262 (uninterp_frac (* x734 x1441) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (x1008 2 x238) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (x1008 2 x238) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1030 x1490 (uninterp_frac (x1008 2 x238) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x1008 2 x238) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1059 x48 (uninterp_frac (x1008 2 x238) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x1008 2 x238) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1064 x209 (uninterp_frac (x1008 2 x238) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x1008 2 x238) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1113 x251 (uninterp_frac (x1008 2 x238) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x1008 2 x238) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1113 x426 (uninterp_frac (x1008 2 x238) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x1008 2 x238) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1183 x690 (uninterp_frac (x1008 2 x238) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x1008 2 x238) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x126 x387 (uninterp_frac (x1008 2 x238) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x1008 2 x238) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1389 x934 (uninterp_frac (x1008 2 x238) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x1008 2 x238) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1407 x1250 (uninterp_frac (x1008 2 x238) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x1008 2 x238) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1490 x1030 (uninterp_frac (x1008 2 x238) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x1008 2 x238) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1490 x882 (uninterp_frac (x1008 2 x238) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x1008 2 x238) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1514 x172 (uninterp_frac (x1008 2 x238) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x1008 2 x238) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1529 x241 (uninterp_frac (x1008 2 x238) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x1008 2 x238) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1529 x690 (uninterp_frac (x1008 2 x238) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x1008 2 x238) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x166 x777 (uninterp_frac (x1008 2 x238) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x1008 2 x238) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x172 x1031 (uninterp_frac (x1008 2 x238) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x1008 2 x238) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x172 x1514 (uninterp_frac (x1008 2 x238) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x1008 2 x238) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x208 x398 (uninterp_frac (x1008 2 x238) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x1008 2 x238) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x209 x262 (uninterp_frac (x1008 2 x238) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x1008 2 x238) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x241 x1186 (uninterp_frac (x1008 2 x238) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x1008 2 x238) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x241 x1529 (uninterp_frac (x1008 2 x238) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x1008 2 x238) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x241 x276 (uninterp_frac (x1008 2 x238) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x1008 2 x238) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x241 x525 (uninterp_frac (x1008 2 x238) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x1008 2 x238) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x251 x1113 (uninterp_frac (x1008 2 x238) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x1008 2 x238) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x262 x209 (uninterp_frac (x1008 2 x238) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x1008 2 x238) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x262 x97 (uninterp_frac (x1008 2 x238) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x1008 2 x238) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x276 x241 (uninterp_frac (x1008 2 x238) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x1008 2 x238) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x311 x606 (uninterp_frac (x1008 2 x238) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x1008 2 x238) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x37 x398 (uninterp_frac (x1008 2 x238) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x1008 2 x238) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x386 x760 (uninterp_frac (x1008 2 x238) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x1008 2 x238) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x400 x262 (uninterp_frac (x1008 2 x238) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x1008 2 x238) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x426 x1113 (uninterp_frac (x1008 2 x238) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x1008 2 x238) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x48 x1059 (uninterp_frac (x1008 2 x238) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x1008 2 x238) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x525 x241 (uninterp_frac (x1008 2 x238) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x1008 2 x238) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x599 (x1296 x733) (uninterp_frac (x1008 2 x238) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x1008 2 x238) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x690 x1529 (uninterp_frac (x1008 2 x238) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x1008 2 x238) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x734 x1441 (uninterp_frac (x1008 2 x238) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x1008 2 x238) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x780 x262 (uninterp_frac (x1008 2 x238) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x1008 2 x238) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x80 x1064 (uninterp_frac (x1008 2 x238) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x1008 2 x238) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x882 x1490 (uninterp_frac (x1008 2 x238) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x1008 2 x238) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x934 x1490 (uninterp_frac (x1008 2 x238) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x1008 2 x238) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x97 x262 (uninterp_frac (x1008 2 x238) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (x1008 2 x422) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (x1008 2 x422) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1030 x1490 (uninterp_frac (x1008 2 x422) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x1008 2 x422) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1059 x48 (uninterp_frac (x1008 2 x422) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x1008 2 x422) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1064 x209 (uninterp_frac (x1008 2 x422) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x1008 2 x422) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1113 x251 (uninterp_frac (x1008 2 x422) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x1008 2 x422) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1113 x426 (uninterp_frac (x1008 2 x422) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x1008 2 x422) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1183 x690 (uninterp_frac (x1008 2 x422) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x1008 2 x422) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x126 x387 (uninterp_frac (x1008 2 x422) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x1008 2 x422) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1389 x934 (uninterp_frac (x1008 2 x422) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x1008 2 x422) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1407 x1250 (uninterp_frac (x1008 2 x422) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x1008 2 x422) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1490 x1030 (uninterp_frac (x1008 2 x422) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x1008 2 x422) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1490 x882 (uninterp_frac (x1008 2 x422) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x1008 2 x422) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1514 x172 (uninterp_frac (x1008 2 x422) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x1008 2 x422) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1529 x241 (uninterp_frac (x1008 2 x422) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x1008 2 x422) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1529 x690 (uninterp_frac (x1008 2 x422) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x1008 2 x422) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x166 x777 (uninterp_frac (x1008 2 x422) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x1008 2 x422) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x172 x1031 (uninterp_frac (x1008 2 x422) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x1008 2 x422) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x172 x1514 (uninterp_frac (x1008 2 x422) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x1008 2 x422) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x208 x398 (uninterp_frac (x1008 2 x422) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x1008 2 x422) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x209 x262 (uninterp_frac (x1008 2 x422) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x1008 2 x422) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x241 x1186 (uninterp_frac (x1008 2 x422) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x1008 2 x422) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x241 x1529 (uninterp_frac (x1008 2 x422) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x1008 2 x422) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x241 x276 (uninterp_frac (x1008 2 x422) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x1008 2 x422) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x241 x525 (uninterp_frac (x1008 2 x422) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x1008 2 x422) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x251 x1113 (uninterp_frac (x1008 2 x422) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x1008 2 x422) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x262 x209 (uninterp_frac (x1008 2 x422) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x1008 2 x422) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x262 x97 (uninterp_frac (x1008 2 x422) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x1008 2 x422) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x276 x241 (uninterp_frac (x1008 2 x422) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x1008 2 x422) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x311 x606 (uninterp_frac (x1008 2 x422) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x1008 2 x422) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x37 x398 (uninterp_frac (x1008 2 x422) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x1008 2 x422) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x386 x760 (uninterp_frac (x1008 2 x422) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x1008 2 x422) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x400 x262 (uninterp_frac (x1008 2 x422) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x1008 2 x422) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x426 x1113 (uninterp_frac (x1008 2 x422) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x1008 2 x422) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x48 x1059 (uninterp_frac (x1008 2 x422) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x1008 2 x422) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x525 x241 (uninterp_frac (x1008 2 x422) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x1008 2 x422) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x599 (x1296 x733) (uninterp_frac (x1008 2 x422) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x1008 2 x422) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x690 x1529 (uninterp_frac (x1008 2 x422) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x1008 2 x422) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x734 x1441 (uninterp_frac (x1008 2 x422) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x1008 2 x422) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x780 x262 (uninterp_frac (x1008 2 x422) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x1008 2 x422) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x80 x1064 (uninterp_frac (x1008 2 x422) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x1008 2 x422) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x882 x1490 (uninterp_frac (x1008 2 x422) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x1008 2 x422) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x934 x1490 (uninterp_frac (x1008 2 x422) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x1008 2 x422) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x97 x262 (uninterp_frac (x1008 2 x422) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1250))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1250 x1030 x1490 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1250)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1250 x1059 x48 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1250)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1250 x1064 x209 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1250)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1250 x1113 x251 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1250)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1250 x1113 x426 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1250)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1250 x1183 x690 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1250)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1250 x126 x387 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1250)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1250 x1389 x934 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1250)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1250 x1407 x1250 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1250)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1250 x1490 x1030 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1250)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1250 x1490 x882 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1250)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1250 x1514 x172 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1250)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1250 x1529 x241 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1250)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1250 x1529 x690 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1250)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1250 x166 x777 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1250)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1250 x172 x1031 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1250)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1250 x172 x1514 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1250)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1250 x208 x398 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1250)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1250 x209 x262 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1250)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1250 x241 x1186 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1250)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1250 x241 x1529 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1250)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1250 x241 x276 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1250)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1250 x241 x525 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1250)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1250 x251 x1113 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1250)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1250 x262 x209 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1250)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1250 x262 x97 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1250)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1250 x276 x241 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1250)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1250 x311 x606 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1250)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1250 x37 x398 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1250)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1250 x386 x760 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1250)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1250 x400 x262 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1250)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1250 x426 x1113 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1250)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1250 x48 x1059 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1250)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1250 x525 x241 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1250)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1250 x599 (x1296 x733) (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1250)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1250 x690 x1529 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1250)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1250 x734 x1441 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1250)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1250 x780 x262 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1250)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1250 x80 x1064 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1250)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1250 x882 x1490 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1250)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1250 x934 x1490 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1250)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1250 x97 x262 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1250)))
(assert (axiom_frac_bound 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1529))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1529 x1030 x1490 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1529)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1529 x1059 x48 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1529)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1529 x1064 x209 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1529)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1529 x1113 x251 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1529)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1529 x1113 x426 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1529)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1529 x1183 x690 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1529)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1529 x126 x387 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1529)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1529 x1389 x934 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1529)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1529 x1407 x1250 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1529)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1529 x1490 x1030 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1529)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1529 x1490 x882 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1529)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1529 x1514 x172 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1529)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1529 x1529 x241 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1529)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1529 x1529 x690 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1529)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1529 x166 x777 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1529)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1529 x172 x1031 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1529)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1529 x172 x1514 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1529)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1529 x208 x398 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1529)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1529 x209 x262 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1529)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1529 x241 x1186 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1529)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1529 x241 x1529 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1529)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1529 x241 x276 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1529)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1529 x241 x525 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1529)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1529 x251 x1113 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1529)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1529 x262 x209 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1529)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1529 x262 x97 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1529)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1529 x276 x241 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1529)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1529 x311 x606 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1529)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1529 x37 x398 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1529)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1529 x386 x760 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1529)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1529 x400 x262 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1529)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1529 x426 x1113 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1529)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1529 x48 x1059 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1529)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1529 x525 x241 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1529)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1529 x599 (x1296 x733) (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1529)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1529 x690 x1529 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1529)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1529 x734 x1441 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1529)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1529 x780 x262 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1529)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1529 x80 x1064 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1529)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1529 x882 x1490 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1529)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1529 x934 x1490 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1529)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1529 x97 x262 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1529)))
(assert (axiom_frac_bound 115792089237316195423570985008687907853269984665640564039457584007913129639935 x209))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x209 x1030 x1490 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x209)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x209 x1059 x48 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x209)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x209 x1064 x209 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x209)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x209 x1113 x251 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x209)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x209 x1113 x426 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x209)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x209 x1183 x690 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x209)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x209 x126 x387 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x209)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x209 x1389 x934 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x209)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x209 x1407 x1250 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x209)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x209 x1490 x1030 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x209)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x209 x1490 x882 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x209)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x209 x1514 x172 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x209)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x209 x1529 x241 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x209)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x209 x1529 x690 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x209)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x209 x166 x777 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x209)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x209 x172 x1031 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x209)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x209 x172 x1514 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x209)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x209 x208 x398 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x209)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x209 x209 x262 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x209)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x209 x241 x1186 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x209)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x209 x241 x1529 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x209)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x209 x241 x276 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x209)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x209 x241 x525 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x209)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x209 x251 x1113 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x209)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x209 x262 x209 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x209)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x209 x262 x97 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x209)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x209 x276 x241 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x209)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x209 x311 x606 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x209)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x209 x37 x398 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x209)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x209 x386 x760 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x209)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x209 x400 x262 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x209)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x209 x426 x1113 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x209)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x209 x48 x1059 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x209)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x209 x525 x241 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x209)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x209 x599 (x1296 x733) (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x209)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x209 x690 x1529 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x209)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x209 x734 x1441 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x209)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x209 x780 x262 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x209)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x209 x80 x1064 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x209)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x209 x882 x1490 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x209)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x209 x934 x1490 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x209)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x209 x97 x262 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x209)))
(assert (axiom_frac_bound 115792089237316195423570985008687907853269984665640564039457584007913129639935 x311))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x311 x1030 x1490 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x311)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x311 x1059 x48 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x311)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x311 x1064 x209 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x311)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x311 x1113 x251 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x311)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x311 x1113 x426 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x311)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x311 x1183 x690 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x311)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x311 x126 x387 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x311)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x311 x1389 x934 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x311)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x311 x1407 x1250 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x311)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x311 x1490 x1030 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x311)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x311 x1490 x882 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x311)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x311 x1514 x172 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x311)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x311 x1529 x241 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x311)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x311 x1529 x690 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x311)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x311 x166 x777 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x311)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x311 x172 x1031 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x311)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x311 x172 x1514 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x311)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x311 x208 x398 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x311)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x311 x209 x262 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x311)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x311 x241 x1186 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x311)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x311 x241 x1529 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x311)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x311 x241 x276 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x311)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x311 x241 x525 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x311)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x311 x251 x1113 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x311)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x311 x262 x209 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x311)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x311 x262 x97 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x311)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x311 x276 x241 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x311)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x311 x311 x606 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x311)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x311 x37 x398 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x311)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x311 x386 x760 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x311)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x311 x400 x262 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x311)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x311 x426 x1113 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x311)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x311 x48 x1059 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x311)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x311 x525 x241 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x311)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x311 x599 (x1296 x733) (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x311)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x311 x690 x1529 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x311)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x311 x734 x1441 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x311)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x311 x780 x262 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x311)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x311 x80 x1064 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x311)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x311 x882 x1490 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x311)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x311 x934 x1490 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x311)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x311 x97 x262 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x311)))
(assert (axiom_frac_bound 115792089237316195423570985008687907853269984665640564039457584007913129639935 x734))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x734 x1030 x1490 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x734)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x734 x1059 x48 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x734)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x734 x1064 x209 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x734)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x734 x1113 x251 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x734)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x734 x1113 x426 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x734)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x734 x1183 x690 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x734)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x734 x126 x387 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x734)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x734 x1389 x934 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x734)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x734 x1407 x1250 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x734)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x734 x1490 x1030 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x734)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x734 x1490 x882 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x734)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x734 x1514 x172 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x734)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x734 x1529 x241 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x734)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x734 x1529 x690 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x734)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x734 x166 x777 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x734)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x734 x172 x1031 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x734)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x734 x172 x1514 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x734)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x734 x208 x398 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x734)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x734 x209 x262 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x734)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x734 x241 x1186 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x734)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x734 x241 x1529 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x734)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x734 x241 x276 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x734)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x734 x241 x525 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x734)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x734 x251 x1113 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x734)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x734 x262 x209 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x734)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x734 x262 x97 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x734)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x734 x276 x241 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x734)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x734 x311 x606 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x734)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x734 x37 x398 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x734)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x734 x386 x760 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x734)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x734 x400 x262 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x734)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x734 x426 x1113 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x734)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x734 x48 x1059 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x734)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x734 x525 x241 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x734)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x734 x599 (x1296 x733) (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x734)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x734 x690 x1529 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x734)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x734 x734 x1441 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x734)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x734 x780 x262 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x734)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x734 x80 x1064 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x734)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x734 x882 x1490 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x734)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x734 x934 x1490 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x734)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x734 x97 x262 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x734)))
(assert (axiom_frac_bound x1046 x601))
(assert (axiom_frac_zero x1046 x601 x1030 x1490 (uninterp_frac x1046 x601)))
(assert (axiom_frac_zero x1046 x601 x1059 x48 (uninterp_frac x1046 x601)))
(assert (axiom_frac_zero x1046 x601 x1064 x209 (uninterp_frac x1046 x601)))
(assert (axiom_frac_zero x1046 x601 x1113 x251 (uninterp_frac x1046 x601)))
(assert (axiom_frac_zero x1046 x601 x1113 x426 (uninterp_frac x1046 x601)))
(assert (axiom_frac_zero x1046 x601 x1183 x690 (uninterp_frac x1046 x601)))
(assert (axiom_frac_zero x1046 x601 x126 x387 (uninterp_frac x1046 x601)))
(assert (axiom_frac_zero x1046 x601 x1389 x934 (uninterp_frac x1046 x601)))
(assert (axiom_frac_zero x1046 x601 x1407 x1250 (uninterp_frac x1046 x601)))
(assert (axiom_frac_zero x1046 x601 x1490 x1030 (uninterp_frac x1046 x601)))
(assert (axiom_frac_zero x1046 x601 x1490 x882 (uninterp_frac x1046 x601)))
(assert (axiom_frac_zero x1046 x601 x1514 x172 (uninterp_frac x1046 x601)))
(assert (axiom_frac_zero x1046 x601 x1529 x241 (uninterp_frac x1046 x601)))
(assert (axiom_frac_zero x1046 x601 x1529 x690 (uninterp_frac x1046 x601)))
(assert (axiom_frac_zero x1046 x601 x166 x777 (uninterp_frac x1046 x601)))
(assert (axiom_frac_zero x1046 x601 x172 x1031 (uninterp_frac x1046 x601)))
(assert (axiom_frac_zero x1046 x601 x172 x1514 (uninterp_frac x1046 x601)))
(assert (axiom_frac_zero x1046 x601 x208 x398 (uninterp_frac x1046 x601)))
(assert (axiom_frac_zero x1046 x601 x209 x262 (uninterp_frac x1046 x601)))
(assert (axiom_frac_zero x1046 x601 x241 x1186 (uninterp_frac x1046 x601)))
(assert (axiom_frac_zero x1046 x601 x241 x1529 (uninterp_frac x1046 x601)))
(assert (axiom_frac_zero x1046 x601 x241 x276 (uninterp_frac x1046 x601)))
(assert (axiom_frac_zero x1046 x601 x241 x525 (uninterp_frac x1046 x601)))
(assert (axiom_frac_zero x1046 x601 x251 x1113 (uninterp_frac x1046 x601)))
(assert (axiom_frac_zero x1046 x601 x262 x209 (uninterp_frac x1046 x601)))
(assert (axiom_frac_zero x1046 x601 x262 x97 (uninterp_frac x1046 x601)))
(assert (axiom_frac_zero x1046 x601 x276 x241 (uninterp_frac x1046 x601)))
(assert (axiom_frac_zero x1046 x601 x311 x606 (uninterp_frac x1046 x601)))
(assert (axiom_frac_zero x1046 x601 x37 x398 (uninterp_frac x1046 x601)))
(assert (axiom_frac_zero x1046 x601 x386 x760 (uninterp_frac x1046 x601)))
(assert (axiom_frac_zero x1046 x601 x400 x262 (uninterp_frac x1046 x601)))
(assert (axiom_frac_zero x1046 x601 x426 x1113 (uninterp_frac x1046 x601)))
(assert (axiom_frac_zero x1046 x601 x48 x1059 (uninterp_frac x1046 x601)))
(assert (axiom_frac_zero x1046 x601 x525 x241 (uninterp_frac x1046 x601)))
(assert (axiom_frac_zero x1046 x601 x599 (x1296 x733) (uninterp_frac x1046 x601)))
(assert (axiom_frac_zero x1046 x601 x690 x1529 (uninterp_frac x1046 x601)))
(assert (axiom_frac_zero x1046 x601 x734 x1441 (uninterp_frac x1046 x601)))
(assert (axiom_frac_zero x1046 x601 x780 x262 (uninterp_frac x1046 x601)))
(assert (axiom_frac_zero x1046 x601 x80 x1064 (uninterp_frac x1046 x601)))
(assert (axiom_frac_zero x1046 x601 x882 x1490 (uninterp_frac x1046 x601)))
(assert (axiom_frac_zero x1046 x601 x934 x1490 (uninterp_frac x1046 x601)))
(assert (axiom_frac_zero x1046 x601 x97 x262 (uninterp_frac x1046 x601)))
(assert (axiom_frac_bound x1113 x1529))
(assert (axiom_frac_zero x1113 x1529 x1030 x1490 (uninterp_frac x1113 x1529)))
(assert (axiom_frac_zero x1113 x1529 x1059 x48 (uninterp_frac x1113 x1529)))
(assert (axiom_frac_zero x1113 x1529 x1064 x209 (uninterp_frac x1113 x1529)))
(assert (axiom_frac_zero x1113 x1529 x1113 x251 (uninterp_frac x1113 x1529)))
(assert (axiom_frac_zero x1113 x1529 x1113 x426 (uninterp_frac x1113 x1529)))
(assert (axiom_frac_zero x1113 x1529 x1183 x690 (uninterp_frac x1113 x1529)))
(assert (axiom_frac_zero x1113 x1529 x126 x387 (uninterp_frac x1113 x1529)))
(assert (axiom_frac_zero x1113 x1529 x1389 x934 (uninterp_frac x1113 x1529)))
(assert (axiom_frac_zero x1113 x1529 x1407 x1250 (uninterp_frac x1113 x1529)))
(assert (axiom_frac_zero x1113 x1529 x1490 x1030 (uninterp_frac x1113 x1529)))
(assert (axiom_frac_zero x1113 x1529 x1490 x882 (uninterp_frac x1113 x1529)))
(assert (axiom_frac_zero x1113 x1529 x1514 x172 (uninterp_frac x1113 x1529)))
(assert (axiom_frac_zero x1113 x1529 x1529 x241 (uninterp_frac x1113 x1529)))
(assert (axiom_frac_zero x1113 x1529 x1529 x690 (uninterp_frac x1113 x1529)))
(assert (axiom_frac_zero x1113 x1529 x166 x777 (uninterp_frac x1113 x1529)))
(assert (axiom_frac_zero x1113 x1529 x172 x1031 (uninterp_frac x1113 x1529)))
(assert (axiom_frac_zero x1113 x1529 x172 x1514 (uninterp_frac x1113 x1529)))
(assert (axiom_frac_zero x1113 x1529 x208 x398 (uninterp_frac x1113 x1529)))
(assert (axiom_frac_zero x1113 x1529 x209 x262 (uninterp_frac x1113 x1529)))
(assert (axiom_frac_zero x1113 x1529 x241 x1186 (uninterp_frac x1113 x1529)))
(assert (axiom_frac_zero x1113 x1529 x241 x1529 (uninterp_frac x1113 x1529)))
(assert (axiom_frac_zero x1113 x1529 x241 x276 (uninterp_frac x1113 x1529)))
(assert (axiom_frac_zero x1113 x1529 x241 x525 (uninterp_frac x1113 x1529)))
(assert (axiom_frac_zero x1113 x1529 x251 x1113 (uninterp_frac x1113 x1529)))
(assert (axiom_frac_zero x1113 x1529 x262 x209 (uninterp_frac x1113 x1529)))
(assert (axiom_frac_zero x1113 x1529 x262 x97 (uninterp_frac x1113 x1529)))
(assert (axiom_frac_zero x1113 x1529 x276 x241 (uninterp_frac x1113 x1529)))
(assert (axiom_frac_zero x1113 x1529 x311 x606 (uninterp_frac x1113 x1529)))
(assert (axiom_frac_zero x1113 x1529 x37 x398 (uninterp_frac x1113 x1529)))
(assert (axiom_frac_zero x1113 x1529 x386 x760 (uninterp_frac x1113 x1529)))
(assert (axiom_frac_zero x1113 x1529 x400 x262 (uninterp_frac x1113 x1529)))
(assert (axiom_frac_zero x1113 x1529 x426 x1113 (uninterp_frac x1113 x1529)))
(assert (axiom_frac_zero x1113 x1529 x48 x1059 (uninterp_frac x1113 x1529)))
(assert (axiom_frac_zero x1113 x1529 x525 x241 (uninterp_frac x1113 x1529)))
(assert (axiom_frac_zero x1113 x1529 x599 (x1296 x733) (uninterp_frac x1113 x1529)))
(assert (axiom_frac_zero x1113 x1529 x690 x1529 (uninterp_frac x1113 x1529)))
(assert (axiom_frac_zero x1113 x1529 x734 x1441 (uninterp_frac x1113 x1529)))
(assert (axiom_frac_zero x1113 x1529 x780 x262 (uninterp_frac x1113 x1529)))
(assert (axiom_frac_zero x1113 x1529 x80 x1064 (uninterp_frac x1113 x1529)))
(assert (axiom_frac_zero x1113 x1529 x882 x1490 (uninterp_frac x1113 x1529)))
(assert (axiom_frac_zero x1113 x1529 x934 x1490 (uninterp_frac x1113 x1529)))
(assert (axiom_frac_zero x1113 x1529 x97 x262 (uninterp_frac x1113 x1529)))
(assert (axiom_frac_bound x1113 x209))
(assert (axiom_frac_zero x1113 x209 x1030 x1490 (uninterp_frac x1113 x209)))
(assert (axiom_frac_zero x1113 x209 x1059 x48 (uninterp_frac x1113 x209)))
(assert (axiom_frac_zero x1113 x209 x1064 x209 (uninterp_frac x1113 x209)))
(assert (axiom_frac_zero x1113 x209 x1113 x251 (uninterp_frac x1113 x209)))
(assert (axiom_frac_zero x1113 x209 x1113 x426 (uninterp_frac x1113 x209)))
(assert (axiom_frac_zero x1113 x209 x1183 x690 (uninterp_frac x1113 x209)))
(assert (axiom_frac_zero x1113 x209 x126 x387 (uninterp_frac x1113 x209)))
(assert (axiom_frac_zero x1113 x209 x1389 x934 (uninterp_frac x1113 x209)))
(assert (axiom_frac_zero x1113 x209 x1407 x1250 (uninterp_frac x1113 x209)))
(assert (axiom_frac_zero x1113 x209 x1490 x1030 (uninterp_frac x1113 x209)))
(assert (axiom_frac_zero x1113 x209 x1490 x882 (uninterp_frac x1113 x209)))
(assert (axiom_frac_zero x1113 x209 x1514 x172 (uninterp_frac x1113 x209)))
(assert (axiom_frac_zero x1113 x209 x1529 x241 (uninterp_frac x1113 x209)))
(assert (axiom_frac_zero x1113 x209 x1529 x690 (uninterp_frac x1113 x209)))
(assert (axiom_frac_zero x1113 x209 x166 x777 (uninterp_frac x1113 x209)))
(assert (axiom_frac_zero x1113 x209 x172 x1031 (uninterp_frac x1113 x209)))
(assert (axiom_frac_zero x1113 x209 x172 x1514 (uninterp_frac x1113 x209)))
(assert (axiom_frac_zero x1113 x209 x208 x398 (uninterp_frac x1113 x209)))
(assert (axiom_frac_zero x1113 x209 x209 x262 (uninterp_frac x1113 x209)))
(assert (axiom_frac_zero x1113 x209 x241 x1186 (uninterp_frac x1113 x209)))
(assert (axiom_frac_zero x1113 x209 x241 x1529 (uninterp_frac x1113 x209)))
(assert (axiom_frac_zero x1113 x209 x241 x276 (uninterp_frac x1113 x209)))
(assert (axiom_frac_zero x1113 x209 x241 x525 (uninterp_frac x1113 x209)))
(assert (axiom_frac_zero x1113 x209 x251 x1113 (uninterp_frac x1113 x209)))
(assert (axiom_frac_zero x1113 x209 x262 x209 (uninterp_frac x1113 x209)))
(assert (axiom_frac_zero x1113 x209 x262 x97 (uninterp_frac x1113 x209)))
(assert (axiom_frac_zero x1113 x209 x276 x241 (uninterp_frac x1113 x209)))
(assert (axiom_frac_zero x1113 x209 x311 x606 (uninterp_frac x1113 x209)))
(assert (axiom_frac_zero x1113 x209 x37 x398 (uninterp_frac x1113 x209)))
(assert (axiom_frac_zero x1113 x209 x386 x760 (uninterp_frac x1113 x209)))
(assert (axiom_frac_zero x1113 x209 x400 x262 (uninterp_frac x1113 x209)))
(assert (axiom_frac_zero x1113 x209 x426 x1113 (uninterp_frac x1113 x209)))
(assert (axiom_frac_zero x1113 x209 x48 x1059 (uninterp_frac x1113 x209)))
(assert (axiom_frac_zero x1113 x209 x525 x241 (uninterp_frac x1113 x209)))
(assert (axiom_frac_zero x1113 x209 x599 (x1296 x733) (uninterp_frac x1113 x209)))
(assert (axiom_frac_zero x1113 x209 x690 x1529 (uninterp_frac x1113 x209)))
(assert (axiom_frac_zero x1113 x209 x734 x1441 (uninterp_frac x1113 x209)))
(assert (axiom_frac_zero x1113 x209 x780 x262 (uninterp_frac x1113 x209)))
(assert (axiom_frac_zero x1113 x209 x80 x1064 (uninterp_frac x1113 x209)))
(assert (axiom_frac_zero x1113 x209 x882 x1490 (uninterp_frac x1113 x209)))
(assert (axiom_frac_zero x1113 x209 x934 x1490 (uninterp_frac x1113 x209)))
(assert (axiom_frac_zero x1113 x209 x97 x262 (uninterp_frac x1113 x209)))
(assert (axiom_frac_bound x1239 x200))
(assert (axiom_frac_zero x1239 x200 x1030 x1490 (uninterp_frac x1239 x200)))
(assert (axiom_frac_zero x1239 x200 x1059 x48 (uninterp_frac x1239 x200)))
(assert (axiom_frac_zero x1239 x200 x1064 x209 (uninterp_frac x1239 x200)))
(assert (axiom_frac_zero x1239 x200 x1113 x251 (uninterp_frac x1239 x200)))
(assert (axiom_frac_zero x1239 x200 x1113 x426 (uninterp_frac x1239 x200)))
(assert (axiom_frac_zero x1239 x200 x1183 x690 (uninterp_frac x1239 x200)))
(assert (axiom_frac_zero x1239 x200 x126 x387 (uninterp_frac x1239 x200)))
(assert (axiom_frac_zero x1239 x200 x1389 x934 (uninterp_frac x1239 x200)))
(assert (axiom_frac_zero x1239 x200 x1407 x1250 (uninterp_frac x1239 x200)))
(assert (axiom_frac_zero x1239 x200 x1490 x1030 (uninterp_frac x1239 x200)))
(assert (axiom_frac_zero x1239 x200 x1490 x882 (uninterp_frac x1239 x200)))
(assert (axiom_frac_zero x1239 x200 x1514 x172 (uninterp_frac x1239 x200)))
(assert (axiom_frac_zero x1239 x200 x1529 x241 (uninterp_frac x1239 x200)))
(assert (axiom_frac_zero x1239 x200 x1529 x690 (uninterp_frac x1239 x200)))
(assert (axiom_frac_zero x1239 x200 x166 x777 (uninterp_frac x1239 x200)))
(assert (axiom_frac_zero x1239 x200 x172 x1031 (uninterp_frac x1239 x200)))
(assert (axiom_frac_zero x1239 x200 x172 x1514 (uninterp_frac x1239 x200)))
(assert (axiom_frac_zero x1239 x200 x208 x398 (uninterp_frac x1239 x200)))
(assert (axiom_frac_zero x1239 x200 x209 x262 (uninterp_frac x1239 x200)))
(assert (axiom_frac_zero x1239 x200 x241 x1186 (uninterp_frac x1239 x200)))
(assert (axiom_frac_zero x1239 x200 x241 x1529 (uninterp_frac x1239 x200)))
(assert (axiom_frac_zero x1239 x200 x241 x276 (uninterp_frac x1239 x200)))
(assert (axiom_frac_zero x1239 x200 x241 x525 (uninterp_frac x1239 x200)))
(assert (axiom_frac_zero x1239 x200 x251 x1113 (uninterp_frac x1239 x200)))
(assert (axiom_frac_zero x1239 x200 x262 x209 (uninterp_frac x1239 x200)))
(assert (axiom_frac_zero x1239 x200 x262 x97 (uninterp_frac x1239 x200)))
(assert (axiom_frac_zero x1239 x200 x276 x241 (uninterp_frac x1239 x200)))
(assert (axiom_frac_zero x1239 x200 x311 x606 (uninterp_frac x1239 x200)))
(assert (axiom_frac_zero x1239 x200 x37 x398 (uninterp_frac x1239 x200)))
(assert (axiom_frac_zero x1239 x200 x386 x760 (uninterp_frac x1239 x200)))
(assert (axiom_frac_zero x1239 x200 x400 x262 (uninterp_frac x1239 x200)))
(assert (axiom_frac_zero x1239 x200 x426 x1113 (uninterp_frac x1239 x200)))
(assert (axiom_frac_zero x1239 x200 x48 x1059 (uninterp_frac x1239 x200)))
(assert (axiom_frac_zero x1239 x200 x525 x241 (uninterp_frac x1239 x200)))
(assert (axiom_frac_zero x1239 x200 x599 (x1296 x733) (uninterp_frac x1239 x200)))
(assert (axiom_frac_zero x1239 x200 x690 x1529 (uninterp_frac x1239 x200)))
(assert (axiom_frac_zero x1239 x200 x734 x1441 (uninterp_frac x1239 x200)))
(assert (axiom_frac_zero x1239 x200 x780 x262 (uninterp_frac x1239 x200)))
(assert (axiom_frac_zero x1239 x200 x80 x1064 (uninterp_frac x1239 x200)))
(assert (axiom_frac_zero x1239 x200 x882 x1490 (uninterp_frac x1239 x200)))
(assert (axiom_frac_zero x1239 x200 x934 x1490 (uninterp_frac x1239 x200)))
(assert (axiom_frac_zero x1239 x200 x97 x262 (uninterp_frac x1239 x200)))
(assert (axiom_frac_bound x1259 2))
(assert (axiom_frac_zero x1259 2 x1030 x1490 (uninterp_frac x1259 2)))
(assert (axiom_frac_zero x1259 2 x1059 x48 (uninterp_frac x1259 2)))
(assert (axiom_frac_zero x1259 2 x1064 x209 (uninterp_frac x1259 2)))
(assert (axiom_frac_zero x1259 2 x1113 x251 (uninterp_frac x1259 2)))
(assert (axiom_frac_zero x1259 2 x1113 x426 (uninterp_frac x1259 2)))
(assert (axiom_frac_zero x1259 2 x1183 x690 (uninterp_frac x1259 2)))
(assert (axiom_frac_zero x1259 2 x126 x387 (uninterp_frac x1259 2)))
(assert (axiom_frac_zero x1259 2 x1389 x934 (uninterp_frac x1259 2)))
(assert (axiom_frac_zero x1259 2 x1407 x1250 (uninterp_frac x1259 2)))
(assert (axiom_frac_zero x1259 2 x1490 x1030 (uninterp_frac x1259 2)))
(assert (axiom_frac_zero x1259 2 x1490 x882 (uninterp_frac x1259 2)))
(assert (axiom_frac_zero x1259 2 x1514 x172 (uninterp_frac x1259 2)))
(assert (axiom_frac_zero x1259 2 x1529 x241 (uninterp_frac x1259 2)))
(assert (axiom_frac_zero x1259 2 x1529 x690 (uninterp_frac x1259 2)))
(assert (axiom_frac_zero x1259 2 x166 x777 (uninterp_frac x1259 2)))
(assert (axiom_frac_zero x1259 2 x172 x1031 (uninterp_frac x1259 2)))
(assert (axiom_frac_zero x1259 2 x172 x1514 (uninterp_frac x1259 2)))
(assert (axiom_frac_zero x1259 2 x208 x398 (uninterp_frac x1259 2)))
(assert (axiom_frac_zero x1259 2 x209 x262 (uninterp_frac x1259 2)))
(assert (axiom_frac_zero x1259 2 x241 x1186 (uninterp_frac x1259 2)))
(assert (axiom_frac_zero x1259 2 x241 x1529 (uninterp_frac x1259 2)))
(assert (axiom_frac_zero x1259 2 x241 x276 (uninterp_frac x1259 2)))
(assert (axiom_frac_zero x1259 2 x241 x525 (uninterp_frac x1259 2)))
(assert (axiom_frac_zero x1259 2 x251 x1113 (uninterp_frac x1259 2)))
(assert (axiom_frac_zero x1259 2 x262 x209 (uninterp_frac x1259 2)))
(assert (axiom_frac_zero x1259 2 x262 x97 (uninterp_frac x1259 2)))
(assert (axiom_frac_zero x1259 2 x276 x241 (uninterp_frac x1259 2)))
(assert (axiom_frac_zero x1259 2 x311 x606 (uninterp_frac x1259 2)))
(assert (axiom_frac_zero x1259 2 x37 x398 (uninterp_frac x1259 2)))
(assert (axiom_frac_zero x1259 2 x386 x760 (uninterp_frac x1259 2)))
(assert (axiom_frac_zero x1259 2 x400 x262 (uninterp_frac x1259 2)))
(assert (axiom_frac_zero x1259 2 x426 x1113 (uninterp_frac x1259 2)))
(assert (axiom_frac_zero x1259 2 x48 x1059 (uninterp_frac x1259 2)))
(assert (axiom_frac_zero x1259 2 x525 x241 (uninterp_frac x1259 2)))
(assert (axiom_frac_zero x1259 2 x599 (x1296 x733) (uninterp_frac x1259 2)))
(assert (axiom_frac_zero x1259 2 x690 x1529 (uninterp_frac x1259 2)))
(assert (axiom_frac_zero x1259 2 x734 x1441 (uninterp_frac x1259 2)))
(assert (axiom_frac_zero x1259 2 x780 x262 (uninterp_frac x1259 2)))
(assert (axiom_frac_zero x1259 2 x80 x1064 (uninterp_frac x1259 2)))
(assert (axiom_frac_zero x1259 2 x882 x1490 (uninterp_frac x1259 2)))
(assert (axiom_frac_zero x1259 2 x934 x1490 (uninterp_frac x1259 2)))
(assert (axiom_frac_zero x1259 2 x97 x262 (uninterp_frac x1259 2)))
(assert (axiom_frac_bound x1481 2))
(assert (axiom_frac_zero x1481 2 x1030 x1490 (uninterp_frac x1481 2)))
(assert (axiom_frac_zero x1481 2 x1059 x48 (uninterp_frac x1481 2)))
(assert (axiom_frac_zero x1481 2 x1064 x209 (uninterp_frac x1481 2)))
(assert (axiom_frac_zero x1481 2 x1113 x251 (uninterp_frac x1481 2)))
(assert (axiom_frac_zero x1481 2 x1113 x426 (uninterp_frac x1481 2)))
(assert (axiom_frac_zero x1481 2 x1183 x690 (uninterp_frac x1481 2)))
(assert (axiom_frac_zero x1481 2 x126 x387 (uninterp_frac x1481 2)))
(assert (axiom_frac_zero x1481 2 x1389 x934 (uninterp_frac x1481 2)))
(assert (axiom_frac_zero x1481 2 x1407 x1250 (uninterp_frac x1481 2)))
(assert (axiom_frac_zero x1481 2 x1490 x1030 (uninterp_frac x1481 2)))
(assert (axiom_frac_zero x1481 2 x1490 x882 (uninterp_frac x1481 2)))
(assert (axiom_frac_zero x1481 2 x1514 x172 (uninterp_frac x1481 2)))
(assert (axiom_frac_zero x1481 2 x1529 x241 (uninterp_frac x1481 2)))
(assert (axiom_frac_zero x1481 2 x1529 x690 (uninterp_frac x1481 2)))
(assert (axiom_frac_zero x1481 2 x166 x777 (uninterp_frac x1481 2)))
(assert (axiom_frac_zero x1481 2 x172 x1031 (uninterp_frac x1481 2)))
(assert (axiom_frac_zero x1481 2 x172 x1514 (uninterp_frac x1481 2)))
(assert (axiom_frac_zero x1481 2 x208 x398 (uninterp_frac x1481 2)))
(assert (axiom_frac_zero x1481 2 x209 x262 (uninterp_frac x1481 2)))
(assert (axiom_frac_zero x1481 2 x241 x1186 (uninterp_frac x1481 2)))
(assert (axiom_frac_zero x1481 2 x241 x1529 (uninterp_frac x1481 2)))
(assert (axiom_frac_zero x1481 2 x241 x276 (uninterp_frac x1481 2)))
(assert (axiom_frac_zero x1481 2 x241 x525 (uninterp_frac x1481 2)))
(assert (axiom_frac_zero x1481 2 x251 x1113 (uninterp_frac x1481 2)))
(assert (axiom_frac_zero x1481 2 x262 x209 (uninterp_frac x1481 2)))
(assert (axiom_frac_zero x1481 2 x262 x97 (uninterp_frac x1481 2)))
(assert (axiom_frac_zero x1481 2 x276 x241 (uninterp_frac x1481 2)))
(assert (axiom_frac_zero x1481 2 x311 x606 (uninterp_frac x1481 2)))
(assert (axiom_frac_zero x1481 2 x37 x398 (uninterp_frac x1481 2)))
(assert (axiom_frac_zero x1481 2 x386 x760 (uninterp_frac x1481 2)))
(assert (axiom_frac_zero x1481 2 x400 x262 (uninterp_frac x1481 2)))
(assert (axiom_frac_zero x1481 2 x426 x1113 (uninterp_frac x1481 2)))
(assert (axiom_frac_zero x1481 2 x48 x1059 (uninterp_frac x1481 2)))
(assert (axiom_frac_zero x1481 2 x525 x241 (uninterp_frac x1481 2)))
(assert (axiom_frac_zero x1481 2 x599 (x1296 x733) (uninterp_frac x1481 2)))
(assert (axiom_frac_zero x1481 2 x690 x1529 (uninterp_frac x1481 2)))
(assert (axiom_frac_zero x1481 2 x734 x1441 (uninterp_frac x1481 2)))
(assert (axiom_frac_zero x1481 2 x780 x262 (uninterp_frac x1481 2)))
(assert (axiom_frac_zero x1481 2 x80 x1064 (uninterp_frac x1481 2)))
(assert (axiom_frac_zero x1481 2 x882 x1490 (uninterp_frac x1481 2)))
(assert (axiom_frac_zero x1481 2 x934 x1490 (uninterp_frac x1481 2)))
(assert (axiom_frac_zero x1481 2 x97 x262 (uninterp_frac x1481 2)))
(assert (axiom_frac_bound x1589 x547))
(assert (axiom_frac_zero x1589 x547 x1030 x1490 (uninterp_frac x1589 x547)))
(assert (axiom_frac_zero x1589 x547 x1059 x48 (uninterp_frac x1589 x547)))
(assert (axiom_frac_zero x1589 x547 x1064 x209 (uninterp_frac x1589 x547)))
(assert (axiom_frac_zero x1589 x547 x1113 x251 (uninterp_frac x1589 x547)))
(assert (axiom_frac_zero x1589 x547 x1113 x426 (uninterp_frac x1589 x547)))
(assert (axiom_frac_zero x1589 x547 x1183 x690 (uninterp_frac x1589 x547)))
(assert (axiom_frac_zero x1589 x547 x126 x387 (uninterp_frac x1589 x547)))
(assert (axiom_frac_zero x1589 x547 x1389 x934 (uninterp_frac x1589 x547)))
(assert (axiom_frac_zero x1589 x547 x1407 x1250 (uninterp_frac x1589 x547)))
(assert (axiom_frac_zero x1589 x547 x1490 x1030 (uninterp_frac x1589 x547)))
(assert (axiom_frac_zero x1589 x547 x1490 x882 (uninterp_frac x1589 x547)))
(assert (axiom_frac_zero x1589 x547 x1514 x172 (uninterp_frac x1589 x547)))
(assert (axiom_frac_zero x1589 x547 x1529 x241 (uninterp_frac x1589 x547)))
(assert (axiom_frac_zero x1589 x547 x1529 x690 (uninterp_frac x1589 x547)))
(assert (axiom_frac_zero x1589 x547 x166 x777 (uninterp_frac x1589 x547)))
(assert (axiom_frac_zero x1589 x547 x172 x1031 (uninterp_frac x1589 x547)))
(assert (axiom_frac_zero x1589 x547 x172 x1514 (uninterp_frac x1589 x547)))
(assert (axiom_frac_zero x1589 x547 x208 x398 (uninterp_frac x1589 x547)))
(assert (axiom_frac_zero x1589 x547 x209 x262 (uninterp_frac x1589 x547)))
(assert (axiom_frac_zero x1589 x547 x241 x1186 (uninterp_frac x1589 x547)))
(assert (axiom_frac_zero x1589 x547 x241 x1529 (uninterp_frac x1589 x547)))
(assert (axiom_frac_zero x1589 x547 x241 x276 (uninterp_frac x1589 x547)))
(assert (axiom_frac_zero x1589 x547 x241 x525 (uninterp_frac x1589 x547)))
(assert (axiom_frac_zero x1589 x547 x251 x1113 (uninterp_frac x1589 x547)))
(assert (axiom_frac_zero x1589 x547 x262 x209 (uninterp_frac x1589 x547)))
(assert (axiom_frac_zero x1589 x547 x262 x97 (uninterp_frac x1589 x547)))
(assert (axiom_frac_zero x1589 x547 x276 x241 (uninterp_frac x1589 x547)))
(assert (axiom_frac_zero x1589 x547 x311 x606 (uninterp_frac x1589 x547)))
(assert (axiom_frac_zero x1589 x547 x37 x398 (uninterp_frac x1589 x547)))
(assert (axiom_frac_zero x1589 x547 x386 x760 (uninterp_frac x1589 x547)))
(assert (axiom_frac_zero x1589 x547 x400 x262 (uninterp_frac x1589 x547)))
(assert (axiom_frac_zero x1589 x547 x426 x1113 (uninterp_frac x1589 x547)))
(assert (axiom_frac_zero x1589 x547 x48 x1059 (uninterp_frac x1589 x547)))
(assert (axiom_frac_zero x1589 x547 x525 x241 (uninterp_frac x1589 x547)))
(assert (axiom_frac_zero x1589 x547 x599 (x1296 x733) (uninterp_frac x1589 x547)))
(assert (axiom_frac_zero x1589 x547 x690 x1529 (uninterp_frac x1589 x547)))
(assert (axiom_frac_zero x1589 x547 x734 x1441 (uninterp_frac x1589 x547)))
(assert (axiom_frac_zero x1589 x547 x780 x262 (uninterp_frac x1589 x547)))
(assert (axiom_frac_zero x1589 x547 x80 x1064 (uninterp_frac x1589 x547)))
(assert (axiom_frac_zero x1589 x547 x882 x1490 (uninterp_frac x1589 x547)))
(assert (axiom_frac_zero x1589 x547 x934 x1490 (uninterp_frac x1589 x547)))
(assert (axiom_frac_zero x1589 x547 x97 x262 (uninterp_frac x1589 x547)))
(assert (axiom_frac_bound x473 x74))
(assert (axiom_frac_zero x473 x74 x1030 x1490 (uninterp_frac x473 x74)))
(assert (axiom_frac_zero x473 x74 x1059 x48 (uninterp_frac x473 x74)))
(assert (axiom_frac_zero x473 x74 x1064 x209 (uninterp_frac x473 x74)))
(assert (axiom_frac_zero x473 x74 x1113 x251 (uninterp_frac x473 x74)))
(assert (axiom_frac_zero x473 x74 x1113 x426 (uninterp_frac x473 x74)))
(assert (axiom_frac_zero x473 x74 x1183 x690 (uninterp_frac x473 x74)))
(assert (axiom_frac_zero x473 x74 x126 x387 (uninterp_frac x473 x74)))
(assert (axiom_frac_zero x473 x74 x1389 x934 (uninterp_frac x473 x74)))
(assert (axiom_frac_zero x473 x74 x1407 x1250 (uninterp_frac x473 x74)))
(assert (axiom_frac_zero x473 x74 x1490 x1030 (uninterp_frac x473 x74)))
(assert (axiom_frac_zero x473 x74 x1490 x882 (uninterp_frac x473 x74)))
(assert (axiom_frac_zero x473 x74 x1514 x172 (uninterp_frac x473 x74)))
(assert (axiom_frac_zero x473 x74 x1529 x241 (uninterp_frac x473 x74)))
(assert (axiom_frac_zero x473 x74 x1529 x690 (uninterp_frac x473 x74)))
(assert (axiom_frac_zero x473 x74 x166 x777 (uninterp_frac x473 x74)))
(assert (axiom_frac_zero x473 x74 x172 x1031 (uninterp_frac x473 x74)))
(assert (axiom_frac_zero x473 x74 x172 x1514 (uninterp_frac x473 x74)))
(assert (axiom_frac_zero x473 x74 x208 x398 (uninterp_frac x473 x74)))
(assert (axiom_frac_zero x473 x74 x209 x262 (uninterp_frac x473 x74)))
(assert (axiom_frac_zero x473 x74 x241 x1186 (uninterp_frac x473 x74)))
(assert (axiom_frac_zero x473 x74 x241 x1529 (uninterp_frac x473 x74)))
(assert (axiom_frac_zero x473 x74 x241 x276 (uninterp_frac x473 x74)))
(assert (axiom_frac_zero x473 x74 x241 x525 (uninterp_frac x473 x74)))
(assert (axiom_frac_zero x473 x74 x251 x1113 (uninterp_frac x473 x74)))
(assert (axiom_frac_zero x473 x74 x262 x209 (uninterp_frac x473 x74)))
(assert (axiom_frac_zero x473 x74 x262 x97 (uninterp_frac x473 x74)))
(assert (axiom_frac_zero x473 x74 x276 x241 (uninterp_frac x473 x74)))
(assert (axiom_frac_zero x473 x74 x311 x606 (uninterp_frac x473 x74)))
(assert (axiom_frac_zero x473 x74 x37 x398 (uninterp_frac x473 x74)))
(assert (axiom_frac_zero x473 x74 x386 x760 (uninterp_frac x473 x74)))
(assert (axiom_frac_zero x473 x74 x400 x262 (uninterp_frac x473 x74)))
(assert (axiom_frac_zero x473 x74 x426 x1113 (uninterp_frac x473 x74)))
(assert (axiom_frac_zero x473 x74 x48 x1059 (uninterp_frac x473 x74)))
(assert (axiom_frac_zero x473 x74 x525 x241 (uninterp_frac x473 x74)))
(assert (axiom_frac_zero x473 x74 x599 (x1296 x733) (uninterp_frac x473 x74)))
(assert (axiom_frac_zero x473 x74 x690 x1529 (uninterp_frac x473 x74)))
(assert (axiom_frac_zero x473 x74 x734 x1441 (uninterp_frac x473 x74)))
(assert (axiom_frac_zero x473 x74 x780 x262 (uninterp_frac x473 x74)))
(assert (axiom_frac_zero x473 x74 x80 x1064 (uninterp_frac x473 x74)))
(assert (axiom_frac_zero x473 x74 x882 x1490 (uninterp_frac x473 x74)))
(assert (axiom_frac_zero x473 x74 x934 x1490 (uninterp_frac x473 x74)))
(assert (axiom_frac_zero x473 x74 x97 x262 (uninterp_frac x473 x74)))
(assert (axiom_frac_bound x476 1461501637330902918203684832716283019655932542976))
(assert (axiom_frac_zero x476 1461501637330902918203684832716283019655932542976 x1030 x1490 (uninterp_frac x476 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x476 1461501637330902918203684832716283019655932542976 x1059 x48 (uninterp_frac x476 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x476 1461501637330902918203684832716283019655932542976 x1064 x209 (uninterp_frac x476 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x476 1461501637330902918203684832716283019655932542976 x1113 x251 (uninterp_frac x476 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x476 1461501637330902918203684832716283019655932542976 x1113 x426 (uninterp_frac x476 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x476 1461501637330902918203684832716283019655932542976 x1183 x690 (uninterp_frac x476 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x476 1461501637330902918203684832716283019655932542976 x126 x387 (uninterp_frac x476 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x476 1461501637330902918203684832716283019655932542976 x1389 x934 (uninterp_frac x476 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x476 1461501637330902918203684832716283019655932542976 x1407 x1250 (uninterp_frac x476 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x476 1461501637330902918203684832716283019655932542976 x1490 x1030 (uninterp_frac x476 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x476 1461501637330902918203684832716283019655932542976 x1490 x882 (uninterp_frac x476 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x476 1461501637330902918203684832716283019655932542976 x1514 x172 (uninterp_frac x476 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x476 1461501637330902918203684832716283019655932542976 x1529 x241 (uninterp_frac x476 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x476 1461501637330902918203684832716283019655932542976 x1529 x690 (uninterp_frac x476 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x476 1461501637330902918203684832716283019655932542976 x166 x777 (uninterp_frac x476 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x476 1461501637330902918203684832716283019655932542976 x172 x1031 (uninterp_frac x476 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x476 1461501637330902918203684832716283019655932542976 x172 x1514 (uninterp_frac x476 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x476 1461501637330902918203684832716283019655932542976 x208 x398 (uninterp_frac x476 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x476 1461501637330902918203684832716283019655932542976 x209 x262 (uninterp_frac x476 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x476 1461501637330902918203684832716283019655932542976 x241 x1186 (uninterp_frac x476 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x476 1461501637330902918203684832716283019655932542976 x241 x1529 (uninterp_frac x476 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x476 1461501637330902918203684832716283019655932542976 x241 x276 (uninterp_frac x476 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x476 1461501637330902918203684832716283019655932542976 x241 x525 (uninterp_frac x476 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x476 1461501637330902918203684832716283019655932542976 x251 x1113 (uninterp_frac x476 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x476 1461501637330902918203684832716283019655932542976 x262 x209 (uninterp_frac x476 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x476 1461501637330902918203684832716283019655932542976 x262 x97 (uninterp_frac x476 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x476 1461501637330902918203684832716283019655932542976 x276 x241 (uninterp_frac x476 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x476 1461501637330902918203684832716283019655932542976 x311 x606 (uninterp_frac x476 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x476 1461501637330902918203684832716283019655932542976 x37 x398 (uninterp_frac x476 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x476 1461501637330902918203684832716283019655932542976 x386 x760 (uninterp_frac x476 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x476 1461501637330902918203684832716283019655932542976 x400 x262 (uninterp_frac x476 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x476 1461501637330902918203684832716283019655932542976 x426 x1113 (uninterp_frac x476 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x476 1461501637330902918203684832716283019655932542976 x48 x1059 (uninterp_frac x476 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x476 1461501637330902918203684832716283019655932542976 x525 x241 (uninterp_frac x476 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x476 1461501637330902918203684832716283019655932542976 x599 (x1296 x733) (uninterp_frac x476 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x476 1461501637330902918203684832716283019655932542976 x690 x1529 (uninterp_frac x476 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x476 1461501637330902918203684832716283019655932542976 x734 x1441 (uninterp_frac x476 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x476 1461501637330902918203684832716283019655932542976 x780 x262 (uninterp_frac x476 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x476 1461501637330902918203684832716283019655932542976 x80 x1064 (uninterp_frac x476 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x476 1461501637330902918203684832716283019655932542976 x882 x1490 (uninterp_frac x476 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x476 1461501637330902918203684832716283019655932542976 x934 x1490 (uninterp_frac x476 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x476 1461501637330902918203684832716283019655932542976 x97 x262 (uninterp_frac x476 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_bound x476 6277101735386680763835789423207666416102355444464034512896))
(assert (axiom_frac_zero x476 6277101735386680763835789423207666416102355444464034512896 x1030 x1490 (uninterp_frac x476 6277101735386680763835789423207666416102355444464034512896)))
(assert (axiom_frac_zero x476 6277101735386680763835789423207666416102355444464034512896 x1059 x48 (uninterp_frac x476 6277101735386680763835789423207666416102355444464034512896)))
(assert (axiom_frac_zero x476 6277101735386680763835789423207666416102355444464034512896 x1064 x209 (uninterp_frac x476 6277101735386680763835789423207666416102355444464034512896)))
(assert (axiom_frac_zero x476 6277101735386680763835789423207666416102355444464034512896 x1113 x251 (uninterp_frac x476 6277101735386680763835789423207666416102355444464034512896)))
(assert (axiom_frac_zero x476 6277101735386680763835789423207666416102355444464034512896 x1113 x426 (uninterp_frac x476 6277101735386680763835789423207666416102355444464034512896)))
(assert (axiom_frac_zero x476 6277101735386680763835789423207666416102355444464034512896 x1183 x690 (uninterp_frac x476 6277101735386680763835789423207666416102355444464034512896)))
(assert (axiom_frac_zero x476 6277101735386680763835789423207666416102355444464034512896 x126 x387 (uninterp_frac x476 6277101735386680763835789423207666416102355444464034512896)))
(assert (axiom_frac_zero x476 6277101735386680763835789423207666416102355444464034512896 x1389 x934 (uninterp_frac x476 6277101735386680763835789423207666416102355444464034512896)))
(assert (axiom_frac_zero x476 6277101735386680763835789423207666416102355444464034512896 x1407 x1250 (uninterp_frac x476 6277101735386680763835789423207666416102355444464034512896)))
(assert (axiom_frac_zero x476 6277101735386680763835789423207666416102355444464034512896 x1490 x1030 (uninterp_frac x476 6277101735386680763835789423207666416102355444464034512896)))
(assert (axiom_frac_zero x476 6277101735386680763835789423207666416102355444464034512896 x1490 x882 (uninterp_frac x476 6277101735386680763835789423207666416102355444464034512896)))
(assert (axiom_frac_zero x476 6277101735386680763835789423207666416102355444464034512896 x1514 x172 (uninterp_frac x476 6277101735386680763835789423207666416102355444464034512896)))
(assert (axiom_frac_zero x476 6277101735386680763835789423207666416102355444464034512896 x1529 x241 (uninterp_frac x476 6277101735386680763835789423207666416102355444464034512896)))
(assert (axiom_frac_zero x476 6277101735386680763835789423207666416102355444464034512896 x1529 x690 (uninterp_frac x476 6277101735386680763835789423207666416102355444464034512896)))
(assert (axiom_frac_zero x476 6277101735386680763835789423207666416102355444464034512896 x166 x777 (uninterp_frac x476 6277101735386680763835789423207666416102355444464034512896)))
(assert (axiom_frac_zero x476 6277101735386680763835789423207666416102355444464034512896 x172 x1031 (uninterp_frac x476 6277101735386680763835789423207666416102355444464034512896)))
(assert (axiom_frac_zero x476 6277101735386680763835789423207666416102355444464034512896 x172 x1514 (uninterp_frac x476 6277101735386680763835789423207666416102355444464034512896)))
(assert (axiom_frac_zero x476 6277101735386680763835789423207666416102355444464034512896 x208 x398 (uninterp_frac x476 6277101735386680763835789423207666416102355444464034512896)))
(assert (axiom_frac_zero x476 6277101735386680763835789423207666416102355444464034512896 x209 x262 (uninterp_frac x476 6277101735386680763835789423207666416102355444464034512896)))
(assert (axiom_frac_zero x476 6277101735386680763835789423207666416102355444464034512896 x241 x1186 (uninterp_frac x476 6277101735386680763835789423207666416102355444464034512896)))
(assert (axiom_frac_zero x476 6277101735386680763835789423207666416102355444464034512896 x241 x1529 (uninterp_frac x476 6277101735386680763835789423207666416102355444464034512896)))
(assert (axiom_frac_zero x476 6277101735386680763835789423207666416102355444464034512896 x241 x276 (uninterp_frac x476 6277101735386680763835789423207666416102355444464034512896)))
(assert (axiom_frac_zero x476 6277101735386680763835789423207666416102355444464034512896 x241 x525 (uninterp_frac x476 6277101735386680763835789423207666416102355444464034512896)))
(assert (axiom_frac_zero x476 6277101735386680763835789423207666416102355444464034512896 x251 x1113 (uninterp_frac x476 6277101735386680763835789423207666416102355444464034512896)))
(assert (axiom_frac_zero x476 6277101735386680763835789423207666416102355444464034512896 x262 x209 (uninterp_frac x476 6277101735386680763835789423207666416102355444464034512896)))
(assert (axiom_frac_zero x476 6277101735386680763835789423207666416102355444464034512896 x262 x97 (uninterp_frac x476 6277101735386680763835789423207666416102355444464034512896)))
(assert (axiom_frac_zero x476 6277101735386680763835789423207666416102355444464034512896 x276 x241 (uninterp_frac x476 6277101735386680763835789423207666416102355444464034512896)))
(assert (axiom_frac_zero x476 6277101735386680763835789423207666416102355444464034512896 x311 x606 (uninterp_frac x476 6277101735386680763835789423207666416102355444464034512896)))
(assert (axiom_frac_zero x476 6277101735386680763835789423207666416102355444464034512896 x37 x398 (uninterp_frac x476 6277101735386680763835789423207666416102355444464034512896)))
(assert (axiom_frac_zero x476 6277101735386680763835789423207666416102355444464034512896 x386 x760 (uninterp_frac x476 6277101735386680763835789423207666416102355444464034512896)))
(assert (axiom_frac_zero x476 6277101735386680763835789423207666416102355444464034512896 x400 x262 (uninterp_frac x476 6277101735386680763835789423207666416102355444464034512896)))
(assert (axiom_frac_zero x476 6277101735386680763835789423207666416102355444464034512896 x426 x1113 (uninterp_frac x476 6277101735386680763835789423207666416102355444464034512896)))
(assert (axiom_frac_zero x476 6277101735386680763835789423207666416102355444464034512896 x48 x1059 (uninterp_frac x476 6277101735386680763835789423207666416102355444464034512896)))
(assert (axiom_frac_zero x476 6277101735386680763835789423207666416102355444464034512896 x525 x241 (uninterp_frac x476 6277101735386680763835789423207666416102355444464034512896)))
(assert (axiom_frac_zero x476 6277101735386680763835789423207666416102355444464034512896 x599 (x1296 x733) (uninterp_frac x476 6277101735386680763835789423207666416102355444464034512896)))
(assert (axiom_frac_zero x476 6277101735386680763835789423207666416102355444464034512896 x690 x1529 (uninterp_frac x476 6277101735386680763835789423207666416102355444464034512896)))
(assert (axiom_frac_zero x476 6277101735386680763835789423207666416102355444464034512896 x734 x1441 (uninterp_frac x476 6277101735386680763835789423207666416102355444464034512896)))
(assert (axiom_frac_zero x476 6277101735386680763835789423207666416102355444464034512896 x780 x262 (uninterp_frac x476 6277101735386680763835789423207666416102355444464034512896)))
(assert (axiom_frac_zero x476 6277101735386680763835789423207666416102355444464034512896 x80 x1064 (uninterp_frac x476 6277101735386680763835789423207666416102355444464034512896)))
(assert (axiom_frac_zero x476 6277101735386680763835789423207666416102355444464034512896 x882 x1490 (uninterp_frac x476 6277101735386680763835789423207666416102355444464034512896)))
(assert (axiom_frac_zero x476 6277101735386680763835789423207666416102355444464034512896 x934 x1490 (uninterp_frac x476 6277101735386680763835789423207666416102355444464034512896)))
(assert (axiom_frac_zero x476 6277101735386680763835789423207666416102355444464034512896 x97 x262 (uninterp_frac x476 6277101735386680763835789423207666416102355444464034512896)))
(assert (axiom_frac_bound x476 95780971304118053647396689196894323976171195136475136))
(assert (axiom_frac_zero x476 95780971304118053647396689196894323976171195136475136 x1030 x1490 (uninterp_frac x476 95780971304118053647396689196894323976171195136475136)))
(assert (axiom_frac_zero x476 95780971304118053647396689196894323976171195136475136 x1059 x48 (uninterp_frac x476 95780971304118053647396689196894323976171195136475136)))
(assert (axiom_frac_zero x476 95780971304118053647396689196894323976171195136475136 x1064 x209 (uninterp_frac x476 95780971304118053647396689196894323976171195136475136)))
(assert (axiom_frac_zero x476 95780971304118053647396689196894323976171195136475136 x1113 x251 (uninterp_frac x476 95780971304118053647396689196894323976171195136475136)))
(assert (axiom_frac_zero x476 95780971304118053647396689196894323976171195136475136 x1113 x426 (uninterp_frac x476 95780971304118053647396689196894323976171195136475136)))
(assert (axiom_frac_zero x476 95780971304118053647396689196894323976171195136475136 x1183 x690 (uninterp_frac x476 95780971304118053647396689196894323976171195136475136)))
(assert (axiom_frac_zero x476 95780971304118053647396689196894323976171195136475136 x126 x387 (uninterp_frac x476 95780971304118053647396689196894323976171195136475136)))
(assert (axiom_frac_zero x476 95780971304118053647396689196894323976171195136475136 x1389 x934 (uninterp_frac x476 95780971304118053647396689196894323976171195136475136)))
(assert (axiom_frac_zero x476 95780971304118053647396689196894323976171195136475136 x1407 x1250 (uninterp_frac x476 95780971304118053647396689196894323976171195136475136)))
(assert (axiom_frac_zero x476 95780971304118053647396689196894323976171195136475136 x1490 x1030 (uninterp_frac x476 95780971304118053647396689196894323976171195136475136)))
(assert (axiom_frac_zero x476 95780971304118053647396689196894323976171195136475136 x1490 x882 (uninterp_frac x476 95780971304118053647396689196894323976171195136475136)))
(assert (axiom_frac_zero x476 95780971304118053647396689196894323976171195136475136 x1514 x172 (uninterp_frac x476 95780971304118053647396689196894323976171195136475136)))
(assert (axiom_frac_zero x476 95780971304118053647396689196894323976171195136475136 x1529 x241 (uninterp_frac x476 95780971304118053647396689196894323976171195136475136)))
(assert (axiom_frac_zero x476 95780971304118053647396689196894323976171195136475136 x1529 x690 (uninterp_frac x476 95780971304118053647396689196894323976171195136475136)))
(assert (axiom_frac_zero x476 95780971304118053647396689196894323976171195136475136 x166 x777 (uninterp_frac x476 95780971304118053647396689196894323976171195136475136)))
(assert (axiom_frac_zero x476 95780971304118053647396689196894323976171195136475136 x172 x1031 (uninterp_frac x476 95780971304118053647396689196894323976171195136475136)))
(assert (axiom_frac_zero x476 95780971304118053647396689196894323976171195136475136 x172 x1514 (uninterp_frac x476 95780971304118053647396689196894323976171195136475136)))
(assert (axiom_frac_zero x476 95780971304118053647396689196894323976171195136475136 x208 x398 (uninterp_frac x476 95780971304118053647396689196894323976171195136475136)))
(assert (axiom_frac_zero x476 95780971304118053647396689196894323976171195136475136 x209 x262 (uninterp_frac x476 95780971304118053647396689196894323976171195136475136)))
(assert (axiom_frac_zero x476 95780971304118053647396689196894323976171195136475136 x241 x1186 (uninterp_frac x476 95780971304118053647396689196894323976171195136475136)))
(assert (axiom_frac_zero x476 95780971304118053647396689196894323976171195136475136 x241 x1529 (uninterp_frac x476 95780971304118053647396689196894323976171195136475136)))
(assert (axiom_frac_zero x476 95780971304118053647396689196894323976171195136475136 x241 x276 (uninterp_frac x476 95780971304118053647396689196894323976171195136475136)))
(assert (axiom_frac_zero x476 95780971304118053647396689196894323976171195136475136 x241 x525 (uninterp_frac x476 95780971304118053647396689196894323976171195136475136)))
(assert (axiom_frac_zero x476 95780971304118053647396689196894323976171195136475136 x251 x1113 (uninterp_frac x476 95780971304118053647396689196894323976171195136475136)))
(assert (axiom_frac_zero x476 95780971304118053647396689196894323976171195136475136 x262 x209 (uninterp_frac x476 95780971304118053647396689196894323976171195136475136)))
(assert (axiom_frac_zero x476 95780971304118053647396689196894323976171195136475136 x262 x97 (uninterp_frac x476 95780971304118053647396689196894323976171195136475136)))
(assert (axiom_frac_zero x476 95780971304118053647396689196894323976171195136475136 x276 x241 (uninterp_frac x476 95780971304118053647396689196894323976171195136475136)))
(assert (axiom_frac_zero x476 95780971304118053647396689196894323976171195136475136 x311 x606 (uninterp_frac x476 95780971304118053647396689196894323976171195136475136)))
(assert (axiom_frac_zero x476 95780971304118053647396689196894323976171195136475136 x37 x398 (uninterp_frac x476 95780971304118053647396689196894323976171195136475136)))
(assert (axiom_frac_zero x476 95780971304118053647396689196894323976171195136475136 x386 x760 (uninterp_frac x476 95780971304118053647396689196894323976171195136475136)))
(assert (axiom_frac_zero x476 95780971304118053647396689196894323976171195136475136 x400 x262 (uninterp_frac x476 95780971304118053647396689196894323976171195136475136)))
(assert (axiom_frac_zero x476 95780971304118053647396689196894323976171195136475136 x426 x1113 (uninterp_frac x476 95780971304118053647396689196894323976171195136475136)))
(assert (axiom_frac_zero x476 95780971304118053647396689196894323976171195136475136 x48 x1059 (uninterp_frac x476 95780971304118053647396689196894323976171195136475136)))
(assert (axiom_frac_zero x476 95780971304118053647396689196894323976171195136475136 x525 x241 (uninterp_frac x476 95780971304118053647396689196894323976171195136475136)))
(assert (axiom_frac_zero x476 95780971304118053647396689196894323976171195136475136 x599 (x1296 x733) (uninterp_frac x476 95780971304118053647396689196894323976171195136475136)))
(assert (axiom_frac_zero x476 95780971304118053647396689196894323976171195136475136 x690 x1529 (uninterp_frac x476 95780971304118053647396689196894323976171195136475136)))
(assert (axiom_frac_zero x476 95780971304118053647396689196894323976171195136475136 x734 x1441 (uninterp_frac x476 95780971304118053647396689196894323976171195136475136)))
(assert (axiom_frac_zero x476 95780971304118053647396689196894323976171195136475136 x780 x262 (uninterp_frac x476 95780971304118053647396689196894323976171195136475136)))
(assert (axiom_frac_zero x476 95780971304118053647396689196894323976171195136475136 x80 x1064 (uninterp_frac x476 95780971304118053647396689196894323976171195136475136)))
(assert (axiom_frac_zero x476 95780971304118053647396689196894323976171195136475136 x882 x1490 (uninterp_frac x476 95780971304118053647396689196894323976171195136475136)))
(assert (axiom_frac_zero x476 95780971304118053647396689196894323976171195136475136 x934 x1490 (uninterp_frac x476 95780971304118053647396689196894323976171195136475136)))
(assert (axiom_frac_zero x476 95780971304118053647396689196894323976171195136475136 x97 x262 (uninterp_frac x476 95780971304118053647396689196894323976171195136475136)))
(assert (axiom_frac_bound x809 1461501637330902918203684832716283019655932542976))
(assert (axiom_frac_zero x809 1461501637330902918203684832716283019655932542976 x1030 x1490 (uninterp_frac x809 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x809 1461501637330902918203684832716283019655932542976 x1059 x48 (uninterp_frac x809 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x809 1461501637330902918203684832716283019655932542976 x1064 x209 (uninterp_frac x809 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x809 1461501637330902918203684832716283019655932542976 x1113 x251 (uninterp_frac x809 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x809 1461501637330902918203684832716283019655932542976 x1113 x426 (uninterp_frac x809 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x809 1461501637330902918203684832716283019655932542976 x1183 x690 (uninterp_frac x809 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x809 1461501637330902918203684832716283019655932542976 x126 x387 (uninterp_frac x809 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x809 1461501637330902918203684832716283019655932542976 x1389 x934 (uninterp_frac x809 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x809 1461501637330902918203684832716283019655932542976 x1407 x1250 (uninterp_frac x809 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x809 1461501637330902918203684832716283019655932542976 x1490 x1030 (uninterp_frac x809 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x809 1461501637330902918203684832716283019655932542976 x1490 x882 (uninterp_frac x809 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x809 1461501637330902918203684832716283019655932542976 x1514 x172 (uninterp_frac x809 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x809 1461501637330902918203684832716283019655932542976 x1529 x241 (uninterp_frac x809 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x809 1461501637330902918203684832716283019655932542976 x1529 x690 (uninterp_frac x809 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x809 1461501637330902918203684832716283019655932542976 x166 x777 (uninterp_frac x809 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x809 1461501637330902918203684832716283019655932542976 x172 x1031 (uninterp_frac x809 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x809 1461501637330902918203684832716283019655932542976 x172 x1514 (uninterp_frac x809 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x809 1461501637330902918203684832716283019655932542976 x208 x398 (uninterp_frac x809 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x809 1461501637330902918203684832716283019655932542976 x209 x262 (uninterp_frac x809 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x809 1461501637330902918203684832716283019655932542976 x241 x1186 (uninterp_frac x809 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x809 1461501637330902918203684832716283019655932542976 x241 x1529 (uninterp_frac x809 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x809 1461501637330902918203684832716283019655932542976 x241 x276 (uninterp_frac x809 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x809 1461501637330902918203684832716283019655932542976 x241 x525 (uninterp_frac x809 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x809 1461501637330902918203684832716283019655932542976 x251 x1113 (uninterp_frac x809 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x809 1461501637330902918203684832716283019655932542976 x262 x209 (uninterp_frac x809 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x809 1461501637330902918203684832716283019655932542976 x262 x97 (uninterp_frac x809 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x809 1461501637330902918203684832716283019655932542976 x276 x241 (uninterp_frac x809 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x809 1461501637330902918203684832716283019655932542976 x311 x606 (uninterp_frac x809 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x809 1461501637330902918203684832716283019655932542976 x37 x398 (uninterp_frac x809 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x809 1461501637330902918203684832716283019655932542976 x386 x760 (uninterp_frac x809 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x809 1461501637330902918203684832716283019655932542976 x400 x262 (uninterp_frac x809 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x809 1461501637330902918203684832716283019655932542976 x426 x1113 (uninterp_frac x809 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x809 1461501637330902918203684832716283019655932542976 x48 x1059 (uninterp_frac x809 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x809 1461501637330902918203684832716283019655932542976 x525 x241 (uninterp_frac x809 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x809 1461501637330902918203684832716283019655932542976 x599 (x1296 x733) (uninterp_frac x809 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x809 1461501637330902918203684832716283019655932542976 x690 x1529 (uninterp_frac x809 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x809 1461501637330902918203684832716283019655932542976 x734 x1441 (uninterp_frac x809 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x809 1461501637330902918203684832716283019655932542976 x780 x262 (uninterp_frac x809 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x809 1461501637330902918203684832716283019655932542976 x80 x1064 (uninterp_frac x809 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x809 1461501637330902918203684832716283019655932542976 x882 x1490 (uninterp_frac x809 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x809 1461501637330902918203684832716283019655932542976 x934 x1490 (uninterp_frac x809 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_zero x809 1461501637330902918203684832716283019655932542976 x97 x262 (uninterp_frac x809 1461501637330902918203684832716283019655932542976)))
(assert (axiom_frac_bound x809 374144419156711147060143317175368453031918731001856))
(assert (axiom_frac_zero x809 374144419156711147060143317175368453031918731001856 x1030 x1490 (uninterp_frac x809 374144419156711147060143317175368453031918731001856)))
(assert (axiom_frac_zero x809 374144419156711147060143317175368453031918731001856 x1059 x48 (uninterp_frac x809 374144419156711147060143317175368453031918731001856)))
(assert (axiom_frac_zero x809 374144419156711147060143317175368453031918731001856 x1064 x209 (uninterp_frac x809 374144419156711147060143317175368453031918731001856)))
(assert (axiom_frac_zero x809 374144419156711147060143317175368453031918731001856 x1113 x251 (uninterp_frac x809 374144419156711147060143317175368453031918731001856)))
(assert (axiom_frac_zero x809 374144419156711147060143317175368453031918731001856 x1113 x426 (uninterp_frac x809 374144419156711147060143317175368453031918731001856)))
(assert (axiom_frac_zero x809 374144419156711147060143317175368453031918731001856 x1183 x690 (uninterp_frac x809 374144419156711147060143317175368453031918731001856)))
(assert (axiom_frac_zero x809 374144419156711147060143317175368453031918731001856 x126 x387 (uninterp_frac x809 374144419156711147060143317175368453031918731001856)))
(assert (axiom_frac_zero x809 374144419156711147060143317175368453031918731001856 x1389 x934 (uninterp_frac x809 374144419156711147060143317175368453031918731001856)))
(assert (axiom_frac_zero x809 374144419156711147060143317175368453031918731001856 x1407 x1250 (uninterp_frac x809 374144419156711147060143317175368453031918731001856)))
(assert (axiom_frac_zero x809 374144419156711147060143317175368453031918731001856 x1490 x1030 (uninterp_frac x809 374144419156711147060143317175368453031918731001856)))
(assert (axiom_frac_zero x809 374144419156711147060143317175368453031918731001856 x1490 x882 (uninterp_frac x809 374144419156711147060143317175368453031918731001856)))
(assert (axiom_frac_zero x809 374144419156711147060143317175368453031918731001856 x1514 x172 (uninterp_frac x809 374144419156711147060143317175368453031918731001856)))
(assert (axiom_frac_zero x809 374144419156711147060143317175368453031918731001856 x1529 x241 (uninterp_frac x809 374144419156711147060143317175368453031918731001856)))
(assert (axiom_frac_zero x809 374144419156711147060143317175368453031918731001856 x1529 x690 (uninterp_frac x809 374144419156711147060143317175368453031918731001856)))
(assert (axiom_frac_zero x809 374144419156711147060143317175368453031918731001856 x166 x777 (uninterp_frac x809 374144419156711147060143317175368453031918731001856)))
(assert (axiom_frac_zero x809 374144419156711147060143317175368453031918731001856 x172 x1031 (uninterp_frac x809 374144419156711147060143317175368453031918731001856)))
(assert (axiom_frac_zero x809 374144419156711147060143317175368453031918731001856 x172 x1514 (uninterp_frac x809 374144419156711147060143317175368453031918731001856)))
(assert (axiom_frac_zero x809 374144419156711147060143317175368453031918731001856 x208 x398 (uninterp_frac x809 374144419156711147060143317175368453031918731001856)))
(assert (axiom_frac_zero x809 374144419156711147060143317175368453031918731001856 x209 x262 (uninterp_frac x809 374144419156711147060143317175368453031918731001856)))
(assert (axiom_frac_zero x809 374144419156711147060143317175368453031918731001856 x241 x1186 (uninterp_frac x809 374144419156711147060143317175368453031918731001856)))
(assert (axiom_frac_zero x809 374144419156711147060143317175368453031918731001856 x241 x1529 (uninterp_frac x809 374144419156711147060143317175368453031918731001856)))
(assert (axiom_frac_zero x809 374144419156711147060143317175368453031918731001856 x241 x276 (uninterp_frac x809 374144419156711147060143317175368453031918731001856)))
(assert (axiom_frac_zero x809 374144419156711147060143317175368453031918731001856 x241 x525 (uninterp_frac x809 374144419156711147060143317175368453031918731001856)))
(assert (axiom_frac_zero x809 374144419156711147060143317175368453031918731001856 x251 x1113 (uninterp_frac x809 374144419156711147060143317175368453031918731001856)))
(assert (axiom_frac_zero x809 374144419156711147060143317175368453031918731001856 x262 x209 (uninterp_frac x809 374144419156711147060143317175368453031918731001856)))
(assert (axiom_frac_zero x809 374144419156711147060143317175368453031918731001856 x262 x97 (uninterp_frac x809 374144419156711147060143317175368453031918731001856)))
(assert (axiom_frac_zero x809 374144419156711147060143317175368453031918731001856 x276 x241 (uninterp_frac x809 374144419156711147060143317175368453031918731001856)))
(assert (axiom_frac_zero x809 374144419156711147060143317175368453031918731001856 x311 x606 (uninterp_frac x809 374144419156711147060143317175368453031918731001856)))
(assert (axiom_frac_zero x809 374144419156711147060143317175368453031918731001856 x37 x398 (uninterp_frac x809 374144419156711147060143317175368453031918731001856)))
(assert (axiom_frac_zero x809 374144419156711147060143317175368453031918731001856 x386 x760 (uninterp_frac x809 374144419156711147060143317175368453031918731001856)))
(assert (axiom_frac_zero x809 374144419156711147060143317175368453031918731001856 x400 x262 (uninterp_frac x809 374144419156711147060143317175368453031918731001856)))
(assert (axiom_frac_zero x809 374144419156711147060143317175368453031918731001856 x426 x1113 (uninterp_frac x809 374144419156711147060143317175368453031918731001856)))
(assert (axiom_frac_zero x809 374144419156711147060143317175368453031918731001856 x48 x1059 (uninterp_frac x809 374144419156711147060143317175368453031918731001856)))
(assert (axiom_frac_zero x809 374144419156711147060143317175368453031918731001856 x525 x241 (uninterp_frac x809 374144419156711147060143317175368453031918731001856)))
(assert (axiom_frac_zero x809 374144419156711147060143317175368453031918731001856 x599 (x1296 x733) (uninterp_frac x809 374144419156711147060143317175368453031918731001856)))
(assert (axiom_frac_zero x809 374144419156711147060143317175368453031918731001856 x690 x1529 (uninterp_frac x809 374144419156711147060143317175368453031918731001856)))
(assert (axiom_frac_zero x809 374144419156711147060143317175368453031918731001856 x734 x1441 (uninterp_frac x809 374144419156711147060143317175368453031918731001856)))
(assert (axiom_frac_zero x809 374144419156711147060143317175368453031918731001856 x780 x262 (uninterp_frac x809 374144419156711147060143317175368453031918731001856)))
(assert (axiom_frac_zero x809 374144419156711147060143317175368453031918731001856 x80 x1064 (uninterp_frac x809 374144419156711147060143317175368453031918731001856)))
(assert (axiom_frac_zero x809 374144419156711147060143317175368453031918731001856 x882 x1490 (uninterp_frac x809 374144419156711147060143317175368453031918731001856)))
(assert (axiom_frac_zero x809 374144419156711147060143317175368453031918731001856 x934 x1490 (uninterp_frac x809 374144419156711147060143317175368453031918731001856)))
(assert (axiom_frac_zero x809 374144419156711147060143317175368453031918731001856 x97 x262 (uninterp_frac x809 374144419156711147060143317175368453031918731001856)))
(assert (axiom_frac_bound x817 2))
(assert (axiom_frac_zero x817 2 x1030 x1490 (uninterp_frac x817 2)))
(assert (axiom_frac_zero x817 2 x1059 x48 (uninterp_frac x817 2)))
(assert (axiom_frac_zero x817 2 x1064 x209 (uninterp_frac x817 2)))
(assert (axiom_frac_zero x817 2 x1113 x251 (uninterp_frac x817 2)))
(assert (axiom_frac_zero x817 2 x1113 x426 (uninterp_frac x817 2)))
(assert (axiom_frac_zero x817 2 x1183 x690 (uninterp_frac x817 2)))
(assert (axiom_frac_zero x817 2 x126 x387 (uninterp_frac x817 2)))
(assert (axiom_frac_zero x817 2 x1389 x934 (uninterp_frac x817 2)))
(assert (axiom_frac_zero x817 2 x1407 x1250 (uninterp_frac x817 2)))
(assert (axiom_frac_zero x817 2 x1490 x1030 (uninterp_frac x817 2)))
(assert (axiom_frac_zero x817 2 x1490 x882 (uninterp_frac x817 2)))
(assert (axiom_frac_zero x817 2 x1514 x172 (uninterp_frac x817 2)))
(assert (axiom_frac_zero x817 2 x1529 x241 (uninterp_frac x817 2)))
(assert (axiom_frac_zero x817 2 x1529 x690 (uninterp_frac x817 2)))
(assert (axiom_frac_zero x817 2 x166 x777 (uninterp_frac x817 2)))
(assert (axiom_frac_zero x817 2 x172 x1031 (uninterp_frac x817 2)))
(assert (axiom_frac_zero x817 2 x172 x1514 (uninterp_frac x817 2)))
(assert (axiom_frac_zero x817 2 x208 x398 (uninterp_frac x817 2)))
(assert (axiom_frac_zero x817 2 x209 x262 (uninterp_frac x817 2)))
(assert (axiom_frac_zero x817 2 x241 x1186 (uninterp_frac x817 2)))
(assert (axiom_frac_zero x817 2 x241 x1529 (uninterp_frac x817 2)))
(assert (axiom_frac_zero x817 2 x241 x276 (uninterp_frac x817 2)))
(assert (axiom_frac_zero x817 2 x241 x525 (uninterp_frac x817 2)))
(assert (axiom_frac_zero x817 2 x251 x1113 (uninterp_frac x817 2)))
(assert (axiom_frac_zero x817 2 x262 x209 (uninterp_frac x817 2)))
(assert (axiom_frac_zero x817 2 x262 x97 (uninterp_frac x817 2)))
(assert (axiom_frac_zero x817 2 x276 x241 (uninterp_frac x817 2)))
(assert (axiom_frac_zero x817 2 x311 x606 (uninterp_frac x817 2)))
(assert (axiom_frac_zero x817 2 x37 x398 (uninterp_frac x817 2)))
(assert (axiom_frac_zero x817 2 x386 x760 (uninterp_frac x817 2)))
(assert (axiom_frac_zero x817 2 x400 x262 (uninterp_frac x817 2)))
(assert (axiom_frac_zero x817 2 x426 x1113 (uninterp_frac x817 2)))
(assert (axiom_frac_zero x817 2 x48 x1059 (uninterp_frac x817 2)))
(assert (axiom_frac_zero x817 2 x525 x241 (uninterp_frac x817 2)))
(assert (axiom_frac_zero x817 2 x599 (x1296 x733) (uninterp_frac x817 2)))
(assert (axiom_frac_zero x817 2 x690 x1529 (uninterp_frac x817 2)))
(assert (axiom_frac_zero x817 2 x734 x1441 (uninterp_frac x817 2)))
(assert (axiom_frac_zero x817 2 x780 x262 (uninterp_frac x817 2)))
(assert (axiom_frac_zero x817 2 x80 x1064 (uninterp_frac x817 2)))
(assert (axiom_frac_zero x817 2 x882 x1490 (uninterp_frac x817 2)))
(assert (axiom_frac_zero x817 2 x934 x1490 (uninterp_frac x817 2)))
(assert (axiom_frac_zero x817 2 x97 x262 (uninterp_frac x817 2)))
(assert (axiom_int_approximation x10))
(assert (axiom_int_approximation x1001))
(assert (axiom_int_approximation x1003))
(assert (axiom_int_approximation x1004))
(assert (axiom_int_approximation x1005))
(assert (axiom_int_approximation x1006))
(assert (axiom_int_approximation x1009))
(assert (axiom_int_approximation x101))
(assert (axiom_int_approximation x1010))
(assert (axiom_int_approximation x1011))
(assert (axiom_int_approximation x1012))
(assert (axiom_int_approximation x1013))
(assert (axiom_int_approximation x1018))
(assert (axiom_int_approximation x1019))
(assert (axiom_int_approximation x102))
(assert (axiom_int_approximation x1020))
(assert (axiom_int_approximation x1021))
(assert (axiom_int_approximation x1022))
(assert (axiom_int_approximation x1026))
(assert (axiom_int_approximation x1028))
(assert (axiom_int_approximation x1029))
(assert (axiom_int_approximation x1030))
(assert (axiom_int_approximation x1031))
(assert (axiom_int_approximation x1033))
(assert (axiom_int_approximation x1034))
(assert (axiom_int_approximation x1035))
(assert (axiom_int_approximation x1036))
(assert (axiom_int_approximation x1037))
(assert (axiom_int_approximation x1038))
(assert (axiom_int_approximation x1039))
(assert (axiom_int_approximation x104))
(assert (axiom_int_approximation x1040))
(assert (axiom_int_approximation x1042))
(assert (axiom_int_approximation x1044))
(assert (axiom_int_approximation x1045))
(assert (axiom_int_approximation x1046))
(assert (axiom_int_approximation x105))
(assert (axiom_int_approximation x1050))
(assert (axiom_int_approximation x1053))
(assert (axiom_int_approximation x1054))
(assert (axiom_int_approximation x1057))
(assert (axiom_int_approximation x1059))
(assert (axiom_int_approximation x106))
(assert (axiom_int_approximation x1061))
(assert (axiom_int_approximation x1062))
(assert (axiom_int_approximation x1064))
(assert (axiom_int_approximation x1065))
(assert (axiom_int_approximation x1066))
(assert (axiom_int_approximation x1067))
(assert (axiom_int_approximation x1069))
(assert (axiom_int_approximation x107))
(assert (axiom_int_approximation x1072))
(assert (axiom_int_approximation x1073))
(assert (axiom_int_approximation x1075))
(assert (axiom_int_approximation x1077))
(assert (axiom_int_approximation x1078))
(assert (axiom_int_approximation x1079))
(assert (axiom_int_approximation x108))
(assert (axiom_int_approximation x1083))
(assert (axiom_int_approximation x1084))
(assert (axiom_int_approximation x1086))
(assert (axiom_int_approximation x1087))
(assert (axiom_int_approximation x1089))
(assert (axiom_int_approximation x1090))
(assert (axiom_int_approximation x1095))
(assert (axiom_int_approximation x1098))
(assert (axiom_int_approximation x1099))
(assert (axiom_int_approximation x110))
(assert (axiom_int_approximation x1100))
(assert (axiom_int_approximation x1101))
(assert (axiom_int_approximation x1102))
(assert (axiom_int_approximation x1104))
(assert (axiom_int_approximation x1105))
(assert (axiom_int_approximation x1107))
(assert (axiom_int_approximation x1108))
(assert (axiom_int_approximation x1109))
(assert (axiom_int_approximation x111))
(assert (axiom_int_approximation x1110))
(assert (axiom_int_approximation x1111))
(assert (axiom_int_approximation x1112))
(assert (axiom_int_approximation x1113))
(assert (axiom_int_approximation x1114))
(assert (axiom_int_approximation x1116))
(assert (axiom_int_approximation x1117))
(assert (axiom_int_approximation x1118))
(assert (axiom_int_approximation x1120))
(assert (axiom_int_approximation x1121))
(assert (axiom_int_approximation x1122))
(assert (axiom_int_approximation x1124))
(assert (axiom_int_approximation x1126))
(assert (axiom_int_approximation x1127))
(assert (axiom_int_approximation x113))
(assert (axiom_int_approximation x1130))
(assert (axiom_int_approximation x1131))
(assert (axiom_int_approximation x1133))
(assert (axiom_int_approximation x1136))
(assert (axiom_int_approximation x1137))
(assert (axiom_int_approximation x1138))
(assert (axiom_int_approximation x1139))
(assert (axiom_int_approximation x1141))
(assert (axiom_int_approximation x1142))
(assert (axiom_int_approximation x1143))
(assert (axiom_int_approximation x1145))
(assert (axiom_int_approximation x1146))
(assert (axiom_int_approximation x1147))
(assert (axiom_int_approximation x1148))
(assert (axiom_int_approximation x1150))
(assert (axiom_int_approximation x1154))
(assert (axiom_int_approximation x1155))
(assert (axiom_int_approximation x1156))
(assert (axiom_int_approximation x1157))
(assert (axiom_int_approximation x1158))
(assert (axiom_int_approximation x1159))
(assert (axiom_int_approximation x116))
(assert (axiom_int_approximation x1161))
(assert (axiom_int_approximation x1162))
(assert (axiom_int_approximation x1163))
(assert (axiom_int_approximation x1167))
(assert (axiom_int_approximation x1168))
(assert (axiom_int_approximation x1169))
(assert (axiom_int_approximation x1175))
(assert (axiom_int_approximation x1176))
(assert (axiom_int_approximation x1178))
(assert (axiom_int_approximation x118))
(assert (axiom_int_approximation x1180))
(assert (axiom_int_approximation x1182))
(assert (axiom_int_approximation x1183))
(assert (axiom_int_approximation x1184))
(assert (axiom_int_approximation x1185))
(assert (axiom_int_approximation x1186))
(assert (axiom_int_approximation x1187))
(assert (axiom_int_approximation x119))
(assert (axiom_int_approximation x1190))
(assert (axiom_int_approximation x1192))
(assert (axiom_int_approximation x1193))
(assert (axiom_int_approximation x1196))
(assert (axiom_int_approximation x1199))
(assert (axiom_int_approximation x12))
(assert (axiom_int_approximation x120))
(assert (axiom_int_approximation x1200))
(assert (axiom_int_approximation x1201))
(assert (axiom_int_approximation x1202))
(assert (axiom_int_approximation x1203))
(assert (axiom_int_approximation x1204))
(assert (axiom_int_approximation x1208))
(assert (axiom_int_approximation x1209))
(assert (axiom_int_approximation x121))
(assert (axiom_int_approximation x1210))
(assert (axiom_int_approximation x1212))
(assert (axiom_int_approximation x1214))
(assert (axiom_int_approximation x1219))
(assert (axiom_int_approximation x1220))
(assert (axiom_int_approximation x1221))
(assert (axiom_int_approximation x1223))
(assert (axiom_int_approximation x1224))
(assert (axiom_int_approximation x1225))
(assert (axiom_int_approximation x1226))
(assert (axiom_int_approximation x1227))
(assert (axiom_int_approximation x1230))
(assert (axiom_int_approximation x1231))
(assert (axiom_int_approximation x1232))
(assert (axiom_int_approximation x1233))
(assert (axiom_int_approximation x1234))
(assert (axiom_int_approximation x1235))
(assert (axiom_int_approximation x1237))
(assert (axiom_int_approximation x1239))
(assert (axiom_int_approximation x124))
(assert (axiom_int_approximation x1242))
(assert (axiom_int_approximation x1243))
(assert (axiom_int_approximation x1245))
(assert (axiom_int_approximation x1249))
(assert (axiom_int_approximation x1250))
(assert (axiom_int_approximation x1251))
(assert (axiom_int_approximation x1252))
(assert (axiom_int_approximation x1255))
(assert (axiom_int_approximation x1256))
(assert (axiom_int_approximation x1257))
(assert (axiom_int_approximation x1259))
(assert (axiom_int_approximation x126))
(assert (axiom_int_approximation x1262))
(assert (axiom_int_approximation x1263))
(assert (axiom_int_approximation x1265))
(assert (axiom_int_approximation x1268))
(assert (axiom_int_approximation x1271))
(assert (axiom_int_approximation x1274))
(assert (axiom_int_approximation x1275))
(assert (axiom_int_approximation x128))
(assert (axiom_int_approximation x1281))
(assert (axiom_int_approximation x1283))
(assert (axiom_int_approximation x1285))
(assert (axiom_int_approximation x1288))
(assert (axiom_int_approximation x1289))
(assert (axiom_int_approximation x129))
(assert (axiom_int_approximation x1290))
(assert (axiom_int_approximation x1292))
(assert (axiom_int_approximation x1293))
(assert (axiom_int_approximation x1294))
(assert (axiom_int_approximation x1297))
(assert (axiom_int_approximation x1298))
(assert (axiom_int_approximation x13))
(assert (axiom_int_approximation x130))
(assert (axiom_int_approximation x1300))
(assert (axiom_int_approximation x1301))
(assert (axiom_int_approximation x1302))
(assert (axiom_int_approximation x1303))
(assert (axiom_int_approximation x1304))
(assert (axiom_int_approximation x1308))
(assert (axiom_int_approximation x1309))
(assert (axiom_int_approximation x1311))
(assert (axiom_int_approximation x1312))
(assert (axiom_int_approximation x1313))
(assert (axiom_int_approximation x1314))
(assert (axiom_int_approximation x1318))
(assert (axiom_int_approximation x1321))
(assert (axiom_int_approximation x1322))
(assert (axiom_int_approximation x1323))
(assert (axiom_int_approximation x1324))
(assert (axiom_int_approximation x1326))
(assert (axiom_int_approximation x1328))
(assert (axiom_int_approximation x1329))
(assert (axiom_int_approximation x1330))
(assert (axiom_int_approximation x1331))
(assert (axiom_int_approximation x1332))
(assert (axiom_int_approximation x1333))
(assert (axiom_int_approximation x1334))
(assert (axiom_int_approximation x1336))
(assert (axiom_int_approximation x1337))
(assert (axiom_int_approximation x1338))
(assert (axiom_int_approximation x1339))
(assert (axiom_int_approximation x134))
(assert (axiom_int_approximation x1340))
(assert (axiom_int_approximation x1342))
(assert (axiom_int_approximation x1344))
(assert (axiom_int_approximation x1345))
(assert (axiom_int_approximation x1346))
(assert (axiom_int_approximation x1347))
(assert (axiom_int_approximation x1348))
(assert (axiom_int_approximation x1349))
(assert (axiom_int_approximation x135))
(assert (axiom_int_approximation x1351))
(assert (axiom_int_approximation x1354))
(assert (axiom_int_approximation x1355))
(assert (axiom_int_approximation x1356))
(assert (axiom_int_approximation x1357))
(assert (axiom_int_approximation x1359))
(assert (axiom_int_approximation x136))
(assert (axiom_int_approximation x1360))
(assert (axiom_int_approximation x1361))
(assert (axiom_int_approximation x1363))
(assert (axiom_int_approximation x1364))
(assert (axiom_int_approximation x1366))
(assert (axiom_int_approximation x1367))
(assert (axiom_int_approximation x1368))
(assert (axiom_int_approximation x1371))
(assert (axiom_int_approximation x1374))
(assert (axiom_int_approximation x1378))
(assert (axiom_int_approximation x1380))
(assert (axiom_int_approximation x1381))
(assert (axiom_int_approximation x1382))
(assert (axiom_int_approximation x1383))
(assert (axiom_int_approximation x1384))
(assert (axiom_int_approximation x1386))
(assert (axiom_int_approximation x1387))
(assert (axiom_int_approximation x1389))
(assert (axiom_int_approximation x139))
(assert (axiom_int_approximation x1390))
(assert (axiom_int_approximation x1391))
(assert (axiom_int_approximation x1393))
(assert (axiom_int_approximation x1394))
(assert (axiom_int_approximation x1395))
(assert (axiom_int_approximation x1397))
(assert (axiom_int_approximation x1398))
(assert (axiom_int_approximation x1399))
(assert (axiom_int_approximation x14))
(assert (axiom_int_approximation x1402))
(assert (axiom_int_approximation x1403))
(assert (axiom_int_approximation x1404))
(assert (axiom_int_approximation x1405))
(assert (axiom_int_approximation x1406))
(assert (axiom_int_approximation x1407))
(assert (axiom_int_approximation x1408))
(assert (axiom_int_approximation x1414))
(assert (axiom_int_approximation x1415))
(assert (axiom_int_approximation x1417))
(assert (axiom_int_approximation x142))
(assert (axiom_int_approximation x1421))
(assert (axiom_int_approximation x1423))
(assert (axiom_int_approximation x1427))
(assert (axiom_int_approximation x1429))
(assert (axiom_int_approximation x143))
(assert (axiom_int_approximation x1430))
(assert (axiom_int_approximation x1432))
(assert (axiom_int_approximation x1433))
(assert (axiom_int_approximation x1439))
(assert (axiom_int_approximation x144))
(assert (axiom_int_approximation x1440))
(assert (axiom_int_approximation x1441))
(assert (axiom_int_approximation x1443))
(assert (axiom_int_approximation x1444))
(assert (axiom_int_approximation x1445))
(assert (axiom_int_approximation x1447))
(assert (axiom_int_approximation x1449))
(assert (axiom_int_approximation x145))
(assert (axiom_int_approximation x1450))
(assert (axiom_int_approximation x1452))
(assert (axiom_int_approximation x1453))
(assert (axiom_int_approximation x1454))
(assert (axiom_int_approximation x1455))
(assert (axiom_int_approximation x1456))
(assert (axiom_int_approximation x1459))
(assert (axiom_int_approximation x146))
(assert (axiom_int_approximation x1460))
(assert (axiom_int_approximation x1462))
(assert (axiom_int_approximation x1463))
(assert (axiom_int_approximation x1465))
(assert (axiom_int_approximation x1466))
(assert (axiom_int_approximation x1473))
(assert (axiom_int_approximation x1475))
(assert (axiom_int_approximation x1477))
(assert (axiom_int_approximation x148))
(assert (axiom_int_approximation x1480))
(assert (axiom_int_approximation x1481))
(assert (axiom_int_approximation x1482))
(assert (axiom_int_approximation x149))
(assert (axiom_int_approximation x1490))
(assert (axiom_int_approximation x1492))
(assert (axiom_int_approximation x1495))
(assert (axiom_int_approximation x1496))
(assert (axiom_int_approximation x1498))
(assert (axiom_int_approximation x15))
(assert (axiom_int_approximation x150))
(assert (axiom_int_approximation x1502))
(assert (axiom_int_approximation x1503))
(assert (axiom_int_approximation x1504))
(assert (axiom_int_approximation x1506))
(assert (axiom_int_approximation x1509))
(assert (axiom_int_approximation x1510))
(assert (axiom_int_approximation x1511))
(assert (axiom_int_approximation x1514))
(assert (axiom_int_approximation x1515))
(assert (axiom_int_approximation x1517))
(assert (axiom_int_approximation x1518))
(assert (axiom_int_approximation x152))
(assert (axiom_int_approximation x1521))
(assert (axiom_int_approximation x1522))
(assert (axiom_int_approximation x1524))
(assert (axiom_int_approximation x1525))
(assert (axiom_int_approximation x1526))
(assert (axiom_int_approximation x1529))
(assert (axiom_int_approximation x153))
(assert (axiom_int_approximation x1530))
(assert (axiom_int_approximation x1532))
(assert (axiom_int_approximation x1533))
(assert (axiom_int_approximation x1534))
(assert (axiom_int_approximation x1536))
(assert (axiom_int_approximation x1537))
(assert (axiom_int_approximation x1538))
(assert (axiom_int_approximation x1539))
(assert (axiom_int_approximation x1541))
(assert (axiom_int_approximation x1545))
(assert (axiom_int_approximation x1546))
(assert (axiom_int_approximation x1547))
(assert (axiom_int_approximation x155))
(assert (axiom_int_approximation x1552))
(assert (axiom_int_approximation x1557))
(assert (axiom_int_approximation x1558))
(assert (axiom_int_approximation x1559))
(assert (axiom_int_approximation x1560))
(assert (axiom_int_approximation x1561))
(assert (axiom_int_approximation x1563))
(assert (axiom_int_approximation x1564))
(assert (axiom_int_approximation x1566))
(assert (axiom_int_approximation x1567))
(assert (axiom_int_approximation x157))
(assert (axiom_int_approximation x1570))
(assert (axiom_int_approximation x1571))
(assert (axiom_int_approximation x1572))
(assert (axiom_int_approximation x1574))
(assert (axiom_int_approximation x1575))
(assert (axiom_int_approximation x1578))
(assert (axiom_int_approximation x1580))
(assert (axiom_int_approximation x1581))
(assert (axiom_int_approximation x1582))
(assert (axiom_int_approximation x1583))
(assert (axiom_int_approximation x1584))
(assert (axiom_int_approximation x1587))
(assert (axiom_int_approximation x1589))
(assert (axiom_int_approximation x1590))
(assert (axiom_int_approximation x1591))
(assert (axiom_int_approximation x1592))
(assert (axiom_int_approximation x16))
(assert (axiom_int_approximation x161))
(assert (axiom_int_approximation x165))
(assert (axiom_int_approximation x166))
(assert (axiom_int_approximation x168))
(assert (axiom_int_approximation x169))
(assert (axiom_int_approximation x17))
(assert (axiom_int_approximation x172))
(assert (axiom_int_approximation x175))
(assert (axiom_int_approximation x176))
(assert (axiom_int_approximation x177))
(assert (axiom_int_approximation x178))
(assert (axiom_int_approximation x179))
(assert (axiom_int_approximation x18))
(assert (axiom_int_approximation x180))
(assert (axiom_int_approximation x183))
(assert (axiom_int_approximation x184))
(assert (axiom_int_approximation x186))
(assert (axiom_int_approximation x187))
(assert (axiom_int_approximation x189))
(assert (axiom_int_approximation x19))
(assert (axiom_int_approximation x190))
(assert (axiom_int_approximation x195))
(assert (axiom_int_approximation x198))
(assert (axiom_int_approximation x200))
(assert (axiom_int_approximation x201))
(assert (axiom_int_approximation x203))
(assert (axiom_int_approximation x204))
(assert (axiom_int_approximation x206))
(assert (axiom_int_approximation x207))
(assert (axiom_int_approximation x208))
(assert (axiom_int_approximation x209))
(assert (axiom_int_approximation x21))
(assert (axiom_int_approximation x210))
(assert (axiom_int_approximation x213))
(assert (axiom_int_approximation x215))
(assert (axiom_int_approximation x217))
(assert (axiom_int_approximation x218))
(assert (axiom_int_approximation x219))
(assert (axiom_int_approximation x22))
(assert (axiom_int_approximation x220))
(assert (axiom_int_approximation x221))
(assert (axiom_int_approximation x223))
(assert (axiom_int_approximation x224))
(assert (axiom_int_approximation x225))
(assert (axiom_int_approximation x227))
(assert (axiom_int_approximation x228))
(assert (axiom_int_approximation x230))
(assert (axiom_int_approximation x231))
(assert (axiom_int_approximation x235))
(assert (axiom_int_approximation x237))
(assert (axiom_int_approximation x238))
(assert (axiom_int_approximation x241))
(assert (axiom_int_approximation x242))
(assert (axiom_int_approximation x243))
(assert (axiom_int_approximation x244))
(assert (axiom_int_approximation x245))
(assert (axiom_int_approximation x246))
(assert (axiom_int_approximation x25))
(assert (axiom_int_approximation x251))
(assert (axiom_int_approximation x253))
(assert (axiom_int_approximation x254))
(assert (axiom_int_approximation x256))
(assert (axiom_int_approximation x257))
(assert (axiom_int_approximation x258))
(assert (axiom_int_approximation x259))
(assert (axiom_int_approximation x26))
(assert (axiom_int_approximation x260))
(assert (axiom_int_approximation x262))
(assert (axiom_int_approximation x263))
(assert (axiom_int_approximation x264))
(assert (axiom_int_approximation x265))
(assert (axiom_int_approximation x266))
(assert (axiom_int_approximation x268))
(assert (axiom_int_approximation x27))
(assert (axiom_int_approximation x270))
(assert (axiom_int_approximation x272))
(assert (axiom_int_approximation x274))
(assert (axiom_int_approximation x276))
(assert (axiom_int_approximation x277))
(assert (axiom_int_approximation x28))
(assert (axiom_int_approximation x280))
(assert (axiom_int_approximation x281))
(assert (axiom_int_approximation x282))
(assert (axiom_int_approximation x283))
(assert (axiom_int_approximation x285))
(assert (axiom_int_approximation x286))
(assert (axiom_int_approximation x288))
(assert (axiom_int_approximation x289))
(assert (axiom_int_approximation x29))
(assert (axiom_int_approximation x291))
(assert (axiom_int_approximation x292))
(assert (axiom_int_approximation x294))
(assert (axiom_int_approximation x298))
(assert (axiom_int_approximation x30))
(assert (axiom_int_approximation x301))
(assert (axiom_int_approximation x302))
(assert (axiom_int_approximation x303))
(assert (axiom_int_approximation x304))
(assert (axiom_int_approximation x306))
(assert (axiom_int_approximation x308))
(assert (axiom_int_approximation x309))
(assert (axiom_int_approximation x310))
(assert (axiom_int_approximation x311))
(assert (axiom_int_approximation x314))
(assert (axiom_int_approximation x317))
(assert (axiom_int_approximation x319))
(assert (axiom_int_approximation x32))
(assert (axiom_int_approximation x322))
(assert (axiom_int_approximation x323))
(assert (axiom_int_approximation x324))
(assert (axiom_int_approximation x326))
(assert (axiom_int_approximation x327))
(assert (axiom_int_approximation x328))
(assert (axiom_int_approximation x33))
(assert (axiom_int_approximation x330))
(assert (axiom_int_approximation x331))
(assert (axiom_int_approximation x333))
(assert (axiom_int_approximation x334))
(assert (axiom_int_approximation x336))
(assert (axiom_int_approximation x34))
(assert (axiom_int_approximation x340))
(assert (axiom_int_approximation x341))
(assert (axiom_int_approximation x343))
(assert (axiom_int_approximation x344))
(assert (axiom_int_approximation x345))
(assert (axiom_int_approximation x354))
(assert (axiom_int_approximation x355))
(assert (axiom_int_approximation x357))
(assert (axiom_int_approximation x358))
(assert (axiom_int_approximation x359))
(assert (axiom_int_approximation x360))
(assert (axiom_int_approximation x363))
(assert (axiom_int_approximation x366))
(assert (axiom_int_approximation x367))
(assert (axiom_int_approximation x368))
(assert (axiom_int_approximation x37))
(assert (axiom_int_approximation x372))
(assert (axiom_int_approximation x379))
(assert (axiom_int_approximation x38))
(assert (axiom_int_approximation x381))
(assert (axiom_int_approximation x382))
(assert (axiom_int_approximation x383))
(assert (axiom_int_approximation x384))
(assert (axiom_int_approximation x385))
(assert (axiom_int_approximation x386))
(assert (axiom_int_approximation x387))
(assert (axiom_int_approximation x390))
(assert (axiom_int_approximation x392))
(assert (axiom_int_approximation x393))
(assert (axiom_int_approximation x394))
(assert (axiom_int_approximation x395))
(assert (axiom_int_approximation x396))
(assert (axiom_int_approximation x397))
(assert (axiom_int_approximation x398))
(assert (axiom_int_approximation x4))
(assert (axiom_int_approximation x40))
(assert (axiom_int_approximation x400))
(assert (axiom_int_approximation x402))
(assert (axiom_int_approximation x403))
(assert (axiom_int_approximation x409))
(assert (axiom_int_approximation x412))
(assert (axiom_int_approximation x415))
(assert (axiom_int_approximation x416))
(assert (axiom_int_approximation x417))
(assert (axiom_int_approximation x418))
(assert (axiom_int_approximation x419))
(assert (axiom_int_approximation x422))
(assert (axiom_int_approximation x424))
(assert (axiom_int_approximation x425))
(assert (axiom_int_approximation x426))
(assert (axiom_int_approximation x427))
(assert (axiom_int_approximation x429))
(assert (axiom_int_approximation x43))
(assert (axiom_int_approximation x432))
(assert (axiom_int_approximation x436))
(assert (axiom_int_approximation x438))
(assert (axiom_int_approximation x44))
(assert (axiom_int_approximation x440))
(assert (axiom_int_approximation x441))
(assert (axiom_int_approximation x443))
(assert (axiom_int_approximation x444))
(assert (axiom_int_approximation x447))
(assert (axiom_int_approximation x448))
(assert (axiom_int_approximation x449))
(assert (axiom_int_approximation x45))
(assert (axiom_int_approximation x450))
(assert (axiom_int_approximation x451))
(assert (axiom_int_approximation x452))
(assert (axiom_int_approximation x454))
(assert (axiom_int_approximation x456))
(assert (axiom_int_approximation x458))
(assert (axiom_int_approximation x459))
(assert (axiom_int_approximation x462))
(assert (axiom_int_approximation x463))
(assert (axiom_int_approximation x464))
(assert (axiom_int_approximation x465))
(assert (axiom_int_approximation x468))
(assert (axiom_int_approximation x469))
(assert (axiom_int_approximation x47))
(assert (axiom_int_approximation x470))
(assert (axiom_int_approximation x471))
(assert (axiom_int_approximation x473))
(assert (axiom_int_approximation x476))
(assert (axiom_int_approximation x478))
(assert (axiom_int_approximation x48))
(assert (axiom_int_approximation x480))
(assert (axiom_int_approximation x481))
(assert (axiom_int_approximation x482))
(assert (axiom_int_approximation x483))
(assert (axiom_int_approximation x485))
(assert (axiom_int_approximation x487))
(assert (axiom_int_approximation x488))
(assert (axiom_int_approximation x490))
(assert (axiom_int_approximation x492))
(assert (axiom_int_approximation x493))
(assert (axiom_int_approximation x495))
(assert (axiom_int_approximation x496))
(assert (axiom_int_approximation x499))
(assert (axiom_int_approximation x500))
(assert (axiom_int_approximation x501))
(assert (axiom_int_approximation x502))
(assert (axiom_int_approximation x504))
(assert (axiom_int_approximation x505))
(assert (axiom_int_approximation x506))
(assert (axiom_int_approximation x51))
(assert (axiom_int_approximation x512))
(assert (axiom_int_approximation x514))
(assert (axiom_int_approximation x515))
(assert (axiom_int_approximation x517))
(assert (axiom_int_approximation x518))
(assert (axiom_int_approximation x519))
(assert (axiom_int_approximation x520))
(assert (axiom_int_approximation x521))
(assert (axiom_int_approximation x522))
(assert (axiom_int_approximation x523))
(assert (axiom_int_approximation x525))
(assert (axiom_int_approximation x528))
(assert (axiom_int_approximation x529))
(assert (axiom_int_approximation x533))
(assert (axiom_int_approximation x534))
(assert (axiom_int_approximation x537))
(assert (axiom_int_approximation x538))
(assert (axiom_int_approximation x539))
(assert (axiom_int_approximation x54))
(assert (axiom_int_approximation x541))
(assert (axiom_int_approximation x545))
(assert (axiom_int_approximation x546))
(assert (axiom_int_approximation x547))
(assert (axiom_int_approximation x548))
(assert (axiom_int_approximation x549))
(assert (axiom_int_approximation x550))
(assert (axiom_int_approximation x551))
(assert (axiom_int_approximation x555))
(assert (axiom_int_approximation x556))
(assert (axiom_int_approximation x557))
(assert (axiom_int_approximation x558))
(assert (axiom_int_approximation x559))
(assert (axiom_int_approximation x56))
(assert (axiom_int_approximation x560))
(assert (axiom_int_approximation x561))
(assert (axiom_int_approximation x563))
(assert (axiom_int_approximation x565))
(assert (axiom_int_approximation x566))
(assert (axiom_int_approximation x567))
(assert (axiom_int_approximation x568))
(assert (axiom_int_approximation x571))
(assert (axiom_int_approximation x573))
(assert (axiom_int_approximation x574))
(assert (axiom_int_approximation x575))
(assert (axiom_int_approximation x577))
(assert (axiom_int_approximation x578))
(assert (axiom_int_approximation x58))
(assert (axiom_int_approximation x583))
(assert (axiom_int_approximation x584))
(assert (axiom_int_approximation x585))
(assert (axiom_int_approximation x586))
(assert (axiom_int_approximation x588))
(assert (axiom_int_approximation x589))
(assert (axiom_int_approximation x590))
(assert (axiom_int_approximation x591))
(assert (axiom_int_approximation x594))
(assert (axiom_int_approximation x597))
(assert (axiom_int_approximation x598))
(assert (axiom_int_approximation x599))
(assert (axiom_int_approximation x6))
(assert (axiom_int_approximation x600))
(assert (axiom_int_approximation x601))
(assert (axiom_int_approximation x602))
(assert (axiom_int_approximation x603))
(assert (axiom_int_approximation x604))
(assert (axiom_int_approximation x606))
(assert (axiom_int_approximation x608))
(assert (axiom_int_approximation x612))
(assert (axiom_int_approximation x613))
(assert (axiom_int_approximation x614))
(assert (axiom_int_approximation x616))
(assert (axiom_int_approximation x619))
(assert (axiom_int_approximation x620))
(assert (axiom_int_approximation x621))
(assert (axiom_int_approximation x622))
(assert (axiom_int_approximation x625))
(assert (axiom_int_approximation x629))
(assert (axiom_int_approximation x63))
(assert (axiom_int_approximation x631))
(assert (axiom_int_approximation x632))
(assert (axiom_int_approximation x633))
(assert (axiom_int_approximation x634))
(assert (axiom_int_approximation x635))
(assert (axiom_int_approximation x637))
(assert (axiom_int_approximation x639))
(assert (axiom_int_approximation x64))
(assert (axiom_int_approximation x640))
(assert (axiom_int_approximation x642))
(assert (axiom_int_approximation x643))
(assert (axiom_int_approximation x644))
(assert (axiom_int_approximation x645))
(assert (axiom_int_approximation x646))
(assert (axiom_int_approximation x647))
(assert (axiom_int_approximation x649))
(assert (axiom_int_approximation x650))
(assert (axiom_int_approximation x653))
(assert (axiom_int_approximation x654))
(assert (axiom_int_approximation x655))
(assert (axiom_int_approximation x657))
(assert (axiom_int_approximation x658))
(assert (axiom_int_approximation x66))
(assert (axiom_int_approximation x660))
(assert (axiom_int_approximation x661))
(assert (axiom_int_approximation x662))
(assert (axiom_int_approximation x663))
(assert (axiom_int_approximation x664))
(assert (axiom_int_approximation x668))
(assert (axiom_int_approximation x669))
(assert (axiom_int_approximation x67))
(assert (axiom_int_approximation x671))
(assert (axiom_int_approximation x673))
(assert (axiom_int_approximation x674))
(assert (axiom_int_approximation x675))
(assert (axiom_int_approximation x677))
(assert (axiom_int_approximation x678))
(assert (axiom_int_approximation x68))
(assert (axiom_int_approximation x680))
(assert (axiom_int_approximation x69))
(assert (axiom_int_approximation x690))
(assert (axiom_int_approximation x691))
(assert (axiom_int_approximation x692))
(assert (axiom_int_approximation x693))
(assert (axiom_int_approximation x696))
(assert (axiom_int_approximation x697))
(assert (axiom_int_approximation x70))
(assert (axiom_int_approximation x700))
(assert (axiom_int_approximation x701))
(assert (axiom_int_approximation x702))
(assert (axiom_int_approximation x703))
(assert (axiom_int_approximation x704))
(assert (axiom_int_approximation x707))
(assert (axiom_int_approximation x71))
(assert (axiom_int_approximation x712))
(assert (axiom_int_approximation x713))
(assert (axiom_int_approximation x714))
(assert (axiom_int_approximation x715))
(assert (axiom_int_approximation x716))
(assert (axiom_int_approximation x719))
(assert (axiom_int_approximation x72))
(assert (axiom_int_approximation x722))
(assert (axiom_int_approximation x724))
(assert (axiom_int_approximation x726))
(assert (axiom_int_approximation x727))
(assert (axiom_int_approximation x732))
(assert (axiom_int_approximation x733))
(assert (axiom_int_approximation x734))
(assert (axiom_int_approximation x739))
(assert (axiom_int_approximation x74))
(assert (axiom_int_approximation x741))
(assert (axiom_int_approximation x743))
(assert (axiom_int_approximation x745))
(assert (axiom_int_approximation x748))
(assert (axiom_int_approximation x749))
(assert (axiom_int_approximation x751))
(assert (axiom_int_approximation x753))
(assert (axiom_int_approximation x755))
(assert (axiom_int_approximation x757))
(assert (axiom_int_approximation x76))
(assert (axiom_int_approximation x760))
(assert (axiom_int_approximation x762))
(assert (axiom_int_approximation x764))
(assert (axiom_int_approximation x765))
(assert (axiom_int_approximation x768))
(assert (axiom_int_approximation x769))
(assert (axiom_int_approximation x77))
(assert (axiom_int_approximation x771))
(assert (axiom_int_approximation x773))
(assert (axiom_int_approximation x775))
(assert (axiom_int_approximation x776))
(assert (axiom_int_approximation x777))
(assert (axiom_int_approximation x779))
(assert (axiom_int_approximation x780))
(assert (axiom_int_approximation x781))
(assert (axiom_int_approximation x782))
(assert (axiom_int_approximation x784))
(assert (axiom_int_approximation x785))
(assert (axiom_int_approximation x79))
(assert (axiom_int_approximation x791))
(assert (axiom_int_approximation x793))
(assert (axiom_int_approximation x795))
(assert (axiom_int_approximation x796))
(assert (axiom_int_approximation x798))
(assert (axiom_int_approximation x799))
(assert (axiom_int_approximation x8))
(assert (axiom_int_approximation x80))
(assert (axiom_int_approximation x802))
(assert (axiom_int_approximation x804))
(assert (axiom_int_approximation x805))
(assert (axiom_int_approximation x806))
(assert (axiom_int_approximation x807))
(assert (axiom_int_approximation x809))
(assert (axiom_int_approximation x81))
(assert (axiom_int_approximation x810))
(assert (axiom_int_approximation x811))
(assert (axiom_int_approximation x814))
(assert (axiom_int_approximation x815))
(assert (axiom_int_approximation x817))
(assert (axiom_int_approximation x819))
(assert (axiom_int_approximation x82))
(assert (axiom_int_approximation x820))
(assert (axiom_int_approximation x821))
(assert (axiom_int_approximation x824))
(assert (axiom_int_approximation x826))
(assert (axiom_int_approximation x828))
(assert (axiom_int_approximation x83))
(assert (axiom_int_approximation x830))
(assert (axiom_int_approximation x831))
(assert (axiom_int_approximation x834))
(assert (axiom_int_approximation x835))
(assert (axiom_int_approximation x836))
(assert (axiom_int_approximation x839))
(assert (axiom_int_approximation x841))
(assert (axiom_int_approximation x842))
(assert (axiom_int_approximation x844))
(assert (axiom_int_approximation x846))
(assert (axiom_int_approximation x847))
(assert (axiom_int_approximation x85))
(assert (axiom_int_approximation x850))
(assert (axiom_int_approximation x853))
(assert (axiom_int_approximation x854))
(assert (axiom_int_approximation x855))
(assert (axiom_int_approximation x857))
(assert (axiom_int_approximation x858))
(assert (axiom_int_approximation x86))
(assert (axiom_int_approximation x863))
(assert (axiom_int_approximation x864))
(assert (axiom_int_approximation x865))
(assert (axiom_int_approximation x866))
(assert (axiom_int_approximation x867))
(assert (axiom_int_approximation x868))
(assert (axiom_int_approximation x869))
(assert (axiom_int_approximation x870))
(assert (axiom_int_approximation x871))
(assert (axiom_int_approximation x872))
(assert (axiom_int_approximation x873))
(assert (axiom_int_approximation x875))
(assert (axiom_int_approximation x877))
(assert (axiom_int_approximation x879))
(assert (axiom_int_approximation x88))
(assert (axiom_int_approximation x881))
(assert (axiom_int_approximation x882))
(assert (axiom_int_approximation x884))
(assert (axiom_int_approximation x887))
(assert (axiom_int_approximation x888))
(assert (axiom_int_approximation x889))
(assert (axiom_int_approximation x891))
(assert (axiom_int_approximation x892))
(assert (axiom_int_approximation x893))
(assert (axiom_int_approximation x894))
(assert (axiom_int_approximation x895))
(assert (axiom_int_approximation x896))
(assert (axiom_int_approximation x897))
(assert (axiom_int_approximation x898))
(assert (axiom_int_approximation x899))
(assert (axiom_int_approximation x9))
(assert (axiom_int_approximation x90))
(assert (axiom_int_approximation x900))
(assert (axiom_int_approximation x901))
(assert (axiom_int_approximation x903))
(assert (axiom_int_approximation x905))
(assert (axiom_int_approximation x906))
(assert (axiom_int_approximation x907))
(assert (axiom_int_approximation x909))
(assert (axiom_int_approximation x91))
(assert (axiom_int_approximation x911))
(assert (axiom_int_approximation x912))
(assert (axiom_int_approximation x915))
(assert (axiom_int_approximation x919))
(assert (axiom_int_approximation x921))
(assert (axiom_int_approximation x922))
(assert (axiom_int_approximation x923))
(assert (axiom_int_approximation x924))
(assert (axiom_int_approximation x926))
(assert (axiom_int_approximation x927))
(assert (axiom_int_approximation x929))
(assert (axiom_int_approximation x93))
(assert (axiom_int_approximation x930))
(assert (axiom_int_approximation x931))
(assert (axiom_int_approximation x932))
(assert (axiom_int_approximation x933))
(assert (axiom_int_approximation x934))
(assert (axiom_int_approximation x936))
(assert (axiom_int_approximation x937))
(assert (axiom_int_approximation x938))
(assert (axiom_int_approximation x94))
(assert (axiom_int_approximation x940))
(assert (axiom_int_approximation x941))
(assert (axiom_int_approximation x942))
(assert (axiom_int_approximation x944))
(assert (axiom_int_approximation x946))
(assert (axiom_int_approximation x947))
(assert (axiom_int_approximation x95))
(assert (axiom_int_approximation x951))
(assert (axiom_int_approximation x953))
(assert (axiom_int_approximation x954))
(assert (axiom_int_approximation x957))
(assert (axiom_int_approximation x959))
(assert (axiom_int_approximation x961))
(assert (axiom_int_approximation x962))
(assert (axiom_int_approximation x963))
(assert (axiom_int_approximation x964))
(assert (axiom_int_approximation x965))
(assert (axiom_int_approximation x967))
(assert (axiom_int_approximation x97))
(assert (axiom_int_approximation x970))
(assert (axiom_int_approximation x971))
(assert (axiom_int_approximation x973))
(assert (axiom_int_approximation x976))
(assert (axiom_int_approximation x977))
(assert (axiom_int_approximation x979))
(assert (axiom_int_approximation x98))
(assert (axiom_int_approximation x980))
(assert (axiom_int_approximation x982))
(assert (axiom_int_approximation x983))
(assert (axiom_int_approximation x986))
(assert (axiom_int_approximation x987))
(assert (axiom_int_approximation x99))
(assert (axiom_int_approximation x990))
(assert (axiom_int_approximation x991))
(assert (axiom_int_approximation x993))
(assert (axiom_int_approximation x995))
(assert (axiom_int_approximation x996))
(assert (axiom_int_approximation x997))
(assert (axiom_int_approximation x998))
(assert (= (or (and x188 x491) (and x902 x1413) (and x1244 x837)) x1295))
(assert (x290 x937 x331))
(assert (x1016 x134))
(assert (= (x1418 115792089237316195423570985008687907853269984665640564039457584007913129639904) (x1128 115792089237316195423570985008687907853269984665640564039457584007913129639904)))
(assert (= (ite (= x741 x47) 115197700812830431890159100217698998050002284567939525164234024451216521560064 (x380 x47)) (x1241 x47)))
(assert (= (- (/ x476 6277101735386680763835789423207666416102355444464034512896) (uninterp_frac x476 6277101735386680763835789423207666416102355444464034512896)) (x682 x476 192)))
(assert (x908 x368 x412))
(assert (x420 x1363))
(assert (x420 x16))
(assert (x420 x186))
(assert (x1016 x1334))
(assert (= x531 (=> (and (= x1001 x179) (= (< 1 x490) x687) (not x687) (= x1185 x1366) (= x490 (x818 255 x937))) x1258)))
(assert (= (or (and x271 x158) (and x1179 x1513) (and x1129 x605)) x1081))
(assert (x1016 x1481))
(assert (= 0 (x229 x1355)))
(assert (x1016 x520))
(assert (=> (< (- x515 1) 10000) (= (x1418 x515) (x1128 x515))))
(assert (=> (< (- x1018 1) 10000) (= (x1418 x1018) (x1128 x1018))))
(assert (= (x1418 1099511627776) (x1128 1099511627776)))
(assert (x57 x1126 x1137))
(assert (x420 x575))
(assert (= (x1418 76450787359836037641860180984291677749980919077056822294353438043884394381312) (x1128 76450787359836037641860180984291677749980919077056822294353438043884394381312)))
(assert (x420 x93))
(assert (x420 x539))
(assert (x420 x416))
(assert (x1016 x270))
(assert (x420 x696))
(assert (x420 x282))
(assert (x1056 x1515 x283))
(assert (x420 x384))
(assert (x420 x901))
(assert (x420 x409))
(assert (x420 x865))
(assert (x778 x1018))
(assert (x420 x1121))
(assert (= (x1418 826074471) (x1128 826074471)))
(assert (x420 x310))
(assert (x420 x929))
(assert (x420 x538))
(assert (= (x540 (x1128 20282409603651670423947251286016)) 20282409603651670423947251286016))
(assert (= (=> (= x569 (or (> x1399 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= true (<= x1399 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (< x1399 0)))) (and (=> (and (not x569) (= 1 x998) (= x732 x372)) x1043) (=> (and (= (x1436 (+ x322 416)) x13) (= x817 (x818 255 x1075)) (= x990 (x818 1461501637330902918203684832716283019655932542975 x809)) x569 (= x796 (x818 65535 x225)) (= x258 (x818 255 x937)) (= x38 (x818 65535 x815)) (= (x682 x476 192) x319) (= (x818 65535 x319) x221) (or (and (= 1 x134) (not x1489)) (and (or (and (= x1521 (- (/ 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1250) (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1250))) (or (and (= 10 x1250) (= 1 x1407) (not x467)) (and (= x1264 (= 0 x1200)) (= (ite x1264 1 10) x1407) (= (> x719 1) x1197) (not x1197) (= 100 x1250) x467 (= x719 (x682 x817 1)) (= (x818 1 x817) x1200))) (= (> x817 1) x467) (= (uninterp_mod (* x1407 x1250) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x846) (not (< x1521 x1407)) x503 (= x846 x134)) (and (= x134 (x1008 10 x817)) (not x503))) (= x653 1) (= (x818 x1108 x1107) x625) (= x1107 (ite (< x817 32) 1 0)) (= 1 x1108) (= x503 (= (x1049 x1313 x625) 0)) (= x929 (ite (< x817 78) 1 0)) x1489 (= x1313 (x818 x653 x929)))) (= (x682 x809 160) x1075) (= (x682 x476 160) x815) (< 0 x258) (= (x682 x476 176) x225) (= x1489 (< 0 x817)) (= (x818 1461501637330902918203684832716283019655932542975 x476) x1095)) x1474))) x1420))
(assert (x420 x1065))
(assert (x420 x206))
(assert (x420 x1201))
(assert (x420 x707))
(assert (x420 x1581))
(assert (x420 x143))
(assert (= (x540 (x1128 3695885053)) 3695885053))
(assert (x420 x254))
(assert (x1016 x519))
(assert (x420 x563))
(assert (x420 x1391))
(assert (x564 x1175 x853))
(assert (x420 x846))
(assert (x420 x1141))
(assert (x718 x621))
(assert (x420 x1285))
(assert (x420 x71))
(assert (x1082 x621 x1249))
(assert (x420 x680))
(assert (x420 x1452))
(assert (x420 x48))
(assert (= (x540 (x1128 3257672857)) 3257672857))
(assert (x420 x357))
(assert (x1016 x476))
(assert (x420 x644))
(assert (x420 x18))
(assert (x420 x545))
(assert (x420 x1148))
(assert (x420 x872))
(assert (x908 x1045 x1460))
(assert (x420 x529))
(assert (x420 x203))
(assert (x420 x395))
(assert (x420 x317))
(assert (x420 x654))
(assert (x908 x189 x1040))
(assert (x420 x1182))
(assert (x420 x291))
(assert (= 50942633119752846454219349998365661925608737367104304655302372697894809501696 (x540 (x1128 50942633119752846454219349998365661925608737367104304655302372697894809501696))))
(assert (= (x1418 4062139261) (x1128 4062139261)))
(assert (x420 x1010))
(assert (x1016 x907))
(assert (= (x1241 x1109) (ite (= x1109 x741) 115197700812830431890159100217698998050002284567939525164234024451216521560064 (x380 x1109))))
(assert (= x611 (and (not x1353) x509)))
(assert (x1056 x1251 x977))
(assert (x420 x781))
(assert (= 274184521717934524641157099916833587233 (x540 (x1128 274184521717934524641157099916833587233))))
(assert (x908 x134 x500))
(assert (x420 x1518))
(assert (x420 x1142))
(assert (x420 x1584))
(assert (x420 x64))
(assert (= (x1418 65535) (x1128 65535)))
(assert (x420 x1006))
(assert (x420 x678))
(assert (= true x767))
(assert (x420 x863))
(assert (x908 x1443 x588))
(assert (x1016 x368))
(assert (x420 x1309))
(assert (x1016 x545))
(assert (x420 x246))
(assert (= x12 (x540 (x1418 x12))))
(assert (x420 x1204))
(assert (x420 x1444))
(assert (= (x540 (x1128 2799315671)) 2799315671))
(assert (x420 x324))
(assert (x420 x930))
(assert (x1016 x1429))
(assert (x420 x118))
(assert (x1165 x970 x1139 x1111 x1421))
(assert (x420 x1380))
(assert (x1016 x722))
(assert (x420 x47))
(assert (x420 x903))
(assert (x1016 x815))
(assert (x420 x1053))
(assert (x420 x831))
(assert (x1056 x1108 x1107))
(assert (x908 x558 x1495))
(assert (x420 x907))
(assert (x1016 x1462))
(assert (x420 x632))
(assert (x420 x1303))
(assert (x564 x1288 x1159))
(assert (= (x540 (x1128 18446744073709551616)) 18446744073709551616))
(assert (x420 x294))
(assert (x1315 x625))
(assert (x420 x99))
(assert (x420 x1251))
(assert (x420 x602))
(assert (x420 x1557))
(assert (x420 x957))
(assert (= true x679))
(assert (= (ite (= x909 x741) 115197700812830431890159100217698998050002284567939525164234024451216521560064 (x380 x909)) (x1241 x909)))
(assert (= (x540 (x1128 340282366920938463463374607431768211455)) 340282366920938463463374607431768211455))
(assert (= (x1310 x1053) 0))
(assert (and (= 2596148429267413814265248164610048 (x1008 2 111)) (= 19807040628566084398385987584 (x1008 2 94)) (= (x1008 2 1) 2) (= 3618502788666131106986593281521497120414687020801267626233049500247285301248 (x1008 2 251)) (= 100433627766186892221372630771322662657637687111424552206336 (x1008 2 196)) (= (x1008 2 158) 365375409332725729550921208179070754913983135744) (= 7237005577332262213973186563042994240829374041602535252466099000494570602496 (x1008 2 252)) (= (x1008 2 56) 72057594037927936) (= (x1008 2 194) 25108406941546723055343157692830665664409421777856138051584) (= 41538374868278621028243970633760768 (x1008 2 115)) (= (x1008 2 185) 49039857307708443467467104868809893875799651909875269632) (= 16 (x1008 2 4)) (= (x1008 2 121) 2658455991569831745807614120560689152) (= (x1008 2 90) 1237940039285380274899124224) (= (x1008 2 181) 3064991081731777716716694054300618367237478244367204352) (= (x1008 2 156) 91343852333181432387730302044767688728495783936) (= 98079714615416886934934209737619787751599303819750539264 (x1008 2 186)) (= 3533694129556768659166595001485837031654967793751237916243212402585239552 (x1008 2 241)) (= 2787593149816327892691964784081045188247552 (x1008 2 141)) (= 1208925819614629174706176 (x1008 2 80)) (= (x1008 2 211) 3291009114642412084309938365114701009965471731267159726697218048) (= (x1008 2 214) 26328072917139296674479506920917608079723773850137277813577744384) (= 220855883097298041197912187592864814478435487109452369765200775161577472 (x1008 2 237)) (= (x1008 2 66) 73786976294838206464) (= (x1008 2 107) 162259276829213363391578010288128) (= (x1008 2 91) 2475880078570760549798248448) (= 1569275433846670190958947355801916604025588861116008628224 (x1008 2 190)) (= (x1008 2 92) 4951760157141521099596496896) (= (x1008 2 174) 23945242826029513411849172299223580994042798784118784) (= 6901746346790563787434755862277025452451108972170386555162524223799296 (x1008 2 232)) (= (x1008 2 191) 3138550867693340381917894711603833208051177722232017256448) (= (x1008 2 213) 13164036458569648337239753460458804039861886925068638906788872192) (= (x1008 2 146) 89202980794122492566142873090593446023921664) (= 842498333348457493583344221469363458551160763204392890034487820288 (x1008 2 219)) (= 21778071482940061661655974875633165533184 (x1008 2 134)) (= (x1008 2 93) 9903520314283042199192993792) (= 1606938044258990275541962092341162602522202993782792835301376 (x1008 2 200)) (= 24519928653854221733733552434404946937899825954937634816 (x1008 2 184)) (= (x1008 2 87) 154742504910672534362390528) (= 210624583337114373395836055367340864637790190801098222508621955072 (x1008 2 217)) (= (x1008 2 45) 35184372088832) (= 348449143727040986586495598010130648530944 (x1008 2 138)) (= 187072209578355573530071658587684226515959365500928 (x1008 2 167)) (= 10141204801825835211973625643008 (x1008 2 103)) (= 268435456 (x1008 2 28)) (= (x1008 2 246) 113078212145816597093331040047546785012958969400039613319782796882727665664) (= 2251799813685248 (x1008 2 51)) (= 10633823966279326983230456482242756608 (x1008 2 123)) (= 1152921504606846976 (x1008 2 60)) (= (x1008 2 72) 4722366482869645213696) (= (x1008 2 204) 25711008708143844408671393477458601640355247900524685364822016) (= 1393796574908163946345982392040522594123776 (x1008 2 140)) (= (x1008 2 13) 8192) (= (x1008 2 216) 105312291668557186697918027683670432318895095400549111254310977536) (= 10384593717069655257060992658440192 (x1008 2 113)) (= 45671926166590716193865151022383844364247891968 (x1008 2 155)) (= (x1008 2 86) 77371252455336267181195264) (= 452312848583266388373324160190187140051835877600158453279131187530910662656 (x1008 2 248)) (= 262144 (x1008 2 18)) (= 1099511627776 (x1008 2 40)) (= (x1008 2 7) 128) (= 340282366920938463463374607431768211456 (x1008 2 128)) (= 1048576 (x1008 2 20)) (= (x1008 2 77) 151115727451828646838272) (= 37778931862957161709568 (x1008 2 75)) (= 576460752303423488 (x1008 2 59)) (= (x1008 2 35) 34359738368) (= (x1008 2 208) 411376139330301510538742295639337626245683966408394965837152256) (= (x1008 2 64) 18446744073709551616) (= 324518553658426726783156020576256 (x1008 2 108)) (= (x1008 2 255) 57896044618658097711785492504343953926634992332820282019728792003956564819968) (= (x1008 2 0) 1) (= 11692013098647223345629478661730264157247460343808 (x1008 2 163)) (= (x1008 2 206) 102844034832575377634685573909834406561420991602098741459288064) (= (x1008 2 47) 140737488355328) (= 2048 (x1008 2 11)) (= 1024 (x1008 2 10)) (= (x1008 2 254) 28948022309329048855892746252171976963317496166410141009864396001978282409984) (= (x1008 2 21) 2097152) (= 5846006549323611672814739330865132078623730171904 (x1008 2 162)) (= (x1008 2 198) 401734511064747568885490523085290650630550748445698208825344) (= (x1008 2 166) 93536104789177786765035829293842113257979682750464) (= 22835963083295358096932575511191922182123945984 (x1008 2 154)) (= 14134776518227074636666380005943348126619871175004951664972849610340958208 (x1008 2 243)) (= (x1008 2 189) 784637716923335095479473677900958302012794430558004314112) (= 53919893334301279589334030174039261347274288845081144962207220498432 (x1008 2 225)) (= 392318858461667547739736838950479151006397215279002157056 (x1008 2 188)) (= (x1008 2 6) 64) (= (x1008 2 132) 5444517870735015415413993718908291383296) (= (x1008 2 227) 215679573337205118357336120696157045389097155380324579848828881993728) (= (x1008 2 182) 6129982163463555433433388108601236734474956488734408704) (= (x1008 2 44) 17592186044416) (= (x1008 2 104) 20282409603651670423947251286016) (= 281474976710656 (x1008 2 48)) (= 10889035741470030830827987437816582766592 (x1008 2 133)) (= (x1008 2 207) 205688069665150755269371147819668813122841983204197482918576128) (= 1180591620717411303424 (x1008 2 70)) (= (x1008 2 43) 8796093022208) (= (x1008 2 173) 11972621413014756705924586149611790497021399392059392) (= (x1008 2 116) 83076749736557242056487941267521536) (= (x1008 2 120) 1329227995784915872903807060280344576) (= (x1008 2 117) 166153499473114484112975882535043072) (= 137438953472 (x1008 2 37)) (= 158456325028528675187087900672 (x1008 2 97)) (= (x1008 2 88) 309485009821345068724781056) (= (x1008 2 29) 536870912) (= 3369993333393829974333376885877453834204643052817571560137951281152 (x1008 2 221)) (= (x1008 2 234) 27606985387162255149739023449108101809804435888681546220650096895197184) (= (x1008 2 82) 4835703278458516698824704) (= 288230376151711744 (x1008 2 58)) (= (x1008 2 144) 22300745198530623141535718272648361505980416) (= 9444732965739290427392 (x1008 2 73)) (= 562949953421312 (x1008 2 49)) (= (x1008 2 99) 633825300114114700748351602688) (= 6427752177035961102167848369364650410088811975131171341205504 (x1008 2 202)) (= 295147905179352825856 (x1008 2 68)) (= 38685626227668133590597632 (x1008 2 85)) (= 680564733841876926926749214863536422912 (x1008 2 129)) (= 52656145834278593348959013841835216159447547700274555627155488768 (x1008 2 215)) (= (x1008 2 81) 2417851639229258349412352) (= (x1008 2 100) 1267650600228229401496703205376) (= 1645504557321206042154969182557350504982735865633579863348609024 (x1008 2 210)) (= (x1008 2 50) 1125899906842624) (= 191561942608236107294793378393788647952342390272950272 (x1008 2 177)) (= 85070591730234615865843651857942052864 (x1008 2 126)) (= (x1008 2 160) 1461501637330902918203684832716283019655932542976) (= (x1008 2 3) 8) (= (x1008 2 148) 356811923176489970264571492362373784095686656) (= (x1008 2 170) 1496577676626844588240573268701473812127674924007424) (= 7067388259113537318333190002971674063309935587502475832486424805170479104 (x1008 2 242)) (= 8589934592 (x1008 2 33)) (= (x1008 2 176) 95780971304118053647396689196894323976171195136475136) (= 23384026197294446691258957323460528314494920687616 (x1008 2 164)) (= 110427941548649020598956093796432407239217743554726184882600387580788736 (x1008 2 236)) (= 332306998946228968225951765070086144 (x1008 2 118)) (= 803469022129495137770981046170581301261101496891396417650688 (x1008 2 199)) (= 6277101735386680763835789423207666416102355444464034512896 (x1008 2 192)) (= 55213970774324510299478046898216203619608871777363092441300193790394368 (x1008 2 235)) (= 4503599627370496 (x1008 2 52)) (= (x1008 2 256) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= 28269553036454149273332760011886696253239742350009903329945699220681916416 (x1008 2 244)) (= (x1008 2 61) 2305843009213693952) (= 13479973333575319897333507543509815336818572211270286240551805124608 (x1008 2 223)) (= (x1008 2 193) 12554203470773361527671578846415332832204710888928069025792) (= 21267647932558653966460912964485513216 (x1008 2 124)) (= (x1008 2 55) 36028797018963968) (= (x1008 2 119) 664613997892457936451903530140172288) (= (x1008 2 152) 5708990770823839524233143877797980545530986496) (= 1427247692705959881058285969449495136382746624 (x1008 2 150)) (= 70368744177664 (x1008 2 46)) (= (x1008 2 62) 4611686018427387904) (= 2199023255552 (x1008 2 41)) (= (x1008 2 69) 590295810358705651712) (= 1809251394333065553493296640760748560207343510400633813116524750123642650624 (x1008 2 250)) (= 374144419156711147060143317175368453031918731001856 (x1008 2 168)) (= (x1008 2 101) 2535301200456458802993406410752) (= 431359146674410236714672241392314090778194310760649159697657763987456 (x1008 2 228)) (= 2147483648 (x1008 2 31)) (= 441711766194596082395824375185729628956870974218904739530401550323154944 (x1008 2 238)) (= (x1008 2 224) 26959946667150639794667015087019630673637144422540572481103610249216) (= 14474011154664524427946373126085988481658748083205070504932198000989141204992 (x1008 2 253)) (= 75557863725914323419136 (x1008 2 76)) (= (x1008 2 151) 2854495385411919762116571938898990272765493248) (= 226156424291633194186662080095093570025917938800079226639565593765455331328 (x1008 2 247)) (= 8388608 (x1008 2 23)) (= 2993155353253689176481146537402947624255349848014848 (x1008 2 171)) (= 46768052394588893382517914646921056628989841375232 (x1008 2 165)) (= (x1008 2 39) 549755813888) (= 5316911983139663491615228241121378304 (x1008 2 122)) (= (x1008 2 201) 3213876088517980551083924184682325205044405987565585670602752) (= (x1008 2 125) 42535295865117307932921825928971026432) (= 11417981541647679048466287755595961091061972992 (x1008 2 153)) (= (x1008 2 110) 1298074214633706907132624082305024) (= 274877906944 (x1008 2 38)) (= (x1008 2 112) 5192296858534827628530496329220096) (= (x1008 2 159) 730750818665451459101842416358141509827966271488) (= 44601490397061246283071436545296723011960832 (x1008 2 145)) (= 748288838313422294120286634350736906063837462003712 (x1008 2 169)) (= (x1008 2 136) 87112285931760246646623899502532662132736) (= (x1008 2 179) 766247770432944429179173513575154591809369561091801088) (= 421249166674228746791672110734681729275580381602196445017243910144 (x1008 2 218)) (= 1684996666696914987166688442938726917102321526408785780068975640576 (x1008 2 220)) (= 182687704666362864775460604089535377456991567872 (x1008 2 157)) (= (x1008 2 14) 16384) (= 316912650057057350374175801344 (x1008 2 98)) (= 862718293348820473429344482784628181556388621521298319395315527974912 (x1008 2 229)) (= 649037107316853453566312041152512 (x1008 2 109)) (= 302231454903657293676544 (x1008 2 78)) (= (x1008 2 17) 131072) (= (x1008 2 149) 713623846352979940529142984724747568191373312) (= 178405961588244985132285746181186892047843328 (x1008 2 147)) (= (x1008 2 89) 618970019642690137449562112) (= 4096 (x1008 2 12)) (= 33554432 (x1008 2 25)) (= 32 (x1008 2 5)) (= (x1008 2 2) 4) (= (x1008 2 16) 65536) (= (x1008 2 231) 3450873173395281893717377931138512726225554486085193277581262111899648) (= (x1008 2 130) 1361129467683753853853498429727072845824) (= (x1008 2 36) 68719476736) (= 5070602400912917605986812821504 (x1008 2 102)) (= (x1008 2 96) 79228162514264337593543950336) (= (x1008 2 65) 36893488147419103232) (= 6739986666787659948666753771754907668409286105635143120275902562304 (x1008 2 222)) (= (x1008 2 95) 39614081257132168796771975168) (= 604462909807314587353088 (x1008 2 79)) (= 1532495540865888858358347027150309183618739122183602176 (x1008 2 180)) (= 9007199254740992 (x1008 2 53)) (= 11150372599265311570767859136324180752990208 (x1008 2 143)) (= 43556142965880123323311949751266331066368 (x1008 2 135)) (= 147573952589676412928 (x1008 2 67)) (= (x1008 2 245) 56539106072908298546665520023773392506479484700019806659891398441363832832) (= 4194304 (x1008 2 22)) (= (x1008 2 127) 170141183460469231731687303715884105728) (= (x1008 2 114) 20769187434139310514121985316880384) (= (x1008 2 24) 16777216) (= (x1008 2 142) 5575186299632655785383929568162090376495104) (= (x1008 2 74) 18889465931478580854784) (= 12855504354071922204335696738729300820177623950262342682411008 (x1008 2 203)) (= (x1008 2 178) 383123885216472214589586756787577295904684780545900544) (= (x1008 2 19) 524288) (= (x1008 2 27) 134217728) (= 13803492693581127574869511724554050904902217944340773110325048447598592 (x1008 2 233)) (= 196159429230833773869868419475239575503198607639501078528 (x1008 2 187)) (= (x1008 2 34) 17179869184) (= 5986310706507378352962293074805895248510699696029696 (x1008 2 172)) (= (x1008 2 8) 256) (= (x1008 2 26) 67108864) (= 822752278660603021077484591278675252491367932816789931674304512 (x1008 2 209)) (= 19342813113834066795298816 (x1008 2 84)) (= (x1008 2 212) 6582018229284824168619876730229402019930943462534319453394436096) (= (x1008 2 161) 2923003274661805836407369665432566039311865085952) (= 144115188075855872 (x1008 2 57)) (= (x1008 2 249) 904625697166532776746648320380374280103671755200316906558262375061821325312) (= 696898287454081973172991196020261297061888 (x1008 2 139)) (= 200867255532373784442745261542645325315275374222849104412672 (x1008 2 197)) (= 40564819207303340847894502572032 (x1008 2 105)) (= (x1008 2 83) 9671406556917033397649408) (= 81129638414606681695789005144064 (x1008 2 106)) (= (x1008 2 226) 107839786668602559178668060348078522694548577690162289924414440996864) (= 51422017416287688817342786954917203280710495801049370729644032 (x1008 2 205)) (= 1766847064778384329583297500742918515827483896875618958121606201292619776 (x1008 2 240)) (= 2361183241434822606848 (x1008 2 71)) (= 18014398509481984 (x1008 2 54)) (= 1725436586697640946858688965569256363112777243042596638790631055949824 (x1008 2 230)) (= (x1008 2 131) 2722258935367507707706996859454145691648) (= (x1008 2 42) 4398046511104) (= (x1008 2 239) 883423532389192164791648750371459257913741948437809479060803100646309888) (= 47890485652059026823698344598447161988085597568237568 (x1008 2 175)) (= 512 (x1008 2 9)) (= (x1008 2 183) 12259964326927110866866776217202473468949912977468817408) (= (x1008 2 63) 9223372036854775808) (= (x1008 2 137) 174224571863520493293247799005065324265472) (= 50216813883093446110686315385661331328818843555712276103168 (x1008 2 195)) (= (x1008 2 15) 32768) (= 4294967296 (x1008 2 32)) (= (x1008 2 30) 1073741824)))
(assert (x420 x855))
(assert (x420 x819))
(assert (= 0 (x1164 x584)))
(assert (x420 x126))
(assert (x420 x675))
(assert (x420 x1087))
(assert (x420 x165))
(assert (x420 x1427))
(assert (x420 x727))
(assert (=> (> (+ 10000 1) x661) (= (x1128 x661) (x1418 x661))))
(assert (x420 x1504))
(assert (x420 x237))
(assert (= (x1418 57896044618658097711785492504343953926634992332820282019728792003956564819967) (x1128 57896044618658097711785492504343953926634992332820282019728792003956564819967)))
(assert (= (ite (= 132 x702) 274184521717934524641157099916833587211 (x1593 x702)) (x910 x702)))
(assert (x1016 x1503))
(assert (x420 x1351))
(assert (x420 x1169))
(assert (x420 x1440))
(assert (x420 x166))
(assert (x420 x601))
(assert (x1016 x1321))
(assert (x564 x29 x806))
(assert (x420 x242))
(assert (= (ite (= x51 x47) x1427 (x1549 x47)) (x1588 x47)))
(assert (x420 x1252))
(assert (= (x1310 x909) 0))
(assert (x420 x1107))
(assert (x1082 x556 x828))
(assert (x1056 x288 x616))
(assert (x420 x780))
(assert (x420 x976))
(assert (x420 x1005))
(assert (x420 x1342))
(assert (= (x540 (x1128 1208925819614629174706176)) 1208925819614629174706176))
(assert (x1016 x56))
(assert (x420 x1192))
(assert (x420 x571))
(assert (= (x910 x1511) (ite (= x1511 132) 274184521717934524641157099916833587211 (x1593 x1511))))
(assert (x420 x1066))
(assert (x420 x372))
(assert (x57 x77 x748))
(assert (= x1172 (=> (and (= (x1436 (+ 36 x1560)) x443) (= (= 274184521717934524641157099916833587231 x701) x902) (= x1483 (or (and (> 0 x1522) (= (<= x1522 57896044618658097711785492504343953926634992332820282019728792003956564819967) true)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1522))) (= (ite (or (and (= (<= x1522 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (< x1522 0)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1522)) 1 0) x1251) (= (x1436 (+ x1450 128)) x1560) (= x425 (x818 x1251 x977)) (not (or (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1156)) (< x1156 32)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1156))) (<= 0 x241) (= (x763 x1590) x242) (= (ite (or (and (> 0 x1214) (= true (<= x1214 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1214)) 1 0) x1515) (= (x818 20282409603651670423947251286015 x505) x259) (< x1529 20282409603651670423947251286016) (= (x1436 (+ x243 64)) x51) (= (or (and (> 0 x1354) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1354))) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1354)) x1092) (= (x818 x1515 x283) x1252) (= (* x241 x1529) x982) (= x243 (x1436 (+ x1450 132))) (= x1354 (x1436 (+ x242 x1214))) (not (ite x610 (not (< x1354 x70)) x610)) (= (ite (or (and (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x309) (<= x669 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (and (< x309 x669) (= (<= x309 57896044618658097711785492504343953926634992332820282019728792003956564819967) (<= x669 57896044618658097711785492504343953926634992332820282019728792003956564819967)))) 1 0) x616) (not (< 10141204801825835211973625643007 x995)) (= x283 (ite (or (and (> x781 x242) (= (<= x781 57896044618658097711785492504343953926634992332820282019728792003956564819967) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x242))) (and (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x242) (<= x781 57896044618658097711785492504343953926634992332820282019728792003956564819967))) 1 0)) (= (ite (or (and (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1393) (<= x242 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (and (= (<= x242 57896044618658097711785492504343953926634992332820282019728792003956564819967) (<= x1393 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (> x242 x1393))) 1 0) x1201) (= (x818 x288 x616) x834) (= x425 0) (= (ite (not x1174) 1 0) x528) (< (* x209 x262) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x505 x982) (= (x1014 128) x309) (>= x209 0) (< x241 18446744073709551616) (= x995 (x818 20282409603651670423947251286015 x1590)) (not (= 0 x454)) (= x701 (x818 1461501637330902918203684832716283019655932542975 x520)) (= (x1436 (+ 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1522)) x1274) (= x977 (ite (or (and (> x309 x1274) (= (<= x309 57896044618658097711785492504343953926634992332820282019728792003956564819967) (<= x1274 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (and (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x309) (> x1274 57896044618658097711785492504343953926634992332820282019728792003956564819967))) 1 0)) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (* x1529 x241)) (<= x209 20282409603651670423947251286015) (= (x949 (- 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1214)) x1393) (= x288 (ite (not x1483) 1 0)) (= 0 x1339) (= (x1436 (+ x1522 57896044618658097711785492504343953926634992332820282019728792003956564819968)) x669) (= (x1436 (+ 100 x1560)) x1199) (= x1174 (or (and (< x1214 0) (= true (<= x1214 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1214))) (= (x949 (- x669 x309)) x781) (= (x1436 (+ x1156 31)) x645) (= x1339 (x818 x528 x1201)) (= x1590 x1453) (> 18446744073709551616 x262) (= (x949 (- x309 x1522)) x1214) (= x175 (x949 (- x1199 x1560))) (< x209 20282409603651670423947251286016) (<= x262 18446744073709551615) (= 0 x834) (<= x1529 20282409603651670423947251286015) (not (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x309)) (<= x241 18446744073709551615) (= x1453 (* x262 x209)) (>= x1529 0) (= x1526 274184521717934524641157099916833587211) (= (x763 x505) x1522) (= x610 (not x1092)) (<= 0 x262) (= 0 x1252) (= x1450 (x818 115792089237316195423570985008687907853269984665640564039457584007913129639904 x645)) (not (< 10141204801825835211973625643007 x259))) (and (=> (not x902) x1074) (=> (and (= x661 (x818 1461501637330902918203684832716283019655932542975 x713)) (= x59 (x1052 (x1418 x661) (x1128 1) 0)) (= x1005 x386) (= 274184521717934524641157099916833587211 x26) (= x1337 x1146) (= 16156842317565293874272834530371880720966471053262404558597773956279093428224 x889) (not (= 157198259 x1145)) (= x1207 (x1052 (x1418 274184521717934524641157099916833587211) x1476 0)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1110) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x657) (= x657 (x843 x1207)) (not (> 4 x563)) (> x383 0) (= x432 274184521717934524641157099916833587211) (= (x735 (x1418 274184521717934524641157099916833587231)) x383) (= x382 x713) (< (+ x1110 x1337) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= (x818 1461501637330902918203684832716283019655932542975 x713) x863) (not x497) (= x1005 x1337) (= (x818 1461501637330902918203684832716283019655932542975 x713) x1333) (= 1 x462) (= x1536 32) (= (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1391) (and (= (<= x1391 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (< x1391 96))) x1151) (= x881 (x818 1461501637330902918203684832716283019655932542975 x713)) (= (x1052 (x1418 274184521717934524641157099916833587211) (x1128 1) 0) x1085) (= (x1052 (x1418 x1333) (x1128 2) 0) x1476) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1404) (= x884 (x949 (- x1404 x1005))) (not x1320) (= (x949 (- x563 4)) x1391) (= (> x1337 x657) x497) (= x1110 (x1358 x787)) (= (x1052 (x1418 274184521717934524641157099916833587211) (x1128 1) 0) x787) (= x1262 x1110) (>= x1404 0) x902 (= x563 100) (= 274184521717934524641157099916833587211 x1187) (= x1320 (< x1404 x1005)) (>= x657 0) (not (= 404098525 x1145)) (>= x1110 0) (= (+ x1262 x1146) x444) (not x1151) (= x1145 599290589) (= (x78 x1551) x1404) (= x83 274184521717934524641157099916833587211) (= x175 x563) (> 826074471 x1145) (not (= x1145 117300739)) (= (x1052 (x1418 x863) (x1128 1) 0) x1551) (= x867 (x949 (- x657 x1005))) (<= x713 1461501637330902918203684832716283019655932542975)) x717)))))
(assert (x413 x733))
(assert (x420 x603))
(assert (x1016 x1045))
(assert (x420 x1209))
(assert (x420 x292))
(assert (x420 x478))
(assert (x420 x1067))
(assert (x420 x228))
(assert (x420 x97))
(assert (x420 x1308))
(assert (x1016 x616))
(assert (x420 x931))
(assert (= x271 (and (not x1513) x1179)))
(assert (x420 x359))
(assert (x420 x909))
(assert (x420 x44))
(assert (x420 x1203))
(assert (x420 x799))
(assert (x1056 x1265 x1105))
(assert (x1082 x1130 x522))
(assert (x420 x1580))
(assert (x420 x1338))
(assert (x420 x1503))
(assert (x1082 x1398 x967))
(assert (x1016 x10))
(assert (x420 x464))
(assert (x420 x1196))
(assert (x788 x1281 x550))
(assert (and (= (x1008 10 7) 10000000) (= 100000000000000000000000000000 (x1008 10 29)) (= (x1008 10 25) 10000000000000000000000000) (= 10000000000000 (x1008 10 13)) (= (x1008 10 28) 10000000000000000000000000000) (= 1000000000000000000 (x1008 10 18)) (= (x1008 10 16) 10000000000000000) (= (x1008 10 4) 10000) (= (x1008 10 6) 1000000) (= 1000000000 (x1008 10 9)) (= 10 (x1008 10 1)) (= 10000000000 (x1008 10 10)) (= 100000 (x1008 10 5)) (= 100000000000 (x1008 10 11)) (= 1000000000000000000000000 (x1008 10 24)) (= (x1008 10 14) 100000000000000) (= 1000000000000000 (x1008 10 15)) (= (x1008 10 19) 10000000000000000000) (= 100000000000000000000000 (x1008 10 23)) (= 1000000000000000000000000000000 (x1008 10 30)) (= 100000000 (x1008 10 8)) (= 100000000000000000 (x1008 10 17)) (= 1000000000000 (x1008 10 12)) (= 1000000000000000000000 (x1008 10 21)) (= 1 (x1008 10 0)) (= 100 (x1008 10 2)) (= 100000000000000000000 (x1008 10 20)) (= 1000 (x1008 10 3)) (= (x1008 10 26) 100000000000000000000000000) (= (x1008 10 22) 10000000000000000000000) (= 1000000000000000000000000000 (x1008 10 27))))
(assert (= 0 (x1310 x702)))
(assert (x420 x1514))
(assert (x420 x505))
(assert (x420 x379))
(assert (x420 x557))
(assert (x420 x700))
(assert (x420 x1511))
(assert (= x352 (=> (= (x763 x1580) x217) (=> (and (>= x1351 0) (< 131 x639) (= x1371 x1430) (= x487 x1292) (<= x1180 1461501637330902918203684832716283019655932542975) (<= 0 x1180) (= (<= x639 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (= x1427 x647) (>= 1461501637330902918203684832716283019655932542975 x382) (= x603 x382) (= x487 x1351) (= x1029 x217) (= x957 x1203) (= x29 x118) (= x907 x804) (= x642 x88) (<= 0 x382) (>= 1461501637330902918203684832716283019655932542975 x1351)) x1350))))
(assert (x420 x74))
(assert (x1082 x604 x106))
(assert (x420 x419))
(assert (x420 x274))
(assert (x420 x1019))
(assert (= (x1128 3638949393) (x1418 3638949393)))
(assert (x420 x983))
(assert (x420 x218))
(assert (x420 x1402))
(assert (= (x1418 2514000705) (x1128 2514000705)))
(assert (x420 x1100))
(assert (x420 x392))
(assert (x420 x871))
(assert (x420 x1109))
(assert (= (x1418 10141204801825835211973625643007) (x1128 10141204801825835211973625643007)))
(assert (x420 x634))
(assert (= (x540 (x1128 4272920204)) 4272920204))
(assert (x420 x219))
(assert (x1082 x418 x1378))
(assert (=> (< (- x298 1) 10000) (= (x1418 x298) (x1128 x298))))
(assert (x420 x782))
(assert (x778 x298))
(assert (x778 274184521717934524641157099916833587231))
(assert (x788 x1429 x483))
(assert (x420 x674))
(assert (= (x540 (x1418 x658)) x658))
(assert (x564 x809 x850))
(assert (x1016 x1150))
(assert (x420 x447))
(assert (x420 x959))
(assert (x420 x583))
(assert (x420 x1456))
(assert (= (x1418 1889567281) (x1128 1889567281)))
(assert (= x1350 (=> (and (>= 1461501637330902918203684832716283019655932542975 x907) (not (> 3253611544 x403)) (not (< x403 2068668150)) (not (< x403 3638949393)) (= (x818 16 x1190) x712) (not (= 3695885053 x403)) (= x349 (= 274184521717934524641157099916833587231 x32)) (= x642 0) (= 3840337785 x403) (not (> 4 x639)) (>= 255 x1190) (>= 1461501637330902918203684832716283019655932542975 x29) (= (not (= 0 x712)) x536) (= x622 x29) (= x957 x1356) (= x32 (x818 1461501637330902918203684832716283019655932542975 x520)) (not (= 3833100637 x403)) (not (= 3795249780 x403)) (<= 0 x1190) (< 0 x855) (not (= 3638949393 x403)) (= x186 (x949 (- x639 4))) (= x386 x1427) (= 128 x1583) (= 274184521717934524641157099916833587211 x578) (not x536) (= x907 x40) (= (x735 (x1418 274184521717934524641157099916833587211)) x855) (not (or (and (= true (<= x186 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (> 128 x186)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x186))) (> 3889878717 x403) (< x1190 256)) (and (=> (not x349) x174) (=> (and (= x897 36) x349 (= 1889567281 x1312) (not (< x897 4)) (= x1156 32) (= 274184521717934524641157099916833587211 x1564) (= x1324 (x735 (x1418 274184521717934524641157099916833587231))) (< 0 x1324) (>= x8 0) (= 36 x897) (= (or (and (> 32 x415) (= (<= x415 57896044618658097711785492504343953926634992332820282019728792003956564819967) true)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x415)) x1216) (not x1216) (= (x1052 (x1418 274184521717934524641157099916833587211) (x1128 1) 0) x1493) (<= x8 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x949 (- x897 4)) x415) (= 50942633119752846454219349998365661925608737367104304655302372697894809501696 x1142) (not (= x1312 826074471)) (= (x78 x1493) x8) (= 1 x454) (not (< x1312 826074471))) x1172)))))
(assert (x420 x485))
(assert (x57 x633 x1155))
(assert (x1082 x961 x757))
(assert (x420 x745))
(assert (x420 x301))
(assert (x420 x769))
(assert (= x1295 x797))
(assert (x420 x179))
(assert (x420 x1465))
(assert (x420 x178))
(assert (x420 x1490))
(assert (x420 x243))
(assert (x420 x306))
(assert (x420 x402))
(assert (x420 x1018))
(assert (x1016 x124))
(assert (= x1430 (x540 (x1418 x1430))))
(assert (x420 x1038))
(assert (x420 x220))
(assert (x420 x302))
(assert (x420 x263))
(assert (= x1138 (x540 (x1418 x1138))))
(assert (= (x540 (x1418 x30)) x30))
(assert (x420 x80))
(assert (x420 x311))
(assert (x420 x1033))
(assert (x1082 x519 x1143))
(assert (x290 x1075 x551))
(assert (x420 x264))
(assert (x1056 x671 x104))
(assert (x420 x304))
(assert (= x354 (x540 (x1418 x354))))
(assert (x420 x253))
(assert (x420 x555))
(assert (= 3889878717 (x540 (x1128 3889878717))))
(assert (x420 x881))
(assert (x420 x839))
(assert (x420 x1587))
(assert (x420 x1226))
(assert (x420 x922))
(assert (x564 x693 x1079))
(assert (=> (< (- x1333 1) 10000) (= (x1128 x1333) (x1418 x1333))))
(assert (x420 x548))
(assert (=> (> (+ 10000 1) x354) (= (x1418 x354) (x1128 x354))))
(assert (= (- (/ x476 95780971304118053647396689196894323976171195136475136) (uninterp_frac x476 95780971304118053647396689196894323976171195136475136)) (x682 x476 176)))
(assert (= (x1128 18446744073709551616) (x1418 18446744073709551616)))
(assert (x1016 x528))
(assert (x420 x19))
(assert (= (ite (= x210 x47) x424 (x435 x47)) (x1544 x47)))
(assert (x261 x1313 x625))
(assert (x420 x336))
(assert (x1016 255))
(assert (x420 x971))
(assert (x420 x1294))
(assert (x420 x762))
(assert (x420 x805))
(assert (x420 x1432))
(assert (x420 x546))
(assert (x420 x1537))
(assert (x420 x1403))
(assert (x420 x12))
(assert (= (x1418 117300739) (x1128 117300739)))
(assert (x420 x873))
(assert (x420 x776))
(assert (x1016 x1301))
(assert (x1016 x265))
(assert (x420 x777))
(assert (x420 x1423))
(assert (x788 x815 x1387))
(assert (x420 x341))
(assert (= (x1418 340282366920938463463374607431768211456) (x1128 340282366920938463463374607431768211456)))
(assert (x420 x1389))
(assert (= (x1418 4033150093) (x1128 4033150093)))
(assert (x420 x1224))
(assert (x420 x719))
(assert (x420 x230))
(assert (= x1554 x1081))
(assert (x420 x847))
(assert (x420 x941))
(assert (x420 x13))
(assert (x420 x844))
(assert (= x298 (x540 (x1418 x298))))
(assert (x420 x690))
(assert (x420 x923))
(assert (x420 x480))
(assert (=> (< (- x658 1) 10000) (= (x1418 x658) (x1128 x658))))
(assert (x420 x1265))
(assert (x420 x1529))
(assert (x420 x176))
(assert (x420 x1348))
(assert (= (=> (and (= (x818 1461501637330902918203684832716283019655932542975 x693) x875) (= x1504 (x818 18446744073709551615 x558)) (= x306 (x818 1461501637330902918203684832716283019655932542975 x1288)) (= (x1436 (+ 64 x448)) x1089) (= x1101 4) (<= x387 340282366920938463463374607431768211455) (= x1579 (= x306 274184521717934524641157099916833587235)) (= (x1052 (x1418 274184521717934524641157099916833587211) (x1128 6) 0) x1240) (= x1288 (x1306 x1355)) (= (x676 x1173) x387) (= x392 (x1436 (+ 64 x157))) (= (x818 18446744073709551615 x134) x1066) (< x387 340282366920938463463374607431768211456) (= (x117 x1452) x693) (= (x1436 (+ x372 288)) x207) (= x692 (x1436 (+ x1089 64))) (= (x1436 (+ 64 x13)) x1355) (= x157 (x1436 (+ x357 64))) (= (x1052 (x1418 x875) x1240 0) x1173) (= x357 (x1436 (+ x13 64))) (= x344 (x1436 (+ x372 512))) (= (x682 x809 168) x558) (<= 0 x387) (= (x1436 (+ 288 x372)) x1452) (= 274184521717934524641157099916833587211 x107) (= x448 (x1436 (+ 64 x207)))) (and (=> (and (= (x770 256) x1003) (<= 0 x1480) (= x245 (x1436 (+ x13 352))) (= x857 (x1316 x191)) (<= 0 x1473) (> 1208925819614629174706176 x1019) (< 0 x577) (not (= x707 2362581449)) (not (= 3257672857 x707)) (= 160 x1136) (= x518 (x770 224)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1480) (not (> 2362581449 x707)) (= x755 (x1436 (+ 288 x13))) (= (x770 224) x923) (> 1208925819614629174706176 x213) (>= x857 0) x1579 (<= x857 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x1037 (x770 128)) (not (= x707 4062139261)) (= (x1436 (+ x13 384)) x1035) (= (x770 160) x1169) (<= 0 x213) (= 115197700812830431890159100217698998050002284567939525164234024451216521560064 x762) (= (x770 160) x1423) (= x390 x1101) (= (x1052 (x1418 x1430) (x1128 1) 0) x191) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1473) (>= 1208925819614629174706175 x213) (= (x770 192) x1345) (= (x770 192) x436) (= (x770 128) x1403) (= x577 (x735 (x1418 274184521717934524641157099916833587235))) (= x1073 (x770 256)) (= x390 4) (>= 1208925819614629174706175 x1019) (<= 0 x1019) (= (x1436 (+ 320 x13)) x795) (= x930 1) (not (> 4 x390)) (= 4272920204 x707)) x1362) (=> (not x1579) x1299))) x1474))
(assert (x420 x444))
(assert (x1056 x1561 x341))
(assert (x1082 x1590 x121))
(assert (x718 x608))
(assert (x420 x1441))
(assert (x420 x1083))
(assert (x1165 x180 x201 x1326 x381))
(assert (x1016 x937))
(assert (x420 x640))
(assert (x57 x1462 x69))
(assert (x420 x1473))
(assert (x420 x1031))
(assert (x420 x1200))
(assert (= (x1128 20282409603651670423947251286015) (x1418 20282409603651670423947251286015)))
(assert (x420 x184))
(assert (= (=> (and (= 0 x919) (= (x818 65535 x1281) x327) (= (x682 x809 160) x1323) (= x716 x991) (= (x818 255 x1323) x1259) (= x19 (x818 1461501637330902918203684832716283019655932542975 x809)) (> x819 0) (= (x818 255 x937) x819) (= x620 (x1436 (+ x328 512))) (= (x818 1461501637330902918203684832716283019655932542975 x476) x286) (= x122 (= 0 x991)) (= (x818 65535 x1429) x1196) (= x614 (x818 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1321)) (> x991 0) (or (and (= x724 1) (not x267)) (and (= x388 (= 0 (x1049 x560 x1447))) (= x671 1) (or (and (not x388) (= x724 (x1008 10 x1259))) (and (= x654 (- (/ 115792089237316195423570985008687907853269984665640564039457584007913129639935 x734) (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x734))) (or (and (= (x682 x1259 1) x1566) (= x1417 (x818 1 x1259)) (= x1441 (ite x1218 1 10)) (= 100 x734) (= (= x1417 0) x1218) (not x737) (= x737 (< 1 x1566)) x1568) (and (= x1441 1) (= 10 x734) (not x1568))) (= (< 1 x1259) x1568) (not (> x1441 x654)) x388 (= x724 x715) (= (uninterp_mod (* x734 x1441) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x715))) (= x560 (x818 x671 x104)) (= 1 x1265) (= (x818 x1265 x1105) x1447) (= (ite (> 78 x1259) 1 0) x104) x267 (= x1105 (ite (> 32 x1259) 1 0)))) (= x529 (x818 255 x937)) (= (x682 x476 160) x1281) (= x310 (x818 65535 x1465)) (not (or (and (< x1536 32) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1536))) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1536))) (= x1465 (x682 x476 192)) (= x1429 (x682 x476 176)) (< 0 x529) (= x328 (x1436 (+ x614 x1560))) (= (not x122) x543) (= (> x1259 0) x267) (= x716 (ite x543 1 0)) (= x1321 (x1436 (+ x1536 31))) (= (x380 x1560) x991) (not (= 0 x462)) (= (x1436 (+ 256 x328)) x1563)) x315) x717))
(assert (x420 x753))
(assert (x420 x245))
(assert (x420 x1346))
(assert (x778 x1138))
(assert (x1082 x894 x1381))
(assert (x420 x954))
(assert (x420 x330))
(assert (x1082 x124 x567))
(assert (x420 x915))
(assert (x1315 x922))
(assert (= 3119561463 (x540 (x1128 3119561463))))
(assert (= (x1128 4272920204) (x1418 4272920204)))
(assert (x420 x355))
(assert (x420 x209))
(assert (= (and (not x695) x797) x509))
(assert (x718 x722))
(assert (= (ite (= x1511 x51) x1427 (x1549 x1511)) (x1588 x1511)))
(assert (x420 x937))
(assert (= x1123 (=> (= x844 (x763 x621)) x498)))
(assert (x420 x393))
(assert (= x875 (x540 (x1418 x875))))
(assert (x420 x1321))
(assert (x718 x505))
(assert (= (x540 (x1128 65535)) 65535))
(assert (x420 x1180))
(assert (x420 x98))
(assert (= (x1418 274184521717934524641157099916833587235) (x1128 274184521717934524641157099916833587235)))
(assert (= (x1418 20282409603651670423947251286016) (x1128 20282409603651670423947251286016)))
(assert (= x738 (or (and x1353 x509) (and x797 x695))))
(assert (x420 x1349))
(assert (x420 x390))
(assert (x1082 x1384 x168))
(assert (= (x682 x1259 1) (- (/ x1259 2) (uninterp_frac x1259 2))))
(assert (x420 x1475))
(assert (x420 x1167))
(assert (x1016 20282409603651670423947251286015))
(assert (= x1032 (=> (and (= x502 (x818 255 x937)) (= x47 (x1436 (+ x573 288))) (= 0 x1302) (= (x1436 (+ 64 x643)) x1329) (= x599 (x818 340282366920938463463374607431768211455 x1445)) (= x643 (x1436 (+ x322 64))) (= (x1544 x322) x469) (<= x469 1208925819614629174706175) (<= x1210 1208925819614629174706175) (= (uninterp_mod (* x599 (x1296 x733)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x1399) (= x372 (x1436 (+ x573 416))) (= x1189 (not x1215)) (= x1215 (and (> x1445 0) (= true (<= x1445 57896044618658097711785492504343953926634992332820282019728792003956564819967)))) (= x849 (< 0 x502)) (= x1210 (x1544 x1329)) (= (x1544 x47) x1445) (not (ite x1189 x1189 (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1445)) (> x1445 170141183460469231731687303715884105727))))) (and (=> x849 x11) (=> (and (not x849) (= x1001 x1399) (= x372 x1185)) x1258)))))
(assert (x420 x344))
(assert (x420 x1552))
(assert (x420 x1185))
(assert (x420 x977))
(assert (x420 x1013))
(assert (= (x1544 x322) (ite (= x210 x322) x424 (x435 x322))))
(assert (x420 x926))
(assert (= x679 x49))
(assert (x420 x1035))
(assert (x420 x469))
(assert (= 599290589 (x540 (x1128 599290589))))
(assert (x446 x1190 x1455 x964 x1090))
(assert (x420 x94))
(assert (x1016 x1251))
(assert (x420 x473))
(assert (x420 x148))
(assert (x420 x1231))
(assert (x420 x454))
(assert (x420 x33))
(assert (x420 x394))
(assert (x420 x1158))
(assert (x420 x639))
(assert (x420 x268))
(assert (x420 x515))
(assert (x420 x962))
(assert (x420 x56))
(assert (x420 x899))
(assert (x420 x556))
(assert (x420 x835))
(assert (x420 x1271))
(assert (x420 x470))
(assert (x420 x221))
(assert (x1016 x1107))
(assert (x420 x1212))
(assert (x420 x285))
(assert (= 274184521717934524641157099916833587244 (x540 (x1418 274184521717934524641157099916833587244))))
(assert (= (x540 (x1128 3840337785)) 3840337785))
(assert (x420 x1545))
(assert (x420 x1245))
(assert (x420 x1589))
(assert (x420 x573))
(assert (x564 x713 x933))
(assert (x420 x951))
(assert (= x1074 (=> (= (= x701 274184521717934524641157099916833587227) x1244) (and (=> (and (not x822) (= x658 (x818 1461501637330902918203684832716283019655932542975 x865)) (not (= 157198259 x753)) (< x753 826074471) (= (x1052 (x1418 274184521717934524641157099916833587211) (x1128 1) 0) x1540) (= 32 x1536) (= (x1052 (x1418 x30) (x1128 1) 0) x852) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x798) (= x1488 (x1052 (x1418 x658) (x1128 1) 0)) (>= x798 0) (= x382 x865) (= (x173 x740) x215) (= x302 x386) (not (< x1167 4)) (not x125) (= x145 (x818 1461501637330902918203684832716283019655932542975 x865)) (> x873 0) (= x115 (x1052 (x1418 274184521717934524641157099916833587211) (x1128 1) 0)) (= (> x696 x215) x822) (not x1291) (= x696 x302) x1244 (= 100 x1167) (= (x818 1461501637330902918203684832716283019655932542975 x865) x464) (>= 1461501637330902918203684832716283019655932542975 x865) (<= x215 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x985 x1488) x798) (= 599290589 x753) (not (= x753 117300739)) (>= x215 0) (= x462 1) (= x1361 274184521717934524641157099916833587211) (< (+ x696 x612) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (<= x612 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x768 (x949 (- x798 x302))) (= (x1052 (x1418 274184521717934524641157099916833587211) x554 0) x740) (= x612 (x1478 x115)) (= (< x798 x302) x1291) (not (= x753 404098525)) (= (x735 (x1418 274184521717934524641157099916833587227)) x873) (= 274184521717934524641157099916833587211 x662) (= (or (> x44 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (< x44 96) (= (<= x44 57896044618658097711785492504343953926634992332820282019728792003956564819967) true))) x125) (= x1167 x175) (= x379 16156842317565293874272834530371880720966471053262404558597773956279093428224) (= (+ x1099 x1221) x514) (= 274184521717934524641157099916833587211 x1541) (= x44 (x949 (- x1167 4))) (= x277 274184521717934524641157099916833587211) (= x554 (x1052 (x1418 x145) (x1128 2) 0)) (= x612 x1099) (= (x949 (- x215 x302)) x429) (>= x612 0) (= x1221 x696) (= (x818 1461501637330902918203684832716283019655932542975 x865) x30)) x717) (=> (not x1244) x838)))))
(assert (x420 x604))
(assert (x420 x363))
(assert (x420 x1433))
(assert (= (=> (and (= (x818 18446744073709551615 x954) x155) (= x545 (x667 x1242)) (= (x1436 (+ x1563 288)) x824) (= x101 4) (= x954 (x682 x809 168)) (= x739 (x818 1461501637330902918203684832716283019655932542975 x29)) (= (x1436 (+ 64 x86)) x223) (= x739 x190) (= x741 (x1436 (+ 512 x1563))) (= (x818 18446744073709551615 x724) x898) (= x695 (= 274184521717934524641157099916833587235 x703)) (= (x1436 (+ 64 x824)) x72) (= x363 (x1436 (+ x1563 320))) (= x190 (x818 1461501637330902918203684832716283019655932542975 x545)) (= x86 (x1436 (+ x620 64))) (= x703 (x818 1461501637330902918203684832716283019655932542975 x936)) (= (x1436 (+ x1563 288)) x1242) (= (x1144 x363) x936) (= x765 (x1436 (+ x631 64))) (= x631 (x1436 (+ x72 64))) (= x941 (x1436 (+ x223 64)))) (and (=> (and (= x1133 (x1550 160)) (not (= 2362581449 x16)) (<= 0 x1480) (= x1346 (x1550 256)) (>= x213 0) (= x237 4) (<= x144 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x101 x237) (> x485 0) (not (= 3257672857 x16)) (= x355 (x1436 (+ x620 352))) (<= x1473 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x1550 128) x1300) (= 115197700812830431890159100217698998050002284567939525164234024451216521560064 x470) x695 (not (> 2362581449 x16)) (= x1582 (x1550 256)) (>= x1019 0) (= (x735 (x1418 274184521717934524641157099916833587235)) x485) (= x1327 (x1052 (x1418 x1430) (x1128 1) 0)) (= (x1550 192) x911) (= x678 1) (= (x1436 (+ x620 384)) x820) (not (= 4062139261 x16)) (< x1019 1208925819614629174706176) (<= x1019 1208925819614629174706175) (= x1534 160) (= x973 (x1436 (+ x620 288))) (not (> 4 x237)) (<= x213 1208925819614629174706175) (< x213 1208925819614629174706176) (<= 0 x1473) (>= x144 0) (= x983 (x1550 224)) (= x235 (x1436 (+ x620 320))) (= x965 (x1550 160)) (= (x1550 128) x1405) (= 4272920204 x16) (= (x1316 x1327) x144) (= (x1550 192) x1083) (<= x1480 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x1550 224) x546)) x618) (=> (not x695) x1119))) x315))
(assert (x420 x281))
(assert (x420 x519))
(assert (= (ite (= x741 x1511) 115197700812830431890159100217698998050002284567939525164234024451216521560064 (x380 x1511)) (x1241 x1511)))
(assert (x420 x487))
(assert (x420 x1502))
(assert (x420 x225))
(assert (x420 x820))
(assert (x420 x934))
(assert (x290 x1255 x1168))
(assert (x420 x1572))
(assert (x1082 x1552 x655))
(assert (= x1236 (or x342 (and x685 (not x759)))))
(assert (x420 x1157))
(assert (x1056 x1301 x10))
(assert (x1082 x571 x585))
(assert (= 115792089237316195423570985008687907853269984665640564039457584007913129639904 (x540 (x1128 115792089237316195423570985008687907853269984665640564039457584007913129639904))))
(assert (x420 x1414))
(assert (x420 x701))
(assert (x420 x277))
(assert (= (and x837 (not x1244)) x188))
(assert (x420 x1220))
(assert (x1016 x1561))
(assert (x788 x1057 x1359))
(assert (x1016 x1130))
(assert (x1016 x1590))
(assert (= true x442))
(assert (x420 x1439))
(assert (x778 x1349))
(assert (x420 x1536))
(assert (x420 x276))
(assert (= (uninterp_mod (x1008 2 x422) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x746 1 x422)))
(assert (x420 x1563))
(assert (= x1577 (=> (= x1129 (= x899 274184521717934524641157099916833587223)) (and (=> (not x1129) x767) (=> (and (= (x455 x347) x471) (not (> 826074471 x1502)) (< 0 x95) (= x480 x515) (not x1) (= x1 (< x597 x871)) (not (= x1502 2514000705)) (not (= 826074471 x1502)) (< (+ x471 x135) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x25 x135) (not (= 1889567281 x1502)) (= x962 (+ x340 x25)) (= 68 x260) (= 2835717307 x1502) x1129 (= x773 274184521717934524641157099916833587211) (= x978 (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1510) (and (> 64 x1510) (= (<= x1510 57896044618658097711785492504343953926634992332820282019728792003956564819967) true)))) (= x649 274184521717934524641157099916833587211) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x471) (= x871 x135) (= (x1052 (x1418 x515) (x1128 1) 0) x347) (= x1147 76450787359836037641860180984291677749980919077056822294353438043884394381312) (= (x949 (- x597 x135)) x1044) (<= 0 x597) (<= x515 1461501637330902918203684832716283019655932542975) (= x879 1) (= x95 (x735 (x1418 274184521717934524641157099916833587223))) (= x742 (x1052 (x1418 274184521717934524641157099916833587211) (x1128 1) 0)) (= x927 x515) (= x340 x471) (= 32 x635) (= (x1052 (x1418 274184521717934524641157099916833587211) (x1128 1) 0) x1276) (<= x597 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= 0 x471) (= x1510 (x949 (- x260 4))) (not x978) (= x260 x951) (= x597 (x75 x742)) (not (< x260 4))) x329)))))
(assert (x420 x897))
(assert (x778 x515))
(assert (x420 x1105))
(assert (x420 x1463))
(assert (x420 x14))
(assert (x420 x724))
(assert (x420 x590))
(assert (x788 x225 x1256))
(assert (= (and x685 x759) x984))
(assert (x420 x606))
(assert (x420 x1454))
(assert (x420 x1337))
(assert (x420 x1223))
(assert (x778 x145))
(assert (x1016 x811))
(assert (x420 x465))
(assert (= (x1418 274184521717934524641157099916833587233) (x1128 274184521717934524641157099916833587233)))
(assert (x1016 x1465))
(assert (x420 x1101))
(assert (x778 x1430))
(assert (= x582 (and (not x1579) x236)))
(assert (x420 x1313))
(assert (x261 x560 x1447))
(assert (x420 x1046))
(assert (x1188 x1481 x893))
(assert (x420 x40))
(assert (= (ite (= x344 x396) 115197700812830431890159100217698998050002284567939525164234024451216521560064 (x1544 x396)) (x234 x396)))
(assert (x420 x1154))
(assert (x1082 x1334 x333))
(assert (x420 x1133))
(assert (x420 x326))
(assert (x420 x879))
(assert (= (x1128 65536) (x1418 65536)))
(assert (x778 x354))
(assert (= x342 (or (and x236 x1579) (and x439 x582))))
(assert (x420 x68))
(assert (x420 x663))
(assert (x420 x492))
(assert (x788 x1465 x1592))
(assert (x778 x30))
(assert (x420 x1532))
(assert (x420 x1193))
(assert (x420 x415))
(assert (x420 x866))
(assert (= (ite (= x1053 132) 274184521717934524641157099916833587211 (x1593 x1053)) (x910 x1053)))
(assert (x420 x869))
(assert (x420 x647))
(assert (x420 x653))
(assert (= (x1418 274184521717934524641157099916833587227) (x1128 274184521717934524641157099916833587227)))
(assert (x420 x238))
(assert (x420 x765))
(assert (x420 x108))
(assert (x1315 x1067))
(assert (not x1376))
(assert (x420 x323))
(assert (x420 x328))
(assert (x420 x145))
(assert (= 115197700812830431890159100217698998050002284567939525164234024451216521560064 (x540 (x1128 115197700812830431890159100217698998050002284567939525164234024451216521560064))))
(assert (x420 x749))
(assert (x420 x1210))
(assert (x420 x1104))
(assert (x1016 x590))
(assert (x778 274184521717934524641157099916833587233))
(assert (x420 x468))
(assert (x420 x635))
(assert (x778 x1333))
(assert (= (ite (= x1329 x741) 115197700812830431890159100217698998050002284567939525164234024451216521560064 (x380 x1329)) (x1241 x1329)))
(assert (x420 x586))
(assert (x420 x1301))
(assert (x420 x830))
(assert (x420 x1561))
(assert (x778 274184521717934524641157099916833587235))
(assert (x420 x502))
(assert (x420 x476))
(assert (x420 x26))
(assert (x420 x621))
(assert (= (x1241 x1053) (ite (= x741 x1053) 115197700812830431890159100217698998050002284567939525164234024451216521560064 (x380 x1053))))
(assert (= 0 (x1047 x1242)))
(assert (x420 x1078))
(assert (x420 x900))
(assert (x1315 x835))
(assert (= (- (/ x809 1461501637330902918203684832716283019655932542976) (uninterp_frac x809 1461501637330902918203684832716283019655932542976)) (x682 x809 160)))
(assert (= (and (not x439) x582) x62))
(assert (= (ite (= x396 x51) x1427 (x1549 x396)) (x1588 x396)))
(assert (x778 x661))
(assert (x420 x1566))
(assert (x420 x616))
(assert (x420 x791))
(assert (=> (> (+ 10000 1) x1430) (= (x1418 x1430) (x1128 x1430))))
(assert (x420 x661))
(assert (x1016 x98))
(assert (x420 x1533))
(assert (x420 x625))
(assert (x420 x936))
(assert (x420 x1020))
(assert (x1016 x1057))
(assert (x778 x12))
(assert (x420 x1011))
(assert (x420 x260))
(assert (x420 x1127))
(assert (x420 x29))
(assert (x420 x1498))
(assert (x420 x1268))
(assert (x420 x224))
(assert (= (ite (= x47 132) 274184521717934524641157099916833587211 (x1593 x47)) (x910 x47)))
(assert (x1016 x1259))
(assert (= (x1128 2068668150) (x1418 2068668150)))
(assert (x1056 x270 x1220))
(assert (x778 x875))
(assert (= (=> (= (= 274184521717934524641157099916833587233 x306) x439) (and (=> (not x439) x1194) (=> (and (= (x1436 (+ x13 352)) x183) (= x481 (x1436 (+ x13 288))) (= x1433 (x860 128)) (not (= 2362581449 x591)) (= x90 (x1436 (+ 320 x13))) (not (> 4 x1176)) (= (x860 224) x263) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1459) (= (x860 224) x427) (= (x735 (x1418 274184521717934524641157099916833587233)) x807) (= x538 (x860 192)) (>= x1013 0) (= 160 x1136) (= x997 (x860 256)) (= x364 (x1052 (x1418 x1430) (x1128 1) 0)) (<= 0 x417) (= x1013 (x1400 x364)) (< x1087 1208925819614629174706176) (= x274 (x860 160)) (not (= 4062139261 x591)) (= x591 4272920204) (= x1120 (x860 128)) (= (x860 192) x493) (<= 0 x1087) (> x807 0) (not (< x591 2362581449)) (<= x417 115792089237316195423570985008687907853269984665640564039457584007913129639935) (not (= x591 3257672857)) (= x971 (x860 160)) (<= x1243 1208925819614629174706175) (> 1208925819614629174706176 x1243) (<= x1087 1208925819614629174706175) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1013) (<= 0 x1243) (= (x860 256) x791) (= 1 x930) (= 115197700812830431890159100217698998050002284567939525164234024451216521560064 x1394) (= x1101 x1176) (= 4 x1176) (= (x1436 (+ 384 x13)) x600) x439 (<= 0 x1459)) x1362))) x1299))
(assert (x420 x223))
(assert (x420 x129))
(assert (x420 x400))
(assert (x420 x927))
(assert (x420 x620))
(assert (x420 x599))
(assert (= (ite (= x1109 132) 274184521717934524641157099916833587211 (x1593 x1109)) (x910 x1109)))
(assert (x420 x836))
(assert (= (and (not x349) x1135) x293))
(assert (x420 x258))
(assert (x420 x637))
(assert (x420 x1447))
(assert (x420 x743))
(assert (x420 x673))
(assert (x1016 x418))
(assert (x420 x773))
(assert (= x49 x1135))
(assert (= (x540 (x1418 274184521717934524641157099916833587231)) 274184521717934524641157099916833587231))
(assert (x420 x997))
(assert (x420 x104))
(assert (x420 x1347))
(assert (= (ite (= x1053 x51) x1427 (x1549 x1053)) (x1588 x1053)))
(assert (x420 x119))
(assert (= x605 (and (not x158) x271)))
(assert (x420 x1367))
(assert (x420 x496))
(assert (x420 x15))
(assert (x420 x1161))
(assert (x420 x1050))
(assert (x420 x266))
(assert (x1016 x633))
(assert (= (- (/ x476 1461501637330902918203684832716283019655932542976) (uninterp_frac x476 1461501637330902918203684832716283019655932542976)) (x682 x476 160)))
(assert (=> (> (+ 10000 1) x863) (= (x1128 x863) (x1418 x863))))
(assert (x420 x175))
(assert (x420 x283))
(assert (x420 x1239))
(assert (x420 x354))
(assert (x420 x1150))
(assert (x1082 x608 x1069))
(assert (x420 x597))
(assert (x1056 x98 x56))
(assert (x1016 x1298))
(assert (x778 x1245))
(assert (x1016 x104))
(assert (x420 x664))
(assert (x1315 x1447))
(assert (x420 x6))
(assert (x1016 1461501637330902918203684832716283019655932542975))
(assert (x420 x1492))
(assert (x420 x990))
(assert (= x11 (=> (and (= (x818 1 x1444) x726) (= (not (= x726 0)) x759)) (and (=> x759 x1420) (=> (and (not x759) (= x372 x1366) (= x179 x1399)) x531)))))
(assert (x420 x1429))
(assert (= (x1310 x47) 0))
(assert (x1016 x713))
(assert (x420 x578))
(assert (x420 x815))
(assert (x420 x1214))
(assert (x1188 x1259 x289))
(assert (= (x540 (x1418 x145)) x145))
(assert (= (x540 (x1128 1208925819614629174706175)) 1208925819614629174706175))
(assert (x420 x995))
(assert (x420 x298))
(assert (x420 x1578))
(assert (x420 x953))
(assert (x420 x600))
(assert (x420 x67))
(assert (x420 x669))
(assert (x420 x443))
(assert (x1016 x1323))
(assert (x420 x1028))
(assert (x1016 x954))
(assert (x420 x462))
(assert (x420 x1039))
(assert (= 18446744073709551615 (x540 (x1128 18446744073709551615))))
(assert (x420 x343))
(assert (x420 x980))
(assert (= (x1128 157198259) (x1418 157198259)))
(assert (= (and x1413 (not x902)) x837))
(assert (x420 x714))
(assert (=> (< (- x129 1) 10000) (= (x1418 x129) (x1128 x129))))
(assert (x420 x834))
(assert (x420 x734))
(assert (= x863 (x540 (x1418 x863))))
(assert (x420 x1314))
(assert (= (x1418 274184521717934524641157099916833587244) (x1128 274184521717934524641157099916833587244)))
(assert (x420 x868))
(assert (x420 x1057))
(assert (x420 x1344))
(assert (= (x1418 3695885053) (x1128 3695885053)))
(assert (x420 x821))
(assert (x420 x739))
(assert (x420 x584))
(assert (x420 x1044))
(assert (x1315 x165))
(assert (= (x540 (x1128 274184521717934524641157099916833587211)) 274184521717934524641157099916833587211))
(assert (x420 x645))
(assert (= 2514000705 (x540 (x1128 2514000705))))
(assert (x420 x518))
(assert (x420 x499))
(assert (x420 x95))
(assert (x1056 x1150 x821))
(assert (x420 x1183))
(assert (x1016 x970))
(assert (x420 x403))
(assert (x420 x213))
(assert (x1016 x1515))
(assert (x420 x1186))
(assert (x420 x506))
(assert (x420 x34))
(assert (x420 x72))
(assert (= (x540 (x1128 65536)) 65536))
(assert (x420 x1515))
(assert (= (ite (= x210 x1329) x424 (x435 x1329)) (x1544 x1329)))
(assert (x420 x37))
(assert (x420 x501))
(assert (x420 x1199))
(assert (x564 x476 x691))
(assert (= 274184521717934524641157099916833587235 (x540 (x1128 274184521717934524641157099916833587235))))
(assert (x420 x1324))
(assert (x420 x58))
(assert (x1056 x1587 x294))
(assert (x420 x715))
(assert (x420 x795))
(assert (= (x540 (x1128 340282366920938463463374607431768211456)) 340282366920938463463374607431768211456))
(assert (= 0 (x1310 x396)))
(assert (x420 x809))
(assert (x420 x265))
(assert (x718 x894))
(assert (x420 x286))
(assert (x420 x1176))
(assert (x420 x1138))
(assert (x420 x713))
(assert (x420 x1175))
(assert (x420 x210))
(assert (= (and x307 (not x65)) x1325))
(assert (x57 x733 x938))
(assert (x420 x124))
(assert (x420 x811))
(assert (x1016 x1036))
(assert (x420 x577))
(assert (x1016 x180))
(assert (x420 x1522))
(assert (x420 x642))
(assert (= (x1418 1461501637330902918203684832716283019655932542975) (x1128 1461501637330902918203684832716283019655932542975)))
(assert (x1082 x148 x1219))
(assert (x420 x594))
(assert (= (ite (= 132 x909) 274184521717934524641157099916833587211 (x1593 x909)) (x910 x909)))
(assert (x420 x481))
(assert (= (x540 (x1128 57896044618658097711785492504343953926634992332820282019728792003956564819967)) 57896044618658097711785492504343953926634992332820282019728792003956564819967))
(assert (x1188 x817 x517))
(assert (x420 x1059))
(assert (x420 x650))
(assert (x420 x1357))
(assert (x420 x591))
(assert (x420 x963))
(assert (x290 x1323 x1290))
(assert (x420 x1558))
(assert (x420 x270))
(assert (x420 x911))
(assert (x420 x90))
(assert (x420 x1281))
(assert (x1016 x1445))
(assert (x420 x427))
(assert (x420 x1541))
(assert (x420 x549))
(assert (x420 x448))
(assert (x261 x922 x1067))
(assert (x420 x256))
(assert (x420 x702))
(assert (x420 x1345))
(assert (x420 x383))
(assert (x420 x622))
(assert (x718 x677))
(assert (x1016 x1158))
(assert (x420 x1030))
(assert (x1016 x1552))
(assert (x420 x262))
(assert (x57 x537 x495))
(assert (= (x1588 x1109) (ite (= x51 x1109) x1427 (x1549 x1109))))
(assert (x908 x724 x1559))
(assert (x420 x1322))
(assert (x420 x726))
(assert (x420 x1405))
(assert (x1082 x505 x54))
(assert (x420 x1399))
(assert (x420 x775))
(assert (x420 x113))
(assert (x1016 x929))
(assert (x1016 x1587))
(assert (x420 x1102))
(assert (x420 x1397))
(assert (x420 x947))
(assert (x420 x30))
(assert (x420 x288))
(assert (x420 x1480))
(assert (x420 x919))
(assert (= (and x605 (not x1129)) x698))
(assert (x420 x1364))
(assert (= (x1128 340282366920938463463374607431768211455) (x1418 340282366920938463463374607431768211455)))
(assert (x420 x1394))
(assert (x1016 x189))
(assert (= 274184521717934524641157099916833587235 (x540 (x1418 274184521717934524641157099916833587235))))
(assert (x420 x1302))
(assert (x1016 x961))
(assert (x1016 x1255))
(assert (= 10141204801825835211973625643007 (x540 (x1128 10141204801825835211973625643007))))
(assert (x420 x1037))
(assert (x420 x1481))
(assert (x420 x1077))
(assert (x420 x1131))
(assert (x420 x867))
(assert (= (=> (= (= x32 274184521717934524641157099916833587227) x684) (and (=> (and (= (x1052 (x1418 274184521717934524641157099916833587211) (x1128 1) 0) x948) (= x1402 (x985 x948)) (= x454 1) (<= x1402 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x1581 274184521717934524641157099916833587211) (= 1889567281 x204) (< 0 x1223) (<= 0 x1402) (= (x949 (- x613 4)) x1344) (= 36 x613) (= x1156 32) (not x232) (not (= 826074471 x204)) (= x232 (or (and (< x1344 32) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1344) true)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1344))) (= 50942633119752846454219349998365661925608737367104304655302372697894809501696 x58) (= x613 36) (= x1223 (x735 (x1418 274184521717934524641157099916833587227))) (not (< x204 826074471)) (not (< x613 4)) x684) x1172) (=> (not x684) x829))) x174))
(assert (x1016 x1190))
(assert (x420 x17))
(assert (x1016 x693))
(assert (x420 x88))
(assert (= (=> (and (= (x1436 (+ x732 4)) x358) (= (= 274184521717934524641157099916833587231 x899) x1513) (< 0 x998) (= (x1436 (+ x732 68)) x1363) (= (x949 (- x1363 x732)) x951) (= x480 (x818 1461501637330902918203684832716283019655932542975 x907)) (= (x1436 (+ 36 x732)) x256) (= x899 (x818 1461501637330902918203684832716283019655932542975 x29))) (and (=> (not x1513) x212) (=> (and (= x602 76450787359836037641860180984291677749980919077056822294353438043884394381312) (= x1360 x1386) (< (+ x1386 x135) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (not (= x1557 2514000705)) (= (x648 x840) x64) (= x1397 (x735 (x1418 274184521717934524641157099916833587231))) (= 2835717307 x1557) (= x583 (x949 (- x1102 4))) (= (x1052 (x1418 274184521717934524641157099916833587211) (x1128 1) 0) x840) (not (= 1889567281 x1557)) (<= x298 1461501637330902918203684832716283019655932542975) (= x1386 (x1375 x989)) (>= x64 0) (not x36) (= x802 x135) (= (x1052 (x1418 274184521717934524641157099916833587211) (x1128 1) 0) x374) (= x1102 x951) (= 32 x635) (= x298 x830) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x64) (<= 0 x1386) x1513 (not (= x1557 826074471)) (= (> x802 x64) x297) (= x298 x480) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1386) (= x135 x533) (< 0 x1397) (= (or (> x583 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (> 64 x583) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x583) true))) x36) (not (< x1557 826074471)) (= (x949 (- x64 x135)) x1357) (= (x1052 (x1418 x298) (x1128 1) 0) x989) (= 68 x1102) (= 274184521717934524641157099916833587211 x1496) (not (< x1102 4)) (= 1 x879) (not x297) (= (+ x1360 x533) x224) (= 274184521717934524641157099916833587211 x1009)) x329))) x1043))
(assert (x420 x1450))
(assert (x908 x1158 x1525))
(assert (x420 x424))
(assert (= 16156842317565293874272834530371880720966471053262404558597773956279093428224 (x540 (x1128 16156842317565293874272834530371880720966471053262404558597773956279093428224))))
(assert (x420 x10))
(assert (x420 x889))
(assert (x420 x1122))
(assert (x420 x1108))
(assert (x1016 x608))
(assert (=> (< (- x145 1) 10000) (= (x1418 x145) (x1128 x145))))
(assert (x420 x32))
(assert (= (or (and x1198 x437) (and x65 x307) (and x684 x293) (and x1135 x349)) x1413))
(assert (x420 x1274))
(assert (= (x540 (x1128 274184521717934524641157099916833587227)) 274184521717934524641157099916833587227))
(assert (x420 x965))
(assert (x420 x9))
(assert (= (x540 (x1418 x1245)) x1245))
(assert (= (and x293 (not x684)) x437))
(assert (= (x1544 x909) (ite (= x210 x909) x424 (x435 x909))))
(assert (x1016 x1105))
(assert (x420 x63))
(assert (x420 x86))
(assert (x420 x993))
(assert (= (x1128 170141183460469231731687303715884105727) (x1418 170141183460469231731687303715884105727)))
(assert (x1016 16))
(assert (x420 x892))
(assert (= 274184521717934524641157099916833587244 (x540 (x1128 274184521717934524641157099916833587244))))
(assert (x564 x545 x82))
(assert (= (x1128 3257672857) (x1418 3257672857)))
(assert (x420 x79))
(assert (x1016 x821))
(assert (x1016 x225))
(assert (x420 x1547))
(assert (x420 x826))
(assert (x420 x560))
(assert (x1016 18446744073709551615))
(assert (x420 x1445))
(assert (x420 x1591))
(assert (x420 x432))
(assert (x420 x452))
(assert (= (x540 (x1128 170141183460469231731687303715884105727)) 170141183460469231731687303715884105727))
(assert (x420 x1560))
(assert (x420 x1506))
(assert (x1016 x604))
(assert (x420 x1036))
(assert (x1016 x1108))
(assert (x420 x1323))
(assert (=> (> (+ 10000 1) x1349) (= (x1418 x1349) (x1128 x1349))))
(assert (x420 x387))
(assert (= (x1128 3253611544) (x1418 3253611544)))
(assert (x420 x1386))
(assert (x420 x314))
(assert (= (x1418 3119561463) (x1128 3119561463)))
(assert (x420 x614))
(assert (x778 274184521717934524641157099916833587211))
(assert (x420 x712))
(assert (x1056 x528 x1201))
(assert (x420 x1086))
(assert (x420 x471))
(assert (= 0 (x1310 x1329)))
(assert (x420 x101))
(assert (x420 x882))
(assert (x420 x504))
(assert (x788 x590 x450))
(assert (x420 x429))
(assert (x1056 x653 x929))
(assert (x420 x771))
(assert (x778 x658))
(assert (x420 x970))
(assert (x420 x227))
(assert (x420 x309))
(assert (x718 x418))
(assert (x1016 115792089237316195423570985008687907853269984665640564039457584007913129639904))
(assert (x420 x308))
(assert (x420 x1003))
(assert (= (x540 (x1128 404098525)) 404098525))
(assert (x1056 x632 x811))
(assert (x420 x633))
(assert (= (x1418 57896044618658097711785492504343953926634992332820282019728792003956564819968) (x1128 57896044618658097711785492504343953926634992332820282019728792003956564819968)))
(assert (x420 x1459))
(assert (x420 x438))
(assert (x420 x244))
(assert (x420 x1354))
(assert (x420 x1368))
(assert (x1016 x1192))
(assert (x420 x204))
(assert (x1016 x119))
(assert (x420 x396))
(assert (x420 x1336))
(assert (x420 x488))
(assert (= (x1418 18446744073709551615) (x1128 18446744073709551615)))
(assert (= (x910 x396) (ite (= x396 132) 274184521717934524641157099916833587211 (x1593 x396))))
(assert (= (x1418 50942633119752846454219349998365661925608737367104304655302372697894809501696) (x1128 50942633119752846454219349998365661925608737367104304655302372697894809501696)))
(assert (x420 x1001))
(assert (x420 x1355))
(assert (x420 x1384))
(assert (x420 x944))
(assert (x1016 x1281))
(assert (= 274184521717934524641157099916833587233 (x540 (x1418 274184521717934524641157099916833587233))))
(assert (x420 x83))
(assert (x420 x1398))
(assert (x420 x643))
(assert (x420 x22))
(assert (x420 x1366))
(assert (x564 x936 x1318))
(assert (x420 x692))
(assert (x420 x157))
(assert (x420 x858))
(assert true)
(assert (x420 x1298))
(assert (x420 x1225))
(assert (= (x540 (x1128 3638949393)) 3638949393))
(assert (x420 x386))
(assert (= 274184521717934524641157099916833587223 (x540 (x1418 274184521717934524641157099916833587223))))
(assert (= (x1418 404098525) (x1128 404098525)))
(assert (x420 x1237))
(assert (x420 x368))
(assert (x1016 x29))
(assert (= (x1128 3889878717) (x1418 3889878717)))
(assert (= (x1418 3840337785) (x1128 3840337785)))
(assert (x420 x1029))
(assert (x420 x449))
(assert (x1082 x680 x1524))
(assert (x420 x345))
(assert (= (x1128 115792089237316195423570985008687907853269984655499359237631748795939503996928) (x1418 115792089237316195423570985008687907853269984655499359237631748795939503996928)))
(assert (x420 x189))
(assert (x420 x1259))
(assert (x420 x565))
(assert (x1016 1099511627775))
(assert (=> (< (- x30 1) 10000) (= (x1418 x30) (x1128 x30))))
(assert (x420 x912))
(assert (x420 x1021))
(assert (x1016 x77))
(assert (x1016 x537))
(assert (x420 x422))
(assert (x420 x1462))
(assert (x420 x1443))
(assert (x420 x733))
(assert (x420 x528))
(assert (x1016 x1328))
(assert (x420 x987))
(assert (= 0 (x1446 x363)))
(assert (x778 x863))
(assert (x420 x1393))
(assert (x420 x251))
(assert (x420 x327))
(assert (x420 x436))
(assert (x420 x91))
(assert (x420 x979))
(assert (x420 x172))
(assert (x420 x1292))
(assert (x1082 x1298 x814))
(assert (x420 x1095))
(assert (x1016 x71))
(assert (= (ite (= x702 x741) 115197700812830431890159100217698998050002284567939525164234024451216521560064 (x380 x702)) (x1241 x702)))
(assert (x718 x1334))
(assert (= x829 (=> (= x1198 (= x32 274184521717934524641157099916833587223)) (and (=> (not x1198) x761) (=> (and (= (x31 x252) x799) (>= x799 0) (= x1156 32) (= 36 x1414) (not (< x110 826074471)) (= x1383 (x735 (x1418 274184521717934524641157099916833587223))) (not (< x1414 4)) x1198 (> x1383 0) (<= x799 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= 1 x454) (= x252 (x1052 (x1418 274184521717934524641157099916833587211) (x1128 1) 0)) (= (x949 (- x1414 4)) x345) (= 1889567281 x110) (= x1414 36) (= x946 50942633119752846454219349998365661925608737367104304655302372697894809501696) (= x832 (or (> x345 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (> 32 x345) (= (<= x345 57896044618658097711785492504343953926634992332820282019728792003956564819967) true)))) (not x832) (= 274184521717934524641157099916833587211 x1104) (not (= x110 826074471))) x1172)))))
(assert (x420 x398))
(assert (x420 x198))
(assert (x420 x1012))
(assert (x420 x1187))
(assert (x908 x265 x76))
(assert (x420 x217))
(assert (= (uninterp_mod (x1008 2 x238) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x746 1 x238)))
(assert (= (x540 (x1128 274184521717934524641157099916833587231)) 274184521717934524641157099916833587231))
(assert (x778 x129))
(assert (x1016 340282366920938463463374607431768211455))
(assert (x420 x1496))
(assert (x420 x998))
(assert (x420 x1042))
(assert (x420 x177))
(assert (x420 x70))
(assert (x420 x525))
(assert (x1016 x571))
(assert (x420 x51))
(assert (x1082 x722 x1202))
(assert (x420 x649))
(assert (= (x1418 2835717307) (x1128 2835717307)))
(assert (x420 x1190))
(assert (x420 x1263))
(assert (x420 x677))
(assert (x420 x629))
(assert (= x761 (=> (= (= 274184521717934524641157099916833587244 x32) x65) (and (=> (and (not (> 1889567281 x1530)) (< x722 20282409603651670423947251286016) (> 3119561463 x1530) (= x285 36) (> x586 0) (= 50942633119752846454219349998365661925608737367104304655302372697894809501696 x1231) (= x864 (x949 (- x285 4))) (>= x722 0) (<= x722 20282409603651670423947251286015) (= 1889567281 x1530) (or (and (= x556 0) (not x1491)) (and (not x279) (= (* x48 x1059) x334) (>= 18446744073709551615 x48) (= x279 (or (and (= (<= x1384 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (> 0 x1384)) (> x1384 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (< (* x1059 x48) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= (x818 20282409603651670423947251286015 x1384) x1059) (>= x48 0) (> 18446744073709551616 x48) x1491 (= x146 x334) (= x556 x146))) (not x535) (= (or (> x864 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (> 32 x864) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x864) true))) x535) (= x1384 (x763 x722)) (= x1491 (and (> x1384 0) (= true (<= x1384 57896044618658097711785492504343953926634992332820282019728792003956564819967)))) x65 (= x722 (x1425 x61)) (= 32 x1156) (= 1 x454) (= (x735 (x1418 274184521717934524641157099916833587244)) x586) (not (> 4 x285)) (= x285 36) (= x458 (x818 20282409603651670423947251286015 x556)) (= x784 274184521717934524641157099916833587211) (= (x1052 (x1418 274184521717934524641157099916833587211) (x1128 5) 0) x61)) x1172) (=> (not x65) x1153)))))
(assert (= 1461501637330902918203684832716283019655932542975 (x540 (x1128 1461501637330902918203684832716283019655932542975))))
(assert (x420 x417))
(assert (x420 x1404))
(assert (x1016 x1201))
(assert (= (=> (and (<= 0 x198) (>= 18446744073709551615 x690) (<= 0 x209) (<= x198 1099511627775) (<= x1584 1461501637330902918203684832716283019655932542975) (not (< x921 3253611544)) (= x826 (x335 (x1418 274184521717934524641157099916833587233))) (<= 0 x108) (<= 0 x541) (>= 1208925819614629174706175 x1019) (>= 1208925819614629174706175 x213) (not (> 2661915226 x1367)) (<= 0 x1283) (<= 0 x1578) (not (= 3889878717 x921)) (< x1477 1099511627776) (>= 255 x1314) x123 x823 (<= 0 x869) (<= 0 x1243) (<= 0 x854) (>= x213 0) (<= 0 x1131) (<= 0 x836) (= x869 (x335 (x1418 274184521717934524641157099916833587235))) (>= x367 0) x801 (= x1124 x608) (<= x749 1099511627775) (not (< x921 3889878717)) (not (< x1367 2799315671)) (<= x660 18446744073709551615) (>= x48 0) (= x377 false) (<= 0 x826) (= x1578 x603) (>= 1461501637330902918203684832716283019655932542975 x128) (<= x541 18446744073709551615) (= x1506 0) (>= x749 0) (= x1548 false) (= x1585 false) (<= x1077 255) (= x559 x128) (= x108 (x335 (x1418 274184521717934524641157099916833587231))) (= x1080 (or (and (> 0 (x763 x608)) (= true (<= (x763 x608) 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 (x763 x608)))) (= x1116 (x735 (x1418 274184521717934524641157099916833587211))) (= x988 (< 0 x1113)) (> x1116 0) (not (< x1477 x198)) (or (and (= (x763 x608) x745) (>= x262 0) (not (< 10141204801825835211973625643007 x301)) (= x1348 x1580) x1080 (= (x818 20282409603651670423947251286015 x680) x400) (= (x949 (- 0 x1533)) x1348) (= (* x400 x262) x521) (< x262 18446744073709551616) (< (* x400 x262) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x521 x677) (= x301 (x818 20282409603651670423947251286015 x677)) (= (x949 (- 0 x745)) x680) (not (= x745 115792089237316195423570985008687907853269984655499359237631748795939503996928)) (not (= x1533 115792089237316195423570985008687907853269984655499359237631748795939503996928)) (= (x763 x677) x1533) (<= x262 18446744073709551615) (not (or (and (> 0 x680) (= (<= x680 57896044618658097711785492504343953926634992332820282019728792003956564819967) true)) (> x680 57896044618658097711785492504343953926634992332820282019728792003956564819967)))) (and (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (* x241 x1186)) (= (x818 20282409603651670423947251286015 x608) x1186) (>= 18446744073709551615 x241) (= x1263 (x818 20282409603651670423947251286015 x519)) (= (x763 x608) x1545) (not x1080) (not (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1545) (and (= (<= x1545 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (> 0 x1545)))) (> 18446744073709551616 x241) (>= x241 0) (not (< 10141204801825835211973625643007 x1263)) (= x519 x1084) (= x1580 x519) (= (* x241 x1186) x1084))) (<= 0 x198) (<= x1578 1461501637330902918203684832716283019655932542975) (<= x1303 1461501637330902918203684832716283019655932542975) (>= x1546 0) (>= x1584 0) (<= x48 18446744073709551615) (= x1367 2799315671) (>= x619 0) (= x539 3840337785) (<= x866 18446744073709551615) (= (x335 (x1418 274184521717934524641157099916833587244)) x113) (= x854 (x335 (x1418 274184521717934524641157099916833587211))) (= 4033150093 x921) (not (> 3638949393 x921)) (> 3253611544 x1367) (<= x367 20282409603651670423947251286015) (>= 1208925819614629174706175 x1087) (= x268 x608) (<= x1064 18446744073709551615) (= (> (x735 (x1418 274184521717934524641157099916833587235)) 0) x182) (>= x1077 0) (<= x198 1099511627775) (>= 255 x1190) (= x559 x1292) (= x1033 (x335 (x1418 274184521717934524641157099916833587223))) (>= x1529 0) (= (x763 x608) x1124) (not (< x921 2068668150)) (= (> (x735 (x1418 274184521717934524641157099916833587231)) 0) x123) x945 (= x361 (< 0 (x735 (x1418 274184521717934524641157099916833587244)))) (= x1342 (x735 (x1418 274184521717934524641157099916833587211))) (= x1036 (x949 (- x1430 x198))) (>= x128 0) (<= 0 x1087) x1106 (>= 20282409603651670423947251286015 x836) (<= x1243 1208925819614629174706175) (>= x1303 0) (= x1506 x88) (= (x818 1099511627775 x1036) x1113) (<= 0 x660) (<= 0 x1190) (= x1584 x1225) (>= x866 0) (= x1477 x1430) (= x479 false) (= 4 x903) (>= x1033 0) (<= 0 x1019) (<= x1283 1461501637330902918203684832716283019655932542975) (= (< 0 (x735 (x1418 274184521717934524641157099916833587233))) x945) (>= x690 0) (<= x619 255) x361 (>= x1064 0) (or (and (= x262 x1064) (= x690 x241) (not x988)) (and (= (ite (> x1064 x504) 1 0) x821) (or x1424 (and (<= 0 x209) (= x1454 (uninterp_mod x1113 x209)) (= x1449 x555) (> 20282409603651670423947251286016 x209) (<= x1158 18446744073709551615) (>= x660 0) (> x209 0) (< x660 18446744073709551616) (= x660 x187) (= x1454 0) (= x1158 (+ x1449 x187)) (not x1424) (not (> x555 18446744073709551615)) (>= 20282409603651670423947251286015 x209) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x660 x555)) (>= 18446744073709551615 x660) (= (- (/ x1113 x209) (uninterp_frac x1113 x209)) x555) (= x253 (x818 18446744073709551615 x1158)))) (= x395 x241) (= x484 (= x200 0)) (>= x1064 0) (>= x1064 0) (or (and (not x484) (= x1591 (- (/ x1239 x200) (uninterp_frac x1239 x200))) (= x882 x1591) (= x1237 (uninterp_mod x1239 x200)) (= 0 x1237)) (and (= 0 x882) x484)) (= x142 (x818 18446744073709551615 x905)) (= (* x1183 x690) x152) (<= x209 20282409603651670423947251286015) (>= x209 0) (< x1064 18446744073709551616) (= (ite (> x690 x409) 1 0) x1220) (= x262 x93) (> 20282409603651670423947251286016 x209) (= x905 (+ x1112 x21)) (<= 0 x690) (>= 20282409603651670423947251286015 x1529) (= x280 x1064) (= x1150 (ite (not x160) 1 0)) (= x74 (x818 20282409603651670423947251286015 x961)) (<= x690 18446744073709551615) (>= 18446744073709551615 x690) (<= x265 18446744073709551615) (= x1539 (* x1389 x934)) (= x1424 (> x203 x209)) (<= x1064 18446744073709551615) (= x805 0) (<= 0 x690) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x675 x1064)) (>= x209 0) (= (+ x280 x1072) x265) (or (and (= x1114 x1178) (= (* x1490 x882) x1114) (< (* x882 x1490) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x1127 x1118) (< (+ x1127 x1178) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x272 x1178) (= x218 (+ x1118 x272)) (= x218 x426) (not (< 18446744073709551615 x218)) (not x510)) (and (= x227 x1162) (= x993 (+ x870 x1162)) x510 (= (* x1490 x1030) x482) (= x993 x426) (not (> x1030 x882)) (= (x949 (- x882 x1030)) x1514) (< (+ x1100 x227) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (< (+ x1127 x1475) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x482 x1475) (= x1127 x1517) (= x598 (* x172 x1514)) (= x227 x598) (= x1100 (+ x779 x1517)) (< (* x1514 x172) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x870 x1100) (not (> x993 18446744073709551615)) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (* x1030 x1490)) (= x1475 x779))) (= x751 (* x690 x1529)) (>= 20282409603651670423947251286015 x1529) (or (and (= 0 x934) x709) (and (= 0 x17) (= x934 x841) (= x841 (- (/ x473 x74) (uninterp_frac x473 x74))) (not x709) (= x17 (uninterp_mod x473 x74)))) (= x80 x105) (= x709 (= x74 0)) (> 20282409603651670423947251286016 x1529) (> 20282409603651670423947251286016 x1529) (>= x209 0) (> 20282409603651670423947251286016 x209) (>= 18446744073709551615 x1064) (= x1330 (* x80 x1064)) (< x1064 18446744073709551616) (= x473 (x818 20282409603651670423947251286015 x1298)) (>= x1064 0) (= 0 x697) (< (* x690 x1529) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x250 (< x1529 x203)) (= x93 (x818 18446744073709551615 x265)) (>= 18446744073709551615 x690) (<= 0 x1064) (< (+ x690 x1117) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (< x1529 20282409603651670423947251286016) (>= 18446744073709551615 x905) (= x1482 (* x1529 x690)) (= x105 (* x426 x1113)) (= (- (/ 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1529) (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1529)) x409) (not (< 18446744073709551615 x1117)) (= x1257 (x818 18446744073709551615 x265)) (= (* x1113 x251) x1382) (= x1130 x751) (>= 20282409603651670423947251286015 x209) (= x961 x1482) (> 18446744073709551616 x1064) x988 (= (x818 x270 x1220) x697) (> 18446744073709551616 x1064) (= (x818 20282409603651670423947251286015 x1503) x1239) (< (* x1064 x209) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (< (* x80 x1064) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (>= x1529 0) (> 20282409603651670423947251286016 x209) (= x1072 x675) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (* x1113 x426)) (not (< 18446744073709551615 x675)) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (* x251 x1113)) (= x1503 x895) (= (> x934 x1030) x721) (= x675 x1330) (> 18446744073709551616 x690) (<= 0 x690) (>= 20282409603651670423947251286015 x1529) (<= 0 x1529) (<= x209 20282409603651670423947251286015) (<= x690 18446744073709551615) (= x504 (- (/ 115792089237316195423570985008687907853269984665640564039457584007913129639935 x209) (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x209))) (or (and (not (> x1030 x934)) (= (+ x906 x574) x449) (= x727 x27) (= x45 x727) (= x438 x1408) (= x449 x1390) (= (* x172 x1031) x27) (< (+ x478 x1127) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= (* x208 x398) x1408) (= x478 x534) (= x1031 (x949 (- x934 x1030))) (= x534 (* x1030 x1490)) (< (* x208 x398) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x721 (< (* x172 x1031) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x906 x478) (not (< 18446744073709551615 x438)) (< (* x1030 x1490) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x574 x1127) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x727 x449)) (= x208 (+ x45 x1390)) (= x251 x438)) (and (= x459 x251) (not x721) (= x451 x1127) (= (* x934 x1490) x81) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (* x934 x1490)) (= x465 x136) (not (< 18446744073709551615 x459)) (< (+ x465 x1127) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= (* x37 x398) x231) (= x81 x465) (= (+ x136 x451) x37) (< (* x37 x398) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x459 x231))) (= x1298 x149) (>= 18446744073709551615 x1064) (= (x949 (- 1 x1340)) x1389) (= (* x1064 x209) x149) (> 18446744073709551616 x690) (<= x1064 18446744073709551615) (= x805 (x818 x1150 x821)) (= (= x209 0) x160) (= (ite (not x1392) 1 0) x270) (= x1392 (= 0 x1529)) (= x152 x1117) (< x690 18446744073709551616) (= (x818 20282409603651670423947251286015 x1130) x200) (or (and (< x1529 20282409603651670423947251286016) (< x541 18446744073709551616) (not x250) (= (+ x1293 x1289) x189) (not (< 18446744073709551615 x1193)) (= x1293 x541) (= (x818 18446744073709551615 x189) x1006) (= x1289 x1193) (= x102 (uninterp_mod x1113 x1529)) (>= 18446744073709551615 x541) (= x1193 (- (/ x1113 x1529) (uninterp_frac x1113 x1529))) (>= x1529 0) (= 0 x102) (< (+ x1193 x541) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (>= 18446744073709551615 x189) (>= 20282409603651670423947251286015 x1529) (>= x541 0) (> x1529 0)) x250) (= x395 (x818 18446744073709551615 x905)) (= (* x1064 x209) x895) (= x1112 x1117) (<= 0 x690) (= x690 x21) (= x1539 x398) (<= 0 x1529) (< x690 18446744073709551616) (< (* x1183 x690) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x1183 x1382) (= x510 (> x882 x1030)) (not (> x1340 1)) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (* x1389 x934)))) (<= x1131 18446744073709551615) (>= 20282409603651670423947251286015 x1529) (>= 18446744073709551615 x1546) (<= 0 x664) x182 (>= x1314 0) (= x664 (x335 (x1418 274184521717934524641157099916833587227))) (>= 20282409603651670423947251286015 x209) (>= x113 0) (= x1283 x603) (= (< 0 (x735 (x1418 274184521717934524641157099916833587211))) x801) (> 1099511627776 x198) (> x1342 0) (not (> 2068668150 x1367)) (= (< 0 (x735 (x1418 274184521717934524641157099916833587223))) x1106) (= (< 0 (x735 (x1418 274184521717934524641157099916833587227))) x823)) x352) x1376))
(assert (x1082 x1503 x456))
(assert (= x1554 x918))
(assert (x420 x208))
(assert (x1016 x1126))
(assert (x420 x426))
(assert (= (x1418 1208925819614629174706175) (x1128 1208925819614629174706175)))
(assert (x420 x804))
(assert (x420 x940))
(assert (= (x234 x909) (ite (= x344 x909) 115197700812830431890159100217698998050002284567939525164234024451216521560064 (x1544 x909))))
(assert (=> (> (+ 10000 1) x1138) (= (x1128 x1138) (x1418 x1138))))
(assert (x420 x1564))
(assert (x420 x1430))
(assert (x420 x8))
(assert (= (=> (and (= x1456 x953) (= x844 x953) (= (= x872 x1456) x1277) (= x1029 x872)) x1277) x498))
(assert (x420 x1178))
(assert (x420 x367))
(assert (x420 x490))
(assert (x1016 x1265))
(assert (x420 x924))
(assert (= (x540 (x1128 4033150093)) 4033150093))
(assert (x420 x1232))
(assert (= (x1128 115197700812830431890159100217698998050002284567939525164234024451216521560064) (x1418 115197700812830431890159100217698998050002284567939525164234024451216521560064)))
(assert (x1016 x632))
(assert (= 0 (x1310 x1511)))
(assert (x420 x658))
(assert (x420 x1312))
(assert (x420 x4))
(assert (x420 x1546))
(assert (x420 x1208))
(assert (x420 x1328))
(assert (x420 x1534))
(assert (x420 x1477))
(assert (x420 x207))
(assert (x1016 x68))
(assert (x420 x425))
(assert (x420 x1582))
(assert (= x515 (x540 (x1418 x515))))
(assert (x420 x1110))
(assert (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x540 (x1128 115792089237316195423570985008687907853269984665640564039457584007913129639935))))
(assert (= (x540 (x1128 274184521717934524641157099916833587223)) 274184521717934524641157099916833587223))
(assert (= 0 (x332 x228)))
(assert (x420 x1361))
(assert (= x1194 true))
(assert (x420 x1227))
(assert (x718 x1580))
(assert (x778 274184521717934524641157099916833587223))
(assert (= (ite (= x1329 132) 274184521717934524641157099916833587211 (x1593 x1329)) (x910 x1329)))
(assert (x1082 x677 x704))
(assert (x1315 x1313))
(assert (x420 x1075))
(assert (x420 x722))
(assert (x778 274184521717934524641157099916833587227))
(assert (= (x1310 x1109) 0))
(assert (x420 x512))
(assert (x788 x319 x896))
(assert (= 115792089237316195423570985008687907853269984655499359237631748795939503996928 (x540 (x1128 115792089237316195423570985008687907853269984655499359237631748795939503996928))))
(assert (x1188 x1444 x1034))
(assert (x1016 x1498))
(assert (x420 x608))
(assert (x420 x798))
(assert (x420 x619))
(assert (x420 x1064))
(assert (= (x1365 x254) 0))
(assert (x420 x1130))
(assert (x420 x793))
(assert (x420 x1275))
(assert (x1016 x817))
(assert (= (x1128 115792089237316195423570985008687907853269984665640564039457584007913129639935) (x1418 115792089237316195423570985008687907853269984665640564039457584007913129639935)))
(assert (= (x1128 1208925819614629174706176) (x1418 1208925819614629174706176)))
(assert (x420 x161))
(assert (x420 x1126))
(assert (x420 x784))
(assert (= x1119 (=> (= x1353 (= 274184521717934524641157099916833587233 x703)) (and (=> (and (= (x1436 (+ 320 x620)) x1182) (= x1161 (x1205 256)) (not (= x931 4062139261)) (= x266 (x1436 (+ x620 384))) (not (< x931 2362581449)) (= x1558 (x1205 224)) (= 4272920204 x931) (not (= 2362581449 x931)) (<= x1243 1208925819614629174706175) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x417) (>= x575 0) (<= 0 x1459) (> x161 0) (= (x1205 192) x501) (= x137 (x1052 (x1418 x1430) (x1128 1) 0)) (= x575 (x1400 x137)) (not (= x931 3257672857)) (= x18 115197700812830431890159100217698998050002284567939525164234024451216521560064) (not (> 4 x139)) (>= x1243 0) (= x1038 (x1205 128)) (>= 1208925819614629174706175 x1087) (= x1534 160) (= x678 1) (= x496 (x1205 160)) (= (x1436 (+ 288 x620)) x565) (<= x575 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x139 4) (<= x1459 115792089237316195423570985008687907853269984665640564039457584007913129639935) (< x1087 1208925819614629174706176) (= x492 (x1205 160)) (= x101 x139) (> 1208925819614629174706176 x1243) x1353 (= x161 (x735 (x1418 274184521717934524641157099916833587233))) (= x326 (x1205 256)) (>= x417 0) (= (x1436 (+ 352 x620)) x629) (= x1547 (x1205 128)) (= (x1205 224) x468) (= (x1205 192) x1275) (>= x1087 0)) x618) (=> (not x1353) x442)))))
(assert (x1016 x977))
(assert (x420 x139))
(assert (x420 x741))
(assert (x420 x986))
(assert (x718 x1590))
(assert (x420 x190))
(assert (x420 x646))
(assert (x1315 x560))
(assert (x420 x1283))
(assert (x564 x912 x1571))
(assert (x1016 1))
(assert (x420 x1147))
(assert (x290 x68 x130))
(assert (x420 x802))
(assert (x420 x807))
(assert (x564 x520 x1304))
(assert (x420 x1117))
(assert (x420 x142))
(assert (= 1889567281 (x540 (x1128 1889567281))))
(assert (x718 x1552))
(assert (x420 x1288))
(assert (x1016 x1444))
(assert (x1016 x671))
(assert (x420 x824))
(assert (= x1179 (or (and (not x569) x984) x731)))
(assert (x420 x107))
(assert (= (x1418 2661915226) (x1128 2661915226)))
(assert (x420 x932))
(assert (x420 x1575))
(assert (x1016 x733))
(assert (= (x540 (x1128 3253611544)) 3253611544))
(assert (= 274184521717934524641157099916833587227 (x540 (x1418 274184521717934524641157099916833587227))))
(assert (x420 x894))
(assert (x420 x921))
(assert (x420 x1089))
(assert (x420 x77))
(assert (= x999 true))
(assert (=> (> (+ 10000 1) x12) (= (x1418 x12) (x1128 x12))))
(assert (x1016 x1580))
(assert (x420 x1371))
(assert (x1165 x1321 x1406 x66 x85))
(assert (x420 x1250))
(assert (= 826074471 (x540 (x1128 826074471))))
(assert (x420 x195))
(assert (= (or x1236 (and (not x849) x1438)) x731))
(assert (x420 x973))
(assert (= (x540 (x1418 274184521717934524641157099916833587211)) 274184521717934524641157099916833587211))
(assert (x1016 x936))
(assert (= (x540 (x1128 117300739)) 117300739))
(assert (x1016 x294))
(assert (x420 x397))
(assert (x1016 x1028))
(assert (x420 x38))
(assert (x420 x1570))
(assert (x420 x319))
(assert (x420 x1243))
(assert (x420 x1124))
(assert (= x1153 true))
(assert (x420 x884))
(assert (x1016 65535))
(assert (x57 x71 x668))
(assert (x420 x459))
(assert (x420 x200))
(assert (x420 x760))
(assert (x1016 x288))
(assert (x1016 x865))
(assert (= (and x984 x569) x236))
(assert (x1016 x645))
(assert (x420 x817))
(assert (x420 x1045))
(assert (= (x1128 2799315671) (x1418 2799315671)))
(assert (= (and x437 (not x1198)) x307))
(assert (x420 x1054))
(assert (x420 x180))
(assert (x420 x1009))
(assert (x1016 x1220))
(assert (x420 x1145))
(assert (x420 x1235))
(assert (x420 x1383))
(assert (x420 x102))
(assert (= (x540 (x1128 20282409603651670423947251286015)) 20282409603651670423947251286015))
(assert (x908 x954 x463))
(assert (x1016 x621))
(assert (x420 x613))
(assert (x420 x785))
(assert (= (x1418 274184521717934524641157099916833587223) (x1128 274184521717934524641157099916833587223)))
(assert (x920 x1036 x1395))
(assert (= (ite (= x702 x51) x1427 (x1549 x702)) (x1588 x702)))
(assert (= (x540 (x1128 4062139261)) 4062139261))
(assert (x420 x891))
(assert (= (ite (= x210 x396) x424 (x435 x396)) (x1544 x396)))
(assert (x420 x657))
(assert (x420 x1333))
(assert (x420 x1073))
(assert (x1082 x1580 x842))
(assert (x420 x697))
(assert (= (x540 (x1128 2068668150)) 2068668150))
(assert (x420 x134))
(assert (= x1438 x738))
(assert (x1016 x809))
(assert (x1016 x148))
(assert (= 3795249780 (x540 (x1128 3795249780))))
(assert (= 2661915226 (x540 (x1128 2661915226))))
(assert (x420 x1583))
(assert (x420 x440))
(assert (x1082 x1028 x366))
(assert (x420 x898))
(assert (x420 x905))
(assert (= (x1418 274184521717934524641157099916833587231) (x1128 274184521717934524641157099916833587231)))
(assert (= x618 (=> (and (= (x472 224) x839) (= (x735 (x1418 274184521717934524641157099916833587233)) x1232) (= (x818 340282366920938463463374607431768211455 x77) x419) (= (x763 x1552) x1028) (= 274184521717934524641157099916833587233 x548) (= x590 (x682 x476 192)) (= x1020 (x1436 (+ x741 x1336))) (= x195 (x472 160)) (= x178 (x818 255 x937)) (= (ite (= x1212 0) (not (= 0 (x818 340282366920938463463374607431768211455 x77))) (= 0 x1212)) x626) (= x1192 (- (/ x1046 x601) (uninterp_frac x1046 x601))) (= x303 (x472 160)) (= x1224 (x1436 (+ 288 x506))) (= (x1002 x351) x1444) (= (x1436 (+ 64 x1020)) x1154) (> 1208925819614629174706176 x1243) (>= x1537 0) (= (x411 224) x557) (= (x1052 (x1418 274184521717934524641157099916833587211) (x1128 5) 0) x351) (<= 0 x417) (< x1212 340282366920938463463374607431768211456) (not (< x1212 x135)) (<= x1459 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x733 (x763 x894)) (not (= x343 2362581449)) (<= x1087 1208925819614629174706175) (= x1226 (x928 x741)) (= (x818 18446744073709551615 x1443) x637) (< 0 x178) (= (x410 x1020) x924) (= (x1436 (+ 288 x620)) x1109) (or (and (= 1 x632) (or (and x1181 (= x291 (uninterp_mod (* x311 x606) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (or (and x1060 (= 100 x311) (= (x818 1 x1481) x184) (= x512 (x682 x1481 1)) (not x1507) (= x606 (ite x1500 1 10)) (= (= x184 0) x1500) (= x1507 (> x512 1))) (and (= 10 x311) (not x1060) (= 1 x606))) (= x1538 (- (/ 115792089237316195423570985008687907853269984665640564039457584007913129639935 x311) (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x311))) (= x291 x1443) (not (> x606 x1538)) (= (> x1481 1) x1060)) (and (not x1181) (= x1443 (x1008 10 x1481)))) (= (x818 x632 x811) x835) (= x1561 1) (= x165 (x818 x1561 x341)) (= x341 (ite (< x1481 32) 1 0)) x1027 (= (ite (> 78 x1481) 1 0) x811) (= x1181 (= 0 (x1049 x835 x165)))) (and (not x1027) (= x1443 1))) (not (= 2362581449 x257)) (<= x1212 340282366920938463463374607431768211455) (= (x411 192) x359) (> 1208925819614629174706176 x1087) (= 115197700812830431890159100217698998050002284567939525164234024451216521560064 x901) (= x1184 274184521717934524641157099916833587211) (= x397 x1347) (= x1070 (x1052 (x1418 x1430) (x1128 1) 0)) (<= x1459 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (* x386 x760) x153) (= 4 x397) (= x324 (x472 192)) (< 0 x963) (= (x928 x1053) x143) (<= x417 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x735 (x1418 274184521717934524641157099916833587233)) x1054) (= x1045 (x682 x809 168)) (not (= 4062139261 x257)) (= x1309 274184521717934524641157099916833587233) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1439) (= x1308 (x472 256)) (= (and (= (<= x71 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (> x71 0)) x339) (not (ite x1213 x1213 (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x633) true) (> x633 170141183460469231731687303715884105727)))) (= (x411 256) x1065) (= x1235 (x1436 (+ x440 64))) (= (x1436 (+ 416 x1020)) x506) (not (< x1537 x135)) (not (= x678 0)) (= x430 (x1052 (x1418 x1138) x507 0)) (= x1212 (x1254 x883)) (>= 1208925819614629174706175 x1243) (= x601 (x818 340282366920938463463374607431768211455 x71)) (= x73 (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1028) (and (= true (<= x1028 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (> 0 x1028)))) (= (x1436 (+ 128 x1020)) x926) (= x228 (x1436 (+ 288 x506))) (= x1227 (x1436 (+ 64 x741))) (= (x818 65535 x1498) x1322) (<= 0 x1212) (not (> 4 x1347)) (= (x411 192) x549) (<= x1537 340282366920938463463374607431768211455) (= (x818 340282366920938463463374607431768211455 x1462) x1042) (= 274184521717934524641157099916833587211 x663) (< 0 x547) (= 274184521717934524641157099916833587233 x980) (= (x1576 x228) x1175) (> 1208925819614629174706176 x1243) (= (x818 1461501637330902918203684832716283019655932542975 x29) x129) (= (x818 18446744073709551615 x1045) x776) (<= 0 x1011) (= (x1436 (+ 96 x1020)) x67) (= 4 x775) (or (and x626 (<= 0 x922) (= (x939 x628) x922) (> 65536 x922) (= x1255 (x406 x573)) (= (x818 255 x1255) x422) (= x1285 (x818 65535 x1328)) (= (x1049 x922 x1067) x1328) (= x847 274184521717934524641157099916833587211) (<= x922 65535) (= (x1052 (x1418 274184521717934524641157099916833587211) (x1128 5) 0) x628) (= (x746 1 x422) x1067)) (and (or (and (= x264 274184521717934524641157099916833587211) (= (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x746 1 x238)) x10) (= (x1052 (x1418 274184521717934524641157099916833587211) (x1128 5) 0) x494) (<= 0 x1301) (<= x1301 65535) (= (x818 x1301 x10) x206) (= (x818 255 x68) x238) (= (x406 x573) x68) x935 (= x1301 (x939 x494)) (> 65536 x1301)) (not x935)) (= (= 0 x1212) x348) (= (ite (not x348) (= (x818 340282366920938463463374607431768211455 x77) 0) (not x348)) x935) (not x626))) (= x230 (x818 1461501637330902918203684832716283019655932542975 x1175)) (= (x1052 (x1418 x1430) (x1128 1) 0) x53) (= (x411 160) x1022) (<= x1011 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x472 256) x1380) (<= 0 x1552) (not (< x1532 4)) (= (x818 340282366920938463463374607431768211455 x633) x1046) (>= 1208925819614629174706175 x1087) (= (x411 224) x831) (= (x1052 (x1418 274184521717934524641157099916833587211) (x1128 5) 0) x1270) (= (x818 255 x119) x1481) (= x979 (x410 x702)) (not (ite x1372 x1372 (and (< 170141183460469231731687303715884105727 x71) (= (<= x71 57896044618658097711785492504343953926634992332820282019728792003956564819967) true)))) (= x940 0) (= (x818 340282366920938463463374607431768211455 x633) x1589) (= x488 (x818 1461501637330902918203684832716283019655932542975 x809)) (= x1027 (> x1481 0)) (= (x818 340282366920938463463374607431768211455 x1192) x760) (= x1338 (x472 128)) (not (= x343 4062139261)) (<= x1226 1208925819614629174706175) (= x330 (x818 340282366920938463463374607431768211455 x1126)) (= x638 (x1052 (x1418 x354) (x1128 2) 0)) (= (x1436 (+ x452 64)) x281) (= x354 (x818 1461501637330902918203684832716283019655932542975 x29)) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (* x386 x760)) (= x1126 (x949 (- x1537 x135))) (= 274184521717934524641157099916833587211 x1026) (= x1372 (not x339)) (= (x1436 (+ x573 352)) x1432) (= (x1052 (x1418 274184521717934524641157099916833587211) (x1128 6) 0) x507) (<= x1243 1208925819614629174706175) (= x394 (x1436 (+ 64 x1235))) (= x1053 (x1436 (+ x1227 64))) (>= x1459 0) (= x33 (x818 65535 x590)) (= x79 (x411 128)) (= x547 (x818 340282366920938463463374607431768211455 x71)) (<= 0 x1087) (= x782 274184521717934524641157099916833587211) (= (x682 x476 176) x1498) (<= 0 x1439) (< 0 x1054) (= (x1436 (+ x1020 32)) x1511) (= x1213 (not x1343)) (not (= 3257672857 x257)) (not (> 2362581449 x257)) (= x1138 (x818 1461501637330902918203684832716283019655932542975 x29)) (= x440 (x1436 (+ x573 64))) (not (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1534) (and (< x1534 160) (= true (<= x1534 57896044618658097711785492504343953926634992332820282019728792003956564819967))))) (<= 0 x1459) (= x1297 (x411 128)) (> x601 0) (< x1552 20282409603651670423947251286016) (> 65536 x1444) (< x1537 340282366920938463463374607431768211456) (= (x1436 (+ x304 64)) x452) (= (x1436 (+ 512 x506)) x322) (= (x1436 (+ x1224 64)) x304) (not (> x1356 x135)) (<= x1444 65535) (= x702 (x1436 (+ x1154 64))) (= x1567 (x1436 (+ 64 x1020))) (= x1532 x775) (= x402 (x472 224)) (= x94 274184521717934524641157099916833587211) (= x1439 (x1400 x53)) (= x323 274184521717934524641157099916833587233) (= x1463 (x411 160)) (= x180 (x1436 (+ 31 x1534))) (> x1232 0) (= x447 (x472 128)) (or (and (= (x818 20282409603651670423947251286015 x1028) x525) (< x241 18446744073709551616) (>= 18446744073709551615 x241) (not (< 10141204801825835211973625643007 x674)) (= (x818 20282409603651670423947251286015 x124) x674) (<= 0 x241) (= x894 x124) (not (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1028) (and (= (<= x1028 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (> 0 x1028)))) (= x43 x124) (not x73) (= (* x241 x525) x43) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (* x525 x241))) (and (= (x763 x604) x308) (< (* x780 x262) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (not (= x1028 115792089237316195423570985008687907853269984655499359237631748795939503996928)) (= x780 (x818 20282409603651670423947251286015 x1398)) (= (* x780 x262) x1004) (not (< 10141204801825835211973625643007 x986)) x73 (not (or (> x1398 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= (<= x1398 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (< x1398 0)))) (>= x262 0) (not (= x308 115792089237316195423570985008687907853269984655499359237631748795939503996928)) (= x915 (x949 (- 0 x308))) (= x894 x915) (<= x262 18446744073709551615) (= x1004 x604) (< x262 18446744073709551616) (= (x818 20282409603651670423947251286015 x604) x986) (= x1398 (x949 (- 0 x1028))))) (= x119 (x682 x809 160)) (= x210 (x1436 (+ x573 384))) (>= x1243 0) (= x573 (x1436 (+ 512 x4))) (= 115197700812830431890159100217698998050002284567939525164234024451216521560064 x892) (= (and (> x633 0) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x633))) x1343) (= x1208 (x1436 (+ x573 288))) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x417) (= (x410 x1511) x633) (= (x1436 (+ 320 x573)) x1062) (not (< x343 2362581449)) (= x153 x135) (= x71 (x928 x1109)) (= (uninterp_mod x1589 x547) x1462) (= x1042 0) (<= 0 x1444) (>= 1208925819614629174706175 x143) (>= x417 0) (= 4272920204 x343) (= x883 (x1052 (x1418 x129) x350 0)) (= x1532 4) (> 1208925819614629174706176 x1087) (not (= 3257672857 x343)) (>= x1087 0) (= (x818 255 x937) x963) (= 4272920204 x257) (= (x1436 (+ 160 x1020)) x4) (= 4 x1347) (= (x949 (- x1212 x135)) x77) (= x230 x219) (= x1537 (x1401 x638)) (not (> x135 340282366920938463463374607431768211455)) (= (x1052 (x1418 274184521717934524641157099916833587211) (x1128 6) 0) x350) (>= x1243 0) (= x1057 (x682 x476 160)) (>= 1208925819614629174706175 x924) (>= 20282409603651670423947251286015 x1552) (= x1336 (x818 115792089237316195423570985008687907853269984665640564039457584007913129639904 x180)) (= x650 (x472 192)) (= (x1494 x1270) x1552) (= (x818 1461501637330902918203684832716283019655932542975 x476) x987) (= x793 (x818 65535 x1057)) (= x424 (x411 256)) (= (x1400 x1070) x1011) (>= 1208925819614629174706175 x979) (= (x1436 (+ 32 x1020)) x22) (= x219 (x818 1461501637330902918203684832716283019655932542975 x29))) x1032)))
(assert (x420 x589))
(assert (= 3833100637 (x540 (x1128 3833100637))))
(assert (= (x540 (x1128 76450787359836037641860180984291677749980919077056822294353438043884394381312)) 76450787359836037641860180984291677749980919077056822294353438043884394381312))
(assert (x420 x1510))
(assert (= (x540 (x1128 1099511627775)) 1099511627775))
(assert (x718 x604))
(assert (=> (> (+ 10000 1) x1245) (= (x1128 x1245) (x1418 x1245))))
(assert (= (ite (= x396 x741) 115197700812830431890159100217698998050002284567939525164234024451216521560064 (x380 x396)) (x1241 x396)))
(assert (= (- (/ x1481 2) (uninterp_frac x1481 2)) (x682 x1481 1)))
(assert (x420 x1332))
(assert (x420 x1257))
(assert (x420 x991))
(assert (x1016 x558))
(assert (= 0 (x1267 x1452)))
(assert (x420 x864))
(assert (x420 x1538))
(assert (x1016 x1075))
(assert (= (x540 (x1418 x1349)) x1349))
(assert (x57 x1192 x996))
(assert (x420 x358))
(assert (x420 x875))
(assert (x420 x241))
(assert (x420 x612))
(assert (x1016 x1384))
(assert (x420 x566))
(assert (x420 x662))
(assert (= (x1418 16156842317565293874272834530371880720966471053262404558597773956279093428224) (x1128 16156842317565293874272834530371880720966471053262404558597773956279093428224)))
(assert (x1165 x645 x116 x1234 x1374))
(assert (x420 x755))
(assert (= x661 (x540 (x1418 x661))))
(assert (x1016 x1443))
(assert (x1016 x724))
(assert (= (x1128 3795249780) (x1418 3795249780)))
(assert (= (=> (= (= 274184521717934524641157099916833587223 x701) x491) (and (=> (and (= (x818 1461501637330902918203684832716283019655932542975 x912) x1349) (<= x912 1461501637330902918203684832716283019655932542975) (= x282 x386) (= x460 (x1052 (x1418 274184521717934524641157099916833587211) (x1128 1) 0)) (= x1018 (x818 1461501637330902918203684832716283019655932542975 x912)) (= 274184521717934524641157099916833587211 x384) (= (< x1294 x63) x1543) (not (< x1368 4)) (= x785 (x818 1461501637330902918203684832716283019655932542975 x912)) (= (x1052 (x1418 274184521717934524641157099916833587211) x316 0) x516) (= x810 (+ x1574 x1509)) (= (x1052 (x1418 x1018) (x1128 1) 0) x131) (<= 0 x220) (= (x1052 (x1418 x12) (x1128 2) 0) x316) (>= x1294 0) (> 826074471 x176) (= x138 (x1052 (x1418 274184521717934524641157099916833587211) (x1128 1) 0)) (= x176 599290589) (= x1335 (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1209) (and (< x1209 96) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1209))))) (not (= 157198259 x176)) (= x944 (x949 (- x1157 x282))) (= (x949 (- x1368 4)) x1209) (= x175 x1368) (= x63 x1509) (= 274184521717934524641157099916833587211 x244) (not x1543) (= 274184521717934524641157099916833587211 x769) (= x220 (x1428 x138)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1294) (= x382 x912) (not (= x176 117300739)) (= (> x282 x1157) x434) (= x1294 (x1246 x516)) (= (x1052 (x1418 x1349) (x1128 1) 0) x7) (= x63 x282) (= x1368 100) (= x220 x1574) (<= x220 115792089237316195423570985008687907853269984665640564039457584007913129639935) (not (= x176 404098525)) (= x462 1) (= (x31 x7) x1157) (not x1335) (= x1536 32) (= x1086 16156842317565293874272834530371880720966471053262404558597773956279093428224) (= x771 (x949 (- x1294 x282))) (> x566 0) (not x434) (= 274184521717934524641157099916833587211 x91) (>= x1157 0) x491 (= x12 (x818 1461501637330902918203684832716283019655932542975 x912)) (< (+ x220 x63) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (<= x1157 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x735 (x1418 274184521717934524641157099916833587223)) x566)) x717) (=> (not x491) x999))) x838))
(assert (= (=> (and (not (= x879 0)) (= x418 x317) (= x99 x1311) (< 0 x34) (= (not x886) x275) (= (x763 x418) x317) (not (or (> x635 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= true (<= x635 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (> 32 x635)))) (= (or (> (x763 x418) 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (< (x763 x418) 0) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 (x763 x418))))) x376) (not (> 2661915226 x594)) (not (< x594 2799315671)) (< x594 3253611544) (= 2799315671 x594) (or (and x376 (not (= x589 115792089237316195423570985008687907853269984655499359237631748795939503996928)) (<= 0 x262) (= x1492 x621) (not (or (> x148 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (< x148 0) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x148) true)))) (= (x763 x418) x589) (not (< 10141204801825835211973625643007 x1268)) (>= 18446744073709551615 x262) (= (x949 (- 0 x589)) x148) (= x1163 (* x262 x97)) (< x262 18446744073709551616) (= (x818 20282409603651670423947251286015 x148) x97) (= (x818 20282409603651670423947251286015 x1334) x1268) (not (= 115792089237316195423570985008687907853269984655499359237631748795939503996928 x947)) (= (x949 (- 0 x947)) x1492) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (* x97 x262)) (= (x763 x1334) x947) (= x1163 x1334)) (and (= x858 (x818 20282409603651670423947251286015 x571)) (<= 0 x241) (>= 18446744073709551615 x241) (= (x818 20282409603651670423947251286015 x418) x276) (not x376) (= x571 x764) (= x571 x621) (< (* x241 x276) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (not (> x858 10141204801825835211973625643007)) (not (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x891) (and (< x891 0) (= (<= x891 57896044618658097711785492504343953926634992332820282019728792003956564819967) true)))) (= (* x276 x241) x764) (> 18446744073709551616 x241) (= (x763 x418) x891))) (= x34 (x735 (x1418 274184521717934524641157099916833587211))) (not (> 2068668150 x594)) (> x1311 0) (= (= 0 x1311) x886) (= x268 x418) (= (x1134 x732) x1311) (= x99 (ite x275 1 0))) x1123) x329))
(assert (x420 x857))
(assert (x1016 x505))
(assert (= (x1418 1099511627775) (x1128 1099511627775)))
(assert (x420 x1526))
(assert (x420 x1300))
(assert (x420 x1113))
(assert (x420 x1230))
(assert (x420 x144))
(assert (x420 x1339))
(assert (x420 x558))
(assert (x420 x303))
(assert (x1016 x556))
(assert (x420 x1184))
(assert (x420 x660))
(assert (x420 x110))
(assert (x420 x887))
(assert (x420 x1567))
(assert (= x685 (and x849 x1438)))
(assert (x420 x810))
(assert (x261 x835 x165))
(assert (x420 x1242))
(assert (x420 x493))
(assert (x778 274184521717934524641157099916833587244))
(assert (x420 x1297))
(assert (= x129 (x540 (x1418 x129))))
(assert (x290 x119 x28))
(assert (x1016 x677))
(assert (x1016 x894))
(assert (x420 x1116))
(assert (x420 x1590))
(assert (x420 x183))
(assert (x420 x946))
(assert (x1016 x1398))
(assert (x1016 x905))
(assert (= (x1128 274184521717934524641157099916833587211) (x1418 274184521717934524641157099916833587211)))
(assert (= 157198259 (x540 (x1128 157198259))))
(assert (= x1258 (=> (and (= (or (and (< x1001 0) (= true (<= x1001 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (> x1001 57896044618658097711785492504343953926634992332820282019728792003956564819967)) x154) (= x998 (ite x133 1 0)) (= (not x154) x133) (= x732 x1185)) x1043)))
(assert (x420 x1407))
(assert (x420 x1466))
(assert (x1016 x1288))
(assert (x420 x155))
(assert (x420 x1417))
(assert (x420 x716))
(assert (x420 x854))
(assert (x420 x1356))
(assert (x420 x235))
(assert (x420 x693))
(assert (= x1362 (=> (and (< (* x166 x777) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (not (ite x1195 x1195 (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x537) true) (< 170141183460469231731687303715884105727 x537)))) (= (x1436 (+ x1136 31)) x970) (= 0 x177) (= (not x1471) x1195) (not (or (> x1136 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1136) true) (> 160 x1136)))) (= (* x166 x777) x150) (= (x666 x396) x1121) (= (x1436 (+ x1355 64)) x584) (= (x1171 x254) x1010) (= x1122 (x949 (- 57896044618658097711785492504343953926634992332820282019728792003956564819968 x1399))) (= (ite (or (> x1399 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (> 0 x1399) (= (<= x1399 57896044618658097711785492504343953926634992332820282019728792003956564819967) true))) 1 0) x1587) (= 0 x888) (= x150 x1331) (= (x666 x344) x1364) (= (x949 (- 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1399)) x416) (= (x1436 (+ x1331 x1399)) x900) (= x126 (x818 340282366920938463463374607431768211455 x537)) (= x888 (x818 x98 x56)) (= (x818 x1587 x294) x177) (= x396 (x1436 (+ 64 x336))) (= x900 x179) (= x1458 (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1399) (and (< x1399 0) (= (<= x1399 57896044618658097711785492504343953926634992332820282019728792003956564819967) true)))) (= x1366 x523) (= x294 (ite (or (and (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1122) (> x1331 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (and (< x1331 x1122) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1331) (<= x1122 57896044618658097711785492504343953926634992332820282019728792003956564819967)))) 1 0)) (= (and (> x537 0) (= true (<= x537 57896044618658097711785492504343953926634992332820282019728792003956564819967))) x1471) (= x909 (x1436 (+ 288 x13))) (= (x666 x909) x537) (= x56 (ite (or (and (> x416 57896044618658097711785492504343953926634992332820282019728792003956564819967) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1331)) (and (= (<= x416 57896044618658097711785492504343953926634992332820282019728792003956564819967) (<= x1331 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (< x416 x1331))) 1 0)) (= x98 (ite (not x1458) 1 0)) (<= x1121 1208925819614629174706175) (= x777 (uninterp_mod (* x126 x387) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (not (> x1331 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (not (= 0 x930)) (= (x321 x584) x368) (= x254 (x1436 (+ x1452 64))) (= (x1436 (+ x644 x344)) x523) (= (x1436 (+ x344 64)) x336) (<= x1364 1208925819614629174706175) (= x166 (x818 18446744073709551615 x368)) (= (x818 115792089237316195423570985008687907853269984665640564039457584007913129639904 x970) x644)) x531)))
(assert (x1016 x341))
(assert (x420 x146))
(assert (x420 x561))
(assert (= x212 (=> (= x158 (= 274184521717934524641157099916833587227 x899)) (and (=> (not x158) x1577) (=> (and (not (= 826074471 x1466)) (= x1570 (x735 (x1418 274184521717934524641157099916833587227))) (= x1245 x1021) (not x609) (<= x1245 1461501637330902918203684832716283019655932542975) (= 68 x932) (= x1230 (x949 (- x932 4))) (= x111 x135) (not (= 2514000705 x1466)) (<= x314 115792089237316195423570985008687907853269984665640564039457584007913129639935) (not (= 1889567281 x1466)) x158 (not (> 826074471 x1466)) (= x385 x1440) (= x1039 x135) (= x1015 (< x314 x1039)) (= x609 (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1230) (and (< x1230 64) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1230) true)))) (= x1440 (x508 x728)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1440) (= x868 (+ x111 x385)) (not (< x932 4)) (= (x949 (- x314 x135)) x1575) (= x1466 2835717307) (= x401 (x1052 (x1418 274184521717934524641157099916833587211) (x1128 1) 0)) (= x951 x932) (< (+ x1440 x135) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x1245 x480) (= 274184521717934524641157099916833587211 x942) (not x1015) (= (x1052 (x1418 x1245) (x1128 1) 0) x728) (>= x1440 0) (= x393 76450787359836037641860180984291677749980919077056822294353438043884394381312) (= x1078 274184521717934524641157099916833587211) (= x754 (x1052 (x1418 274184521717934524641157099916833587211) (x1128 1) 0)) (> x1570 0) (<= 0 x314) (= 32 x635) (= x314 (x1435 x754)) (= 1 x879)) x329)))))
(assert (x1016 x653))
(assert (x1016 x680))
(assert (x420 x135))
(assert (x420 x1331))
(assert (x420 x1120))
(assert (x564 x907 x441))
(assert (x420 x703))
(assert (x420 x841))
(assert (= (ite (= x909 x51) x1427 (x1549 x909)) (x1588 x909)))
(assert (x420 x631))
(assert (x1016 x1175))
(assert (x420 x523))
(assert (= (x1418 3833100637) (x1128 3833100637)))
(assert (x420 x1022))
(assert (x420 x732))
(assert (x1016 x283))
(assert (x420 x537))
(assert (= (- (/ x817 2) (uninterp_frac x817 2)) (x682 x817 1)))
(assert (x420 x942))
(assert (x420 x796))
(assert (x420 x1334))
(assert (x420 x1311))
(assert (x420 x360))
(assert (x908 x905 x1415))
(assert (x1016 x912))
(assert (x564 x865 x877))
(assert (x420 x514))
(assert (x420 x1026))
(assert (x420 x1156))
(assert (x420 x1136))
(assert (x1016 x319))
(assert (x420 x1255))
(assert (x420 x128))
(assert (x420 x671))
(assert (x420 x1521))
(assert (x420 x259))
(assert (x420 x1329))
(assert (x420 x1340))
(assert (x420 x1233))
(assert (x420 x458))
(assert (= 2362581449 (x540 (x1128 2362581449))))
(assert (= 57896044618658097711785492504343953926634992332820282019728792003956564819968 (x540 (x1128 57896044618658097711785492504343953926634992332820282019728792003956564819968))))
(assert (x420 x382))
(assert (x420 x322))
(assert (x420 x559))
(assert (x788 x1328 x169))
(assert (x420 x541))
(assert (= 1099511627776 (x540 (x1128 1099511627776))))
(assert (= (x1128 2362581449) (x1418 2362581449)))
(assert (x420 x1530))
(assert (x420 x257))
(assert (= x766 (and x188 (not x491))))
(assert (x420 x418))
(assert (= (x682 x809 168) (- (/ x809 374144419156711147060143317175368453031918731001856) (uninterp_frac x809 374144419156711147060143317175368453031918731001856))))
(assert (= (ite (= x51 x1329) x1427 (x1549 x1329)) (x1588 x1329)))
(assert (= (x540 (x1418 x1333)) x1333))
(assert (= (x540 (x1418 x1018)) x1018))
(assert (= (x1418 599290589) (x1128 599290589)))
(assert (x420 x1062))
(assert (x420 x1061))
(assert (x420 x768))
(assert (x420 x888))
(assert (x57 x1445 x568))
(assert (x788 x1498 x120))
(assert (= 2835717307 (x540 (x1128 2835717307))))
(assert (x420 x547))
(assert (x420 x215))
(assert (x420 x961))
(assert (x420 x520))
(assert (x420 x1098))
(assert (=> (> (+ 10000 1) x875) (= (x1128 x875) (x1418 x875))))
(check-sat)
