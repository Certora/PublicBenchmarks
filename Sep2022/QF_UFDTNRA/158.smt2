(set-option :print-success false)
(set-option :produce-models true)
(set-logic QF_UFDTNRA)
(declare-fun uninterp_frac (Real Real) Real)
(define-fun axiom_frac_bound ((d1 Real) (d2 Real)) Bool (and (=> (> d2 0) (and (<= 0.0 (uninterp_frac d1 d2)) (< (uninterp_frac d1 d2) 1.0))) (=> (< d2 0) (and (>= 0.0 (uninterp_frac d1 d2)) (> (uninterp_frac d1 d2) (- 1.0))))))
(define-fun axiom_frac_zero ((d1 Real) (d2 Real) (m1 Real) (m2 Real) (e Real)) Bool (=> (and (= d1 (* m1 m2)) (or (= d2 m1) (= d2 m2))) (= e 0)))
(define-fun uninterp_mod ((x Real) (m Real)) Real (ite (and (>= x 0) (< x m)) x (ite (and (>= x m) (< x (+ m m))) (- x m) (ite (and (>= x (- m)) (< x 0)) (+ x m) (* m (uninterp_frac x m))))))
(define-fun axiom_int_approximation ((x Real)) Bool (or (= x 0) (>= x 1) (<= x (- 1))))
(declare-datatypes ((x1182 0)) (((x1026 (x1496 x1182) (x69 Real)) (x1410 (x1328 x1182) (x667 x1182) (x1450 Real)) (x378 (x1230 Real)))))
(declare-fun x220 () Bool)
(declare-fun x1084 () Real)
(declare-fun x1224 (Real) Real)
(declare-fun x679 () Real)
(declare-fun x61 () Real)
(declare-fun x110 () Real)
(declare-fun x975 () Real)
(declare-fun x1325 () Real)
(declare-fun x1223 () Real)
(declare-fun x428 () Real)
(declare-fun x1102 () Real)
(declare-fun x1535 () Real)
(declare-fun x1453 () Real)
(declare-fun x936 () Real)
(declare-fun x517 () Real)
(declare-fun x1430 () Bool)
(declare-fun x1515 () Real)
(declare-fun x1533 () x1182)
(declare-fun x1218 () x1182)
(declare-fun x674 () Real)
(declare-fun x1092 () Bool)
(declare-fun x622 () Bool)
(declare-fun x860 () Bool)
(declare-fun x1446 () Bool)
(declare-fun x1064 (Real) Real)
(declare-fun x1020 (x1182) Real)
(declare-fun x1377 () Real)
(declare-fun x1219 () x1182)
(declare-fun x1406 () Real)
(declare-fun x636 () Bool)
(declare-fun x1466 () x1182)
(declare-fun x1452 () Real)
(declare-fun x156 () Bool)
(declare-fun x978 () Real)
(declare-fun x902 () Bool)
(declare-fun x939 () Bool)
(declare-fun x805 () x1182)
(declare-fun x209 () Bool)
(declare-fun x786 () Real)
(declare-fun x795 () Bool)
(declare-fun x278 () Real)
(declare-fun x478 () x1182)
(declare-fun x1433 (x1182) Real)
(declare-fun x1245 (x1182) Real)
(declare-fun x296 () Bool)
(declare-fun x1031 () Real)
(declare-fun x421 () Real)
(declare-fun x1505 () Bool)
(declare-fun x791 () Bool)
(declare-fun x1383 () Bool)
(declare-fun x718 () Real)
(declare-fun x730 () Real)
(declare-fun x194 () Real)
(declare-fun x648 () Bool)
(declare-fun x73 () Real)
(declare-fun x1576 () Bool)
(declare-fun x617 () Bool)
(declare-fun x143 () Real)
(declare-fun x191 () Bool)
(declare-fun x649 () Bool)
(declare-fun x302 () Real)
(declare-fun x352 (Real) Real)
(declare-fun x186 () Real)
(declare-fun x610 () Bool)
(declare-fun x525 () Real)
(declare-fun x656 () Real)
(declare-fun x981 () Real)
(declare-fun x187 () Real)
(declare-fun x1112 () Real)
(declare-fun x1200 () Bool)
(declare-fun x48 () Real)
(declare-fun x768 () Real)
(declare-fun x1370 () Real)
(declare-fun x234 () Real)
(declare-fun x498 () Bool)
(declare-fun x29 (x1182) Real)
(declare-fun x1549 () Bool)
(declare-fun x700 () Bool)
(declare-fun x382 () Bool)
(declare-fun x1344 () Real)
(declare-fun x683 () Bool)
(declare-fun x79 () Bool)
(declare-fun x1240 (Real) Real)
(declare-fun x1417 () Real)
(declare-fun x261 () Real)
(declare-fun x1184 () x1182)
(declare-fun x676 () Real)
(declare-fun x267 () Bool)
(declare-fun x601 () Real)
(declare-fun x1485 () Real)
(declare-fun x1322 () Real)
(declare-fun x1215 () Real)
(declare-fun x1502 () Real)
(declare-fun x542 () x1182)
(declare-fun x798 () Real)
(declare-fun x869 () Real)
(declare-fun x835 () Real)
(declare-fun x1524 () Real)
(declare-fun x1567 () Bool)
(declare-fun x923 () Real)
(declare-fun x318 () Real)
(declare-fun x1100 () Real)
(declare-fun x139 () Real)
(declare-fun x1295 () Real)
(declare-fun x1076 () Real)
(declare-fun x1358 () Real)
(declare-fun x1238 () Real)
(declare-fun x2 () x1182)
(declare-fun x1262 () Bool)
(declare-fun x15 () Bool)
(declare-fun x212 () Bool)
(declare-fun x113 (x1182) Real)
(declare-fun x1104 () Real)
(declare-fun x552 () x1182)
(declare-fun x1120 () Bool)
(declare-fun x1091 () Bool)
(declare-fun x125 () Real)
(declare-fun x41 () Real)
(declare-fun x1119 () Bool)
(declare-fun x1431 () Real)
(declare-fun x185 () Bool)
(declare-fun x641 () x1182)
(declare-fun x119 () Real)
(declare-fun x647 () Bool)
(declare-fun x924 () Bool)
(declare-fun x581 () Real)
(declare-fun x1445 () Real)
(declare-fun x13 () Real)
(declare-fun x1039 () Real)
(declare-fun x1013 () Real)
(declare-fun x446 () Real)
(declare-fun x130 () Real)
(declare-fun x140 () x1182)
(declare-fun x613 () Real)
(declare-fun x1565 () Real)
(declare-fun x39 () Bool)
(declare-fun x801 () Bool)
(declare-fun x583 () Real)
(declare-fun x1033 () Real)
(declare-fun x91 () Real)
(declare-fun x74 (Real) Real)
(declare-fun x729 () Bool)
(declare-fun x804 () Real)
(declare-fun x575 () Real)
(declare-fun x1002 () Real)
(declare-fun x1012 () Real)
(declare-fun x1432 () Bool)
(declare-fun x1500 () Real)
(declare-fun x1023 () Bool)
(declare-fun x849 () Real)
(declare-fun x452 () Bool)
(declare-fun x1286 () Real)
(declare-fun x996 () Real)
(declare-fun x1547 () Bool)
(declare-fun x153 () Real)
(declare-fun x1403 () Real)
(declare-fun x773 () Real)
(declare-fun x888 () Real)
(declare-fun x141 () x1182)
(declare-fun x539 () Real)
(declare-fun x602 () Real)
(declare-fun x840 () Real)
(declare-fun x639 () Real)
(declare-fun x712 () Real)
(declare-fun x60 () Real)
(declare-fun x1125 () Bool)
(declare-fun x1480 () Real)
(declare-fun x1407 () Bool)
(declare-fun x133 () Bool)
(declare-fun x702 () x1182)
(declare-fun x586 (x1182) Real)
(declare-fun x767 () Real)
(declare-fun x839 () Real)
(declare-fun x960 () Real)
(declare-fun x1376 () Real)
(declare-fun x269 () Real)
(declare-fun x833 () Real)
(declare-fun x1378 () Real)
(declare-fun x1066 () Real)
(declare-fun x735 () Real)
(declare-fun x562 () x1182)
(declare-fun x954 () Bool)
(declare-fun x448 () Real)
(declare-fun x677 () Real)
(declare-fun x427 () Real)
(declare-fun x63 () Bool)
(declare-fun x346 () Real)
(declare-fun x193 () x1182)
(declare-fun x540 () Bool)
(declare-fun x957 () Real)
(declare-fun x1335 () Bool)
(declare-fun x1163 () x1182)
(declare-fun x749 () Bool)
(declare-fun x1326 (x1182) Real)
(declare-fun x1052 () Bool)
(declare-fun x1511 () Real)
(declare-fun x195 () x1182)
(declare-fun x843 () Real)
(declare-fun x397 () x1182)
(declare-fun x250 () Real)
(declare-fun x1512 () Real)
(declare-fun x285 () Bool)
(declare-fun x1257 () Real)
(declare-fun x1392 () x1182)
(declare-fun x1499 () Real)
(declare-fun x1080 () Real)
(declare-fun x1486 () Real)
(declare-fun x147 () Real)
(declare-fun x501 () Real)
(declare-fun x1267 () x1182)
(declare-fun x1573 () Real)
(declare-fun x375 () Real)
(declare-fun x831 () Real)
(declare-fun x1412 () Real)
(declare-fun x1258 () Real)
(declare-fun x982 () Real)
(declare-fun x227 () Real)
(declare-fun x1171 () Bool)
(declare-fun x1309 () Real)
(declare-fun x1360 () x1182)
(declare-fun x554 () x1182)
(declare-fun x441 () Real)
(declare-fun x1318 () Real)
(declare-fun x748 () Bool)
(declare-fun x492 () Bool)
(declare-fun x817 () Real)
(declare-fun x948 () Real)
(declare-fun x343 () Real)
(declare-fun x92 () Real)
(declare-fun x422 () Real)
(declare-fun x35 () x1182)
(declare-fun x779 () x1182)
(declare-fun x696 () Real)
(declare-fun x873 () Real)
(declare-fun x1082 () Bool)
(declare-fun x1006 () Real)
(declare-fun x958 () x1182)
(declare-fun x66 () Real)
(declare-fun x850 () x1182)
(declare-fun x137 () Real)
(declare-fun x658 () Bool)
(declare-fun x1313 () x1182)
(declare-fun x461 () x1182)
(declare-fun x854 () Real)
(declare-fun x6 () Real)
(declare-fun x178 () Real)
(declare-fun x1479 () Real)
(declare-fun x757 () Real)
(declare-fun x300 () x1182)
(declare-fun x1482 () Real)
(declare-fun x1283 () Real)
(declare-fun x987 () Real)
(declare-fun x1363 () Bool)
(declare-fun x1336 () Real)
(declare-fun x238 () x1182)
(declare-fun x587 () x1182)
(declare-fun x645 () x1182)
(declare-fun x1025 () Real)
(declare-fun x144 () Real)
(declare-fun x1131 () Real)
(declare-fun x1191 () Bool)
(declare-fun x553 () x1182)
(declare-fun x1321 () Bool)
(declare-fun x320 () Bool)
(declare-fun x499 () Real)
(declare-fun x1342 () Bool)
(declare-fun x284 () Real)
(declare-fun x976 () Bool)
(declare-fun x1556 () Bool)
(declare-fun x1016 () Real)
(declare-fun x1118 () Bool)
(declare-fun x239 () x1182)
(declare-fun x799 () Real)
(declare-fun x705 () Bool)
(declare-fun x480 () Real)
(declare-fun x882 () Bool)
(declare-fun x1180 () Real)
(declare-fun x1306 () Real)
(declare-fun x170 () Real)
(declare-fun x243 () Real)
(declare-fun x1448 () Bool)
(declare-fun x1529 () x1182)
(declare-fun x1101 (Real) Real)
(declare-fun x27 () Bool)
(declare-fun x1196 () Bool)
(declare-fun x1117 () Real)
(declare-fun x1348 () Real)
(declare-fun x790 () Real)
(declare-fun x96 () Bool)
(declare-fun x12 () Real)
(declare-fun x1199 () Real)
(declare-fun x168 () Real)
(declare-fun x1388 () x1182)
(declare-fun x886 () Bool)
(declare-fun x524 () Real)
(declare-fun x985 () x1182)
(declare-fun x1107 () Bool)
(declare-fun x652 (Real) Real)
(declare-fun x1519 () Real)
(declare-fun x819 () Real)
(declare-fun x82 () Bool)
(declare-fun x811 () Real)
(declare-fun x392 () Bool)
(declare-fun x406 () Bool)
(declare-fun x626 () Real)
(declare-fun x1490 () x1182)
(declare-fun x567 () x1182)
(declare-fun x277 () Bool)
(declare-fun x1577 () Bool)
(declare-fun x545 () Real)
(declare-fun x911 () x1182)
(declare-fun x309 () Real)
(declare-fun x474 () x1182)
(declare-fun x1472 () x1182)
(declare-fun x87 (Real) Real)
(declare-fun x1214 () x1182)
(declare-fun x1345 () Bool)
(declare-fun x1067 () Real)
(declare-fun x232 () x1182)
(declare-fun x1478 () Real)
(declare-fun x213 () Real)
(declare-fun x719 () x1182)
(declare-fun x408 () Real)
(declare-fun x330 () Bool)
(declare-fun x663 () Bool)
(declare-fun x365 () Bool)
(declare-fun x612 () Real)
(declare-fun x1557 () Bool)
(declare-fun x1143 (Real) Real)
(declare-fun x828 () Real)
(declare-fun x89 (Real) Real)
(declare-fun x906 () Real)
(declare-fun x521 () Real)
(declare-fun x271 () Real)
(declare-fun x307 () Bool)
(declare-fun x744 () Real)
(declare-fun x935 () Bool)
(declare-fun x1538 () Bool)
(declare-fun x984 () Bool)
(declare-fun x1357 () Bool)
(declare-fun x644 () x1182)
(declare-fun x256 () Bool)
(declare-fun x669 () Bool)
(declare-fun x24 () Bool)
(declare-fun x691 () x1182)
(declare-fun x940 () x1182)
(declare-fun x510 () Real)
(declare-fun x619 () x1182)
(declare-fun x1124 () x1182)
(declare-fun x526 () Real)
(declare-fun x31 () Real)
(declare-fun x1137 () x1182)
(declare-fun x1332 () Real)
(declare-fun x258 () Real)
(declare-fun x865 (x1182) Real)
(declare-fun x959 () Real)
(declare-fun x725 (Real) Real)
(declare-fun x857 () Real)
(declare-fun x824 () Bool)
(declare-fun x414 () Real)
(declare-fun x450 () Bool)
(declare-fun x1522 () Real)
(declare-fun x1521 () Real)
(declare-fun x301 () x1182)
(declare-fun x826 () x1182)
(declare-fun x23 () Real)
(declare-fun x202 () Real)
(declare-fun x1103 () x1182)
(declare-fun x118 () x1182)
(declare-fun x753 () Real)
(declare-fun x686 () Real)
(declare-fun x439 () Bool)
(declare-fun x609 () Bool)
(declare-fun x389 () Bool)
(declare-fun x1327 () Bool)
(declare-fun x1056 () Real)
(declare-fun x1401 () Real)
(declare-fun x1 () Real)
(declare-fun x1175 () Real)
(declare-fun x1005 () Bool)
(declare-fun x1493 () Real)
(declare-fun x483 () Real)
(declare-fun x638 () Real)
(declare-fun x1337 () Bool)
(declare-fun x88 () Real)
(declare-fun x1542 () Real)
(declare-fun x1364 () Real)
(declare-fun x456 () x1182)
(declare-fun x1275 () Bool)
(declare-fun x93 () Bool)
(declare-fun x1568 () Bool)
(declare-fun x615 () Real)
(declare-fun x1071 () Real)
(declare-fun x1369 () Bool)
(declare-fun x1051 () Real)
(declare-fun x1495 () Bool)
(declare-fun x1225 () Bool)
(declare-fun x572 () Real)
(declare-fun x523 () Bool)
(declare-fun x599 () Real)
(declare-fun x377 () Real)
(declare-fun x1463 () Real)
(declare-fun x350 () Bool)
(declare-fun x1126 () Real)
(declare-fun x872 () Real)
(declare-fun x1075 () Real)
(declare-fun x473 () Real)
(declare-fun x852 () x1182)
(declare-fun x467 () Bool)
(declare-fun x1198 () Real)
(declare-fun x123 () x1182)
(declare-fun x1385 () Real)
(declare-fun x1110 () Real)
(declare-fun x832 () Real)
(declare-fun x1038 () Bool)
(declare-fun x1264 () Bool)
(declare-fun x1543 () Real)
(declare-fun x992 () Real)
(declare-fun x878 () x1182)
(declare-fun x472 () Bool)
(declare-fun x369 () Real)
(declare-fun x614 () Bool)
(declare-fun x1113 () Real)
(declare-fun x288 () Real)
(declare-fun x947 () Bool)
(declare-fun x1007 () Bool)
(declare-fun x1451 () Real)
(declare-fun x166 () Bool)
(declare-fun x1503 () Real)
(declare-fun x1194 () Bool)
(declare-fun x1136 () Bool)
(declare-fun x802 () Real)
(declare-fun x896 () Real)
(declare-fun x34 () Real)
(declare-fun x348 () Real)
(declare-fun x344 () x1182)
(declare-fun x136 () Bool)
(declare-fun x915 () Bool)
(declare-fun x246 () Real)
(declare-fun x245 () Real)
(declare-fun x1129 () x1182)
(declare-fun x731 () Bool)
(declare-fun x1123 () x1182)
(declare-fun x315 () Bool)
(declare-fun x1555 () x1182)
(declare-fun x543 () x1182)
(declare-fun x596 () Real)
(declare-fun x299 () x1182)
(declare-fun x22 () x1182)
(declare-fun x1367 () Bool)
(declare-fun x844 () Real)
(declare-fun x190 () Real)
(declare-fun x101 () Real)
(declare-fun x687 () x1182)
(declare-fun x651 () Real)
(declare-fun x90 () x1182)
(declare-fun x463 () Real)
(declare-fun x231 () Real)
(declare-fun x625 () Bool)
(declare-fun x508 () Real)
(declare-fun x398 () Bool)
(declare-fun x631 () x1182)
(declare-fun x1391 () Real)
(declare-fun x1513 () Real)
(declare-fun x201 () Real)
(declare-fun x972 (Real) Real)
(declare-fun x969 () Bool)
(declare-fun x868 () Real)
(declare-fun x1296 () Bool)
(declare-fun x916 () x1182)
(declare-fun x42 () Bool)
(declare-fun x1293 () Real)
(declare-fun x1144 () Bool)
(declare-fun x1352 () x1182)
(declare-fun x971 () Real)
(declare-fun x1035 () Real)
(declare-fun x1534 () x1182)
(declare-fun x403 (Real) Real)
(declare-fun x837 () Real)
(declare-fun x373 () Real)
(declare-fun x222 () Bool)
(declare-fun x880 () Real)
(declare-fun x1277 () Bool)
(declare-fun x821 () x1182)
(declare-fun x94 () Real)
(declare-fun x1014 () Bool)
(declare-fun x637 () x1182)
(declare-fun x383 () Bool)
(declare-fun x83 (x1182) Real)
(declare-fun x515 () Bool)
(declare-fun x1350 () Bool)
(declare-fun x453 () x1182)
(declare-fun x294 () Real)
(declare-fun x594 () Real)
(declare-fun x426 () Bool)
(declare-fun x624 () Bool)
(declare-fun x942 () Bool)
(declare-fun x36 () Real)
(declare-fun x848 () Real)
(declare-fun x1544 () Bool)
(declare-fun x67 () Bool)
(declare-fun x1197 () x1182)
(declare-fun x388 () Bool)
(declare-fun x722 () Bool)
(declare-fun x262 () x1182)
(declare-fun x1373 () Bool)
(declare-fun x442 () Bool)
(declare-fun x11 (x1182) Real)
(declare-fun x765 () x1182)
(declare-fun x1237 () Bool)
(declare-fun x5 () Real)
(declare-fun x327 () Real)
(declare-fun x1396 () Real)
(declare-fun x338 () Real)
(declare-fun x432 () Real)
(declare-fun x342 (Real) Real)
(declare-fun x1280 () Real)
(declare-fun x582 () Real)
(declare-fun x1323 () Real)
(declare-fun x733 () Bool)
(declare-fun x895 () x1182)
(declare-fun x558 () Real)
(declare-fun x561 () Real)
(declare-fun x932 () Real)
(declare-fun x603 () Bool)
(declare-fun x1069 () Real)
(declare-fun x1034 () Bool)
(declare-fun x750 () Bool)
(declare-fun x49 () Bool)
(declare-fun x368 () Real)
(declare-fun x1138 () Real)
(declare-fun x772 () Bool)
(declare-fun x1355 () Bool)
(declare-fun x236 () Bool)
(declare-fun x714 () Bool)
(declare-fun x565 () Real)
(declare-fun x43 () Real)
(declare-fun x569 () Real)
(declare-fun x977 () Real)
(declare-fun x1497 () Real)
(declare-fun x756 () Bool)
(declare-fun x692 () Real)
(declare-fun x444 () x1182)
(declare-fun x503 () Bool)
(declare-fun x556 () Bool)
(declare-fun x249 () Bool)
(declare-fun x1380 () Bool)
(declare-fun x47 () Bool)
(declare-fun x75 () Real)
(declare-fun x58 () Bool)
(declare-fun x1353 () x1182)
(declare-fun x1285 () x1182)
(declare-fun x282 () Bool)
(declare-fun x1009 () x1182)
(declare-fun x1027 () Real)
(declare-fun x921 () Real)
(declare-fun x1221 () Real)
(declare-fun x402 () x1182)
(declare-fun x807 () Real)
(declare-fun x310 (Real) Real)
(declare-fun x390 () Bool)
(declare-fun x721 () Bool)
(declare-fun x1413 () Real)
(declare-fun x1288 () Real)
(declare-fun x1546 () Real)
(declare-fun x1250 () Real)
(declare-fun x1208 () Real)
(declare-fun x224 () Real)
(declare-fun x1421 () Real)
(declare-fun x506 () Real)
(declare-fun x856 () Real)
(declare-fun x892 () Bool)
(declare-fun x1254 () x1182)
(declare-fun x419 () x1182)
(declare-fun x822 () Bool)
(declare-fun x435 () Real)
(declare-fun x337 () Real)
(declare-fun x1484 () Bool)
(declare-fun x1402 () Real)
(declare-fun x1301 () x1182)
(declare-fun x161 () Real)
(declare-fun x1510 () Real)
(declare-fun x1155 () Real)
(declare-fun x52 () x1182)
(declare-fun x471 () Real)
(declare-fun x675 () Real)
(declare-fun x1142 () Real)
(declare-fun x627 () Bool)
(declare-fun x1442 () Real)
(declare-fun x701 () Real)
(declare-fun x917 () Real)
(declare-fun x1440 () Real)
(declare-fun x1390 () Real)
(declare-fun x808 () Bool)
(declare-fun x215 () Bool)
(declare-fun x233 () Bool)
(declare-fun x297 () Bool)
(declare-fun x706 () Real)
(declare-fun x1207 () Real)
(declare-fun x541 () Real)
(declare-fun x1204 () Real)
(declare-fun x607 () x1182)
(declare-fun x1141 () Bool)
(declare-fun x777 () Bool)
(declare-fun x1164 () Real)
(declare-fun x1059 () x1182)
(declare-fun x1176 () x1182)
(declare-fun x489 () x1182)
(declare-fun x72 () Bool)
(declare-fun x579 () Bool)
(declare-fun x265 () Real)
(declare-fun x528 () Real)
(declare-fun x253 () Real)
(declare-fun x1516 () Bool)
(declare-fun x325 () Bool)
(declare-fun x1170 () Real)
(declare-fun x707 () Real)
(declare-fun x1122 () Real)
(declare-fun x114 () Real)
(declare-fun x841 () Bool)
(declare-fun x1167 () Bool)
(declare-fun x745 () Bool)
(declare-fun x40 () Bool)
(declare-fun x988 () Real)
(declare-fun x952 () Real)
(declare-fun x1116 () Bool)
(declare-fun x1087 () Real)
(declare-fun x486 (Real) Real)
(declare-fun x1086 () Real)
(declare-fun x1165 () Real)
(declare-fun x739 () Real)
(declare-fun x1093 () Real)
(declare-fun x688 () Real)
(declare-fun x1287 () Bool)
(declare-fun x781 () Bool)
(declare-fun x794 () Real)
(declare-fun x1096 () Real)
(declare-fun x385 () Real)
(declare-fun x482 () Bool)
(declare-fun x836 () Bool)
(declare-fun x1195 () Real)
(declare-fun x254 () x1182)
(declare-fun x1273 () Real)
(declare-fun x1427 () Bool)
(declare-fun x578 () Real)
(declare-fun x19 () x1182)
(declare-fun x270 () Real)
(declare-fun x493 () Real)
(declare-fun x703 () Bool)
(declare-fun x1379 () Bool)
(declare-fun x918 () Real)
(declare-fun x1315 () Real)
(declare-fun x825 () Real)
(declare-fun x120 () Real)
(declare-fun x870 () Bool)
(declare-fun x1149 (Real) Real)
(declare-fun x654 () x1182)
(declare-fun x1030 () Real)
(declare-fun x973 () Bool)
(declare-fun x1498 () Bool)
(declare-fun x272 () Real)
(declare-fun x124 () Real)
(declare-fun x298 () Real)
(declare-fun x734 () Real)
(declare-fun x951 () Bool)
(declare-fun x1270 () Real)
(declare-fun x533 () x1182)
(declare-fun x1145 () Real)
(declare-fun x98 () Bool)
(declare-fun x1130 () x1182)
(declare-fun x1381 () Real)
(declare-fun x371 () Real)
(declare-fun x206 () Real)
(declare-fun x142 () Real)
(declare-fun x1133 () Bool)
(declare-fun x1079 () Bool)
(declare-fun x488 () Bool)
(declare-fun x1183 () Real)
(declare-fun x183 () Bool)
(declare-fun x620 () Real)
(declare-fun x1312 () Real)
(declare-fun x333 () Bool)
(declare-fun x329 () x1182)
(declare-fun x155 () Real)
(declare-fun x859 () x1182)
(declare-fun x695 () Bool)
(declare-fun x28 () Real)
(declare-fun x1158 () Real)
(declare-fun x1276 () Bool)
(declare-fun x623 () Real)
(declare-fun x1156 () x1182)
(declare-fun x257 () x1182)
(declare-fun x1239 () Bool)
(declare-fun x1517 () Real)
(declare-fun x812 () x1182)
(declare-fun x290 () Real)
(declare-fun x1365 () Real)
(declare-fun x331 () Bool)
(declare-fun x1282 () Bool)
(declare-fun x1261 () Bool)
(declare-fun x1362 () Bool)
(declare-fun x530 () x1182)
(declare-fun x1065 (x1182) Real)
(declare-fun x1439 () Bool)
(declare-fun x163 () Bool)
(declare-fun x126 () Bool)
(declare-fun x177 () Real)
(declare-fun x989 () Real)
(declare-fun x990 () Bool)
(declare-fun x1349 () Bool)
(declare-fun x1057 () Real)
(declare-fun x1083 () Real)
(declare-fun x909 () x1182)
(declare-fun x764 () Bool)
(declare-fun x221 () Bool)
(declare-fun x175 () x1182)
(declare-fun x418 () Bool)
(declare-fun x1532 (Real) Real)
(declare-fun x279 () Real)
(declare-fun x1314 () Bool)
(declare-fun x650 () Real)
(declare-fun x1054 () x1182)
(declare-fun x172 () Real)
(declare-fun x291 () Real)
(declare-fun x891 () x1182)
(declare-fun x359 () Bool)
(declare-fun x479 () Bool)
(declare-fun x455 () Bool)
(declare-fun x425 () Real)
(declare-fun x1029 () Real)
(declare-fun x1128 () Real)
(declare-fun x273 () x1182)
(declare-fun x103 (Real Real) Real)
(declare-fun x894 () x1182)
(declare-fun x70 () Real)
(declare-fun x165 () Bool)
(declare-fun x1302 () Real)
(declare-fun x876 () Real)
(declare-fun x1260 () Real)
(declare-fun x457 () Real)
(declare-fun x796 () Real)
(declare-fun x387 () Bool)
(declare-fun x1048 () Real)
(declare-fun x1168 () x1182)
(declare-fun x1058 () Real)
(declare-fun x176 () Real)
(declare-fun x926 () Bool)
(declare-fun x465 () x1182)
(declare-fun x1387 () Bool)
(declare-fun x468 () Real)
(declare-fun x697 () Bool)
(declare-fun x225 () Real)
(declare-fun x570 () x1182)
(declare-fun x887 (Real) Real)
(declare-fun x566 () Real)
(declare-fun x204 () Real)
(declare-fun x997 () Real)
(declare-fun x1022 () Bool)
(declare-fun x829 () x1182)
(declare-fun x1429 (Real) Real)
(declare-fun x689 () x1182)
(declare-fun x1231 () x1182)
(declare-fun x766 () Bool)
(declare-fun x979 () x1182)
(declare-fun x1055 () Real)
(declare-fun x16 () Real)
(declare-fun x1305 () Real)
(declare-fun x871 () Bool)
(declare-fun x8 () Real)
(declare-fun x1566 () x1182)
(declare-fun x1046 () Real)
(declare-fun x1019 () Real)
(declare-fun x237 () Real)
(declare-fun x1574 () Real)
(declare-fun x255 () Bool)
(declare-fun x966 () Real)
(declare-fun x1242 () x1182)
(declare-fun x1201 () Bool)
(declare-fun x128 () x1182)
(declare-fun x659 () Bool)
(declare-fun x693 () Bool)
(declare-fun x200 () Real)
(declare-fun x339 () Bool)
(declare-fun x1307 () Real)
(declare-fun x1550 () Bool)
(declare-fun x536 () Real)
(declare-fun x933 () x1182)
(declare-fun x303 () Real)
(declare-fun x449 () Bool)
(declare-fun x1382 () Bool)
(declare-fun x830 () Bool)
(declare-fun x890 () Bool)
(declare-fun x879 () Real)
(declare-fun x751 () Real)
(declare-fun x328 () x1182)
(declare-fun x1449 () Real)
(declare-fun x171 () Bool)
(declare-fun x1351 (Real) Real)
(declare-fun x1489 () Real)
(declare-fun x1476 () Real)
(declare-fun x268 () Bool)
(declare-fun x420 () Bool)
(declare-fun x1562 () x1182)
(declare-fun x1571 () Bool)
(declare-fun x111 () Bool)
(declare-fun x1161 () Real)
(declare-fun x497 () Real)
(declare-fun x400 () x1182)
(declare-fun x994 () Real)
(declare-fun x347 () Real)
(declare-fun x248 () Real)
(declare-fun x25 () Real)
(declare-fun x666 () Real)
(declare-fun x842 () x1182)
(declare-fun x436 () x1182)
(declare-fun x1329 () Real)
(declare-fun x1465 () Bool)
(declare-fun x1420 () x1182)
(declare-fun x1174 () Real)
(declare-fun x898 () x1182)
(declare-fun x199 () Real)
(declare-fun x21 () Bool)
(declare-fun x326 () Real)
(declare-fun x555 () x1182)
(declare-fun x560 () x1182)
(declare-fun x1536 () Real)
(declare-fun x759 () Real)
(declare-fun x1146 () Bool)
(declare-fun x1111 () x1182)
(declare-fun x381 (Real) Real)
(declare-fun x4 () Real)
(declare-fun x1508 () x1182)
(declare-fun x358 () Real)
(declare-fun x1425 () Bool)
(declare-fun x433 () Real)
(declare-fun x1340 () Bool)
(declare-fun x169 () Bool)
(declare-fun x1169 () Real)
(declare-fun x955 () Real)
(declare-fun x1105 () Real)
(declare-fun x64 () x1182)
(declare-fun x1222 () Real)
(declare-fun x71 () Real)
(declare-fun x672 () Real)
(declare-fun x181 () Real)
(declare-fun x699 () Bool)
(declare-fun x1135 () Real)
(declare-fun x1297 () Bool)
(declare-fun x275 () Real)
(declare-fun x1386 () Bool)
(declare-fun x57 () Real)
(declare-fun x1399 () x1182)
(declare-fun x423 () Real)
(declare-fun x970 () x1182)
(declare-fun x974 () Real)
(declare-fun x963 () x1182)
(declare-fun x1134 (Real) Real)
(declare-fun x1243 () Real)
(declare-fun x108 () Real)
(declare-fun x1121 () Real)
(declare-fun x1389 () x1182)
(declare-fun x914 () x1182)
(declare-fun x216 () x1182)
(declare-fun x1488 () Real)
(declare-fun x1552 (x1182) Real)
(declare-fun x1575 () Bool)
(declare-fun x742 () Real)
(declare-fun x520 () Bool)
(declare-fun x1018 () Real)
(declare-fun x673 () Real)
(declare-fun x986 () Bool)
(declare-fun x504 () Real)
(declare-fun x214 () Real)
(declare-fun x362 () Real)
(declare-fun x1081 () Bool)
(declare-fun x511 () Real)
(declare-fun x534 () Bool)
(declare-fun x931 () Bool)
(declare-fun x771 () Real)
(declare-fun x900 () Bool)
(declare-fun x881 () Real)
(declare-fun x364 () Bool)
(declare-fun x430 () Bool)
(declare-fun x1160 (Real) Real)
(declare-fun x1455 () Real)
(declare-fun x1491 () Real)
(declare-fun x1560 () Real)
(declare-fun x946 () Bool)
(declare-fun x240 () Bool)
(declare-fun x564 () Bool)
(declare-fun x787 () Real)
(declare-fun x1227 () Real)
(declare-fun x1507 () Bool)
(declare-fun x45 (x1182) Real)
(declare-fun x229 () Real)
(declare-fun x59 () Real)
(declare-fun x845 () Real)
(declare-fun x629 () Real)
(declare-fun x415 () Real)
(declare-fun x242 () Bool)
(declare-fun x746 (x1182) Real)
(declare-fun x953 () Bool)
(declare-fun x407 () x1182)
(declare-fun x621 () Real)
(declare-fun x104 () Real)
(declare-fun x1528 () Bool)
(declare-fun x1015 (Real) Real)
(declare-fun x188 () x1182)
(declare-fun x1569 () Bool)
(declare-fun x537 () Bool)
(declare-fun x466 () Bool)
(declare-fun x1234 () Real)
(declare-fun x598 () Real)
(declare-fun x146 () Bool)
(declare-fun x109 () Bool)
(declare-fun x538 () Bool)
(declare-fun x1188 () Real)
(declare-fun x1310 () Real)
(declare-fun x1043 () Real)
(declare-fun x608 () Real)
(declare-fun x838 () x1182)
(declare-fun x943 () Real)
(declare-fun x115 () Bool)
(declare-fun x464 () Bool)
(declare-fun x1471 () Bool)
(declare-fun x717 () Bool)
(declare-fun x1042 () Bool)
(declare-fun x793 () Real)
(declare-fun x341 () x1182)
(declare-fun x1416 () Bool)
(declare-fun x866 () Bool)
(declare-fun x1154 () Bool)
(declare-fun x84 () x1182)
(declare-fun x1411 () Real)
(declare-fun x604 () Real)
(declare-fun x196 () Bool)
(declare-fun x1132 () Real)
(declare-fun x1148 () Real)
(declare-fun x885 () Real)
(declare-fun x494 () Real)
(declare-fun x154 () Real)
(declare-fun x324 () Real)
(declare-fun x502 (x1182) Real)
(declare-fun x353 () Bool)
(declare-fun x112 () Real)
(declare-fun x1330 () Real)
(declare-fun x1554 () x1182)
(declare-fun x925 () Bool)
(declare-fun x487 (Real) Real)
(declare-fun x417 () Real)
(declare-fun x913 () Bool)
(declare-fun x32 () Bool)
(declare-fun x910 () Real)
(declare-fun x274 () Real)
(declare-fun x655 () x1182)
(declare-fun x532 () Bool)
(declare-fun x889 () Real)
(declare-fun x690 () Bool)
(declare-fun x1438 () Bool)
(declare-fun x1460 () Real)
(declare-fun x1294 () Real)
(declare-fun x1462 () Real)
(declare-fun x646 () Real)
(declare-fun x1398 () Bool)
(declare-fun x557 (Real) Real)
(declare-fun x1509 () Real)
(declare-fun x595 () Bool)
(declare-fun x847 () Bool)
(declare-fun x934 () Bool)
(declare-fun x1178 () Real)
(declare-fun x616 () Real)
(declare-fun x1526 () Real)
(declare-fun x404 () Real)
(declare-fun x1333 () Bool)
(declare-fun x755 () Real)
(declare-fun x159 () x1182)
(declare-fun x95 () Real)
(declare-fun x1319 () Real)
(declare-fun x395 () Bool)
(declare-fun x349 () Bool)
(declare-fun x1415 () Real)
(declare-fun x62 () x1182)
(declare-fun x1078 () Real)
(declare-fun x149 () Bool)
(declare-fun x698 () Bool)
(declare-fun x1151 () Real)
(declare-fun x1458 () x1182)
(declare-fun x1106 () Bool)
(declare-fun x219 () x1182)
(declare-fun x711 () x1182)
(declare-fun x1308 () Real)
(declare-fun x370 () x1182)
(declare-fun x3 () x1182)
(declare-fun x454 (x1182) Real)
(declare-fun x264 () Bool)
(declare-fun x287 () Real)
(declare-fun x815 () Real)
(declare-fun x1300 () Real)
(declare-fun x99 () Real)
(declare-fun x820 () Real)
(declare-fun x1268 () Bool)
(declare-fun x1279 () Real)
(declare-fun x1246 () Real)
(declare-fun x1008 () Real)
(declare-fun x158 () Real)
(declare-fun x1173 () Real)
(declare-fun x834 () Bool)
(declare-fun x304 () Real)
(declare-fun x410 () Real)
(declare-fun x198 () Real)
(declare-fun x635 (x1182) Real)
(declare-fun x1346 (Real) Real)
(declare-fun x150 () Real)
(declare-fun x138 () x1182)
(declare-fun x308 () Bool)
(declare-fun x897 () Real)
(declare-fun x332 () Real)
(declare-fun x1409 () Bool)
(declare-fun x496 () Real)
(declare-fun x230 () Bool)
(declare-fun x1501 () Bool)
(declare-fun x77 () Bool)
(declare-fun x134 () Real)
(declare-fun x983 () x1182)
(declare-fun x519 () Bool)
(declare-fun x357 () Real)
(declare-fun x1558 () Bool)
(declare-fun x129 () Bool)
(declare-fun x1343 () Bool)
(declare-fun x1278 () Bool)
(declare-fun x1525 () x1182)
(declare-fun x314 () x1182)
(declare-fun x207 () Real)
(declare-fun x1561 () Real)
(declare-fun x642 () Bool)
(declare-fun x1228 () Bool)
(declare-fun x1361 () x1182)
(declare-fun x1559 () Real)
(declare-fun x1172 () Bool)
(declare-fun x1553 () x1182)
(declare-fun x1443 () Bool)
(declare-fun x475 () x1182)
(declare-fun x732 () Bool)
(declare-fun x670 () Real)
(declare-fun x1375 () Real)
(declare-fun x323 () Bool)
(declare-fun x97 () x1182)
(declare-fun x65 () Bool)
(declare-fun x823 () x1182)
(declare-fun x76 () Bool)
(declare-fun x1468 () Real)
(declare-fun x907 () Bool)
(declare-fun x550 () x1182)
(declare-fun x1405 () Real)
(declare-fun x424 (x1182) Real)
(declare-fun x861 () Bool)
(declare-fun x1115 () Bool)
(declare-fun x713 () Bool)
(declare-fun x80 (x1182) Real)
(declare-fun x1004 () Real)
(declare-fun x853 () Real)
(declare-fun x1185 () Real)
(declare-fun x505 () x1182)
(declare-fun x874 () Bool)
(declare-fun x263 () Real)
(declare-fun x1397 () x1182)
(declare-fun x117 () Real)
(declare-fun x431 () Real)
(declare-fun x1520 () Real)
(declare-fun x208 () x1182)
(declare-fun x875 () Real)
(declare-fun x37 () Real)
(declare-fun x131 () x1182)
(declare-fun x529 () Real)
(declare-fun x559 () Bool)
(declare-fun x18 () x1182)
(declare-fun x1564 () Real)
(declare-fun x319 () Real)
(declare-fun x758 () Real)
(declare-fun x447 () Real)
(declare-fun x597 () Bool)
(declare-fun x846 () Real)
(declare-fun x1418 () Bool)
(declare-fun x53 () Real)
(declare-fun x967 () Real)
(declare-fun x1232 () Bool)
(declare-fun x1289 () Bool)
(declare-fun x1189 () Bool)
(declare-fun x122 () x1182)
(declare-fun x1114 () Bool)
(declare-fun x1274 () Bool)
(declare-fun x197 () Bool)
(declare-fun x1371 () Bool)
(declare-fun x901 () Real)
(declare-fun x1551 () Bool)
(declare-fun x394 () x1182)
(declare-fun x1041 () x1182)
(declare-fun x1010 () Bool)
(declare-fun x883 () Bool)
(declare-fun x54 () Real)
(declare-fun x571 () x1182)
(declare-fun x1094 () x1182)
(declare-fun x1456 () Real)
(declare-fun x1434 () Bool)
(declare-fun x1372 () x1182)
(declare-fun x930 () Real)
(declare-fun x228 () Real)
(declare-fun x121 () x1182)
(declare-fun x584 () Bool)
(declare-fun x295 () Real)
(declare-fun x727 () x1182)
(declare-fun x1545 () Bool)
(declare-fun x789 () Bool)
(declare-fun x884 () x1182)
(declare-fun x708 () Real)
(declare-fun x704 () Real)
(declare-fun x192 () x1182)
(declare-fun x1074 () Real)
(declare-fun x634 () x1182)
(declare-fun x293 () Bool)
(declare-fun x372 () Real)
(declare-fun x476 () Real)
(declare-fun x1251 () Bool)
(declare-fun x662 () Real)
(declare-fun x1487 () Real)
(declare-fun x1540 () Real)
(declare-fun x1089 () x1182)
(declare-fun x628 () x1182)
(declare-fun x999 () Real)
(declare-fun x1206 () Real)
(declare-fun x685 () Real)
(declare-fun x276 () Real)
(declare-fun x1247 () Real)
(declare-fun x657 () Real)
(declare-fun x1220 () Bool)
(declare-fun x485 () x1182)
(declare-fun x741 () Real)
(declare-fun x317 () x1182)
(declare-fun x1037 () Real)
(declare-fun x547 () Real)
(declare-fun x280 () Real)
(declare-fun x893 () Bool)
(declare-fun x1494 () Bool)
(declare-fun x78 () Real)
(declare-fun x660 () Real)
(declare-fun x335 () Real)
(declare-fun x345 () x1182)
(declare-fun x1001 () x1182)
(declare-fun x593 () x1182)
(declare-fun x738 () Bool)
(declare-fun x1527 () x1182)
(declare-fun x1441 () Real)
(declare-fun x1269 () Real)
(declare-fun x1045 () Bool)
(declare-fun x1259 (Real Real) Real)
(declare-fun x173 () Bool)
(declare-fun x210 () x1182)
(declare-fun x306 () x1182)
(declare-fun x356 () Bool)
(declare-fun x162 () Bool)
(declare-fun x1186 () Real)
(declare-fun x920 () Real)
(declare-fun x374 () Bool)
(declare-fun x1256 () Bool)
(declare-fun x1291 () Real)
(declare-fun x592 () Real)
(declare-fun x640 () Real)
(declare-fun x945 () Bool)
(declare-fun x549 () Real)
(declare-fun x1177 () Real)
(declare-fun x1210 () Bool)
(declare-fun x1298 () Real)
(declare-fun x611 () Real)
(declare-fun x1266 () Bool)
(declare-fun x434 () Real)
(declare-fun x1241 () Bool)
(declare-fun x1374 () Real)
(declare-fun x964 () Bool)
(declare-fun x776 () Real)
(declare-fun x376 () Real)
(declare-fun x797 () Real)
(declare-fun x1457 () Real)
(declare-fun x912 () x1182)
(declare-fun x135 (Real) Real)
(declare-fun x784 () x1182)
(declare-fun x590 () Real)
(declare-fun x438 () Bool)
(declare-fun x241 () Bool)
(declare-fun x363 () Real)
(declare-fun x462 () Real)
(declare-fun x305 () Bool)
(declare-fun x737 (x1182) Real)
(declare-fun x218 () Bool)
(declare-fun x1098 () Bool)
(declare-fun x46 () Real)
(declare-fun x1244 () x1182)
(declare-fun x189 () Bool)
(declare-fun x1233 () Real)
(declare-fun x81 () Bool)
(declare-fun x10 () x1182)
(declare-fun x991 () Bool)
(declare-fun x514 () x1182)
(declare-fun x440 () Real)
(declare-fun x451 () Real)
(declare-fun x694 () Real)
(declare-fun x671 () x1182)
(declare-fun x632 () Bool)
(declare-fun x289 () Real)
(declare-fun x681 () Bool)
(declare-fun x544 () Real)
(declare-fun x322 () Bool)
(declare-fun x740 () Bool)
(declare-fun x1578 () Real)
(declare-fun x1088 () x1182)
(declare-fun x469 () Real)
(declare-fun x720 () x1182)
(declare-fun x1514 () Bool)
(declare-fun x1404 () Bool)
(declare-fun x1068 () Real)
(declare-fun x1570 () x1182)
(declare-fun x1061 () Real)
(declare-fun x1235 (Real) Real)
(declare-fun x157 () Real)
(declare-fun x1060 (x1182) Real)
(declare-fun x1162 () Bool)
(declare-fun x1339 () x1182)
(declare-fun x961 () Real)
(declare-fun x1341 () Real)
(declare-fun x576 () Real)
(declare-fun x563 () Bool)
(declare-fun x1203 () Real)
(declare-fun x630 () Real)
(declare-fun x38 () Real)
(declare-fun x709 () Real)
(declare-fun x384 () Real)
(declare-fun x1436 () x1182)
(declare-fun x145 () x1182)
(declare-fun x495 () Bool)
(declare-fun x51 () Bool)
(declare-fun x513 () Real)
(declare-fun x1426 () x1182)
(declare-fun x724 () Real)
(declare-fun x1394 () Bool)
(declare-fun x235 () Real)
(declare-fun x941 () Bool)
(declare-fun x460 (Real) x1182)
(declare-fun x459 () Bool)
(declare-fun x774 () Real)
(declare-fun x56 () Bool)
(declare-fun x643 () Bool)
(declare-fun x1467 () Real)
(declare-fun x867 () Bool)
(declare-fun x792 () x1182)
(declare-fun x568 () x1182)
(declare-fun x1181 (Real) Real)
(declare-fun x14 () Real)
(declare-fun x437 () Real)
(declare-fun x1000 () Real)
(declare-fun x1506 () Real)
(declare-fun x770 () x1182)
(declare-fun x929 () Bool)
(declare-fun x412 () Real)
(declare-fun x1384 () Real)
(declare-fun x132 () Real)
(declare-fun x340 () Bool)
(declare-fun x760 () x1182)
(declare-fun x1423 () Real)
(declare-fun x500 () Bool)
(declare-fun x858 () Real)
(declare-fun x1179 () Real)
(declare-fun x1334 () Bool)
(declare-fun x551 () Real)
(declare-fun x127 () Bool)
(declare-fun x548 () Real)
(declare-fun x1316 () Real)
(declare-fun x1236 () Bool)
(declare-fun x20 () Bool)
(declare-fun x1216 () Real)
(declare-fun x1393 () Real)
(declare-fun x1281 () Real)
(declare-fun x266 () Real)
(declare-fun x281 () x1182)
(declare-fun x1017 () Real)
(declare-fun x33 () Bool)
(declare-fun x585 () Real)
(declare-fun x1292 () Bool)
(declare-fun x1347 () x1182)
(declare-fun x1356 () x1182)
(declare-fun x1070 () Real)
(declare-fun x226 () Bool)
(declare-fun x818 () Real)
(declare-fun x618 () Real)
(declare-fun x205 () Real)
(declare-fun x1166 (x1182) Real)
(declare-fun x535 () Bool)
(declare-fun x518 () Bool)
(declare-fun x968 () Bool)
(declare-fun x1263 () Bool)
(declare-fun x995 () Bool)
(declare-fun x1504 () Bool)
(declare-fun x1040 () Real)
(declare-fun x877 () Real)
(declare-fun x1395 () Real)
(declare-fun x152 () Real)
(declare-fun x1548 () Bool)
(declare-fun x174 () Real)
(declare-fun x167 () Bool)
(declare-fun x391 () Real)
(declare-fun x1011 () Real)
(declare-fun x775 () Bool)
(declare-fun x938 () Bool)
(declare-fun x68 () Real)
(declare-fun x481 () Real)
(declare-fun x944 () Real)
(declare-fun x863 () Real)
(declare-fun x716 () Real)
(declare-fun x1097 () Real)
(declare-fun x401 () x1182)
(declare-fun x1324 () Bool)
(declare-fun x803 () Bool)
(declare-fun x355 () Real)
(declare-fun x574 () Real)
(declare-fun x1477 () Bool)
(declare-fun x106 () x1182)
(declare-fun x1272 () Real)
(declare-fun x1229 () Bool)
(declare-fun x1424 () Bool)
(declare-fun x1518 () Bool)
(declare-fun x813 () x1182)
(declare-fun x1213 () Real)
(declare-fun x396 () Bool)
(declare-fun x769 () x1182)
(declare-fun x1331 () Real)
(declare-fun x313 () Bool)
(declare-fun x903 () x1182)
(declare-fun x580 () x1182)
(declare-fun x1469 () x1182)
(declare-fun x965 () Bool)
(declare-fun x184 () Real)
(declare-fun x664 () Bool)
(declare-fun x1317 () Bool)
(declare-fun x1192 () Real)
(declare-fun x1003 () Bool)
(declare-fun x949 () x1182)
(declare-fun x680 () Real)
(declare-fun x665 () Bool)
(declare-fun x1459 () Bool)
(declare-fun x899 () Bool)
(declare-fun x710 () Real)
(declare-fun x1563 () Real)
(declare-fun x1147 () x1182)
(declare-fun x512 () x1182)
(declare-fun x1050 () Real)
(declare-fun x160 () Bool)
(declare-fun x1217 () Real)
(declare-fun x810 () Real)
(declare-fun x164 () Real)
(declare-fun x1249 () Bool)
(declare-fun x1284 () Real)
(declare-fun x606 () Real)
(declare-fun x754 () Real)
(declare-fun x806 () Real)
(declare-fun x116 () x1182)
(declare-fun x367 () Real)
(declare-fun x30 () Bool)
(declare-fun x814 () Real)
(declare-fun x1541 () Real)
(declare-fun x1444 () Real)
(declare-fun x1539 () Real)
(declare-fun x1572 () Real)
(declare-fun x736 () Bool)
(declare-fun x9 () Real)
(declare-fun x179 () Real)
(declare-fun x411 () Real)
(declare-fun x816 () Bool)
(declare-fun x780 () Bool)
(declare-fun x477 () Real)
(declare-fun x509 () x1182)
(declare-fun x1475 () Real)
(declare-fun x1464 () Real)
(declare-fun x1437 () x1182)
(declare-fun x44 () Bool)
(declare-fun x752 () Bool)
(declare-fun x782 () Bool)
(declare-fun x862 () Bool)
(declare-fun x55 () Real)
(declare-fun x864 () Real)
(declare-fun x26 () Bool)
(declare-fun x1021 () Bool)
(declare-fun x490 () Bool)
(declare-fun x726 () Real)
(declare-fun x445 () Bool)
(declare-fun x800 () Real)
(declare-fun x1400 () Bool)
(declare-fun x334 () Real)
(declare-fun x1530 () Real)
(declare-fun x1205 () x1182)
(declare-fun x684 () x1182)
(declare-fun x1304 () Real)
(declare-fun x107 () Bool)
(declare-fun x399 () Real)
(declare-fun x1099 () Bool)
(declare-fun x1366 () x1182)
(declare-fun x1252 () Real)
(declare-fun x217 () x1182)
(declare-fun x283 () Bool)
(declare-fun x1127 () Real)
(declare-fun x1359 () Real)
(declare-fun x458 () Bool)
(declare-fun x1202 () Real)
(declare-fun x591 () Real)
(declare-fun x516 () x1182)
(declare-fun x1062 () Bool)
(declare-fun x292 () Real)
(declare-fun x1338 () Real)
(declare-fun x102 () x1182)
(declare-fun x715 () Bool)
(declare-fun x937 () Real)
(declare-fun x1090 () Bool)
(declare-fun x17 () Real)
(declare-fun x1108 () Real)
(declare-fun x354 () Real)
(declare-fun x223 () Real)
(declare-fun x855 () Real)
(declare-fun x1470 () x1182)
(declare-fun x86 () Bool)
(declare-fun x182 () Real)
(declare-fun x1428 () Real)
(declare-fun x851 () x1182)
(declare-fun x1209 () Real)
(declare-fun x1053 () Real)
(declare-fun x405 () Real)
(declare-fun x527 () Real)
(declare-fun x1290 () x1182)
(declare-fun x148 () Bool)
(declare-fun x1435 () Bool)
(declare-fun x1049 () x1182)
(declare-fun x1483 () Bool)
(declare-fun x1211 () Real)
(declare-fun x484 () Real)
(declare-fun x1454 () Real)
(declare-fun x1187 () x1182)
(define-fun x1095 ((x1182 x1182) (x247 Real)) x1182 (ite ((_ is x1026) x1182) (x1026 (x1496 x1182) (+ x247 (x69 x1182))) (ite ((_ is x1410) x1182) (x1410 (x1328 x1182) (x667 x1182) (+ (x1450 x1182) x247)) (x378 (+ x247 (x1230 x1182))))))
(define-fun x546 ((x522 Real)) Real (ite (and (>= x522 0) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 x522)) x522 (- x522 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(define-fun x311 ((x522 Real)) Real (ite (and (>= x522 (- 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (< x522 0)) (+ 115792089237316195423570985008687907853269984665640564039457584007913129639936 x522) x522))
(define-fun x1212 ((x1461 Real)) Bool (and (>= x1461 0) (< x1461 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(define-fun x919 ((x1461 Real)) Bool (and (= x1461 (x1259 x1461 115792089237316195423570985008687907853269984665640564039457584007913129639935)) (= (x1259 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1461) x1461)))
(define-fun x908 ((x1461 Real)) Bool (and (= 0 (x1259 x1461 0)) (= 0 (x1259 0 x1461))))
(define-fun x7 ((x1461 Real)) Bool (= (x1259 x1461 x1461) x1461))
(define-fun x763 ((x1461 Real)) Bool (and (x7 x1461) (x908 x1461) (x919 x1461)))
(define-fun x1473 ((x1461 Real)) Bool (= (x1259 1461501637330902918203684832716283019655932542975 x1461) (x1259 1461501637330902918203684832716283019655932542975 (x1259 1461501637330902918203684832716283019655932542975 x1461))))
(define-fun x1028 ((x1461 Real)) Bool (=> (and (<= 0 x1461) (> 1461501637330902918203684832716283019655932542976 x1461)) (= x1461 (x1259 1461501637330902918203684832716283019655932542975 x1461))))
(define-fun x743 ((x1461 Real)) Bool (=> (= (x1259 1461501637330902918203684832716283019655932542975 x1461) x1461) (and (< x1461 1461501637330902918203684832716283019655932542976) (<= 0 x1461))))
(define-fun x600 ((x1461 Real)) Bool (=> (and (< x1461 2923003274661805836407369665432566039311865085952) (<= 1461501637330902918203684832716283019655932542976 x1461)) (= (- x1461 1461501637330902918203684832716283019655932542976) (x1259 1461501637330902918203684832716283019655932542975 x1461))))
(define-fun x1422 ((x1461 Real) (x312 Real)) Bool (and (<= 0 x312) (= (+ (* x312 1461501637330902918203684832716283019655932542976) (x1259 1461501637330902918203684832716283019655932542975 x1461)) x1461)))
(define-fun x252 ((x1461 Real) (x393 Real)) Bool (and (x1028 x1461) (x743 x1461) (x1422 x1461 x393) (x1473 x1461) (x600 x1461)))
(define-fun x1072 ((x1461 Real) (x312 Real)) Bool (= (x1259 x312 x1461) (x1259 x1461 x312)))
(define-fun x1299 ((x1461 Real) (x312 Real)) Bool (and (=> (<= 0 x312) (<= (x1259 x1461 x312) x312)) (=> (>= x1461 0) (<= (x1259 x1461 x312) x1461)) (<= 0 (x1259 x1461 x312))))
(define-fun x905 ((x1461 Real) (x312 Real)) Bool (and (x1299 x1461 x312) (x1072 x1461 x312)))
(define-fun x1492 ((x1461 Real) (x393 Real)) Bool (and (x252 x1461 x393) (x905 x1461 1461501637330902918203684832716283019655932542975)))
(define-fun x1193 ((x1461 Real)) Bool (= (x1259 26959946667150639794667015087019630673637144422540572481103610249215 (x1259 26959946667150639794667015087019630673637144422540572481103610249215 x1461)) (x1259 26959946667150639794667015087019630673637144422540572481103610249215 x1461)))
(define-fun x1474 ((x1461 Real)) Bool (=> (and (< x1461 26959946667150639794667015087019630673637144422540572481103610249216) (>= x1461 0)) (= x1461 (x1259 26959946667150639794667015087019630673637144422540572481103610249215 x1461))))
(define-fun x321 ((x1461 Real)) Bool (=> (= x1461 (x1259 26959946667150639794667015087019630673637144422540572481103610249215 x1461)) (and (< x1461 26959946667150639794667015087019630673637144422540572481103610249216) (<= 0 x1461))))
(define-fun x573 ((x1461 Real)) Bool (=> (and (<= 26959946667150639794667015087019630673637144422540572481103610249216 x1461) (> 53919893334301279589334030174039261347274288845081144962207220498432 x1461)) (= (- x1461 26959946667150639794667015087019630673637144422540572481103610249216) (x1259 26959946667150639794667015087019630673637144422540572481103610249215 x1461))))
(define-fun x980 ((x1461 Real) (x312 Real)) Bool (and (<= 0 x312) (= (+ (* 26959946667150639794667015087019630673637144422540572481103610249216 x312) (x1259 26959946667150639794667015087019630673637144422540572481103610249215 x1461)) x1461)))
(define-fun x956 ((x1461 Real) (x393 Real)) Bool (and (x1193 x1461) (x980 x1461 x393) (x321 x1461) (x573 x1461) (x1474 x1461)))
(define-fun x351 ((x1461 Real) (x393 Real)) Bool (and (x956 x1461 x393) (x905 x1461 26959946667150639794667015087019630673637144422540572481103610249215)))
(define-fun x1271 ((x1461 Real)) Bool (= (x1259 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1461) (x1259 115792089237316195423570985008687907853269984665640564039457584007913129639904 (x1259 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1461))))
(define-fun x259 ((x1461 Real)) Bool (=> (and (<= 0 x1461) (> 32 x1461)) (= 0 (x1259 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1461))))
(define-fun x1414 ((x1461 Real) (x312 Real) (x1024 Real) (x728 Real)) Bool (and (= (+ x312 (* x1024 32) (* x728 115792089237316195423570985008687907853269984665640564039457584007913129639936)) x1461) (<= 0 x728) (= (* x1024 32) (x1259 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1461)) (>= x1024 0) (> 1 x728) (< x1024 3618502788666131106986593281521497120414687020801267626233049500247285301248) (< x312 32) (<= 0 x312)))
(define-fun x761 ((x1461 Real) (x762 Real) (x998 Real) (x682 Real)) Bool (and (x1414 x1461 x762 x998 x682) (x259 x1461) (x1271 x1461)))
(define-fun x1153 ((x1461 Real) (x762 Real) (x998 Real) (x682 Real)) Bool (and (x761 x1461 x762 x998 x682) (x905 x1461 115792089237316195423570985008687907853269984665640564039457584007913129639904)))
(define-fun x1139 ((x1368 Real)) Real (x381 x1368))
(define-fun x429 ((x1368 Real)) Real (ite (= x1368 128) x46 (x403 x1368)))
(define-fun x1109 ((x1368 Real)) Real (ite (and (< x1368 (+ 160 x544)) (>= x1368 160)) (x381 (+ (- x1368 160) x974)) (x1149 x1368)))
(define-fun x1150 ((x1368 x1182)) Real (ite (= x97 x1368) x1075 (x586 x1368)))
(define-fun x1265 ((x1368 x1182)) Real (ite (= x1360 x1368) x1075 (x586 x1368)))
(define-fun x605 ((x1368 x1182)) Real (ite (= x530 x1368) x1075 (x1060 x1368)))
(define-fun x1419 ((x1368 x1182)) Real (ite (= x1368 x1313) x1075 (x1060 x1368)))
(define-fun x668 ((x1368 x1182)) Real (ite (and x698 x871) (x1060 x1368) (ite (and x556 x658) (x586 x1368) (ite (and x941 (not x1144)) (x605 x1368) (x1419 x1368)))))
(define-fun x661 ((x1368 x1182)) Real (ite (= x138 x1368) x1075 (x1245 x1368)))
(define-fun x1303 ((x1368 x1182)) Real (ite (= x1368 x1525) x1075 (x1245 x1368)))
(define-fun x1190 ((x1368 x1182)) Real (ite (= x1368 x593) x1075 (x1245 x1368)))
(define-fun x380 ((x1368 x1182)) Real (ite (= x1368 x1285) x1075 (x1433 x1368)))
(define-fun x827 ((x1368 x1182)) Real (ite (= x370 x1368) x1075 (x1433 x1368)))
(define-fun x413 ((x1368 x1182)) Real (ite (= x121 x1368) x1075 (x1433 x1368)))
(define-fun x927 ((x1368 x1182)) Real (ite (and x871 x698) (x1433 x1368) (ite (and x658 x556) (x1245 x1368) (ite (and (not x861) x750 (not x1342)) (x380 x1368) (ite (and (not x861) x750 x1342) (x827 x1368) (x413 x1368))))))
(define-fun x1036 ((x1368 x1182)) Real (ite (= x983 x1368) x294 (x1020 x1368)))
(define-fun x589 ((x1368 x1182)) Real (ite (= x813 x1368) x646 (x113 x1368)))
(define-fun x1447 ((x1368 x1182)) Real (ite (and x941 (not x1144)) (x589 x1368) (x113 x1368)))
(define-fun x507 ((x1368 x1182)) Real (ite (and x871 x698) (x113 x1368) (ite (and x556 x658) (x1020 x1368) (x1447 x1368))))
(define-fun x993 ((x1368 x1182)) Real (ite (= x1368 x128) x99 (x11 x1368)))
(define-fun x950 ((x1368 x1182)) Real (ite (= x779 x1368) x1391 (x865 x1368)))
(define-fun x788 ((x1368 x1182)) Real (ite (and (not x861) x750 (not x1342)) (x950 x1368) (x865 x1368)))
(define-fun x203 ((x1368 x1182)) Real (ite (and x871 x698) (x865 x1368) (ite (and x556 x658) (x11 x1368) (x788 x1368))))
(define-fun x1140 ((x1368 x1182)) Real (ite (= x1368 x838) x1258 (x1065 x1368)))
(define-fun x360 ((x1368 x1182)) Real (ite (= x84 x1368) x1067 (x1166 x1368)))
(define-fun x653 ((x1368 x1182)) Real (ite (and x871 x698) (x737 x1368) (ite (and x658 x556) (x1326 x1368) (ite (and (not x738) x941 (not x1544) x356) (x1166 x1368) (ite (and x941 (not x1544) (not x356)) (x737 x1368) (ite (and x941 x1544) (x737 x1368) (x360 x1368)))))))
(define-fun x1047 ((x1368 x1182)) Real (ite (= x238 x1368) x1030 (x424 x1368)))
(define-fun x1481 ((x1368 x1182)) Real (ite (and x1416 x1568) (x424 x1368) (x1047 x1368)))
(define-fun x366 ((x1368 x1182)) Real (ite (= x970 x1368) x119 (x45 x1368)))
(define-fun x260 ((x1368 x1182)) Real (ite (and x364 x515) (x45 x1368) (x366 x1368)))
(define-fun x1408 ((x1368 Real)) Real (ite (= x375 x1368) x412 (x557 x1368)))
(define-fun x1085 ((x1368 Real)) Real (ite (and x515 x579) (x557 x1368) (x1408 x1368)))
(define-fun x491 ((x1368 Real)) Real (ite (= x1368 x177) x61 (x1085 x1368)))
(define-fun x1320 ((x1368 Real)) Real (ite (= x872 x1368) x6 (x1224 x1368)))
(define-fun x85 ((x1368 Real)) Real (ite (and x515 x579) (x1224 x1368) (x1320 x1368)))
(define-fun x361 ((x1368 Real)) Real (ite (= x1368 x1316) x278 (x85 x1368)))
(define-fun x588 ((x1368 Real)) Real (ite (= x1368 x1393) x250 (x87 x1368)))
(define-fun x180 ((x1368 Real)) Real (ite (= x1368 x638) x1284 (x588 x1368)))
(define-fun x1032 ((x1368 Real)) Real (ite (= x1161 x1368) x271 (x725 x1368)))
(define-fun x785 ((x1368 Real)) Real (ite (= x1368 x1283) x839 (x1032 x1368)))
(define-fun x1253 ((x1368 Real)) Real (ite (= 192 x1368) x253 (x74 x1368)))
(define-fun x379 ((x1368 Real)) Real (ite (= 192 x1368) x920 (x1351 x1368)))
(define-fun x962 ((x1368 Real)) Real (ite (and x871 x698) (x652 x1368) (ite (and x556 x658) (x1064 x1368) (ite (and (not x1544) x941 x356 (not x738)) (x1351 x1368) (ite (and (not x1544) x941 (not x356)) (x652 x1368) (ite (and x1544 x941) (x652 x1368) (x379 x1368)))))))
(define-fun x1226 ((x1368 Real)) Real (ite (= x656 x1368) x997 (x310 x1368)))
(define-fun x50 ((x1368 Real)) Real (ite (= x421 x1368) x202 (x1226 x1368)))
(define-fun x723 ((x1368 Real)) Real (ite (= x621 x1368) x975 (x89 x1368)))
(define-fun x747 ((x1368 Real)) Real (ite (= x1368 x1291) x9 (x50 x1368)))
(define-fun x1077 ((x1368 Real)) Real (ite (= x686 x1368) x348 (x972 x1368)))
(define-fun x409 ((x1368 Real)) Real (ite (= x1368 x1192) 0 (x486 x1368)))
(define-fun x783 ((x1368 Real)) Real (ite (= x497 x1368) x1411 (x1015 x1368)))
(define-fun x105 ((x1368 Real)) Real (ite (= x1368 x497) x513 (x1015 x1368)))
(define-fun x386 ((x1368 Real)) Real (ite (= x66 x1368) x1074 (x1143 x1368)))
(define-fun x1255 ((x1368 Real)) Real (ite (= x38 x1368) 0 (x342 x1368)))
(define-fun x809 ((x1368 Real)) Real (ite (and (not x740) x21 x939) (x342 x1368) (x1255 x1368)))
(define-fun x316 ((x1368 x1182)) Real (ite (= (x460 274184521717934524641157099916833587206) x1368) x590 (x83 x1368)))
(define-fun x1073 ((x1368 x1182)) Real (ite (= x1368 (x460 x504)) x526 (x316 x1368)))
(define-fun x1523 ((x1368 x1182)) Real (ite (= x1368 (x460 x504)) x1462 (x1073 x1368)))
(define-fun x336 ((x1368 x1182)) Real (ite (= (x460 274184521717934524641157099916833587206) x1368) x592 (x1523 x1368)))
(define-fun x928 ((x1368 x1182)) Real (ite (= x1368 (x460 274184521717934524641157099916833587206)) x190 (x336 x1368)))
(define-fun x1159 ((x1368 x1182)) Real (ite (= (x460 x404) x1368) x1018 (x928 x1368)))
(define-fun x470 ((x1368 x1182)) Real (ite (= x580 x1368) x1423 (x29 x1368)))
(define-fun x778 ((x1368 x1182)) Real (ite (= x1368 x22) x807 (x470 x1368)))
(define-fun x251 ((x1368 x1182)) Real (ite (and x736 x1446) (x778 x1368) (x29 x1368)))
(define-fun x443 ((x1368 x1182)) Real (ite (= x208 x1368) x1164 (x251 x1368)))
(define-fun x1311 ((x1368 Real)) Real (ite (= x1368 0) 1 (x1235 x1368)))
(define-fun x1579 ((x1368 Real)) Real (ite (= x857 x1368) x1441 (x747 x1368)))
(define-fun x1157 ((x1368 Real)) Real (ite (= x1368 x831) x31 (x1579 x1368)))
(define-fun x244 ((x1368 Real)) Real (ite (= x1368 x1070) x451 (x723 x1368)))
(define-fun x633 ((x1368 Real)) Real (ite (= x1578 x1368) x391 (x1157 x1368)))
(define-fun x531 ((x1368 Real)) Real (ite (= x1368 0) 1 (x352 x1368)))
(define-fun x416 ((x1368 x1182)) Real (ite (= x1368 x851) x794 (x502 x1368)))
(define-fun x211 ((x1368 x1182)) Real (ite (= x1368 x239) x673 (x416 x1368)))
(define-fun x577 ((x1368 x1182)) Real (ite (and x1446 x736) (x502 x1368) (x211 x1368)))
(define-fun x1537 ((x1368 x1182)) Real (ite (= x344 x1368) x437 (x577 x1368)))
(define-fun x100 ((x1368 Real)) Real (ite (= x1368 0) 1 (x1235 x1368)))
(define-fun x151 ((x1368 Real)) Real (ite (= 0 x1368) 1 (x352 x1368)))
(define-fun x922 ((x1368 Real)) Real (ite (and x1266 x1052) (x1311 x1368) (x100 x1368)))
(define-fun x1044 ((x1368 x1182)) Real (ite (= x1368 (x460 x404)) x724 (x1159 x1368)))
(define-fun x1152 ((x1368 Real)) Real (ite (= x497 x1368) x1364 (x1240 x1368)))
(define-fun x1531 ((x1368 Real)) Real (ite (= x1368 x1260) x1512 (x135 x1368)))
(define-fun x904 ((x1368 Real)) Real (ite (and x1446 x736) (x531 x1368) (x151 x1368)))
(define-fun x1063 ((x1368 Real)) Real (ite (and (< x1368 (+ x1364 x132)) (<= x132 x1368)) (x904 (+ (- x1368 x132) 0)) (x1101 x1368)))
(define-fun x1354 ((x1368 Real)) Real (ite (and (<= x845 x1368) (< x1368 (+ x1512 x845))) (x922 (+ 0 (- x1368 x845))) (x887 x1368)))
(define-fun x286 ((x1368 Real)) Real (ite (and x731 x359) (x887 x1368) (x1354 x1368)))
(define-fun x1248 ((x1368 Real)) Real (ite (and x359 x731) (x135 x1368) (x1531 x1368)))
(define-fun x678 ((x1461 Real)) Bool (=> (and (not (= x1461 1000000000000000000)) (not (= 18446744073709551615 x1461)) (not (= x1461 649617121)) (not (= x1461 468353030)) (not (= 142201243 x1461)) (not (= x1461 1986467848)) (not (= 2293535753 x1461)) (not (= 2418364589 x1461)) (not (= 2868243304 x1461)) (not (= x1461 604800)) (not (= 826074471 x1461)) (not (= x1461 1461501637330902918203684832716283019655932542975)) (not (= 2211524764 x1461)) (not (= x1461 759532456)) (not (= x1461 2764855426)) (not (= x1461 2835717307)) (not (= 274184521717934524641157099916833587214 x1461)) (> x1461 10000) (not (= x1461 87118632)) (not (= 2960351575 x1461)) (not (= x1461 76450787359836037641860180984291677749980919077056822294353438043884394381312)) (not (= 26959946667150639794667015087019630673637144422540572481103610249215 x1461)) (not (= 911411945 x1461)) (not (= 2532887486 x1461)) (not (= x1461 115792089237316195423570985008687907853269984665640564039457584007913129639904)) (not (= 274184521717934524641157099916833587206 x1461)) (not (= x1461 2514000705)) (not (= 115792089237316195423570985008687907853269984665640564039457 x1461)) (not (= x1461 2939843472)) (not (= x1461 635128645)) (not (= x1461 69947311)) (not (= 274184521717934524641157099916833587218 x1461)) (not (= x1461 2798343961)) (not (= 1968616202 x1461)) (not (= 2743102681 x1461)) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1461)) (not (= 2512682246 x1461)) (not (= x1461 2690754053)) (not (= 1889567281 x1461)) (not (= 2061678023 x1461)) (not (= x1461 2258409472))) (not ((_ is x378) (x460 x1461)))))
(assert (axiom_frac_bound (* x1515 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (* x1515 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1030 x499 (uninterp_frac (* x1515 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1515 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1173 x524 (uninterp_frac (* x1515 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1515 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1306 x119 (uninterp_frac (* x1515 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1515 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1493 x181 (uninterp_frac (* x1515 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1515 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1515 1000000000000000000 (uninterp_frac (* x1515 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1515 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1573 x524 (uninterp_frac (* x1515 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1515 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x181 x1493 (uninterp_frac (* x1515 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1515 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x346 x508 (uninterp_frac (* x1515 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1515 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x46 32 (uninterp_frac (* x1515 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1515 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5 x932 (uninterp_frac (* x1515 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1515 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x524 x1173 (uninterp_frac (* x1515 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1515 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x524 x1573 (uninterp_frac (* x1515 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1515 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x787 x181 (uninterp_frac (* x1515 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1515 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x977 1000000000000000000 (uninterp_frac (* x1515 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (* x46 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (* x46 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1030 x499 (uninterp_frac (* x46 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x46 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1173 x524 (uninterp_frac (* x46 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x46 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1306 x119 (uninterp_frac (* x46 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x46 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1493 x181 (uninterp_frac (* x46 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x46 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1515 1000000000000000000 (uninterp_frac (* x46 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x46 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1573 x524 (uninterp_frac (* x46 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x46 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x181 x1493 (uninterp_frac (* x46 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x46 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x346 x508 (uninterp_frac (* x46 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x46 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x46 32 (uninterp_frac (* x46 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x46 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5 x932 (uninterp_frac (* x46 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x46 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x524 x1173 (uninterp_frac (* x46 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x46 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x524 x1573 (uninterp_frac (* x46 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x46 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x787 x181 (uninterp_frac (* x46 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x46 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x977 1000000000000000000 (uninterp_frac (* x46 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (* x977 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (* x977 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1030 x499 (uninterp_frac (* x977 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x977 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1173 x524 (uninterp_frac (* x977 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x977 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1306 x119 (uninterp_frac (* x977 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x977 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1493 x181 (uninterp_frac (* x977 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x977 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1515 1000000000000000000 (uninterp_frac (* x977 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x977 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1573 x524 (uninterp_frac (* x977 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x977 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x181 x1493 (uninterp_frac (* x977 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x977 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x346 x508 (uninterp_frac (* x977 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x977 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x46 32 (uninterp_frac (* x977 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x977 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5 x932 (uninterp_frac (* x977 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x977 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x524 x1173 (uninterp_frac (* x977 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x977 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x524 x1573 (uninterp_frac (* x977 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x977 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x787 x181 (uninterp_frac (* x977 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x977 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x977 1000000000000000000 (uninterp_frac (* x977 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound x1097 x793))
(assert (axiom_frac_zero x1097 x793 x1030 x499 (uninterp_frac x1097 x793)))
(assert (axiom_frac_zero x1097 x793 x1173 x524 (uninterp_frac x1097 x793)))
(assert (axiom_frac_zero x1097 x793 x1306 x119 (uninterp_frac x1097 x793)))
(assert (axiom_frac_zero x1097 x793 x1493 x181 (uninterp_frac x1097 x793)))
(assert (axiom_frac_zero x1097 x793 x1515 1000000000000000000 (uninterp_frac x1097 x793)))
(assert (axiom_frac_zero x1097 x793 x1573 x524 (uninterp_frac x1097 x793)))
(assert (axiom_frac_zero x1097 x793 x181 x1493 (uninterp_frac x1097 x793)))
(assert (axiom_frac_zero x1097 x793 x346 x508 (uninterp_frac x1097 x793)))
(assert (axiom_frac_zero x1097 x793 x46 32 (uninterp_frac x1097 x793)))
(assert (axiom_frac_zero x1097 x793 x5 x932 (uninterp_frac x1097 x793)))
(assert (axiom_frac_zero x1097 x793 x524 x1173 (uninterp_frac x1097 x793)))
(assert (axiom_frac_zero x1097 x793 x524 x1573 (uninterp_frac x1097 x793)))
(assert (axiom_frac_zero x1097 x793 x787 x181 (uninterp_frac x1097 x793)))
(assert (axiom_frac_zero x1097 x793 x977 1000000000000000000 (uninterp_frac x1097 x793)))
(assert (axiom_frac_bound x1451 1000000000000000000))
(assert (axiom_frac_zero x1451 1000000000000000000 x1030 x499 (uninterp_frac x1451 1000000000000000000)))
(assert (axiom_frac_zero x1451 1000000000000000000 x1173 x524 (uninterp_frac x1451 1000000000000000000)))
(assert (axiom_frac_zero x1451 1000000000000000000 x1306 x119 (uninterp_frac x1451 1000000000000000000)))
(assert (axiom_frac_zero x1451 1000000000000000000 x1493 x181 (uninterp_frac x1451 1000000000000000000)))
(assert (axiom_frac_zero x1451 1000000000000000000 x1515 1000000000000000000 (uninterp_frac x1451 1000000000000000000)))
(assert (axiom_frac_zero x1451 1000000000000000000 x1573 x524 (uninterp_frac x1451 1000000000000000000)))
(assert (axiom_frac_zero x1451 1000000000000000000 x181 x1493 (uninterp_frac x1451 1000000000000000000)))
(assert (axiom_frac_zero x1451 1000000000000000000 x346 x508 (uninterp_frac x1451 1000000000000000000)))
(assert (axiom_frac_zero x1451 1000000000000000000 x46 32 (uninterp_frac x1451 1000000000000000000)))
(assert (axiom_frac_zero x1451 1000000000000000000 x5 x932 (uninterp_frac x1451 1000000000000000000)))
(assert (axiom_frac_zero x1451 1000000000000000000 x524 x1173 (uninterp_frac x1451 1000000000000000000)))
(assert (axiom_frac_zero x1451 1000000000000000000 x524 x1573 (uninterp_frac x1451 1000000000000000000)))
(assert (axiom_frac_zero x1451 1000000000000000000 x787 x181 (uninterp_frac x1451 1000000000000000000)))
(assert (axiom_frac_zero x1451 1000000000000000000 x977 1000000000000000000 (uninterp_frac x1451 1000000000000000000)))
(assert (axiom_frac_bound x279 x1204))
(assert (axiom_frac_zero x279 x1204 x1030 x499 (uninterp_frac x279 x1204)))
(assert (axiom_frac_zero x279 x1204 x1173 x524 (uninterp_frac x279 x1204)))
(assert (axiom_frac_zero x279 x1204 x1306 x119 (uninterp_frac x279 x1204)))
(assert (axiom_frac_zero x279 x1204 x1493 x181 (uninterp_frac x279 x1204)))
(assert (axiom_frac_zero x279 x1204 x1515 1000000000000000000 (uninterp_frac x279 x1204)))
(assert (axiom_frac_zero x279 x1204 x1573 x524 (uninterp_frac x279 x1204)))
(assert (axiom_frac_zero x279 x1204 x181 x1493 (uninterp_frac x279 x1204)))
(assert (axiom_frac_zero x279 x1204 x346 x508 (uninterp_frac x279 x1204)))
(assert (axiom_frac_zero x279 x1204 x46 32 (uninterp_frac x279 x1204)))
(assert (axiom_frac_zero x279 x1204 x5 x932 (uninterp_frac x279 x1204)))
(assert (axiom_frac_zero x279 x1204 x524 x1173 (uninterp_frac x279 x1204)))
(assert (axiom_frac_zero x279 x1204 x524 x1573 (uninterp_frac x279 x1204)))
(assert (axiom_frac_zero x279 x1204 x787 x181 (uninterp_frac x279 x1204)))
(assert (axiom_frac_zero x279 x1204 x977 1000000000000000000 (uninterp_frac x279 x1204)))
(assert (axiom_frac_bound x324 1000000000000000000))
(assert (axiom_frac_zero x324 1000000000000000000 x1030 x499 (uninterp_frac x324 1000000000000000000)))
(assert (axiom_frac_zero x324 1000000000000000000 x1173 x524 (uninterp_frac x324 1000000000000000000)))
(assert (axiom_frac_zero x324 1000000000000000000 x1306 x119 (uninterp_frac x324 1000000000000000000)))
(assert (axiom_frac_zero x324 1000000000000000000 x1493 x181 (uninterp_frac x324 1000000000000000000)))
(assert (axiom_frac_zero x324 1000000000000000000 x1515 1000000000000000000 (uninterp_frac x324 1000000000000000000)))
(assert (axiom_frac_zero x324 1000000000000000000 x1573 x524 (uninterp_frac x324 1000000000000000000)))
(assert (axiom_frac_zero x324 1000000000000000000 x181 x1493 (uninterp_frac x324 1000000000000000000)))
(assert (axiom_frac_zero x324 1000000000000000000 x346 x508 (uninterp_frac x324 1000000000000000000)))
(assert (axiom_frac_zero x324 1000000000000000000 x46 32 (uninterp_frac x324 1000000000000000000)))
(assert (axiom_frac_zero x324 1000000000000000000 x5 x932 (uninterp_frac x324 1000000000000000000)))
(assert (axiom_frac_zero x324 1000000000000000000 x524 x1173 (uninterp_frac x324 1000000000000000000)))
(assert (axiom_frac_zero x324 1000000000000000000 x524 x1573 (uninterp_frac x324 1000000000000000000)))
(assert (axiom_frac_zero x324 1000000000000000000 x787 x181 (uninterp_frac x324 1000000000000000000)))
(assert (axiom_frac_zero x324 1000000000000000000 x977 1000000000000000000 (uninterp_frac x324 1000000000000000000)))
(assert (axiom_frac_bound x462 1000000000000000000))
(assert (axiom_frac_zero x462 1000000000000000000 x1030 x499 (uninterp_frac x462 1000000000000000000)))
(assert (axiom_frac_zero x462 1000000000000000000 x1173 x524 (uninterp_frac x462 1000000000000000000)))
(assert (axiom_frac_zero x462 1000000000000000000 x1306 x119 (uninterp_frac x462 1000000000000000000)))
(assert (axiom_frac_zero x462 1000000000000000000 x1493 x181 (uninterp_frac x462 1000000000000000000)))
(assert (axiom_frac_zero x462 1000000000000000000 x1515 1000000000000000000 (uninterp_frac x462 1000000000000000000)))
(assert (axiom_frac_zero x462 1000000000000000000 x1573 x524 (uninterp_frac x462 1000000000000000000)))
(assert (axiom_frac_zero x462 1000000000000000000 x181 x1493 (uninterp_frac x462 1000000000000000000)))
(assert (axiom_frac_zero x462 1000000000000000000 x346 x508 (uninterp_frac x462 1000000000000000000)))
(assert (axiom_frac_zero x462 1000000000000000000 x46 32 (uninterp_frac x462 1000000000000000000)))
(assert (axiom_frac_zero x462 1000000000000000000 x5 x932 (uninterp_frac x462 1000000000000000000)))
(assert (axiom_frac_zero x462 1000000000000000000 x524 x1173 (uninterp_frac x462 1000000000000000000)))
(assert (axiom_frac_zero x462 1000000000000000000 x524 x1573 (uninterp_frac x462 1000000000000000000)))
(assert (axiom_frac_zero x462 1000000000000000000 x787 x181 (uninterp_frac x462 1000000000000000000)))
(assert (axiom_frac_zero x462 1000000000000000000 x977 1000000000000000000 (uninterp_frac x462 1000000000000000000)))
(assert (axiom_frac_bound x576 1000000000000000000))
(assert (axiom_frac_zero x576 1000000000000000000 x1030 x499 (uninterp_frac x576 1000000000000000000)))
(assert (axiom_frac_zero x576 1000000000000000000 x1173 x524 (uninterp_frac x576 1000000000000000000)))
(assert (axiom_frac_zero x576 1000000000000000000 x1306 x119 (uninterp_frac x576 1000000000000000000)))
(assert (axiom_frac_zero x576 1000000000000000000 x1493 x181 (uninterp_frac x576 1000000000000000000)))
(assert (axiom_frac_zero x576 1000000000000000000 x1515 1000000000000000000 (uninterp_frac x576 1000000000000000000)))
(assert (axiom_frac_zero x576 1000000000000000000 x1573 x524 (uninterp_frac x576 1000000000000000000)))
(assert (axiom_frac_zero x576 1000000000000000000 x181 x1493 (uninterp_frac x576 1000000000000000000)))
(assert (axiom_frac_zero x576 1000000000000000000 x346 x508 (uninterp_frac x576 1000000000000000000)))
(assert (axiom_frac_zero x576 1000000000000000000 x46 32 (uninterp_frac x576 1000000000000000000)))
(assert (axiom_frac_zero x576 1000000000000000000 x5 x932 (uninterp_frac x576 1000000000000000000)))
(assert (axiom_frac_zero x576 1000000000000000000 x524 x1173 (uninterp_frac x576 1000000000000000000)))
(assert (axiom_frac_zero x576 1000000000000000000 x524 x1573 (uninterp_frac x576 1000000000000000000)))
(assert (axiom_frac_zero x576 1000000000000000000 x787 x181 (uninterp_frac x576 1000000000000000000)))
(assert (axiom_frac_zero x576 1000000000000000000 x977 1000000000000000000 (uninterp_frac x576 1000000000000000000)))
(assert (axiom_int_approximation x1))
(assert (axiom_int_approximation x1000))
(assert (axiom_int_approximation x1002))
(assert (axiom_int_approximation x1004))
(assert (axiom_int_approximation x1006))
(assert (axiom_int_approximation x1008))
(assert (axiom_int_approximation x101))
(assert (axiom_int_approximation x1011))
(assert (axiom_int_approximation x1012))
(assert (axiom_int_approximation x1013))
(assert (axiom_int_approximation x1016))
(assert (axiom_int_approximation x1017))
(assert (axiom_int_approximation x1018))
(assert (axiom_int_approximation x1019))
(assert (axiom_int_approximation x1025))
(assert (axiom_int_approximation x1027))
(assert (axiom_int_approximation x1029))
(assert (axiom_int_approximation x1030))
(assert (axiom_int_approximation x1031))
(assert (axiom_int_approximation x1033))
(assert (axiom_int_approximation x1035))
(assert (axiom_int_approximation x1037))
(assert (axiom_int_approximation x1039))
(assert (axiom_int_approximation x104))
(assert (axiom_int_approximation x1040))
(assert (axiom_int_approximation x1043))
(assert (axiom_int_approximation x1046))
(assert (axiom_int_approximation x1048))
(assert (axiom_int_approximation x1050))
(assert (axiom_int_approximation x1051))
(assert (axiom_int_approximation x1053))
(assert (axiom_int_approximation x1055))
(assert (axiom_int_approximation x1056))
(assert (axiom_int_approximation x1057))
(assert (axiom_int_approximation x1058))
(assert (axiom_int_approximation x1061))
(assert (axiom_int_approximation x1066))
(assert (axiom_int_approximation x1067))
(assert (axiom_int_approximation x1068))
(assert (axiom_int_approximation x1069))
(assert (axiom_int_approximation x1070))
(assert (axiom_int_approximation x1071))
(assert (axiom_int_approximation x1074))
(assert (axiom_int_approximation x1075))
(assert (axiom_int_approximation x1076))
(assert (axiom_int_approximation x1078))
(assert (axiom_int_approximation x108))
(assert (axiom_int_approximation x1080))
(assert (axiom_int_approximation x1083))
(assert (axiom_int_approximation x1084))
(assert (axiom_int_approximation x1086))
(assert (axiom_int_approximation x1087))
(assert (axiom_int_approximation x1093))
(assert (axiom_int_approximation x1096))
(assert (axiom_int_approximation x1097))
(assert (axiom_int_approximation x110))
(assert (axiom_int_approximation x1100))
(assert (axiom_int_approximation x1102))
(assert (axiom_int_approximation x1104))
(assert (axiom_int_approximation x1105))
(assert (axiom_int_approximation x1108))
(assert (axiom_int_approximation x1110))
(assert (axiom_int_approximation x1112))
(assert (axiom_int_approximation x1113))
(assert (axiom_int_approximation x1117))
(assert (axiom_int_approximation x112))
(assert (axiom_int_approximation x1121))
(assert (axiom_int_approximation x1122))
(assert (axiom_int_approximation x1126))
(assert (axiom_int_approximation x1127))
(assert (axiom_int_approximation x1128))
(assert (axiom_int_approximation x1131))
(assert (axiom_int_approximation x1132))
(assert (axiom_int_approximation x1135))
(assert (axiom_int_approximation x1138))
(assert (axiom_int_approximation x114))
(assert (axiom_int_approximation x1142))
(assert (axiom_int_approximation x1145))
(assert (axiom_int_approximation x1148))
(assert (axiom_int_approximation x1151))
(assert (axiom_int_approximation x1155))
(assert (axiom_int_approximation x1158))
(assert (axiom_int_approximation x1161))
(assert (axiom_int_approximation x1164))
(assert (axiom_int_approximation x1165))
(assert (axiom_int_approximation x1169))
(assert (axiom_int_approximation x117))
(assert (axiom_int_approximation x1170))
(assert (axiom_int_approximation x1173))
(assert (axiom_int_approximation x1174))
(assert (axiom_int_approximation x1175))
(assert (axiom_int_approximation x1177))
(assert (axiom_int_approximation x1178))
(assert (axiom_int_approximation x1179))
(assert (axiom_int_approximation x1180))
(assert (axiom_int_approximation x1183))
(assert (axiom_int_approximation x1185))
(assert (axiom_int_approximation x1186))
(assert (axiom_int_approximation x1188))
(assert (axiom_int_approximation x119))
(assert (axiom_int_approximation x1192))
(assert (axiom_int_approximation x1195))
(assert (axiom_int_approximation x1198))
(assert (axiom_int_approximation x1199))
(assert (axiom_int_approximation x12))
(assert (axiom_int_approximation x120))
(assert (axiom_int_approximation x1202))
(assert (axiom_int_approximation x1203))
(assert (axiom_int_approximation x1204))
(assert (axiom_int_approximation x1206))
(assert (axiom_int_approximation x1207))
(assert (axiom_int_approximation x1208))
(assert (axiom_int_approximation x1209))
(assert (axiom_int_approximation x1211))
(assert (axiom_int_approximation x1213))
(assert (axiom_int_approximation x1215))
(assert (axiom_int_approximation x1216))
(assert (axiom_int_approximation x1217))
(assert (axiom_int_approximation x1221))
(assert (axiom_int_approximation x1222))
(assert (axiom_int_approximation x1223))
(assert (axiom_int_approximation x1227))
(assert (axiom_int_approximation x1233))
(assert (axiom_int_approximation x1234))
(assert (axiom_int_approximation x1238))
(assert (axiom_int_approximation x124))
(assert (axiom_int_approximation x1243))
(assert (axiom_int_approximation x1246))
(assert (axiom_int_approximation x1247))
(assert (axiom_int_approximation x125))
(assert (axiom_int_approximation x1250))
(assert (axiom_int_approximation x1252))
(assert (axiom_int_approximation x1257))
(assert (axiom_int_approximation x1258))
(assert (axiom_int_approximation x1260))
(assert (axiom_int_approximation x1269))
(assert (axiom_int_approximation x1270))
(assert (axiom_int_approximation x1272))
(assert (axiom_int_approximation x1273))
(assert (axiom_int_approximation x1279))
(assert (axiom_int_approximation x1280))
(assert (axiom_int_approximation x1281))
(assert (axiom_int_approximation x1283))
(assert (axiom_int_approximation x1284))
(assert (axiom_int_approximation x1286))
(assert (axiom_int_approximation x1288))
(assert (axiom_int_approximation x1291))
(assert (axiom_int_approximation x1293))
(assert (axiom_int_approximation x1294))
(assert (axiom_int_approximation x1295))
(assert (axiom_int_approximation x1298))
(assert (axiom_int_approximation x13))
(assert (axiom_int_approximation x130))
(assert (axiom_int_approximation x1300))
(assert (axiom_int_approximation x1302))
(assert (axiom_int_approximation x1304))
(assert (axiom_int_approximation x1305))
(assert (axiom_int_approximation x1306))
(assert (axiom_int_approximation x1307))
(assert (axiom_int_approximation x1308))
(assert (axiom_int_approximation x1309))
(assert (axiom_int_approximation x1310))
(assert (axiom_int_approximation x1312))
(assert (axiom_int_approximation x1315))
(assert (axiom_int_approximation x1316))
(assert (axiom_int_approximation x1318))
(assert (axiom_int_approximation x1319))
(assert (axiom_int_approximation x132))
(assert (axiom_int_approximation x1322))
(assert (axiom_int_approximation x1323))
(assert (axiom_int_approximation x1325))
(assert (axiom_int_approximation x1329))
(assert (axiom_int_approximation x1330))
(assert (axiom_int_approximation x1331))
(assert (axiom_int_approximation x1332))
(assert (axiom_int_approximation x1336))
(assert (axiom_int_approximation x1338))
(assert (axiom_int_approximation x134))
(assert (axiom_int_approximation x1341))
(assert (axiom_int_approximation x1344))
(assert (axiom_int_approximation x1348))
(assert (axiom_int_approximation x1358))
(assert (axiom_int_approximation x1359))
(assert (axiom_int_approximation x1364))
(assert (axiom_int_approximation x1365))
(assert (axiom_int_approximation x137))
(assert (axiom_int_approximation x1370))
(assert (axiom_int_approximation x1374))
(assert (axiom_int_approximation x1375))
(assert (axiom_int_approximation x1376))
(assert (axiom_int_approximation x1377))
(assert (axiom_int_approximation x1378))
(assert (axiom_int_approximation x1381))
(assert (axiom_int_approximation x1384))
(assert (axiom_int_approximation x1385))
(assert (axiom_int_approximation x139))
(assert (axiom_int_approximation x1390))
(assert (axiom_int_approximation x1391))
(assert (axiom_int_approximation x1393))
(assert (axiom_int_approximation x1395))
(assert (axiom_int_approximation x1396))
(assert (axiom_int_approximation x14))
(assert (axiom_int_approximation x1401))
(assert (axiom_int_approximation x1402))
(assert (axiom_int_approximation x1403))
(assert (axiom_int_approximation x1405))
(assert (axiom_int_approximation x1406))
(assert (axiom_int_approximation x1411))
(assert (axiom_int_approximation x1412))
(assert (axiom_int_approximation x1413))
(assert (axiom_int_approximation x1415))
(assert (axiom_int_approximation x1417))
(assert (axiom_int_approximation x142))
(assert (axiom_int_approximation x1421))
(assert (axiom_int_approximation x1423))
(assert (axiom_int_approximation x1428))
(assert (axiom_int_approximation x143))
(assert (axiom_int_approximation x1431))
(assert (axiom_int_approximation x144))
(assert (axiom_int_approximation x1440))
(assert (axiom_int_approximation x1441))
(assert (axiom_int_approximation x1442))
(assert (axiom_int_approximation x1444))
(assert (axiom_int_approximation x1445))
(assert (axiom_int_approximation x1449))
(assert (axiom_int_approximation x1451))
(assert (axiom_int_approximation x1452))
(assert (axiom_int_approximation x1453))
(assert (axiom_int_approximation x1454))
(assert (axiom_int_approximation x1455))
(assert (axiom_int_approximation x1456))
(assert (axiom_int_approximation x1457))
(assert (axiom_int_approximation x1460))
(assert (axiom_int_approximation x1462))
(assert (axiom_int_approximation x1463))
(assert (axiom_int_approximation x1464))
(assert (axiom_int_approximation x1467))
(assert (axiom_int_approximation x1468))
(assert (axiom_int_approximation x147))
(assert (axiom_int_approximation x1475))
(assert (axiom_int_approximation x1476))
(assert (axiom_int_approximation x1478))
(assert (axiom_int_approximation x1479))
(assert (axiom_int_approximation x1480))
(assert (axiom_int_approximation x1482))
(assert (axiom_int_approximation x1485))
(assert (axiom_int_approximation x1486))
(assert (axiom_int_approximation x1487))
(assert (axiom_int_approximation x1488))
(assert (axiom_int_approximation x1489))
(assert (axiom_int_approximation x1491))
(assert (axiom_int_approximation x1493))
(assert (axiom_int_approximation x1497))
(assert (axiom_int_approximation x1499))
(assert (axiom_int_approximation x150))
(assert (axiom_int_approximation x1500))
(assert (axiom_int_approximation x1502))
(assert (axiom_int_approximation x1503))
(assert (axiom_int_approximation x1506))
(assert (axiom_int_approximation x1509))
(assert (axiom_int_approximation x1510))
(assert (axiom_int_approximation x1511))
(assert (axiom_int_approximation x1512))
(assert (axiom_int_approximation x1513))
(assert (axiom_int_approximation x1515))
(assert (axiom_int_approximation x1517))
(assert (axiom_int_approximation x1519))
(assert (axiom_int_approximation x152))
(assert (axiom_int_approximation x1520))
(assert (axiom_int_approximation x1521))
(assert (axiom_int_approximation x1522))
(assert (axiom_int_approximation x1524))
(assert (axiom_int_approximation x1526))
(assert (axiom_int_approximation x153))
(assert (axiom_int_approximation x1530))
(assert (axiom_int_approximation x1535))
(assert (axiom_int_approximation x1536))
(assert (axiom_int_approximation x1539))
(assert (axiom_int_approximation x154))
(assert (axiom_int_approximation x1540))
(assert (axiom_int_approximation x1541))
(assert (axiom_int_approximation x1542))
(assert (axiom_int_approximation x1543))
(assert (axiom_int_approximation x1546))
(assert (axiom_int_approximation x155))
(assert (axiom_int_approximation x1559))
(assert (axiom_int_approximation x1560))
(assert (axiom_int_approximation x1561))
(assert (axiom_int_approximation x1563))
(assert (axiom_int_approximation x1564))
(assert (axiom_int_approximation x1565))
(assert (axiom_int_approximation x157))
(assert (axiom_int_approximation x1572))
(assert (axiom_int_approximation x1573))
(assert (axiom_int_approximation x1574))
(assert (axiom_int_approximation x1578))
(assert (axiom_int_approximation x158))
(assert (axiom_int_approximation x16))
(assert (axiom_int_approximation x161))
(assert (axiom_int_approximation x164))
(assert (axiom_int_approximation x168))
(assert (axiom_int_approximation x17))
(assert (axiom_int_approximation x170))
(assert (axiom_int_approximation x172))
(assert (axiom_int_approximation x174))
(assert (axiom_int_approximation x176))
(assert (axiom_int_approximation x177))
(assert (axiom_int_approximation x178))
(assert (axiom_int_approximation x179))
(assert (axiom_int_approximation x181))
(assert (axiom_int_approximation x182))
(assert (axiom_int_approximation x184))
(assert (axiom_int_approximation x186))
(assert (axiom_int_approximation x187))
(assert (axiom_int_approximation x190))
(assert (axiom_int_approximation x194))
(assert (axiom_int_approximation x198))
(assert (axiom_int_approximation x199))
(assert (axiom_int_approximation x200))
(assert (axiom_int_approximation x201))
(assert (axiom_int_approximation x202))
(assert (axiom_int_approximation x204))
(assert (axiom_int_approximation x205))
(assert (axiom_int_approximation x206))
(assert (axiom_int_approximation x207))
(assert (axiom_int_approximation x213))
(assert (axiom_int_approximation x214))
(assert (axiom_int_approximation x223))
(assert (axiom_int_approximation x224))
(assert (axiom_int_approximation x225))
(assert (axiom_int_approximation x227))
(assert (axiom_int_approximation x228))
(assert (axiom_int_approximation x229))
(assert (axiom_int_approximation x23))
(assert (axiom_int_approximation x231))
(assert (axiom_int_approximation x234))
(assert (axiom_int_approximation x235))
(assert (axiom_int_approximation x237))
(assert (axiom_int_approximation x243))
(assert (axiom_int_approximation x245))
(assert (axiom_int_approximation x246))
(assert (axiom_int_approximation x248))
(assert (axiom_int_approximation x25))
(assert (axiom_int_approximation x250))
(assert (axiom_int_approximation x253))
(assert (axiom_int_approximation x258))
(assert (axiom_int_approximation x261))
(assert (axiom_int_approximation x263))
(assert (axiom_int_approximation x265))
(assert (axiom_int_approximation x266))
(assert (axiom_int_approximation x269))
(assert (axiom_int_approximation x270))
(assert (axiom_int_approximation x271))
(assert (axiom_int_approximation x272))
(assert (axiom_int_approximation x274))
(assert (axiom_int_approximation x275))
(assert (axiom_int_approximation x276))
(assert (axiom_int_approximation x278))
(assert (axiom_int_approximation x279))
(assert (axiom_int_approximation x28))
(assert (axiom_int_approximation x280))
(assert (axiom_int_approximation x284))
(assert (axiom_int_approximation x287))
(assert (axiom_int_approximation x288))
(assert (axiom_int_approximation x289))
(assert (axiom_int_approximation x290))
(assert (axiom_int_approximation x291))
(assert (axiom_int_approximation x292))
(assert (axiom_int_approximation x294))
(assert (axiom_int_approximation x295))
(assert (axiom_int_approximation x298))
(assert (axiom_int_approximation x302))
(assert (axiom_int_approximation x303))
(assert (axiom_int_approximation x304))
(assert (axiom_int_approximation x309))
(assert (axiom_int_approximation x31))
(assert (axiom_int_approximation x318))
(assert (axiom_int_approximation x319))
(assert (axiom_int_approximation x324))
(assert (axiom_int_approximation x326))
(assert (axiom_int_approximation x327))
(assert (axiom_int_approximation x332))
(assert (axiom_int_approximation x334))
(assert (axiom_int_approximation x335))
(assert (axiom_int_approximation x337))
(assert (axiom_int_approximation x338))
(assert (axiom_int_approximation x34))
(assert (axiom_int_approximation x343))
(assert (axiom_int_approximation x346))
(assert (axiom_int_approximation x347))
(assert (axiom_int_approximation x348))
(assert (axiom_int_approximation x354))
(assert (axiom_int_approximation x355))
(assert (axiom_int_approximation x357))
(assert (axiom_int_approximation x358))
(assert (axiom_int_approximation x36))
(assert (axiom_int_approximation x362))
(assert (axiom_int_approximation x363))
(assert (axiom_int_approximation x367))
(assert (axiom_int_approximation x368))
(assert (axiom_int_approximation x369))
(assert (axiom_int_approximation x37))
(assert (axiom_int_approximation x371))
(assert (axiom_int_approximation x372))
(assert (axiom_int_approximation x373))
(assert (axiom_int_approximation x375))
(assert (axiom_int_approximation x376))
(assert (axiom_int_approximation x377))
(assert (axiom_int_approximation x38))
(assert (axiom_int_approximation x384))
(assert (axiom_int_approximation x385))
(assert (axiom_int_approximation x391))
(assert (axiom_int_approximation x399))
(assert (axiom_int_approximation x4))
(assert (axiom_int_approximation x404))
(assert (axiom_int_approximation x405))
(assert (axiom_int_approximation x408))
(assert (axiom_int_approximation x41))
(assert (axiom_int_approximation x410))
(assert (axiom_int_approximation x411))
(assert (axiom_int_approximation x412))
(assert (axiom_int_approximation x414))
(assert (axiom_int_approximation x415))
(assert (axiom_int_approximation x417))
(assert (axiom_int_approximation x421))
(assert (axiom_int_approximation x422))
(assert (axiom_int_approximation x423))
(assert (axiom_int_approximation x425))
(assert (axiom_int_approximation x427))
(assert (axiom_int_approximation x428))
(assert (axiom_int_approximation x43))
(assert (axiom_int_approximation x431))
(assert (axiom_int_approximation x432))
(assert (axiom_int_approximation x433))
(assert (axiom_int_approximation x434))
(assert (axiom_int_approximation x435))
(assert (axiom_int_approximation x437))
(assert (axiom_int_approximation x440))
(assert (axiom_int_approximation x441))
(assert (axiom_int_approximation x446))
(assert (axiom_int_approximation x447))
(assert (axiom_int_approximation x448))
(assert (axiom_int_approximation x451))
(assert (axiom_int_approximation x457))
(assert (axiom_int_approximation x46))
(assert (axiom_int_approximation x462))
(assert (axiom_int_approximation x463))
(assert (axiom_int_approximation x468))
(assert (axiom_int_approximation x469))
(assert (axiom_int_approximation x471))
(assert (axiom_int_approximation x473))
(assert (axiom_int_approximation x476))
(assert (axiom_int_approximation x477))
(assert (axiom_int_approximation x48))
(assert (axiom_int_approximation x480))
(assert (axiom_int_approximation x481))
(assert (axiom_int_approximation x483))
(assert (axiom_int_approximation x484))
(assert (axiom_int_approximation x493))
(assert (axiom_int_approximation x494))
(assert (axiom_int_approximation x496))
(assert (axiom_int_approximation x497))
(assert (axiom_int_approximation x499))
(assert (axiom_int_approximation x5))
(assert (axiom_int_approximation x501))
(assert (axiom_int_approximation x504))
(assert (axiom_int_approximation x506))
(assert (axiom_int_approximation x508))
(assert (axiom_int_approximation x510))
(assert (axiom_int_approximation x511))
(assert (axiom_int_approximation x513))
(assert (axiom_int_approximation x517))
(assert (axiom_int_approximation x521))
(assert (axiom_int_approximation x524))
(assert (axiom_int_approximation x525))
(assert (axiom_int_approximation x526))
(assert (axiom_int_approximation x527))
(assert (axiom_int_approximation x528))
(assert (axiom_int_approximation x529))
(assert (axiom_int_approximation x53))
(assert (axiom_int_approximation x536))
(assert (axiom_int_approximation x539))
(assert (axiom_int_approximation x54))
(assert (axiom_int_approximation x541))
(assert (axiom_int_approximation x544))
(assert (axiom_int_approximation x545))
(assert (axiom_int_approximation x547))
(assert (axiom_int_approximation x548))
(assert (axiom_int_approximation x549))
(assert (axiom_int_approximation x55))
(assert (axiom_int_approximation x551))
(assert (axiom_int_approximation x558))
(assert (axiom_int_approximation x561))
(assert (axiom_int_approximation x565))
(assert (axiom_int_approximation x566))
(assert (axiom_int_approximation x569))
(assert (axiom_int_approximation x57))
(assert (axiom_int_approximation x572))
(assert (axiom_int_approximation x574))
(assert (axiom_int_approximation x575))
(assert (axiom_int_approximation x576))
(assert (axiom_int_approximation x578))
(assert (axiom_int_approximation x581))
(assert (axiom_int_approximation x582))
(assert (axiom_int_approximation x583))
(assert (axiom_int_approximation x585))
(assert (axiom_int_approximation x59))
(assert (axiom_int_approximation x590))
(assert (axiom_int_approximation x591))
(assert (axiom_int_approximation x592))
(assert (axiom_int_approximation x594))
(assert (axiom_int_approximation x596))
(assert (axiom_int_approximation x598))
(assert (axiom_int_approximation x599))
(assert (axiom_int_approximation x6))
(assert (axiom_int_approximation x60))
(assert (axiom_int_approximation x601))
(assert (axiom_int_approximation x602))
(assert (axiom_int_approximation x604))
(assert (axiom_int_approximation x606))
(assert (axiom_int_approximation x608))
(assert (axiom_int_approximation x61))
(assert (axiom_int_approximation x611))
(assert (axiom_int_approximation x612))
(assert (axiom_int_approximation x613))
(assert (axiom_int_approximation x615))
(assert (axiom_int_approximation x616))
(assert (axiom_int_approximation x618))
(assert (axiom_int_approximation x620))
(assert (axiom_int_approximation x621))
(assert (axiom_int_approximation x623))
(assert (axiom_int_approximation x626))
(assert (axiom_int_approximation x629))
(assert (axiom_int_approximation x630))
(assert (axiom_int_approximation x638))
(assert (axiom_int_approximation x639))
(assert (axiom_int_approximation x640))
(assert (axiom_int_approximation x646))
(assert (axiom_int_approximation x650))
(assert (axiom_int_approximation x651))
(assert (axiom_int_approximation x656))
(assert (axiom_int_approximation x657))
(assert (axiom_int_approximation x66))
(assert (axiom_int_approximation x660))
(assert (axiom_int_approximation x662))
(assert (axiom_int_approximation x666))
(assert (axiom_int_approximation x670))
(assert (axiom_int_approximation x672))
(assert (axiom_int_approximation x673))
(assert (axiom_int_approximation x674))
(assert (axiom_int_approximation x675))
(assert (axiom_int_approximation x676))
(assert (axiom_int_approximation x677))
(assert (axiom_int_approximation x679))
(assert (axiom_int_approximation x68))
(assert (axiom_int_approximation x680))
(assert (axiom_int_approximation x685))
(assert (axiom_int_approximation x686))
(assert (axiom_int_approximation x688))
(assert (axiom_int_approximation x692))
(assert (axiom_int_approximation x694))
(assert (axiom_int_approximation x696))
(assert (axiom_int_approximation x70))
(assert (axiom_int_approximation x701))
(assert (axiom_int_approximation x704))
(assert (axiom_int_approximation x706))
(assert (axiom_int_approximation x707))
(assert (axiom_int_approximation x708))
(assert (axiom_int_approximation x709))
(assert (axiom_int_approximation x71))
(assert (axiom_int_approximation x710))
(assert (axiom_int_approximation x712))
(assert (axiom_int_approximation x716))
(assert (axiom_int_approximation x718))
(assert (axiom_int_approximation x724))
(assert (axiom_int_approximation x726))
(assert (axiom_int_approximation x73))
(assert (axiom_int_approximation x730))
(assert (axiom_int_approximation x734))
(assert (axiom_int_approximation x735))
(assert (axiom_int_approximation x739))
(assert (axiom_int_approximation x741))
(assert (axiom_int_approximation x742))
(assert (axiom_int_approximation x744))
(assert (axiom_int_approximation x75))
(assert (axiom_int_approximation x751))
(assert (axiom_int_approximation x753))
(assert (axiom_int_approximation x754))
(assert (axiom_int_approximation x755))
(assert (axiom_int_approximation x757))
(assert (axiom_int_approximation x758))
(assert (axiom_int_approximation x759))
(assert (axiom_int_approximation x767))
(assert (axiom_int_approximation x768))
(assert (axiom_int_approximation x771))
(assert (axiom_int_approximation x773))
(assert (axiom_int_approximation x774))
(assert (axiom_int_approximation x776))
(assert (axiom_int_approximation x78))
(assert (axiom_int_approximation x786))
(assert (axiom_int_approximation x787))
(assert (axiom_int_approximation x790))
(assert (axiom_int_approximation x793))
(assert (axiom_int_approximation x794))
(assert (axiom_int_approximation x796))
(assert (axiom_int_approximation x797))
(assert (axiom_int_approximation x798))
(assert (axiom_int_approximation x799))
(assert (axiom_int_approximation x8))
(assert (axiom_int_approximation x800))
(assert (axiom_int_approximation x802))
(assert (axiom_int_approximation x804))
(assert (axiom_int_approximation x806))
(assert (axiom_int_approximation x807))
(assert (axiom_int_approximation x810))
(assert (axiom_int_approximation x811))
(assert (axiom_int_approximation x814))
(assert (axiom_int_approximation x815))
(assert (axiom_int_approximation x817))
(assert (axiom_int_approximation x818))
(assert (axiom_int_approximation x819))
(assert (axiom_int_approximation x820))
(assert (axiom_int_approximation x825))
(assert (axiom_int_approximation x828))
(assert (axiom_int_approximation x831))
(assert (axiom_int_approximation x832))
(assert (axiom_int_approximation x833))
(assert (axiom_int_approximation x835))
(assert (axiom_int_approximation x837))
(assert (axiom_int_approximation x839))
(assert (axiom_int_approximation x840))
(assert (axiom_int_approximation x843))
(assert (axiom_int_approximation x844))
(assert (axiom_int_approximation x845))
(assert (axiom_int_approximation x846))
(assert (axiom_int_approximation x848))
(assert (axiom_int_approximation x849))
(assert (axiom_int_approximation x853))
(assert (axiom_int_approximation x854))
(assert (axiom_int_approximation x855))
(assert (axiom_int_approximation x856))
(assert (axiom_int_approximation x857))
(assert (axiom_int_approximation x858))
(assert (axiom_int_approximation x863))
(assert (axiom_int_approximation x864))
(assert (axiom_int_approximation x868))
(assert (axiom_int_approximation x869))
(assert (axiom_int_approximation x872))
(assert (axiom_int_approximation x873))
(assert (axiom_int_approximation x875))
(assert (axiom_int_approximation x876))
(assert (axiom_int_approximation x877))
(assert (axiom_int_approximation x879))
(assert (axiom_int_approximation x88))
(assert (axiom_int_approximation x880))
(assert (axiom_int_approximation x881))
(assert (axiom_int_approximation x885))
(assert (axiom_int_approximation x888))
(assert (axiom_int_approximation x889))
(assert (axiom_int_approximation x896))
(assert (axiom_int_approximation x897))
(assert (axiom_int_approximation x9))
(assert (axiom_int_approximation x901))
(assert (axiom_int_approximation x906))
(assert (axiom_int_approximation x91))
(assert (axiom_int_approximation x910))
(assert (axiom_int_approximation x917))
(assert (axiom_int_approximation x918))
(assert (axiom_int_approximation x92))
(assert (axiom_int_approximation x920))
(assert (axiom_int_approximation x921))
(assert (axiom_int_approximation x923))
(assert (axiom_int_approximation x930))
(assert (axiom_int_approximation x932))
(assert (axiom_int_approximation x936))
(assert (axiom_int_approximation x937))
(assert (axiom_int_approximation x94))
(assert (axiom_int_approximation x943))
(assert (axiom_int_approximation x944))
(assert (axiom_int_approximation x948))
(assert (axiom_int_approximation x95))
(assert (axiom_int_approximation x952))
(assert (axiom_int_approximation x955))
(assert (axiom_int_approximation x957))
(assert (axiom_int_approximation x959))
(assert (axiom_int_approximation x960))
(assert (axiom_int_approximation x961))
(assert (axiom_int_approximation x966))
(assert (axiom_int_approximation x967))
(assert (axiom_int_approximation x971))
(assert (axiom_int_approximation x974))
(assert (axiom_int_approximation x975))
(assert (axiom_int_approximation x977))
(assert (axiom_int_approximation x978))
(assert (axiom_int_approximation x981))
(assert (axiom_int_approximation x982))
(assert (axiom_int_approximation x987))
(assert (axiom_int_approximation x988))
(assert (axiom_int_approximation x989))
(assert (axiom_int_approximation x99))
(assert (axiom_int_approximation x992))
(assert (axiom_int_approximation x994))
(assert (axiom_int_approximation x996))
(assert (axiom_int_approximation x997))
(assert (axiom_int_approximation x999))
(assert (x1212 x660))
(assert (x1212 x1086))
(assert (x1212 x569))
(assert (=> (> (+ 10000 1) x34) (= (x378 x34) (x460 x34))))
(assert (x1212 x797))
(assert (= (x746 (x460 x1330)) x1330))
(assert (x678 x730))
(assert (= (x460 26959946667150639794667015087019630673637144422540572481103610249215) (x378 26959946667150639794667015087019630673637144422540572481103610249215)))
(assert (= (+ (x746 x727) 1) (x746 (x1095 x727 1))))
(assert (x1212 x843))
(assert (= (x460 76450787359836037641860180984291677749980919077056822294353438043884394381312) (x378 76450787359836037641860180984291677749980919077056822294353438043884394381312)))
(assert (x1212 x481))
(assert (x1212 x279))
(assert (x678 x623))
(assert (= (x746 (x460 x660)) x660))
(assert (x1212 x1559))
(assert (x1212 x1485))
(assert (x1212 x735))
(assert (x678 x1002))
(assert (x1492 x198 x1051))
(assert (x1212 x1460))
(assert (x1212 x1502))
(assert (= x1375 (x746 (x460 x1375))))
(assert (= (x746 (x460 x291)) x291))
(assert (x1212 x742))
(assert (x1212 x261))
(assert (x1212 x229))
(assert (x1212 x1482))
(assert (x1212 x270))
(assert (= x672 (x746 (x460 x672))))
(assert (x1212 x265))
(assert (x1212 x484))
(assert (x678 274184521717934524641157099916833587206))
(assert (x1212 x1243))
(assert (= (=> (and (or (and x1432 (= x508 0) (= x1522 0)) (and (= (x1259 1461501637330902918203684832716283019655932542975 x1510) x468) (= x1184 (x1410 (x460 x468) x691 0)) (= x1559 (x1259 1461501637330902918203684832716283019655932542975 x198)) (= x508 x143) (= x143 (x260 x1184)) (= 1 x1522) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x143) (= x691 (x1410 (x460 x1559) x821 0)) (<= 0 x143) (= x821 (x1410 (x460 x1186) (x378 9) 0)) (not x1432))) (= (= x1186 0) x1432)) x647) x1340))
(assert (= 2061678023 (x746 (x378 2061678023))))
(assert (=> (> (+ 10000 1) x152) (= (x378 x152) (x460 x152))))
(assert (=> (< (- x120 1) 10000) (= (x378 x120) (x460 x120))))
(assert (x1212 x504))
(assert (x1212 x1016))
(assert (= (ite (= x1187 x145) x194 (x737 x1187)) (x1166 x1187)))
(assert (x1212 x473))
(assert (= (=> (and (= (x1410 (x460 x1145) (x378 3) 0) x456) (= (x1410 (x460 x1542) x210 0) x219) (<= x1542 1461501637330902918203684832716283019655932542975) (<= x363 115792089237316195423570985008687907853269984665640564039457584007913129639935) (> 2960351575 x1071) (<= 0 x363) (= x384 x363) (not (= x1071 2690754053)) (>= 1461501637330902918203684832716283019655932542975 x961) (not (> 2690754053 x1071)) (= x210 (x1410 (x460 x961) x456 0)) (not (> 2293535753 x1071)) (= x363 (x203 x219)) (= x1071 2743102681) (< 0 x1560) (= x1560 (x454 (x460 274184521717934524641157099916833587206)))) (=> (and (= x144 x384) (= x231 x104) (= x376 x1390) (= x1288 x662) (= x868 x408)) x1427)) x353))
(assert (x1212 x343))
(assert (x1212 x548))
(assert (= x1475 (x746 (x460 x1475))))
(assert (= x73 (x746 (x460 x73))))
(assert (x1212 x468))
(assert (x1212 x95))
(assert (x1212 x1155))
(assert (x1212 x1161))
(assert (x1212 x967))
(assert (x1212 x57))
(assert (x1212 x952))
(assert (x1212 x1012))
(assert (= (x1060 x461) (ite (and x183 x1568) (x1150 x461) (x1265 x461))))
(assert (x1212 x182))
(assert (x1212 x1208))
(assert (x1212 x372))
(assert (= (x1433 x552) (ite (and x515 x579) (x661 x552) (ite (and x392 x515 (not x579)) (x1303 x552) (x1190 x552)))))
(assert (x1212 x284))
(assert (x678 x1246))
(assert (= (=> (= (< 0 x1491) x1146) (and (=> (not x1146) x218) (=> x1146 x867))) x1042))
(assert (= (x746 (x460 x1180)) x1180))
(assert (x1212 x620))
(assert (= (and x20 (not x166)) x79))
(assert (x678 x124))
(assert (= (=> (and (<= x245 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x1453 (x454 (x460 274184521717934524641157099916833587206))) (< 0 x1453) (<= x558 1461501637330902918203684832716283019655932542975) (not (= 2764855426 x679)) (not (= 2690754053 x679)) (> 2960351575 x679) (not (< x679 2293535753)) (= 2798343961 x679) (= (x507 x719) x245) (= x245 x1158) (= (x1410 (x460 x1330) (x378 5) 0) x933) (not (= 2743102681 x679)) (not (> 2690754053 x679)) (= x719 (x1410 (x460 x558) x933 0)) (>= x245 0)) (=> (and (= x987 x376) (= x1158 x569) (= x1288 x1502) (= x104 x1004) (= x868 x528)) x643)) x1477))
(assert (=> (< (- x1542 1) 10000) (= (x460 x1542) (x378 x1542))))
(assert (=> (> (+ 10000 1) x1004) (= (x378 x1004) (x460 x1004))))
(assert (x1212 x1213))
(assert (x1212 x335))
(assert (x678 x1330))
(assert (x1212 x675))
(assert (= (x746 (x460 x987)) x987))
(assert (x1212 x751))
(assert (x1212 x375))
(assert (x1212 x1087))
(assert (= 1000000000000000000 (x746 (x378 1000000000000000000))))
(assert (x1212 x1096))
(assert (= (x746 (x460 x1377)) x1377))
(assert (= x209 (and x133 (not x163))))
(assert (=> (> (+ 10000 1) x154) (= (x378 x154) (x460 x154))))
(assert (x1212 x513))
(assert (x1212 x435))
(assert (x678 x187))
(assert (x1212 x561))
(assert (x1212 x811))
(assert (= x802 (x746 (x460 x802))))
(assert (= x134 (x746 (x460 x134))))
(assert (x1212 x611))
(assert (=> (> (+ 10000 1) x14) (= (x460 x14) (x378 x14))))
(assert (x1212 x422))
(assert (x1212 x1247))
(assert (= (x1101 x978) 0))
(assert (= (=> (and (< x620 2960351575) (< x620 2690754053) (>= 1461501637330902918203684832716283019655932542975 x623) (not (= 2418364589 x620)) (>= 1461501637330902918203684832716283019655932542975 x417) (= x620 2532887486) (<= x657 1461501637330902918203684832716283019655932542975) (not (= 2512682246 x620)) (= x402 (x1410 (x460 x417) x570 0)) (= (x1410 (x460 x623) x453 0) x587) (<= 0 x1520) (= x1520 x199) (not (> 2293535753 x620)) (= (x1410 (x460 x657) x402 0) x453) (= x570 (x1410 (x460 x591) (x378 4) 0)) (= x1520 (x1326 x587)) (= x302 (x454 (x460 274184521717934524641157099916833587206))) (> x302 0) (not (= x620 2293535753)) (<= x1520 115792089237316195423570985008687907853269984665640564039457584007913129639935)) (=> (and (not (< 18446744073709551615 x46)) (<= x1510 1461501637330902918203684832716283019655932542975) (<= 0 x435) (= (and x1386 x890) x1349) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x125) (= x114 x994) (= 0 x369) (<= 0 x843) (= (x546 (+ x799 x1208)) x918) (= (x546 (+ 32 x477)) x447) (not (< x1135 x1491)) (= (x546 (+ 160 x477)) x375) x1349 (= x1053 x199) (= x158 x198) (<= x198 1461501637330902918203684832716283019655932542975) (= x1499 x1565) (= x477 (uninterp_mod (* x46 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (not (= x1132 2868243304)) (not (> 2690754053 x1132)) (> x372 0) (= x94 x1510) (= x304 x369) (= (x546 (+ x1499 4)) x54) (not (> x1565 18446744073709551615)) (<= 0 x125) (not (> 4 x974)) (not (> 2293535753 x1132)) (not (= 2764855426 x1132)) (= x46 (x381 x54)) (> x974 163) (not (= 2743102681 x1132)) (= x372 (x454 (x460 274184521717934524641157099916833587206))) (= (x311 (- x974 4)) x1076) (= x994 x469) (= x890 (>= x237 x1053)) (= x799 (x546 (+ 36 x1499))) (= x1491 x130) (or (and (not x1569) (= (uninterp_mod (* x46 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x544)) x1569) (= 2939843472 x1132) (> 2960351575 x1132) (= x1208 (uninterp_mod (* x46 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (or (and (> x974 x1574) (= (<= x974 57896044618658097711785492504343953926634992332820282019728792003956564819967) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1574))) (and (<= x974 57896044618658097711785492504343953926634992332820282019728792003956564819967) (> x1574 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (= x616 x843) (= true (<= x974 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (>= 1461501637330902918203684832716283019655932542975 x114) (not (> x918 x974)) (<= x843 1461501637330902918203684832716283019655932542975) (= x786 x1510) (<= x435 1461501637330902918203684832716283019655932542975) (= x473 x1135) (= x198 x1468) (= x1569 (= 0 x46)) (= x1075 x1096) (< x1135 x125) (not (= 2690754053 x1132)) (not (= x1132 2798343961)) (= x1135 x1279) (= x1491 x863) (= x1574 (x546 (+ x1499 35))) (not (or (and (= (<= x1076 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (< x1076 160)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1076))) (<= 0 x114)) x160)) x1292))
(assert (= x204 (x746 (x460 x204))))
(assert (= (x746 (x460 x12)) x12))
(assert (x678 x506))
(assert (x678 x117))
(assert (x1212 x421))
(assert (= x527 (x746 (x460 x527))))
(assert (x1212 x1117))
(assert (= (x746 (x460 x1390)) x1390))
(assert (x1212 x547))
(assert (x1212 x1440))
(assert (x1212 x446))
(assert (= x939 x617))
(assert (= (x746 (x378 468353030)) 468353030))
(assert (x678 x37))
(assert (x1212 x601))
(assert (x678 x408))
(assert (x678 x511))
(assert (=> (< (- x291 1) 10000) (= (x460 x291) (x378 x291))))
(assert (= x67 (=> (and (= x436 (x1410 (x460 x441) x711 0)) (>= x335 0) (= (x1410 (x460 x583) x436 0) x543) (= (x454 (x460 274184521717934524641157099916833587206)) x1217) (not (= x967 69947311)) (= x711 (x1410 (x460 x1016) (x378 9) 0)) (< 0 x1217) (<= x441 1461501637330902918203684832716283019655932542975) (= x1061 x335) (not (= x967 87118632)) (<= x335 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= x583 1461501637330902918203684832716283019655932542975) (= x335 (x45 x543)) (< x967 468353030) (> 911411945 x967) (= 142201243 x967) (> 2293535753 x967)) (=> (and (= x1061 x1295) (= x354 x104) (= x822 (>= x1117 x1295)) (= (and x1014 x822) x717) (= x152 x1288) (= x510 x376)) x900))))
(assert (=> (< (- x334 1) 10000) (= (x460 x334) (x378 x334))))
(assert (x1212 x1493))
(assert (=> (> (+ 10000 1) x688) (= (x460 x688) (x378 x688))))
(assert (=> (< (- x804 1) 10000) (= (x378 x804) (x460 x804))))
(assert (x1212 x726))
(assert (= x558 (x746 (x460 x558))))
(assert (x1212 x877))
(assert (x1212 x276))
(assert (x1212 x889))
(assert (x678 x172))
(assert (= (x746 (x378 274184521717934524641157099916833587206)) 274184521717934524641157099916833587206))
(assert (= (x1065 x903) (ite (= x903 x911) x494 (x1326 x903))))
(assert (x1212 x1381))
(assert (x1212 x799))
(assert (= x1274 (=> (= x1104 x706) x808)))
(assert (=> (> (+ 10000 1) x1246) (= (x460 x1246) (x378 x1246))))
(assert (= 76450787359836037641860180984291677749980919077056822294353438043884394381312 (x746 (x378 76450787359836037641860180984291677749980919077056822294353438043884394381312))))
(assert (x1212 x235))
(assert (x1212 x879))
(assert (=> (> (+ 10000 1) x274) (= (x378 x274) (x460 x274))))
(assert (x1212 x61))
(assert (=> (> (+ 10000 1) x608) (= (x460 x608) (x378 x608))))
(assert (x1212 x384))
(assert (=> (> (+ 10000 1) x457) (= (x378 x457) (x460 x457))))
(assert (x1212 x1030))
(assert (=> (> (+ 10000 1) x12) (= (x378 x12) (x460 x12))))
(assert (= 2211524764 (x746 (x378 2211524764))))
(assert (= x1106 (or x359 (and x939 (not x21)) (and (not x395) x801))))
(assert (= 604800 (x746 (x378 604800))))
(assert (x1212 x1402))
(assert (x678 x14))
(assert (=> (< (- x1048 1) 10000) (= (x378 x1048) (x460 x1048))))
(assert (x1212 x433))
(assert (x1212 x1305))
(assert (x1212 x368))
(assert (x1212 x213))
(assert (= x1091 (and x736 (not x1446))))
(assert (x1212 x1478))
(assert (=> (> (+ 10000 1) x849) (= (x378 x849) (x460 x849))))
(assert (= (x378 2514000705) (x460 2514000705)))
(assert (= x1148 (x746 (x460 x1148))))
(assert (= x490 (or (and x803 x625) (and (not x1081) x965) (and x648 (not x1400)))))
(assert (x1212 x91))
(assert (x1212 x1145))
(assert (x1212 x917))
(assert (= (x310 x797) 0))
(assert (= x900 (=> (and (< 0 x1108) (> 2293535753 x817) (<= 0 x1027) (not (= 87118632 x817)) (>= 1461501637330902918203684832716283019655932542975 x354) (<= x510 1461501637330902918203684832716283019655932542975) (= x35 (x1410 (x460 x152) (x378 9) 0)) (not (= x817 69947311)) (> 468353030 x817) (> 911411945 x817) (<= x1027 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x817 142201243) (= (x454 (x460 274184521717934524641157099916833587206)) x1108) (= (x1410 (x460 x354) x62 0) x607) (= (x45 x607) x1027) (= x62 (x1410 (x460 x510) x35 0)) (= x1027 x1011)) (=> (and (= x229 x1011) (= x56 (< 0 x229)) (= x748 (and x717 x56)) (= x1288 x214) (= 0 x362) (= x287 x376)) x1548))))
(assert (= (x746 (x460 x471)) x471))
(assert (x1212 x1452))
(assert (=> (< (- x1025 1) 10000) (= (x378 x1025) (x460 x1025))))
(assert (x678 x844))
(assert (x678 x152))
(assert (x1212 x558))
(assert (=> (> (+ 10000 1) x187) (= (x378 x187) (x460 x187))))
(assert (x1212 x124))
(assert (x1212 x1565))
(assert (= x1002 (x746 (x460 x1002))))
(assert (x678 x1559))
(assert (x1212 x1488))
(assert (= (x460 2798343961) (x378 2798343961)))
(assert (x1212 x1227))
(assert (x1212 x1132))
(assert (= (x865 x219) (ite (and x515 x579) (x11 x219) (ite (and (not x579) x392 x515) (x11 x219) (x993 x219)))))
(assert (x1212 x1310))
(assert (= (x746 (x378 2293535753)) 2293535753))
(assert (x1212 x987))
(assert (x1212 x1370))
(assert (x1212 x1097))
(assert (= (=> (= x428 x1539) x733) x1556))
(assert (x1212 x982))
(assert (= 26959946667150639794667015087019630673637144422540572481103610249215 (x746 (x378 26959946667150639794667015087019630673637144422540572481103610249215))))
(assert (x1212 x1309))
(assert (x1212 x1378))
(assert (x678 x1138))
(assert (x1212 x1127))
(assert (= (x310 x1291) 0))
(assert (= (x460 2764855426) (x378 2764855426)))
(assert (x678 x952))
(assert (x678 x987))
(assert (=> (< (- x1384 1) 10000) (= (x378 x1384) (x460 x1384))))
(assert (= (+ 1 (x746 x1361)) (x746 (x1095 x1361 1))))
(assert (x1212 x868))
(assert (=> (< (- x528 1) 10000) (= (x378 x528) (x460 x528))))
(assert (=> (< (- x657 1) 10000) (= (x460 x657) (x378 x657))))
(assert (x678 x629))
(assert (= (ite (and (not x752) (not x1162) x387 x1568) (x74 160) (ite (and (not x1162) x1568 (not x387)) (x1064 160) (ite (and x1568 x1162) (x1064 160) (x1253 160)))) (x652 160)))
(assert (x678 x1375))
(assert (=> (> (+ 10000 1) x289) (= (x460 x289) (x378 x289))))
(assert (= x408 (x746 (x460 x408))))
(assert (x1212 x1250))
(assert (= x92 (x746 (x460 x92))))
(assert (x1212 x1108))
(assert (= x152 (x746 (x460 x152))))
(assert (= (x378 2512682246) (x460 2512682246)))
(assert (x1212 x295))
(assert (x1212 x819))
(assert (x1212 x120))
(assert (= x632 (or (and (not x627) x1558) (and x1516 (not x81)))))
(assert (= x613 (x746 (x460 x613))))
(assert (x678 x704))
(assert (x1212 x948))
(assert (x1212 x1302))
(assert (x1212 x158))
(assert (x1212 x846))
(assert (= (x865 x1103) (ite (and x515 x579) (x11 x1103) (ite (and x392 x515 (not x579)) (x11 x1103) (x993 x1103)))))
(assert (x1212 x451))
(assert (= x870 (=> (and (not (= 2211524764 x1151)) (< 0 x581) (not (= 1986467848 x1151)) (not (= 1968616202 x1151)) (= (x454 (x460 274184521717934524641157099916833587206)) x581) (not (> 911411945 x1151)) (= x1511 (x586 x301)) (<= x34 1461501637330902918203684832716283019655932542975) (= x1511 x223) (= (x1410 (x460 x818) (x378 6) 0) x1436) (not (< x1151 1968616202)) (< x1151 2293535753) (>= x1511 0) (= x301 (x1410 (x460 x34) x1436 0)) (= x1151 2258409472) (not (= 2061678023 x1151)) (<= x1511 115792089237316195423570985008687907853269984665640564039457584007913129639935)) (=> (and (= x1002 x1288) (= x1068 x223) (= x376 x541) (= x157 x104)) x665))))
(assert (x1212 x1441))
(assert (= (x460 2418364589) (x378 2418364589)))
(assert (= (=> (and (= x139 (x1259 1461501637330902918203684832716283019655932542975 x1510)) (= x1466 (x1410 (x460 x804) (x378 7) 0)) (>= x735 0) (= x465 (x1410 (x460 x606) x1466 0)) (= x606 (x1259 1461501637330902918203684832716283019655932542975 x198)) (= x81 (= 0 x735)) (<= x735 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x1410 (x460 x139) x465 0) x1059) (= x735 (x1433 x1059))) (and (=> x81 x1369) (=> (and (not x81) (= x804 x1056)) x964))) x452))
(assert (x763 x742))
(assert (= (x746 (x378 1889567281)) 1889567281))
(assert (x1212 x833))
(assert (=> (< (- x1238 1) 10000) (= (x378 x1238) (x460 x1238))))
(assert (= 2512682246 (x746 (x378 2512682246))))
(assert (= x538 (=> (and (not (= 2690754053 x1318)) (= (x1410 (x460 x819) (x378 3) 0) x1553) (not (< x1318 2690754053)) (<= x153 1461501637330902918203684832716283019655932542975) (= x1223 (x203 x684)) (< 0 x385) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1223) (= x784 (x1410 (x460 x153) x1553 0)) (not (< x1318 2293535753)) (= x1223 x1378) (<= 0 x1223) (>= 1461501637330902918203684832716283019655932542975 x263) (= 2743102681 x1318) (< x1318 2960351575) (= x684 (x1410 (x460 x263) x784 0)) (= (x454 (x460 274184521717934524641157099916833587206)) x385)) (=> (and (= x1330 x1288) (= x1394 (<= x611 x1294)) (= x1378 x611) (= x558 x376)) x1477))))
(assert (x1212 x1017))
(assert (x1212 x132))
(assert (x678 x873))
(assert (= (x746 (x460 x811)) x811))
(assert (x1212 x338))
(assert (= (x746 (x460 x651)) x651))
(assert (= (x1060 x1566) (ite (and x1568 x183) (x1150 x1566) (x1265 x1566))))
(assert (x1212 x1058))
(assert (= 274184521717934524641157099916833587214 (x746 (x378 274184521717934524641157099916833587214))))
(assert (x1212 x876))
(assert (x1212 x332))
(assert (= (x746 (x460 x1078)) x1078))
(assert (x1212 x88))
(assert (x678 x1148))
(assert (x1212 x575))
(assert (= x1401 (x746 (x460 x1401))))
(assert (=> (> (+ 10000 1) x1016) (= (x460 x1016) (x378 x1016))))
(assert (= 759532456 (x746 (x378 759532456))))
(assert (x1212 x739))
(assert (x1212 x243))
(assert (= x1246 (x746 (x460 x1246))))
(assert (x1212 x355))
(assert (= x1106 x938))
(assert (= (ite (and x1568 (not x1162) (not x752) x387) (x1065 x1353) (ite (and x1568 (not x1162) (not x387)) (x1326 x1353) (ite (and x1568 x1162) (x1326 x1353) (x1140 x1353)))) (x737 x1353)))
(assert (= 1968616202 (x746 (x378 1968616202))))
(assert (x1212 x873))
(assert (= x187 (x746 (x460 x187))))
(assert (x1212 x38))
(assert (= (=> (and (= (= x704 0) x189) (or (and (not x189) (<= 0 x1506) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1506) (= x533 (x1410 (x460 x704) (x378 10) 0)) (= (x1410 (x460 x1069) x533 0) x1001) (= (x1259 1461501637330902918203684832716283019655932542975 x198) x1069) (= (x1481 x1001) x1506) (= x772 (= x1506 0)) (or (and (= 1 x206) (= x932 x1506) (not x772)) (and (= x932 0) (= x206 0) x772))) (and x189 (= 0 x206) (= x932 0)))) x322) x713))
(assert (= (=> (and (>= x1121 0) (not (= x565 2211524764)) (= (x1410 (x460 x1221) x489 0) x461) (>= 1461501637330902918203684832716283019655932542975 x1221) (= (x668 x461) x1121) (= x95 x1121) (not (> 1968616202 x565)) (not (> 911411945 x565)) (> x1444 0) (<= x1121 115792089237316195423570985008687907853269984665640564039457584007913129639935) (not (= 1986467848 x565)) (not (= x565 2061678023)) (= (x454 (x460 274184521717934524641157099916833587206)) x1444) (= x489 (x1410 (x460 x434) (x378 6) 0)) (= x565 2258409472) (< x565 2293535753) (not (= 1968616202 x565))) (=> (and (= x154 x104) (= x147 x376) (= x95 x1561) (= x1489 x1288)) x766)) x1398))
(assert (x1212 x1078))
(assert (x1212 x863))
(assert (= x622 (and x1400 x648)))
(assert (= x1489 (x746 (x460 x1489))))
(assert (= (x746 (x460 x287)) x287))
(assert (x1212 x626))
(assert (x1212 x1358))
(assert (x1212 x1221))
(assert (= (=> (and (= x1237 (< (x1044 (x460 274184521717934524641157099916833587206)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= (x1248 x650) x319) (not x703) (= (= 0 x1512) x731) (or (not x764) (and (= x1213 (x1248 x650)) (= (ite x388 1 0) x1083) (= x1495 (= 0 x1039)) (= x517 (x546 (+ 32 x650))) (> x1039 0) (= (x286 x517) x1039) x764 (not (or (and (< x1213 32) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1213))) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1213))) (= x1039 x1083) (= (not x1495) x388))) (= x724 (x1159 (x460 x404))) x1237 (= (> x319 0) x764) (= x703 (> x46 2)) (or (and (= x1260 x650) (not x731) (= x845 (x546 (+ x666 96)))) (and (= x650 96) x731)) (not (= x594 0))) x1430) x283))
(assert (x678 x157))
(assert (x678 x662))
(assert (= x26 (or x490 x1114)))
(assert (x678 x889))
(assert (x1212 x292))
(assert (x1212 x930))
(assert (=> (> (+ 10000 1) x662) (= (x460 x662) (x378 x662))))
(assert (x1212 x412))
(assert (x1212 x46))
(assert (= (x1064 192) (ite (and x1569 x1264) (x1149 192) (x1109 192))))
(assert (= x1040 (x746 (x460 x1040))))
(assert (= (=> (and (not (< x125 x804)) (= (x1259 1461501637330902918203684832716283019655932542975 x1510) x873) (= (x1410 (x460 x804) (x378 7) 0) x1352) (>= x125 0) (= x207 (x1433 x765)) (= (> x207 0) x163) (>= x207 0) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x207) (= (x1410 (x460 x873) x826 0) x765) (= (x1410 (x460 x337) x1352 0) x826) (= (x1259 1461501637330902918203684832716283019655932542975 x198) x337) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x125)) (and (=> (and (= x1454 (x260 x217)) (>= x1454 0) (= x1522 0) (= x217 (x1410 (x460 x1110) x397 0)) (= x1454 x508) x163 (= (x1410 (x460 x506) x562 0) x397) (= x1110 (x1259 1461501637330902918203684832716283019655932542975 x1510)) (= (x1259 1461501637330902918203684832716283019655932542975 x198) x506) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1454) (= (x1410 (x460 x804) (x378 9) 0) x562)) x647) (=> (not x163) x472))) x1514))
(assert (= (x113 x1347) (ite (and x1568 x183) (x1020 x1347) (x1036 x1347))))
(assert (x1212 x978))
(assert (= x1471 (=> (and (<= x599 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x1259 1461501637330902918203684832716283019655932542975 x198) x1457) (= x1575 (= x599 0)) (= (x1410 (x460 x1485) (x378 6) 0) x985) (= (x1410 (x460 x1457) x985 0) x10) (>= x599 0) (= (x1060 x10) x599)) (and (=> (and (not x824) (= (x311 (- x1485 1)) x971) x1575 (= x824 (< 0 x971))) x340) (=> (and (not x1575) (= x1485 x1452)) x1438)))))
(assert (x1212 x529))
(assert (x1212 x565))
(assert (=> (< (- x1401 1) 10000) (= (x460 x1401) (x378 x1401))))
(assert (x1212 x1546))
(assert (= x126 x1038))
(assert (x678 x415))
(assert (x1212 x1029))
(assert (=> (> (+ 10000 1) x37) (= (x378 x37) (x460 x37))))
(assert (x1212 x377))
(assert (x1212 x996))
(assert (=> (< (- x1186 1) 10000) (= (x378 x1186) (x460 x1186))))
(assert (x1212 x918))
(assert (x1212 x60))
(assert (x678 x154))
(assert (x1212 x828))
(assert (x1212 x1403))
(assert (x1212 x496))
(assert (x1212 x1364))
(assert (= x112 (x746 (x460 x112))))
(assert (x678 274184521717934524641157099916833587214))
(assert (x1212 x818))
(assert (x1212 x786))
(assert (=> (> (+ 10000 1) x263) (= (x378 x263) (x460 x263))))
(assert (x678 x1485))
(assert (x678 x1564))
(assert (=> (> (+ 10000 1) x676) (= (x460 x676) (x378 x676))))
(assert (x1212 x815))
(assert (x1212 x621))
(assert (x678 x334))
(assert (x678 x1145))
(assert (= (=> (and (= (or (not x954) x986) x1327) (= x264 (<= x480 x569)) (= (and x264 x1394) x986) (= x480 x1396)) (and (=> (and (= x1542 x104) (= 2939843472 x1035) (= x1179 87118632) (= x1288 x1145) (= x1098 true) (= x961 x376)) x353) x1327)) x82))
(assert (x678 x528))
(assert (= (ite (= x1187 x911) x494 (x1326 x1187)) (x1065 x1187)))
(assert (x351 x1323 x224))
(assert (x1212 x150))
(assert (x678 x1177))
(assert (= (or (and x636 x1228) x26) x515))
(assert (x1212 x787))
(assert (=> (> (+ 10000 1) x1457) (= (x378 x1457) (x460 x1457))))
(assert (=> (< (- x147 1) 10000) (= (x460 x147) (x378 x147))))
(assert (=> (< (- x1221 1) 10000) (= (x460 x1221) (x378 x1221))))
(assert (= x1170 (x746 (x460 x1170))))
(assert (x1212 x662))
(assert (x1212 x994))
(assert (x1212 x688))
(assert (= x755 (x746 (x460 x755))))
(assert (x1212 x608))
(assert (=> (> (+ 10000 1) x739) (= (x460 x739) (x378 x739))))
(assert (x678 x291))
(assert (=> (> (+ 10000 1) x541) (= (x460 x541) (x378 x541))))
(assert (x1212 x78))
(assert (= (x746 (x378 2418364589)) 2418364589))
(assert (x1212 x179))
(assert (x1212 x1170))
(assert (x1212 x1524))
(assert (x678 x274))
(assert (x1212 x582))
(assert (= (ite (= x903 x145) x194 (x737 x903)) (x1166 x903)))
(assert (= (x746 (x460 x578)) x578))
(assert (x678 x1401))
(assert (=> (< (- x408 1) 10000) (= (x460 x408) (x378 x408))))
(assert (= (x1065 x400) (ite (= x911 x400) x494 (x1326 x400))))
(assert (x678 x8))
(assert (x1212 x615))
(assert (= (x378 274184521717934524641157099916833587218) (x460 274184521717934524641157099916833587218)))
(assert (=> (< (- x885 1) 10000) (= (x378 x885) (x460 x885))))
(assert (= true x191))
(assert (x1212 x1100))
(assert (x1212 x110))
(assert (x1212 x1293))
(assert (= x879 (x746 (x460 x879))))
(assert (= (=> (and (= (x311 (- x804 1)) x1475) (= x503 (> x1475 0))) (and (=> (not x503) x1439) (=> x503 x519))) x1369))
(assert (= x1559 (x746 (x460 x1559))))
(assert (= x133 (and (not x871) x698)))
(assert (= (x378 2868243304) (x460 2868243304)))
(assert (= x1381 (x746 (x460 x1381))))
(assert (x1212 x187))
(assert (x1212 x804))
(assert (x1492 x1510 x1365))
(assert (= (=> (and (= (x1259 1461501637330902918203684832716283019655932542975 x198) x457) (<= 0 x751) (= x118 (x1410 (x460 x73) x895 0)) (<= x751 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x751 (x1245 x118)) (= x1437 (x1410 (x460 x187) (x378 7) 0)) (= (= 0 x751) x625) (= (x1259 1461501637330902918203684832716283019655932542975 x1510) x73) (= x895 (x1410 (x460 x457) x1437 0))) (and (=> (and (= x609 (< 0 x1415)) (not x609) (= (x311 (- x187 1)) x1415) x625) x282) (=> (and (not x625) (= x1104 x187)) x1274))) x1551))
(assert (= true x320))
(assert (x678 x1170))
(assert (= (x378 911411945) (x460 911411945)))
(assert (x1212 x1070))
(assert (= x147 (x746 (x460 x147))))
(assert (= x1568 x698))
(assert (x678 x368))
(assert (x1212 x1280))
(assert (=> (< (- x124 1) 10000) (= (x378 x124) (x460 x124))))
(assert (=> (> (+ 10000 1) x755) (= (x460 x755) (x378 x755))))
(assert (x1212 x497))
(assert (x1212 x1487))
(assert (x1212 x1102))
(assert (x1212 x837))
(assert (=> (< (- x1485 1) 10000) (= (x460 x1485) (x378 x1485))))
(assert (x1212 x1572))
(assert (= x322 (=> (and (>= x1204 0) (or (and (not x230) (= x1509 (x1259 1461501637330902918203684832716283019655932542975 x198))) x230) (= x884 (x1410 (x460 x804) (x378 6) 0)) (or (and (= x897 x174) (= x1310 (x1259 1461501637330902918203684832716283019655932542975 x198)) (= x1049 (x1410 (x460 x804) (x378 6) 0)) (= (+ x897 x410) x646) (= x651 (x1259 1461501637330902918203684832716283019655932542975 x198)) (= (x1410 (x460 x651) x859 0) x813) (= x174 (x113 x813)) (= x854 (* x5 x932)) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x174 x284)) (<= x174 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x410 x284) (= x284 x854) (= (x1410 (x460 x804) (x378 5) 0) x859) (< (* x5 x932) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (>= x174 0) (not x1144) (= (x1410 (x460 x1310) x1049 0) x530)) (and (= (x1410 (x460 x804) (x378 6) 0) x1472) x1144 (= x1313 (x1410 (x460 x1401) x1472 0)) (= x1401 (x1259 1461501637330902918203684832716283019655932542975 x198)))) (or (and (= (uninterp_mod (* x1515 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x279) (not x1544) (= (ite (> x1515 115792089237316195423570985008687907853269984665640564039457) 1 0) x367) (= x356 (> x46 0)) (= 0 x246) (> x1204 0) (= (- (/ x279 x1204) (uninterp_frac x279 x1204)) x524) (= x161 1) (or (and (= x1033 (+ x1269 x848)) (= (- (/ x1451 1000000000000000000) (uninterp_frac x1451 1000000000000000000)) x213) (= x521 x754) (= (x652 160) x548) (= (x381 x1058) x204) (= x1025 (x1259 1461501637330902918203684832716283019655932542975 x1510)) (= x738 (> x46 1)) (= x112 (x381 x1058)) (= (x1410 (x460 x112) x1469 0) x1353) (= (x1410 (x460 x804) (x378 4) 0) x1197) (= x194 (+ x43 x754)) (= (x80 x193) x1173) (= x1372 (x1410 (x460 x804) (x378 11) 0)) (= x193 (x1410 (x460 x1238) x1389 0)) (= x1515 x43) (<= 0 x757) x356 (> x46 0) (= (x381 x1058) x1238) (> x182 0) (= x757 0) (= x280 (x1259 1461501637330902918203684832716283019655932542975 x198)) (<= 0 x521) (= (x1410 (x460 x1564) x52 0) x1205) (= (x429 128) x182) (<= x1173 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x799 x1058) (= (x737 x1353) x757) (< (* x524 x1173) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x548 x213)) (< (+ x521 x1515) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (<= 0 x1173) (= x213 x848) (= x145 (x1410 (x460 x204) x1388 0)) (= x52 (x1410 (x460 x804) (x378 4) 0)) (= (x737 x145) x521) (= (x1410 (x460 x280) x1197 0) x509) (= x1269 x548) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x757) (or (and (<= 0 x1573) (= x1242 (x1410 (x460 x660) x514 0)) (= (x1410 (x460 x585) x949 0) x829) (= (+ x989 x1207) x920) (>= x776 0) (= x689 (x1410 (x460 x804) (x378 4) 0)) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (* x1573 x524)) (< 1 x46) (= x23 (x381 x858)) (= (x1410 (x460 x598) x914 0) x84) (= (x546 (+ x54 64)) x858) (= x917 (x1259 1461501637330902918203684832716283019655932542975 x198)) (= (+ x943 x53) x1067) (= (- (/ x462 1000000000000000000) (uninterp_frac x462 1000000000000000000)) x856) (= x989 x1322) (>= 1461501637330902918203684832716283019655932542975 x598) (= x550 (x1410 (x460 x917) x689 0)) (= x25 0) (= x943 x776) (= x914 (x1410 (x460 x578) x550 0)) (>= x25 0) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x25) (= (x1166 x903) x25) (= (* x524 x1573) x462) (> x1142 1) (= x1148 (x1259 1461501637330902918203684832716283019655932542975 x198)) (= x615 (x1259 1461501637330902918203684832716283019655932542975 x198)) (< (+ x1515 x776) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (not x500) x738 (= x856 x1207) (= x1515 x53) (= (x1166 x84) x776) (> x46 1) (= x949 (x1410 (x460 x615) x505 0)) (< 1 x46) (= x514 (x1410 (x460 x1148) x254 0)) (= (x381 x858) x598) (>= 1461501637330902918203684832716283019655932542975 x23) (= (x80 x1242) x1573) (= x500 (< 2 x46)) (= x903 (x1410 (x460 x23) x829 0)) (= x585 (x1259 1461501637330902918203684832716283019655932542975 x1510)) (= x505 (x1410 (x460 x804) (x378 4) 0)) (= x660 (x381 x858)) (= (x429 128) x1142) (= (x1410 (x460 x804) (x378 11) 0) x254) (<= x660 1461501637330902918203684832716283019655932542975) (<= x776 115792089237316195423570985008687907853269984665640564039457584007913129639935) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x856 x1322)) (= (x1351 192) x1322) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1573) (= x578 (x1259 1461501637330902918203684832716283019655932542975 x1510))) (not x738)) (<= x521 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x1410 (x460 x1358) x1372 0) x1389) (< 0 x46) (<= x112 1461501637330902918203684832716283019655932542975) (= (x1410 (x460 x1025) x1205 0) x1388) (= x1469 (x1410 (x460 x201) x509 0)) (= x1564 (x1259 1461501637330902918203684832716283019655932542975 x198)) (< 0 x46) (= x201 (x1259 1461501637330902918203684832716283019655932542975 x1510)) (>= 1461501637330902918203684832716283019655932542975 x204) (= (x1259 1461501637330902918203684832716283019655932542975 x198) x1358) (= x1451 (* x1173 x524)) (>= 1461501637330902918203684832716283019655932542975 x1238)) (not x356)) (= x246 (x1259 x161 x367))) x1544) (= x811 (x1259 1461501637330902918203684832716283019655932542975 x198)) (= x644 (x1410 (x460 x811) x702 0)) (= (= x1515 0) x1544) (= x1490 (x1410 (x460 x804) (x378 3) 0)) (= x839 (x635 x474)) (<= x1284 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x1410 (x460 x274) x1088 0) x1103) (= x768 (x546 (+ 2 x1491))) (>= x839 0) (= x1298 x621) (= x306 (x1410 (x460 x60) x884 0)) (<= 0 x1284) (= (x1095 x1361 1) x474) (>= x966 0) (= x1088 (x1410 (x460 x1403) x1490 0)) (= (x1410 (x460 x804) (x378 5) 0) x702) (= x1144 (= x5 0)) (= (x546 (+ 32 x638)) x1283) (>= x1515 0) (= (x546 (+ x638 64)) x1298) (= (x785 x1283) x759) (not (= x804 115792089237316195423570985008687907853269984665640564039457584007913129639935)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x966) (= (x1259 1461501637330902918203684832716283019655932542975 x1510) x274) (= (x1259 1461501637330902918203684832716283019655932542975 x198) x1403) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1204) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x839) (< x473 x768) (= x563 (< x966 x759)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1515) (= x966 (x1060 x306)) (or (and (= (x785 x1283) x846) (= x1465 (< x846 x1075)) (= x520 (= x966 0)) (or (and (= x1075 x75) (not x1465)) (and (= x75 x896) (= (x785 x1283) x896) x1465)) (or (and (not (> x966 x75)) (= x774 (ite (> 604800 x476) x476 604800)) (not x520) (= x481 604800) (= x774 x5) (= (x311 (- x75 x966)) x476)) (and (= (x311 (- x75 x853)) x423) (= x853 (x180 x638)) x520 (= x5 x423) (not (< x75 x853)))) x563) (and (= 0 x5) (not x563))) (= (x1259 1461501637330902918203684832716283019655932542975 x198) x60) (= x1284 (x1552 x1361)) (= (= 0 x206) x230) (= x1204 (x1447 x644)) (= x1361 (x1410 (x460 x804) (x378 1) 0)) (= (x788 x1103) x1515)) x1220)))
(assert (x1212 x932))
(assert (= (ite (and x579 x515) (x661 x1059) (ite (and (not x579) x392 x515) (x1303 x1059) (x1190 x1059))) (x1433 x1059)))
(assert (x1212 x857))
(assert (x1212 x999))
(assert (= x201 (x746 (x460 x201))))
(assert (=> (< (- x730 1) 10000) (= (x378 x730) (x460 x730))))
(assert (= (x746 (x460 x541)) x541))
(assert (x1212 x1539))
(assert (x1212 x94))
(assert (= (or (and x1575 x233) (and x109 (not x1576)) (and (not x1557) x1363)) x241))
(assert (x1212 x494))
(assert (=> (> (+ 10000 1) x811) (= (x460 x811) (x378 x811))))
(assert (x1212 x404))
(assert (x1212 x1385))
(assert (x1212 x937))
(assert (x1212 x1423))
(assert (= x867 (=> (and (= x571 (x1410 (x460 x1491) (x378 6) 0)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1486) (= x1486 (x586 x195)) (= x195 (x1410 (x460 x825) x571 0)) (= (= x1486 0) x1317) (>= x1486 0) (= x825 (x1259 1461501637330902918203684832716283019655932542975 x198))) (and (=> x1317 x389) (=> (and (not x1317) (= x1491 x428)) x1556)))))
(assert (= x1558 (and x503 x495)))
(assert (= x160 (=> (= x658 (> x1491 x1135)) (and (=> (and (= x375 x621) x658) x1220) (=> (not x658) x1082)))))
(assert (x1212 x289))
(assert (= (x746 (x460 x1519)) x1519))
(assert (= (x378 1986467848) (x460 1986467848)))
(assert (= (ite (and x183 x1568) (x1150 x10) (x1265 x10)) (x1060 x10)))
(assert (x1212 x640))
(assert (x1212 x152))
(assert (x678 x578))
(assert (x1212 x1376))
(assert (x1212 x142))
(assert (x678 x468))
(assert (= (and (not x636) x1228) x648))
(assert (= (x746 (x460 x1186)) x1186))
(assert (=> (< (- x153 1) 10000) (= (x460 x153) (x378 x153))))
(assert (x1212 x1574))
(assert (=> (> (+ 10000 1) x231) (= (x460 x231) (x378 x231))))
(assert (=> (> (+ 10000 1) x404) (= (x378 x404) (x460 x404))))
(assert (= x941 (or (and (not x467) x240) x47)))
(assert (= (x746 (x378 18446744073709551615)) 18446744073709551615))
(assert (x1212 x1522))
(assert (= x1409 x745))
(assert (x1212 x346))
(assert (x1212 x415))
(assert (=> (> (+ 10000 1) x1199) (= (x460 x1199) (x378 x1199))))
(assert (x1212 x807))
(assert (x678 x231))
(assert (= (x746 (x378 2743102681)) 2743102681))
(assert (x1212 x612))
(assert (x1212 x585))
(assert (x1212 x1463))
(assert (= (x460 142201243) (x378 142201243)))
(assert (x1212 x9))
(assert (=> (< (- x598 1) 10000) (= (x460 x598) (x378 x598))))
(assert (x1212 x1177))
(assert (= (=> (= x706 0) x808) x282))
(assert (= x1568 (or (and x308 (not x1545)) x63)))
(assert (x1212 x832))
(assert (x1212 x604))
(assert (x1212 x70))
(assert (x1212 x1338))
(assert (x1212 x744))
(assert (= (x310 x1445) 0))
(assert (=> (< (- x272 1) 10000) (= (x460 x272) (x378 x272))))
(assert (= (x746 (x460 x504)) x504))
(assert (x678 x1381))
(assert (x1212 x1489))
(assert (= x389 (=> (and (= (> x1348 0) x1154) (= x1348 (x311 (- x1491 1)))) (and (=> (not x1154) x218) (=> x1154 x690)))))
(assert (=> (> (+ 10000 1) x578) (= (x460 x578) (x378 x578))))
(assert (x1212 x99))
(assert (x1212 x194))
(assert (x1212 x432))
(assert (x678 x613))
(assert (x1212 x347))
(assert (= x1238 (x746 (x460 x1238))))
(assert (x678 x615))
(assert (x1212 x1344))
(assert (x1212 x545))
(assert (= x606 (x746 (x460 x606))))
(assert (= x492 (=> (and (= x1566 (x1410 (x460 x618) x140 0)) (= x618 (x1259 1461501637330902918203684832716283019655932542975 x198)) (= x140 (x1410 (x460 x804) (x378 6) 0)) (= (= 0 x876) x1225) (<= x876 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= 0 x876) (= x876 (x1060 x1566))) (and (=> (and (= x1452 x804) (not x1225)) x1438) (=> x1225 x349)))))
(assert (= x417 (x746 (x460 x417))))
(assert (=> (< (- x117 1) 10000) (= (x460 x117) (x378 x117))))
(assert (x1212 x831))
(assert (x678 x660))
(assert (=> (< (- x1375 1) 10000) (= (x460 x1375) (x378 x1375))))
(assert (x1212 x674))
(assert (= 2532887486 (x746 (x378 2532887486))))
(assert (= x1012 (x746 (x460 x1012))))
(assert (= x1435 (=> (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x41) (= (x1259 1461501637330902918203684832716283019655932542975 x198) x545) (= (= 0 x41) x467) (= (x1060 x300) x41) (<= 0 x41) (= x300 (x1410 (x460 x545) x1458 0)) (= x1458 (x1410 (x460 x804) (x378 6) 0)) (<= 0 x125) (<= x125 115792089237316195423570985008687907853269984665640564039457584007913129639935) (not (> x804 x125))) (and (=> x467 x1367) (=> (and (not x467) (<= x921 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x1381 (x1259 1461501637330902918203684832716283019655932542975 x198)) (= 0 x206) (= x932 x921) (= x912 (x1410 (x460 x1381) x475 0)) (= (x1410 (x460 x804) (x378 10) 0) x475) (>= x921 0) (= (x1481 x912) x921)) x322)))))
(assert (= x1189 x1507))
(assert (x1212 x326))
(assert (= x662 (x746 (x460 x662))))
(assert (x1212 x992))
(assert (= (=> (and (= x1407 (= 0 x1539)) (or (and (= x1442 (x424 x852)) (= (x1259 1461501637330902918203684832716283019655932542975 x198) x1180) (= x852 (x1410 (x460 x1180) x2 0)) (= (x1410 (x460 x1539) (x378 10) 0) x2) (<= 0 x1442) (or (and (= x261 1) (not x782) (= x1030 x1442)) (and (= 0 x261) (= x1030 0) x782)) (= (= x1442 0) x782) (not x1407) (<= x1442 115792089237316195423570985008687907853269984665640564039457584007913129639935)) (and (= 0 x1030) (= 0 x261) x1407))) x479) x733))
(assert (x1212 x1405))
(assert (= x349 (=> (and (= (x311 (- x804 1)) x1485) (= x1576 (< 0 x1485))) (and (=> (not x1576) x340) (=> x1576 x1471)))))
(assert (= (x1060 x306) (ite (and x1568 x183) (x1150 x306) (x1265 x306))))
(assert (x1212 x125))
(assert (x1212 x790))
(assert (= x120 (x746 (x460 x120))))
(assert (x1212 x309))
(assert (x1212 x245))
(assert (x678 x811))
(assert (x1212 x676))
(assert (x1212 x961))
(assert (x678 x263))
(assert (x1212 x618))
(assert (= (x1433 x765) (ite (and x515 x579) (x661 x765) (ite (and (not x579) x392 x515) (x1303 x765) (x1190 x765)))))
(assert (x1212 x354))
(assert (= x268 x156))
(assert (x1212 x672))
(assert (= x440 (x746 (x460 x440))))
(assert (= x825 (x746 (x460 x825))))
(assert (x1212 x1198))
(assert (x1212 x469))
(assert (x678 x373))
(assert (x1212 x716))
(assert (= (x865 x842) (ite (and x579 x515) (x11 x842) (ite (and x515 x392 (not x579)) (x11 x842) (x993 x842)))))
(assert (x1212 x1128))
(assert (x678 x741))
(assert (= x1516 (and x65 x209)))
(assert (x1212 x137))
(assert (x1212 x708))
(assert (= (x746 (x460 x608)) x608))
(assert (x1212 x1411))
(assert (x1212 x974))
(assert (=> (< (- x819 1) 10000) (= (x460 x819) (x378 x819))))
(assert (= (ite (and x515 x579) (x11 x779) (ite (and x392 x515 (not x579)) (x11 x779) (x993 x779))) (x865 x779)))
(assert (=> (> (+ 10000 1) x368) (= (x378 x368) (x460 x368))))
(assert (= x736 (and x395 x801)))
(assert (x1212 x525))
(assert (= x1057 (x746 (x460 x1057))))
(assert (=> (< (- x1177 1) 10000) (= (x378 x1177) (x460 x1177))))
(assert (= x706 (x746 (x460 x706))))
(assert (=> (< (- x753 1) 10000) (= (x460 x753) (x378 x753))))
(assert (x1212 x373))
(assert (= x77 (=> (and (= (< 0 (x454 (x460 274184521717934524641157099916833587206))) x98) (= x1055 5) (= x968 (< 0 (x454 (x460 274184521717934524641157099916833587214)))) (= (x83 (x460 274184521717934524641157099916833587206)) x1488) (= x1215 x616) (<= 0 x1013) (= x439 false) (= 2939843472 x70) x518 (= false x129) (<= 0 x376) (>= 1461501637330902918203684832716283019655932542975 x104) x968 (<= x309 1461501637330902918203684832716283019655932542975) (>= x309 0) (= (< 0 (x454 (x460 274184521717934524641157099916833587218))) x518) (<= 0 x828) (>= x1488 0) (<= 0 x868) (<= 0 x1215) (= (x83 (x460 274184521717934524641157099916833587218)) x1013) (>= 1461501637330902918203684832716283019655932542975 x1215) (>= 1461501637330902918203684832716283019655932542975 x376) (= x376 x34) (= x338 x309) (= x828 (x83 (x460 274184521717934524641157099916833587214))) (= x15 false) (<= 0 x104) (= x818 x1288) (<= x868 1461501637330902918203684832716283019655932542975) (= false x1383) x98) x870)))
(assert (x1212 x1169))
(assert (=> (> (+ 10000 1) x172) (= (x460 x172) (x378 x172))))
(assert (x1212 x686))
(assert (=> (> (+ 10000 1) x558) (= (x378 x558) (x460 x558))))
(assert (x678 x34))
(assert (x1212 x34))
(assert (= (x746 (x460 x153)) x153))
(assert (x1212 x1499))
(assert (= x1438 (=> (= x704 x1452) x713)))
(assert (x1212 x112))
(assert (x1212 x869))
(assert (= (x1065 x1041) (ite (= x911 x1041) x494 (x1326 x1041))))
(assert (= (x460 2061678023) (x378 2061678023)))
(assert (x1212 x856))
(assert (x763 26959946667150639794667015087019630673637144422540572481103610249215))
(assert (= (x746 (x460 x354)) x354))
(assert (= (=> (and (not (= 2743102681 x612)) (not (< x612 2690754053)) (not (< x612 2293535753)) (<= x1019 1461501637330902918203684832716283019655932542975) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x405) (not (= x612 2764855426)) (< 0 x1467) (> 2960351575 x612) (= x405 (x507 x645)) (= x612 2798343961) (= x405 x1211) (>= x405 0) (= (x1410 (x460 x55) (x378 5) 0) x687) (= (x454 (x460 274184521717934524641157099916833587206)) x1467) (not (= x612 2690754053)) (= x645 (x1410 (x460 x1019) x687 0))) (=> (and (= x1288 x819) (= x153 x376) (= x1294 x1211) (= x263 x104)) x538)) x664))
(assert (x1212 x48))
(assert (= (x460 2939843472) (x378 2939843472)))
(assert (x1212 x1188))
(assert (x678 x1183))
(assert (x1212 x1455))
(assert (x1212 x1521))
(assert (=> (< (- x55 1) 10000) (= (x460 x55) (x378 x55))))
(assert (x678 x1105))
(assert (x1212 x704))
(assert (=> (> (+ 10000 1) x1310) (= (x460 x1310) (x378 x1310))))
(assert (x1212 x774))
(assert (x1212 x1511))
(assert (x1212 x231))
(assert (x1212 x246))
(assert (x1212 x1530))
(assert (=> (< (- x615 1) 10000) (= (x378 x615) (x460 x615))))
(assert (x678 x272))
(assert (x1212 x1027))
(assert (x1212 x1142))
(assert (x678 274184521717934524641157099916833587218))
(assert (x1212 x960))
(assert (x678 x153))
(assert (= x657 (x746 (x460 x657))))
(assert (= x1564 (x746 (x460 x1564))))
(assert (x1212 x923))
(assert (x1212 x153))
(assert (= (ite (and (not x1162) (not x752) x1568 x387) (x1065 x1187) (ite (and (not x387) x1568 (not x1162)) (x1326 x1187) (ite (and x1568 x1162) (x1326 x1187) (x1140 x1187)))) (x737 x1187)))
(assert (x1212 x463))
(assert (=> (> (+ 10000 1) x1390) (= (x460 x1390) (x378 x1390))))
(assert (=> (> (+ 10000 1) x441) (= (x378 x441) (x460 x441))))
(assert (= x1457 (x746 (x460 x1457))))
(assert (x1212 x1138))
(assert (x1212 x334))
(assert (= x124 (x746 (x460 x124))))
(assert (x1212 x798))
(assert (= (x378 2211524764) (x460 2211524764)))
(assert (= (x1065 x84) (ite (= x911 x84) x494 (x1326 x84))))
(assert (x1212 x1541))
(assert (x1212 x800))
(assert (x678 x377))
(assert (= (x746 (x460 x457)) x457))
(assert (= (x746 (x378 115792089237316195423570985008687907853269984665640564039457584007913129639935)) 115792089237316195423570985008687907853269984665640564039457584007913129639935))
(assert (= (x746 (x460 x1177)) x1177))
(assert (x1212 x1093))
(assert (= (x746 (x378 1986467848)) 1986467848))
(assert (x1212 x1542))
(assert (=> (> (+ 10000 1) x214) (= (x460 x214) (x378 x214))))
(assert (= x434 (x746 (x460 x434))))
(assert (x1212 x1209))
(assert (x678 x1110))
(assert (x1212 x1396))
(assert (=> (< (- x618 1) 10000) (= (x378 x618) (x460 x618))))
(assert (=> (< (- x92 1) 10000) (= (x460 x92) (x378 x92))))
(assert (= (x746 (x460 x1348)) x1348))
(assert (= (ite (and x1568 x183) (x1020 x813) (x1036 x813)) (x113 x813)))
(assert (x1212 x198))
(assert (x1212 x1316))
(assert (= (ite (and x387 x1568 (not x752) (not x1162)) (x74 192) (ite (and (not x1162) (not x387) x1568) (x1064 192) (ite (and x1162 x1568) (x1064 192) (x1253 192)))) (x652 192)))
(assert (x1212 x1315))
(assert (x1212 x385))
(assert (=> (> (+ 10000 1) x879) (= (x378 x879) (x460 x879))))
(assert (= (x746 (x460 x288)) x288))
(assert (x1212 x1564))
(assert (x1212 x768))
(assert (x1212 x1503))
(assert (x1212 x1238))
(assert (= (ite (and x579 x515) (x11 x684) (ite (and x392 x515 (not x579)) (x11 x684) (x993 x684))) (x865 x684)))
(assert (= (x746 (x378 115792089237316195423570985008687907853269984665640564039457584007913129639904)) 115792089237316195423570985008687907853269984665640564039457584007913129639904))
(assert (x1212 x840))
(assert (x1212 x673))
(assert (x1212 x68))
(assert (= (ite (and x1568 x183) (x1150 x300) (x1265 x300)) (x1060 x300)))
(assert (x678 x541))
(assert (x678 x608))
(assert (x1212 x692))
(assert (= (=> (and (= (x311 (- x1491 1)) x187) (= x1081 (> x187 0))) (and (=> x1081 x1551) (=> (not x1081) x282))) x313))
(assert (= (x746 (x460 x1542)) x1542))
(assert (= (x746 (x460 x117)) x117))
(assert (x1212 x1561))
(assert (= (x460 759532456) (x378 759532456)))
(assert (= 2258409472 (x746 (x378 2258409472))))
(assert (x1212 x966))
(assert (x678 x527))
(assert (=> (> (+ 10000 1) x602) (= (x378 x602) (x460 x602))))
(assert (=> (> (+ 10000 1) x1169) (= (x378 x1169) (x460 x1169))))
(assert (x1212 x1002))
(assert (= x154 (x746 (x460 x154))))
(assert (=> (> (+ 10000 1) x1002) (= (x378 x1002) (x460 x1002))))
(assert (x678 x606))
(assert (= x1202 (x746 (x460 x1202))))
(assert (x1212 x651))
(assert (= x263 (x746 (x460 x263))))
(assert (x1212 x741))
(assert (x1212 x1179))
(assert (=> (> (+ 10000 1) x626) (= (x460 x626) (x378 x626))))
(assert (x1212 x1307))
(assert (=> (< (- x936 1) 10000) (= (x460 x936) (x378 x936))))
(assert (x1212 x1506))
(assert (x1212 x376))
(assert (x1212 x357))
(assert (x1212 x1401))
(assert (x1212 x1135))
(assert (x1212 x1468))
(assert (= (x1065 x145) (ite (= x145 x911) x494 (x1326 x145))))
(assert (x1212 x701))
(assert (x678 x1539))
(assert (=> (< (- x73 1) 10000) (= (x460 x73) (x378 x73))))
(assert (x1212 x1048))
(assert (x1212 x901))
(assert (x1212 x1180))
(assert (x1212 x707))
(assert (x1212 x1509))
(assert (x1212 x1011))
(assert (x1212 x170))
(assert (= (x1433 x1176) (ite (and x515 x579) (x661 x1176) (ite (and (not x579) x515 x392) (x1303 x1176) (x1190 x1176)))))
(assert (= (x746 (x460 274184521717934524641157099916833587218)) 274184521717934524641157099916833587218))
(assert (= x1033 (x1351 160)))
(assert (x1212 x888))
(assert (x1212 x1480))
(assert (x678 x1519))
(assert (= (x746 (x378 2960351575)) 2960351575))
(assert (x678 x1403))
(assert (x1212 x1206))
(assert (x1212 x425))
(assert (x1212 x616))
(assert (x678 x755))
(assert (= (=> (and (<= x987 1461501637330902918203684832716283019655932542975) (= x575 (x653 x1187)) (not (< x982 2293535753)) (= x982 2532887486) (< x982 2690754053) (= (x1410 (x460 x1004) x1129 0) x542) (= (x1410 (x460 x987) x1168 0) x1129) (= x1396 x575) (= x901 (x454 (x460 274184521717934524641157099916833587206))) (= (x1410 (x460 x1502) (x378 4) 0) x1168) (> x901 0) (<= x1004 1461501637330902918203684832716283019655932542975) (> 2960351575 x982) (not (= x982 2293535753)) (>= x575 0) (not (= 2418364589 x982)) (>= 1461501637330902918203684832716283019655932542975 x528) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x575) (not (= x982 2512682246)) (= (x1410 (x460 x528) x542 0) x1187)) x82) x643))
(assert (x1212 x414))
(assert (=> (< (- x741 1) 10000) (= (x378 x741) (x460 x741))))
(assert (x1212 x1479))
(assert (=> (< (- x961 1) 10000) (= (x460 x961) (x378 x961))))
(assert (x678 x585))
(assert (x1212 x337))
(assert (x1212 x1336))
(assert (x1212 x272))
(assert (x678 x290))
(assert (x678 x201))
(assert (x1212 x55))
(assert (= x741 (x746 (x460 x741))))
(assert (=> (> (+ 10000 1) x844) (= (x378 x844) (x460 x844))))
(assert (x1212 x528))
(assert (x1212 x623))
(assert (x1212 x161))
(assert (=> (< (- x987 1) 10000) (= (x460 x987) (x378 x987))))
(assert (x1212 x23))
(assert (= (=> (= x166 (= 274184521717934524641157099916833587214 x404)) (and (=> (and (<= x179 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x437 (x311 (- x1273 x276))) (= x1198 x347) (>= x1273 0) (= x411 x355) (= x1441 x608) (= 2835717307 x332) (not (= x332 826074471)) (= x298 274184521717934524641157099916833587206) (= x216 (x1410 (x460 274184521717934524641157099916833587206) (x378 1) 0)) (= (x1537 x123) x179) (= (x311 (- x1198 4)) x28) (= (x454 (x460 274184521717934524641157099916833587214)) x150) (= x433 (+ x1216 x411)) (= 76450787359836037641860180984291677749980919077056822294353438043884394381312 x1029) (= x534 (> x355 x1273)) (= 32 x1512) (= x355 x276) (= (x1410 (x460 274184521717934524641157099916833587206) (x378 1) 0) x344) (<= 0 x179) (= x93 (> x276 x1273)) (not x1334) (not x1236) (= x431 274184521717934524641157099916833587206) (not x93) (= 68 x1198) (= x179 x1216) (< 0 x150) (not (< x332 649617121)) (<= x1273 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x1236 (or (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x28)) (> 64 x28)) (> x28 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (= 1 x594) (not (= 1889567281 x332)) (not (= x332 2514000705)) (= (x577 x216) x1273) (= x276 x31) (= (<= 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x179 x355)) x1334) (<= x608 1461501637330902918203684832716283019655932542975) (not (< x1198 4)) (not (= 649617121 x332)) (= x608 x235) x166 (= x123 (x1410 (x460 x608) (x378 1) 0)) (not x534) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x355 x179))) x283) (=> (not x166) x191))) x165))
(assert (= (x746 (x460 x36)) x36))
(assert (= (ite (= x838 x911) x494 (x1326 x838)) (x1065 x838)))
(assert (= x1310 (x746 (x460 x1310))))
(assert (= (x378 2258409472) (x460 2258409472)))
(assert (x1212 x362))
(assert (x1212 x36))
(assert (x1212 x679))
(assert (= (x746 (x460 x404)) x404))
(assert (x1212 x441))
(assert (= (x746 (x460 x936)) x936))
(assert (x1212 x613))
(assert (= x441 (x746 (x460 x441))))
(assert (= (x74 192) (x1064 192)))
(assert (x1212 x1467))
(assert (=> (< (- x204 1) 10000) (= (x378 x204) (x460 x204))))
(assert (x1212 x139))
(assert (x1212 x759))
(assert (= (+ 1 (x746 x898)) (x746 (x1095 x898 1))))
(assert (=> (> (+ 10000 1) x440) (= (x460 x440) (x378 x440))))
(assert (x1212 x975))
(assert (x678 x1199))
(assert (= (x746 (x460 x214)) x214))
(assert (x1212 x1084))
(assert (= (x746 (x460 x688)) x688))
(assert (x1212 x997))
(assert (= (=> (and (not (> 468353030 x1209)) (>= x1233 0) (not (= 635128645 x1209)) (= x641 (x1410 (x460 x1489) (x378 7) 0)) (not (= 468353030 x1209)) (= (x454 (x460 274184521717934524641157099916833587206)) x483) (> 2293535753 x1209) (= (x1410 (x460 x154) x1399 0) x619) (<= x147 1461501637330902918203684832716283019655932542975) (> 911411945 x1209) (= (x1410 (x460 x147) x641 0) x1399) (>= 1461501637330902918203684832716283019655932542975 x154) (< 0 x483) (= (x927 x619) x1233) (= x1233 x1421) (<= x1233 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x1209 759532456)) (=> (and (= x1288 x55) (= x376 x1019) (= x1421 x1257) (= x954 (>= x1561 x1257))) x664)) x766))
(assert (x1212 x214))
(assert (= (x746 (x460 x1403)) x1403))
(assert (= (x378 18446744073709551615) (x460 18446744073709551615)))
(assert (= x1107 (=> (and (not (= x710 2211524764)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4) (< 0 x1413) (not (= x710 2061678023)) (not (= x710 1986467848)) (= x710 2258409472) (= x4 x270) (<= x1395 1461501637330902918203684832716283019655932542975) (> 2293535753 x710) (not (> 1968616202 x710)) (>= x4 0) (= (x454 (x460 274184521717934524641157099916833587206)) x1413) (not (> 911411945 x710)) (= (x1410 (x460 x1126) (x378 6) 0) x407) (= (x586 x1130) x4) (= (x1410 (x460 x1395) x407 0) x1130) (not (= 1968616202 x710))) (=> (and (= x1288 x1246) x1116 (= (not (= x906 0)) x1116) (= x376 x334) (= 0 x1174) (= x906 x270)) x1125))))
(assert (=> (> (+ 10000 1) x373) (= (x460 x373) (x378 x373))))
(assert (x678 x1395))
(assert (x1212 x1540))
(assert (= x359 (or (and x1052 x1266) (and x166 x20))))
(assert (x678 x1390))
(assert (=> (< (- x706 1) 10000) (= (x378 x706) (x460 x706))))
(assert (= 274184521717934524641157099916833587218 (x746 (x378 274184521717934524641157099916833587218))))
(assert (=> (> (+ 10000 1) x651) (= (x460 x651) (x378 x651))))
(assert (x1212 x371))
(assert (x1212 x1390))
(assert (x1212 x274))
(assert (= (ite (= x145 x1041) x194 (x737 x1041)) (x1166 x1041)))
(assert (=> (> (+ 10000 1) x280) (= (x378 x280) (x460 x280))))
(assert (x1212 x583))
(assert (x1212 x440))
(assert (x1212 x417))
(assert (x1212 x1486))
(assert (x1212 x327))
(assert (x1212 x1174))
(assert (=> (< (- x60 1) 10000) (= (x378 x60) (x460 x60))))
(assert (= x1004 (x746 (x460 x1004))))
(assert (x1212 x6))
(assert (= (and x939 x21) x1266))
(assert (x1212 x1412))
(assert (x1212 x517))
(assert (x1212 x266))
(assert (= (x746 (x378 142201243)) 142201243))
(assert (x1212 x59))
(assert (= (=> (and (= (x1410 (x460 x1491) (x378 5) 0) x1339) (= x1416 (= x261 0)) (or (and (not x1045) (= 0 x499)) (and (or (and (= x1075 x955) (not x1345)) (and (= x155 x955) x1345 (= (x1032 x1161) x155))) (= (= x1312 0) x32) x1045 (= x1428 (x1032 x1161)) (or (and (not x32) (not (< x955 x1312)) (= x814 604800) (= (ite (> 604800 x446) x446 604800) x1315) (= x1315 x499) (= (x311 (- x955 x1312)) x446)) (and x32 (not (< x955 x680)) (= (x311 (- x955 x680)) x536) (= x680 (x588 x1393)) (= x536 x499))) (= (> x1075 x1428) x1345))) (= x840 (x1032 x1161)) (or (and (= x1366 (x1410 (x460 x1491) (x378 6) 0)) (= x97 (x1410 (x460 x134) x1366 0)) x183 (= x134 (x1259 1461501637330902918203684832716283019655932542975 x198))) (and (= x299 (x1410 (x460 x1491) (x378 6) 0)) (= (x1410 (x460 x124) x281 0) x983) (= x294 (+ x796 x944)) (not x183) (= (x1259 1461501637330902918203684832716283019655932542975 x198) x368) (<= 0 x1325) (= x944 x1325) (= x1431 x227) (= x796 x227) (= x1431 (* x1030 x499)) (= x1325 (x1020 x983)) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (* x1030 x499)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1325) (< (+ x227 x1325) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x281 (x1410 (x460 x1491) (x378 5) 0)) (= (x1259 1461501637330902918203684832716283019655932542975 x198) x124) (= (x1410 (x460 x368) x299 0) x1360))) (<= x271 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x1259 1461501637330902918203684832716283019655932542975 x198) x602) (= (< x1312 x840) x1045) (= (x1095 x727 1) x760) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x250) (= x1312 (x586 x1527)) (<= 0 x271) (= (x1259 1461501637330902918203684832716283019655932542975 x1510) x117) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x977) (= (x1259 1461501637330902918203684832716283019655932542975 x198) x511) (= x842 (x1410 (x460 x117) x958 0)) (or (and (= x238 (x1410 (x460 x1165) x19 0)) (= (x1259 1461501637330902918203684832716283019655932542975 x198) x1165) (= x19 (x1410 (x460 x1491) (x378 10) 0)) (not x1416)) x1416) (<= 0 x1312) (= x527 (x1259 1461501637330902918203684832716283019655932542975 x198)) (= x878 (x1410 (x460 x1491) (x378 6) 0)) (>= x793 0) (>= x250 0) (<= 0 x977) (= (= 0 x499) x183) (= (x546 (+ 64 x1393)) x177) (= x793 (x113 x1347)) (= x271 (x635 x760)) (= (x1552 x727) x250) (or (and (not x1162) (= (x1259 x1338 x1234) x266) (= 1 x1338) (= (ite (> x977 115792089237316195423570985008687907853269984665640564039457) 1 0) x1234) (= x181 (- (/ x1097 x793) (uninterp_frac x1097 x793))) (= x1097 (uninterp_mod (* x977 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= x266 0) (= x387 (> x46 0)) (or (and (<= 0 x734) (= x1519 (x381 x790)) (<= x291 1461501637330902918203684832716283019655932542975) (= x790 x799) (= x734 (x1326 x911)) (= x17 (x1064 160)) (= x1331 x988) (= (> x46 1) x752) (= x798 (x429 128)) (= x159 (x1410 (x460 x1491) (x378 11) 0)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1493) (> x46 0) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x1331 x17)) (<= x1519 1461501637330902918203684832716283019655932542975) (= x672 (x1259 1461501637330902918203684832716283019655932542975 x1510)) (<= 0 x1112) (= x1112 0) (= x844 (x1259 1461501637330902918203684832716283019655932542975 x1510)) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x734 x977)) (< 0 x46) (= x1185 (+ x1046 x988)) x387 (= x948 (x1259 1461501637330902918203684832716283019655932542975 x198)) (= (x80 x1301) x1493) (<= x864 1461501637330902918203684832716283019655932542975) (= x802 (x1259 1461501637330902918203684832716283019655932542975 x198)) (= (x1410 (x460 x1169) x631 0) x273) (= x576 (* x181 x1493)) (> x46 0) (>= x1493 0) (= x1169 (x1259 1461501637330902918203684832716283019655932542975 x198)) (or (and (= x936 (x381 x1272)) (= (x1410 (x460 x1491) (x378 4) 0) x1267) (= (x429 128) x999) (= (x1259 1461501637330902918203684832716283019655932542975 x198) x326) (>= x787 0) (= x422 0) (= (x80 x102) x787) (= (x1410 (x460 x1491) (x378 11) 0) x257) (= (x1410 (x460 x936) x122 0) x400) (= (x1410 (x460 x1491) (x378 4) 0) x850) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x992) (= (x1410 (x460 x613) x1218 0) x122) (= (x1259 1461501637330902918203684832716283019655932542975 x198) x415) (= (- (/ x324 1000000000000000000) (uninterp_frac x324 1000000000000000000)) x1178) (> x46 1) x752 (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x787) (= x422 (x1065 x400)) (= x102 (x1410 (x460 x688) x637 0)) (= (x1410 (x460 x574) x141 0) x838) (= (x1410 (x460 x8) x655 0) x141) (= x613 (x1259 1461501637330902918203684832716283019655932542975 x1510)) (< 1 x46) (not x220) (= x1218 (x1410 (x460 x415) x1267 0)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x422) (<= x574 1461501637330902918203684832716283019655932542975) (< (+ x692 x1178) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x1258 (+ x880 x1222)) (= x655 (x1410 (x460 x326) x850 0)) (<= x936 1461501637330902918203684832716283019655932542975) (> x999 1) (<= 0 x422) (= (x546 (+ 64 x54)) x1272) (= (x381 x1272) x574) (= x324 (* x787 x181)) (< (+ x977 x992) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= (+ x1341 x448) x253) (<= 0 x992) (= x880 x977) (= x885 (x1259 1461501637330902918203684832716283019655932542975 x198)) (= (> x46 2) x220) (= (x1410 (x460 x885) x257 0) x637) (= x1178 x448) (= (x74 192) x692) (= x1222 x992) (= x688 (x381 x1272)) (= (x1065 x838) x992) (< 1 x46) (= x692 x1341) (>= 1461501637330902918203684832716283019655932542975 x688) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (* x787 x181)) (= x8 (x1259 1461501637330902918203684832716283019655932542975 x1510))) (not x752)) (= x977 x806) (= (x1410 (x460 x291) x485 0) x1470) (<= x1112 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x494 (+ x806 x269)) (= (x1410 (x460 x948) x159 0) x560) (<= x734 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x1301 (x1410 (x460 x1519) x560 0)) (= x262 (x1410 (x460 x1491) (x378 4) 0)) (= (x1410 (x460 x672) x273 0) x485) (= x864 (x381 x790)) (= (x1410 (x460 x844) x1111 0) x671) (= x1111 (x1410 (x460 x802) x262 0)) (= x17 x1046) (< (* x1493 x181) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (< 0 x798) (= (x381 x790) x291) (= x1331 (- (/ x576 1000000000000000000) (uninterp_frac x576 1000000000000000000))) (= (x1410 (x460 x864) x671 0) x911) (= x1112 (x1326 x1470)) (= x734 x269) (= x631 (x1410 (x460 x1491) (x378 4) 0))) (not x387)) (< 0 x793)) x1162) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x793) (= (x1410 (x460 x511) x878 0) x1527) (= x958 (x1410 (x460 x602) x345 0)) (= (x546 (+ 32 x1393)) x1161) (= (x1410 (x460 x1491) (x378 3) 0) x345) (= (x1410 (x460 x527) x1339 0) x1347) (= x727 (x1410 (x460 x1491) (x378 1) 0)) (<= x1312 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x865 x842) x977) (= x1162 (= 0 x977))) x847) x479))
(assert (x678 x120))
(assert (x1212 x594))
(assert (x1212 x1329))
(assert (= 2798343961 (x746 (x378 2798343961))))
(assert (=> (< (- x1165 1) 10000) (= (x460 x1165) (x378 x1165))))
(assert (x1212 x680))
(assert (x678 x818))
(assert (x1212 x1199))
(assert (= (x746 (x460 x864)) x864))
(assert (x1212 x1283))
(assert (x1212 x71))
(assert (=> (> (+ 10000 1) x326) (= (x460 x326) (x378 x326))))
(assert (x678 x1202))
(assert (= (=> (and (= (x1410 (x460 x1491) (x378 6) 0) x894) (<= x125 115792089237316195423570985008687907853269984665640564039457584007913129639935) (not (< x125 x863)) (= (= x425 0) x1545) (= x425 (x586 x634)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x425) (= (x1259 1461501637330902918203684832716283019655932542975 x198) x849) (>= x125 0) (<= 0 x425) (= x634 (x1410 (x460 x849) x894 0))) (and (=> x1545 x1042) (=> (and (>= x1155 0) (= x1155 (x424 x188)) (= 0 x261) (= x1030 x1155) (not x1545) (= (x1410 (x460 x1491) (x378 10) 0) x1244) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1155) (= (x1410 (x460 x120) x1244 0) x188) (= x120 (x1259 1461501637330902918203684832716283019655932542975 x198))) x479))) x732))
(assert (x1212 x1018))
(assert (=> (> (+ 10000 1) x694) (= (x378 x694) (x460 x694))))
(assert (x1212 x1442))
(assert (x678 x739))
(assert (x1212 x881))
(assert (x1212 x981))
(assert (= x1199 (x746 (x460 x1199))))
(assert (= (x746 (x460 x676)) x676))
(assert (x1212 x1004))
(assert (x1212 x164))
(assert (x1212 x650))
(assert (= x1221 (x746 (x460 x1221))))
(assert (x678 x1048))
(assert (x1212 x656))
(assert (x678 x688))
(assert (x678 x558))
(assert (= (and x1081 x965) x803))
(assert (= (x746 (x460 x547)) x547))
(assert (= (x746 (x460 x618)) x618))
(assert (=> (> (+ 10000 1) x606) (= (x460 x606) (x378 x606))))
(assert (= (x746 (x460 x1100)) x1100))
(assert (= x626 (x746 (x460 x626))))
(assert (x1212 x291))
(assert (= (x746 (x378 826074471)) 826074471))
(assert (x678 x248))
(assert (x1212 x1068))
(assert (=> (< (- x511 1) 10000) (= (x460 x511) (x378 x511))))
(assert (x1212 x1449))
(assert (= (x460 468353030) (x378 468353030)))
(assert (x1212 x544))
(assert (=> (< (- x1202 1) 10000) (= (x378 x1202) (x460 x1202))))
(assert (x1212 x839))
(assert (= (x378 2690754053) (x460 2690754053)))
(assert (=> (> (+ 10000 1) x1148) (= (x460 x1148) (x378 x1148))))
(assert (x1212 x271))
(assert (= x925 (or (and (not x1146) x167) (and x781 (not x1154)) (and x1380 x1005))))
(assert (x1212 x1))
(assert (= (and (not x325) x1091) x333))
(assert (= (x1065 x1353) (ite (= x911 x1353) x494 (x1326 x1353))))
(assert (x1212 x144))
(assert (= (and x781 x1154) x1380))
(assert (x678 x287))
(assert (= x1507 x973))
(assert (x1212 x114))
(assert (= x231 (x746 (x460 x231))))
(assert (x351 x869 x108))
(assert (x678 x626))
(assert (x1212 x1500))
(assert (x678 x204))
(assert (x1212 x1374))
(assert (x678 x134))
(assert (x678 x1358))
(assert (= (x746 (x460 x818)) x818))
(assert (x678 x1025))
(assert (=> (< (- x8 1) 10000) (= (x378 x8) (x460 x8))))
(assert (x1212 x677))
(assert (= x1264 x556))
(assert (= x377 (x746 (x460 x377))))
(assert (x1212 x1126))
(assert (x1212 x172))
(assert (x1212 x1273))
(assert (= (=> (and (= (x135 x837) x1084) x1504 (= (= x1364 0) x1010) (= (x1523 (x460 274184521717934524641157099916833587206)) x592) (= x1462 (x1073 (x460 x504))) (not (= x1308 0)) (or (not x1550) (and (= (= 0 x1480) x841) (= (x135 x837) x726) (= (ite x564 1 0) x371) x1550 (= x564 (not x841)) (< 0 x1480) (= x371 x1480) (= (x887 x978) x1480) (not (or (> x726 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= true (<= x726 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (< x726 32)))) (= (x546 (+ 32 x837)) x978))) (= (< (x1523 (x460 274184521717934524641157099916833587206)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x1504) (or (and (= (x546 (+ 63 x1364)) x742) (= (x1259 115792089237316195423570985008687907853269984665640564039457584007913129639904 x742) x1102) (= (x546 (+ 96 x1302)) x132) (= x837 x497) (= (x546 (+ x497 x1102)) x1455) (= x1070 x1455) (not x1010)) (and x1010 (= 96 x837) (= x1070 x497))) (= (> x1084 0) x1550)) x1501) x365))
(assert (x1212 x510))
(assert (=> (> (+ 10000 1) x948) (= (x460 x948) (x378 x948))))
(assert (= x1538 x126))
(assert (x1212 x66))
(assert (= x368 (x746 (x460 x368))))
(assert (x1212 x1110))
(assert (x678 x1186))
(assert (x1212 x37))
(assert (x1212 x1008))
(assert (= x1439 (=> (= x1186 0) x1340)))
(assert (= (x746 (x460 x602)) x602))
(assert (= (=> (= x1539 0) x733) x218))
(assert (= (=> (and (= (<= 0 x1128) x642) (= x1336 x347) (= x1018 (x928 (x460 x404))) x642 x307 (= (< (x928 (x460 x404)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x107) (= x190 (x336 (x460 274184521717934524641157099916833587206))) (= x307 (< x1572 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= (= x404 274184521717934524641157099916833587218) x1052) (= x1128 (x336 (x460 274184521717934524641157099916833587206))) x107 (= x1572 (x336 (x460 x404)))) (and (=> (not x1052) x165) (=> (and (<= x1487 115792089237316195423570985008687907853269984665640564039457584007913129639935) (not (< x701 4)) (= x810 x1175) (= x1478 (x443 x1397)) (not (= 2514000705 x1530)) (not (> 649617121 x1530)) (>= x1487 0) (= x1357 (> x1175 x1487)) (= (x454 (x460 274184521717934524641157099916833587218)) x71) (>= x1478 0) (= x1487 (x251 x1009)) (not x1171) (= x173 (<= 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x1175 x1478))) (not (= 1889567281 x1530)) (not x173) (= x701 68) (= x1397 (x1410 (x460 x1377) (x378 1) 0)) (= x923 274184521717934524641157099916833587206) (= 2835717307 x1530) (= x1171 (> x1293 x1487)) (= x1227 (x311 (- x701 4))) (< 0 x71) (= (x1410 (x460 274184521717934524641157099916833587206) (x378 1) 0) x208) (= (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1227) (and (< x1227 64) (= true (<= x1227 57896044618658097711785492504343953926634992332820282019728792003956564819967)))) x1404) x1052 (= x701 x347) (not x1404) (not (= 826074471 x1530)) (>= 1461501637330902918203684832716283019655932542975 x1377) (= x1293 x1175) (= x875 (+ x1332 x810)) (= x48 76450787359836037641860180984291677749980919077056822294353438043884394381312) (= 1 x594) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1478) (= (x311 (- x1487 x1293)) x1164) (= x1293 x31) (= x1377 x1093) (= x1332 x1478) (< (+ x1478 x1175) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (not x1357) (= x1009 (x1410 (x460 274184521717934524641157099916833587206) (x378 1) 0)) (= 274184521717934524641157099916833587206 x493) (= 32 x1512) (= x1441 x1377) (not (= x1530 649617121))) x283))) x215))
(assert (= (or x1343 x632) x406))
(assert (x1212 x471))
(assert (x678 x1377))
(assert (x1212 x920))
(assert (not x77))
(assert (= x750 x240))
(assert (x1212 x199))
(assert (= (x1351 192) (x652 192)))
(assert (x1212 x501))
(assert (x1212 x794))
(assert (=> (< (- x354 1) 10000) (= (x460 x354) (x378 x354))))
(assert (x1212 x508))
(assert (= 2764855426 (x746 (x378 2764855426))))
(assert (= (x746 (x460 x528)) x528))
(assert (x1212 x1560))
(assert (x1212 x1300))
(assert (x1212 x227))
(assert (x1212 x1113))
(assert (=> (> (+ 10000 1) x802) (= (x460 x802) (x378 x802))))
(assert (x1212 x1105))
(assert (x1212 x574))
(assert (x1212 x849))
(assert true)
(assert (x1212 x921))
(assert (= x545 (x746 (x460 x545))))
(assert (x1212 x428))
(assert (= (x310 x674) 0))
(assert (=> (< (- x287 1) 10000) (= (x378 x287) (x460 x287))))
(assert (x1212 x1322))
(assert (=> (> (+ 10000 1) x660) (= (x378 x660) (x460 x660))))
(assert (x905 x1338 x1234))
(assert (= x781 (and x584 x1317)))
(assert (= x20 (and (not x1052) x1266)))
(assert (x678 x168))
(assert (=> (< (- x547 1) 10000) (= (x378 x547) (x460 x547))))
(assert (= (x378 635128645) (x460 635128645)))
(assert (=> (< (- x290 1) 10000) (= (x378 x290) (x460 x290))))
(assert (x1212 x369))
(assert (=> (< (- x825 1) 10000) (= (x378 x825) (x460 x825))))
(assert (x1212 x1252))
(assert (x1212 x1312))
(assert (= (x1064 160) (ite (and x1264 x1569) (x1149 160) (x1109 160))))
(assert (x678 x92))
(assert (x1212 x234))
(assert (x678 x1019))
(assert (= x1016 (x746 (x460 x1016))))
(assert (x1212 x1308))
(assert (=> (> (+ 10000 1) x864) (= (x460 x864) (x378 x864))))
(assert (= (x746 (x460 x139)) x139))
(assert (x1212 x1270))
(assert (x1212 x1006))
(assert (x1212 x54))
(assert (= 0 (x310 x758)))
(assert (x1212 x1497))
(assert (x1212 x524))
(assert (= (x746 (x378 2835717307)) 2835717307))
(assert (=> (< (- x157 1) 10000) (= (x378 x157) (x460 x157))))
(assert (=> (> (+ 10000 1) x23) (= (x460 x23) (x378 x23))))
(assert (x678 x618))
(assert (= x917 (x746 (x460 x917))))
(assert (x1212 x1055))
(assert (=> (< (- x1019 1) 10000) (= (x460 x1019) (x378 x1019))))
(assert (= (and x1516 x81) x495))
(assert (x1212 x348))
(assert (x1212 x1083))
(assert (=> (< (- x434 1) 10000) (= (x460 x434) (x378 x434))))
(assert (= x942 x882))
(assert (x678 x879))
(assert (x1212 x566))
(assert (=> (< (- x1381 1) 10000) (= (x378 x1381) (x460 x1381))))
(assert (x763 x1323))
(assert (= (x378 1968616202) (x460 1968616202)))
(assert (x1212 x17))
(assert (x678 x1384))
(assert (x1212 x858))
(assert (= (x746 (x460 x34)) x34))
(assert (= x1395 (x746 (x460 x1395))))
(assert (x678 x417))
(assert (x1212 x1359))
(assert (= (x460 1889567281) (x378 1889567281)))
(assert (= x340 (=> (= x704 0) x713)))
(assert (= x615 (x746 (x460 x615))))
(assert (x1212 x253))
(assert (x1212 x174))
(assert (x1212 x1000))
(assert (x1212 x186))
(assert (x1212 x1186))
(assert (= x730 (x746 (x460 x730))))
(assert (x678 x591))
(assert (= 274184521717934524641157099916833587206 (x746 (x460 274184521717934524641157099916833587206))))
(assert (x1212 x319))
(assert (x1212 x718))
(assert (x678 x295))
(assert (x1212 x820))
(assert (x678 x280))
(assert (=> (> (+ 10000 1) x1183) (= (x460 x1183) (x378 x1183))))
(assert (x678 x1100))
(assert (=> (> (+ 10000 1) x248) (= (x460 x248) (x378 x248))))
(assert (= (x746 (x460 x952)) x952))
(assert (x678 x73))
(assert (= (x746 (x378 2939843472)) 2939843472))
(assert (= x844 (x746 (x460 x844))))
(assert (=> (> (+ 10000 1) x1170) (= (x378 x1170) (x460 x1170))))
(assert (x1212 x709))
(assert (= x63 (or x1434 x925)))
(assert (= (=> (= (= x504 274184521717934524641157099916833587214) x325) (and (=> (not x325) x320) (=> (and (= x1359 (x311 (- x318 4))) (= (> x718 x708) x715) (= x14 x997) (= x399 (x416 x812)) (= x1172 (>= (+ x399 x833) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= x1476 x318) (< (+ x399 x833) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (<= x708 115792089237316195423570985008687907853269984665640564039457584007913129639935) (not (= 649617121 x1497)) (= x1460 (x454 (x460 274184521717934524641157099916833587214))) (< 0 x1460) (= (x1410 (x460 x14) (x378 1) 0) x239) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x399) (>= x708 0) (= x427 x833) (= x318 68) (= x1449 274184521717934524641157099916833587206) (not x715) (= x833 x718) (<= x14 1461501637330902918203684832716283019655932542975) (= x1308 1) (= (x1410 (x460 x14) (x378 1) 0) x812) (= 2835717307 x1497) (not (> 649617121 x1497)) (= x513 x601) (= (+ x427 x228) x673) (= x399 x228) (= (x1410 (x460 274184521717934524641157099916833587206) (x378 1) 0) x1534) (= x708 (x502 x1534)) (= x202 x718) (= (< x708 x833) x396) (= (or (and (< x1359 64) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1359))) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1359)) x597) (not x396) (not (= x1497 826074471)) (= x1546 x14) (not x1172) (not (< x318 4)) (not (= 1889567281 x1497)) (not x597) (= x794 (x311 (- x708 x718))) (= x1440 76450787359836037641860180984291677749980919077056822294353438043884394381312) (>= x399 0) x325 (not (= x1497 2514000705)) (= x851 (x1410 (x460 274184521717934524641157099916833587206) (x378 1) 0)) (= 274184521717934524641157099916833587206 x292) (= 32 x1364)) x365))) x537))
(assert (x1212 x1019))
(assert (x678 x1165))
(assert (= x55 (x746 (x460 x55))))
(assert (=> (< (- x672 1) 10000) (= (x378 x672) (x460 x672))))
(assert (x678 x1169))
(assert (x1212 x237))
(assert (x1212 x367))
(assert (x1212 x1348))
(assert (x1212 x872))
(assert (x678 x1004))
(assert (= (x746 (x460 x873)) x873))
(assert (= (x746 (x460 x274)) x274))
(assert (x678 x598))
(assert (x1212 x1454))
(assert (x1212 x287))
(assert (=> (> (+ 10000 1) x1377) (= (x378 x1377) (x460 x1377))))
(assert (x1212 x225))
(assert (x1212 x4))
(assert (x678 x819))
(assert (x678 x441))
(assert (= x1185 (x74 160)))
(assert (x1212 x1025))
(assert (x1212 x1066))
(assert (=> (> (+ 10000 1) x134) (= (x378 x134) (x460 x134))))
(assert (x1212 x92))
(assert (= (x310 x265) 0))
(assert (= x1491 (x746 (x460 x1491))))
(assert (x1212 x12))
(assert (x1153 x742 x959 x16 x275))
(assert (=> (> (+ 10000 1) x168) (= (x460 x168) (x378 x168))))
(assert (= x990 x1120))
(assert (x1212 x434))
(assert (x1212 x1043))
(assert (x1212 x181))
(assert (x678 x471))
(assert (= x1358 (x746 (x460 x1358))))
(assert (x1212 x1331))
(assert (=> (> (+ 10000 1) x36) (= (x460 x36) (x378 x36))))
(assert (x1212 x480))
(assert (x1212 x1056))
(assert (=> (< (- x952 1) 10000) (= (x378 x952) (x460 x952))))
(assert (x1212 x1444))
(assert (= (x310 x1195) 0))
(assert (x1212 x1223))
(assert (= x1120 x745))
(assert (=> (> (+ 10000 1) x629) (= (x378 x629) (x460 x629))))
(assert (= (x746 (x460 x290)) x290))
(assert (= x1138 (x746 (x460 x1138))))
(assert (= (x1240 x837) 0))
(assert (=> (< (- x468 1) 10000) (= (x460 x468) (x378 x468))))
(assert (=> (< (- x527 1) 10000) (= (x460 x527) (x378 x527))))
(assert (x1212 x864))
(assert (x1212 x1526))
(assert (x1212 x1074))
(assert (x1212 x1148))
(assert (= (x460 69947311) (x378 69947311)))
(assert (=> (> (+ 10000 1) x1395) (= (x460 x1395) (x378 x1395))))
(assert (x1212 x14))
(assert (x905 x161 x367))
(assert (x1212 x1325))
(assert (=> (< (- x1057 1) 10000) (= (x378 x1057) (x460 x1057))))
(assert (x1212 x646))
(assert (x1212 x1510))
(assert (= x623 (x746 (x460 x623))))
(assert (= x60 (x746 (x460 x60))))
(assert (x678 x1040))
(assert (= (x887 x517) (ite (and (not x1010) x617) (x1063 x517) (x1101 x517))))
(assert (x1212 x629))
(assert (x1212 x1513))
(assert (x1212 x1165))
(assert (x1212 x31))
(assert (x678 x694))
(assert (=> (> (+ 10000 1) x1105) (= (x378 x1105) (x460 x1105))))
(assert (=> (< (- x201 1) 10000) (= (x378 x201) (x460 x201))))
(assert (x1212 x204))
(assert (x678 x651))
(assert (x763 x1510))
(assert (x1212 x248))
(assert (= x1384 (x746 (x460 x1384))))
(assert (x678 x1489))
(assert (x678 x1542))
(assert (x1212 x1281))
(assert (x1212 x896))
(assert (=> (> (+ 10000 1) x1145) (= (x460 x1145) (x378 x1145))))
(assert (x678 x657))
(assert (x1212 x955))
(assert (x1212 x1185))
(assert (=> (< (- x1110 1) 10000) (= (x378 x1110) (x460 x1110))))
(assert (= (x746 (x460 x585)) x585))
(assert (x678 x917))
(assert (x1212 x207))
(assert (x678 x547))
(assert (x763 1461501637330902918203684832716283019655932542975))
(assert (= (ite (and (not x752) x1568 (not x1162) x387) (x1065 x903) (ite (and x1568 (not x1162) (not x387)) (x1326 x903) (ite (and x1568 x1162) (x1326 x903) (x1140 x903)))) (x737 x903)))
(assert (x1212 x1457))
(assert (= x1090 (=> (and (= (= x504 274184521717934524641157099916833587218) x1446) (= (< x243 115792089237316195423570985008687907853269984665640564039457584007913129639936) x30) (= x526 (x316 (x460 x504))) x30 (= x590 (x83 (x460 274184521717934524641157099916833587206))) (= x1476 x1008) (= x1087 (x83 (x460 274184521717934524641157099916833587206))) x1505 (= (>= x1087 0) x383) (= x243 (x83 (x460 x504))) (= (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x316 (x460 x504))) x1505) x383) (and (=> (and (not x1382) (= x88 274184521717934524641157099916833587206) (= x807 (+ x1464 x1563)) (<= x170 115792089237316195423570985008687907853269984665640564039457584007913129639935) (not x297) (not x995) (not (= 2514000705 x1536)) (not (= x1536 826074471)) (<= x327 1461501637330902918203684832716283019655932542975) (not (= 649617121 x1536)) (not (= 1889567281 x1536)) (<= x225 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x1410 (x460 x327) (x378 1) 0) x1254) (= x1464 x225) (<= 0 x170) (= x1382 (>= (+ x225 x184) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= 2835717307 x1536) (= x1476 x78) (not (> 649617121 x1536)) (= x78 68) (= (x1410 (x460 274184521717934524641157099916833587206) (x378 1) 0) x580) (= x1370 x1411) (= (x1410 (x460 x327) (x378 1) 0) x22) (= x1300 x184) (= (< x170 x1300) x297) (= x1300 x202) (< 0 x582) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x184 x225)) (= (< x170 x184) x995) (= 1 x1308) (= x1290 (x1410 (x460 274184521717934524641157099916833587206) (x378 1) 0)) (>= x225 0) (= x1563 x184) x1446 (= 76450787359836037641860180984291677749980919077056822294353438043884394381312 x1031) (= x327 x630) (not (> 4 x78)) (= x327 x997) (= x225 (x470 x1254)) (= x1304 (x311 (- x78 4))) (= 274184521717934524641157099916833587206 x855) (= x1423 (x311 (- x170 x1300))) (not x1571) (= x1364 32) (= x582 (x454 (x460 274184521717934524641157099916833587218))) (= (x29 x1290) x170) (= x1571 (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1304) (and (< x1304 64) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1304) true))))) x365) (=> (not x1446) x537)))))
(assert (x678 x214))
(assert (x1212 x1031))
(assert (= (x746 (x460 x948)) x948))
(assert (=> (> (+ 10000 1) x545) (= (x378 x545) (x460 x545))))
(assert (x1212 x1173))
(assert (= (=> (= (< 0 x804) x65) (and (=> (not x65) x1439) (=> x65 x452))) x472))
(assert (x1212 x157))
(assert (x1212 x5))
(assert (=> (> (+ 10000 1) x504) (= (x460 x504) (x378 x504))))
(assert (= (x746 (x460 x468)) x468))
(assert (x1212 x75))
(assert (x1212 x447))
(assert (= 0 (x1101 x517)))
(assert (= (and (not x658) x556) x1228))
(assert (x1212 x298))
(assert (x1212 x755))
(assert (= x8 (x746 (x460 x8))))
(assert (= x1363 (and x467 x240)))
(assert (x1212 x773))
(assert (= (or (and x736 x1446) (and x325 x1091)) x617))
(assert (x1212 x1178))
(assert (= (=> (= x1056 x1186) x1340) x964))
(assert (= 0 (x1240 x650)))
(assert (x1212 x1013))
(assert (x1212 x1279))
(assert (=> (> (+ 10000 1) x1100) (= (x460 x1100) (x378 x1100))))
(assert (x1212 x25))
(assert (x1212 x13))
(assert (x1212 x1391))
(assert (= x1409 x212))
(assert (x1212 x1475))
(assert (x678 x1457))
(assert (= (x1149 192) 0))
(assert (x1212 x177))
(assert (x1212 x1183))
(assert (= (x746 (x460 x415)) x415))
(assert (= x37 (x746 (x460 x37))))
(assert (x1212 x1203))
(assert (= x373 (x746 (x460 x373))))
(assert (x678 x337))
(assert (= x583 (x746 (x460 x583))))
(assert (= (or (and (not x1005) x1380) (and (not x1317) x584)) x1434))
(assert (= (x746 (x460 x849)) x849))
(assert (x1212 x278))
(assert (x1212 x1573))
(assert (x1212 x1076))
(assert (x1212 x1323))
(assert (x1212 x483))
(assert (x1212 x1104))
(assert (x1212 x767))
(assert (x678 x434))
(assert (x1212 x696))
(assert (= 274184521717934524641157099916833587214 (x746 (x460 274184521717934524641157099916833587214))))
(assert (x1212 x1033))
(assert (= (x746 (x460 x1485)) x1485))
(assert (x678 x545))
(assert (x1212 x957))
(assert (x678 x574))
(assert (x1212 x551))
(assert (= (x1433 x619) (ite (and x515 x579) (x661 x619) (ite (and x515 (not x579) x392) (x1303 x619) (x1190 x619)))))
(assert (x678 x825))
(assert (x1212 x1395))
(assert (x1212 x147))
(assert (x1212 x363))
(assert (x1212 x906))
(assert (= x1126 (x746 (x460 x1126))))
(assert (= (x1166 x84) (ite (= x145 x84) x194 (x737 x84))))
(assert (= (x378 115792089237316195423570985008687907853269984665640564039457) (x460 115792089237316195423570985008687907853269984665640564039457)))
(assert (x1212 x936))
(assert (= (x746 (x460 x326)) x326))
(assert (x1212 x499))
(assert (=> (< (- x889 1) 10000) (= (x378 x889) (x460 x889))))
(assert (x1212 x1112))
(assert (= (x746 (x460 x327)) x327))
(assert (= (x746 (x460 x885)) x885))
(assert (= x808 (=> (and (or (and x540 (= 0 x119) (= 0 x960)) (and (= x940 (x1410 (x460 x1384) x1214 0)) (= x328 (x1410 (x460 x706) (x378 9) 0)) (= x119 x1270) (not x540) (= x960 1) (>= x1270 0) (= x1270 (x45 x940)) (= (x1259 1461501637330902918203684832716283019655932542975 x198) x440) (= (x1410 (x460 x440) x328 0) x1214) (= x1384 (x1259 1461501637330902918203684832716283019655932542975 x1510)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1270))) (= x540 (= x706 0))) x836)))
(assert (x1212 x1069))
(assert (x1212 x1164))
(assert (x1212 x1202))
(assert (x678 x1491))
(assert (x1212 x1295))
(assert (x1212 x201))
(assert (= (or (and (not x65) x209) (and x627 x1558) (and (not x503) x495)) x1343))
(assert (x1212 x581))
(assert (= true x76))
(assert (= (and x167 x1146) x584))
(assert (=> (< (- x1069 1) 10000) (= (x460 x1069) (x378 x1069))))
(assert (x1212 x1304))
(assert (x1212 x1039))
(assert (= x690 (=> (and (<= 0 x1280) (= (x586 x116) x1280) (<= x1280 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x1410 (x460 x1375) x792 0) x116) (= x792 (x1410 (x460 x1348) (x378 6) 0)) (= (= 0 x1280) x1005) (= (x1259 1461501637330902918203684832716283019655932542975 x198) x1375)) (and (=> (and (= x428 x1348) (not x1005)) x1556) (=> (and x1005 (= (x311 (- x1348 1)) x1402) (not x523) (= x523 (< 0 x1402))) x218)))))
(assert (x763 x161))
(assert (x1212 x223))
(assert (= (x737 x1041) (ite (and (not x1162) x387 (not x752) x1568) (x1065 x1041) (ite (and (not x387) (not x1162) x1568) (x1326 x1041) (ite (and x1568 x1162) (x1326 x1041) (x1140 x1041))))))
(assert (= (x746 (x460 x295)) x295))
(assert (x1212 x405))
(assert (x1212 x28))
(assert (=> (> (+ 10000 1) x1564) (= (x378 x1564) (x460 x1564))))
(assert (= (x746 (x460 x248)) x248))
(assert (x1212 x1284))
(assert (x1212 x423))
(assert (x1212 x1195))
(assert (= x1371 x296))
(assert (x1212 x288))
(assert (x1212 x1578))
(assert (x1212 x134))
(assert (= (x378 2960351575) (x460 2960351575)))
(assert (= (x746 (x460 x1105)) x1105))
(assert (x1212 x1050))
(assert (x1212 x706))
(assert (x1212 x290))
(assert (= (or (and (not x1575) x233) (and (not x1225) x49)) x902))
(assert (x1212 x1234))
(assert (x1212 x1075))
(assert (x1212 x154))
(assert (= 0 (x310 x1578)))
(assert (= (ite (and (not x1162) x387 (not x752) x1568) (x1065 x145) (ite (and (not x387) (not x1162) x1568) (x1326 x145) (ite (and x1162 x1568) (x1326 x145) (x1140 x145)))) (x737 x145)))
(assert (x678 x289))
(assert (= (=> (and (= x376 x1221) (= x434 x1288)) x1398) x1430))
(assert (= x819 (x746 (x460 x819))))
(assert (=> (< (- x704 1) 10000) (= (x460 x704) (x378 x704))))
(assert (x1212 x1192))
(assert (=> (> (+ 10000 1) x417) (= (x460 x417) (x378 x417))))
(assert (= x168 (x746 (x460 x168))))
(assert (= (x378 1000000000000000000) (x460 1000000000000000000)))
(assert (x1212 x8))
(assert (x1212 x1428))
(assert (x1212 x1291))
(assert (x678 x936))
(assert (= x1019 (x746 (x460 x1019))))
(assert (x1212 x536))
(assert (x678 x1012))
(assert (x678 x1475))
(assert (= x334 (x746 (x460 x334))))
(assert (=> (< (- x1078 1) 10000) (= (x378 x1078) (x460 x1078))))
(assert (= (x746 (x460 x280)) x280))
(assert (x1212 x1121))
(assert (x1212 x178))
(assert (=> (< (- x1491 1) 10000) (= (x460 x1491) (x378 x1491))))
(assert (= (x378 2835717307) (x460 2835717307)))
(assert (x1212 x202))
(assert (= (=> (and (= x771 (x1020 x555)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x771) (not (< x1131 2690754053)) (> x1376 0) (< x1131 2960351575) (= x1376 (x454 (x460 274184521717934524641157099916833587206))) (= x1406 x771) (>= x771 0) (= x1131 2798343961) (= x555 (x1410 (x460 x287) x1147 0)) (not (= x1131 2743102681)) (<= x287 1461501637330902918203684832716283019655932542975) (not (= 2764855426 x1131)) (= (x1410 (x460 x214) (x378 5) 0) x1147) (not (= 2690754053 x1131)) (not (> 2293535753 x1131))) (=> (and (= x1078 x868) (= x1199 x104) (= x1288 x1100) (= x1406 x1374) (= x376 x739)) x775)) x1548))
(assert (x1212 x541))
(assert (x678 x835))
(assert (x678 x504))
(assert (x1212 x73))
(assert (= x722 x1276))
(assert (x1212 x1318))
(assert (x1212 x1517))
(assert (x1212 x845))
(assert (x1212 x1061))
(assert (x763 x367))
(assert (x678 x753))
(assert (x1212 x1067))
(assert (x1212 x572))
(assert (= x836 (=> (and (= (= 0 x119) x579) (or (and (= (x1410 (x460 x741) x1392 0) x138) (= x375 x1393) (= x626 (x1259 1461501637330902918203684832716283019655932542975 x198)) (= (x1259 1461501637330902918203684832716283019655932542975 x1510) x741) (= (x1410 (x460 x1491) (x378 7) 0) x90) x579 (= x1392 (x1410 (x460 x626) x90 0))) (and (= (x635 x131) x6) (= (> x432 x1250) x1229) (not x579) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x6) (= (x1410 (x460 x730) x891 0) x770) (= x412 (x1552 x898)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1250) (= x730 (x1259 1461501637330902918203684832716283019655932542975 x198)) (= (x1320 x872) x432) (or (and (or (and (= x205 x957) x1118 (= (x1320 x872) x957)) (and (= x1075 x205) (not x1118))) x1229 (= (= x1250 0) x374) (= x1118 (> x1075 x357)) (or (and (= (x311 (- x205 x186)) x176) (= x186 (x1408 x375)) x374 (= x1306 x176) (not (< x205 x186))) (and (= x1306 x59) (= (x311 (- x205 x1250)) x1017) (not x374) (= 604800 x178) (= (ite (> 604800 x1017) x1017 604800) x59) (not (< x205 x1250)))) (= (x1320 x872) x357)) (and (not x1229) (= 0 x1306))) (<= x412 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x1245 x1529) x1250) (or (and (>= x1037 0) (= x200 x1037) (= x1420 (x1410 (x460 x288) x1508 0)) (= (x1410 (x460 x471) x568 0) x128) (= x1319 x1417) (= (x11 x128) x1037) (= x567 (x1410 (x460 x1491) (x378 3) 0)) (= x290 (x1259 1461501637330902918203684832716283019655932542975 x198)) (= x377 (x1259 1461501637330902918203684832716283019655932542975 x1510)) (= (x1410 (x460 x1491) (x378 7) 0) x1508) (= (x1410 (x460 x377) x1420 0) x593) (= x1393 x1188) (= x288 (x1259 1461501637330902918203684832716283019655932542975 x198)) (= x1417 (* x1306 x119)) (not x392) (= (x1259 1461501637330902918203684832716283019655932542975 x1510) x471) (= x99 (+ x200 x258)) (= (x1410 (x460 x290) x567 0) x568) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x1037 x1319)) (= x258 x1319) (< (* x1306 x119) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1037)) (and (= (x1259 1461501637330902918203684832716283019655932542975 x198) x373) (= (x1410 (x460 x1040) x314 0) x1525) x392 (= (x1410 (x460 x373) x963 0) x314) (= x963 (x1410 (x460 x1491) (x378 7) 0)) (= x1393 x1188) (= x1040 (x1259 1461501637330902918203684832716283019655932542975 x1510)))) (= (x1095 x898 1) x131) (= x872 (x546 (+ x447 160))) (= x1048 (x1259 1461501637330902918203684832716283019655932542975 x1510)) (= (x1410 (x460 x1048) x770 0) x1529) (<= 0 x6) (= x898 (x1410 (x460 x1491) (x378 1) 0)) (= x392 (= x1306 0)) (= x891 (x1410 (x460 x1491) (x378 7) 0)) (>= x412 0) (<= 0 x1250) (= (x546 (+ x447 192)) x1188))) (or x364 (and (= x512 (x1410 (x460 x1491) (x378 9) 0)) (not x364) (= x753 (x1259 1461501637330902918203684832716283019655932542975 x198)) (= (x1410 (x460 x753) x512 0) x909) (= (x1410 (x460 x835) x909 0) x970) (= (x1259 1461501637330902918203684832716283019655932542975 x1510) x835))) (= x364 (= x960 0))) x732)))
(assert (=> (> (+ 10000 1) x506) (= (x460 x506) (x378 x506))))
(assert (=> (> (+ 10000 1) x1489) (= (x378 x1489) (x460 x1489))))
(assert (= x1114 (or (and (not x625) x803) (and x622 (not x285)))))
(assert (x1212 x1536))
(assert (x1212 x825))
(assert (= (=> (and (<= 0 x101) (<= x101 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x1281 2743102681) (= (x1410 (x460 x1170) x394 0) x1533) (<= x547 1461501637330902918203684832716283019655932542975) (= x1412 (x454 (x460 274184521717934524641157099916833587206))) (not (= x1281 2690754053)) (> 2960351575 x1281) (not (> 2690754053 x1281)) (= x101 (x11 x1554)) (= x1080 x101) (>= 1461501637330902918203684832716283019655932542975 x1170) (not (> 2293535753 x1281)) (= x1554 (x1410 (x460 x547) x1533 0)) (= x394 (x1410 (x460 x1138) (x378 3) 0)) (> x1412 0)) (=> (and (= x376 x417) (= x237 x1080) (= x657 x104) (= x868 x623) (= x1288 x591)) x1292)) x789))
(assert (= x591 (x746 (x460 x591))))
(assert (= x14 (x746 (x460 x14))))
(assert (x1212 x639))
(assert (x1212 x1122))
(assert (x1212 x117))
(assert (=> (< (- x917 1) 10000) (= (x460 x917) (x378 x917))))
(assert (= (x460 826074471) (x378 826074471)))
(assert (x678 x602))
(assert (x678 x804))
(assert (x1212 x1445))
(assert (= x739 (x746 (x460 x739))))
(assert (= (x460 649617121) (x378 649617121)))
(assert (x1212 x1233))
(assert (= (x746 (x378 2868243304)) 2868243304))
(assert (= (x746 (x460 x889)) x889))
(assert (x1212 x855))
(assert (x1212 x670))
(assert (x678 x510))
(assert (x1212 x1071))
(assert (= x665 (=> (and (= (x1245 x401) x1309) (not (= 635128645 x110)) (<= x541 1461501637330902918203684832716283019655932542975) (= (x1410 (x460 x1002) (x378 7) 0) x628) (< 0 x1513) (= (x1410 (x460 x157) x916 0) x401) (= x1513 (x454 (x460 274184521717934524641157099916833587206))) (<= 0 x1309) (= x110 759532456) (not (< x110 468353030)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1309) (< x110 911411945) (> 2293535753 x110) (= (x1410 (x460 x541) x628 0) x916) (>= 1461501637330902918203684832716283019655932542975 x157) (not (= x110 468353030)) (= x142 x1309)) (=> (and (= x1126 x1288) x1099 (= x1395 x376) (= x142 x561) (= (>= x561 x1068) x1099)) x1107))))
(assert (x1212 x1377))
(assert (x678 x1502))
(assert (= (x746 (x378 87118632)) 87118632))
(assert (= x722 x1371))
(assert (x1212 x1080))
(assert (x678 x440))
(assert (=> (< (- x337 1) 10000) (= (x460 x337) (x378 x337))))
(assert (x1212 x101))
(assert (x1212 x206))
(assert (x1212 x1476))
(assert (=> (< (- x1012 1) 10000) (= (x378 x1012) (x460 x1012))))
(assert (= (x135 x650) (ite (and x617 (not x1010)) (x1152 x650) (x1240 x650))))
(assert (x1212 x606))
(assert (x1212 x835))
(assert (= 649617121 (x746 (x378 649617121))))
(assert (= (x746 (x460 x961)) x961))
(assert (x678 x885))
(assert (x678 x327))
(assert (= (x460 115792089237316195423570985008687907853269984665640564039457584007913129639935) (x378 115792089237316195423570985008687907853269984665640564039457584007913129639935)))
(assert (x1212 x694))
(assert (=> (> (+ 10000 1) x873) (= (x378 x873) (x460 x873))))
(assert (= (x746 (x378 1461501637330902918203684832716283019655932542975)) 1461501637330902918203684832716283019655932542975))
(assert (x1212 x1535))
(assert (= x847 (=> (and (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x863)) (= x871 (> x804 x1135)) (= (x546 (+ 1 x1491)) x804)) (and (=> (and (= x621 x177) x871) x1220) (=> (not x871) x1514)))))
(assert (x678 x1016))
(assert (= (ite (and x1568 x183) (x1020 x644) (x1036 x644)) (x113 x644)))
(assert (x1212 x1415))
(assert (x1212 x358))
(assert (x1212 x511))
(assert (x1212 x1158))
(assert (x1212 x1520))
(assert (x1212 x250))
(assert (x678 x1078))
(assert (x1212 x578))
(assert (=> (< (- x574 1) 10000) (= (x460 x574) (x378 x574))))
(assert (x1212 x104))
(assert (x678 x1057))
(assert (= (x746 (x460 x1169)) x1169))
(assert (x1212 x802))
(assert (= x23 (x746 (x460 x23))))
(assert (x1212 x1413))
(assert (x1212 x685))
(assert (= (x746 (x460 x1539)) x1539))
(assert (= x1165 (x746 (x460 x1165))))
(assert (= x753 (x746 (x460 x753))))
(assert (= x1069 (x746 (x460 x1069))))
(assert (= (x746 (x378 115792089237316195423570985008687907853269984665640564039457)) 115792089237316195423570985008687907853269984665640564039457))
(assert (= x1538 x1264))
(assert (=> (< (- x327 1) 10000) (= (x378 x327) (x460 x327))))
(assert (x1212 x176))
(assert (= x942 x1276))
(assert (= x1048 (x746 (x460 x1048))))
(assert (= x574 (x746 (x460 x574))))
(assert (= (x460 274184521717934524641157099916833587206) (x378 274184521717934524641157099916833587206)))
(assert (x1212 x638))
(assert (x1212 x1131))
(assert (x1212 x1260))
(assert (x678 x112))
(assert (= (x378 2743102681) (x460 2743102681)))
(assert (= x629 (x746 (x460 x629))))
(assert (x1212 x1384))
(assert (x1212 x885))
(assert (x678 x147))
(assert (x1212 x168))
(assert (x678 x326))
(assert (= (or x902 x241) x47))
(assert (x1212 x757))
(assert (x1212 x527))
(assert (x1212 x657))
(assert (= x49 (and x1557 x1363)))
(assert (= (x746 (x460 x1145)) x1145))
(assert (= x1220 (=> (= (< 0 x46) x395) (and (=> (not x395) x1430) (=> (and (= x202 (x962 160)) (= x1329 (x454 (x460 x504))) x1133 (= (x546 (+ x621 100)) x1302) (= (x546 (+ x656 128)) x497) (<= x504 1461501637330902918203684832716283019655932542975) (< 0 x46) (= x58 (< 0 x1008)) (= x756 (< x1008 x1)) (or (and x756 (= x1192 (x546 (+ x1008 x497)))) (not x756)) (= x1323 (x50 x1291)) (= (x546 (+ x621 36)) x656) (or (and (= (x747 x674) x930) (= x497 x800) (or (and (= x1 32) (not x1062)) (and (= (x546 (+ 96 x1302)) x1127) (or (and (= x1 64) (not x221)) (and (= (x546 (+ 96 x621)) x797) x221 (or (and (= x1 96) (not x697)) (and (not x969) x697 (= x969 (< 128 x1008)) (= (x546 (+ x1302 160)) x686) (= x348 (x747 x1445)) (= x1 128) (= (x546 (+ 128 x621)) x1445))) (= (x546 (+ 128 x1302)) x640) (= x877 (x747 x797)) (= (< 96 x1008) x697))) (= (x747 x1043) x358) (= x1043 (x546 (+ 64 x621))) (= (< 64 x1008) x221) x1062)) (= x674 x1291) x58 (= x1062 (> x1008 32))) (and (= 0 x1) (not x58))) (= (x546 (+ 76450787359836037641860180984291677749980919077056822294353438043884394381312 x709)) x9) (= (> x1329 0) x1133) (= x1243 (x429 128)) (< 0 x1243) (= x799 x1482) (= x1008 (x723 x621)) x395 (= (x381 x1482) x504) (= (x1259 1461501637330902918203684832716283019655932542975 x1510) x997) (= (x1259 26959946667150639794667015087019630673637144422540572481103610249215 x1323) x709) (= x1291 (x546 (+ x621 32))) (= x1385 0) (= (x311 (- x820 32)) x975) (= x820 (x311 (- x1302 x621))) (= (x546 (+ x621 68)) x421)) x1090)))))
(assert (x678 x583))
(assert (= (x746 (x378 911411945)) 911411945))
(assert (= (x746 (x460 x289)) x289))
(assert (x1212 x875))
(assert (x1212 x599))
(assert (x1212 x814))
(assert (= x233 (and x1576 x109)))
(assert (x1212 x1057))
(assert (= x1502 (x746 (x460 x1502))))
(assert (= 69947311 (x746 (x378 69947311))))
(assert (= x1275 (=> (and (= (x1410 (x460 x694) x232 0) x979) (> 911411945 x1086) (> x549 0) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1479) (> 2293535753 x1086) (>= x1479 0) (= x1305 x1479) (= x1086 69947311) (>= 1461501637330902918203684832716283019655932542975 x694) (< x1086 468353030) (= (x1410 (x460 x92) (x378 10) 0) x232) (= (x454 (x460 274184521717934524641157099916833587206)) x549) (= x1479 (x424 x979))) (=> (and (= x1288 x1016) (= x1117 x1305) (= x583 x104) (= x441 x376)) x67))))
(assert (x1212 x666))
(assert (x1212 x776))
(assert (x1212 x302))
(assert (x678 x354))
(assert (x1212 x1515))
(assert (x1212 x437))
(assert (= 2514000705 (x746 (x378 2514000705))))
(assert (= x835 (x746 (x460 x835))))
(assert (x1212 x184))
(assert (x1212 x1035))
(assert (x1212 x971))
(assert (x1212 x853))
(assert (=> (< (- x1519 1) 10000) (= (x378 x1519) (x460 x1519))))
(assert (= (and x622 x285) x965))
(assert (x678 x1221))
(assert (x1212 x1037))
(assert (x1212 x539))
(assert (= x51 (=> (= (> x1491 0) x1400) (and (=> x1400 x862) (=> (not x1400) x282)))))
(assert (x763 115792089237316195423570985008687907853269984665640564039457584007913129639904))
(assert (x1212 x431))
(assert (= x1082 (=> (and (<= x125 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x248 (x1259 1461501637330902918203684832716283019655932542975 x1510)) (= (x1259 1461501637330902918203684832716283019655932542975 x198) x952) (<= 0 x125) (not (< x125 x863)) (= x1163 (x1410 (x460 x952) x18 0)) (<= 0 x773) (= (x1410 (x460 x1491) (x378 7) 0) x18) (= x1094 (x1410 (x460 x248) x1163 0)) (= (< 0 x773) x636) (= x773 (x1245 x1094)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x773)) (and (=> (not x636) x51) (=> (and (= x119 x881) x636 (= x960 0) (= (x1259 1461501637330902918203684832716283019655932542975 x1510) x1183) (= (x1410 (x460 x172) x317 0) x329) (>= x881 0) (= x172 (x1259 1461501637330902918203684832716283019655932542975 x198)) (<= x881 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x881 (x45 x554)) (= (x1410 (x460 x1491) (x378 9) 0) x317) (= x554 (x1410 (x460 x1183) x329 0))) x836)))))
(assert (x678 x864))
(assert (=> (< (- x1358 1) 10000) (= (x378 x1358) (x460 x1358))))
(assert (= x172 (x746 (x460 x172))))
(assert (= x1125 (=> (and (not (< x13 2293535753)) (> 2960351575 x13) (>= x539 0) (= x654 (x1410 (x460 x334) x3 0)) (= x91 x539) (not (= 2743102681 x13)) (= x57 (x454 (x460 274184521717934524641157099916833587206))) (= 2798343961 x13) (> x57 0) (not (= x13 2690754053)) (= (x1020 x654) x539) (= x3 (x1410 (x460 x1246) (x378 5) 0)) (not (= x13 2764855426)) (>= 1461501637330902918203684832716283019655932542975 x334) (<= x539 115792089237316195423570985008687907853269984665640564039457584007913129639935) (not (> 2690754053 x13))) (=> (and (= x289 x376) (= x1288 x879) (= x91 x981) (= x104 x889)) x945))))
(assert (x1212 x521))
(assert (= x1367 (=> (= x1557 (> x804 0)) (and (=> (not x1557) x340) (=> x1557 x492)))))
(assert (=> (> (+ 10000 1) x139) (= (x378 x139) (x460 x139))))
(assert (x1212 x712))
(assert (= x598 (x746 (x460 x598))))
(assert (= (and x1545 x308) x167))
(assert (x1212 x1519))
(assert (x678 x1069))
(assert (x678 x1180))
(assert (x1212 x753))
(assert (= x506 (x746 (x460 x506))))
(assert (x1212 x730))
(assert (= (x746 (x460 x804)) x804))
(assert (x1212 x1175))
(assert (= (=> (and (= x496 (x11 x1426)) (< 0 x1113) (not (> 2293535753 x685)) (= x1247 x496) (not (= x685 2690754053)) (< x685 2960351575) (= 2743102681 x685) (= x1156 (x1410 (x460 x879) (x378 3) 0)) (not (> 2690754053 x685)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x496) (>= 1461501637330902918203684832716283019655932542975 x889) (= x516 (x1410 (x460 x289) x1156 0)) (= (x1410 (x460 x889) x516 0) x1426) (= (x454 (x460 274184521717934524641157099916833587206)) x1113) (<= 0 x496) (<= x289 1461501637330902918203684832716283019655932542975)) (=> (and (= x1247 x1526) (= x92 x1288) (= x376 x694) (= (>= x981 x1526) x1014)) x1275)) x945))
(assert (=> (< (- x1138 1) 10000) (= (x378 x1138) (x460 x1138))))
(assert (= (x746 (x378 635128645)) 635128645))
(assert (x678 x1348))
(assert (=> (< (- x1502 1) 10000) (= (x460 x1502) (x378 x1502))))
(assert (x1212 x408))
(assert (=> (< (- x1040 1) 10000) (= (x378 x1040) (x460 x1040))))
(assert (= x990 x973))
(assert (x1212 x1272))
(assert (x1212 x41))
(assert (=> (< (- x613 1) 10000) (= (x378 x613) (x460 x613))))
(assert (x1212 x119))
(assert (x1212 x1491))
(assert (= x1183 (x746 (x460 x1183))))
(assert (x1212 x526))
(assert (=> (< (- x591 1) 10000) (= (x378 x591) (x460 x591))))
(assert (=> (> (+ 10000 1) x1348) (= (x378 x1348) (x460 x1348))))
(assert (=> (< (- x471 1) 10000) (= (x378 x471) (x460 x471))))
(assert (x1212 x457))
(assert (x763 x198))
(assert (x1212 x263))
(assert (x763 x1338))
(assert (=> (> (+ 10000 1) x112) (= (x378 x112) (x460 x112))))
(assert (x678 x60))
(assert (= (x460 274184521717934524641157099916833587214) (x378 274184521717934524641157099916833587214)))
(assert (x1212 x1211))
(assert (x1212 x817))
(assert (x1212 x1040))
(assert (x1212 x205))
(assert (x1212 x1215))
(assert (x678 x1126))
(assert (= x704 (x746 (x460 x704))))
(assert (= (x460 2532887486) (x378 2532887486)))
(assert (= (=> (and (= (x1410 (x460 x1012) x1054 0) x720) (= (x1410 (x460 x1491) (x378 7) 0) x1054) (<= 0 x1456) (= x192 (x1410 (x460 x1105) x720 0)) (= (= x1456 0) x285) (= x1012 (x1259 1461501637330902918203684832716283019655932542975 x198)) (<= x1456 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x1456 (x1245 x192)) (= (x1259 1461501637330902918203684832716283019655932542975 x1510) x1105)) (and (=> (and (= x1491 x1104) (not x285)) x1274) (=> x285 x313))) x862))
(assert (=> (< (- x415 1) 10000) (= (x378 x415) (x460 x415))))
(assert (x678 x961))
(assert (=> (> (+ 10000 1) x818) (= (x460 x818) (x378 x818))))
(assert (=> (< (- x1180 1) 10000) (= (x460 x1180) (x378 x1180))))
(assert (x1212 x1258))
(assert (= x1501 (=> (= x21 (< 1 x46)) (and (=> (and (= (x546 (+ x1070 68)) x831) (= (x1157 x1578) x869) (= (x429 128) x1006) (= (x546 (+ x832 76450787359836037641860180984291677749980919077056822294353438043884394381312)) x391) (= x450 (< 0 x1203)) (= x1336 (x244 x1070)) (= x451 (x311 (- x675 32))) (= (x546 (+ x857 128)) x1260) (= x551 (x546 (+ x54 64))) (= x1578 (x546 (+ 32 x1070))) x21 (= (> x1066 x1336) x740) (= x670 0) (>= 1461501637330902918203684832716283019655932542975 x404) (= x832 (x1259 26959946667150639794667015087019630673637144422540572481103610249215 x869)) (= (x962 192) x31) (= (> x1336 0) x1297) (= (x546 (+ x1070 36)) x857) (= (x311 (- x666 x1070)) x675) (= x666 (x546 (+ 100 x1070))) x450 (> x46 1) (or (and x740 (= x38 (x546 (+ x1260 x1336)))) (not x740)) (= (x454 (x460 x404)) x1203) (< 1 x1006) (= (x1259 1461501637330902918203684832716283019655932542975 x1510) x1441) (= (x381 x551) x404) (or (and (not x1297) (= 0 x1066)) (and (= x1578 x758) (or (and (not x33) (= x1066 32)) (and (= (> x1336 64) x1567) (or (and (= (x633 x1195) x815) (= x42 (> x1336 96)) (or (and (= 96 x1066) (not x42)) (and (not x1335) x42 (= x265 (x546 (+ 128 x1070))) (= 128 x1066) (= (< 128 x1336) x1335) (= x1074 (x633 x265)) (= (x546 (+ x666 160)) x66))) x1567 (= (x546 (+ 128 x666)) x1543) (= (x546 (+ 96 x1070)) x1195)) (and (not x1567) (= 64 x1066))) (= x68 (x546 (+ 64 x1070))) (= x1463 (x546 (+ x666 96))) x33 (= (x633 x68) x1521))) (= x33 (< 32 x1336)) x1297 (= x604 x1260) (= (x633 x758) x596)))) x215) (=> (not x21) x1430)))))
(assert (x1212 x1294))
(assert (x1212 x318))
(assert (= x308 x515))
(assert (x1212 x1053))
(assert (= x938 x603))
(assert (=> (> (+ 10000 1) x1403) (= (x460 x1403) (x378 x1403))))
(assert (x1212 x591))
(assert (x1212 x710))
(assert (x1212 x549))
(assert (x1212 x758))
(assert (x1212 x1217))
(assert (x678 x23))
(assert (x678 x1238))
(assert (x1212 x602))
(assert (= x603 x882))
(assert (= (x460 87118632) (x378 87118632)))
(assert (x678 x457))
(assert (x1212 x1246))
(assert (x1212 x771))
(assert (x1212 x1406))
(assert (x678 x36))
(assert (x1212 x391))
(assert (= (and x1225 x49) x109))
(assert (x1212 x1330))
(assert (x678 x802))
(assert (= x212 x1038))
(assert (x1212 x1543))
(assert (x1212 x1288))
(assert (x1212 x1456))
(assert (=> (> (+ 10000 1) x1126) (= (x460 x1126) (x378 x1126))))
(assert (= (ite (and (not x1010) x617) (x1063 x978) (x1101 x978)) (x887 x978)))
(assert (x1212 x1319))
(assert (=> (> (+ 10000 1) x377) (= (x460 x377) (x378 x377))))
(assert (x678 x139))
(assert (x1212 x155))
(assert (= (x378 115792089237316195423570985008687907853269984665640564039457584007913129639904) (x460 115792089237316195423570985008687907853269984665640564039457584007913129639904)))
(assert (= (x378 2293535753) (x460 2293535753)))
(assert (x1212 x977))
(assert (x678 x849))
(assert (= x510 (x746 (x460 x510))))
(assert (=> (< (- x1475 1) 10000) (= (x460 x1475) (x378 x1475))))
(assert (= (x378 604800) (x460 604800)))
(assert (x1212 x598))
(assert (x1212 x476))
(assert (x1212 x1375))
(assert (x1212 x399))
(assert (= x157 (x746 (x460 x157))))
(assert (x678 x55))
(assert (= (ite (and x183 x1568) (x1020 x645) (x1036 x645)) (x113 x645)))
(assert (x1212 x506))
(assert (x1212 x596))
(assert (x1212 x592))
(assert (= (x746 (x460 x511)) x511))
(assert (= (x378 1461501637330902918203684832716283019655932542975) (x460 1461501637330902918203684832716283019655932542975)))
(assert (=> (< (- x295 1) 10000) (= (x460 x295) (x378 x295))))
(assert (x678 x404))
(assert (x1212 x130))
(assert (x678 x12))
(assert (x1212 x844))
(assert (=> (< (- x288 1) 10000) (= (x460 x288) (x378 x288))))
(assert (= (x310 x68) 0))
(assert (x1212 x294))
(assert (= (x737 x84) (ite (and (not x1162) x387 (not x752) x1568) (x1065 x84) (ite (and (not x1162) (not x387) x1568) (x1326 x84) (ite (and x1162 x1568) (x1326 x84) (x1140 x84))))))
(assert (x1212 x1453))
(assert (= (x310 x1043) 0))
(assert (x678 x672))
(assert (x678 x1310))
(assert (x1212 x280))
(assert (= (x746 (x460 x272)) x272))
(assert (x1212 x630))
(assert (x1212 x1306))
(assert (x1212 x1151))
(assert (x1212 x1512))
(assert (x1212 x1204))
(assert (=> (> (+ 10000 1) x1330) (= (x378 x1330) (x460 x1330))))
(assert (x1212 x1298))
(assert (x678 x288))
(assert (x678 x948))
(assert (= (or x941 (and x871 x698) (and x658 x556)) x801))
(assert (= x750 (or (and x133 x163) x406)))
(assert (= x1025 (x746 (x460 x1025))))
(assert (=> (< (- x1539 1) 10000) (= (x460 x1539) (x378 x1539))))
(assert (=> (< (- x585 1) 10000) (= (x460 x585) (x378 x585))))
(assert (=> (< (- x623 1) 10000) (= (x460 x623) (x378 x623))))
(assert (x1212 x493))
(assert (x1212 x477))
(assert (= x136 (=> (and (= x127 (<= x716 x144)) (= x127 x1296) (= x1344 x716)) x1296)))
(assert (= (x746 (x1095 x1570 1)) (+ 1 (x746 x1570))))
(assert (= x76 x1189))
(assert (x678 x706))
(assert (x763 x869))
(assert (x1212 x1393))
(assert (x1212 x143))
(assert (=> (< (- x1559 1) 10000) (= (x460 x1559) (x378 x1559))))
(assert (=> (< (- x510 1) 10000) (= (x378 x510) (x460 x510))))
(assert (=> (< (- x583 1) 10000) (= (x460 x583) (x378 x583))))
(assert (= x337 (x746 (x460 x337))))
(assert (= (x135 x837) (ite (and (not x1010) x617) (x1152 x837) (x1240 x837))))
(assert (x763 x1234))
(assert (x678 x676))
(assert (= 2690754053 (x746 (x378 2690754053))))
(assert (= (x746 (x460 x694)) x694))
(assert (= x775 (=> (and (not (> 2293535753 x529)) (>= 1461501637330902918203684832716283019655932542975 x1199) (= x414 (x1326 x419)) (> 2690754053 x529) (= 2532887486 x529) (= (x1410 (x460 x1199) x769 0) x64) (= (x1410 (x460 x739) x553 0) x769) (not (= 2293535753 x529)) (= x137 x414) (<= x739 1461501637330902918203684832716283019655932542975) (= (x1410 (x460 x1078) x64 0) x419) (= (x454 (x460 274184521717934524641157099916833587206)) x572) (not (= 2512682246 x529)) (<= x414 115792089237316195423570985008687907853269984665640564039457584007913129639935) (> 2960351575 x529) (<= 0 x414) (<= x1078 1461501637330902918203684832716283019655932542975) (> x572 0) (= (x1410 (x460 x1100) (x378 4) 0) x553) (not (= x529 2418364589))) (=> (and (= (and x748 x1484) x1386) (= x1138 x1288) (= x712 x137) (= (<= x712 x1374) x1484) (= x547 x104) (= x376 x1170)) x789))))
(assert (x1212 x734))
(assert (= (ite (and x183 x1568) (x1020 x719) (x1036 x719)) (x113 x719)))
(assert (x1212 x304))
(assert (x1212 x1257))
(assert (x1212 x1421))
(assert (= (=> (and (or x162 (and (= x1000 (x1259 1461501637330902918203684832716283019655932542975 x1510)) (not x162) (= x1500 (x1259 1461501637330902918203684832716283019655932542975 x198)))) (= x162 (= 0 x1522)) (= x861 (= 0 x508)) (or (and (= x1570 (x1410 (x460 x804) (x378 1) 0)) (= x1316 (x546 (+ x1393 96))) (<= 0 x278) (<= 0 x61) (= x823 (x1410 (x460 x1177) x1089 0)) (= x1176 (x1410 (x460 x755) x823 0)) (= (x361 x1316) x996) (= x755 (x1259 1461501637330902918203684832716283019655932542975 x1510)) (= (x1410 (x460 x804) (x378 7) 0) x1089) (<= x677 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (< x677 x996) x729) (= (x1552 x1570) x61) (not x861) (or (and (= x370 (x1410 (x460 x1202) x805 0)) (= x707 x638) (= (x1259 1461501637330902918203684832716283019655932542975 x1510) x1202) x1342 (= x1219 (x1410 (x460 x804) (x378 7) 0)) (= x168 (x1259 1461501637330902918203684832716283019655932542975 x198)) (= (x1410 (x460 x168) x1219 0) x805)) (and (= (x1259 1461501637330902918203684832716283019655932542975 x198) x36) (= (x1259 1461501637330902918203684832716283019655932542975 x1510) x629) (not x1342) (= (x1410 (x460 x36) x1231 0) x1356) (= (x1259 1461501637330902918203684832716283019655932542975 x198) x676) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x566) (= (x1259 1461501637330902918203684832716283019655932542975 x1510) x1057) (= x707 x638) (= (x1410 (x460 x676) x106 0) x478) (= x1391 (+ x1286 x303)) (= x566 (x865 x779)) (< (* x346 x508) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x910 (* x346 x508)) (<= 0 x566) (= (x1410 (x460 x629) x1356 0) x779) (= x1231 (x1410 (x460 x804) (x378 3) 0)) (= x106 (x1410 (x460 x804) (x378 7) 0)) (< (+ x566 x525) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x303 x566) (= x1286 x525) (= x910 x525) (= (x1410 (x460 x1057) x478 0) x1285))) (>= x677 0) (= (= x346 0) x1342) (= (x546 (+ x1393 128)) x707) (or (and (not x729) (= 0 x346)) (and (= x1092 (= 0 x677)) x729 (= x639 (x361 x1316)) (or (and (= x1050 (x361 x1316)) x1232 (= x1535 x1050)) (and (= x1075 x1535) (not x1232))) (= (< x639 x1075) x1232) (or (and (= x234 604800) (not (< x1535 x677)) (= x1206 (ite (> 604800 x744) x744 604800)) (= (x311 (- x1535 x677)) x744) (= x346 x1206) (not x1092)) (and (= x463 x346) x1092 (= x463 (x311 (- x1535 x164))) (not (> x164 x1535)) (= x164 (x491 x177)))))) (= (x1259 1461501637330902918203684832716283019655932542975 x198) x1177) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x278) (= (x1095 x1570 1) x1123) (= (x635 x1123) x278) (<= x61 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x677 (x1433 x1176))) (and (= (x1410 (x460 x12) x341 0) x444) (= x121 (x1410 (x460 x37) x444 0)) x861 (= x341 (x1410 (x460 x804) (x378 7) 0)) (= x177 x638) (= x12 (x1259 1461501637330902918203684832716283019655932542975 x198)) (= (x1259 1461501637330902918203684832716283019655932542975 x1510) x37)))) x1435) x647))
(assert (x1212 x793))
(assert (=> (> (+ 10000 1) x835) (= (x378 x835) (x460 x835))))
(assert (= x1110 (x746 (x460 x1110))))
(assert (= (=> (and (< x1503 2690754053) (not (= 2512682246 x1503)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1541) (not (= x1503 2293535753)) (< 0 x888) (= 2532887486 x1503) (= (x1410 (x460 x408) x1555 0) x1041) (>= 1461501637330902918203684832716283019655932542975 x1390) (> 2960351575 x1503) (not (< x1503 2293535753)) (not (= x1503 2418364589)) (= x1344 x1541) (= x1555 (x1410 (x460 x231) x175 0)) (= (x1410 (x460 x662) (x378 4) 0) x1562) (= (x454 (x460 274184521717934524641157099916833587206)) x888) (>= x1541 0) (>= 1461501637330902918203684832716283019655932542975 x408) (= (x1410 (x460 x1390) x1562 0) x175) (= x1541 (x653 x1041)) (<= x231 1461501637330902918203684832716283019655932542975)) x136) x1427))
(assert (= x156 x296))
(assert (= (x1149 160) 0))
(assert (= x519 (=> (and (= (x1410 (x460 x295) x1137 0) x552) (<= 0 x343) (= (x1433 x552) x343) (= x627 (= x343 0)) (<= x343 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x1259 1461501637330902918203684832716283019655932542975 x1510) x295) (= x1137 (x1410 (x460 x272) x1124 0)) (= x1124 (x1410 (x460 x1475) (x378 7) 0)) (= (x1259 1461501637330902918203684832716283019655932542975 x198) x272)) (and (=> (and (not x976) (= x976 (> x484 0)) (= x484 (x311 (- x1475 1))) x627) x1439) (=> (and (= x1475 x1056) (not x627)) x964)))))
(check-sat)
