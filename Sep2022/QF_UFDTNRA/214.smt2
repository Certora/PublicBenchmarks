(set-option :print-success false)
(set-option :produce-models true)
(set-logic QF_UFDTNRA)
(declare-fun uninterp_frac (Real Real) Real)
(define-fun axiom_frac_bound ((d1 Real) (d2 Real)) Bool (and (=> (> d2 0) (and (<= 0.0 (uninterp_frac d1 d2)) (< (uninterp_frac d1 d2) 1.0))) (=> (< d2 0) (and (>= 0.0 (uninterp_frac d1 d2)) (> (uninterp_frac d1 d2) (- 1.0))))))
(define-fun axiom_frac_zero ((d1 Real) (d2 Real) (m1 Real) (m2 Real) (e Real)) Bool (=> (and (= d1 (* m1 m2)) (or (= d2 m1) (= d2 m2))) (= e 0)))
(define-fun uninterp_mod ((x Real) (m Real)) Real (ite (and (>= x 0) (< x m)) x (ite (and (>= x m) (< x (+ m m))) (- x m) (ite (and (>= x (- m)) (< x 0)) (+ x m) (* m (uninterp_frac x m))))))
(define-fun axiom_int_approximation ((x Real)) Bool (or (= x 0) (>= x 1) (<= x (- 1))))
(declare-datatypes ((x1285 0)) (((x372 (x3786 x1285) (x352 x1285) (x3177 Real)) (x3377 (x616 Real)) (x2203 (x4064 x1285) (x1487 Real)))))
(declare-fun x3115 () Bool)
(declare-fun x1277 () Bool)
(declare-fun x3370 () Real)
(declare-fun x3192 () Bool)
(declare-fun x3873 () Bool)
(declare-fun x2136 () Real)
(declare-fun x537 () Real)
(declare-fun x3557 (Real) Real)
(declare-fun x2831 () Bool)
(declare-fun x4260 () Real)
(declare-fun x3902 () Real)
(declare-fun x428 (Real) Real)
(declare-fun x1208 () Bool)
(declare-fun x2776 () Bool)
(declare-fun x3248 () Bool)
(declare-fun x723 () Real)
(declare-fun x2032 () Bool)
(declare-fun x2918 () Bool)
(declare-fun x3595 () Real)
(declare-fun x2932 () Bool)
(declare-fun x3140 () Real)
(declare-fun x130 () Real)
(declare-fun x17 () Bool)
(declare-fun x2929 () Bool)
(declare-fun x220 () Bool)
(declare-fun x1947 () Bool)
(declare-fun x3163 () Real)
(declare-fun x4170 () Bool)
(declare-fun x1190 () Real)
(declare-fun x2627 () Bool)
(declare-fun x2591 () Real)
(declare-fun x2330 () Bool)
(declare-fun x1952 () Bool)
(declare-fun x2981 () Bool)
(declare-fun x1948 () Bool)
(declare-fun x1583 () Bool)
(declare-fun x3512 () Real)
(declare-fun x3710 () Real)
(declare-fun x1480 () Bool)
(declare-fun x1776 () Bool)
(declare-fun x2601 () Bool)
(declare-fun x1003 () Real)
(declare-fun x161 () Bool)
(declare-fun x884 () Bool)
(declare-fun x4291 () x1285)
(declare-fun x3894 () Real)
(declare-fun x4154 () Real)
(declare-fun x2667 () Bool)
(declare-fun x3136 () Bool)
(declare-fun x4138 () Bool)
(declare-fun x1468 () Real)
(declare-fun x3733 () Real)
(declare-fun x4033 () Real)
(declare-fun x774 () Real)
(declare-fun x4241 () Real)
(declare-fun x2024 () Real)
(declare-fun x4160 () Real)
(declare-fun x191 () Bool)
(declare-fun x2825 () Bool)
(declare-fun x1930 () Bool)
(declare-fun x1712 () Bool)
(declare-fun x3405 () Real)
(declare-fun x3301 () Bool)
(declare-fun x4205 () Real)
(declare-fun x1907 () Real)
(declare-fun x3142 () Real)
(declare-fun x84 () Real)
(declare-fun x3684 () Bool)
(declare-fun x1121 () Bool)
(declare-fun x2711 () Real)
(declare-fun x870 () Real)
(declare-fun x406 () x1285)
(declare-fun x651 () Bool)
(declare-fun x4131 () Real)
(declare-fun x2596 () Real)
(declare-fun x443 () Bool)
(declare-fun x836 () Real)
(declare-fun x2835 () x1285)
(declare-fun x1767 () Real)
(declare-fun x2973 () Real)
(declare-fun x1303 () Bool)
(declare-fun x3454 () Bool)
(declare-fun x2427 () Bool)
(declare-fun x3529 () Bool)
(declare-fun x2527 () Bool)
(declare-fun x1628 () Bool)
(declare-fun x100 () Bool)
(declare-fun x848 () Real)
(declare-fun x1715 () Bool)
(declare-fun x2859 () Bool)
(declare-fun x3350 () Bool)
(declare-fun x3946 () Bool)
(declare-fun x270 (Real) Real)
(declare-fun x798 () Bool)
(declare-fun x2211 () Real)
(declare-fun x1226 () x1285)
(declare-fun x2414 () Real)
(declare-fun x1106 () Real)
(declare-fun x167 () Real)
(declare-fun x738 () Real)
(declare-fun x2097 () Bool)
(declare-fun x3094 () Real)
(declare-fun x3321 () Real)
(declare-fun x3474 () Bool)
(declare-fun x3459 () Bool)
(declare-fun x394 (x1285) Real)
(declare-fun x529 () Real)
(declare-fun x1495 () Real)
(declare-fun x1912 () Real)
(declare-fun x2741 () Bool)
(declare-fun x2927 () Real)
(declare-fun x2389 () Bool)
(declare-fun x672 () Bool)
(declare-fun x4230 () Real)
(declare-fun x2550 () Bool)
(declare-fun x779 () Bool)
(declare-fun x3606 () Bool)
(declare-fun x589 () Real)
(declare-fun x3338 () Bool)
(declare-fun x2067 () Real)
(declare-fun x1678 () Real)
(declare-fun x4038 () Bool)
(declare-fun x1095 () Bool)
(declare-fun x4086 () Real)
(declare-fun x259 () Bool)
(declare-fun x3979 () Bool)
(declare-fun x2240 () Real)
(declare-fun x3268 () Bool)
(declare-fun x2618 () Real)
(declare-fun x2244 (x1285) Real)
(declare-fun x1925 () Real)
(declare-fun x640 () Real)
(declare-fun x527 () Real)
(declare-fun x1305 () Real)
(declare-fun x4246 () Real)
(declare-fun x2469 () Bool)
(declare-fun x3343 () Real)
(declare-fun x1560 () Real)
(declare-fun x1058 () Bool)
(declare-fun x2337 () Bool)
(declare-fun x2025 () Real)
(declare-fun x722 () Bool)
(declare-fun x1344 () Bool)
(declare-fun x2871 () Bool)
(declare-fun x3470 () Bool)
(declare-fun x3858 () Real)
(declare-fun x1646 () Real)
(declare-fun x1295 () Real)
(declare-fun x3256 () Bool)
(declare-fun x2314 () Bool)
(declare-fun x2930 (Real) Real)
(declare-fun x4080 () Real)
(declare-fun x2131 () Bool)
(declare-fun x108 () Bool)
(declare-fun x212 () Real)
(declare-fun x758 () Real)
(declare-fun x1485 () Real)
(declare-fun x1288 () Real)
(declare-fun x1554 () x1285)
(declare-fun x1835 () Real)
(declare-fun x3565 () Bool)
(declare-fun x1375 () Real)
(declare-fun x81 () Real)
(declare-fun x4061 () x1285)
(declare-fun x1773 () Real)
(declare-fun x591 () Real)
(declare-fun x2013 () Bool)
(declare-fun x3450 () Real)
(declare-fun x1090 () Real)
(declare-fun x4137 () Bool)
(declare-fun x620 () Bool)
(declare-fun x222 () Bool)
(declare-fun x742 () Bool)
(declare-fun x1716 (Real) Real)
(declare-fun x2034 () Bool)
(declare-fun x668 () Bool)
(declare-fun x3525 () Bool)
(declare-fun x3037 (Real Real) Real)
(declare-fun x3466 () Real)
(declare-fun x4208 () Bool)
(declare-fun x53 () Bool)
(declare-fun x371 () Bool)
(declare-fun x4156 () Real)
(declare-fun x416 () Real)
(declare-fun x1706 () Real)
(declare-fun x1034 () Bool)
(declare-fun x937 () Real)
(declare-fun x1783 () Real)
(declare-fun x3000 () Real)
(declare-fun x577 () Bool)
(declare-fun x1104 () Bool)
(declare-fun x3269 () Real)
(declare-fun x1976 () Bool)
(declare-fun x1801 () Bool)
(declare-fun x1317 () Real)
(declare-fun x1840 () Bool)
(declare-fun x3631 () Real)
(declare-fun x1814 (Real) Real)
(declare-fun x3950 () Bool)
(declare-fun x1079 () Real)
(declare-fun x1284 () Real)
(declare-fun x1532 () Bool)
(declare-fun x2391 () Real)
(declare-fun x3042 () Real)
(declare-fun x1449 () Bool)
(declare-fun x3579 () Bool)
(declare-fun x2120 () Bool)
(declare-fun x2567 () Bool)
(declare-fun x913 () Real)
(declare-fun x3634 () Bool)
(declare-fun x4029 () Bool)
(declare-fun x887 () Real)
(declare-fun x3523 () Bool)
(declare-fun x1625 (Real) Real)
(declare-fun x1645 () Bool)
(declare-fun x1636 () Real)
(declare-fun x2479 () Real)
(declare-fun x816 () Real)
(declare-fun x2402 () Real)
(declare-fun x209 () Real)
(declare-fun x4010 () x1285)
(declare-fun x3258 () Real)
(declare-fun x2083 () Real)
(declare-fun x4255 (x1285) Real)
(declare-fun x3948 (x1285) Real)
(declare-fun x1129 () Bool)
(declare-fun x656 () Bool)
(declare-fun x1109 () Bool)
(declare-fun x3759 () Real)
(declare-fun x3317 () Real)
(declare-fun x710 () Bool)
(declare-fun x1893 () Bool)
(declare-fun x797 () Real)
(declare-fun x3145 () Real)
(declare-fun x3718 () Bool)
(declare-fun x4297 () Bool)
(declare-fun x3299 () Bool)
(declare-fun x1933 () Bool)
(declare-fun x911 () Bool)
(declare-fun x4289 () Bool)
(declare-fun x64 () Bool)
(declare-fun x95 () Bool)
(declare-fun x3916 () Real)
(declare-fun x3123 () Real)
(declare-fun x2268 () Real)
(declare-fun x3973 () Real)
(declare-fun x1502 () Real)
(declare-fun x320 () Bool)
(declare-fun x2909 () Bool)
(declare-fun x1849 () Real)
(declare-fun x2936 () Bool)
(declare-fun x2069 () Real)
(declare-fun x3374 () Bool)
(declare-fun x8 () Real)
(declare-fun x817 () Real)
(declare-fun x631 () Bool)
(declare-fun x1222 () Bool)
(declare-fun x2060 () Bool)
(declare-fun x820 () Real)
(declare-fun x480 () Bool)
(declare-fun x3361 () Real)
(declare-fun x1656 () Real)
(declare-fun x4076 () Bool)
(declare-fun x822 () Real)
(declare-fun x2275 () Real)
(declare-fun x3553 (x1285) Real)
(declare-fun x2491 () Real)
(declare-fun x2403 () Bool)
(declare-fun x1762 () Real)
(declare-fun x933 () Real)
(declare-fun x1891 () Real)
(declare-fun x1993 () Real)
(declare-fun x2349 () Real)
(declare-fun x1768 () Real)
(declare-fun x3590 () Bool)
(declare-fun x2501 () Bool)
(declare-fun x2096 () Real)
(declare-fun x3664 () Real)
(declare-fun x635 () Bool)
(declare-fun x1771 () Real)
(declare-fun x2121 () Bool)
(declare-fun x4284 () Bool)
(declare-fun x551 () Real)
(declare-fun x2905 () Real)
(declare-fun x4022 () Real)
(declare-fun x2744 () Real)
(declare-fun x1016 () Real)
(declare-fun x818 () Bool)
(declare-fun x3657 () Bool)
(declare-fun x1945 () Real)
(declare-fun x3892 () Bool)
(declare-fun x1424 () Real)
(declare-fun x3310 () Real)
(declare-fun x1107 () Bool)
(declare-fun x3029 () Bool)
(declare-fun x279 () Bool)
(declare-fun x2916 () Real)
(declare-fun x2889 () Real)
(declare-fun x1941 () Real)
(declare-fun x1873 () Bool)
(declare-fun x69 () Bool)
(declare-fun x1459 () Real)
(declare-fun x2531 () Bool)
(declare-fun x971 () Bool)
(declare-fun x2775 () Bool)
(declare-fun x1939 () Real)
(declare-fun x1929 () Real)
(declare-fun x2363 () Bool)
(declare-fun x4301 () Bool)
(declare-fun x938 () Real)
(declare-fun x667 () Bool)
(declare-fun x1100 () Bool)
(declare-fun x52 () Bool)
(declare-fun x1808 () Real)
(declare-fun x959 () Bool)
(declare-fun x3742 () Real)
(declare-fun x3464 () Real)
(declare-fun x2781 () Bool)
(declare-fun x3394 () Bool)
(declare-fun x2103 () Bool)
(declare-fun x2342 () Bool)
(declare-fun x2755 () Bool)
(declare-fun x3777 () Real)
(declare-fun x3127 () Real)
(declare-fun x1794 (Real) Real)
(declare-fun x4015 () Bool)
(declare-fun x3910 () Real)
(declare-fun x747 () Bool)
(declare-fun x792 () Real)
(declare-fun x2978 () Bool)
(declare-fun x261 () Real)
(declare-fun x3072 () Bool)
(declare-fun x3126 () Real)
(declare-fun x2189 () Bool)
(declare-fun x1293 () Bool)
(declare-fun x2806 () Bool)
(declare-fun x4244 () Bool)
(declare-fun x2924 () Bool)
(declare-fun x3141 () Real)
(declare-fun x2340 () Real)
(declare-fun x1387 () Real)
(declare-fun x2815 () Bool)
(declare-fun x2162 () Bool)
(declare-fun x1111 () Real)
(declare-fun x2708 (Real) Real)
(declare-fun x2547 () Bool)
(declare-fun x430 () Real)
(declare-fun x1353 () Real)
(declare-fun x1440 () Bool)
(declare-fun x23 () Bool)
(declare-fun x3985 () Real)
(declare-fun x1932 () Real)
(declare-fun x1619 () Bool)
(declare-fun x1478 () Bool)
(declare-fun x494 () Real)
(declare-fun x180 () Real)
(declare-fun x3956 () Real)
(declare-fun x623 () Bool)
(declare-fun x824 (x1285) Real)
(declare-fun x4055 () Real)
(declare-fun x46 () x1285)
(declare-fun x2262 () Bool)
(declare-fun x2155 () Real)
(declare-fun x1740 () Real)
(declare-fun x808 () Real)
(declare-fun x1243 () Bool)
(declare-fun x3536 () Real)
(declare-fun x2608 () Bool)
(declare-fun x2620 () Real)
(declare-fun x3607 () Bool)
(declare-fun x1379 () Real)
(declare-fun x2761 () Real)
(declare-fun x3700 () Real)
(declare-fun x1608 () Real)
(declare-fun x930 () Real)
(declare-fun x579 () Real)
(declare-fun x1298 (Real) Real)
(declare-fun x3964 () Real)
(declare-fun x4093 () Bool)
(declare-fun x2693 () Bool)
(declare-fun x2822 () Bool)
(declare-fun x1389 () Bool)
(declare-fun x888 () Real)
(declare-fun x3493 () Real)
(declare-fun x3783 () Bool)
(declare-fun x2856 () Real)
(declare-fun x365 () Real)
(declare-fun x4161 () Bool)
(declare-fun x366 () Bool)
(declare-fun x3937 () Real)
(declare-fun x2303 () Real)
(declare-fun x1931 () Real)
(declare-fun x4130 () Bool)
(declare-fun x2672 () Bool)
(declare-fun x1537 () Bool)
(declare-fun x3564 () Bool)
(declare-fun x4258 () Real)
(declare-fun x3165 () Bool)
(declare-fun x2850 () Bool)
(declare-fun x2282 () Bool)
(declare-fun x349 () Bool)
(declare-fun x4060 () Bool)
(declare-fun x59 () Real)
(declare-fun x1691 () Real)
(declare-fun x2653 () Bool)
(declare-fun x3572 () x1285)
(declare-fun x2746 () Real)
(declare-fun x3659 () Real)
(declare-fun x3157 () Real)
(declare-fun x2837 (Real) Real)
(declare-fun x2606 () Real)
(declare-fun x1024 () Real)
(declare-fun x1383 () Real)
(declare-fun x3769 () Real)
(declare-fun x1586 () Bool)
(declare-fun x2879 () Real)
(declare-fun x3942 () Bool)
(declare-fun x464 () Bool)
(declare-fun x265 () Bool)
(declare-fun x57 () Bool)
(declare-fun x1905 () Bool)
(declare-fun x2090 () Real)
(declare-fun x2033 () Bool)
(declare-fun x206 () Real)
(declare-fun x896 (x1285) Real)
(declare-fun x322 () Bool)
(declare-fun x343 () Bool)
(declare-fun x4232 () Bool)
(declare-fun x330 () Bool)
(declare-fun x401 () Bool)
(declare-fun x1007 () Bool)
(declare-fun x1549 () Real)
(declare-fun x3819 () Real)
(declare-fun x2151 () Bool)
(declare-fun x4106 () Bool)
(declare-fun x133 () Bool)
(declare-fun x2486 () Real)
(declare-fun x260 () Real)
(declare-fun x2182 () Bool)
(declare-fun x2284 () Bool)
(declare-fun x1011 () Bool)
(declare-fun x3968 () Real)
(declare-fun x1115 () Real)
(declare-fun x2274 () Real)
(declare-fun x2565 () Bool)
(declare-fun x3497 () Real)
(declare-fun x904 () Bool)
(declare-fun x1494 () Real)
(declare-fun x2158 () Real)
(declare-fun x3562 () Bool)
(declare-fun x578 () Real)
(declare-fun x3385 () Real)
(declare-fun x2425 (Real) Real)
(declare-fun x2496 () Bool)
(declare-fun x4222 () Bool)
(declare-fun x3276 () x1285)
(declare-fun x2816 () Bool)
(declare-fun x2197 () Real)
(declare-fun x677 () Bool)
(declare-fun x1018 () Bool)
(declare-fun x2642 () Bool)
(declare-fun x3304 () Real)
(declare-fun x649 () Bool)
(declare-fun x2288 (Real) Real)
(declare-fun x878 () Real)
(declare-fun x2305 () Real)
(declare-fun x759 () Bool)
(declare-fun x3728 () Bool)
(declare-fun x2986 () Real)
(declare-fun x1359 () Bool)
(declare-fun x1005 () Real)
(declare-fun x502 () Bool)
(declare-fun x2396 (Real) Real)
(declare-fun x670 () Bool)
(declare-fun x450 () Bool)
(declare-fun x3868 () Bool)
(declare-fun x754 () Real)
(declare-fun x1429 (Real) Real)
(declare-fun x1953 () Bool)
(declare-fun x3017 () Bool)
(declare-fun x912 () Real)
(declare-fun x3421 () Real)
(declare-fun x2878 () Bool)
(declare-fun x4063 () Bool)
(declare-fun x4201 () Bool)
(declare-fun x2434 () Bool)
(declare-fun x75 () Bool)
(declare-fun x2881 () Bool)
(declare-fun x2055 (Real) Real)
(declare-fun x164 () Real)
(declare-fun x586 () Bool)
(declare-fun x3197 () Bool)
(declare-fun x1528 (Real) Real)
(declare-fun x479 () Bool)
(declare-fun x2317 () Real)
(declare-fun x1889 () Bool)
(declare-fun x2671 () Bool)
(declare-fun x2724 () Real)
(declare-fun x3643 () Bool)
(declare-fun x2057 () Bool)
(declare-fun x4048 () Real)
(declare-fun x3918 () Real)
(declare-fun x3119 () Bool)
(declare-fun x2704 () Real)
(declare-fun x313 () Real)
(declare-fun x757 () Real)
(declare-fun x1264 () Bool)
(declare-fun x652 () Real)
(declare-fun x3499 () x1285)
(declare-fun x2966 () Real)
(declare-fun x3799 () Bool)
(declare-fun x1436 () Bool)
(declare-fun x2022 () Bool)
(declare-fun x519 () Bool)
(declare-fun x1343 () Real)
(declare-fun x1152 () Bool)
(declare-fun x4259 () Bool)
(declare-fun x2817 () Real)
(declare-fun x2962 () Real)
(declare-fun x2655 () Real)
(declare-fun x1266 () Real)
(declare-fun x2888 () Real)
(declare-fun x3640 () Real)
(declare-fun x28 () Bool)
(declare-fun x300 () Bool)
(declare-fun x3045 () Real)
(declare-fun x2784 () Bool)
(declare-fun x3917 () Real)
(declare-fun x699 () Bool)
(declare-fun x3109 () Real)
(declare-fun x1672 () x1285)
(declare-fun x466 () Bool)
(declare-fun x2276 () Real)
(declare-fun x1336 () Real)
(declare-fun x3441 (x1285) Real)
(declare-fun x3677 () Real)
(declare-fun x299 () Bool)
(declare-fun x4277 () Real)
(declare-fun x2955 () Bool)
(declare-fun x3573 () Bool)
(declare-fun x3849 () Bool)
(declare-fun x2071 () Real)
(declare-fun x2452 () Real)
(declare-fun x1050 () Bool)
(declare-fun x1731 () Bool)
(declare-fun x2228 () Bool)
(declare-fun x3655 () Bool)
(declare-fun x2409 () Real)
(declare-fun x596 (Real) Real)
(declare-fun x3667 () Real)
(declare-fun x2851 () Bool)
(declare-fun x3103 () Real)
(declare-fun x3618 () Bool)
(declare-fun x3872 () Bool)
(declare-fun x186 () Bool)
(declare-fun x3242 () Real)
(declare-fun x3400 () Real)
(declare-fun x662 () Real)
(declare-fun x3186 () Real)
(declare-fun x1135 () Bool)
(declare-fun x906 () Real)
(declare-fun x3939 () Bool)
(declare-fun x1390 () Bool)
(declare-fun x3976 () Bool)
(declare-fun x1696 (x1285) Real)
(declare-fun x1163 () Bool)
(declare-fun x1448 () x1285)
(declare-fun x801 () Real)
(declare-fun x3138 () Bool)
(declare-fun x1077 () Real)
(declare-fun x728 () Bool)
(declare-fun x3098 (Real) Real)
(declare-fun x1120 () Bool)
(declare-fun x125 () Bool)
(declare-fun x2166 () Bool)
(declare-fun x3508 () Bool)
(declare-fun x1462 () Real)
(declare-fun x3953 () Real)
(declare-fun x984 () Real)
(declare-fun x1229 () Real)
(declare-fun x1216 () Real)
(declare-fun x3907 () Bool)
(declare-fun x286 () Real)
(declare-fun x3128 () Bool)
(declare-fun x1421 () Bool)
(declare-fun x2751 () x1285)
(declare-fun x293 () Real)
(declare-fun x1418 () Bool)
(declare-fun x2318 () Real)
(declare-fun x3760 (Real) Real)
(declare-fun x2255 () Real)
(declare-fun x2298 () Bool)
(declare-fun x2143 (Real) Real)
(declare-fun x1640 () Bool)
(declare-fun x3620 () Real)
(declare-fun x3362 () Real)
(declare-fun x3654 () Bool)
(declare-fun x613 () Bool)
(declare-fun x3612 () Real)
(declare-fun x2169 () Bool)
(declare-fun x1898 () Real)
(declare-fun x1643 () Bool)
(declare-fun x3870 () Bool)
(declare-fun x4158 () Real)
(declare-fun x3913 () Real)
(declare-fun x1465 () Real)
(declare-fun x3808 () Real)
(declare-fun x3539 () Bool)
(declare-fun x3135 () Bool)
(declare-fun x1975 () Bool)
(declare-fun x2180 () Real)
(declare-fun x1177 () Real)
(declare-fun x3231 (x1285) Real)
(declare-fun x3689 () Bool)
(declare-fun x1761 () Bool)
(declare-fun x2725 () Bool)
(declare-fun x351 () Bool)
(declare-fun x2992 () Real)
(declare-fun x1685 () Bool)
(declare-fun x1997 () Real)
(declare-fun x4085 () Real)
(declare-fun x3206 () Real)
(declare-fun x1307 () Bool)
(declare-fun x523 () Bool)
(declare-fun x3753 () Real)
(declare-fun x2697 () Bool)
(declare-fun x868 () Real)
(declare-fun x929 () Bool)
(declare-fun x1606 () Real)
(declare-fun x945 () Bool)
(declare-fun x2733 () Real)
(declare-fun x2380 () Bool)
(declare-fun x417 () Real)
(declare-fun x4136 () Bool)
(declare-fun x1897 (Real) Real)
(declare-fun x900 (Real) Real)
(declare-fun x1097 () Real)
(declare-fun x3787 () Bool)
(declare-fun x2845 () Real)
(declare-fun x2595 () Real)
(declare-fun x3247 () Bool)
(declare-fun x1580 () Bool)
(declare-fun x1377 () Real)
(declare-fun x834 () Real)
(declare-fun x4302 () Bool)
(declare-fun x890 () Real)
(declare-fun x2064 () Real)
(declare-fun x1915 () Real)
(declare-fun x1212 () Real)
(declare-fun x1886 () Bool)
(declare-fun x390 () Real)
(declare-fun x1053 () Bool)
(declare-fun x1667 () Real)
(declare-fun x2763 () Bool)
(declare-fun x2099 () Real)
(declare-fun x1166 () Bool)
(declare-fun x2424 () Bool)
(declare-fun x2370 () Real)
(declare-fun x1827 () Real)
(declare-fun x287 (x1285) Real)
(declare-fun x1748 () x1285)
(declare-fun x219 (x1285) Real)
(declare-fun x678 () Bool)
(declare-fun x2319 () x1285)
(declare-fun x1184 () Real)
(declare-fun x3469 () Real)
(declare-fun x3019 () Bool)
(declare-fun x772 () Bool)
(declare-fun x1553 () Real)
(declare-fun x4057 () Real)
(declare-fun x1824 () Bool)
(declare-fun x4238 () Bool)
(declare-fun x2913 () Real)
(declare-fun x1240 () Bool)
(declare-fun x1322 () Bool)
(declare-fun x2641 () Bool)
(declare-fun x3761 () Real)
(declare-fun x2652 () Bool)
(declare-fun x54 () Bool)
(declare-fun x3292 () Bool)
(declare-fun x2732 () x1285)
(declare-fun x3092 () Real)
(declare-fun x1658 () Real)
(declare-fun x3737 () Real)
(declare-fun x2922 () Bool)
(declare-fun x3498 () Real)
(declare-fun x905 () Bool)
(declare-fun x2665 () Real)
(declare-fun x3295 () Bool)
(declare-fun x446 () Bool)
(declare-fun x2328 () Bool)
(declare-fun x1804 () Bool)
(declare-fun x2897 () Bool)
(declare-fun x3807 () x1285)
(declare-fun x3621 () Bool)
(declare-fun x3862 () Real)
(declare-fun x3 () x1285)
(declare-fun x74 () Real)
(declare-fun x1456 () Bool)
(declare-fun x2890 () Real)
(declare-fun x3888 () Real)
(declare-fun x2795 () Bool)
(declare-fun x2270 () Bool)
(declare-fun x302 () Bool)
(declare-fun x3099 () Real)
(declare-fun x2583 () Real)
(declare-fun x2400 () Bool)
(declare-fun x3831 () Bool)
(declare-fun x3922 () Bool)
(declare-fun x3199 () Bool)
(declare-fun x3810 () Real)
(declare-fun x973 () Real)
(declare-fun x2765 (x1285) Real)
(declare-fun x3597 () Real)
(declare-fun x2492 () Bool)
(declare-fun x3576 () Bool)
(declare-fun x2946 () Bool)
(declare-fun x554 () Bool)
(declare-fun x2952 () Real)
(declare-fun x350 () Real)
(declare-fun x3485 () Bool)
(declare-fun x111 () Real)
(declare-fun x1597 () Real)
(declare-fun x3656 () Real)
(declare-fun x1083 () x1285)
(declare-fun x879 () Real)
(declare-fun x288 () Bool)
(declare-fun x165 () Real)
(declare-fun x484 () Bool)
(declare-fun x3180 () Bool)
(declare-fun x3990 (Real) Real)
(declare-fun x3170 () Real)
(declare-fun x2229 () Real)
(declare-fun x3743 () Bool)
(declare-fun x2933 () Real)
(declare-fun x3473 () Bool)
(declare-fun x1098 () Bool)
(declare-fun x1052 () Bool)
(declare-fun x342 () Bool)
(declare-fun x509 () Real)
(declare-fun x2514 () Real)
(declare-fun x1244 () Real)
(declare-fun x963 () Real)
(declare-fun x3717 () Real)
(declare-fun x698 () Bool)
(declare-fun x1775 () Bool)
(declare-fun x2683 () Real)
(declare-fun x2137 () Bool)
(declare-fun x1981 () Bool)
(declare-fun x682 () x1285)
(declare-fun x1950 (Real) Real)
(declare-fun x3065 () Real)
(declare-fun x3239 () Bool)
(declare-fun x2042 () Real)
(declare-fun x1745 () Bool)
(declare-fun x3124 () Real)
(declare-fun x3073 () Bool)
(declare-fun x4075 () Real)
(declare-fun x172 () Real)
(declare-fun x1673 () Bool)
(declare-fun x1629 () Real)
(declare-fun x2468 () Real)
(declare-fun x4150 () Real)
(declare-fun x2535 () Bool)
(declare-fun x768 (Real) Real)
(declare-fun x583 () Real)
(declare-fun x821 () Real)
(declare-fun x2707 () Real)
(declare-fun x3882 () Real)
(declare-fun x865 (x1285) Real)
(declare-fun x2297 () Real)
(declare-fun x3313 () Bool)
(declare-fun x1280 () Real)
(declare-fun x1342 () Real)
(declare-fun x2617 () Bool)
(declare-fun x1286 () Real)
(declare-fun x806 () Real)
(declare-fun x3560 () Real)
(declare-fun x1936 () Real)
(declare-fun x3290 () Real)
(declare-fun x2336 () Real)
(declare-fun x4101 () Bool)
(declare-fun x1806 () Real)
(declare-fun x2446 () Bool)
(declare-fun x3309 (x1285) Real)
(declare-fun x3193 (Real) Real)
(declare-fun x646 () Real)
(declare-fun x3496 () Real)
(declare-fun x4155 () Bool)
(declare-fun x1663 () Bool)
(declare-fun x2719 () Bool)
(declare-fun x628 () Real)
(declare-fun x1634 () Real)
(declare-fun x535 () Real)
(declare-fun x2925 () Bool)
(declare-fun x1990 () Bool)
(declare-fun x2792 () Bool)
(declare-fun x3240 () Real)
(declare-fun x1856 () Real)
(declare-fun x3067 () Real)
(declare-fun x3106 () Bool)
(declare-fun x1500 () Bool)
(declare-fun x2630 () Real)
(declare-fun x1710 () x1285)
(declare-fun x1729 () Real)
(declare-fun x435 () Real)
(declare-fun x883 () Real)
(declare-fun x3027 () Bool)
(declare-fun x2271 () Real)
(declare-fun x3855 () Bool)
(declare-fun x1473 () Real)
(declare-fun x3605 () x1285)
(declare-fun x1670 () Bool)
(declare-fun x1164 () Bool)
(declare-fun x2146 () x1285)
(declare-fun x525 () Real)
(declare-fun x2680 () Bool)
(declare-fun x2324 () Bool)
(declare-fun x187 () Bool)
(declare-fun x1099 () Bool)
(declare-fun x2339 () Bool)
(declare-fun x3505 () Real)
(declare-fun x2201 () Bool)
(declare-fun x1531 () Real)
(declare-fun x498 () Real)
(declare-fun x3407 () Real)
(declare-fun x3889 () Bool)
(declare-fun x1169 () Bool)
(declare-fun x65 () Bool)
(declare-fun x1070 () Bool)
(declare-fun x636 () Real)
(declare-fun x2304 () Bool)
(declare-fun x3638 () Real)
(declare-fun x3489 () Real)
(declare-fun x978 () Bool)
(declare-fun x2478 () Bool)
(declare-fun x1248 () Real)
(declare-fun x3960 () Bool)
(declare-fun x4144 () Real)
(declare-fun x2382 () Real)
(declare-fun x1059 () Bool)
(declare-fun x2017 () x1285)
(declare-fun x224 () Real)
(declare-fun x3020 () Real)
(declare-fun x1525 () Real)
(declare-fun x669 () Real)
(declare-fun x33 () Bool)
(declare-fun x2077 () Bool)
(declare-fun x4066 () Real)
(declare-fun x1852 () Real)
(declare-fun x3176 () Real)
(declare-fun x2811 () Real)
(declare-fun x2480 () Bool)
(declare-fun x3229 () Real)
(declare-fun x587 () Bool)
(declare-fun x3232 () Bool)
(declare-fun x2508 () Real)
(declare-fun x764 () Real)
(declare-fun x3121 () Bool)
(declare-fun x2857 () Bool)
(declare-fun x2068 () Real)
(declare-fun x1180 () Real)
(declare-fun x1746 () Real)
(declare-fun x4234 () Real)
(declare-fun x3266 () Real)
(declare-fun x2767 (Real) Real)
(declare-fun x4050 () Real)
(declare-fun x2438 () Bool)
(declare-fun x454 () Real)
(declare-fun x2967 () Real)
(declare-fun x501 () Real)
(declare-fun x4147 () Bool)
(declare-fun x671 () Real)
(declare-fun x3255 () Bool)
(declare-fun x420 () Bool)
(declare-fun x3580 () Real)
(declare-fun x3517 () Bool)
(declare-fun x205 () Bool)
(declare-fun x2651 () Real)
(declare-fun x615 () Real)
(declare-fun x1210 () Bool)
(declare-fun x950 () Bool)
(declare-fun x80 () Real)
(declare-fun x2735 () Bool)
(declare-fun x2742 () Real)
(declare-fun x4211 () Real)
(declare-fun x598 () Bool)
(declare-fun x2892 () Bool)
(declare-fun x2078 () Real)
(declare-fun x55 () Bool)
(declare-fun x3789 () Real)
(declare-fun x731 () Real)
(declare-fun x3043 () Bool)
(declare-fun x3406 () Bool)
(declare-fun x2485 () Real)
(declare-fun x2021 () Real)
(declare-fun x1985 () Real)
(declare-fun x1790 () Real)
(declare-fun x744 (Real) Real)
(declare-fun x4268 () Real)
(declare-fun x850 () Real)
(declare-fun x1092 () x1285)
(declare-fun x345 () Bool)
(declare-fun x1575 (x1285) Real)
(declare-fun x4145 () Real)
(declare-fun x2353 (x1285) Real)
(declare-fun x3903 () Real)
(declare-fun x3250 () Bool)
(declare-fun x3816 (Real Real Real Real Real Real Real Real Real) Real)
(declare-fun x107 () Bool)
(declare-fun x4004 () Bool)
(declare-fun x2106 () x1285)
(declare-fun x3198 () Real)
(declare-fun x1556 () Bool)
(declare-fun x3041 () Bool)
(declare-fun x1474 () Real)
(declare-fun x1055 () x1285)
(declare-fun x2885 () Bool)
(declare-fun x1594 () x1285)
(declare-fun x3178 () Real)
(declare-fun x1721 () Real)
(declare-fun x436 () Bool)
(declare-fun x2625 (Real) Real)
(declare-fun x3751 () Bool)
(declare-fun x1510 () Real)
(declare-fun x3811 () Bool)
(declare-fun x2251 () Bool)
(declare-fun x1225 () Real)
(declare-fun x1378 () Real)
(declare-fun x3630 () Real)
(declare-fun x3975 () Real)
(declare-fun x338 () Bool)
(declare-fun x1088 () Real)
(declare-fun x1638 () Bool)
(declare-fun x487 () Real)
(declare-fun x1581 () Real)
(declare-fun x1987 () Bool)
(declare-fun x555 () Bool)
(declare-fun x1799 () Real)
(declare-fun x3850 () Real)
(declare-fun x3583 () Real)
(declare-fun x4044 () Real)
(declare-fun x2459 () Real)
(declare-fun x637 () Real)
(declare-fun x886 () Bool)
(declare-fun x611 () Bool)
(declare-fun x1592 () Real)
(declare-fun x4186 () x1285)
(declare-fun x82 () Bool)
(declare-fun x132 () Bool)
(declare-fun x4031 () Real)
(declare-fun x1633 () Bool)
(declare-fun x2695 () Real)
(declare-fun x3418 () Bool)
(declare-fun x4282 () x1285)
(declare-fun x3671 (x1285) Real)
(declare-fun x242 () Bool)
(declare-fun x404 () Real)
(declare-fun x1820 () Bool)
(declare-fun x3375 () Real)
(declare-fun x1822 () Real)
(declare-fun x4121 () Bool)
(declare-fun x195 () Real)
(declare-fun x791 () Bool)
(declare-fun x1250 () Bool)
(declare-fun x2511 () Bool)
(declare-fun x226 () Bool)
(declare-fun x1122 () Bool)
(declare-fun x1910 () x1285)
(declare-fun x1757 () Real)
(declare-fun x1493 () Real)
(declare-fun x1219 () x1285)
(declare-fun x2036 () Bool)
(declare-fun x3204 () Real)
(declare-fun x1610 () Real)
(declare-fun x987 () Bool)
(declare-fun x3814 () Real)
(declare-fun x3030 () x1285)
(declare-fun x2138 () Real)
(declare-fun x3212 () Real)
(declare-fun x3673 () Bool)
(declare-fun x2633 () Real)
(declare-fun x433 () Bool)
(declare-fun x207 () Bool)
(declare-fun x1967 (x1285) Real)
(declare-fun x14 () Bool)
(declare-fun x1995 () Bool)
(declare-fun x124 () Real)
(declare-fun x3220 () Bool)
(declare-fun x1555 () Bool)
(declare-fun x2720 () Real)
(declare-fun x2259 () Real)
(declare-fun x2269 () Bool)
(declare-fun x564 () Bool)
(declare-fun x2512 () Bool)
(declare-fun x1669 () Real)
(declare-fun x3921 () Bool)
(declare-fun x253 () Real)
(declare-fun x328 (x1285) Real)
(declare-fun x3852 () Real)
(declare-fun x4025 () Bool)
(declare-fun x1406 () Real)
(declare-fun x3060 (x1285) Real)
(declare-fun x966 () Bool)
(declare-fun x1185 () Bool)
(declare-fun x653 () Real)
(declare-fun x952 () Real)
(declare-fun x2188 () Real)
(declare-fun x3887 () Bool)
(declare-fun x1747 () Bool)
(declare-fun x2564 (x1285) Real)
(declare-fun x943 () Real)
(declare-fun x1076 () Real)
(declare-fun x3628 (x1285) Real)
(declare-fun x1218 () Real)
(declare-fun x1569 () Bool)
(declare-fun x218 () Bool)
(declare-fun x597 () Bool)
(declare-fun x1563 () Real)
(declare-fun x2561 () Real)
(declare-fun x3118 () Real)
(declare-fun x2153 () Bool)
(declare-fun x2408 () Real)
(declare-fun x1923 () Bool)
(declare-fun x2645 () Real)
(declare-fun x257 (Real) Real)
(declare-fun x3455 () Bool)
(declare-fun x3801 () Real)
(declare-fun x2777 () Bool)
(declare-fun x2008 () Real)
(declare-fun x4165 () Real)
(declare-fun x3151 () Real)
(declare-fun x3510 () x1285)
(declare-fun x1069 () Real)
(declare-fun x1014 () Bool)
(declare-fun x2797 () Bool)
(declare-fun x4089 () Real)
(declare-fun x563 () x1285)
(declare-fun x2657 () Real)
(declare-fun x3337 () Bool)
(declare-fun x843 () Real)
(declare-fun x1435 () Real)
(declare-fun x3755 () Real)
(declare-fun x4210 () Real)
(declare-fun x246 () Bool)
(declare-fun x1357 () Real)
(declare-fun x3352 () Real)
(declare-fun x1446 () Bool)
(declare-fun x3854 () Real)
(declare-fun x1530 () Bool)
(declare-fun x867 () Real)
(declare-fun x2412 () Real)
(declare-fun x1200 () Real)
(declare-fun x3214 () Bool)
(declare-fun x78 () Real)
(declare-fun x2994 () Real)
(declare-fun x3467 () Bool)
(declare-fun x1075 () Bool)
(declare-fun x1654 () Real)
(declare-fun x544 () Real)
(declare-fun x3649 () Real)
(declare-fun x1335 () Real)
(declare-fun x3582 () Real)
(declare-fun x361 () Bool)
(declare-fun x1060 () Bool)
(declare-fun x1139 () Bool)
(declare-fun x1475 () Real)
(declare-fun x1739 () Bool)
(declare-fun x2432 () Real)
(declare-fun x2700 () Real)
(declare-fun x9 () Real)
(declare-fun x1451 () Real)
(declare-fun x1392 () Real)
(declare-fun x3771 () Real)
(declare-fun x874 () Bool)
(declare-fun x752 () Bool)
(declare-fun x789 () Bool)
(declare-fun x3984 () Bool)
(declare-fun x94 () Real)
(declare-fun x1313 () x1285)
(declare-fun x4012 () Real)
(declare-fun x1902 () Bool)
(declare-fun x323 () Bool)
(declare-fun x4007 () Bool)
(declare-fun x4195 () Real)
(declare-fun x3053 () Real)
(declare-fun x1334 () Real)
(declare-fun x1764 () Real)
(declare-fun x2698 () Real)
(declare-fun x483 () Bool)
(declare-fun x4173 () Real)
(declare-fun x1175 () Bool)
(declare-fun x2699 () Bool)
(declare-fun x3091 () Bool)
(declare-fun x3156 () Real)
(declare-fun x3488 () Bool)
(declare-fun x676 () Bool)
(declare-fun x3652 () Real)
(declare-fun x968 () Real)
(declare-fun x1179 () Bool)
(declare-fun x11 () Bool)
(declare-fun x539 () Real)
(declare-fun x1040 () Real)
(declare-fun x3584 () Real)
(declare-fun x1752 () Real)
(declare-fun x3201 () Bool)
(declare-fun x247 () Bool)
(declare-fun x12 () Bool)
(declare-fun x3249 () Real)
(declare-fun x520 () Bool)
(declare-fun x4233 () Real)
(declare-fun x2516 () Real)
(declare-fun x2774 () Real)
(declare-fun x152 () Bool)
(declare-fun x4221 () Real)
(declare-fun x2212 () Real)
(declare-fun x750 () Real)
(declare-fun x2277 () Real)
(declare-fun x1916 () Bool)
(declare-fun x3646 () Real)
(declare-fun x1064 () Bool)
(declare-fun x1505 () Bool)
(declare-fun x1291 () Real)
(declare-fun x3039 () Bool)
(declare-fun x1812 () Real)
(declare-fun x1472 () Real)
(declare-fun x2163 () Bool)
(declare-fun x4294 () Real)
(declare-fun x3986 () Bool)
(declare-fun x4078 () Real)
(declare-fun x142 () Bool)
(declare-fun x4016 () Real)
(declare-fun x1028 () Bool)
(declare-fun x3395 () Real)
(declare-fun x2586 () Bool)
(declare-fun x847 () Bool)
(declare-fun x175 () Bool)
(declare-fun x3747 () Bool)
(declare-fun x3900 () Bool)
(declare-fun x550 (x1285) Real)
(declare-fun x3778 () Bool)
(declare-fun x1483 () Bool)
(declare-fun x827 () Bool)
(declare-fun x3203 () Real)
(declare-fun x3471 () Bool)
(declare-fun x4292 () Bool)
(declare-fun x1151 () Bool)
(declare-fun x1238 () Bool)
(declare-fun x489 () Bool)
(declare-fun x2977 () Real)
(declare-fun x1147 () Real)
(declare-fun x1132 () Real)
(declare-fun x1204 () Bool)
(declare-fun x3335 () Real)
(declare-fun x374 () Real)
(declare-fun x4110 () Bool)
(declare-fun x3556 () Bool)
(declare-fun x4052 () Real)
(declare-fun x2272 () Bool)
(declare-fun x2046 () Real)
(declare-fun x2356 () Real)
(declare-fun x2958 () Real)
(declare-fun x346 () Bool)
(declare-fun x1582 () Real)
(declare-fun x2104 () Real)
(declare-fun x2048 () Real)
(declare-fun x526 () Bool)
(declare-fun x462 () Real)
(declare-fun x3028 () Real)
(declare-fun x2249 () Real)
(declare-fun x1869 () Real)
(declare-fun x2481 () Bool)
(declare-fun x3366 () Bool)
(declare-fun x3883 () Real)
(declare-fun x1193 () Real)
(declare-fun x437 () Bool)
(declare-fun x1949 () Bool)
(declare-fun x1567 () x1285)
(declare-fun x1908 () Real)
(declare-fun x3541 () Real)
(declare-fun x1650 () Bool)
(declare-fun x638 () Real)
(declare-fun x1189 () Bool)
(declare-fun x862 () Bool)
(declare-fun x1765 () Bool)
(declare-fun x2122 () Real)
(declare-fun x1903 () Bool)
(declare-fun x2489 () Real)
(declare-fun x1614 () Bool)
(declare-fun x4239 () Bool)
(declare-fun x264 () Bool)
(declare-fun x1086 () x1285)
(declare-fun x1358 () Real)
(declare-fun x988 () Bool)
(declare-fun x1789 () Real)
(declare-fun x1682 () Real)
(declare-fun x807 () Bool)
(declare-fun x1439 () Real)
(declare-fun x1271 () Real)
(declare-fun x2193 () Real)
(declare-fun x3391 () x1285)
(declare-fun x1062 () Real)
(declare-fun x3434 () Real)
(declare-fun x1415 () Bool)
(declare-fun x954 () Real)
(declare-fun x1683 () Bool)
(declare-fun x296 () Bool)
(declare-fun x1348 () Real)
(declare-fun x1482 () x1285)
(declare-fun x2387 () Bool)
(declare-fun x2728 () Real)
(declare-fun x2976 () Real)
(declare-fun x2191 () Real)
(declare-fun x3478 () Real)
(declare-fun x3719 () Real)
(declare-fun x2266 () Real)
(declare-fun x3679 () Real)
(declare-fun x921 () Real)
(declare-fun x2743 () Real)
(declare-fun x3149 () Real)
(declare-fun x1270 () Real)
(declare-fun x1249 () Bool)
(declare-fun x2843 () Real)
(declare-fun x1438 () x1285)
(declare-fun x3481 () Bool)
(declare-fun x3622 () Real)
(declare-fun x1787 () Bool)
(declare-fun x2453 () Real)
(declare-fun x927 () Bool)
(declare-fun x4252 () Bool)
(declare-fun x3211 () Real)
(declare-fun x189 () Real)
(declare-fun x88 () Real)
(declare-fun x459 () Real)
(declare-fun x1119 () Real)
(declare-fun x202 () Bool)
(declare-fun x3765 () Bool)
(declare-fun x2208 () Bool)
(declare-fun x1256 () Bool)
(declare-fun x1481 () Bool)
(declare-fun x4014 () Bool)
(declare-fun x482 () Bool)
(declare-fun x210 () Bool)
(declare-fun x540 () Bool)
(declare-fun x1713 () Real)
(declare-fun x3926 () Real)
(declare-fun x2650 () Bool)
(declare-fun x3716 () Bool)
(declare-fun x36 () Real)
(declare-fun x3056 () Bool)
(declare-fun x157 () Bool)
(declare-fun x4202 () Bool)
(declare-fun x3776 () Bool)
(declare-fun x1413 () Bool)
(declare-fun x2821 () Real)
(declare-fun x3527 () Real)
(declare-fun x3132 () Real)
(declare-fun x1662 () Real)
(declare-fun x4122 () Bool)
(declare-fun x749 () Real)
(declare-fun x282 () Bool)
(declare-fun x837 () Real)
(declare-fun x3148 () Real)
(declare-fun x3480 () Real)
(declare-fun x3723 () Bool)
(declare-fun x304 () Bool)
(declare-fun x948 () Bool)
(declare-fun x2910 () Bool)
(declare-fun x3023 () Bool)
(declare-fun x3426 () Real)
(declare-fun x3832 () Real)
(declare-fun x3358 () Real)
(declare-fun x4146 () Bool)
(declare-fun x3044 () Real)
(declare-fun x1192 () Real)
(declare-fun x4163 () Real)
(declare-fun x3487 () Real)
(declare-fun x1126 () Real)
(declare-fun x982 () Real)
(declare-fun x1913 () Bool)
(declare-fun x1564 () Real)
(declare-fun x557 () x1285)
(declare-fun x548 () Real)
(declare-fun x3486 () Bool)
(declare-fun x4183 () Real)
(declare-fun x1817 () Real)
(declare-fun x272 () Bool)
(declare-fun x1609 () Bool)
(declare-fun x4236 () Real)
(declare-fun x811 () Real)
(declare-fun x1885 () Real)
(declare-fun x4245 () Bool)
(declare-fun x1863 () Real)
(declare-fun x2216 () Bool)
(declare-fun x2372 () Real)
(declare-fun x332 () Bool)
(declare-fun x2144 () Real)
(declare-fun x992 () Real)
(declare-fun x1770 () Bool)
(declare-fun x1397 () Real)
(declare-fun x3578 () Bool)
(declare-fun x233 (Real) Real)
(declare-fun x159 () Real)
(declare-fun x460 () Real)
(declare-fun x872 () Bool)
(declare-fun x1668 (Real) Real)
(declare-fun x3346 () Bool)
(declare-fun x2364 () Bool)
(declare-fun x2605 () Bool)
(declare-fun x1036 () Bool)
(declare-fun x291 () Real)
(declare-fun x2507 () Real)
(declare-fun x3410 () Bool)
(declare-fun x3514 () Bool)
(declare-fun x568 () Real)
(declare-fun x2142 () Bool)
(declare-fun x2108 (x1285) Real)
(declare-fun x506 () Bool)
(declare-fun x396 (Real) Real)
(declare-fun x3451 () Real)
(declare-fun x3735 () Real)
(declare-fun x3575 () Bool)
(declare-fun x1043 () Bool)
(declare-fun x1455 () Real)
(declare-fun x3830 () Real)
(declare-fun x4219 () Real)
(declare-fun x1665 () Bool)
(declare-fun x2858 () Bool)
(declare-fun x823 () Bool)
(declare-fun x217 () Real)
(declare-fun x3018 () Bool)
(declare-fun x2770 () Bool)
(declare-fun x2901 () Real)
(declare-fun x2609 () Bool)
(declare-fun x1096 () Real)
(declare-fun x2073 () Real)
(declare-fun x3884 () Real)
(declare-fun x3108 () Bool)
(declare-fun x3054 () Bool)
(declare-fun x4143 () Real)
(declare-fun x736 () Real)
(declare-fun x2450 () x1285)
(declare-fun x3978 () Bool)
(declare-fun x3504 () Real)
(declare-fun x658 () x1285)
(declare-fun x2526 () Bool)
(declare-fun x3196 () Bool)
(declare-fun x2449 () x1285)
(declare-fun x2562 (Real) x1285)
(declare-fun x3897 () Real)
(declare-fun x3077 (Real) Real)
(declare-fun x2167 () Bool)
(declare-fun x1698 () Bool)
(declare-fun x1798 () Bool)
(declare-fun x4001 () Real)
(declare-fun x2687 () Bool)
(declare-fun x1621 () Real)
(declare-fun x4148 () Bool)
(declare-fun x27 () Real)
(declare-fun x114 () Real)
(declare-fun x2194 () Real)
(declare-fun x3392 (Real) Real)
(declare-fun x1603 () Bool)
(declare-fun x143 () Bool)
(declare-fun x3837 (Real) Real)
(declare-fun x718 () Bool)
(declare-fun x2204 () Bool)
(declare-fun x2405 () Bool)
(declare-fun x441 () Real)
(declare-fun x3325 () Real)
(declare-fun x3189 () Bool)
(declare-fun x2734 () Bool)
(declare-fun x1524 () Bool)
(declare-fun x2250 () Bool)
(declare-fun x3367 () Bool)
(declare-fun x1631 () x1285)
(declare-fun x805 () Real)
(declare-fun x4162 () x1285)
(declare-fun x4223 (Real) Real)
(declare-fun x2375 () Bool)
(declare-fun x1047 () Bool)
(declare-fun x784 () Real)
(declare-fun x3821 () Real)
(declare-fun x109 () Bool)
(declare-fun x3016 () Real)
(declare-fun x983 () Real)
(declare-fun x4216 () Real)
(declare-fun x383 (Real) Real)
(declare-fun x608 () Bool)
(declare-fun x208 () Bool)
(declare-fun x3692 () Bool)
(declare-fun x2823 () Real)
(declare-fun x2819 () Real)
(declare-fun x1276 () Real)
(declare-fun x3411 () Bool)
(declare-fun x4081 () Real)
(declare-fun x1498 () Bool)
(declare-fun x614 () Bool)
(declare-fun x3734 () Bool)
(declare-fun x3393 () Real)
(declare-fun x4235 () Real)
(declare-fun x2752 () Real)
(declare-fun x39 () Bool)
(declare-fun x3168 () Bool)
(declare-fun x3933 () Bool)
(declare-fun x594 () Real)
(declare-fun x1878 () Bool)
(declare-fun x3864 (Real) Real)
(declare-fun x4254 () Bool)
(declare-fun x796 () Bool)
(declare-fun x2947 () Bool)
(declare-fun x384 () Bool)
(declare-fun x1410 () Real)
(declare-fun x340 () Real)
(declare-fun x192 () Real)
(declare-fun x2113 () Bool)
(declare-fun x2482 () Real)
(declare-fun x3105 () Real)
(declare-fun x606 () x1285)
(declare-fun x407 () Bool)
(declare-fun x2861 (Real) Real)
(declare-fun x3732 () Bool)
(declare-fun x1604 () Real)
(declare-fun x626 () x1285)
(declare-fun x3003 () Real)
(declare-fun x1522 () Real)
(declare-fun x3074 () Bool)
(declare-fun x3781 () Real)
(declare-fun x2334 () Bool)
(declare-fun x3791 () Real)
(declare-fun x1308 () Bool)
(declare-fun x715 () Real)
(declare-fun x2644 () Real)
(declare-fun x800 () Bool)
(declare-fun x434 () Real)
(declare-fun x1137 () Bool)
(declare-fun x3532 () Real)
(declare-fun x103 () Real)
(declare-fun x2394 () Bool)
(declare-fun x1444 () x1285)
(declare-fun x3947 () Real)
(declare-fun x2753 () Real)
(declare-fun x2053 () Real)
(declare-fun x370 () Bool)
(declare-fun x2395 () Real)
(declare-fun x2893 () Bool)
(declare-fun x3460 () Bool)
(declare-fun x2139 () Bool)
(declare-fun x452 () Bool)
(declare-fun x2810 (x1285) Real)
(declare-fun x1443 () Real)
(declare-fun x2383 () Real)
(declare-fun x1372 () Bool)
(declare-fun x2326 () Real)
(declare-fun x1711 () Bool)
(declare-fun x295 () Bool)
(declare-fun x325 () Real)
(declare-fun x3307 () Bool)
(declare-fun x3213 () Bool)
(declare-fun x1017 () Real)
(declare-fun x1523 () Real)
(declare-fun x4264 () Real)
(declare-fun x3436 (Real) Real)
(declare-fun x3432 () Bool)
(declare-fun x936 () Real)
(declare-fun x4006 () Bool)
(declare-fun x2786 () Real)
(declare-fun x1153 () Real)
(declare-fun x2187 () Bool)
(declare-fun x3805 () Bool)
(declare-fun x1781 () Real)
(declare-fun x1918 () Real)
(declare-fun x2037 () Bool)
(declare-fun x1080 () Bool)
(declare-fun x2782 () Bool)
(declare-fun x709 () x1285)
(declare-fun x956 () Bool)
(declare-fun x3137 () Real)
(declare-fun x1810 () Bool)
(declare-fun x1979 () Bool)
(declare-fun x2348 () Bool)
(declare-fun x1002 () Real)
(declare-fun x2044 () Real)
(declare-fun x72 () Bool)
(declare-fun x3589 () Real)
(declare-fun x3253 () Bool)
(declare-fun x3336 () Bool)
(declare-fun x1283 () Real)
(declare-fun x2088 () Bool)
(declare-fun x1363 (x1285) Real)
(declare-fun x1067 () Real)
(declare-fun x1265 () Bool)
(declare-fun x3273 () Real)
(declare-fun x2928 () Real)
(declare-fun x1526 () Real)
(declare-fun x3750 () Bool)
(declare-fun x73 () x1285)
(declare-fun x3704 () Real)
(declare-fun x1684 () Real)
(declare-fun x3327 () Real)
(declare-fun x1928 () Real)
(declare-fun x117 () Bool)
(declare-fun x2749 () Real)
(declare-fun x3445 () Real)
(declare-fun x695 (x1285) Real)
(declare-fun x3829 () Bool)
(declare-fun x3448 () Real)
(declare-fun x1883 () Real)
(declare-fun x1035 () Real)
(declare-fun x1823 () Real)
(declare-fun x3150 () Bool)
(declare-fun x4266 () Bool)
(declare-fun x3078 () Real)
(declare-fun x3627 () Bool)
(declare-fun x3592 () Bool)
(declare-fun x285 () Real)
(declare-fun x3930 () Real)
(declare-fun x2093 () Real)
(declare-fun x947 () Real)
(declare-fun x4257 () Bool)
(declare-fun x1367 (Real) Real)
(declare-fun x3260 () Bool)
(declare-fun x2807 () Bool)
(declare-fun x2413 () Real)
(declare-fun x3279 () Real)
(declare-fun x3519 () Bool)
(declare-fun x584 () Real)
(declare-fun x2351 () Bool)
(declare-fun x3353 () Real)
(declare-fun x3721 () Bool)
(declare-fun x305 () Bool)
(declare-fun x3169 () Real)
(declare-fun x2174 () Real)
(declare-fun x4082 () Bool)
(declare-fun x35 () Bool)
(declare-fun x2164 () Bool)
(declare-fun x1197 (Real) Real)
(declare-fun x2539 () Bool)
(declare-fun x93 () Bool)
(declare-fun x21 () Real)
(declare-fun x2431 () Bool)
(declare-fun x3129 () Bool)
(declare-fun x3055 () Bool)
(declare-fun x2509 () Bool)
(declare-fun x511 () Real)
(declare-fun x1982 () Bool)
(declare-fun x337 () Real)
(declare-fun x1486 () Bool)
(declare-fun x2988 () Bool)
(declare-fun x562 () Bool)
(declare-fun x1578 () Bool)
(declare-fun x2560 () Real)
(declare-fun x1542 () Real)
(declare-fun x144 () Real)
(declare-fun x2210 () Bool)
(declare-fun x269 () Bool)
(declare-fun x547 () Real)
(declare-fun x3339 () Real)
(declare-fun x2125 (Real) Real)
(declare-fun x85 () Real)
(declare-fun x2865 () Bool)
(declare-fun x909 () Bool)
(declare-fun x156 () Bool)
(declare-fun x3097 () x1285)
(declare-fun x4069 () Bool)
(declare-fun x3836 () Real)
(declare-fun x3666 () Bool)
(declare-fun x1501 (Real) Real)
(declare-fun x4227 () Real)
(declare-fun x721 () Bool)
(declare-fun x1533 () Real)
(declare-fun x2575 () Real)
(declare-fun x3423 () Bool)
(declare-fun x2213 () Real)
(declare-fun x1545 () Real)
(declare-fun x2455 (Real) Real)
(declare-fun x3908 () Bool)
(declare-fun x866 () Bool)
(declare-fun x76 () Real)
(declare-fun x986 () Bool)
(declare-fun x3965 () Bool)
(declare-fun x2484 () Real)
(declare-fun x3217 () Real)
(declare-fun x3550 () Real)
(declare-fun x2525 () Bool)
(declare-fun x2940 () Real)
(declare-fun x3851 () Bool)
(declare-fun x2184 () Real)
(declare-fun x753 () x1285)
(declare-fun x4096 () Bool)
(declare-fun x476 () Real)
(declare-fun x2110 () Bool)
(declare-fun x1491 () Real)
(declare-fun x3923 () Real)
(declare-fun x1125 () x1285)
(declare-fun x2260 () Bool)
(declare-fun x3754 (x1285) Real)
(declare-fun x237 () Real)
(declare-fun x2660 () Real)
(declare-fun x2488 () x1285)
(declare-fun x3347 () Bool)
(declare-fun x3856 () Real)
(declare-fun x2058 (x1285) Real)
(declare-fun x1777 () Bool)
(declare-fun x881 () Real)
(declare-fun x63 () Bool)
(declare-fun x2546 () Bool)
(declare-fun x158 () Bool)
(declare-fun x89 () Real)
(declare-fun x917 () Bool)
(declare-fun x838 () Real)
(declare-fun x2818 () Real)
(declare-fun x932 (Real) Real)
(declare-fun x1815 () Bool)
(declare-fun x2358 () Bool)
(declare-fun x1158 () Real)
(declare-fun x2035 () Bool)
(declare-fun x2911 () Bool)
(declare-fun x3509 () Real)
(declare-fun x1689 () Real)
(declare-fun x3788 () Real)
(declare-fun x3725 () Real)
(declare-fun x13 () Real)
(declare-fun x2050 () Bool)
(declare-fun x2715 () x1285)
(declare-fun x920 () Bool)
(declare-fun x655 () Bool)
(declare-fun x2991 () Real)
(declare-fun x3133 () Real)
(declare-fun x3230 () Real)
(declare-fun x1161 () Bool)
(declare-fun x4067 () Real)
(declare-fun x654 () Bool)
(declare-fun x3949 () Real)
(declare-fun x1613 () Real)
(declare-fun x1871 () Real)
(declare-fun x935 () Bool)
(declare-fun x488 () Bool)
(declare-fun x150 () Real)
(declare-fun x4193 () Real)
(declare-fun x2292 () Bool)
(declare-fun x684 () Bool)
(declare-fun x3063 () Bool)
(declare-fun x3708 () Real)
(declare-fun x3616 () Bool)
(declare-fun x2544 () Real)
(declare-fun x660 () Bool)
(declare-fun x826 () Bool)
(declare-fun x3545 () Real)
(declare-fun x3619 (Real Real) Real)
(declare-fun x2437 () Real)
(declare-fun x1700 () Bool)
(declare-fun x2238 () Bool)
(declare-fun x3963 () x1285)
(declare-fun x1596 () Real)
(declare-fun x382 () x1285)
(declare-fun x3980 () Real)
(declare-fun x553 () Bool)
(declare-fun x2341 () Real)
(declare-fun x280 () Bool)
(declare-fun x3784 () Real)
(declare-fun x455 () Bool)
(declare-fun x4139 () Real)
(declare-fun x2808 () Bool)
(declare-fun x683 () Bool)
(declare-fun x1877 () Bool)
(declare-fun x2386 () Bool)
(declare-fun x3324 () Real)
(declare-fun x3215 () Bool)
(declare-fun x2717 () Bool)
(declare-fun x1701 () Bool)
(declare-fun x2779 () Bool)
(declare-fun x3113 () Real)
(declare-fun x2847 () Bool)
(declare-fun x2072 () Real)
(declare-fun x1048 () Bool)
(declare-fun x1657 () Real)
(declare-fun x2471 () Real)
(declare-fun x609 () Bool)
(declare-fun x1618 () Bool)
(declare-fun x2907 () Bool)
(declare-fun x3711 () Bool)
(declare-fun x990 () Bool)
(declare-fun x2176 () Real)
(declare-fun x223 (Real) Real)
(declare-fun x622 () Bool)
(declare-fun x1001 () Bool)
(declare-fun x2117 () Bool)
(declare-fun x96 () Bool)
(declare-fun x1546 () Bool)
(declare-fun x4206 () Real)
(declare-fun x2192 () Bool)
(declare-fun x2661 () Bool)
(declare-fun x2951 () Bool)
(declare-fun x1171 () Bool)
(declare-fun x4105 () Bool)
(declare-fun x2877 () Bool)
(declare-fun x691 () x1285)
(declare-fun x969 () Real)
(declare-fun x3847 () Bool)
(declare-fun x327 () Real)
(declare-fun x449 () Bool)
(declare-fun x174 () Bool)
(declare-fun x3344 () Bool)
(declare-fun x1611 () Real)
(declare-fun x1992 () Bool)
(declare-fun x154 () Real)
(declare-fun x2499 () Real)
(declare-fun x1356 () x1285)
(declare-fun x2593 () Bool)
(declare-fun x1760 () x1285)
(declare-fun x2333 () Real)
(declare-fun x101 () x1285)
(declare-fun x2589 () Bool)
(declare-fun x2602 () Bool)
(declare-fun x641 (Real) Real)
(declare-fun x3340 () Bool)
(declare-fun x3428 (x1285) Real)
(declare-fun x2118 () Real)
(declare-fun x3134 () Real)
(declare-fun x815 () x1285)
(declare-fun x1318 () Real)
(declare-fun x2677 () Bool)
(declare-fun x2086 () Bool)
(declare-fun x3838 () Bool)
(declare-fun x3813 () Real)
(declare-fun x3574 () Real)
(declare-fun x3415 () Real)
(declare-fun x919 () Bool)
(declare-fun x1797 () Real)
(declare-fun x3311 () Real)
(declare-fun x297 () Real)
(declare-fun x2199 () Bool)
(declare-fun x665 () Real)
(declare-fun x3205 () Bool)
(declare-fun x4068 () Real)
(declare-fun x1381 () Real)
(declare-fun x1738 () Real)
(declare-fun x1917 () Real)
(declare-fun x2541 () Bool)
(declare-fun x3722 () Real)
(declare-fun x3680 () Bool)
(declare-fun x3724 () x1285)
(declare-fun x1441 () Real)
(declare-fun x4123 () Real)
(declare-fun x949 () Real)
(declare-fun x1114 () Bool)
(declare-fun x60 () Bool)
(declare-fun x2 () Bool)
(declare-fun x3561 () Real)
(declare-fun x4127 () Bool)
(declare-fun x644 () Bool)
(declare-fun x3202 () Bool)
(declare-fun x1666 () Bool)
(declare-fun x2938 () Bool)
(declare-fun x289 () Real)
(declare-fun x3284 () Bool)
(declare-fun x2557 () Real)
(declare-fun x2875 () Bool)
(declare-fun x607 () Real)
(declare-fun x1644 () Bool)
(declare-fun x1904 () Bool)
(declare-fun x4104 () Real)
(declare-fun x2612 () Real)
(declare-fun x1338 (x1285) Real)
(declare-fun x3188 () Real)
(declare-fun x2116 () Real)
(declare-fun x2445 () Real)
(declare-fun x2430 () Bool)
(declare-fun x3387 () Bool)
(declare-fun x565 () Bool)
(declare-fun x2607 () Bool)
(declare-fun x980 () Real)
(declare-fun x1507 () Bool)
(declare-fun x1605 () Bool)
(declare-fun x173 () Bool)
(declare-fun x604 () Real)
(declare-fun x2616 () Real)
(declare-fun x3741 () Bool)
(declare-fun x2853 () x1285)
(declare-fun x892 () Bool)
(declare-fun x2990 () Real)
(declare-fun x1900 () Bool)
(declare-fun x2869 () Bool)
(declare-fun x3285 () Bool)
(declare-fun x3208 () Real)
(declare-fun x1234 () Bool)
(declare-fun x104 () Real)
(declare-fun x358 () Real)
(declare-fun x2803 () Bool)
(declare-fun x975 (x1285) Real)
(declare-fun x3322 () Real)
(declare-fun x1010 () Bool)
(declare-fun x515 () Bool)
(declare-fun x3433 () Real)
(declare-fun x4296 () Bool)
(declare-fun x1763 () Real)
(declare-fun x2838 () Real)
(declare-fun x2079 () Bool)
(declare-fun x2721 () Bool)
(declare-fun x3911 () Bool)
(declare-fun x1527 () Real)
(declare-fun x2045 () Real)
(declare-fun x3139 () Bool)
(declare-fun x4261 () Real)
(declare-fun x3472 () Real)
(declare-fun x2440 () Real)
(declare-fun x2827 () Real)
(declare-fun x451 () Real)
(declare-fun x2538 () Real)
(declare-fun x746 () Bool)
(declare-fun x2628 () Bool)
(declare-fun x2974 () Bool)
(declare-fun x199 () Real)
(declare-fun x2080 () Real)
(declare-fun x1490 () Real)
(declare-fun x442 () Real)
(declare-fun x3200 () Bool)
(declare-fun x1202 () Real)
(declare-fun x4043 () Real)
(declare-fun x3244 () Real)
(declare-fun x4198 () Bool)
(declare-fun x2466 () x1285)
(declare-fun x4065 () x1285)
(declare-fun x602 () Bool)
(declare-fun x3005 () Real)
(declare-fun x5 () Real)
(declare-fun x2989 () Bool)
(declare-fun x1391 () Real)
(declare-fun x893 () Bool)
(declare-fun x2006 () Bool)
(declare-fun x1471 () Bool)
(declare-fun x3581 () Bool)
(declare-fun x2706 () Bool)
(declare-fun x2160 () Bool)
(declare-fun x2350 () Bool)
(declare-fun x356 () Bool)
(declare-fun x2713 () Real)
(declare-fun x3222 () Real)
(declare-fun x1705 () Real)
(declare-fun x1723 () Bool)
(declare-fun x1846 (x1285) Real)
(declare-fun x3898 (Real) Real)
(declare-fun x1895 () Bool)
(declare-fun x1796 () Real)
(declare-fun x491 () Bool)
(declare-fun x98 () Bool)
(declare-fun x910 () Real)
(declare-fun x1927 () Real)
(declare-fun x1484 () Bool)
(declare-fun x409 () Real)
(declare-fun x2682 () Real)
(declare-fun x2239 () Real)
(declare-fun x3417 () Real)
(declare-fun x4024 () Bool)
(declare-fun x2084 () Real)
(declare-fun x1306 () Bool)
(declare-fun x3603 () Bool)
(declare-fun x3780 () Bool)
(declare-fun x4172 () Bool)
(declare-fun x1607 () Real)
(declare-fun x3594 () Bool)
(declare-fun x934 () Bool)
(declare-fun x1046 () Real)
(declare-fun x679 () Real)
(declare-fun x972 () Real)
(declare-fun x1539 () Real)
(declare-fun x4250 () Bool)
(declare-fun x3154 () Bool)
(declare-fun x4287 () Bool)
(declare-fun x3378 () Real)
(declare-fun x2674 () Real)
(declare-fun x3431 () Bool)
(declare-fun x1315 (x1285) Real)
(declare-fun x1463 () Real)
(declare-fun x729 () Real)
(declare-fun x3650 () Real)
(declare-fun x2373 () Real)
(declare-fun x863 () Real)
(declare-fun x2658 () Real)
(declare-fun x102 () Real)
(declare-fun x1116 () Bool)
(declare-fun x2156 () x1285)
(declare-fun x4152 () Real)
(declare-fun x1236 () Bool)
(declare-fun x1660 () Real)
(declare-fun x2647 () Bool)
(declare-fun x1329 () Real)
(declare-fun x3032 () Bool)
(declare-fun x3116 (Real) Real)
(declare-fun x1165 () Bool)
(declare-fun x2638 () Bool)
(declare-fun x812 () Bool)
(declare-fun x278 () Real)
(declare-fun x939 () Bool)
(declare-fun x67 () x1285)
(declare-fun x2659 () Real)
(declare-fun x232 () Real)
(declare-fun x3318 () Real)
(declare-fun x2794 () Real)
(declare-fun x1920 () x1285)
(declare-fun x1598 () Real)
(declare-fun x3648 () Real)
(declare-fun x1963 () Real)
(declare-fun x1616 () Real)
(declare-fun x141 () Bool)
(declare-fun x1211 () Bool)
(declare-fun x559 () Bool)
(declare-fun x1156 (Real) Real)
(declare-fun x1167 () Bool)
(declare-fun x533 () Real)
(declare-fun x2623 () Bool)
(declare-fun x1769 () Bool)
(declare-fun x236 () Bool)
(declare-fun x833 () Bool)
(declare-fun x517 (x1285) Real)
(declare-fun x3057 () Real)
(declare-fun x2186 () Real)
(declare-fun x1186 () Bool)
(declare-fun x2101 () Bool)
(declare-fun x852 () Bool)
(declare-fun x4240 () Real)
(declare-fun x1004 () Bool)
(declare-fun x1850 () Bool)
(declare-fun x2798 () x1285)
(declare-fun x2985 () Bool)
(declare-fun x2826 () Real)
(declare-fun x19 () Bool)
(declare-fun x1103 () Bool)
(declare-fun x387 () Real)
(declare-fun x918 () x1285)
(declare-fun x3087 () Bool)
(declare-fun x2726 () Real)
(declare-fun x2543 () Real)
(declare-fun x3800 () Real)
(declare-fun x3408 () x1285)
(declare-fun x1693 () Real)
(declare-fun x4164 () Bool)
(declare-fun x697 () Real)
(declare-fun x3757 () Real)
(declare-fun x4224 () Bool)
(declare-fun x1364 () Real)
(declare-fun x3444 () Real)
(declare-fun x2548 () Bool)
(declare-fun x4247 () Bool)
(declare-fun x4298 () Bool)
(declare-fun x1351 () Real)
(declare-fun x1899 () Real)
(declare-fun x2443 () Bool)
(declare-fun x3357 () Real)
(declare-fun x3262 () Bool)
(declare-fun x4225 () Real)
(declare-fun x1207 () Real)
(declare-fun x895 () Real)
(declare-fun x357 () Real)
(declare-fun x2983 () Real)
(declare-fun x3792 () Bool)
(declare-fun x230 () Bool)
(declare-fun x727 () Real)
(declare-fun x4187 () Bool)
(declare-fun x1887 () Bool)
(declare-fun x3703 () Bool)
(declare-fun x2614 () Real)
(declare-fun x126 (Real) Real)
(declare-fun x4011 () Bool)
(declare-fun x3828 () Bool)
(declare-fun x3544 () Real)
(declare-fun x964 () Bool)
(declare-fun x3713 () Real)
(declare-fun x2860 () Real)
(declare-fun x1049 () x1285)
(declare-fun x3994 () Bool)
(declare-fun x2242 () Bool)
(declare-fun x248 () Real)
(declare-fun x1041 () Bool)
(declare-fun x619 () Bool)
(declare-fun x458 () Real)
(declare-fun x4115 () Real)
(declare-fun x825 () Real)
(declare-fun x958 () Real)
(declare-fun x2428 () Bool)
(declare-fun x153 () Real)
(declare-fun x3059 () Bool)
(declare-fun x3158 () Bool)
(declare-fun x2043 (Real) Real)
(declare-fun x503 () Real)
(declare-fun x3886 () Bool)
(declare-fun x4262 () Real)
(declare-fun x3267 () Bool)
(declare-fun x2147 () Real)
(declare-fun x3332 () Bool)
(declare-fun x2264 () Real)
(declare-fun x1602 () Bool)
(declare-fun x1986 () Real)
(declare-fun x2619 () Real)
(declare-fun x2902 () Bool)
(declare-fun x2185 () Bool)
(declare-fun x3210 () Bool)
(declare-fun x359 () Real)
(declare-fun x2996 () Bool)
(declare-fun x4128 () Real)
(declare-fun x2234 () Bool)
(declare-fun x1331 () Bool)
(declare-fun x2209 () Bool)
(declare-fun x556 () x1285)
(declare-fun x1718 () Real)
(declare-fun x3687 () Bool)
(declare-fun x3766 (x1285) Real)
(declare-fun x2202 () Real)
(declare-fun x4020 () Real)
(declare-fun x2731 () Real)
(declare-fun x2378 () Bool)
(declare-fun x198 () Bool)
(declare-fun x2003 () Real)
(declare-fun x3162 () Bool)
(declare-fun x137 () Real)
(declare-fun x1030 () Real)
(declare-fun x3280 () Bool)
(declare-fun x1370 () Real)
(declare-fun x3669 () Real)
(declare-fun x3820 () Real)
(declare-fun x2246 () Real)
(declare-fun x4119 () Bool)
(declare-fun x3668 () Real)
(declare-fun x56 () Real)
(declare-fun x2028 () Bool)
(declare-fun x857 () Bool)
(declare-fun x1143 () Real)
(declare-fun x2436 () Real)
(declare-fun x2809 () Bool)
(declare-fun x3237 () Real)
(declare-fun x1996 () Bool)
(declare-fun x1540 () Real)
(declare-fun x2128 () Real)
(declare-fun x4017 () Real)
(declare-fun x2493 () Real)
(declare-fun x1408 () Bool)
(declare-fun x1737 () Real)
(declare-fun x2196 () Real)
(declare-fun x471 () Bool)
(declare-fun x999 () Real)
(declare-fun x686 () Bool)
(declare-fun x802 () Real)
(declare-fun x3194 () Real)
(declare-fun x1599 () Real)
(declare-fun x1082 () Real)
(declare-fun x2891 () Bool)
(declare-fun x762 () Bool)
(declare-fun x1860 () Real)
(declare-fun x2038 () Real)
(declare-fun x3383 () Bool)
(declare-fun x1774 () Bool)
(declare-fun x629 () Bool)
(declare-fun x3427 () Bool)
(declare-fun x3234 () Bool)
(declare-fun x2461 () Bool)
(declare-fun x2457 () Real)
(declare-fun x3090 (Real) Real)
(declare-fun x840 () Real)
(declare-fun x1141 () Real)
(declare-fun x2915 () Real)
(declare-fun x2804 () x1285)
(declare-fun x2473 () Bool)
(declare-fun x1702 () Bool)
(declare-fun x2903 () Bool)
(declare-fun x2504 () Real)
(declare-fun x1199 () Real)
(declare-fun x3130 () Bool)
(declare-fun x3447 () Bool)
(declare-fun x2280 () Bool)
(declare-fun x3430 () Bool)
(declare-fun x492 () Real)
(declare-fun x2805 () Bool)
(declare-fun x4140 () Real)
(declare-fun x976 () Bool)
(declare-fun x2729 () Real)
(declare-fun x1140 () Real)
(declare-fun x1260 (x1285) Real)
(declare-fun x3515 () Real)
(declare-fun x1290 () Real)
(declare-fun x543 () Bool)
(declare-fun x3296 () Real)
(declare-fun x3052 (Real) Real)
(declare-fun x2219 () Bool)
(declare-fun x2423 () Real)
(declare-fun x767 () Bool)
(declare-fun x160 () Bool)
(declare-fun x3482 () x1285)
(declare-fun x1833 () Bool)
(declare-fun x1744 () Bool)
(declare-fun x3050 () Real)
(declare-fun x3334 () Bool)
(declare-fun x2513 () Real)
(declare-fun x951 () Real)
(declare-fun x146 () Bool)
(declare-fun x276 () Real)
(declare-fun x77 () Bool)
(declare-fun x3840 () Real)
(declare-fun x2634 () Real)
(declare-fun x121 () Real)
(declare-fun x700 () Bool)
(declare-fun x1521 () Bool)
(declare-fun x3585 () Real)
(declare-fun x2968 () Bool)
(declare-fun x2368 () Real)
(declare-fun x726 () Bool)
(declare-fun x617 () Bool)
(declare-fun x1402 () Bool)
(declare-fun x3878 () Bool)
(declare-fun x1807 () Bool)
(declare-fun x2023 () Real)
(declare-fun x997 () Real)
(declare-fun x3895 () Real)
(declare-fun x2027 () Bool)
(declare-fun x2524 () Bool)
(declare-fun x395 () Real)
(declare-fun x3614 () Bool)
(declare-fun x2039 () Bool)
(declare-fun x2456 () Real)
(declare-fun x633 () Real)
(declare-fun x1841 () Real)
(declare-fun x1504 () Bool)
(declare-fun x3797 () Real)
(declare-fun x1138 () Bool)
(declare-fun x1251 () Bool)
(declare-fun x3458 () Real)
(declare-fun x463 () x1285)
(declare-fun x2820 () Bool)
(declare-fun x3051 (Real) Real)
(declare-fun x751 () Bool)
(declare-fun x770 () Bool)
(declare-fun x3008 () Real)
(declare-fun x2773 () Real)
(declare-fun x2224 () Bool)
(declare-fun x2369 (x1285) Real)
(declare-fun x1811 () Real)
(declare-fun x2483 () Real)
(declare-fun x899 () Bool)
(declare-fun x2283 () Bool)
(declare-fun x4215 () Real)
(declare-fun x3183 () Real)
(declare-fun x386 () Bool)
(declare-fun x1170 () Real)
(declare-fun x2555 () Bool)
(declare-fun x2701 () Bool)
(declare-fun x835 () Bool)
(declare-fun x3806 () Real)
(declare-fun x2392 () Real)
(declare-fun x2267 () Bool)
(declare-fun x244 () Real)
(declare-fun x4111 () Real)
(declare-fun x781 () Bool)
(declare-fun x2563 () Real)
(declare-fun x47 () Bool)
(declare-fun x2785 () Real)
(declare-fun x877 () Bool)
(declare-fun x1376 () Bool)
(declare-fun x3341 () x1285)
(declare-fun x2814 () Bool)
(declare-fun x2964 () Real)
(declare-fun x245 () Real)
(declare-fun x2385 () x1285)
(declare-fun x3909 () Real)
(declare-fun x1420 () Bool)
(declare-fun x925 () Bool)
(declare-fun x321 () Bool)
(declare-fun x4157 () Bool)
(declare-fun x2999 () Bool)
(declare-fun x1970 () Real)
(declare-fun x1369 () Real)
(declare-fun x419 () Real)
(declare-fun x2906 () Bool)
(declare-fun x2529 () Real)
(declare-fun x2873 () Bool)
(declare-fun x4132 () Real)
(declare-fun x2439 () Bool)
(declare-fun x3245 () Real)
(declare-fun x1492 () Bool)
(declare-fun x3236 () Real)
(declare-fun x1066 () Bool)
(declare-fun x4243 () Bool)
(declare-fun x1559 () Real)
(declare-fun x908 () Bool)
(declare-fun x1565 () Bool)
(declare-fun x1792 () Real)
(declare-fun x128 () Bool)
(declare-fun x3586 () Real)
(declare-fun x91 () Real)
(declare-fun x24 () Real)
(declare-fun x3031 () Real)
(declare-fun x2953 () Real)
(declare-fun x871 () Real)
(declare-fun x1551 () Real)
(declare-fun x4180 () Bool)
(declare-fun x1327 () Real)
(declare-fun x2472 () Real)
(declare-fun x4303 () Bool)
(declare-fun x4276 () x1285)
(declare-fun x1136 () Real)
(declare-fun x2748 () Real)
(declare-fun x1263 () Real)
(declare-fun x3712 () Bool)
(declare-fun x3665 () Bool)
(declare-fun x190 (Real) Real)
(declare-fun x4135 () Real)
(declare-fun x1561 () Bool)
(declare-fun x3401 () Real)
(declare-fun x1131 () Bool)
(declare-fun x1149 () Bool)
(declare-fun x4174 () Bool)
(declare-fun x258 () Bool)
(declare-fun x1884 () Real)
(declare-fun x3615 () Bool)
(declare-fun x1749 () Real)
(declare-fun x2227 () Real)
(declare-fun x2497 (Real) Real)
(declare-fun x2592 () Bool)
(declare-fun x1635 () Real)
(declare-fun x2082 () Bool)
(declare-fun x1294 () Real)
(declare-fun x3768 () Bool)
(declare-fun x2914 () Bool)
(declare-fun x2594 () Real)
(declare-fun x814 () Real)
(declare-fun x739 () Real)
(declare-fun x2702 () Real)
(declare-fun x1214 (Real) Real)
(declare-fun x2011 () Bool)
(declare-fun x2874 () Real)
(declare-fun x4035 () Bool)
(declare-fun x2085 () Real)
(declare-fun x3981 () Bool)
(declare-fun x3223 () Real)
(declare-fun x3475 () Real)
(declare-fun x858 (Real) Real)
(declare-fun x1617 () Real)
(declare-fun x500 () Bool)
(declare-fun x4248 () Bool)
(declare-fun x309 () Real)
(declare-fun x1694 () Real)
(declare-fun x3502 () Real)
(declare-fun x2463 () Bool)
(declare-fun x2980 () Bool)
(declare-fun x3356 () Real)
(declare-fun x542 () Bool)
(declare-fun x1935 () Bool)
(declare-fun x3252 () Real)
(declare-fun x3702 () Bool)
(declare-fun x2580 () Bool)
(declare-fun x2002 () Bool)
(declare-fun x3033 () Real)
(declare-fun x3089 () Real)
(declare-fun x2470 () x1285)
(declare-fun x1275 () Real)
(declare-fun x1717 () Bool)
(declare-fun x3382 () Real)
(declare-fun x1516 () Bool)
(declare-fun x4109 () Real)
(declare-fun x3035 () Real)
(declare-fun x4213 () Real)
(declare-fun x3675 () Real)
(declare-fun x2663 () Bool)
(declare-fun x2498 () Real)
(declare-fun x3518 () Real)
(declare-fun x438 (Real) Real)
(declare-fun x1425 () Real)
(declare-fun x1782 () Real)
(declare-fun x3611 () Bool)
(declare-fun x4171 (x1285) Real)
(declare-fun x2331 () Bool)
(declare-fun x2577 () Real)
(declare-fun x2984 () Bool)
(declare-fun x2059 () Real)
(declare-fun x4212 () Real)
(declare-fun x440 (Real) Real)
(declare-fun x2590 () Real)
(declare-fun x931 () Bool)
(declare-fun x624 () Bool)
(declare-fun x1876 () Bool)
(declare-fun x979 (Real) Real)
(declare-fun x447 () Bool)
(declare-fun x2222 () Bool)
(declare-fun x849 () Bool)
(declare-fun x4273 () Real)
(declare-fun x4113 () Bool)
(declare-fun x1733 () Bool)
(declare-fun x3522 () Real)
(declare-fun x532 () Bool)
(declare-fun x61 () Real)
(declare-fun x1830 () Bool)
(declare-fun x3996 () Real)
(declare-fun x1477 () Real)
(declare-fun x3531 () Bool)
(declare-fun x499 () Bool)
(declare-fun x1292 () Bool)
(declare-fun x3062 () Real)
(declare-fun x2828 () Bool)
(declare-fun x216 (Real) Real)
(declare-fun x1176 (Real) Real)
(declare-fun x2426 () Bool)
(declare-fun x4099 () Bool)
(declare-fun x3839 () Real)
(declare-fun x3300 () Real)
(declare-fun x1255 () Bool)
(declare-fun x3453 () Real)
(declare-fun x1566 () Real)
(declare-fun x2098 () Bool)
(declare-fun x127 () Bool)
(declare-fun x3861 () Bool)
(declare-fun x1622 () Bool)
(declare-fun x415 () Bool)
(declare-fun x2335 () Bool)
(declare-fun x2114 () Bool)
(declare-fun x2576 () Real)
(declare-fun x3112 () Bool)
(declare-fun x991 () Bool)
(declare-fun x2406 () Bool)
(declare-fun x2521 () Bool)
(declare-fun x3167 () Bool)
(declare-fun x468 () Bool)
(declare-fun x851 () x1285)
(declare-fun x2081 () Real)
(declare-fun x4281 () Bool)
(declare-fun x3772 () Real)
(declare-fun x2132 () x1285)
(declare-fun x2141 () Bool)
(declare-fun x3293 () Real)
(declare-fun x1396 () Bool)
(declare-fun x1065 () Real)
(declare-fun x3166 () Real)
(declare-fun x1914 () Bool)
(declare-fun x2778 () x1285)
(declare-fun x648 () Real)
(declare-fun x1373 () Bool)
(declare-fun x238 () Bool)
(declare-fun x510 () Real)
(declare-fun x1511 () Bool)
(declare-fun x4168 () Real)
(declare-fun x4102 () Real)
(declare-fun x1620 () Real)
(declare-fun x3967 () Bool)
(declare-fun x1078 () x1285)
(declare-fun x3558 () Bool)
(declare-fun x2716 () Bool)
(declare-fun x2066 () Bool)
(declare-fun x2768 () Real)
(declare-fun x2684 () Real)
(declare-fun x1404 () Real)
(declare-fun x3058 () Bool)
(declare-fun x162 () Real)
(declare-fun x3959 () Bool)
(declare-fun x1201 () Bool)
(declare-fun x2205 () Bool)
(declare-fun x2352 () Real)
(declare-fun x4141 () Bool)
(declare-fun x254 () Bool)
(declare-fun x2690 () Real)
(declare-fun x363 () Bool)
(declare-fun x787 () Real)
(declare-fun x3388 () Bool)
(declare-fun x1751 (Real) Real)
(declare-fun x1980 () Real)
(declare-fun x1965 () Bool)
(declare-fun x1906 () Real)
(declare-fun x861 () Real)
(declare-fun x4054 () Bool)
(declare-fun x1089 () Real)
(declare-fun x534 () x1285)
(declare-fun x1354 () Bool)
(declare-fun x2536 () Bool)
(declare-fun x427 () Bool)
(declare-fun x3263 () Bool)
(declare-fun x3435 () Real)
(declare-fun x397 (Real) Real)
(declare-fun x3437 () Real)
(declare-fun x252 () Bool)
(declare-fun x377 () Bool)
(declare-fun x3593 () Bool)
(declare-fun x1467 () Bool)
(declare-fun x785 () Bool)
(declare-fun x3442 () Bool)
(declare-fun x4242 () Real)
(declare-fun x1978 () Real)
(declare-fun x79 () Real)
(declare-fun x2010 () Real)
(declare-fun x1703 () Real)
(declare-fun x3845 () Bool)
(declare-fun x166 () Real)
(declare-fun x3144 () Real)
(declare-fun x3155 () Bool)
(declare-fun x163 () Real)
(declare-fun x1991 () x1285)
(declare-fun x880 () Bool)
(declare-fun x2872 () Real)
(declare-fun x331 () Bool)
(declare-fun x2152 () Bool)
(declare-fun x2689 () Bool)
(declare-fun x18 () Real)
(declare-fun x1006 () Real)
(declare-fun x3328 () Bool)
(declare-fun x1816 () Bool)
(declare-fun x3983 () Real)
(declare-fun x408 () Bool)
(declare-fun x1800 (x1285) Real)
(declare-fun x3709 () Bool)
(declare-fun x4184 () Bool)
(declare-fun x674 () Bool)
(declare-fun x475 () Bool)
(declare-fun x2175 () Real)
(declare-fun x3306 () Real)
(declare-fun x308 () Real)
(declare-fun x549 (Real) Real)
(declare-fun x369 () x1285)
(declare-fun x203 () Real)
(declare-fun x4041 () Real)
(declare-fun x155 () Bool)
(declare-fun x2495 () Real)
(declare-fun x1653 (Real) Real)
(declare-fun x493 () Real)
(declare-fun x3114 () Real)
(declare-fun x3865 () Real)
(declare-fun x2758 () Bool)
(declare-fun x2528 () Real)
(declare-fun x965 () Bool)
(declare-fun x828 () Bool)
(declare-fun x1697 () Bool)
(declare-fun x136 () Bool)
(declare-fun x3492 (Real) Real)
(declare-fun x1894 () Real)
(declare-fun x1278 () Bool)
(declare-fun x3999 () Bool)
(declare-fun x2293 () Bool)
(declare-fun x273 () Real)
(declare-fun x1133 () Real)
(declare-fun x470 () Bool)
(declare-fun x2261 () x1285)
(declare-fun x2737 () x1285)
(declare-fun x90 () Bool)
(declare-fun x3373 () Bool)
(declare-fun x1793 () Real)
(declare-fun x901 () Bool)
(declare-fun x3013 () Bool)
(declare-fun x2830 () Bool)
(declare-fun x1641 () Bool)
(declare-fun x3591 () Bool)
(declare-fun x4209 () Bool)
(declare-fun x560 () Bool)
(declare-fun x2018 () Real)
(declare-fun x1423 () Bool)
(declare-fun x714 () x1285)
(declare-fun x1461 (Real) Real)
(declare-fun x1269 () Bool)
(declare-fun x4013 () Real)
(declare-fun x2640 () Real)
(declare-fun x513 () Real)
(declare-fun x431 () Real)
(declare-fun x2248 () Bool)
(declare-fun x3403 (x1285) Real)
(declare-fun x1534 () Real)
(declare-fun x3491 () Real)
(declare-fun x3549 () Real)
(declare-fun x2867 () Real)
(declare-fun x1785 () Bool)
(declare-fun x3934 () Bool)
(declare-fun x3632 () Bool)
(declare-fun x595 () Bool)
(declare-fun x1072 () Bool)
(declare-fun x398 () Bool)
(declare-fun x385 () Bool)
(declare-fun x2787 () Bool)
(declare-fun x3164 () Bool)
(declare-fun x2105 () Real)
(declare-fun x955 () Real)
(declare-fun x1837 () Real)
(declare-fun x1968 () Real)
(declare-fun x3945 () Bool)
(declare-fun x204 () Bool)
(declare-fun x689 () Bool)
(declare-fun x2587 () Real)
(declare-fun x474 () Real)
(declare-fun x2133 () Bool)
(declare-fun x422 () Real)
(declare-fun x315 () Bool)
(declare-fun x44 () Real)
(declare-fun x1038 () Real)
(declare-fun x2462 () Real)
(declare-fun x3071 () Real)
(declare-fun x3744 () Bool)
(declare-fun x2714 () Bool)
(declare-fun x1221 () Real)
(declare-fun x1272 () Bool)
(declare-fun x3982 () Bool)
(declare-fun x2868 () Real)
(declare-fun x3875 () Real)
(declare-fun x1832 () Bool)
(declare-fun x2207 () Bool)
(declare-fun x3218 (x1285) Real)
(declare-fun x3809 () Real)
(declare-fun x4179 () Bool)
(declare-fun x3443 () Real)
(declare-fun x1861 () Bool)
(declare-fun x4070 () Real)
(declare-fun x2102 () Bool)
(declare-fun x1959 () Real)
(declare-fun x3283 () Bool)
(declare-fun x688 (Real) Real)
(declare-fun x339 () Bool)
(declare-fun x1726 () Real)
(declare-fun x2759 () Real)
(declare-fun x2519 () Real)
(declare-fun x2004 () Bool)
(declare-fun x268 () Bool)
(declare-fun x2876 () Real)
(declare-fun x3927 () Real)
(declare-fun x1254 () Bool)
(declare-fun x666 () Real)
(declare-fun x1242 () Bool)
(declare-fun x1854 () Real)
(declare-fun x249 () Bool)
(declare-fun x1015 () Real)
(declare-fun x967 () Real)
(declare-fun x1127 () Bool)
(declare-fun x4021 () Bool)
(declare-fun x1536 () Real)
(declare-fun x2764 () Real)
(declare-fun x2281 () x1285)
(declare-fun x1687 () Bool)
(declare-fun x1262 () Real)
(declare-fun x1117 () Bool)
(declare-fun x898 () Real)
(declare-fun x1346 () Bool)
(declare-fun x200 () Real)
(declare-fun x2783 () Bool)
(declare-fun x329 () x1285)
(declare-fun x675 () Real)
(declare-fun x3131 () Real)
(declare-fun x1267 (Real) Real)
(declare-fun x122 () Real)
(declare-fun x1568 () Real)
(declare-fun x2836 () Bool)
(declare-fun x2161 () Real)
(declare-fun x29 () Bool)
(declare-fun x266 () Bool)
(declare-fun x902 () Real)
(declare-fun x3226 () Real)
(declare-fun x841 () Real)
(declare-fun x3354 () Bool)
(declare-fun x3348 () Real)
(declare-fun x1311 () Real)
(declare-fun x2397 () Real)
(declare-fun x2416 () Real)
(declare-fun x284 () Real)
(declare-fun x1296 () Bool)
(declare-fun x4133 () Bool)
(declare-fun x2789 () Real)
(declare-fun x2000 () Real)
(declare-fun x3225 () Bool)
(declare-fun x2600 () Bool)
(declare-fun x1499 () Bool)
(declare-fun x4046 () Real)
(declare-fun x3912 () Bool)
(declare-fun x1585 () Real)
(declare-fun x2258 () Real)
(declare-fun x1198 () Real)
(declare-fun x3871 () Bool)
(declare-fun x97 () Bool)
(declare-fun x1562 () Bool)
(declare-fun x3049 () Bool)
(declare-fun x4126 () Bool)
(declare-fun x2381 () Real)
(declare-fun x3901 (x1285) Real)
(declare-fun x3608 () Bool)
(declare-fun x2692 () Bool)
(declare-fun x2345 () Real)
(declare-fun x347 () Bool)
(declare-fun x182 () Real)
(declare-fun x661 () Bool)
(declare-fun x25 () Bool)
(declare-fun x3102 () x1285)
(declare-fun x570 () Real)
(declare-fun x730 () Real)
(declare-fun x225 () Real)
(declare-fun x2420 () Real)
(declare-fun x2762 () Real)
(declare-fun x1845 () Real)
(declare-fun x3682 () Real)
(declare-fun x262 () Bool)
(declare-fun x3552 () Real)
(declare-fun x3420 () Real)
(declare-fun x3987 () Bool)
(declare-fun x3274 () Bool)
(declare-fun x2074 () Real)
(declare-fun x3736 () Bool)
(declare-fun x1754 () Real)
(declare-fun x1988 () Bool)
(declare-fun x1299 () Bool)
(declare-fun x3365 () Real)
(declare-fun x2904 () Bool)
(declare-fun x2299 () Real)
(declare-fun x4299 () Real)
(declare-fun x3143 () Bool)
(declare-fun x536 () Real)
(declare-fun x360 () Real)
(declare-fun x1253 () Real)
(declare-fun x588 () Bool)
(declare-fun x3727 () Bool)
(declare-fun x2327 () Real)
(declare-fun x3221 () Bool)
(declare-fun x3122 () Real)
(declare-fun x129 () Bool)
(declare-fun x2549 () Bool)
(declare-fun x4167 () Bool)
(declare-fun x1848 () Real)
(declare-fun x3602 () Real)
(declare-fun x707 () Bool)
(declare-fun x2631 () Real)
(declare-fun x1414 () Real)
(declare-fun x1940 () Bool)
(declare-fun x3457 () Real)
(declare-fun x1380 () Real)
(declare-fun x2302 () x1285)
(declare-fun x2465 () Real)
(declare-fun x145 () Bool)
(declare-fun x3714 () Real)
(declare-fun x2712 () Real)
(declare-fun x2307 () Real)
(declare-fun x1512 () Real)
(declare-fun x1892 () Bool)
(declare-fun x790 () Bool)
(declare-fun x793 () Bool)
(declare-fun x2709 () Real)
(declare-fun x2095 () Real)
(declare-fun x1675 () Real)
(declare-fun x2123 () Bool)
(declare-fun x3746 () Bool)
(declare-fun x62 () Bool)
(declare-fun x734 () Real)
(declare-fun x3879 () Real)
(declare-fun x115 () Real)
(declare-fun x859 () Bool)
(declare-fun x3936 () Real)
(declare-fun x3409 () Bool)
(declare-fun x1973 () Bool)
(declare-fun x1340 () Bool)
(declare-fun x355 () Bool)
(declare-fun x612 () Real)
(declare-fun x977 () Bool)
(declare-fun x687 () Real)
(declare-fun x2849 () Real)
(declare-fun x2448 (x1285) Real)
(declare-fun x1829 () Bool)
(declare-fun x1626 () Bool)
(declare-fun x2115 (x1285) Real)
(declare-fun x864 () Real)
(declare-fun x3891 () x1285)
(declare-fun x914 () Bool)
(declare-fun x1355 () Bool)
(declare-fun x2051 () Real)
(declare-fun x1217 () Real)
(declare-fun x2321 () Bool)
(declare-fun x3863 () x1285)
(declare-fun x1347 () Real)
(declare-fun x373 () Real)
(declare-fun x531 (Real) Real)
(declare-fun x1320 () Real)
(declare-fun x2089 () Bool)
(declare-fun x2530 () Real)
(declare-fun x2338 () Real)
(declare-fun x3782 () Real)
(declare-fun x176 () Bool)
(declare-fun x2226 () Bool)
(declare-fun x741 (Real) Real)
(declare-fun x1735 () Bool)
(declare-fun x2679 () Real)
(declare-fun x1921 () Real)
(declare-fun x3860 () Bool)
(declare-fun x4181 () Bool)
(declare-fun x1321 (x1285) Real)
(declare-fun x425 () Real)
(declare-fun x1881 (Real) Real)
(declare-fun x3390 () Bool)
(declare-fun x1509 () x1285)
(declare-fun x3867 () Real)
(declare-fun x3026 () Real)
(declare-fun x3086 () Real)
(declare-fun x2637 (Real) Real)
(declare-fun x2523 () Real)
(declare-fun x4270 () Real)
(declare-fun x2685 () Bool)
(declare-fun x2854 () Bool)
(declare-fun x1326 () Bool)
(declare-fun x1407 () Real)
(declare-fun x809 () Real)
(declare-fun x3695 () Real)
(declare-fun x3567 () Real)
(declare-fun x2730 () x1285)
(declare-fun x1045 () Bool)
(declare-fun x399 () Bool)
(declare-fun x1791 () Real)
(declare-fun x1228 () Real)
(declare-fun x1595 () Bool)
(declare-fun x193 () Bool)
(declare-fun x15 () Real)
(declare-fun x379 () Bool)
(declare-fun x3096 () Real)
(declare-fun x336 () Bool)
(declare-fun x2054 () Bool)
(declare-fun x1870 () Bool)
(declare-fun x994 () Bool)
(declare-fun x2532 () Real)
(declare-fun x601 () Bool)
(declare-fun x3803 () Bool)
(declare-fun x3739 () Bool)
(declare-fun x1230 () Bool)
(declare-fun x4185 () Bool)
(declare-fun x1411 () Bool)
(declare-fun x2343 () Real)
(declare-fun x3969 () Bool)
(declare-fun x4120 () Real)
(declare-fun x1287 () Real)
(declare-fun x940 () Real)
(declare-fun x2014 () Real)
(declare-fun x2694 () Bool)
(declare-fun x3333 () Bool)
(declare-fun x4191 () Real)
(declare-fun x2119 () Real)
(declare-fun x1037 () Real)
(declare-fun x1159 () Real)
(declare-fun x3793 () Bool)
(declare-fun x1365 () Bool)
(declare-fun x3798 () Real)
(declare-fun x3691 () Real)
(declare-fun x2941 () Real)
(declare-fun x2670 () Real)
(declare-fun x3577 () Real)
(declare-fun x2311 () Bool)
(declare-fun x4288 () Real)
(declare-fun x3835 () Bool)
(declare-fun x1857 () Bool)
(declare-fun x974 () Bool)
(declare-fun x590 () Bool)
(declare-fun x169 () Real)
(declare-fun x2070 () Bool)
(declare-fun x775 () Real)
(declare-fun x1450 () Real)
(declare-fun x2664 () Real)
(declare-fun x2597 () Bool)
(declare-fun x3314 () Real)
(declare-fun x2673 () Bool)
(declare-fun x4279 () x1285)
(declare-fun x2800 () Real)
(declare-fun x1709 () Real)
(declare-fun x778 () Bool)
(declare-fun x1600 () Bool)
(declare-fun x663 () Bool)
(declare-fun x2982 () Real)
(declare-fun x3381 () Bool)
(declare-fun x1074 () Bool)
(declare-fun x3915 () x1285)
(declare-fun x2656 () Bool)
(declare-fun x1172 () Real)
(declare-fun x1437 () Bool)
(declare-fun x3323 () Bool)
(declare-fun x3613 () Bool)
(declare-fun x1971 () Real)
(declare-fun x3277 () Real)
(declare-fun x445 () Real)
(declare-fun x2247 () Real)
(declare-fun x2572 () Real)
(declare-fun x2323 (x1285) Real)
(declare-fun x3235 () Bool)
(declare-fun x4231 () Bool)
(declare-fun x748 () Bool)
(declare-fun x3869 (Real Real) Real)
(declare-fun x3749 () Real)
(declare-fun x2993 () Bool)
(declare-fun x2696 () Bool)
(declare-fun x6 () Bool)
(declare-fun x2140 () Bool)
(declare-fun x1615 () Real)
(declare-fun x2738 () Bool)
(declare-fun x3570 () Real)
(declare-fun x333 () Bool)
(declare-fun x512 () Real)
(declare-fun x2464 () x1285)
(declare-fun x2649 () Bool)
(declare-fun x795 () Real)
(declare-fun x1786 () Real)
(declare-fun x1071 () Bool)
(declare-fun x1655 () Real)
(declare-fun x3644 () Bool)
(declare-fun x819 () Bool)
(declare-fun x1087 () Bool)
(declare-fun x2899 () Real)
(declare-fun x3380 () Bool)
(declare-fun x1707 () x1285)
(declare-fun x3924 () Bool)
(declare-fun x1469 () Real)
(declare-fun x1142 () Real)
(declare-fun x566 () Real)
(declare-fun x1732 () Bool)
(declare-fun x106 () Real)
(declare-fun x2091 () x1285)
(declare-fun x4051 () Bool)
(declare-fun x953 () Real)
(declare-fun x1958 () Bool)
(declare-fun x3305 () Bool)
(declare-fun x2833 () Real)
(declare-fun x3588 (Real) Real)
(declare-fun x2198 () Bool)
(declare-fun x1239 () Bool)
(declare-fun x942 () Real)
(declare-fun x392 () Bool)
(declare-fun x1000 () Bool)
(declare-fun x2145 () Bool)
(declare-fun x2799 () Real)
(declare-fun x766 (x1285) Real)
(declare-fun x3941 () Bool)
(declare-fun x2065 () Bool)
(declare-fun x1946 () Bool)
(declare-fun x31 () Bool)
(declare-fun x1 () Bool)
(declare-fun x3061 () Bool)
(declare-fun x2740 () Real)
(declare-fun x418 () Bool)
(declare-fun x1489 () Real)
(declare-fun x2237 () Bool)
(declare-fun x3859 () Bool)
(declare-fun x763 () Bool)
(declare-fun x1750 () Bool)
(declare-fun x3171 () Real)
(declare-fun x1778 (Real) Real)
(declare-fun x4199 () Bool)
(declare-fun x3396 () Bool)
(declare-fun x3479 () Bool)
(declare-fun x1867 () Real)
(declare-fun x993 () Real)
(declare-fun x2844 () Bool)
(declare-fun x621 () Real)
(declare-fun x516 () Bool)
(declare-fun x4019 () Real)
(declare-fun x4084 () Bool)
(declare-fun x1944 () Real)
(declare-fun x2290 () Real)
(declare-fun x1309 () Real)
(declare-fun x3372 () Bool)
(declare-fun x3726 () Bool)
(declare-fun x1056 () x1285)
(declare-fun x2957 () Bool)
(declare-fun x916 () Bool)
(declare-fun x2005 () Real)
(declare-fun x3302 () Real)
(declare-fun x3330 () Bool)
(declare-fun x3264 () x1285)
(declare-fun x4092 () Real)
(declare-fun x4030 () Real)
(declare-fun x3991 () Real)
(declare-fun x2639 () Bool)
(declare-fun x177 () Real)
(declare-fun x1901 () Real)
(declare-fun x263 () Bool)
(declare-fun x1862 () Bool)
(declare-fun x2917 () Real)
(declare-fun x2769 () Real)
(declare-fun x2987 () Bool)
(declare-fun x1399 () Real)
(declare-fun x2031 () Real)
(declare-fun x2578 () Real)
(declare-fun x3686 () Bool)
(declare-fun x2062 (x1285) Real)
(declare-fun x1587 () Real)
(declare-fun x1795 () Bool)
(declare-fun x2766 () Real)
(declare-fun x43 () Real)
(declare-fun x1728 (Real) Real)
(declare-fun x1734 () Bool)
(declare-fun x2454 () Real)
(declare-fun x2691 () Bool)
(declare-fun x3319 () Real)
(declare-fun x3364 () Bool)
(declare-fun x794 () Real)
(declare-fun x3683 () Real)
(declare-fun x3817 () Bool)
(declare-fun x1181 () Real)
(declare-fun x2362 () Real)
(declare-fun x2896 () Bool)
(declare-fun x4159 () Real)
(declare-fun x2840 () Bool)
(declare-fun x3101 () Bool)
(declare-fun x2534 () Real)
(declare-fun x119 () Real)
(declare-fun x3701 () Bool)
(declare-fun x1983 () x1285)
(declare-fun x1416 () Bool)
(declare-fun x3528 () Real)
(declare-fun x1426 () Real)
(declare-fun x574 () Bool)
(declare-fun x3363 () Bool)
(declare-fun x1433 () Real)
(declare-fun x1300 () Real)
(declare-fun x2087 () Bool)
(declare-fun x1191 () Real)
(declare-fun x3153 () Real)
(declare-fun x3555 () Real)
(declare-fun x3559 () Real)
(declare-fun x326 () Real)
(declare-fun x3636 (Real) Real)
(declare-fun x2179 () Bool)
(declare-fun x1371 (Real) Real)
(declare-fun x810 () Bool)
(declare-fun x2568 () Real)
(declare-fun x1649 () Bool)
(declare-fun x1203 () Bool)
(declare-fun x3036 (Real) Real)
(declare-fun x2931 () Real)
(declare-fun x2230 () Bool)
(declare-fun x1962 () Bool)
(declare-fun x755 () Bool)
(declare-fun x760 () Bool)
(declare-fun x860 () Bool)
(declare-fun x645 () Real)
(declare-fun x1624 () Bool)
(declare-fun x1150 () Bool)
(declare-fun x1651 () Real)
(declare-fun x3190 () Bool)
(declare-fun x3841 () Real)
(declare-fun x1864 (x1285) Real)
(declare-fun x783 () Real)
(declare-fun x603 () Bool)
(declare-fun x1506 () Bool)
(declare-fun x4034 () Real)
(declare-fun x1325 () Real)
(declare-fun x2959 (x1285) Real)
(declare-fun x3398 () Bool)
(declare-fun x580 () Real)
(declare-fun x2312 () Real)
(declare-fun x3804 () Bool)
(declare-fun x1855 () Real)
(declare-fun x4237 () Bool)
(declare-fun x1128 () Bool)
(declare-fun x1972 () Bool)
(declare-fun x2206 (x1285) Real)
(declare-fun x1974 () Real)
(declare-fun x995 () Real)
(declare-fun x1612 () Real)
(declare-fun x49 () Bool)
(declare-fun x391 () Bool)
(declare-fun x50 () Bool)
(declare-fun x1470 () Bool)
(declare-fun x3610 () Bool)
(declare-fun x3876 () Bool)
(declare-fun x3637 () Bool)
(declare-fun x275 () x1285)
(declare-fun x4129 () x1285)
(declare-fun x1780 () Bool)
(declare-fun x497 () Bool)
(declare-fun x3943 () Real)
(declare-fun x4286 () Real)
(declare-fun x1557 () Real)
(declare-fun x1063 () Bool)
(declare-fun x2960 () Real)
(declare-fun x2399 () Real)
(declare-fun x2736 () x1285)
(declare-fun x1427 () Real)
(declare-fun x575 () Bool)
(declare-fun x3368 () Bool)
(declare-fun x769 () Real)
(declare-fun x4134 () Real)
(declare-fun x854 () Real)
(declare-fun x2313 () x1285)
(declare-fun x2236 () Bool)
(declare-fun x2756 () Bool)
(declare-fun x3369 () Bool)
(declare-fun x1428 () Bool)
(declare-fun x3993 () Bool)
(declare-fun x3548 () Real)
(declare-fun x214 () Bool)
(declare-fun x1695 () Real)
(declare-fun x3533 (x1285) Real)
(declare-fun x1584 () Bool)
(declare-fun x1802 () Real)
(declare-fun x2347 () Bool)
(declare-fun x2289 () Real)
(declare-fun x3494 () Bool)
(declare-fun x1339 () Bool)
(declare-fun x3635 () Real)
(declare-fun x3182 () Bool)
(declare-fun x4283 () Bool)
(declare-fun x2181 () Bool)
(declare-fun x1382 () Bool)
(declare-fun x1316 () Real)
(declare-fun x334 () Bool)
(declare-fun x3705 () x1285)
(declare-fun x99 () Bool)
(declare-fun x3329 () Real)
(declare-fun x3080 () Bool)
(declare-fun x348 () Real)
(declare-fun x2621 () Bool)
(declare-fun x4203 () Real)
(declare-fun x1680 () Real)
(declare-fun x1788 () Real)
(declare-fun x4058 () Bool)
(declare-fun x3770 () Real)
(declare-fun x3530 () Bool)
(declare-fun x4000 () Real)
(declare-fun x891 () Bool)
(declare-fun x1235 () Real)
(declare-fun x1648 (Real) Real)
(declare-fun x495 () Real)
(declare-fun x2540 () Real)
(declare-fun x4087 () Bool)
(declare-fun x131 () Real)
(declare-fun x582 () Bool)
(declare-fun x1247 (x1285) Real)
(declare-fun x1571 () Bool)
(declare-fun x1708 () Real)
(declare-fun x2517 () Real)
(declare-fun x4094 () Bool)
(declare-fun x2490 () Bool)
(declare-fun x1466 () Real)
(declare-fun x2950 () Bool)
(declare-fun x1085 () Bool)
(declare-fun x1341 () Real)
(declare-fun x3957 () Bool)
(declare-fun x3604 () Real)
(declare-fun x2411 () x1285)
(declare-fun x4175 () Bool)
(declare-fun x277 () x1285)
(declare-fun x962 () Real)
(declare-fun x1328 () Bool)
(declare-fun x771 () Bool)
(declare-fun x830 () Real)
(declare-fun x2537 () Real)
(declare-fun x632 () Bool)
(declare-fun x1842 () Bool)
(declare-fun x3468 (x1285) Real)
(declare-fun x3082 () Real)
(declare-fun x696 () Bool)
(declare-fun x3326 () Real)
(declare-fun x1031 () Real)
(declare-fun x4217 () Real)
(declare-fun x903 () Bool)
(declare-fun x2599 () Real)
(declare-fun x4177 () Bool)
(declare-fun x3802 () Real)
(declare-fun x51 () Real)
(declare-fun x3506 () Bool)
(declare-fun x782 () Real)
(declare-fun x389 () Bool)
(declare-fun x2056 () Real)
(declare-fun x3598 () Bool)
(declare-fun x2170 () Real)
(declare-fun x3848 () Real)
(declare-fun x3312 () Real)
(declare-fun x496 () Real)
(declare-fun x756 () x1285)
(declare-fun x4251 () Real)
(declare-fun x3449 () Real)
(declare-fun x3812 () Real)
(declare-fun x3465 () Bool)
(declare-fun x184 () Bool)
(declare-fun x1258 () Real)
(declare-fun x1547 () x1285)
(declare-fun x2558 () Bool)
(declare-fun x4166 () Real)
(declare-fun x4083 () Bool)
(declare-fun x3095 () Bool)
(declare-fun x1400 () Real)
(declare-fun x3647 () Real)
(declare-fun x1422 () Real)
(declare-fun x1865 () Bool)
(declare-fun x335 () Real)
(declare-fun x4256 () Bool)
(declare-fun x2322 () Bool)
(declare-fun x1724 () Real)
(declare-fun x1094 () Bool)
(declare-fun x926 () Bool)
(declare-fun x2049 () Real)
(declare-fun x3152 (Real) Real)
(declare-fun x1394 () Real)
(declare-fun x2487 () Bool)
(declare-fun x1957 () Real)
(declare-fun x681 () Bool)
(declare-fun x3246 () Bool)
(declare-fun x3416 (Real) Real)
(declare-fun x1401 () Bool)
(declare-fun x3874 () Real)
(declare-fun x4071 () Bool)
(declare-fun x3117 () Bool)
(declare-fun x2467 () Bool)
(declare-fun x3537 () Real)
(declare-fun x1345 (x1285) Real)
(declare-fun x2278 () Bool)
(declare-fun x2923 () Real)
(declare-fun x403 () Real)
(declare-fun x2172 () x1285)
(declare-fun x3272 () Bool)
(declare-fun x2291 () Bool)
(declare-fun x3551 () Bool)
(declare-fun x3233 () Bool)
(declare-fun x3184 () Bool)
(declare-fun x576 () Bool)
(declare-fun x375 () Bool)
(declare-fun x1821 () Bool)
(declare-fun x3857 () Real)
(declare-fun x690 () Real)
(declare-fun x2476 () Bool)
(declare-fun x1880 (Real) Real)
(declare-fun x3729 () Bool)
(declare-fun x2956 () Real)
(declare-fun x4249 () Bool)
(declare-fun x2442 () x1285)
(declare-fun x3881 () Real)
(declare-fun x1374 () Bool)
(declare-fun x3764 () Real)
(declare-fun x2965 () Real)
(declare-fun x2937 () Real)
(declare-fun x3899 () Real)
(declare-fun x3287 () Real)
(declare-fun x3009 () Bool)
(declare-fun x581 () Bool)
(declare-fun x2215 () Bool)
(declare-fun x1319 () Bool)
(declare-fun x3413 () Real)
(declare-fun x844 () Bool)
(declare-fun x1241 () Real)
(declare-fun x400 () Bool)
(declare-fun x4275 () Bool)
(declare-fun x2500 () Bool)
(declare-fun x4002 () Real)
(declare-fun x3678 () Real)
(declare-fun x1430 () Real)
(declare-fun x3880 () Bool)
(declare-fun x1412 () Bool)
(declare-fun x139 () Real)
(declare-fun x2788 () Bool)
(declare-fun x1434 () Bool)
(declare-fun x2475 () Bool)
(declare-fun x194 () Real)
(declare-fun x421 () Bool)
(declare-fun x1766 () x1285)
(declare-fun x4271 () Real)
(declare-fun x2177 () Bool)
(declare-fun x22 () Bool)
(declare-fun x3257 () Real)
(declare-fun x2135 () Bool)
(declare-fun x2688 () Real)
(declare-fun x3773 () Bool)
(declare-fun x1661 () Bool)
(declare-fun x2007 () Real)
(declare-fun x4194 () Real)
(declare-fun x521 () Real)
(declare-fun x376 () Bool)
(declare-fun x876 () Real)
(declare-fun x3846 () Real)
(declare-fun x1091 () Real)
(declare-fun x311 () Bool)
(declare-fun x1013 () Real)
(declare-fun x4097 () Bool)
(declare-fun x855 () Real)
(declare-fun x170 () Real)
(declare-fun x2286 () Bool)
(declare-fun x3440 () x1285)
(declare-fun x1496 () Bool)
(declare-fun x2581 (x1285) Real)
(declare-fun x16 () Bool)
(declare-fun x3085 () Real)
(declare-fun x2722 () Bool)
(declare-fun x2898 () x1285)
(declare-fun x708 () Real)
(declare-fun x4182 () Real)
(declare-fun x2256 () Bool)
(declare-fun x2971 () Bool)
(declare-fun x2839 () Bool)
(declare-fun x1909 () Bool)
(declare-fun x3270 () x1285)
(declare-fun x786 (x1285) Real)
(declare-fun x2401 () Bool)
(declare-fun x367 () x1285)
(declare-fun x518 (Real) Real)
(declare-fun x3483 () Real)
(declare-fun x1888 () x1285)
(declare-fun x719 () Real)
(declare-fun x3216 () Real)
(declare-fun x1173 () Bool)
(declare-fun x3173 () Real)
(declare-fun x960 () Real)
(declare-fun x1297 () Real)
(declare-fun x2441 () Bool)
(declare-fun x3185 () Real)
(declare-fun x2447 () Bool)
(declare-fun x3609 () Real)
(declare-fun x2310 () Bool)
(declare-fun x1969 () x1285)
(declare-fun x3928 () Real)
(declare-fun x1220 () Real)
(declare-fun x2945 () Bool)
(declare-fun x2934 () Real)
(declare-fun x256 () Real)
(declare-fun x3641 (x1285) Real)
(declare-fun x2218 () Bool)
(declare-fun x3107 () Real)
(declare-fun x3971 () Bool)
(declare-fun x1859 () Real)
(declare-fun x1938 () Bool)
(declare-fun x2551 () Bool)
(declare-fun x4 () Real)
(declare-fun x3345 () Bool)
(declare-fun x3303 (Real) Real)
(declare-fun x71 () Bool)
(declare-fun x2882 () Bool)
(declare-fun x2390 () Real)
(declare-fun x3359 () Bool)
(declare-fun x3563 () Bool)
(declare-fun x3243 () Real)
(declare-fun x1206 (Real) Real)
(declare-fun x4039 () Bool)
(declare-fun x2040 () Real)
(declare-fun x1576 () Real)
(declare-fun x2866 () Bool)
(declare-fun x469 () Bool)
(declare-fun x3653 () Bool)
(declare-fun x1312 () Bool)
(declare-fun x4229 () Real)
(declare-fun x3707 () Bool)
(declare-fun x3685 () Real)
(declare-fun x2063 () Real)
(declare-fun x1182 () Bool)
(declare-fun x3952 () Bool)
(declare-fun x3774 () Real)
(declare-fun x2571 () Real)
(declare-fun x2359 () Bool)
(declare-fun x1168 () Real)
(declare-fun x485 () Bool)
(declare-fun x2112 () Bool)
(declare-fun x3069 () Real)
(declare-fun x1453 () Real)
(declare-fun x2295 () Real)
(declare-fun x3954 () Real)
(declare-fun x1301 () Real)
(declare-fun x3456 () Real)
(declare-fun x1445 () Real)
(declare-fun x1719 () Bool)
(declare-fun x569 () Real)
(declare-fun x2016 () Real)
(declare-fun x229 () x1285)
(declare-fun x2718 () Bool)
(declare-fun x1692 () Bool)
(declare-fun x2780 () Bool)
(declare-fun x2846 () Real)
(declare-fun x2760 () Bool)
(declare-fun x1826 () Real)
(declare-fun x1162 () Real)
(declare-fun x2029 () Real)
(declare-fun x3271 () Bool)
(declare-fun x1154 () Bool)
(declare-fun x3554 () Bool)
(declare-fun x2790 () Bool)
(declare-fun x465 () Bool)
(declare-fun x3571 () Bool)
(declare-fun x1838 () Bool)
(declare-fun x711 () Real)
(declare-fun x231 () Bool)
(declare-fun x3740 () Bool)
(declare-fun x3161 (x1285) Real)
(declare-fun x2252 () x1285)
(declare-fun x1042 () Bool)
(declare-fun x2669 () Real)
(declare-fun x2041 () Bool)
(declare-fun x3111 () Real)
(declare-fun x3412 () Bool)
(declare-fun x735 () Real)
(declare-fun x1245 () Bool)
(declare-fun x2214 () x1285)
(declare-fun x713 () Real)
(declare-fun x274 () Bool)
(declare-fun x2584 () Real)
(declare-fun x1679 () Real)
(declare-fun x3355 () x1285)
(declare-fun x42 () Real)
(declare-fun x3104 () Bool)
(declare-fun x185 () Real)
(declare-fun x2233 () Bool)
(declare-fun x1866 () Bool)
(declare-fun x354 () Real)
(declare-fun x1112 () Bool)
(declare-fun x1955 () Bool)
(declare-fun x317 () Real)
(declare-fun x3172 (x1285) Real)
(declare-fun x4290 () Bool)
(declare-fun x168 () Bool)
(declare-fun x3452 () Real)
(declare-fun x4263 () Real)
(declare-fun x32 () Real)
(declare-fun x3756 () Real)
(declare-fun x2107 () Bool)
(declare-fun x1252 () Real)
(declare-fun x2019 () x1285)
(declare-fun x118 () Bool)
(declare-fun x1926 () x1285)
(declare-fun x4196 () Bool)
(declare-fun x3844 () Bool)
(declare-fun x2257 () Bool)
(declare-fun x1233 () Real)
(declare-fun x3070 () x1285)
(declare-fun x2419 () Bool)
(declare-fun x3633 () Bool)
(declare-fun x1677 () Real)
(declare-fun x1360 () Bool)
(declare-fun x3660 () Real)
(declare-fun x507 () Bool)
(declare-fun x3159 () Bool)
(declare-fun x2559 () x1285)
(declare-fun x2433 () Bool)
(declare-fun x183 () Real)
(declare-fun x378 () Real)
(declare-fun x989 () Bool)
(declare-fun x1187 () Bool)
(declare-fun x3349 () Bool)
(declare-fun x1890 () Real)
(declare-fun x1027 () Real)
(declare-fun x3762 () Real)
(declare-fun x2723 () Bool)
(declare-fun x558 () Real)
(declare-fun x3351 () Bool)
(declare-fun x1550 () Bool)
(declare-fun x3520 () Real)
(declare-fun x37 () Real)
(declare-fun x3738 () Real)
(declare-fun x2404 () Real)
(declare-fun x1548 () Real)
(declare-fun x2895 () x1285)
(declare-fun x4197 () Bool)
(declare-fun x1943 () Real)
(declare-fun x3146 () Bool)
(declare-fun x3007 () Real)
(declare-fun x1966 () Real)
(declare-fun x4189 () Real)
(declare-fun x2995 () Real)
(declare-fun x1538 () Bool)
(declare-fun x1844 () Real)
(declare-fun x3289 () Bool)
(declare-fun x996 () Real)
(declare-fun x4108 () Real)
(declare-fun x1349 () Bool)
(declare-fun x702 () Real)
(declare-fun x298 () Real)
(declare-fun x853 () Bool)
(declare-fun x2582 () Bool)
(declare-fun x196 () Bool)
(declare-fun x1759 () Bool)
(declare-fun x2417 () Real)
(declare-fun x1544 (x1285) Real)
(declare-fun x2076 () Bool)
(declare-fun x2157 () Real)
(declare-fun x178 () Real)
(declare-fun x424 () Real)
(declare-fun x2666 () Real)
(declare-fun x3286 () Real)
(declare-fun x3064 () Bool)
(declare-fun x221 () Bool)
(declare-fun x1183 () Real)
(declare-fun x3342 () Bool)
(declare-fun x3093 () Real)
(declare-fun x773 () Real)
(declare-fun x804 () Bool)
(declare-fun x1304 () Bool)
(declare-fun x3587 () Bool)
(declare-fun x593 () Bool)
(declare-fun x4178 () Real)
(declare-fun x457 () Real)
(declare-fun x703 (Real) Real)
(declare-fun x1279 () Real)
(declare-fun x4009 () Real)
(declare-fun x4220 () Real)
(declare-fun x3617 () Real)
(declare-fun x2613 () Real)
(declare-fun x3758 () Real)
(declare-fun x4047 () Bool)
(declare-fun x1417 () Bool)
(declare-fun x3538 () Real)
(declare-fun x869 () Bool)
(declare-fun x292 () x1285)
(declare-fun x10 () Real)
(declare-fun x1386 () Bool)
(declare-fun x294 () Real)
(declare-fun x4062 () Bool)
(declare-fun x3972 () Real)
(declare-fun x1591 () Real)
(declare-fun x2553 () Bool)
(declare-fun x2894 () x1285)
(declare-fun x2972 () Bool)
(declare-fun x1989 () Real)
(declare-fun x1647 () Bool)
(declare-fun x41 () Bool)
(declare-fun x3977 () Bool)
(declare-fun x745 () Real)
(declare-fun x3822 () Real)
(declare-fun x3600 () Bool)
(declare-fun x3040 (x1285) Real)
(declare-fun x1113 () Real)
(declare-fun x2126 () x1285)
(declare-fun x1951 () Real)
(declare-fun x716 () Real)
(declare-fun x3047 () Real)
(declare-fun x732 () Real)
(declare-fun x3081 () Bool)
(declare-fun x4151 () Bool)
(declare-fun x405 () Bool)
(declare-fun x2460 () Real)
(declare-fun x1101 () Bool)
(declare-fun x552 () Real)
(declare-fun x234 () Real)
(declare-fun x490 () x1285)
(declare-fun x799 (Real) Real)
(declare-fun x1232 () Bool)
(declare-fun x561 () Real)
(declare-fun x3834 () Bool)
(declare-fun x2615 () Bool)
(declare-fun x1825 () Bool)
(declare-fun x3195 () Real)
(declare-fun x3438 () Real)
(declare-fun x3024 () Real)
(declare-fun x1061 () Bool)
(declare-fun x3084 () Bool)
(declare-fun x1032 () Bool)
(declare-fun x1020 () Bool)
(declare-fun x2285 () Real)
(declare-fun x2920 () Bool)
(declare-fun x1403 (x1285) Real)
(declare-fun x1872 () x1285)
(declare-fun x685 () Bool)
(declare-fun x147 () Real)
(declare-fun x846 () Bool)
(declare-fun x2012 () Real)
(declare-fun x4074 () Bool)
(declare-fun x3414 () Real)
(declare-fun x2429 () Real)
(declare-fun x2686 () Real)
(declare-fun x243 () Bool)
(declare-fun x2998 () Bool)
(declare-fun x2384 () Real)
(declare-fun x3297 () Bool)
(declare-fun x1535 () Bool)
(declare-fun x171 (Real) Real)
(declare-fun x3046 () Bool)
(declare-fun x4056 () Real)
(declare-fun x364 () Bool)
(declare-fun x1570 () Bool)
(declare-fun x907 () Real)
(declare-fun x2862 () Bool)
(declare-fun x3645 () Bool)
(declare-fun x832 () Real)
(declare-fun x1224 () Real)
(declare-fun x3919 () x1285)
(declare-fun x2626 () Bool)
(declare-fun x2942 () Real)
(declare-fun x3278 (Real) Real)
(declare-fun x3507 () Bool)
(declare-fun x3790 () Real)
(declare-fun x4153 () Bool)
(declare-fun x998 () Bool)
(declare-fun x2094 () Bool)
(declare-fun x1742 () Real)
(declare-fun x2542 () x1285)
(declare-fun x1714 () Real)
(declare-fun x3785 () Bool)
(declare-fun x1964 (Real) Real)
(declare-fun x3175 () Bool)
(declare-fun x2379 () Real)
(declare-fun x368 () Real)
(declare-fun x2329 () Bool)
(declare-fun x1124 () Real)
(declare-fun x1934 () Real)
(declare-fun x4117 () Real)
(declare-fun x2703 () Bool)
(declare-fun x3599 () Real)
(declare-fun x1368 () Real)
(declare-fun x40 () Bool)
(declare-fun x2415 () Bool)
(declare-fun x2178 () Bool)
(declare-fun x2533 () Bool)
(declare-fun x2948 () Bool)
(declare-fun x3626 () Real)
(declare-fun x885 () Bool)
(declare-fun x3110 () Real)
(declare-fun x2309 () Real)
(declare-fun x473 () Bool)
(declare-fun x2884 () Bool)
(declare-fun x2092 () Bool)
(declare-fun x2919 () Real)
(declare-fun x1515 () Bool)
(declare-fun x2848 () Real)
(declare-fun x1019 () Bool)
(declare-fun x3010 () Real)
(declare-fun x1361 () Bool)
(declare-fun x1960 () Bool)
(declare-fun x2552 () Real)
(declare-fun x4018 () Real)
(declare-fun x2678 () x1285)
(declare-fun x4253 () Real)
(declare-fun x1529 () Real)
(declare-fun x4045 () Real)
(declare-fun x1148 () Bool)
(declare-fun x2129 () Real)
(declare-fun x3661 () Real)
(declare-fun x3014 () Real)
(declare-fun x3125 () Real)
(declare-fun x2908 () x1285)
(declare-fun x4300 () Real)
(declare-fun x4295 () x1285)
(declare-fun x2150 () Real)
(declare-fun x1029 (x1285) Real)
(declare-fun x456 () Bool)
(declare-fun x240 () Bool)
(declare-fun x3568 () Bool)
(declare-fun x70 () Real)
(declare-fun x314 () Real)
(declare-fun x2320 () Real)
(declare-fun x3181 () Bool)
(declare-fun x2220 (Real) Real)
(declare-fun x4274 () Bool)
(declare-fun x3461 () Real)
(declare-fun x3914 () Bool)
(declare-fun x3500 () Real)
(declare-fun x3191 () Real)
(declare-fun x1730 () Real)
(declare-fun x393 () Real)
(declare-fun x316 () Bool)
(declare-fun x3974 () x1285)
(declare-fun x1984 () Real)
(declare-fun x1044 () Real)
(declare-fun x946 () Bool)
(declare-fun x4278 () Real)
(declare-fun x1457 () Bool)
(declare-fun x2235 () Bool)
(declare-fun x777 () Real)
(declare-fun x541 () Bool)
(declare-fun x3476 () Bool)
(declare-fun x86 () Bool)
(declare-fun x2435 () Real)
(declare-fun x1108 () Bool)
(declare-fun x3424 () Bool)
(declare-fun x123 () Bool)
(declare-fun x310 () x1285)
(declare-fun x4214 () Bool)
(declare-fun x1805 () Real)
(declare-fun x3596 () Bool)
(declare-fun x4059 () Real)
(declare-fun x3495 () Real)
(declare-fun x1384 () Bool)
(declare-fun x3961 () Bool)
(declare-fun x3288 () Bool)
(declare-fun x4040 (x1285) Real)
(declare-fun x3462 () Bool)
(declare-fun x2357 () Real)
(declare-fun x3827 () Real)
(declare-fun x705 () Bool)
(declare-fun x2997 () Bool)
(declare-fun x704 () Real)
(declare-fun x664 () Bool)
(declare-fun x4188 () Bool)
(declare-fun x1956 () Real)
(declare-fun x2109 () Bool)
(declare-fun x3083 () Real)
(declare-fun x2802 () Bool)
(declare-fun x3931 () Real)
(declare-fun x3651 () Bool)
(declare-fun x2604 () Bool)
(declare-fun x3004 () Real)
(declare-fun x1508 () Bool)
(declare-fun x301 () Real)
(declare-fun x2622 () Bool)
(declare-fun x181 () x1285)
(declare-fun x2554 () Bool)
(declare-fun x1630 () Bool)
(declare-fun x2332 () Bool)
(declare-fun x2296 () Bool)
(declare-fun x3404 () x1285)
(declare-fun x3021 () Real)
(declare-fun x4125 () Bool)
(declare-fun x3547 () Bool)
(declare-fun x3422 () Real)
(declare-fun x1209 () Bool)
(declare-fun x2944 () Bool)
(declare-fun x1431 () Bool)
(declare-fun x1784 () Real)
(declare-fun x3988 () Bool)
(declare-fun x4053 () Real)
(declare-fun x38 () Real)
(declare-fun x1809 () Real)
(declare-fun x2407 () Real)
(declare-fun x3298 () Real)
(declare-fun x1686 () Real)
(declare-fun x3275 () Real)
(declare-fun x1741 () Real)
(declare-fun x1130 () Real)
(declare-fun x2111 () Bool)
(declare-fun x411 () Bool)
(declare-fun x1552 () Bool)
(declare-fun x2522 () Real)
(declare-fun x1333 () Bool)
(declare-fun x1033 () Real)
(declare-fun x1350 () Bool)
(declare-fun x3989 () Real)
(declare-fun x2149 () Real)
(declare-fun x4149 () Real)
(declare-fun x2477 () Real)
(declare-fun x1573 () Bool)
(declare-fun x4073 () Real)
(declare-fun x2253 () x1285)
(declare-fun x1541 () x1285)
(declare-fun x3048 () Bool)
(declare-fun x3259 () Real)
(declare-fun x1194 () Bool)
(declare-fun x92 () Bool)
(declare-fun x1273 () Real)
(declare-fun x2346 () Bool)
(declare-fun x873 () Bool)
(declare-fun x3890 () Bool)
(declare-fun x3752 () Bool)
(declare-fun x545 () Bool)
(declare-fun x2662 () Bool)
(declare-fun x2796 () Real)
(declare-fun x2221 () Real)
(declare-fun x2294 () Real)
(declare-fun x1627 () Bool)
(declare-fun x2026 () x1285)
(declare-fun x1518 () Bool)
(declare-fun x2315 () Real)
(declare-fun x3484 () Real)
(declare-fun x426 () Real)
(declare-fun x1105 () Real)
(declare-fun x585 () Real)
(declare-fun x3779 () Bool)
(declare-fun x2772 () Real)
(declare-fun x1215 () Real)
(declare-fun x1834 () Bool)
(declare-fun x1674 () Real)
(declare-fun x1836 () Bool)
(declare-fun x1681 () Real)
(declare-fun x572 () Real)
(declare-fun x149 () Bool)
(declare-fun x765 () Real)
(declare-fun x2503 () Bool)
(declare-fun x2569 () Real)
(declare-fun x3511 () Real)
(declare-fun x3241 () Bool)
(declare-fun x2793 () Bool)
(declare-fun x2739 () Bool)
(declare-fun x3763 () Real)
(declare-fun x3526 (x1285) Real)
(declare-fun x2217 () Bool)
(declare-fun x724 () Real)
(declare-fun x829 () Bool)
(declare-fun x319 () Real)
(declare-fun x2360 () Bool)
(declare-fun x140 () Bool)
(declare-fun x3446 () Real)
(declare-fun x3524 () Bool)
(declare-fun x2287 () Real)
(declare-fun x3251 () Real)
(declare-fun x3670 () Real)
(declare-fun x2943 (x1285) Real)
(declare-fun x1157 () Bool)
(declare-fun x1237 () Bool)
(declare-fun x2979 () Real)
(declare-fun x761 () Bool)
(declare-fun x2306 () Bool)
(declare-fun x1022 () Real)
(declare-fun x1281 () Bool)
(declare-fun x2863 () Bool)
(declare-fun x1057 () x1285)
(declare-fun x922 () Bool)
(declare-fun x1588 () Real)
(declare-fun x1388 () Bool)
(declare-fun x3824 () Real)
(declare-fun x1514 () x1285)
(declare-fun x3925 () Real)
(declare-fun x303 () Real)
(declare-fun x83 () Bool)
(declare-fun x1722 () Bool)
(declare-fun x1324 () Bool)
(declare-fun x3308 () Real)
(declare-fun x2061 () Real)
(declare-fun x2200 () Real)
(declare-fun x3690 (x1285) Real)
(declare-fun x4228 () Real)
(declare-fun x381 () Bool)
(declare-fun x1366 () Bool)
(declare-fun x4005 () x1285)
(declare-fun x3001 () Real)
(declare-fun x3439 () Real)
(declare-fun x3002 () Real)
(declare-fun x2676 () Bool)
(declare-fun x2494 () Real)
(declare-fun x2168 () x1285)
(declare-fun x1178 () Real)
(declare-fun x4028 () Bool)
(declare-fun x1998 () Bool)
(declare-fun x444 () Bool)
(declare-fun x3944 () Bool)
(declare-fun x4107 () Real)
(declare-fun x353 () Bool)
(declare-fun x2864 () Real)
(declare-fun x3034 () Real)
(declare-fun x2545 (Real) Real)
(declare-fun x1464 () Real)
(declare-fun x928 () Real)
(declare-fun x3535 () Bool)
(declare-fun x1118 () Real)
(declare-fun x3696 (Real) Real)
(declare-fun x215 () Bool)
(declare-fun x2791 () Bool)
(declare-fun x1476 () Bool)
(declare-fun x3315 () Real)
(declare-fun x1671 () Bool)
(declare-fun x3674 () Real)
(declare-fun x4204 () Bool)
(declare-fun x3316 () Bool)
(declare-fun x3187 () Real)
(declare-fun x2325 () Bool)
(declare-fun x3998 () Real)
(declare-fun x1134 () Bool)
(declare-fun x3022 () Real)
(declare-fun x3715 () Bool)
(declare-fun x2556 () Real)
(declare-fun x1676 () Real)
(declare-fun x701 (Real) Real)
(declare-fun x3663 () Bool)
(declare-fun x1577 () Bool)
(declare-fun x4218 () Bool)
(declare-fun x2855 () Real)
(declare-fun x3425 () Real)
(declare-fun x2354 () Bool)
(declare-fun x650 () Bool)
(declare-fun x3920 () Real)
(declare-fun x2130 () Bool)
(declare-fun x2134 () Bool)
(declare-fun x3642 () Real)
(declare-fun x3281 () Real)
(declare-fun x894 () Bool)
(declare-fun x1008 () Bool)
(declare-fun x961 () Real)
(declare-fun x3676 () Real)
(declare-fun x522 () Real)
(declare-fun x2015 () Real)
(declare-fun x461 () Real)
(declare-fun x3174 () Real)
(declare-fun x3079 () Bool)
(declare-fun x3540 () Real)
(declare-fun x1352 () Real)
(declare-fun x1223 () Bool)
(declare-fun x2308 () Real)
(declare-fun x58 () Real)
(declare-fun x1432 () Bool)
(declare-fun x3658 () Real)
(declare-fun x2570 () Real)
(declare-fun x2963 () Real)
(declare-fun x2374 () Real)
(declare-fun x4192 () Real)
(declare-fun x4280 () Bool)
(declare-fun x944 () Real)
(declare-fun x2727 () Real)
(declare-fun x3399 () Real)
(declare-fun x3893 () Real)
(declare-fun x2265 (Real) Real)
(declare-fun x255 () Real)
(declare-fun x1937 () Bool)
(declare-fun x3745 () Bool)
(declare-fun x4265 () Real)
(declare-fun x2812 () Real)
(declare-fun x1160 () Bool)
(declare-fun x2566 () Real)
(declare-fun x737 () Bool)
(declare-fun x4103 () Real)
(declare-fun x1818 () Real)
(declare-fun x957 () Bool)
(declare-fun x3624 () Bool)
(declare-fun x3068 () Bool)
(declare-fun x3179 () Bool)
(declare-fun x423 () Real)
(declare-fun x740 () x1285)
(declare-fun x3935 () Bool)
(declare-fun x1314 () x1285)
(declare-fun x2422 () Bool)
(declare-fun x271 () Real)
(declare-fun x402 () Real)
(declare-fun x625 () Bool)
(declare-fun x1831 () Real)
(declare-fun x692 (x1285) Real)
(declare-fun x3818 (Real) Real)
(declare-fun x2648 () Bool)
(declare-fun x3227 () Real)
(declare-fun x2195 () Bool)
(declare-fun x2574 () Real)
(declare-fun x2912 () Real)
(declare-fun x2474 () Real)
(declare-fun x3379 () Bool)
(declare-fun x3995 () Real)
(declare-fun x3866 () Bool)
(declare-fun x3698 () Real)
(declare-fun x2344 () x1285)
(declare-fun x1574 () Bool)
(declare-fun x1068 () Bool)
(declare-fun x3513 () Bool)
(declare-fun x2505 () Bool)
(declare-fun x1999 (x1285) Real)
(declare-fun x2451 () Real)
(declare-fun x1479 () Bool)
(declare-fun x3625 () Bool)
(declare-fun x2939 () Real)
(declare-fun x3015 () Real)
(declare-fun x2263 () Bool)
(declare-fun x2001 (Real) Real)
(declare-fun x307 () Real)
(declare-fun x68 () Bool)
(declare-fun x4207 () Real)
(declare-fun x3997 () x1285)
(declare-fun x3730 () Real)
(declare-fun x3294 () Real)
(declare-fun x2510 () Bool)
(declare-fun x1924 (Real) Real)
(define-fun x3546 ((x1285 x1285) (x3877 Real)) x1285 (ite ((_ is x2203) x1285) (x2203 (x4064 x1285) (+ (x1487 x1285) x3877)) (ite ((_ is x372) x1285) (x372 (x3786 x1285) (x352 x1285) (+ x3877 (x3177 x1285))) (x3377 (+ (x616 x1285) x3877)))))
(define-fun x2515 ((x134 Real)) Real (ite (and (>= x134 0) (< x134 115792089237316195423570985008687907853269984665640564039457584007913129639936)) x134 (- x134 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(define-fun x3402 ((x134 Real)) Real (ite (and (> 0 x134) (>= x134 (- 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (+ x134 115792089237316195423570985008687907853269984665640564039457584007913129639936) x134))
(define-fun x3207 ((x2643 Real)) Bool (and (< x2643 115792089237316195423570985008687907853269984665640564039457584007913129639936) (>= x2643 0)))
(define-fun x4176 ((x2643 Real)) Bool (and (= x2643 (x3037 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2643)) (= x2643 (x3037 x2643 115792089237316195423570985008687907853269984665640564039457584007913129639935))))
(define-fun x2398 ((x2643 Real)) Bool (and (= (x3037 x2643 0) 0) (= 0 (x3037 0 x2643))))
(define-fun x2355 ((x2643 Real)) Bool (= (x3037 x2643 x2643) x2643))
(define-fun x2954 ((x2643 Real)) Bool (and (x2398 x2643) (x4176 x2643) (x2355 x2643)))
(define-fun x2393 ((x2643 Real) (x1174 Real)) Bool (= (x3037 x1174 x2643) (x3037 x2643 x1174)))
(define-fun x4114 ((x2643 Real) (x1174 Real)) Bool (and (<= 0 (x3037 x2643 x1174)) (=> (>= x2643 0) (<= (x3037 x2643 x1174) x2643)) (=> (>= x1174 0) (>= x1174 (x3037 x2643 x1174)))))
(define-fun x2832 ((x2643 Real) (x1174 Real)) Bool (and (x4114 x2643 x1174) (x2393 x2643 x1174)))
(define-fun x706 ((x2643 Real)) Bool (= (x3037 1461501637330902918203684832716283019655932542975 (x3037 1461501637330902918203684832716283019655932542975 x2643)) (x3037 1461501637330902918203684832716283019655932542975 x2643)))
(define-fun x776 ((x2643 Real)) Bool (=> (and (>= x2643 0) (< x2643 1461501637330902918203684832716283019655932542976)) (= x2643 (x3037 1461501637330902918203684832716283019655932542975 x2643))))
(define-fun x2232 ((x2643 Real)) Bool (=> (= x2643 (x3037 1461501637330902918203684832716283019655932542975 x2643)) (and (>= x2643 0) (< x2643 1461501637330902918203684832716283019655932542976))))
(define-fun x3219 ((x2643 Real)) Bool (=> (and (> 2923003274661805836407369665432566039311865085952 x2643) (>= x2643 1461501637330902918203684832716283019655932542976)) (= (- x2643 1461501637330902918203684832716283019655932542976) (x3037 1461501637330902918203684832716283019655932542975 x2643))))
(define-fun x312 ((x2643 Real) (x1174 Real)) Bool (and (= (+ (x3037 1461501637330902918203684832716283019655932542975 x2643) (* 1461501637330902918203684832716283019655932542976 x1174)) x2643) (<= 0 x1174)))
(define-fun x2171 ((x2643 Real) (x2173 Real)) Bool (and (x312 x2643 x2173) (x776 x2643) (x2232 x2643) (x706 x2643) (x3219 x2643)))
(define-fun x657 ((x2643 Real) (x2173 Real)) Bool (and (x2171 x2643 x2173) (x2832 x2643 1461501637330902918203684832716283019655932542975)))
(define-fun x3376 ((x2643 Real)) Bool (= (x3037 255 (x3037 255 x2643)) (x3037 255 x2643)))
(define-fun x693 ((x2643 Real)) Bool (=> (and (> 256 x2643) (>= x2643 0)) (= (x3037 255 x2643) x2643)))
(define-fun x717 ((x2643 Real)) Bool (=> (= (x3037 255 x2643) x2643) (and (> 256 x2643) (<= 0 x2643))))
(define-fun x1874 ((x2643 Real)) Bool (=> (and (>= x2643 256) (> 512 x2643)) (= (- x2643 256) (x3037 255 x2643))))
(define-fun x3966 ((x2643 Real) (x1174 Real)) Bool (and (= x2643 (+ (* x1174 256) (x3037 255 x2643))) (>= x1174 0)))
(define-fun x1819 ((x2643 Real) (x2173 Real)) Bool (and (x717 x2643) (x3966 x2643 x2173) (x1874 x2643) (x3376 x2643) (x693 x2643)))
(define-fun x3825 ((x2643 Real) (x2173 Real)) Bool (and (x1819 x2643 x2173) (x2832 x2643 255)))
(define-fun x1659 ((x2643 Real)) Bool (= (x3037 115792089237316195423570985008687907853269984665640564039457584007913129639680 x2643) (x3037 115792089237316195423570985008687907853269984665640564039457584007913129639680 (x3037 115792089237316195423570985008687907853269984665640564039457584007913129639680 x2643))))
(define-fun x2371 ((x2643 Real)) Bool (=> (and (< x2643 256) (<= 0 x2643)) (= 0 (x3037 115792089237316195423570985008687907853269984665640564039457584007913129639680 x2643))))
(define-fun x573 ((x2643 Real) (x1174 Real) (x2421 Real) (x3261 Real)) Bool (and (= x2643 (+ (* 256 x2421) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3261) x1174)) (> 1 x3261) (>= x2421 0) (>= x1174 0) (> 452312848583266388373324160190187140051835877600158453279131187530910662656 x2421) (>= x3261 0) (= (x3037 115792089237316195423570985008687907853269984665640564039457584007913129639680 x2643) (* 256 x2421)) (< x1174 256)))
(define-fun x743 ((x2643 Real) (x514 Real) (x2603 Real) (x2254 Real)) Bool (and (x573 x2643 x514 x2603 x2254) (x2371 x2643) (x1659 x2643)))
(define-fun x627 ((x2643 Real) (x514 Real) (x2603 Real) (x2254 Real)) Bool (and (x2832 x2643 115792089237316195423570985008687907853269984665640564039457584007913129639680) (x743 x2643 x514 x2603 x2254)))
(define-fun x2279 ((x2643 Real)) Bool (= (x3037 115792089237316195423570985008687907853269984665640564039457584007913129639904 (x3037 115792089237316195423570985008687907853269984665640564039457584007913129639904 x2643)) (x3037 115792089237316195423570985008687907853269984665640564039457584007913129639904 x2643)))
(define-fun x915 ((x2643 Real)) Bool (=> (and (> 32 x2643) (>= x2643 0)) (= 0 (x3037 115792089237316195423570985008687907853269984665640564039457584007913129639904 x2643))))
(define-fun x414 ((x2643 Real) (x1174 Real) (x2421 Real) (x3261 Real)) Bool (and (< x2421 3618502788666131106986593281521497120414687020801267626233049500247285301248) (>= x3261 0) (> 32 x1174) (>= x1174 0) (< x3261 1) (= (+ x1174 (* 32 x2421) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3261)) x2643) (= (x3037 115792089237316195423570985008687907853269984665640564039457584007913129639904 x2643) (* 32 x2421)) (<= 0 x2421)))
(define-fun x3896 ((x2643 Real) (x514 Real) (x2603 Real) (x2254 Real)) Bool (and (x2279 x2643) (x915 x2643) (x414 x2643 x514 x2603 x2254)))
(define-fun x2579 ((x2643 Real) (x514 Real) (x2603 Real) (x2254 Real)) Bool (and (x2832 x2643 115792089237316195423570985008687907853269984665640564039457584007913129639904) (x3896 x2643 x514 x2603 x2254)))
(define-fun x1513 ((x2643 Real)) Bool (= (x3037 115792089237316195423570985007226406215939081747436879206741300988257197096960 (x3037 115792089237316195423570985007226406215939081747436879206741300988257197096960 x2643)) (x3037 115792089237316195423570985007226406215939081747436879206741300988257197096960 x2643)))
(define-fun x211 ((x2643 Real)) Bool (=> (and (< x2643 1461501637330902918203684832716283019655932542976) (<= 0 x2643)) (= (x3037 115792089237316195423570985007226406215939081747436879206741300988257197096960 x2643) 0)))
(define-fun x3209 ((x2643 Real) (x1174 Real) (x2421 Real) (x3261 Real)) Bool (and (= (x3037 115792089237316195423570985007226406215939081747436879206741300988257197096960 x2643) (* 1461501637330902918203684832716283019655932542976 x2421)) (> 1461501637330902918203684832716283019655932542976 x1174) (>= x3261 0) (>= x2421 0) (<= 0 x1174) (< x3261 1) (= x2643 (+ (* x3261 115792089237316195423570985008687907853269984665640564039457584007913129639936) (* x2421 1461501637330902918203684832716283019655932542976) x1174)) (< x2421 79228162514264337593543950336)))
(define-fun x1213 ((x2643 Real) (x514 Real) (x2603 Real) (x2254 Real)) Bool (and (x3209 x2643 x514 x2603 x2254) (x1513 x2643) (x211 x2643)))
(define-fun x1589 ((x2643 Real) (x514 Real) (x2603 Real) (x2254 Real)) Bool (and (x2832 x2643 115792089237316195423570985007226406215939081747436879206741300988257197096960) (x1213 x2643 x514 x2603 x2254)))
(define-fun x4072 ((x2643 Real)) Bool (= (x3037 115792089210356248756420345215482394403581256910207104449633294546465451933695 (x3037 115792089210356248756420345215482394403581256910207104449633294546465451933695 x2643)) (x3037 115792089210356248756420345215482394403581256910207104449633294546465451933695 x2643)))
(define-fun x981 ((x2643 Real)) Bool (=> (and (<= 0 x2643) (> 1461501637330902918203684832716283019655932542976 x2643)) (= (x3037 115792089210356248756420345215482394403581256910207104449633294546465451933695 x2643) x2643)))
(define-fun x1246 ((x2643 Real) (x1174 Real) (x2421 Real) (x3261 Real)) Bool (and (<= 0 x2421) (<= 0 x3261) (> 1461501637330902918203684832716283019655932542976 x1174) (= x2643 (+ (* x3261 26959946667150639794667015087019630673637144422540572481103610249216) x1174 (* 1461501637330902918203684832716283019655932542976 x2421))) (= (+ (* 26959946667150639794667015087019630673637144422540572481103610249216 x3261) x1174) (x3037 115792089210356248756420345215482394403581256910207104449633294546465451933695 x2643)) (< x2421 18446744073709551616) (<= 0 x1174) (< x3261 4294967296)))
(define-fun x1081 ((x2643 Real) (x514 Real) (x2603 Real) (x2254 Real)) Bool (and (x981 x2643) (x4072 x2643) (x1246 x2643 x514 x2603 x2254)))
(define-fun x2020 ((x2643 Real) (x514 Real) (x2603 Real) (x2254 Real)) Bool (and (x2832 x2643 115792089210356248756420345215482394403581256910207104449633294546465451933695) (x1081 x2643 x514 x2603 x2254)))
(define-fun x3932 ((x2643 Real)) Bool (= (x3037 26959946667150639793205513449688727755433459589824289461447677706240 (x3037 26959946667150639793205513449688727755433459589824289461447677706240 x2643)) (x3037 26959946667150639793205513449688727755433459589824289461447677706240 x2643)))
(define-fun x2377 ((x2643 Real)) Bool (=> (and (>= x2643 0) (< x2643 1461501637330902918203684832716283019655932542976)) (= 0 (x3037 26959946667150639793205513449688727755433459589824289461447677706240 x2643))))
(define-fun x2047 ((x2643 Real) (x1174 Real) (x2421 Real) (x3261 Real)) Bool (and (= x2643 (+ x1174 (* x2421 1461501637330902918203684832716283019655932542976) (* 26959946667150639794667015087019630673637144422540572481103610249216 x3261))) (> 18446744073709551616 x2421) (>= x3261 0) (>= x1174 0) (= (* x2421 1461501637330902918203684832716283019655932542976) (x3037 26959946667150639793205513449688727755433459589824289461447677706240 x2643)) (<= 0 x2421) (> 1461501637330902918203684832716283019655932542976 x1174) (< x3261 4294967296)))
(define-fun x897 ((x2643 Real) (x514 Real) (x2603 Real) (x2254 Real)) Bool (and (x2047 x2643 x514 x2603 x2254) (x3932 x2643) (x2377 x2643)))
(define-fun x3601 ((x2643 Real) (x514 Real) (x2603 Real) (x2254 Real)) Bool (and (x2832 x2643 26959946667150639793205513449688727755433459589824289461447677706240) (x897 x2643 x514 x2603 x2254)))
(define-fun x3955 ((x2643 Real)) Bool (= (x3037 18446744073709551615 (x3037 18446744073709551615 x2643)) (x3037 18446744073709551615 x2643)))
(define-fun x135 ((x2643 Real)) Bool (=> (and (>= x2643 0) (> 18446744073709551616 x2643)) (= x2643 (x3037 18446744073709551615 x2643))))
(define-fun x1393 ((x2643 Real)) Bool (=> (= x2643 (x3037 18446744073709551615 x2643)) (and (<= 0 x2643) (< x2643 18446744073709551616))))
(define-fun x4036 ((x2643 Real)) Bool (=> (and (<= 18446744073709551616 x2643) (< x2643 36893488147419103232)) (= (- x2643 18446744073709551616) (x3037 18446744073709551615 x2643))))
(define-fun x1268 ((x2643 Real) (x1174 Real)) Bool (and (>= x1174 0) (= (+ (* x1174 18446744073709551616) (x3037 18446744073709551615 x2643)) x2643)))
(define-fun x3371 ((x2643 Real) (x2173 Real)) Bool (and (x4036 x2643) (x1393 x2643) (x135 x2643) (x3955 x2643) (x1268 x2643 x2173)))
(define-fun x2750 ((x2643 Real) (x2173 Real)) Bool (and (x3371 x2643 x2173) (x2832 x2643 18446744073709551615)))
(define-fun x1261 ((x2643 Real)) Bool (= (x3037 26959946667150639794667015087019630673637144422540572481103610249215 (x3037 26959946667150639794667015087019630673637144422540572481103610249215 x2643)) (x3037 26959946667150639794667015087019630673637144422540572481103610249215 x2643)))
(define-fun x2367 ((x2643 Real)) Bool (=> (and (>= x2643 0) (< x2643 26959946667150639794667015087019630673637144422540572481103610249216)) (= x2643 (x3037 26959946667150639794667015087019630673637144422540572481103610249215 x2643))))
(define-fun x1961 ((x2643 Real)) Bool (=> (= (x3037 26959946667150639794667015087019630673637144422540572481103610249215 x2643) x2643) (and (> 26959946667150639794667015087019630673637144422540572481103610249216 x2643) (>= x2643 0))))
(define-fun x592 ((x2643 Real)) Bool (=> (and (>= x2643 26959946667150639794667015087019630673637144422540572481103610249216) (> 53919893334301279589334030174039261347274288845081144962207220498432 x2643)) (= (x3037 26959946667150639794667015087019630673637144422540572481103610249215 x2643) (- x2643 26959946667150639794667015087019630673637144422540572481103610249216))))
(define-fun x3038 ((x2643 Real) (x1174 Real)) Bool (and (>= x1174 0) (= x2643 (+ (* 26959946667150639794667015087019630673637144422540572481103610249216 x1174) (x3037 26959946667150639794667015087019630673637144422540572481103610249215 x2643)))))
(define-fun x432 ((x2643 Real) (x2173 Real)) Bool (and (x3038 x2643 x2173) (x1261 x2643) (x1961 x2643) (x592 x2643) (x2367 x2643)))
(define-fun x1257 ((x2643 Real) (x2173 Real)) Bool (and (x2832 x2643 26959946667150639794667015087019630673637144422540572481103610249215) (x432 x2643 x2173)))
(define-fun x179 ((x2643 Real)) Bool (= (x3037 4294967295 (x3037 4294967295 x2643)) (x3037 4294967295 x2643)))
(define-fun x3075 ((x2643 Real)) Bool (=> (and (<= 0 x2643) (< x2643 4294967296)) (= x2643 (x3037 4294967295 x2643))))
(define-fun x2926 ((x2643 Real)) Bool (=> (= x2643 (x3037 4294967295 x2643)) (and (<= 0 x2643) (< x2643 4294967296))))
(define-fun x1851 ((x2643 Real)) Bool (=> (and (<= 4294967296 x2643) (< x2643 8589934592)) (= (- x2643 4294967296) (x3037 4294967295 x2643))))
(define-fun x3958 ((x2643 Real) (x1174 Real)) Bool (and (<= 0 x1174) (= (+ (x3037 4294967295 x2643) (* x1174 4294967296)) x2643)))
(define-fun x1879 ((x2643 Real) (x2173 Real)) Bool (and (x179 x2643) (x2926 x2643) (x3075 x2643) (x1851 x2643) (x3958 x2643 x2173)))
(define-fun x1954 ((x2643 Real) (x2173 Real)) Bool (and (x1879 x2643 x2173) (x2832 x2643 4294967295)))
(define-fun x1205 ((x2643 Real)) Bool (= (x3037 115792089237316195423570984636004990333889740523700931696805413995650331181055 x2643) (x3037 115792089237316195423570984636004990333889740523700931696805413995650331181055 (x3037 115792089237316195423570984636004990333889740523700931696805413995650331181055 x2643))))
(define-fun x571 ((x2643 Real)) Bool (=> (and (> 1461501637330902918203684832716283019655932542976 x2643) (<= 0 x2643)) (= x2643 (x3037 115792089237316195423570984636004990333889740523700931696805413995650331181055 x2643))))
(define-fun x1520 ((x2643 Real) (x1174 Real) (x2421 Real) (x3261 Real)) Bool (and (= (+ x1174 (* x3261 374144419156711147060143317175368453031918731001856)) (x3037 115792089237316195423570984636004990333889740523700931696805413995650331181055 x2643)) (= (+ (* x3261 374144419156711147060143317175368453031918731001856) x1174 (* x2421 1461501637330902918203684832716283019655932542976)) x2643) (> 256 x2421) (> 1461501637330902918203684832716283019655932542976 x1174) (>= x3261 0) (<= 0 x1174) (> 309485009821345068724781056 x3261) (>= x2421 0)))
(define-fun x813 ((x2643 Real) (x514 Real) (x2603 Real) (x2254 Real)) Bool (and (x571 x2643) (x1205 x2643) (x1520 x2643 x514 x2603 x2254)))
(define-fun x1025 ((x2643 Real) (x514 Real) (x2603 Real) (x2254 Real)) Bool (and (x2832 x2643 115792089237316195423570984636004990333889740523700931696805413995650331181055) (x813 x2643 x514 x2603 x2254)))
(define-fun x882 ((x2643 Real)) Bool (= (x3037 372682917519380244141939632342652170012262798458880 (x3037 372682917519380244141939632342652170012262798458880 x2643)) (x3037 372682917519380244141939632342652170012262798458880 x2643)))
(define-fun x2190 ((x2643 Real)) Bool (=> (and (> 1461501637330902918203684832716283019655932542976 x2643) (<= 0 x2643)) (= 0 (x3037 372682917519380244141939632342652170012262798458880 x2643))))
(define-fun x680 ((x2643 Real) (x1174 Real) (x2421 Real) (x3261 Real)) Bool (and (<= 0 x3261) (= (* x2421 1461501637330902918203684832716283019655932542976) (x3037 372682917519380244141939632342652170012262798458880 x2643)) (> 1461501637330902918203684832716283019655932542976 x1174) (> 256 x2421) (= x2643 (+ (* x2421 1461501637330902918203684832716283019655932542976) (* 374144419156711147060143317175368453031918731001856 x3261) x1174)) (>= x1174 0) (> 309485009821345068724781056 x3261) (>= x2421 0)))
(define-fun x1102 ((x2643 Real) (x514 Real) (x2603 Real) (x2254 Real)) Bool (and (x882 x2643) (x680 x2643 x514 x2603 x2254) (x2190 x2643)))
(define-fun x3160 ((x2643 Real) (x514 Real) (x2603 Real) (x2254 Real)) Bool (and (x2832 x2643 372682917519380244141939632342652170012262798458880) (x1102 x2643 x514 x2603 x2254)))
(define-fun x324 ((x2643 Real)) Bool (= (x3037 115792089210356248756420345214020892766250353992003419616917011526809519390720 (x3037 115792089210356248756420345214020892766250353992003419616917011526809519390720 x2643)) (x3037 115792089210356248756420345214020892766250353992003419616917011526809519390720 x2643)))
(define-fun x2841 ((x2643 Real)) Bool (=> (and (<= 0 x2643) (> 26959946667150639794667015087019630673637144422540572481103610249216 x2643)) (= 0 (x3037 115792089210356248756420345214020892766250353992003419616917011526809519390720 x2643))))
(define-fun x3543 ((x2643 Real) (x1174 Real) (x2421 Real) (x3261 Real)) Bool (and (>= x3261 0) (= (+ (* x2421 26959946667150639794667015087019630673637144422540572481103610249216) x1174 (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3261)) x2643) (< x1174 26959946667150639794667015087019630673637144422540572481103610249216) (> 1 x3261) (= (* x2421 26959946667150639794667015087019630673637144422540572481103610249216) (x3037 115792089210356248756420345214020892766250353992003419616917011526809519390720 x2643)) (<= 0 x2421) (< x2421 4294967296) (<= 0 x1174)))
(define-fun x413 ((x2643 Real) (x514 Real) (x2603 Real) (x2254 Real)) Bool (and (x3543 x2643 x514 x2603 x2254) (x324 x2643) (x2841 x2643)))
(define-fun x201 ((x2643 Real) (x514 Real) (x2603 Real) (x2254 Real)) Bool (and (x2832 x2643 115792089210356248756420345214020892766250353992003419616917011526809519390720) (x413 x2643 x514 x2603 x2254)))
(define-fun x2075 ((x2316 Real)) Real (x2143 x2316))
(define-fun x2880 ((x2316 x1285)) Real (ite (= x2316 (x2562 x1908)) x2024 (x865 x2316)))
(define-fun x3938 ((x2316 x1285)) Real (ite (= (x2562 274184521717934524641157099916833587240) x2316) x2372 (x2880 x2316)))
(define-fun x2124 ((x2316 Real)) Real (x3116 x2316))
(define-fun x113 ((x2316 x1285)) Real (ite (= (x2562 x4220) x2316) x3756 (x865 x2316)))
(define-fun x3775 ((x2316 x1285)) Real (ite (= (x2562 274184521717934524641157099916833587240) x2316) x1225 (x113 x2316)))
(define-fun x4091 ((x2316 Real)) Real (ite (= 128 x2316) x1013 (x1197 x2316)))
(define-fun x1558 ((x2316 Real)) Real (ite (and (> (+ x1013 160) x2316) (>= x2316 160)) (x2143 (+ (- x2316 160) x3617)) (x4091 x2316)))
(define-fun x3767 ((x2316 Real)) Real (ite (= x2316 x2081) 0 (x1558 x2316)))
(define-fun x2388 ((x2316 Real)) Real (ite (= x1885 x2316) x2454 (x3767 x2316)))
(define-fun x970 ((x2316 Real)) Real (ite (= x2316 x3725) x2728 (x2388 x2316)))
(define-fun x3025 ((x2316 x1285)) Real (ite (= x2316 x1226) x2956 (x2323 x2316)))
(define-fun x1460 ((x2316 x1285)) Real (ite (and x2004 x3514 x2226) (x2323 x2316) (x3025 x2316)))
(define-fun x1875 ((x2316 Real)) Real (ite (= x4104 x2316) x3700 (x970 x2316)))
(define-fun x1123 ((x2316 Real)) Real (ite (= x3910 x2316) x1811 (x1875 x2316)))
(define-fun x341 ((x2316 Real)) Real (ite (= x2318 x2316) x4016 (x1123 x2316)))
(define-fun x2518 ((x2316 Real)) Real (ite (= x2494 x2316) x1557 (x341 x2316)))
(define-fun x508 ((x2316 Real)) Real (ite (= x3118 x2316) x1564 (x2518 x2316)))
(define-fun x2300 ((x2316 Real)) Real (ite (= x2316 x1143) x1162 (x508 x2316)))
(define-fun x2813 ((x2316 Real)) Real (ite (= x2316 x1040) x4233 (x2300 x2316)))
(define-fun x4003 ((x2316 Real)) Real (ite (= x1111 x2316) x3327 (x2813 x2316)))
(define-fun x3699 ((x2316 Real)) Real (ite (= x1907 x2316) (ite true 1 0) (x4003 x2316)))
(define-fun x2585 ((x2316 Real)) Real (ite (= x1378 x2316) x784 (x3699 x2316)))
(define-fun x618 ((x2316 Real)) Real (ite (= x2316 x973) x2044 (x2585 x2316)))
(define-fun x856 ((x2316 Real)) Real (ite (= x2080 x2316) x3251 (x618 x2316)))
(define-fun x639 ((x2316 Real)) Real (ite (= x1679 x2316) x106 (x856 x2316)))
(define-fun x524 ((x2316 Real)) Real (ite (= x2316 x3893) x652 (x639 x2316)))
(define-fun x733 ((x2316 Real)) Real (ite (= x2768 x2316) x2118 (x524 x2316)))
(define-fun x3885 ((x2316 Real)) Real (ite (= x3895 x2316) x921 (x733 x2316)))
(define-fun x3542 ((x2316 Real)) Real (ite (= x3983 x2316) x2221 (x3885 x2316)))
(define-fun x842 ((x2316 Real)) Real (ite (= x2316 x2471) x3417 (x3542 x2316)))
(define-fun x2520 ((x2316 Real)) Real (ite (= x1379 x2316) 10019309979067222254582373821846632475949454479833780424560900009889672200192 (x1298 x2316)))
(define-fun x889 ((x2316 Real)) Real (ite (= x2485 x2316) x745 (x2520 x2316)))
(define-fun x362 ((x2316 Real)) Real (ite (= x1612 x2316) 64 (x889 x2316)))
(define-fun x20 ((x2316 Real)) Real (ite (= x4152 x2316) x1576 (x2396 x2316)))
(define-fun x4112 ((x2316 Real)) Real (ite (= x2316 x3638) 0 (x190 x2316)))
(define-fun x924 ((x2316 Real)) Real (ite (and (> (+ 32 x1379) x2316) (>= x2316 x1379)) (x1653 (+ (- x2316 x1379) 0)) (x641 x2316)))
(define-fun x2852 ((x2316 Real)) Real (ite (and x1058 x1647 (not x145)) (x924 x2316) (x641 x2316)))
(define-fun x2366 ((x2316 Real)) Real (ite (and (not x3165) x2541) (x1298 x2316) (x2852 x2316)))
(define-fun x2829 ((x2316 x1285)) Real (ite (= x2316 x4061) x2383 (x1460 x2316)))
(define-fun x600 ((x2316 x1285)) Real (ite (= x2316 x2019) x3302 (x2829 x2316)))
(define-fun x2747 ((x2316 x1285)) Real (ite (= x1056 x2316) x2287 (x600 x2316)))
(define-fun x2610 ((x2316 x1285)) Real (ite (= x3408 x2316) x276 (x2747 x2316)))
(define-fun x2458 ((x2316 x1285)) Real (ite (= x1448 x2316) x3216 (x2610 x2316)))
(define-fun x3905 ((x2316 x1285)) Real (ite (= x2316 x1448) x1404 (x2458 x2316)))
(define-fun x388 ((x2316 x1285)) Real (ite (= x2316 x1356) x2373 (x3905 x2316)))
(define-fun x1828 ((x2316 x1285)) Real (ite (= x1356 x2316) x2683 (x388 x2316)))
(define-fun x2223 ((x2316 x1285)) Real (ite (= x1356 x2316) x1241 (x1828 x2316)))
(define-fun x87 ((x2316 x1285)) Real (ite (= x2316 x2751) x18 (x2223 x2316)))
(define-fun x4026 ((x2316 x1285)) Real (ite (= x2316 x2751) x2074 (x87 x2316)))
(define-fun x1772 ((x2316 Real)) Real (ite (= x2316 x2666) 904250603428552709895185118199468575982109441609966099573332780532423983104 (x2366 x2316)))
(define-fun x1922 ((x2316 Real)) Real (ite (and (< x2316 (+ x2666 32)) (>= x2316 x2666)) (x1206 (+ 0 (- x2316 x2666))) (x549 x2316)))
(define-fun x2801 ((x2316 Real)) Real (ite (= x2316 x402) 16156842317565293874272834530371880720966471053262404558597773956279093428224 (x2637 x2316)))
(define-fun x3254 ((x2316 Real)) Real (ite (= x115 x2316) x4300 (x2801 x2316)))
(define-fun x3672 ((x2316 Real)) Real (ite (= x2316 x1621) 274184521717934524641157099916833587240 (x3254 x2316)))
(define-fun x3477 ((x2316 Real)) Real (ite (= x2316 x402) x212 (x1814 x2316)))
(define-fun x2502 ((x2316 Real)) Real (ite x614 (x1814 x2316) (x3477 x2316)))
(define-fun x30 ((x2316 Real)) Real (ite (= x2316 x402) x3604 (x1814 x2316)))
(define-fun x1385 ((x2316 Real)) Real (ite x3345 (x1814 x2316) (x30 x2316)))
(define-fun x227 ((x2316 Real)) Real (ite (= x402 x2316) 109576784812748834340197573905731726730118698833493337707389013487240318287872 (x2637 x2316)))
(define-fun x1755 ((x2316 Real)) Real (ite (= x3884 x2316) x1617 (x227 x2316)))
(define-fun x4008 ((x2316 Real)) Real (ite (= x3846 x2316) 274184521717934524641157099916833587240 (x1755 x2316)))
(define-fun x1690 ((x2316 Real)) Real (ite (= x1375 x2316) x2454 (x4008 x2316)))
(define-fun x2629 ((x2316 Real)) Real (ite (= x4219 x2316) x2728 (x1690 x2316)))
(define-fun x1144 ((x2316 Real)) Real (ite (= x2316 x56) 160 (x2629 x2316)))
(define-fun x630 ((x2316 Real)) Real (ite (and (<= x402 x2316) (> (+ x402 0) x2316)) (x3090 (+ (- x2316 x402) 0)) (x3492 x2316)))
(define-fun x1736 ((x2316 Real)) Real (ite (and (not x3598) x1810) (ite x2831 (x1814 x2316) (ite x1561 (x2502 x2316) (x1385 x2316))) (ite (and (not x4197) x3573 x565) (x630 x2316) (x3492 x2316))))
(define-fun x2624 ((x2316 Real)) Real (ite (= x3126 x2316) 9518847204935358166548570266051330015907116135037852959641967396525866745856 (x2497 x2316)))
(define-fun x1093 ((x2316 Real)) Real (ite (= x1531 x2316) x797 (x2624 x2316)))
(define-fun x1853 ((x2316 Real)) Real (ite (= x3375 x2316) 0 (x1093 x2316)))
(define-fun x3815 ((x2316 Real)) Real (ite (= x4258 x2316) x4056 (x1853 x2316)))
(define-fun x923 ((x2316 Real)) Real (ite (= x2995 x2316) 128 (x3815 x2316)))
(define-fun x2231 ((x2316 Real)) Real (ite (= x2289 x2316) x3089 (x1880 x2316)))
(define-fun x3992 ((x2316 Real)) Real (ite (= x2316 x795) 0 (x396 x2316)))
(define-fun x1282 ((x2316 Real)) Real (ite (and (< x2316 (+ 32 x3126)) (<= x3126 x2316)) (x3636 (+ 0 (- x2316 x3126))) (x2125 x2316)))
(define-fun x1039 ((x2316 Real)) Real (ite (and x2586 (not x3613) x1060) (x1282 x2316) (x2125 x2316)))
(define-fun x2654 ((x2316 x1285)) Real (ite (and (not x3598) x1810) (x3938 x2316) (ite (and x3573 x565 (not x4197)) (x2959 x2316) (x3938 x2316))))
(define-fun x1195 ((x2316 Real)) Real (ite (= x1030 x2316) 50942633119752846454219349998365661925608737367104304655302372697894809501696 (x257 x2316)))
(define-fun x3331 ((x2316 x1285)) Real (ite (and x4199 (not x2862)) (x2115 x2316) (ite (and x3295 x339) (x2115 x2316) (ite (and x2788 x1619) (x1363 x2316) (ite (and x3313 x926) (x3403 x2316) (ite (and x2795 (not x663)) (x2115 x2316) (ite (and (not x767) x3847) (x2115 x2316) (ite (and x986 x1573) (x2115 x2316) (ite (and x2604 x2866) (x2115 x2316) (ite (and x1833 x1769) (x1363 x2316) (x2115 x2316)))))))))))
(define-fun x4042 ((x2316 x1285)) Real (ite (= x626 x2316) x2508 (x3403 x2316)))
(define-fun x1699 ((x2316 x1285)) Real (ite (= x2316 x3605) x3586 (x4042 x2316)))
(define-fun x344 ((x2316 x1285)) Real (ite x721 (x3331 x2316) (x1699 x2316)))
(define-fun x3384 ((x2316 x1285)) Real (ite (and (not x3598) x1810) (ite x2831 (x344 x2316) (x2115 x2316)) (x2115 x2316)))
(define-fun x1601 ((x2316 x1285)) Real (ite (= x2316 x563) x1568 (x3384 x2316)))
(define-fun x4100 ((x2316 Real)) Real (ite (= x2316 0) x732 (x3864 x2316)))
(define-fun x3688 ((x2316 Real)) Real (ite (= x2316 x1030) x732 (x3036 x2316)))
(define-fun x3823 ((x2316 Real)) Real (ite (= x2316 x1030) x2213 (x3036 x2316)))
(define-fun x1302 ((x2316 Real)) Real (ite (= x1030 x2316) x3007 (x3036 x2316)))
(define-fun x1155 ((x2316 Real)) Real (ite (and x489 (not x542) x2696) (x3688 x2316) (ite (and x489 x542 x2696) (x3036 x2316) (ite (and (not x624) x2182 x2060) (x3823 x2316) (ite (and x624 x2060 x2182) (x3036 x2316) (ite (and x2248 x2028 (not x242)) (x1302 x2316) (x3036 x2316)))))))
(define-fun x2771 ((x2316 Real)) Real (ite (and x3651 (not x450)) (x1155 x2316) (x257 x2316)))
(define-fun x1146 ((x2316 Real)) Real (ite (= x2316 x1311) 34167655436598589418538772692774877509225721125679165766806516059628562808832 (x2771 x2316)))
(define-fun x1919 ((x2316 Real)) Real (ite (= x2316 x509) x2915 (x1146 x2316)))
(define-fun x1688 ((x2316 Real)) Real (ite (and (< x2316 (+ 0 x1311)) (<= x1311 x2316)) (x932 (+ 0 (- x2316 x1311))) (x383 x2316)))
(define-fun x1637 ((x2316 x1285)) Real (ite (and (not x35) x2803 x3657) (x2581 x2316) (x3040 x2316)))
(define-fun x2961 ((x2316 Real)) Real (ite (= x2316 x1311) 50942633119752846454219349998365661925608737367104304655302372697894809501696 (x270 x2316)))
(define-fun x3516 ((x2316 Real)) Real (ite (= x2316 0) x2326 (x3696 x2316)))
(define-fun x1227 ((x2316 Real)) Real (ite (= x2316 x1311) x2326 (x3588 x2316)))
(define-fun x2754 ((x2316 Real)) Real (ite (= x2316 x1311) x3555 (x3588 x2316)))
(define-fun x2710 ((x2316 Real)) Real (ite (= x1311 x2316) x811 (x3588 x2316)))
(define-fun x1231 ((x2316 Real)) Real (ite (and x1103 (not x2553) x3945) (x1227 x2316) (ite (and x2553 x1103 x3945) (x3588 x2316) (ite (and (not x3887) x2151 x437) (x2754 x2316) (ite (and x437 x2151 x3887) (x3588 x2316) (ite (and x2622 (not x664) x4094) (x2710 x2316) (x3588 x2316)))))))
(define-fun x3795 ((x2316 Real)) Real (ite (= x2316 x1334) x2620 (x257 x2316)))
(define-fun x3566 ((x2316 Real)) Real (ite (= x85 x2316) 274184521717934524641157099916833587240 (x3795 x2316)))
(define-fun x1362 ((x2316 Real)) Real (ite (= x3491 x2316) x32 (x3566 x2316)))
(define-fun x2975 ((x2316 Real)) Real (ite (= x2316 x1030) x1027 (x1362 x2316)))
(define-fun x2949 ((x2316 Real)) Real (ite (= x2316 x2085) x3071 (x2975 x2316)))
(define-fun x1274 ((x2316 Real)) Real (ite (= x2316 x4264) 32 (x2949 x2316)))
(define-fun x1994 ((x2316 Real)) Real (ite (= x2316 x1253) x1424 (x531 x2316)))
(define-fun x1259 ((x2316 Real)) Real (ite (= x2064 x2316) 0 (x3818 x2316)))
(define-fun x4124 ((x2316 Real)) Real (ite (= x3122 x2316) x4057 (x703 x2316)))
(define-fun x1572 ((x2316 Real)) Real (ite x100 (x703 x2316) (x4124 x2316)))
(define-fun x1727 ((x2316 Real)) Real (ite (= x3122 x2316) x2644 (x703 x2316)))
(define-fun x3694 ((x2316 Real)) Real (ite x482 (x703 x2316) (x1727 x2316)))
(define-fun x4077 ((x2316 Real)) Real (ite (= x2316 0) 1 (x1794 x2316)))
(define-fun x2635 ((x2316 Real)) Real (ite x100 (x1794 x2316) (x4077 x2316)))
(define-fun x3706 ((x2316 Real)) Real (ite (= x2316 0) 1 (x1794 x2316)))
(define-fun x7 ((x2316 Real)) Real (ite x482 (x1794 x2316) (x3706 x2316)))
(define-fun x2444 ((x2316 Real)) Real (ite x2551 (ite x3934 (x1794 x2316) (ite x356 (x2635 x2316) (x7 x2316))) (x3152 x2316)))
(define-fun x4267 ((x2316 Real)) Real (ite (= x3122 x2316) x234 (x2767 x2316)))
(define-fun x546 ((x2316 Real)) Real (ite (and (< x2316 (+ x234 x303)) (>= x2316 x303)) (x2444 (+ 0 (- x2316 x303))) (x4267 x2316)))
(define-fun x1009 ((x2316 Real)) Real (ite (and x582 x737) (x2767 x2316) (x546 x2316)))
(define-fun x241 ((x2316 Real)) Real (ite (and (not x3139) x2667) (ite (and (not x392) x2925) (x1231 x2316) (x270 x2316)) (ite x1109 (x1009 x2316) (x257 x2316))))
(define-fun x2705 ((x2316 Real)) Real (ite (= x2316 x1676) x2937 (x241 x2316)))
(define-fun x725 ((x2316 Real)) Real (ite (= x1400 x2316) x3223 (x2705 x2316)))
(define-fun x2127 ((x2316 Real)) Real (ite (= x3015 x2316) x2846 (x725 x2316)))
(define-fun x2052 ((x2316 Real)) Real (ite (= x4213 x2316) x4210 (x2127 x2316)))
(define-fun x2410 ((x2316 Real)) Real (ite (= x2316 x1218) 32 (x2052 x2316)))
(define-fun x2636 ((x2316 Real)) Real (ite (= x3642 x2316) x1636 (x1367 x2316)))
(define-fun x1454 ((x2316 Real)) Real (ite (= x3832 x2316) 0 (x3837 x2316)))
(define-fun x2148 ((x2316 x1285)) Real (ite (= x2316 (x2562 274184521717934524641157099916833587240)) x3894 (x3040 x2316)))
(define-fun x3386 ((x2316 x1285)) Real (ite (= (x2562 x3879) x2316) x337 (x2148 x2316)))
(define-fun x1458 ((x2316 x1285)) Real (ite (= (x2562 x3879) x2316) x2268 (x3386 x2316)))
(define-fun x4118 ((x2316 x1285)) Real (ite (= (x2562 274184521717934524641157099916833587240) x2316) x2843 (x1458 x2316)))
(define-fun x2870 ((x2316 x1285)) Real (ite (= (x2562 274184521717934524641157099916833587240) x2316) x1610 (x1029 x2316)))
(define-fun x4088 ((x2316 x1285)) Real (ite (= (x2562 x3808) x2316) x424 (x2870 x2316)))
(define-fun x4142 ((x2316 x1285)) Real (ite (and (not x833) x866 x2592 x977) (x328 x2316) (x4088 x2316)))
(define-fun x26 ((x2316 x1285)) Real (ite (= (x2562 x3808) x2316) x1721 (x4142 x2316)))
(define-fun x1632 ((x2316 x1285)) Real (ite (and x3780 (not x676)) (x3161 x2316) (ite (and x47 x157) (x3161 x2316) (ite (and x3410 x3374) (x3218 x2316) (ite (and x2065 x3942) (x3628 x2316) (ite (and (not x880) x1209) (x3161 x2316) (ite (and x3912 (not x1644)) (x3161 x2316) (ite (and x3886 x247) (x3161 x2316) (ite (and x2806 x835) (x3161 x2316) (ite (and x2037 x466) (x3218 x2316) (x3161 x2316)))))))))))
(define-fun x48 ((x2316 x1285)) Real (ite (= x2316 x3440) x1706 (x3628 x2316)))
(define-fun x1942 ((x2316 x1285)) Real (ite (= x2316 x2450) x821 (x48 x2316)))
(define-fun x197 ((x2316 x1285)) Real (ite x1264 (x1632 x2316) (x1942 x2316)))
(define-fun x105 ((x2316 x1285)) Real (ite x3934 (x197 x2316) (x3161 x2316)))
(define-fun x3534 ((x2316 x1285)) Real (ite (and x2667 (not x3139)) (x3161 x2316) (ite x1109 (ite x2551 (x105 x2316) (x3161 x2316)) (x3161 x2316))))
(define-fun x845 ((x2316 x1285)) Real (ite (and x853 x3155) (x3428 x2316) (ite (and x1904 x4161) (x219 x2316) (ite (and x1211 x2094) (x2058 x2316) (ite (and x4035 (not x2533)) (x2058 x2316) (ite (and x950 x2735) (x2058 x2316) (ite (and x785 x1043) (x3428 x2316) (ite (and x4137 x978) (x2058 x2316) (x219 x2316)))))))))
(define-fun x412 ((x2316 x1285)) Real (ite x3345 (x845 x2316) (x3428 x2316)))
(define-fun x3940 ((x2316 x1285)) Real (ite (and (not x3598) x1810) (ite x2831 (x2058 x2316) (ite x1561 (x2058 x2316) (x412 x2316))) (ite (and x565 x3573 (not x4197)) (x3671 x2316) (x2058 x2316))))
(define-fun x3906 ((x2316 x1285)) Real (ite (= x1760 x2316) x2147 (x3441 x2316)))
(define-fun x3463 ((x2316 x1285)) Real (ite x614 (x3441 x2316) (x3906 x2316)))
(define-fun x567 ((x2316 x1285)) Real (ite (and (not x3598) x1810) (ite x2831 (x3441 x2316) (ite x1561 (x3463 x2316) (x3441 x2316))) (ite (and x3573 (not x4197) x565) (x3948 x2316) (x3441 x2316))))
(define-fun x3490 ((x2316 x1285)) Real (ite (and x3779 x617) (ite (and (not x3613) x1060 x2586) (x2943 x2316) (x567 x2316)) (x567 x2316)))
(define-fun x3662 ((x2316 x1285)) Real (ite (= x3974 x2316) x3277 (x2062 x2316)))
(define-fun x1405 ((x2316 x1285)) Real (ite x3345 (x2062 x2316) (x3662 x2316)))
(define-fun x3693 ((x2316 x1285)) Real (ite (and x1810 (not x3598)) (ite x2831 (x2062 x2316) (ite x1561 (x2062 x2316) (x1405 x2316))) (ite (and (not x4197) x3573 x565) (x1999 x2316) (x2062 x2316))))
(define-fun x1023 ((x2316 x1285)) Real (ite (and x617 x3779) (ite (and x2586 x1060 (not x3613)) (x4040 x2316) (x3693 x2316)) (x3693 x2316)))
(define-fun x151 ((x2316 x1285)) Real (ite (and x844 x488) (x896 x2316) (ite (and x2609 x3607) (x3766 x2316) (ite (and x93 x989) (x692 x2316) (ite (and x3603 (not x2050)) (x692 x2316) (ite (and x1075 x3200) (x692 x2316) (ite (and x2593 x3736) (x896 x2316) (ite (and x2131 x781) (x692 x2316) (x3766 x2316)))))))))
(define-fun x1289 ((x2316 x1285)) Real (ite x614 (x151 x2316) (x896 x2316)))
(define-fun x3011 ((x2316 x1285)) Real (ite (and x1810 (not x3598)) (ite x2831 (x692 x2316) (ite x1561 (x1289 x2316) (x692 x2316))) (ite (and x565 (not x4197) x3573) (x3231 x2316) (x692 x2316))))
(define-fun x1409 ((x2316 Real)) Real (ite (= x2316 x1119) x1358 (x2455 x2316)))
(define-fun x3265 ((x2316 Real)) Real (ite x2434 (x2455 x2316) (x1409 x2316)))
(define-fun x2009 ((x2316 Real)) Real (ite (= x1119 x2316) x1002 (x2455 x2316)))
(define-fun x1332 ((x2316 Real)) Real (ite x3645 (x2455 x2316) (x2009 x2316)))
(define-fun x3962 ((x2316 Real)) Real (ite (= x2316 0) 1 (x1625 x2316)))
(define-fun x213 ((x2316 Real)) Real (ite x2434 (x1625 x2316) (x3962 x2316)))
(define-fun x1519 ((x2316 Real)) Real (ite (= x2316 0) 1 (x1625 x2316)))
(define-fun x2681 ((x2316 Real)) Real (ite x3645 (x1625 x2316) (x1519 x2316)))
(define-fun x2100 ((x2316 Real)) Real (ite x258 (ite x3184 (x213 x2316) (x2681 x2316)) (x3193 x2316)))
(define-fun x3360 ((x2316 Real)) Real (ite (= x2316 x1119) x716 (x2545 x2316)))
(define-fun x694 ((x2316 Real)) Real (ite (and (< x2316 (+ x3183 x716)) (>= x2316 x3183)) (x2100 (+ 0 (- x2316 x3183))) (x3360 x2316)))
(define-fun x504 ((x2316 Real)) Real (ite (and x1861 x156) (x2545 x2316) (x694 x2316)))
(define-fun x1310 ((x2316 x1285)) Real (ite (= (x2562 274184521717934524641157099916833587240) x2316) x2498 (x1029 x2316)))
(define-fun x528 ((x2316 x1285)) Real (ite (= (x2562 x474) x2316) x1287 (x1310 x2316)))
(define-fun x4079 ((x2316 Real)) Real (ite (= x2316 128) x1178 (x428 x2316)))
(define-fun x788 ((x2316 Real)) Real (ite (and (<= 160 x2316) (> (+ x1178 160) x2316)) (x3116 (+ x4052 (- x2316 160))) (x4079 x2316)))
(define-fun x1911 ((x2316 Real)) Real (ite (= x2316 x2833) 0 (x788 x2316)))
(define-fun x1756 ((x2316 Real)) Real (ite (= x2297 x2316) x307 (x1911 x2316)))
(define-fun x1398 ((x2316 Real)) Real (ite (= x2316 x2341) x1229 (x1756 x2316)))
(define-fun x2365 ((x2316 x1285)) Real (ite (= x2316 x4276) x2658 (x2323 x2316)))
(define-fun x3697 ((x2316 x1285)) Real (ite (and x3907 x763 x4254) (x2323 x2316) (x2365 x2316)))
(define-fun x453 ((x2316 Real)) Real (ite (= x1788 x2316) x2759 (x1398 x2316)))
(define-fun x2842 ((x2316 Real)) Real (ite (= x2316 x2785) x2423 (x453 x2316)))
(define-fun x2646 ((x2316 Real)) Real (ite (= x3570 x2316) x937 (x2842 x2316)))
(define-fun x1664 ((x2316 Real)) Real (ite (= x3857 x2316) x2606 (x2646 x2316)))
(define-fun x3224 ((x2316 Real)) Real (ite (= x2889 x2316) x189 (x1664 x2316)))
(define-fun x2900 ((x2316 Real)) Real (ite (= x3487 x2316) x2566 (x3224 x2316)))
(define-fun x2824 ((x2316 Real)) Real (ite (= x1207 x2316) x1629 (x2900 x2316)))
(define-fun x4272 ((x2316 Real)) Real (ite (= x3085 x2316) x1172 (x2824 x2316)))
(define-fun x1652 ((x2316 Real)) Real (ite (= x2316 x3178) (ite true 1 0) (x4272 x2316)))
(define-fun x481 ((x2316 Real)) Real (ite (= x2856 x2316) x2392 (x1652 x2316)))
(define-fun x4116 ((x2316 Real)) Real (ite (= x2316 x2660) x533 (x481 x2316)))
(define-fun x1051 ((x2316 Real)) Real (ite (= x3395 x2316) x1657 (x4116 x2316)))
(define-fun x3681 ((x2316 Real)) Real (ite (= x2316 x237) x1763 (x1051 x2316)))
(define-fun x4027 ((x2316 Real)) Real (ite (= x1651 x2316) x3279 (x3681 x2316)))
(define-fun x1803 ((x2316 Real)) Real (ite (= x1466 x2316) x952 (x4027 x2316)))
(define-fun x2301 ((x2316 Real)) Real (ite (= x2316 x3759) x4009 (x1803 x2316)))
(define-fun x3843 ((x2316 Real)) Real (ite (= x2316 x245) x980 (x2301 x2316)))
(define-fun x1442 ((x2316 Real)) Real (ite (= x395 x2316) x3417 (x3843 x2316)))
(define-fun x3120 ((x2316 Real)) Real (ite (= x2316 x3660) 10019309979067222254582373821846632475949454479833780424560900009889672200192 (x126 x2316)))
(define-fun x659 ((x2316 Real)) Real (ite (= x527 x2316) x713 (x3120 x2316)))
(define-fun x3842 ((x2316 Real)) Real (ite (= x2818 x2316) 64 (x659 x2316)))
(define-fun x530 ((x2316 Real)) Real (ite (= x2631 x2316) x150 (x596 x2316)))
(define-fun x2418 ((x2316 Real)) Real (ite (= x2316 x1797) 0 (x799 x2316)))
(define-fun x2225 ((x2316 Real)) Real (ite (and (<= x3660 x2316) (> (+ 32 x3660) x2316)) (x2930 (+ (- x2316 x3660) 0)) (x2708 x2316)))
(define-fun x1642 ((x2316 Real)) Real (ite (and (not x3467) x3721 x1948) (x2225 x2316) (x2708 x2316)))
(define-fun x1858 ((x2316 Real)) Real (ite (and (not x3621) x2869) (x126 x2316) (x1642 x2316)))
(define-fun x1054 ((x2316 x1285)) Real (ite (= x1710 x2316) x3560 (x3697 x2316)))
(define-fun x1704 ((x2316 x1285)) Real (ite (= x2026 x2316) x3790 (x1054 x2316)))
(define-fun x3970 ((x2316 x1285)) Real (ite (= x4005 x2316) x2800 (x1704 x2316)))
(define-fun x3796 ((x2316 x1285)) Real (ite (= x2316 x3863) x4242 (x3970 x2316)))
(define-fun x3291 ((x2316 x1285)) Real (ite (= x740 x2316) x4134 (x3796 x2316)))
(define-fun x2588 ((x2316 x1285)) Real (ite (= x2316 x740) x1291 (x3291 x2316)))
(define-fun x110 ((x2316 x1285)) Real (ite (= x4129 x2316) x4270 (x2588 x2316)))
(define-fun x1753 ((x2316 x1285)) Real (ite (= x4129 x2316) x2743 (x110 x2316)))
(define-fun x235 ((x2316 x1285)) Real (ite (= x4129 x2316) x997 (x1753 x2316)))
(define-fun x1021 ((x2316 x1285)) Real (ite (= x2316 x3963) x3713 (x235 x2316)))
(define-fun x3228 ((x2316 x1285)) Real (ite (= x3963 x2316) x423 (x1021 x2316)))
(define-fun x2668 ((x2316 Real)) Real (ite (= x2316 x814) 904250603428552709895185118199468575982109441609966099573332780532423983104 (x1858 x2316)))
(define-fun x116 ((x2316 Real)) Real (ite (and (>= x2316 x814) (> (+ x814 32) x2316)) (x1964 (+ (- x2316 x814) 0)) (x2055 x2316)))
(define-fun x3419 ((x2316 Real)) Real (ite (= x2316 x1024) 16156842317565293874272834530371880720966471053262404558597773956279093428224 (x858 x2316)))
(define-fun x831 ((x2316 Real)) Real (ite (= x2316 x3413) x1823 (x3419 x2316)))
(define-fun x2245 ((x2316 Real)) Real (ite (= x1309 x2316) 274184521717934524641157099916833587240 (x831 x2316)))
(define-fun x3623 ((x2316 Real)) Real (ite (= x1024 x2316) x442 (x440 x2316)))
(define-fun x3629 ((x2316 Real)) Real (ite x1080 (x440 x2316) (x3623 x2316)))
(define-fun x3503 ((x2316 Real)) Real (ite (= x1024 x2316) x3464 (x440 x2316)))
(define-fun x2243 ((x2316 Real)) Real (ite x859 (x440 x2316) (x3503 x2316)))
(define-fun x505 ((x2316 Real)) Real (ite (= x2316 x1024) 109576784812748834340197573905731726730118698833493337707389013487240318287872 (x858 x2316)))
(define-fun x45 ((x2316 Real)) Real (ite (= x2316 x495) x2994 (x505 x2316)))
(define-fun x3853 ((x2316 Real)) Real (ite (= x2316 x1607) 274184521717934524641157099916833587240 (x45 x2316)))
(define-fun x2506 ((x2316 Real)) Real (ite (= x2983 x2316) x307 (x3853 x2316)))
(define-fun x3282 ((x2316 Real)) Real (ite (= x1181 x2316) x1229 (x2506 x2316)))
(define-fun x720 ((x2316 Real)) Real (ite (= x2316 x1985) 160 (x3282 x2316)))
(define-fun x2886 ((x2316 Real)) Real (ite (and (< x2316 (+ 0 x1024)) (>= x2316 x1024)) (x216 (+ 0 (- x2316 x1024))) (x1751 x2316)))
(define-fun x1337 ((x2316 Real)) Real (ite (and x96 (not x3977)) (ite x1222 (x440 x2316) (ite x1121 (x3629 x2316) (x2243 x2316))) (ite (and (not x3364) x901 x385) (x2886 x2316) (x1751 x2316))))
(define-fun x1330 ((x2316 Real)) Real (ite (= x943 x2316) 9518847204935358166548570266051330015907116135037852959641967396525866745856 (x1728 x2316)))
(define-fun x120 ((x2316 Real)) Real (ite (= x2316 x1126) x182 (x1330 x2316)))
(define-fun x1639 ((x2316 Real)) Real (ite (= x3920 x2316) 0 (x120 x2316)))
(define-fun x3569 ((x2316 Real)) Real (ite (= x3142 x2316) x1248 (x1639 x2316)))
(define-fun x2757 ((x2316 Real)) Real (ite (= x2316 x1784) 128 (x3569 x2316)))
(define-fun x3794 ((x2316 Real)) Real (ite (= x2316 x1869) x3489 (x2837 x2316)))
(define-fun x448 ((x2316 Real)) Real (ite (= x2316 x1490) 0 (x3990 x2316)))
(define-fun x318 ((x2316 Real)) Real (ite (and (>= x2316 x943) (< x2316 (+ 32 x943))) (x1897 (+ (- x2316 x943) 0)) (x2288 x2316)))
(define-fun x3100 ((x2316 Real)) Real (ite (and x3424 (not x4060) x1101) (x318 x2316) (x2288 x2316)))
(define-fun x2675 ((x2316 x1285)) Real (ite (and x96 (not x3977)) (x3775 x2316) (ite (and x385 x901 (not x3364)) (x1575 x2316) (x3775 x2316))))
(define-fun x4226 ((x2316 Real)) Real (ite (= x2316 x1062) 50942633119752846454219349998365661925608737367104304655302372697894809501696 (x2001 x2316)))
(define-fun x3833 ((x2316 x1285)) Real (ite (and x2314 (not x1870)) (x2369 x2316) (ite (and x590 x1061) (x2369 x2316) (ite (and x1836 x1151) (x1967 x2316) (ite (and x2760 x3182) (x3553 x2316) (ite (and x240 (not x1484)) (x2369 x2316) (ite (and (not x603) x894) (x2369 x2316) (ite (and x3460 x3017) (x2369 x2316) (ite (and x1011 x2503) (x2369 x2316) (ite (and x4038 x974) (x1967 x2316) (x2369 x2316)))))))))))
(define-fun x2183 ((x2316 x1285)) Real (ite (= x1920 x2316) x3648 (x3553 x2316)))
(define-fun x1779 ((x2316 x1285)) Real (ite (= x2732 x2316) x1088 (x2183 x2316)))
(define-fun x1758 ((x2316 x1285)) Real (ite x3986 (x3833 x2316) (x1779 x2316)))
(define-fun x803 ((x2316 x1285)) Real (ite (and (not x3977) x96) (ite x1222 (x1758 x2316) (x2369 x2316)) (x2369 x2316)))
(define-fun x1488 ((x2316 x1285)) Real (ite (= x2316 x1314) x153 (x803 x2316)))
(define-fun x538 ((x2316 Real)) Real (ite (= 0 x2316) x764 (x233 x2316)))
(define-fun x2834 ((x2316 Real)) Real (ite (= x2316 x1062) x764 (x1214 x2316)))
(define-fun x3429 ((x2316 Real)) Real (ite (= x1062 x2316) x4001 (x1214 x2316)))
(define-fun x1145 ((x2316 Real)) Real (ite (= x1062 x2316) x638 (x1214 x2316)))
(define-fun x1026 ((x2316 Real)) Real (ite (and (not x3150) x3363 x220) (x2834 x2316) (ite (and x3363 x220 x3150) (x1214 x2316) (ite (and x718 x1715 (not x2082)) (x3429 x2316) (ite (and x2082 x1715 x718) (x1214 x2316) (ite (and x304 (not x1626) x3576) (x1145 x2316) (x1214 x2316)))))))
(define-fun x610 ((x2316 Real)) Real (ite (and x1421 (not x4208)) (x1026 x2316) (x2001 x2316)))
(define-fun x4169 ((x2316 Real)) Real (ite (= x2316 x1217) 34167655436598589418538772692774877509225721125679165766806516059628562808832 (x610 x2316)))
(define-fun x3720 ((x2316 Real)) Real (ite (= x887 x2316) x2491 (x4169 x2316)))
(define-fun x239 ((x2316 Real)) Real (ite (and (< x2316 (+ x1217 0)) (<= x1217 x2316)) (x397 (+ 0 (- x2316 x1217))) (x3098 x2316)))
(define-fun x2598 ((x2316 x1285)) Real (ite (and x3783 (not x1355) x141) (x3468 x2316) (x3309 x2316)))
(define-fun x3929 ((x2316 Real)) Real (ite (= x1217 x2316) 50942633119752846454219349998365661925608737367104304655302372697894809501696 (x1429 x2316)))
(define-fun x875 ((x2316 Real)) Real (ite (= x2316 0) x164 (x701 x2316)))
(define-fun x1743 ((x2316 Real)) Real (ite (= x1217 x2316) x164 (x1176 x2316)))
(define-fun x2970 ((x2316 Real)) Real (ite (= x1217 x2316) x1634 (x1176 x2316)))
(define-fun x267 ((x2316 Real)) Real (ite (= x2316 x1217) x3548 (x1176 x2316)))
(define-fun x3904 ((x2316 Real)) Real (ite (and (not x1372) x2311 x3023) (x1743 x2316) (ite (and x3023 x2311 x1372) (x1176 x2316) (ite (and x1731 x1832 (not x1277)) (x2970 x2316) (ite (and x1277 x1832 x1731) (x1176 x2316) (ite (and x1857 (not x1683) x2079) (x267 x2316) (x1176 x2316)))))))
(define-fun x3639 ((x2316 Real)) Real (ite (= x3286 x2316) x2583 (x2001 x2316)))
(define-fun x1725 ((x2316 Real)) Real (ite (= x2119 x2316) 274184521717934524641157099916833587240 (x3639 x2316)))
(define-fun x605 ((x2316 Real)) Real (ite (= x1258 x2316) x24 (x1725 x2316)))
(define-fun x1188 ((x2316 Real)) Real (ite (= x2316 x1062) x3664 (x605 x2316)))
(define-fun x472 ((x2316 Real)) Real (ite (= x2316 x417) x2290 (x1188 x2316)))
(define-fun x3826 ((x2316 Real)) Real (ite (= x3304 x2316) 32 (x472 x2316)))
(define-fun x1623 ((x2316 Real)) Real (ite (= x2640 x2316) x2200 (x3436 x2316)))
(define-fun x3389 ((x2316 Real)) Real (ite (= x2712 x2316) 0 (x3052 x2316)))
(define-fun x839 ((x2316 Real)) Real (ite (= x2316 x3612) x1439 (x1716 x2316)))
(define-fun x1593 ((x2316 Real)) Real (ite x127 (x1716 x2316) (x839 x2316)))
(define-fun x985 ((x2316 Real)) Real (ite (= x3612 x2316) x4055 (x1716 x2316)))
(define-fun x467 ((x2316 Real)) Real (ite x2267 (x1716 x2316) (x985 x2316)))
(define-fun x1590 ((x2316 Real)) Real (ite (= x2316 0) 1 (x2861 x2316)))
(define-fun x4293 ((x2316 Real)) Real (ite x127 (x2861 x2316) (x1590 x2316)))
(define-fun x34 ((x2316 Real)) Real (ite (= 0 x2316) 1 (x2861 x2316)))
(define-fun x2969 ((x2316 Real)) Real (ite x2267 (x2861 x2316) (x34 x2316)))
(define-fun x478 ((x2316 Real)) Real (ite x1350 (ite x2406 (x2861 x2316) (ite x2981 (x4293 x2316) (x2969 x2316))) (x2265 x2316)))
(define-fun x2611 ((x2316 Real)) Real (ite (= x2316 x3612) x2477 (x3416 x2316)))
(define-fun x4200 ((x2316 Real)) Real (ite (and (< x2316 (+ x2477 x4135)) (>= x2316 x4135)) (x478 (+ (- x2316 x4135) 0)) (x2611 x2316)))
(define-fun x148 ((x2316 Real)) Real (ite (and x3225 x1171) (x3416 x2316) (x4200 x2316)))
(define-fun x3501 ((x2316 Real)) Real (ite (and x3018 (not x2087)) (ite (and (not x2734) x3723) (x3904 x2316) (x1429 x2316)) (ite x1661 (x148 x2316) (x2001 x2316))))
(define-fun x2273 ((x2316 Real)) Real (ite (= x2316 x4192) x3401 (x3501 x2316)))
(define-fun x1497 ((x2316 Real)) Real (ite (= x1812 x2316) x4195 (x2273 x2316)))
(define-fun x1977 ((x2316 Real)) Real (ite (= x615 x2316) x3822 (x1497 x2316)))
(define-fun x712 ((x2316 Real)) Real (ite (= x3789 x2316) x1790 (x1977 x2316)))
(define-fun x2030 ((x2316 Real)) Real (ite (= x1244 x2316) 32 (x712 x2316)))
(define-fun x3748 ((x2316 Real)) Real (ite (= x2939 x2316) x3668 (x1778 x2316)))
(define-fun x251 ((x2316 Real)) Real (ite (= x2316 x1427) 0 (x1461 x2316)))
(define-fun x1395 ((x2316 x1285)) Real (ite (= x2316 (x2562 274184521717934524641157099916833587240)) x3923 (x3309 x2316)))
(define-fun x380 ((x2316 x1285)) Real (ite (= (x2562 x3227) x2316) x2105 (x1395 x2316)))
(define-fun x1012 ((x2316 x1285)) Real (ite (= x2316 (x2562 x3227)) x2445 (x380 x2316)))
(define-fun x3147 ((x2316 x1285)) Real (ite (= (x2562 274184521717934524641157099916833587240) x2316) x3281 (x1012 x2316)))
(define-fun x4285 ((x2316 x1285)) Real (ite (= x2316 (x2562 274184521717934524641157099916833587240)) x675 (x1403 x2316)))
(define-fun x4049 ((x2316 x1285)) Real (ite (= (x2562 x2934) x2316) x3407 (x4285 x2316)))
(define-fun x2935 ((x2316 x1285)) Real (ite (and x1138 x3411 (not x891) x1328) (x4171 x2316) (x4049 x2316)))
(define-fun x228 ((x2316 x1285)) Real (ite (= x2316 (x2562 x2934)) x3584 (x2935 x2316)))
(define-fun x1579 ((x2316 x1285)) Real (ite (and x2419 (not x2738)) (x1338 x2316) (ite (and x678 x3593) (x1338 x2316) (ite (and x903 x2481) (x2244 x2316) (ite (and x1877 x2351) (x3172 x2316) (ite (and x3924 (not x2415)) (x1338 x2316) (ite (and (not x347) x2993) (x1338 x2316) (ite (and x249 x1507) (x1338 x2316) (ite (and x3167 x3876) (x1338 x2316) (ite (and x2914 x909) (x2244 x2316) (x1338 x2316)))))))))))
(define-fun x647 ((x2316 x1285)) Real (ite (= x3276 x2316) x462 (x3172 x2316)))
(define-fun x4037 ((x2316 x1285)) Real (ite (= x2316 x382) x4225 (x647 x2316)))
(define-fun x1847 ((x2316 x1285)) Real (ite x2292 (x1579 x2316) (x4037 x2316)))
(define-fun x1110 ((x2316 x1285)) Real (ite x2406 (x1847 x2316) (x1338 x2316)))
(define-fun x3521 ((x2316 x1285)) Real (ite (and x3018 (not x2087)) (x1338 x2316) (ite x1661 (ite x1350 (x1110 x2316) (x1338 x2316)) (x1338 x2316))))
(define-fun x4032 ((x2316 x1285)) Real (ite (= x406 x2316) x1771 (x3441 x2316)))
(define-fun x1843 ((x2316 x1285)) Real (ite x1080 (x3441 x2316) (x4032 x2316)))
(define-fun x642 ((x2316 x1285)) Real (ite (and x96 (not x3977)) (ite x1222 (x3441 x2316) (ite x1121 (x1843 x2316) (x3441 x2316))) (ite (and x901 (not x3364) x385) (x2810 x2316) (x3441 x2316))))
(define-fun x4098 ((x2316 x1285)) Real (ite (and x399 x1785) (ite (and x3424 x1101 (not x4060)) (x1315 x2316) (x642 x2316)) (x642 x2316)))
(define-fun x1839 ((x2316 x1285)) Real (ite (and x2443 x3119) (x4255 x2316) (ite (and x654 x420) (x394 x2316) (ite (and x1574 x2216) (x2058 x2316) (ite (and (not x2656) x4239) (x2058 x2316) (ite (and x1586 x3112) (x2058 x2316) (ite (and x4133 x1366) (x4255 x2316) (ite (and x1685 x2687) (x2058 x2316) (x394 x2316)))))))))
(define-fun x250 ((x2316 x1285)) Real (ite x859 (x1839 x2316) (x4255 x2316)))
(define-fun x3006 ((x2316 x1285)) Real (ite (and (not x3977) x96) (ite x1222 (x2058 x2316) (ite x1121 (x2058 x2316) (x250 x2316))) (ite (and x385 x901 (not x3364)) (x1800 x2316) (x2058 x2316))))
(define-fun x2376 ((x2316 x1285)) Real (ite (and x2250 x2758) (x2206 x2316) (ite (and x1303 x3743) (x3901 x2316) (ite (and x760 x1633) (x692 x2316) (ite (and (not x480) x667) (x692 x2316) (ite (and x1622 x2422) (x692 x2316) (ite (and x400 x468) (x2206 x2316) (ite (and x4274 x2980) (x692 x2316) (x3901 x2316)))))))))
(define-fun x4090 ((x2316 x1285)) Real (ite x1080 (x2376 x2316) (x2206 x2316)))
(define-fun x1868 ((x2316 x1285)) Real (ite (and x96 (not x3977)) (ite x1222 (x692 x2316) (ite x1121 (x4090 x2316) (x692 x2316))) (ite (and x385 x901 (not x3364)) (x3533 x2316) (x692 x2316))))
(define-fun x2361 ((x2316 x1285)) Real (ite (= x851 x2316) x2327 (x2062 x2316)))
(define-fun x780 ((x2316 x1285)) Real (ite x859 (x2062 x2316) (x2361 x2316)))
(define-fun x410 ((x2316 x1285)) Real (ite (and x96 (not x3977)) (ite x1222 (x2062 x2316) (ite x1121 (x2062 x2316) (x780 x2316))) (ite (and (not x3364) x901 x385) (x1345 x2316) (x2062 x2316))))
(define-fun x429 ((x2316 x1285)) Real (ite (and x399 x1785) (ite (and (not x4060) x1101 x3424) (x550 x2316) (x410 x2316)) (x410 x2316)))
(define-fun x3951 ((x2316 Real)) Real (ite (= x2316 x3127) x493 (x900 x2316)))
(define-fun x1517 ((x2316 Real)) Real (ite x1446 (x900 x2316) (x3951 x2316)))
(define-fun x290 ((x2316 Real)) Real (ite (= x2316 x3127) x936 (x900 x2316)))
(define-fun x2745 ((x2316 Real)) Real (ite x2896 (x900 x2316) (x290 x2316)))
(define-fun x3731 ((x2316 Real)) Real (ite (= 0 x2316) 1 (x171 x2316)))
(define-fun x283 ((x2316 Real)) Real (ite x1446 (x171 x2316) (x3731 x2316)))
(define-fun x1084 ((x2316 Real)) Real (ite (= x2316 0) 1 (x171 x2316)))
(define-fun x4095 ((x2316 Real)) Real (ite x2896 (x171 x2316) (x1084 x2316)))
(define-fun x3397 ((x2316 Real)) Real (ite x860 (ite x3921 (x283 x2316) (x4095 x2316)) (x438 x2316)))
(define-fun x3238 ((x2316 Real)) Real (ite (= x3127 x2316) x765 (x1501 x2316)))
(define-fun x4269 ((x2316 Real)) Real (ite (and (>= x2316 x1158) (< x2316 (+ x765 x1158))) (x3397 (+ 0 (- x2316 x1158))) (x3238 x2316)))
(define-fun x1882 ((x2316 Real)) Real (ite (and x1747 x108) (x1501 x2316) (x4269 x2316)))
(define-fun x439 ((x2316 x1285)) Real (ite (= x2316 (x2562 274184521717934524641157099916833587240)) x2409 (x1403 x2316)))
(define-fun x941 ((x2316 x1285)) Real (ite (= x2316 (x2562 x3515)) x1917 (x439 x2316)))
(define-fun x281 ((x2316 Real)) Real (ite (= x2316 0) x3007 (x3864 x2316)))
(define-fun x2887 ((x2316 Real)) Real (ite (= x2316 0) x2213 (x3864 x2316)))
(define-fun x2165 ((x2316 x1285)) Real (ite (and x3657 x2803 (not x35)) (x824 x2316) (x695 x2316)))
(define-fun x673 ((x2316 x1285)) Real (ite (and (not x35) x2803 x3657) (x1846 x2316) (x2108 x2316)))
(define-fun x1452 ((x2316 Real)) Real (ite (= x2316 0) x811 (x3696 x2316)))
(define-fun x4190 ((x2316 Real)) Real (ite (= 0 x2316) x3555 (x3696 x2316)))
(define-fun x66 ((x2316 x1285)) Real (ite (and x619 x187) (x3690 x2316) (ite (and x696 x186) (x1260 x2316) (ite (and x1094 x1292) (x2108 x2316) (ite (and (not x3751) x1249) (x2108 x2316) (ite (and x748 x1478) (x2108 x2316) (ite (and x299 x3280) (x3690 x2316) (ite (and x2536 x2251) (x2108 x2316) (x1260 x2316)))))))))
(define-fun x3088 ((x2316 x1285)) Real (ite x482 (x66 x2316) (x3690 x2316)))
(define-fun x306 ((x2316 x1285)) Real (ite x3934 (x2108 x2316) (ite x356 (x2108 x2316) (x3088 x2316))))
(define-fun x2921 ((x2316 x1285)) Real (ite (and x1296 x1116) (x2564 x2316) (ite (and x3616 x2033) (x3754 x2316) (ite (and x3285 x3960) (x695 x2316) (ite (and (not x2539) x2446) (x695 x2316) (ite (and x4127 x1068) (x695 x2316) (ite (and x4237 x4231) (x2564 x2316) (ite (and x1390 x3095) (x695 x2316) (x3754 x2316)))))))))
(define-fun x1323 ((x2316 x1285)) Real (ite x100 (x2921 x2316) (x2564 x2316)))
(define-fun x1896 ((x2316 x1285)) Real (ite x3934 (x695 x2316) (ite x356 (x1323 x2316) (x695 x2316))))
(define-fun x3320 ((x2316 x1285)) Real (ite (= (x2562 x474) x2316) x2544 (x528 x2316)))
(define-fun x1543 ((x2316 Real)) Real (ite (= x2316 0) x638 (x233 x2316)))
(define-fun x2154 ((x2316 Real)) Real (ite (= 0 x2316) x4001 (x233 x2316)))
(define-fun x2883 ((x2316 x1285)) Real (ite (and x3783 x141 (not x1355)) (x766 x2316) (x975 x2316)))
(define-fun x4023 ((x2316 x1285)) Real (ite (and x3783 x141 (not x1355)) (x2765 x2316) (x1864 x2316)))
(define-fun x3066 ((x2316 Real)) Real (ite (= x2316 0) x3548 (x701 x2316)))
(define-fun x1447 ((x2316 Real)) Real (ite (= 0 x2316) x1634 (x701 x2316)))
(define-fun x643 ((x2316 x1285)) Real (ite (and x1996 x3366) (x2448 x2316) (ite (and x2263 x3470) (x1321 x2316) (ite (and x2328 x1401) (x975 x2316) (ite (and x363 (not x2350)) (x975 x2316) (ite (and x4172 x3241) (x975 x2316) (ite (and x2113 x1940) (x2448 x2316) (ite (and x4106 x3250) (x975 x2316) (x1321 x2316)))))))))
(define-fun x138 ((x2316 x1285)) Real (ite x127 (x643 x2316) (x2448 x2316)))
(define-fun x599 ((x2316 x1285)) Real (ite x2406 (x975 x2316) (ite x2981 (x138 x2316) (x975 x2316))))
(define-fun x1813 ((x2316 x1285)) Real (ite (and x3739 x1187) (x786 x2316) (ite (and x3215 x174) (x1544 x2316) (ite (and x3248 x55) (x1864 x2316) (ite (and (not x3447) x771) (x1864 x2316) (ite (and x133 x4180) (x1864 x2316) (ite (and x2098 x2166) (x786 x2316) (ite (and x3507 x1816) (x1864 x2316) (x1544 x2316)))))))))
(define-fun x3012 ((x2316 x1285)) Real (ite x2267 (x1813 x2316) (x786 x2316)))
(define-fun x1720 ((x2316 x1285)) Real (ite x2406 (x1864 x2316) (ite x2981 (x1864 x2316) (x3012 x2316))))
(define-fun x1503 ((x2316 x1285)) Real (ite (= x2316 (x2562 x3515)) x734 (x941 x2316)))
(define-fun x634 ((x2316 Real)) Real (ite (= x2316 0) 1 (x3051 x2316)))
(define-fun x112 ((x2316 Real)) Real (ite (= 0 x2316) 1 (x3051 x2316)))
(define-fun x1196 ((x2316 x1285)) Real (ite (and x2667 (not x3139)) (x673 x2316) (ite x1109 (ite x2551 (x306 x2316) (x2108 x2316)) (x2108 x2316))))
(define-fun x2241 ((x2316 x1285)) Real (ite (= x2908 x2316) x2499 (x1196 x2316)))
(define-fun x486 ((x2316 x1285)) Real (ite (and (not x3139) x2667) (x2165 x2316) (ite x1109 (ite x2551 (x1896 x2316) (x695 x2316)) (x695 x2316))))
(define-fun x477 ((x2316 x1285)) Real (ite (= x2835 x2316) x3163 (x486 x2316)))
(define-fun x3076 ((x2316 Real)) Real (ite (= 0 x2316) 1 (x741 x2316)))
(define-fun x1073 ((x2316 Real)) Real (ite (= x2316 0) 1 (x741 x2316)))
(define-fun x2159 ((x2316 x1285)) Real (ite (and x3018 (not x2087)) (x4023 x2316) (ite x1661 (ite x1350 (x1720 x2316) (x1864 x2316)) (x1864 x2316))))
(define-fun x2573 ((x2316 x1285)) Real (ite (= x3997 x2316) x1783 (x2159 x2316)))
(define-fun x2632 ((x2316 x1285)) Real (ite (and (not x2087) x3018) (x2883 x2316) (ite x1661 (ite x1350 (x599 x2316) (x975 x2316)) (x975 x2316))))
(define-fun x1419 ((x2316 x1285)) Real (ite (= x2316 x1631) x2186 (x2632 x2316)))
(define-fun x188 ((x2643 Real)) Bool (=> (and (not (= x2643 26959946667150639794667015087019630673637144422540572481103610249216)) (not (= 1845821197 x2643)) (not (= 117300739 x2643)) (not (= 34167655436598589418538772692774877509225721125679165766806516059628562808832 x2643)) (not (= 1166402363 x2643)) (not (= x2643 1889567281)) (not (= 37714057306076988483118529490347679105585116642029194716945419020321082336612 x2643)) (not (= x2643 115792089237316195423570984636004990333889740523700931696805413995650331181055)) (not (= x2643 4294967296)) (not (= 826074471 x2643)) (not (= x2643 16156842317565293874272834530371880720966471053262404558597773956279093428224)) (not (= 904250603428552709895185118199468575982109441609966099573332780532423983104 x2643)) (not (= x2643 115792089237316195423570985008687907853269984665640564039457584007913129639935)) (not (= 50942633119752846454219349998365661925608737367104304655302372697894809501696 x2643)) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639680 x2643)) (not (= 26959946667150639794667015087019630673637144422540572481103610249215 x2643)) (not (= x2643 5192296858534827628530496329220096)) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639904 x2643)) (not (= x2643 115792089210356248756420345215482394403581256910207104449633294546465451933695)) (not (= x2643 4294967295)) (not (= x2643 1461501637330902918203684832716283019655932542975)) (not (= 98474297345890754025501882143967591664980152141971839855651084132735363579904 x2643)) (not (= 2514000705 x2643)) (not (= 115792089210356248756420345214020892766250353992003419616917011526809519390720 x2643)) (not (= x2643 157198259)) (not (= 274184521717934524641157099916833587240 x2643)) (not (= 109576784812748834340197573905731726730118698833493337707389013487240318287872 x2643)) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x2643)) (< 10000 x2643) (not (= x2643 115792089237316195423570985007226406215939081747436879206741300988257197096960)) (not (= 1461501637330902918203684832716283019655932542976 x2643)) (not (= 455944412 x2643)) (not (= 2311529814 x2643)) (not (= x2643 18446744073709551616)) (not (= 599290589 x2643)) (not (= x2643 10019309979067222254582373821846632475949454479833780424560900009889672200192)) (not (= x2643 76450787359836037641860180984291677749980919077056822294353438043884394381312)) (not (= 274184521717934524641157099916833587206 x2643)) (not (= x2643 2835717307)) (not (= x2643 18446744073709551615)) (not (= x2643 511946350)) (not (= 404098525 x2643)) (not (= x2643 9518847204935358166548570266051330015907116135037852959641967396525866745856)) (not (= 274184521717934524641157099916833587202 x2643)) (not (= x2643 1858285468)) (not (= x2643 1722255204))) (not ((_ is x3377) (x2562 x2643)))))
(assert (axiom_frac_bound (* 1461501637330902918203684832716283019655932542976 x1177) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (* 1461501637330902918203684832716283019655932542976 x1177) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1461501637330902918203684832716283019655932542976 x1177 (uninterp_frac (* 1461501637330902918203684832716283019655932542976 x1177) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1461501637330902918203684832716283019655932542976 x1177) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1461501637330902918203684832716283019655932542976 x1912 (uninterp_frac (* 1461501637330902918203684832716283019655932542976 x1177) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1461501637330902918203684832716283019655932542976 x1177) 115792089237316195423570985008687907853269984665640564039457584007913129639936 26959946667150639794667015087019630673637144422540572481103610249216 x3874 (uninterp_frac (* 1461501637330902918203684832716283019655932542976 x1177) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1461501637330902918203684832716283019655932542976 x1177) 115792089237316195423570985008687907853269984665640564039457584007913129639936 26959946667150639794667015087019630673637144422540572481103610249216 x607 (uninterp_frac (* 1461501637330902918203684832716283019655932542976 x1177) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1461501637330902918203684832716283019655932542976 x1177) 115792089237316195423570985008687907853269984665640564039457584007913129639936 79228162514264337593543950336 x1604 (uninterp_frac (* 1461501637330902918203684832716283019655932542976 x1177) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1461501637330902918203684832716283019655932542976 x1177) 115792089237316195423570985008687907853269984665640564039457584007913129639936 79228162514264337593543950336 x3358 (uninterp_frac (* 1461501637330902918203684832716283019655932542976 x1177) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1461501637330902918203684832716283019655932542976 x1177) 115792089237316195423570985008687907853269984665640564039457584007913129639936 79228162514264337593543950336 x558 (uninterp_frac (* 1461501637330902918203684832716283019655932542976 x1177) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1461501637330902918203684832716283019655932542976 x1177) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1290 x522 (uninterp_frac (* 1461501637330902918203684832716283019655932542976 x1177) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1461501637330902918203684832716283019655932542976 x1177) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1657 x1229 (uninterp_frac (* 1461501637330902918203684832716283019655932542976 x1177) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1461501637330902918203684832716283019655932542976 x1177) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2274 79228162514264337593543950336 (uninterp_frac (* 1461501637330902918203684832716283019655932542976 x1177) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1461501637330902918203684832716283019655932542976 x1177) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2728 x3251 (uninterp_frac (* 1461501637330902918203684832716283019655932542976 x1177) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1461501637330902918203684832716283019655932542976 x1177) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3251 x2728 (uninterp_frac (* 1461501637330902918203684832716283019655932542976 x1177) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1461501637330902918203684832716283019655932542976 x1177) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3475 79228162514264337593543950336 (uninterp_frac (* 1461501637330902918203684832716283019655932542976 x1177) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1461501637330902918203684832716283019655932542976 x1177) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x409 79228162514264337593543950336 (uninterp_frac (* 1461501637330902918203684832716283019655932542976 x1177) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1461501637330902918203684832716283019655932542976 x1177) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4111 1461501637330902918203684832716283019655932542976 (uninterp_frac (* 1461501637330902918203684832716283019655932542976 x1177) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1461501637330902918203684832716283019655932542976 x1177) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4115 x3188 (uninterp_frac (* 1461501637330902918203684832716283019655932542976 x1177) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1461501637330902918203684832716283019655932542976 x1177) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x628 1461501637330902918203684832716283019655932542976 (uninterp_frac (* 1461501637330902918203684832716283019655932542976 x1177) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (* 1461501637330902918203684832716283019655932542976 x1912) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (* 1461501637330902918203684832716283019655932542976 x1912) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1461501637330902918203684832716283019655932542976 x1177 (uninterp_frac (* 1461501637330902918203684832716283019655932542976 x1912) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1461501637330902918203684832716283019655932542976 x1912) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1461501637330902918203684832716283019655932542976 x1912 (uninterp_frac (* 1461501637330902918203684832716283019655932542976 x1912) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1461501637330902918203684832716283019655932542976 x1912) 115792089237316195423570985008687907853269984665640564039457584007913129639936 26959946667150639794667015087019630673637144422540572481103610249216 x3874 (uninterp_frac (* 1461501637330902918203684832716283019655932542976 x1912) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1461501637330902918203684832716283019655932542976 x1912) 115792089237316195423570985008687907853269984665640564039457584007913129639936 26959946667150639794667015087019630673637144422540572481103610249216 x607 (uninterp_frac (* 1461501637330902918203684832716283019655932542976 x1912) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1461501637330902918203684832716283019655932542976 x1912) 115792089237316195423570985008687907853269984665640564039457584007913129639936 79228162514264337593543950336 x1604 (uninterp_frac (* 1461501637330902918203684832716283019655932542976 x1912) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1461501637330902918203684832716283019655932542976 x1912) 115792089237316195423570985008687907853269984665640564039457584007913129639936 79228162514264337593543950336 x3358 (uninterp_frac (* 1461501637330902918203684832716283019655932542976 x1912) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1461501637330902918203684832716283019655932542976 x1912) 115792089237316195423570985008687907853269984665640564039457584007913129639936 79228162514264337593543950336 x558 (uninterp_frac (* 1461501637330902918203684832716283019655932542976 x1912) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1461501637330902918203684832716283019655932542976 x1912) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1290 x522 (uninterp_frac (* 1461501637330902918203684832716283019655932542976 x1912) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1461501637330902918203684832716283019655932542976 x1912) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1657 x1229 (uninterp_frac (* 1461501637330902918203684832716283019655932542976 x1912) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1461501637330902918203684832716283019655932542976 x1912) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2274 79228162514264337593543950336 (uninterp_frac (* 1461501637330902918203684832716283019655932542976 x1912) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1461501637330902918203684832716283019655932542976 x1912) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2728 x3251 (uninterp_frac (* 1461501637330902918203684832716283019655932542976 x1912) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1461501637330902918203684832716283019655932542976 x1912) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3251 x2728 (uninterp_frac (* 1461501637330902918203684832716283019655932542976 x1912) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1461501637330902918203684832716283019655932542976 x1912) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3475 79228162514264337593543950336 (uninterp_frac (* 1461501637330902918203684832716283019655932542976 x1912) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1461501637330902918203684832716283019655932542976 x1912) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x409 79228162514264337593543950336 (uninterp_frac (* 1461501637330902918203684832716283019655932542976 x1912) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1461501637330902918203684832716283019655932542976 x1912) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4111 1461501637330902918203684832716283019655932542976 (uninterp_frac (* 1461501637330902918203684832716283019655932542976 x1912) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1461501637330902918203684832716283019655932542976 x1912) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4115 x3188 (uninterp_frac (* 1461501637330902918203684832716283019655932542976 x1912) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1461501637330902918203684832716283019655932542976 x1912) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x628 1461501637330902918203684832716283019655932542976 (uninterp_frac (* 1461501637330902918203684832716283019655932542976 x1912) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (* 26959946667150639794667015087019630673637144422540572481103610249216 x3874) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (* 26959946667150639794667015087019630673637144422540572481103610249216 x3874) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1461501637330902918203684832716283019655932542976 x1177 (uninterp_frac (* 26959946667150639794667015087019630673637144422540572481103610249216 x3874) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 26959946667150639794667015087019630673637144422540572481103610249216 x3874) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1461501637330902918203684832716283019655932542976 x1912 (uninterp_frac (* 26959946667150639794667015087019630673637144422540572481103610249216 x3874) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 26959946667150639794667015087019630673637144422540572481103610249216 x3874) 115792089237316195423570985008687907853269984665640564039457584007913129639936 26959946667150639794667015087019630673637144422540572481103610249216 x3874 (uninterp_frac (* 26959946667150639794667015087019630673637144422540572481103610249216 x3874) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 26959946667150639794667015087019630673637144422540572481103610249216 x3874) 115792089237316195423570985008687907853269984665640564039457584007913129639936 26959946667150639794667015087019630673637144422540572481103610249216 x607 (uninterp_frac (* 26959946667150639794667015087019630673637144422540572481103610249216 x3874) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 26959946667150639794667015087019630673637144422540572481103610249216 x3874) 115792089237316195423570985008687907853269984665640564039457584007913129639936 79228162514264337593543950336 x1604 (uninterp_frac (* 26959946667150639794667015087019630673637144422540572481103610249216 x3874) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 26959946667150639794667015087019630673637144422540572481103610249216 x3874) 115792089237316195423570985008687907853269984665640564039457584007913129639936 79228162514264337593543950336 x3358 (uninterp_frac (* 26959946667150639794667015087019630673637144422540572481103610249216 x3874) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 26959946667150639794667015087019630673637144422540572481103610249216 x3874) 115792089237316195423570985008687907853269984665640564039457584007913129639936 79228162514264337593543950336 x558 (uninterp_frac (* 26959946667150639794667015087019630673637144422540572481103610249216 x3874) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 26959946667150639794667015087019630673637144422540572481103610249216 x3874) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1290 x522 (uninterp_frac (* 26959946667150639794667015087019630673637144422540572481103610249216 x3874) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 26959946667150639794667015087019630673637144422540572481103610249216 x3874) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1657 x1229 (uninterp_frac (* 26959946667150639794667015087019630673637144422540572481103610249216 x3874) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 26959946667150639794667015087019630673637144422540572481103610249216 x3874) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2274 79228162514264337593543950336 (uninterp_frac (* 26959946667150639794667015087019630673637144422540572481103610249216 x3874) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 26959946667150639794667015087019630673637144422540572481103610249216 x3874) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2728 x3251 (uninterp_frac (* 26959946667150639794667015087019630673637144422540572481103610249216 x3874) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 26959946667150639794667015087019630673637144422540572481103610249216 x3874) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3251 x2728 (uninterp_frac (* 26959946667150639794667015087019630673637144422540572481103610249216 x3874) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 26959946667150639794667015087019630673637144422540572481103610249216 x3874) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3475 79228162514264337593543950336 (uninterp_frac (* 26959946667150639794667015087019630673637144422540572481103610249216 x3874) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 26959946667150639794667015087019630673637144422540572481103610249216 x3874) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x409 79228162514264337593543950336 (uninterp_frac (* 26959946667150639794667015087019630673637144422540572481103610249216 x3874) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 26959946667150639794667015087019630673637144422540572481103610249216 x3874) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4111 1461501637330902918203684832716283019655932542976 (uninterp_frac (* 26959946667150639794667015087019630673637144422540572481103610249216 x3874) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 26959946667150639794667015087019630673637144422540572481103610249216 x3874) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4115 x3188 (uninterp_frac (* 26959946667150639794667015087019630673637144422540572481103610249216 x3874) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 26959946667150639794667015087019630673637144422540572481103610249216 x3874) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x628 1461501637330902918203684832716283019655932542976 (uninterp_frac (* 26959946667150639794667015087019630673637144422540572481103610249216 x3874) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (* 26959946667150639794667015087019630673637144422540572481103610249216 x607) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (* 26959946667150639794667015087019630673637144422540572481103610249216 x607) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1461501637330902918203684832716283019655932542976 x1177 (uninterp_frac (* 26959946667150639794667015087019630673637144422540572481103610249216 x607) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 26959946667150639794667015087019630673637144422540572481103610249216 x607) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1461501637330902918203684832716283019655932542976 x1912 (uninterp_frac (* 26959946667150639794667015087019630673637144422540572481103610249216 x607) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 26959946667150639794667015087019630673637144422540572481103610249216 x607) 115792089237316195423570985008687907853269984665640564039457584007913129639936 26959946667150639794667015087019630673637144422540572481103610249216 x3874 (uninterp_frac (* 26959946667150639794667015087019630673637144422540572481103610249216 x607) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 26959946667150639794667015087019630673637144422540572481103610249216 x607) 115792089237316195423570985008687907853269984665640564039457584007913129639936 26959946667150639794667015087019630673637144422540572481103610249216 x607 (uninterp_frac (* 26959946667150639794667015087019630673637144422540572481103610249216 x607) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 26959946667150639794667015087019630673637144422540572481103610249216 x607) 115792089237316195423570985008687907853269984665640564039457584007913129639936 79228162514264337593543950336 x1604 (uninterp_frac (* 26959946667150639794667015087019630673637144422540572481103610249216 x607) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 26959946667150639794667015087019630673637144422540572481103610249216 x607) 115792089237316195423570985008687907853269984665640564039457584007913129639936 79228162514264337593543950336 x3358 (uninterp_frac (* 26959946667150639794667015087019630673637144422540572481103610249216 x607) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 26959946667150639794667015087019630673637144422540572481103610249216 x607) 115792089237316195423570985008687907853269984665640564039457584007913129639936 79228162514264337593543950336 x558 (uninterp_frac (* 26959946667150639794667015087019630673637144422540572481103610249216 x607) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 26959946667150639794667015087019630673637144422540572481103610249216 x607) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1290 x522 (uninterp_frac (* 26959946667150639794667015087019630673637144422540572481103610249216 x607) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 26959946667150639794667015087019630673637144422540572481103610249216 x607) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1657 x1229 (uninterp_frac (* 26959946667150639794667015087019630673637144422540572481103610249216 x607) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 26959946667150639794667015087019630673637144422540572481103610249216 x607) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2274 79228162514264337593543950336 (uninterp_frac (* 26959946667150639794667015087019630673637144422540572481103610249216 x607) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 26959946667150639794667015087019630673637144422540572481103610249216 x607) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2728 x3251 (uninterp_frac (* 26959946667150639794667015087019630673637144422540572481103610249216 x607) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 26959946667150639794667015087019630673637144422540572481103610249216 x607) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3251 x2728 (uninterp_frac (* 26959946667150639794667015087019630673637144422540572481103610249216 x607) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 26959946667150639794667015087019630673637144422540572481103610249216 x607) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3475 79228162514264337593543950336 (uninterp_frac (* 26959946667150639794667015087019630673637144422540572481103610249216 x607) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 26959946667150639794667015087019630673637144422540572481103610249216 x607) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x409 79228162514264337593543950336 (uninterp_frac (* 26959946667150639794667015087019630673637144422540572481103610249216 x607) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 26959946667150639794667015087019630673637144422540572481103610249216 x607) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4111 1461501637330902918203684832716283019655932542976 (uninterp_frac (* 26959946667150639794667015087019630673637144422540572481103610249216 x607) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 26959946667150639794667015087019630673637144422540572481103610249216 x607) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4115 x3188 (uninterp_frac (* 26959946667150639794667015087019630673637144422540572481103610249216 x607) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 26959946667150639794667015087019630673637144422540572481103610249216 x607) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x628 1461501637330902918203684832716283019655932542976 (uninterp_frac (* 26959946667150639794667015087019630673637144422540572481103610249216 x607) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (* 79228162514264337593543950336 x1604) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (* 79228162514264337593543950336 x1604) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1461501637330902918203684832716283019655932542976 x1177 (uninterp_frac (* 79228162514264337593543950336 x1604) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 79228162514264337593543950336 x1604) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1461501637330902918203684832716283019655932542976 x1912 (uninterp_frac (* 79228162514264337593543950336 x1604) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 79228162514264337593543950336 x1604) 115792089237316195423570985008687907853269984665640564039457584007913129639936 26959946667150639794667015087019630673637144422540572481103610249216 x3874 (uninterp_frac (* 79228162514264337593543950336 x1604) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 79228162514264337593543950336 x1604) 115792089237316195423570985008687907853269984665640564039457584007913129639936 26959946667150639794667015087019630673637144422540572481103610249216 x607 (uninterp_frac (* 79228162514264337593543950336 x1604) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 79228162514264337593543950336 x1604) 115792089237316195423570985008687907853269984665640564039457584007913129639936 79228162514264337593543950336 x1604 (uninterp_frac (* 79228162514264337593543950336 x1604) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 79228162514264337593543950336 x1604) 115792089237316195423570985008687907853269984665640564039457584007913129639936 79228162514264337593543950336 x3358 (uninterp_frac (* 79228162514264337593543950336 x1604) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 79228162514264337593543950336 x1604) 115792089237316195423570985008687907853269984665640564039457584007913129639936 79228162514264337593543950336 x558 (uninterp_frac (* 79228162514264337593543950336 x1604) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 79228162514264337593543950336 x1604) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1290 x522 (uninterp_frac (* 79228162514264337593543950336 x1604) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 79228162514264337593543950336 x1604) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1657 x1229 (uninterp_frac (* 79228162514264337593543950336 x1604) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 79228162514264337593543950336 x1604) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2274 79228162514264337593543950336 (uninterp_frac (* 79228162514264337593543950336 x1604) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 79228162514264337593543950336 x1604) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2728 x3251 (uninterp_frac (* 79228162514264337593543950336 x1604) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 79228162514264337593543950336 x1604) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3251 x2728 (uninterp_frac (* 79228162514264337593543950336 x1604) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 79228162514264337593543950336 x1604) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3475 79228162514264337593543950336 (uninterp_frac (* 79228162514264337593543950336 x1604) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 79228162514264337593543950336 x1604) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x409 79228162514264337593543950336 (uninterp_frac (* 79228162514264337593543950336 x1604) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 79228162514264337593543950336 x1604) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4111 1461501637330902918203684832716283019655932542976 (uninterp_frac (* 79228162514264337593543950336 x1604) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 79228162514264337593543950336 x1604) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4115 x3188 (uninterp_frac (* 79228162514264337593543950336 x1604) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 79228162514264337593543950336 x1604) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x628 1461501637330902918203684832716283019655932542976 (uninterp_frac (* 79228162514264337593543950336 x1604) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (* 79228162514264337593543950336 x3358) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (* 79228162514264337593543950336 x3358) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1461501637330902918203684832716283019655932542976 x1177 (uninterp_frac (* 79228162514264337593543950336 x3358) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 79228162514264337593543950336 x3358) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1461501637330902918203684832716283019655932542976 x1912 (uninterp_frac (* 79228162514264337593543950336 x3358) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 79228162514264337593543950336 x3358) 115792089237316195423570985008687907853269984665640564039457584007913129639936 26959946667150639794667015087019630673637144422540572481103610249216 x3874 (uninterp_frac (* 79228162514264337593543950336 x3358) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 79228162514264337593543950336 x3358) 115792089237316195423570985008687907853269984665640564039457584007913129639936 26959946667150639794667015087019630673637144422540572481103610249216 x607 (uninterp_frac (* 79228162514264337593543950336 x3358) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 79228162514264337593543950336 x3358) 115792089237316195423570985008687907853269984665640564039457584007913129639936 79228162514264337593543950336 x1604 (uninterp_frac (* 79228162514264337593543950336 x3358) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 79228162514264337593543950336 x3358) 115792089237316195423570985008687907853269984665640564039457584007913129639936 79228162514264337593543950336 x3358 (uninterp_frac (* 79228162514264337593543950336 x3358) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 79228162514264337593543950336 x3358) 115792089237316195423570985008687907853269984665640564039457584007913129639936 79228162514264337593543950336 x558 (uninterp_frac (* 79228162514264337593543950336 x3358) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 79228162514264337593543950336 x3358) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1290 x522 (uninterp_frac (* 79228162514264337593543950336 x3358) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 79228162514264337593543950336 x3358) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1657 x1229 (uninterp_frac (* 79228162514264337593543950336 x3358) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 79228162514264337593543950336 x3358) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2274 79228162514264337593543950336 (uninterp_frac (* 79228162514264337593543950336 x3358) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 79228162514264337593543950336 x3358) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2728 x3251 (uninterp_frac (* 79228162514264337593543950336 x3358) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 79228162514264337593543950336 x3358) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3251 x2728 (uninterp_frac (* 79228162514264337593543950336 x3358) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 79228162514264337593543950336 x3358) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3475 79228162514264337593543950336 (uninterp_frac (* 79228162514264337593543950336 x3358) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 79228162514264337593543950336 x3358) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x409 79228162514264337593543950336 (uninterp_frac (* 79228162514264337593543950336 x3358) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 79228162514264337593543950336 x3358) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4111 1461501637330902918203684832716283019655932542976 (uninterp_frac (* 79228162514264337593543950336 x3358) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 79228162514264337593543950336 x3358) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4115 x3188 (uninterp_frac (* 79228162514264337593543950336 x3358) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 79228162514264337593543950336 x3358) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x628 1461501637330902918203684832716283019655932542976 (uninterp_frac (* 79228162514264337593543950336 x3358) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (* 79228162514264337593543950336 x558) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (* 79228162514264337593543950336 x558) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1461501637330902918203684832716283019655932542976 x1177 (uninterp_frac (* 79228162514264337593543950336 x558) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 79228162514264337593543950336 x558) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1461501637330902918203684832716283019655932542976 x1912 (uninterp_frac (* 79228162514264337593543950336 x558) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 79228162514264337593543950336 x558) 115792089237316195423570985008687907853269984665640564039457584007913129639936 26959946667150639794667015087019630673637144422540572481103610249216 x3874 (uninterp_frac (* 79228162514264337593543950336 x558) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 79228162514264337593543950336 x558) 115792089237316195423570985008687907853269984665640564039457584007913129639936 26959946667150639794667015087019630673637144422540572481103610249216 x607 (uninterp_frac (* 79228162514264337593543950336 x558) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 79228162514264337593543950336 x558) 115792089237316195423570985008687907853269984665640564039457584007913129639936 79228162514264337593543950336 x1604 (uninterp_frac (* 79228162514264337593543950336 x558) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 79228162514264337593543950336 x558) 115792089237316195423570985008687907853269984665640564039457584007913129639936 79228162514264337593543950336 x3358 (uninterp_frac (* 79228162514264337593543950336 x558) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 79228162514264337593543950336 x558) 115792089237316195423570985008687907853269984665640564039457584007913129639936 79228162514264337593543950336 x558 (uninterp_frac (* 79228162514264337593543950336 x558) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 79228162514264337593543950336 x558) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1290 x522 (uninterp_frac (* 79228162514264337593543950336 x558) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 79228162514264337593543950336 x558) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1657 x1229 (uninterp_frac (* 79228162514264337593543950336 x558) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 79228162514264337593543950336 x558) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2274 79228162514264337593543950336 (uninterp_frac (* 79228162514264337593543950336 x558) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 79228162514264337593543950336 x558) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2728 x3251 (uninterp_frac (* 79228162514264337593543950336 x558) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 79228162514264337593543950336 x558) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3251 x2728 (uninterp_frac (* 79228162514264337593543950336 x558) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 79228162514264337593543950336 x558) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3475 79228162514264337593543950336 (uninterp_frac (* 79228162514264337593543950336 x558) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 79228162514264337593543950336 x558) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x409 79228162514264337593543950336 (uninterp_frac (* 79228162514264337593543950336 x558) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 79228162514264337593543950336 x558) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4111 1461501637330902918203684832716283019655932542976 (uninterp_frac (* 79228162514264337593543950336 x558) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 79228162514264337593543950336 x558) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4115 x3188 (uninterp_frac (* 79228162514264337593543950336 x558) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 79228162514264337593543950336 x558) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x628 1461501637330902918203684832716283019655932542976 (uninterp_frac (* 79228162514264337593543950336 x558) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (* x1290 x522) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (* x1290 x522) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1461501637330902918203684832716283019655932542976 x1177 (uninterp_frac (* x1290 x522) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1290 x522) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1461501637330902918203684832716283019655932542976 x1912 (uninterp_frac (* x1290 x522) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1290 x522) 115792089237316195423570985008687907853269984665640564039457584007913129639936 26959946667150639794667015087019630673637144422540572481103610249216 x3874 (uninterp_frac (* x1290 x522) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1290 x522) 115792089237316195423570985008687907853269984665640564039457584007913129639936 26959946667150639794667015087019630673637144422540572481103610249216 x607 (uninterp_frac (* x1290 x522) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1290 x522) 115792089237316195423570985008687907853269984665640564039457584007913129639936 79228162514264337593543950336 x1604 (uninterp_frac (* x1290 x522) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1290 x522) 115792089237316195423570985008687907853269984665640564039457584007913129639936 79228162514264337593543950336 x3358 (uninterp_frac (* x1290 x522) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1290 x522) 115792089237316195423570985008687907853269984665640564039457584007913129639936 79228162514264337593543950336 x558 (uninterp_frac (* x1290 x522) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1290 x522) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1290 x522 (uninterp_frac (* x1290 x522) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1290 x522) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1657 x1229 (uninterp_frac (* x1290 x522) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1290 x522) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2274 79228162514264337593543950336 (uninterp_frac (* x1290 x522) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1290 x522) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2728 x3251 (uninterp_frac (* x1290 x522) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1290 x522) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3251 x2728 (uninterp_frac (* x1290 x522) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1290 x522) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3475 79228162514264337593543950336 (uninterp_frac (* x1290 x522) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1290 x522) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x409 79228162514264337593543950336 (uninterp_frac (* x1290 x522) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1290 x522) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4111 1461501637330902918203684832716283019655932542976 (uninterp_frac (* x1290 x522) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1290 x522) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4115 x3188 (uninterp_frac (* x1290 x522) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1290 x522) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x628 1461501637330902918203684832716283019655932542976 (uninterp_frac (* x1290 x522) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (* x1657 x1229) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (* x1657 x1229) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1461501637330902918203684832716283019655932542976 x1177 (uninterp_frac (* x1657 x1229) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1657 x1229) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1461501637330902918203684832716283019655932542976 x1912 (uninterp_frac (* x1657 x1229) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1657 x1229) 115792089237316195423570985008687907853269984665640564039457584007913129639936 26959946667150639794667015087019630673637144422540572481103610249216 x3874 (uninterp_frac (* x1657 x1229) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1657 x1229) 115792089237316195423570985008687907853269984665640564039457584007913129639936 26959946667150639794667015087019630673637144422540572481103610249216 x607 (uninterp_frac (* x1657 x1229) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1657 x1229) 115792089237316195423570985008687907853269984665640564039457584007913129639936 79228162514264337593543950336 x1604 (uninterp_frac (* x1657 x1229) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1657 x1229) 115792089237316195423570985008687907853269984665640564039457584007913129639936 79228162514264337593543950336 x3358 (uninterp_frac (* x1657 x1229) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1657 x1229) 115792089237316195423570985008687907853269984665640564039457584007913129639936 79228162514264337593543950336 x558 (uninterp_frac (* x1657 x1229) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1657 x1229) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1290 x522 (uninterp_frac (* x1657 x1229) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1657 x1229) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1657 x1229 (uninterp_frac (* x1657 x1229) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1657 x1229) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2274 79228162514264337593543950336 (uninterp_frac (* x1657 x1229) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1657 x1229) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2728 x3251 (uninterp_frac (* x1657 x1229) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1657 x1229) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3251 x2728 (uninterp_frac (* x1657 x1229) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1657 x1229) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3475 79228162514264337593543950336 (uninterp_frac (* x1657 x1229) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1657 x1229) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x409 79228162514264337593543950336 (uninterp_frac (* x1657 x1229) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1657 x1229) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4111 1461501637330902918203684832716283019655932542976 (uninterp_frac (* x1657 x1229) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1657 x1229) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4115 x3188 (uninterp_frac (* x1657 x1229) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x1657 x1229) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x628 1461501637330902918203684832716283019655932542976 (uninterp_frac (* x1657 x1229) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (* x2274 79228162514264337593543950336) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (* x2274 79228162514264337593543950336) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1461501637330902918203684832716283019655932542976 x1177 (uninterp_frac (* x2274 79228162514264337593543950336) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2274 79228162514264337593543950336) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1461501637330902918203684832716283019655932542976 x1912 (uninterp_frac (* x2274 79228162514264337593543950336) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2274 79228162514264337593543950336) 115792089237316195423570985008687907853269984665640564039457584007913129639936 26959946667150639794667015087019630673637144422540572481103610249216 x3874 (uninterp_frac (* x2274 79228162514264337593543950336) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2274 79228162514264337593543950336) 115792089237316195423570985008687907853269984665640564039457584007913129639936 26959946667150639794667015087019630673637144422540572481103610249216 x607 (uninterp_frac (* x2274 79228162514264337593543950336) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2274 79228162514264337593543950336) 115792089237316195423570985008687907853269984665640564039457584007913129639936 79228162514264337593543950336 x1604 (uninterp_frac (* x2274 79228162514264337593543950336) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2274 79228162514264337593543950336) 115792089237316195423570985008687907853269984665640564039457584007913129639936 79228162514264337593543950336 x3358 (uninterp_frac (* x2274 79228162514264337593543950336) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2274 79228162514264337593543950336) 115792089237316195423570985008687907853269984665640564039457584007913129639936 79228162514264337593543950336 x558 (uninterp_frac (* x2274 79228162514264337593543950336) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2274 79228162514264337593543950336) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1290 x522 (uninterp_frac (* x2274 79228162514264337593543950336) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2274 79228162514264337593543950336) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1657 x1229 (uninterp_frac (* x2274 79228162514264337593543950336) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2274 79228162514264337593543950336) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2274 79228162514264337593543950336 (uninterp_frac (* x2274 79228162514264337593543950336) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2274 79228162514264337593543950336) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2728 x3251 (uninterp_frac (* x2274 79228162514264337593543950336) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2274 79228162514264337593543950336) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3251 x2728 (uninterp_frac (* x2274 79228162514264337593543950336) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2274 79228162514264337593543950336) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3475 79228162514264337593543950336 (uninterp_frac (* x2274 79228162514264337593543950336) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2274 79228162514264337593543950336) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x409 79228162514264337593543950336 (uninterp_frac (* x2274 79228162514264337593543950336) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2274 79228162514264337593543950336) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4111 1461501637330902918203684832716283019655932542976 (uninterp_frac (* x2274 79228162514264337593543950336) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2274 79228162514264337593543950336) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4115 x3188 (uninterp_frac (* x2274 79228162514264337593543950336) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2274 79228162514264337593543950336) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x628 1461501637330902918203684832716283019655932542976 (uninterp_frac (* x2274 79228162514264337593543950336) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (* x2728 x3251) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (* x2728 x3251) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1461501637330902918203684832716283019655932542976 x1177 (uninterp_frac (* x2728 x3251) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2728 x3251) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1461501637330902918203684832716283019655932542976 x1912 (uninterp_frac (* x2728 x3251) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2728 x3251) 115792089237316195423570985008687907853269984665640564039457584007913129639936 26959946667150639794667015087019630673637144422540572481103610249216 x3874 (uninterp_frac (* x2728 x3251) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2728 x3251) 115792089237316195423570985008687907853269984665640564039457584007913129639936 26959946667150639794667015087019630673637144422540572481103610249216 x607 (uninterp_frac (* x2728 x3251) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2728 x3251) 115792089237316195423570985008687907853269984665640564039457584007913129639936 79228162514264337593543950336 x1604 (uninterp_frac (* x2728 x3251) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2728 x3251) 115792089237316195423570985008687907853269984665640564039457584007913129639936 79228162514264337593543950336 x3358 (uninterp_frac (* x2728 x3251) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2728 x3251) 115792089237316195423570985008687907853269984665640564039457584007913129639936 79228162514264337593543950336 x558 (uninterp_frac (* x2728 x3251) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2728 x3251) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1290 x522 (uninterp_frac (* x2728 x3251) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2728 x3251) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1657 x1229 (uninterp_frac (* x2728 x3251) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2728 x3251) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2274 79228162514264337593543950336 (uninterp_frac (* x2728 x3251) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2728 x3251) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2728 x3251 (uninterp_frac (* x2728 x3251) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2728 x3251) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3251 x2728 (uninterp_frac (* x2728 x3251) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2728 x3251) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3475 79228162514264337593543950336 (uninterp_frac (* x2728 x3251) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2728 x3251) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x409 79228162514264337593543950336 (uninterp_frac (* x2728 x3251) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2728 x3251) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4111 1461501637330902918203684832716283019655932542976 (uninterp_frac (* x2728 x3251) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2728 x3251) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4115 x3188 (uninterp_frac (* x2728 x3251) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x2728 x3251) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x628 1461501637330902918203684832716283019655932542976 (uninterp_frac (* x2728 x3251) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (* x3251 x2728) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (* x3251 x2728) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1461501637330902918203684832716283019655932542976 x1177 (uninterp_frac (* x3251 x2728) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3251 x2728) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1461501637330902918203684832716283019655932542976 x1912 (uninterp_frac (* x3251 x2728) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3251 x2728) 115792089237316195423570985008687907853269984665640564039457584007913129639936 26959946667150639794667015087019630673637144422540572481103610249216 x3874 (uninterp_frac (* x3251 x2728) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3251 x2728) 115792089237316195423570985008687907853269984665640564039457584007913129639936 26959946667150639794667015087019630673637144422540572481103610249216 x607 (uninterp_frac (* x3251 x2728) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3251 x2728) 115792089237316195423570985008687907853269984665640564039457584007913129639936 79228162514264337593543950336 x1604 (uninterp_frac (* x3251 x2728) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3251 x2728) 115792089237316195423570985008687907853269984665640564039457584007913129639936 79228162514264337593543950336 x3358 (uninterp_frac (* x3251 x2728) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3251 x2728) 115792089237316195423570985008687907853269984665640564039457584007913129639936 79228162514264337593543950336 x558 (uninterp_frac (* x3251 x2728) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3251 x2728) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1290 x522 (uninterp_frac (* x3251 x2728) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3251 x2728) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1657 x1229 (uninterp_frac (* x3251 x2728) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3251 x2728) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2274 79228162514264337593543950336 (uninterp_frac (* x3251 x2728) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3251 x2728) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2728 x3251 (uninterp_frac (* x3251 x2728) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3251 x2728) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3251 x2728 (uninterp_frac (* x3251 x2728) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3251 x2728) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3475 79228162514264337593543950336 (uninterp_frac (* x3251 x2728) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3251 x2728) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x409 79228162514264337593543950336 (uninterp_frac (* x3251 x2728) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3251 x2728) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4111 1461501637330902918203684832716283019655932542976 (uninterp_frac (* x3251 x2728) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3251 x2728) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4115 x3188 (uninterp_frac (* x3251 x2728) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3251 x2728) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x628 1461501637330902918203684832716283019655932542976 (uninterp_frac (* x3251 x2728) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (* x3475 79228162514264337593543950336) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (* x3475 79228162514264337593543950336) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1461501637330902918203684832716283019655932542976 x1177 (uninterp_frac (* x3475 79228162514264337593543950336) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3475 79228162514264337593543950336) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1461501637330902918203684832716283019655932542976 x1912 (uninterp_frac (* x3475 79228162514264337593543950336) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3475 79228162514264337593543950336) 115792089237316195423570985008687907853269984665640564039457584007913129639936 26959946667150639794667015087019630673637144422540572481103610249216 x3874 (uninterp_frac (* x3475 79228162514264337593543950336) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3475 79228162514264337593543950336) 115792089237316195423570985008687907853269984665640564039457584007913129639936 26959946667150639794667015087019630673637144422540572481103610249216 x607 (uninterp_frac (* x3475 79228162514264337593543950336) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3475 79228162514264337593543950336) 115792089237316195423570985008687907853269984665640564039457584007913129639936 79228162514264337593543950336 x1604 (uninterp_frac (* x3475 79228162514264337593543950336) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3475 79228162514264337593543950336) 115792089237316195423570985008687907853269984665640564039457584007913129639936 79228162514264337593543950336 x3358 (uninterp_frac (* x3475 79228162514264337593543950336) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3475 79228162514264337593543950336) 115792089237316195423570985008687907853269984665640564039457584007913129639936 79228162514264337593543950336 x558 (uninterp_frac (* x3475 79228162514264337593543950336) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3475 79228162514264337593543950336) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1290 x522 (uninterp_frac (* x3475 79228162514264337593543950336) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3475 79228162514264337593543950336) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1657 x1229 (uninterp_frac (* x3475 79228162514264337593543950336) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3475 79228162514264337593543950336) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2274 79228162514264337593543950336 (uninterp_frac (* x3475 79228162514264337593543950336) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3475 79228162514264337593543950336) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2728 x3251 (uninterp_frac (* x3475 79228162514264337593543950336) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3475 79228162514264337593543950336) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3251 x2728 (uninterp_frac (* x3475 79228162514264337593543950336) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3475 79228162514264337593543950336) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3475 79228162514264337593543950336 (uninterp_frac (* x3475 79228162514264337593543950336) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3475 79228162514264337593543950336) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x409 79228162514264337593543950336 (uninterp_frac (* x3475 79228162514264337593543950336) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3475 79228162514264337593543950336) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4111 1461501637330902918203684832716283019655932542976 (uninterp_frac (* x3475 79228162514264337593543950336) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3475 79228162514264337593543950336) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4115 x3188 (uninterp_frac (* x3475 79228162514264337593543950336) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x3475 79228162514264337593543950336) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x628 1461501637330902918203684832716283019655932542976 (uninterp_frac (* x3475 79228162514264337593543950336) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (* x409 79228162514264337593543950336) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (* x409 79228162514264337593543950336) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1461501637330902918203684832716283019655932542976 x1177 (uninterp_frac (* x409 79228162514264337593543950336) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x409 79228162514264337593543950336) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1461501637330902918203684832716283019655932542976 x1912 (uninterp_frac (* x409 79228162514264337593543950336) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x409 79228162514264337593543950336) 115792089237316195423570985008687907853269984665640564039457584007913129639936 26959946667150639794667015087019630673637144422540572481103610249216 x3874 (uninterp_frac (* x409 79228162514264337593543950336) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x409 79228162514264337593543950336) 115792089237316195423570985008687907853269984665640564039457584007913129639936 26959946667150639794667015087019630673637144422540572481103610249216 x607 (uninterp_frac (* x409 79228162514264337593543950336) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x409 79228162514264337593543950336) 115792089237316195423570985008687907853269984665640564039457584007913129639936 79228162514264337593543950336 x1604 (uninterp_frac (* x409 79228162514264337593543950336) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x409 79228162514264337593543950336) 115792089237316195423570985008687907853269984665640564039457584007913129639936 79228162514264337593543950336 x3358 (uninterp_frac (* x409 79228162514264337593543950336) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x409 79228162514264337593543950336) 115792089237316195423570985008687907853269984665640564039457584007913129639936 79228162514264337593543950336 x558 (uninterp_frac (* x409 79228162514264337593543950336) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x409 79228162514264337593543950336) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1290 x522 (uninterp_frac (* x409 79228162514264337593543950336) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x409 79228162514264337593543950336) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1657 x1229 (uninterp_frac (* x409 79228162514264337593543950336) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x409 79228162514264337593543950336) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2274 79228162514264337593543950336 (uninterp_frac (* x409 79228162514264337593543950336) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x409 79228162514264337593543950336) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2728 x3251 (uninterp_frac (* x409 79228162514264337593543950336) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x409 79228162514264337593543950336) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3251 x2728 (uninterp_frac (* x409 79228162514264337593543950336) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x409 79228162514264337593543950336) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3475 79228162514264337593543950336 (uninterp_frac (* x409 79228162514264337593543950336) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x409 79228162514264337593543950336) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x409 79228162514264337593543950336 (uninterp_frac (* x409 79228162514264337593543950336) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x409 79228162514264337593543950336) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4111 1461501637330902918203684832716283019655932542976 (uninterp_frac (* x409 79228162514264337593543950336) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x409 79228162514264337593543950336) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4115 x3188 (uninterp_frac (* x409 79228162514264337593543950336) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x409 79228162514264337593543950336) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x628 1461501637330902918203684832716283019655932542976 (uninterp_frac (* x409 79228162514264337593543950336) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (* x4111 1461501637330902918203684832716283019655932542976) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (* x4111 1461501637330902918203684832716283019655932542976) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1461501637330902918203684832716283019655932542976 x1177 (uninterp_frac (* x4111 1461501637330902918203684832716283019655932542976) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4111 1461501637330902918203684832716283019655932542976) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1461501637330902918203684832716283019655932542976 x1912 (uninterp_frac (* x4111 1461501637330902918203684832716283019655932542976) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4111 1461501637330902918203684832716283019655932542976) 115792089237316195423570985008687907853269984665640564039457584007913129639936 26959946667150639794667015087019630673637144422540572481103610249216 x3874 (uninterp_frac (* x4111 1461501637330902918203684832716283019655932542976) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4111 1461501637330902918203684832716283019655932542976) 115792089237316195423570985008687907853269984665640564039457584007913129639936 26959946667150639794667015087019630673637144422540572481103610249216 x607 (uninterp_frac (* x4111 1461501637330902918203684832716283019655932542976) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4111 1461501637330902918203684832716283019655932542976) 115792089237316195423570985008687907853269984665640564039457584007913129639936 79228162514264337593543950336 x1604 (uninterp_frac (* x4111 1461501637330902918203684832716283019655932542976) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4111 1461501637330902918203684832716283019655932542976) 115792089237316195423570985008687907853269984665640564039457584007913129639936 79228162514264337593543950336 x3358 (uninterp_frac (* x4111 1461501637330902918203684832716283019655932542976) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4111 1461501637330902918203684832716283019655932542976) 115792089237316195423570985008687907853269984665640564039457584007913129639936 79228162514264337593543950336 x558 (uninterp_frac (* x4111 1461501637330902918203684832716283019655932542976) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4111 1461501637330902918203684832716283019655932542976) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1290 x522 (uninterp_frac (* x4111 1461501637330902918203684832716283019655932542976) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4111 1461501637330902918203684832716283019655932542976) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1657 x1229 (uninterp_frac (* x4111 1461501637330902918203684832716283019655932542976) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4111 1461501637330902918203684832716283019655932542976) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2274 79228162514264337593543950336 (uninterp_frac (* x4111 1461501637330902918203684832716283019655932542976) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4111 1461501637330902918203684832716283019655932542976) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2728 x3251 (uninterp_frac (* x4111 1461501637330902918203684832716283019655932542976) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4111 1461501637330902918203684832716283019655932542976) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3251 x2728 (uninterp_frac (* x4111 1461501637330902918203684832716283019655932542976) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4111 1461501637330902918203684832716283019655932542976) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3475 79228162514264337593543950336 (uninterp_frac (* x4111 1461501637330902918203684832716283019655932542976) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4111 1461501637330902918203684832716283019655932542976) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x409 79228162514264337593543950336 (uninterp_frac (* x4111 1461501637330902918203684832716283019655932542976) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4111 1461501637330902918203684832716283019655932542976) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4111 1461501637330902918203684832716283019655932542976 (uninterp_frac (* x4111 1461501637330902918203684832716283019655932542976) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4111 1461501637330902918203684832716283019655932542976) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4115 x3188 (uninterp_frac (* x4111 1461501637330902918203684832716283019655932542976) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4111 1461501637330902918203684832716283019655932542976) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x628 1461501637330902918203684832716283019655932542976 (uninterp_frac (* x4111 1461501637330902918203684832716283019655932542976) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (* x4115 x3188) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (* x4115 x3188) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1461501637330902918203684832716283019655932542976 x1177 (uninterp_frac (* x4115 x3188) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4115 x3188) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1461501637330902918203684832716283019655932542976 x1912 (uninterp_frac (* x4115 x3188) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4115 x3188) 115792089237316195423570985008687907853269984665640564039457584007913129639936 26959946667150639794667015087019630673637144422540572481103610249216 x3874 (uninterp_frac (* x4115 x3188) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4115 x3188) 115792089237316195423570985008687907853269984665640564039457584007913129639936 26959946667150639794667015087019630673637144422540572481103610249216 x607 (uninterp_frac (* x4115 x3188) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4115 x3188) 115792089237316195423570985008687907853269984665640564039457584007913129639936 79228162514264337593543950336 x1604 (uninterp_frac (* x4115 x3188) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4115 x3188) 115792089237316195423570985008687907853269984665640564039457584007913129639936 79228162514264337593543950336 x3358 (uninterp_frac (* x4115 x3188) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4115 x3188) 115792089237316195423570985008687907853269984665640564039457584007913129639936 79228162514264337593543950336 x558 (uninterp_frac (* x4115 x3188) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4115 x3188) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1290 x522 (uninterp_frac (* x4115 x3188) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4115 x3188) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1657 x1229 (uninterp_frac (* x4115 x3188) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4115 x3188) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2274 79228162514264337593543950336 (uninterp_frac (* x4115 x3188) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4115 x3188) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2728 x3251 (uninterp_frac (* x4115 x3188) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4115 x3188) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3251 x2728 (uninterp_frac (* x4115 x3188) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4115 x3188) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3475 79228162514264337593543950336 (uninterp_frac (* x4115 x3188) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4115 x3188) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x409 79228162514264337593543950336 (uninterp_frac (* x4115 x3188) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4115 x3188) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4111 1461501637330902918203684832716283019655932542976 (uninterp_frac (* x4115 x3188) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4115 x3188) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4115 x3188 (uninterp_frac (* x4115 x3188) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x4115 x3188) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x628 1461501637330902918203684832716283019655932542976 (uninterp_frac (* x4115 x3188) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (* x628 1461501637330902918203684832716283019655932542976) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (* x628 1461501637330902918203684832716283019655932542976) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1461501637330902918203684832716283019655932542976 x1177 (uninterp_frac (* x628 1461501637330902918203684832716283019655932542976) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x628 1461501637330902918203684832716283019655932542976) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1461501637330902918203684832716283019655932542976 x1912 (uninterp_frac (* x628 1461501637330902918203684832716283019655932542976) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x628 1461501637330902918203684832716283019655932542976) 115792089237316195423570985008687907853269984665640564039457584007913129639936 26959946667150639794667015087019630673637144422540572481103610249216 x3874 (uninterp_frac (* x628 1461501637330902918203684832716283019655932542976) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x628 1461501637330902918203684832716283019655932542976) 115792089237316195423570985008687907853269984665640564039457584007913129639936 26959946667150639794667015087019630673637144422540572481103610249216 x607 (uninterp_frac (* x628 1461501637330902918203684832716283019655932542976) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x628 1461501637330902918203684832716283019655932542976) 115792089237316195423570985008687907853269984665640564039457584007913129639936 79228162514264337593543950336 x1604 (uninterp_frac (* x628 1461501637330902918203684832716283019655932542976) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x628 1461501637330902918203684832716283019655932542976) 115792089237316195423570985008687907853269984665640564039457584007913129639936 79228162514264337593543950336 x3358 (uninterp_frac (* x628 1461501637330902918203684832716283019655932542976) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x628 1461501637330902918203684832716283019655932542976) 115792089237316195423570985008687907853269984665640564039457584007913129639936 79228162514264337593543950336 x558 (uninterp_frac (* x628 1461501637330902918203684832716283019655932542976) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x628 1461501637330902918203684832716283019655932542976) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1290 x522 (uninterp_frac (* x628 1461501637330902918203684832716283019655932542976) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x628 1461501637330902918203684832716283019655932542976) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1657 x1229 (uninterp_frac (* x628 1461501637330902918203684832716283019655932542976) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x628 1461501637330902918203684832716283019655932542976) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2274 79228162514264337593543950336 (uninterp_frac (* x628 1461501637330902918203684832716283019655932542976) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x628 1461501637330902918203684832716283019655932542976) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2728 x3251 (uninterp_frac (* x628 1461501637330902918203684832716283019655932542976) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x628 1461501637330902918203684832716283019655932542976) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3251 x2728 (uninterp_frac (* x628 1461501637330902918203684832716283019655932542976) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x628 1461501637330902918203684832716283019655932542976) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3475 79228162514264337593543950336 (uninterp_frac (* x628 1461501637330902918203684832716283019655932542976) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x628 1461501637330902918203684832716283019655932542976) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x409 79228162514264337593543950336 (uninterp_frac (* x628 1461501637330902918203684832716283019655932542976) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x628 1461501637330902918203684832716283019655932542976) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4111 1461501637330902918203684832716283019655932542976 (uninterp_frac (* x628 1461501637330902918203684832716283019655932542976) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x628 1461501637330902918203684832716283019655932542976) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4115 x3188 (uninterp_frac (* x628 1461501637330902918203684832716283019655932542976) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x628 1461501637330902918203684832716283019655932542976) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x628 1461501637330902918203684832716283019655932542976 (uninterp_frac (* x628 1461501637330902918203684832716283019655932542976) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (ite x1339 1461501637330902918203684832716283019655932542976 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (ite x1339 1461501637330902918203684832716283019655932542976 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1461501637330902918203684832716283019655932542976 x1177 (uninterp_frac (ite x1339 1461501637330902918203684832716283019655932542976 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (ite x1339 1461501637330902918203684832716283019655932542976 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1461501637330902918203684832716283019655932542976 x1912 (uninterp_frac (ite x1339 1461501637330902918203684832716283019655932542976 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (ite x1339 1461501637330902918203684832716283019655932542976 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936 26959946667150639794667015087019630673637144422540572481103610249216 x3874 (uninterp_frac (ite x1339 1461501637330902918203684832716283019655932542976 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (ite x1339 1461501637330902918203684832716283019655932542976 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936 26959946667150639794667015087019630673637144422540572481103610249216 x607 (uninterp_frac (ite x1339 1461501637330902918203684832716283019655932542976 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (ite x1339 1461501637330902918203684832716283019655932542976 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936 79228162514264337593543950336 x1604 (uninterp_frac (ite x1339 1461501637330902918203684832716283019655932542976 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (ite x1339 1461501637330902918203684832716283019655932542976 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936 79228162514264337593543950336 x3358 (uninterp_frac (ite x1339 1461501637330902918203684832716283019655932542976 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (ite x1339 1461501637330902918203684832716283019655932542976 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936 79228162514264337593543950336 x558 (uninterp_frac (ite x1339 1461501637330902918203684832716283019655932542976 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (ite x1339 1461501637330902918203684832716283019655932542976 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1290 x522 (uninterp_frac (ite x1339 1461501637330902918203684832716283019655932542976 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (ite x1339 1461501637330902918203684832716283019655932542976 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1657 x1229 (uninterp_frac (ite x1339 1461501637330902918203684832716283019655932542976 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (ite x1339 1461501637330902918203684832716283019655932542976 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2274 79228162514264337593543950336 (uninterp_frac (ite x1339 1461501637330902918203684832716283019655932542976 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (ite x1339 1461501637330902918203684832716283019655932542976 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2728 x3251 (uninterp_frac (ite x1339 1461501637330902918203684832716283019655932542976 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (ite x1339 1461501637330902918203684832716283019655932542976 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3251 x2728 (uninterp_frac (ite x1339 1461501637330902918203684832716283019655932542976 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (ite x1339 1461501637330902918203684832716283019655932542976 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3475 79228162514264337593543950336 (uninterp_frac (ite x1339 1461501637330902918203684832716283019655932542976 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (ite x1339 1461501637330902918203684832716283019655932542976 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x409 79228162514264337593543950336 (uninterp_frac (ite x1339 1461501637330902918203684832716283019655932542976 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (ite x1339 1461501637330902918203684832716283019655932542976 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4111 1461501637330902918203684832716283019655932542976 (uninterp_frac (ite x1339 1461501637330902918203684832716283019655932542976 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (ite x1339 1461501637330902918203684832716283019655932542976 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4115 x3188 (uninterp_frac (ite x1339 1461501637330902918203684832716283019655932542976 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (ite x1339 1461501637330902918203684832716283019655932542976 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x628 1461501637330902918203684832716283019655932542976 (uninterp_frac (ite x1339 1461501637330902918203684832716283019655932542976 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (ite x2013 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (ite x2013 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1461501637330902918203684832716283019655932542976 x1177 (uninterp_frac (ite x2013 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (ite x2013 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1461501637330902918203684832716283019655932542976 x1912 (uninterp_frac (ite x2013 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (ite x2013 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936 26959946667150639794667015087019630673637144422540572481103610249216 x3874 (uninterp_frac (ite x2013 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (ite x2013 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936 26959946667150639794667015087019630673637144422540572481103610249216 x607 (uninterp_frac (ite x2013 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (ite x2013 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936 79228162514264337593543950336 x1604 (uninterp_frac (ite x2013 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (ite x2013 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936 79228162514264337593543950336 x3358 (uninterp_frac (ite x2013 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (ite x2013 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936 79228162514264337593543950336 x558 (uninterp_frac (ite x2013 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (ite x2013 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1290 x522 (uninterp_frac (ite x2013 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (ite x2013 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1657 x1229 (uninterp_frac (ite x2013 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (ite x2013 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2274 79228162514264337593543950336 (uninterp_frac (ite x2013 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (ite x2013 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2728 x3251 (uninterp_frac (ite x2013 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (ite x2013 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3251 x2728 (uninterp_frac (ite x2013 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (ite x2013 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3475 79228162514264337593543950336 (uninterp_frac (ite x2013 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (ite x2013 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x409 79228162514264337593543950336 (uninterp_frac (ite x2013 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (ite x2013 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4111 1461501637330902918203684832716283019655932542976 (uninterp_frac (ite x2013 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (ite x2013 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4115 x3188 (uninterp_frac (ite x2013 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (ite x2013 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x628 1461501637330902918203684832716283019655932542976 (uninterp_frac (ite x2013 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (ite x2988 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (ite x2988 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1461501637330902918203684832716283019655932542976 x1177 (uninterp_frac (ite x2988 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (ite x2988 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1461501637330902918203684832716283019655932542976 x1912 (uninterp_frac (ite x2988 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (ite x2988 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936 26959946667150639794667015087019630673637144422540572481103610249216 x3874 (uninterp_frac (ite x2988 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (ite x2988 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936 26959946667150639794667015087019630673637144422540572481103610249216 x607 (uninterp_frac (ite x2988 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (ite x2988 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936 79228162514264337593543950336 x1604 (uninterp_frac (ite x2988 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (ite x2988 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936 79228162514264337593543950336 x3358 (uninterp_frac (ite x2988 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (ite x2988 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936 79228162514264337593543950336 x558 (uninterp_frac (ite x2988 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (ite x2988 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1290 x522 (uninterp_frac (ite x2988 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (ite x2988 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1657 x1229 (uninterp_frac (ite x2988 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (ite x2988 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2274 79228162514264337593543950336 (uninterp_frac (ite x2988 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (ite x2988 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2728 x3251 (uninterp_frac (ite x2988 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (ite x2988 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3251 x2728 (uninterp_frac (ite x2988 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (ite x2988 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3475 79228162514264337593543950336 (uninterp_frac (ite x2988 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (ite x2988 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x409 79228162514264337593543950336 (uninterp_frac (ite x2988 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (ite x2988 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4111 1461501637330902918203684832716283019655932542976 (uninterp_frac (ite x2988 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (ite x2988 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4115 x3188 (uninterp_frac (ite x2988 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (ite x2988 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x628 1461501637330902918203684832716283019655932542976 (uninterp_frac (ite x2988 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (ite x672 1461501637330902918203684832716283019655932542976 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (ite x672 1461501637330902918203684832716283019655932542976 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1461501637330902918203684832716283019655932542976 x1177 (uninterp_frac (ite x672 1461501637330902918203684832716283019655932542976 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (ite x672 1461501637330902918203684832716283019655932542976 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1461501637330902918203684832716283019655932542976 x1912 (uninterp_frac (ite x672 1461501637330902918203684832716283019655932542976 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (ite x672 1461501637330902918203684832716283019655932542976 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936 26959946667150639794667015087019630673637144422540572481103610249216 x3874 (uninterp_frac (ite x672 1461501637330902918203684832716283019655932542976 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (ite x672 1461501637330902918203684832716283019655932542976 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936 26959946667150639794667015087019630673637144422540572481103610249216 x607 (uninterp_frac (ite x672 1461501637330902918203684832716283019655932542976 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (ite x672 1461501637330902918203684832716283019655932542976 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936 79228162514264337593543950336 x1604 (uninterp_frac (ite x672 1461501637330902918203684832716283019655932542976 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (ite x672 1461501637330902918203684832716283019655932542976 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936 79228162514264337593543950336 x3358 (uninterp_frac (ite x672 1461501637330902918203684832716283019655932542976 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (ite x672 1461501637330902918203684832716283019655932542976 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936 79228162514264337593543950336 x558 (uninterp_frac (ite x672 1461501637330902918203684832716283019655932542976 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (ite x672 1461501637330902918203684832716283019655932542976 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1290 x522 (uninterp_frac (ite x672 1461501637330902918203684832716283019655932542976 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (ite x672 1461501637330902918203684832716283019655932542976 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1657 x1229 (uninterp_frac (ite x672 1461501637330902918203684832716283019655932542976 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (ite x672 1461501637330902918203684832716283019655932542976 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2274 79228162514264337593543950336 (uninterp_frac (ite x672 1461501637330902918203684832716283019655932542976 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (ite x672 1461501637330902918203684832716283019655932542976 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2728 x3251 (uninterp_frac (ite x672 1461501637330902918203684832716283019655932542976 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (ite x672 1461501637330902918203684832716283019655932542976 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3251 x2728 (uninterp_frac (ite x672 1461501637330902918203684832716283019655932542976 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (ite x672 1461501637330902918203684832716283019655932542976 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3475 79228162514264337593543950336 (uninterp_frac (ite x672 1461501637330902918203684832716283019655932542976 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (ite x672 1461501637330902918203684832716283019655932542976 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x409 79228162514264337593543950336 (uninterp_frac (ite x672 1461501637330902918203684832716283019655932542976 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (ite x672 1461501637330902918203684832716283019655932542976 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4111 1461501637330902918203684832716283019655932542976 (uninterp_frac (ite x672 1461501637330902918203684832716283019655932542976 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (ite x672 1461501637330902918203684832716283019655932542976 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4115 x3188 (uninterp_frac (ite x672 1461501637330902918203684832716283019655932542976 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (ite x672 1461501637330902918203684832716283019655932542976 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x628 1461501637330902918203684832716283019655932542976 (uninterp_frac (ite x672 1461501637330902918203684832716283019655932542976 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (x1012 (x2562 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (x1012 (x2562 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1461501637330902918203684832716283019655932542976 x1177 (uninterp_frac (x1012 (x2562 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x1012 (x2562 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1461501637330902918203684832716283019655932542976 x1912 (uninterp_frac (x1012 (x2562 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x1012 (x2562 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 26959946667150639794667015087019630673637144422540572481103610249216 x3874 (uninterp_frac (x1012 (x2562 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x1012 (x2562 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 26959946667150639794667015087019630673637144422540572481103610249216 x607 (uninterp_frac (x1012 (x2562 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x1012 (x2562 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 79228162514264337593543950336 x1604 (uninterp_frac (x1012 (x2562 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x1012 (x2562 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 79228162514264337593543950336 x3358 (uninterp_frac (x1012 (x2562 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x1012 (x2562 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 79228162514264337593543950336 x558 (uninterp_frac (x1012 (x2562 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x1012 (x2562 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1290 x522 (uninterp_frac (x1012 (x2562 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x1012 (x2562 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1657 x1229 (uninterp_frac (x1012 (x2562 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x1012 (x2562 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2274 79228162514264337593543950336 (uninterp_frac (x1012 (x2562 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x1012 (x2562 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2728 x3251 (uninterp_frac (x1012 (x2562 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x1012 (x2562 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3251 x2728 (uninterp_frac (x1012 (x2562 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x1012 (x2562 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3475 79228162514264337593543950336 (uninterp_frac (x1012 (x2562 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x1012 (x2562 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x409 79228162514264337593543950336 (uninterp_frac (x1012 (x2562 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x1012 (x2562 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4111 1461501637330902918203684832716283019655932542976 (uninterp_frac (x1012 (x2562 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x1012 (x2562 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4115 x3188 (uninterp_frac (x1012 (x2562 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x1012 (x2562 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x628 1461501637330902918203684832716283019655932542976 (uninterp_frac (x1012 (x2562 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (x113 (x2562 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (x113 (x2562 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1461501637330902918203684832716283019655932542976 x1177 (uninterp_frac (x113 (x2562 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x113 (x2562 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1461501637330902918203684832716283019655932542976 x1912 (uninterp_frac (x113 (x2562 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x113 (x2562 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 26959946667150639794667015087019630673637144422540572481103610249216 x3874 (uninterp_frac (x113 (x2562 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x113 (x2562 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 26959946667150639794667015087019630673637144422540572481103610249216 x607 (uninterp_frac (x113 (x2562 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x113 (x2562 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 79228162514264337593543950336 x1604 (uninterp_frac (x113 (x2562 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x113 (x2562 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 79228162514264337593543950336 x3358 (uninterp_frac (x113 (x2562 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x113 (x2562 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 79228162514264337593543950336 x558 (uninterp_frac (x113 (x2562 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x113 (x2562 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1290 x522 (uninterp_frac (x113 (x2562 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x113 (x2562 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1657 x1229 (uninterp_frac (x113 (x2562 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x113 (x2562 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2274 79228162514264337593543950336 (uninterp_frac (x113 (x2562 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x113 (x2562 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2728 x3251 (uninterp_frac (x113 (x2562 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x113 (x2562 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3251 x2728 (uninterp_frac (x113 (x2562 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x113 (x2562 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3475 79228162514264337593543950336 (uninterp_frac (x113 (x2562 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x113 (x2562 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x409 79228162514264337593543950336 (uninterp_frac (x113 (x2562 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x113 (x2562 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4111 1461501637330902918203684832716283019655932542976 (uninterp_frac (x113 (x2562 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x113 (x2562 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4115 x3188 (uninterp_frac (x113 (x2562 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x113 (x2562 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x628 1461501637330902918203684832716283019655932542976 (uninterp_frac (x113 (x2562 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (x1458 (x2562 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (x1458 (x2562 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1461501637330902918203684832716283019655932542976 x1177 (uninterp_frac (x1458 (x2562 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x1458 (x2562 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1461501637330902918203684832716283019655932542976 x1912 (uninterp_frac (x1458 (x2562 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x1458 (x2562 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 26959946667150639794667015087019630673637144422540572481103610249216 x3874 (uninterp_frac (x1458 (x2562 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x1458 (x2562 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 26959946667150639794667015087019630673637144422540572481103610249216 x607 (uninterp_frac (x1458 (x2562 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x1458 (x2562 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 79228162514264337593543950336 x1604 (uninterp_frac (x1458 (x2562 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x1458 (x2562 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 79228162514264337593543950336 x3358 (uninterp_frac (x1458 (x2562 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x1458 (x2562 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 79228162514264337593543950336 x558 (uninterp_frac (x1458 (x2562 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x1458 (x2562 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1290 x522 (uninterp_frac (x1458 (x2562 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x1458 (x2562 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1657 x1229 (uninterp_frac (x1458 (x2562 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x1458 (x2562 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2274 79228162514264337593543950336 (uninterp_frac (x1458 (x2562 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x1458 (x2562 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2728 x3251 (uninterp_frac (x1458 (x2562 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x1458 (x2562 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3251 x2728 (uninterp_frac (x1458 (x2562 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x1458 (x2562 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3475 79228162514264337593543950336 (uninterp_frac (x1458 (x2562 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x1458 (x2562 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x409 79228162514264337593543950336 (uninterp_frac (x1458 (x2562 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x1458 (x2562 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4111 1461501637330902918203684832716283019655932542976 (uninterp_frac (x1458 (x2562 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x1458 (x2562 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4115 x3188 (uninterp_frac (x1458 (x2562 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x1458 (x2562 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x628 1461501637330902918203684832716283019655932542976 (uninterp_frac (x1458 (x2562 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (x2870 (x2562 x3808)) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (x2870 (x2562 x3808)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1461501637330902918203684832716283019655932542976 x1177 (uninterp_frac (x2870 (x2562 x3808)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x2870 (x2562 x3808)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1461501637330902918203684832716283019655932542976 x1912 (uninterp_frac (x2870 (x2562 x3808)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x2870 (x2562 x3808)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 26959946667150639794667015087019630673637144422540572481103610249216 x3874 (uninterp_frac (x2870 (x2562 x3808)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x2870 (x2562 x3808)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 26959946667150639794667015087019630673637144422540572481103610249216 x607 (uninterp_frac (x2870 (x2562 x3808)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x2870 (x2562 x3808)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 79228162514264337593543950336 x1604 (uninterp_frac (x2870 (x2562 x3808)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x2870 (x2562 x3808)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 79228162514264337593543950336 x3358 (uninterp_frac (x2870 (x2562 x3808)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x2870 (x2562 x3808)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 79228162514264337593543950336 x558 (uninterp_frac (x2870 (x2562 x3808)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x2870 (x2562 x3808)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1290 x522 (uninterp_frac (x2870 (x2562 x3808)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x2870 (x2562 x3808)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1657 x1229 (uninterp_frac (x2870 (x2562 x3808)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x2870 (x2562 x3808)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2274 79228162514264337593543950336 (uninterp_frac (x2870 (x2562 x3808)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x2870 (x2562 x3808)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2728 x3251 (uninterp_frac (x2870 (x2562 x3808)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x2870 (x2562 x3808)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3251 x2728 (uninterp_frac (x2870 (x2562 x3808)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x2870 (x2562 x3808)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3475 79228162514264337593543950336 (uninterp_frac (x2870 (x2562 x3808)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x2870 (x2562 x3808)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x409 79228162514264337593543950336 (uninterp_frac (x2870 (x2562 x3808)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x2870 (x2562 x3808)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4111 1461501637330902918203684832716283019655932542976 (uninterp_frac (x2870 (x2562 x3808)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x2870 (x2562 x3808)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4115 x3188 (uninterp_frac (x2870 (x2562 x3808)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x2870 (x2562 x3808)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x628 1461501637330902918203684832716283019655932542976 (uninterp_frac (x2870 (x2562 x3808)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (x2880 (x2562 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (x2880 (x2562 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1461501637330902918203684832716283019655932542976 x1177 (uninterp_frac (x2880 (x2562 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x2880 (x2562 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1461501637330902918203684832716283019655932542976 x1912 (uninterp_frac (x2880 (x2562 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x2880 (x2562 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 26959946667150639794667015087019630673637144422540572481103610249216 x3874 (uninterp_frac (x2880 (x2562 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x2880 (x2562 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 26959946667150639794667015087019630673637144422540572481103610249216 x607 (uninterp_frac (x2880 (x2562 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x2880 (x2562 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 79228162514264337593543950336 x1604 (uninterp_frac (x2880 (x2562 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x2880 (x2562 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 79228162514264337593543950336 x3358 (uninterp_frac (x2880 (x2562 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x2880 (x2562 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 79228162514264337593543950336 x558 (uninterp_frac (x2880 (x2562 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x2880 (x2562 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1290 x522 (uninterp_frac (x2880 (x2562 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x2880 (x2562 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1657 x1229 (uninterp_frac (x2880 (x2562 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x2880 (x2562 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2274 79228162514264337593543950336 (uninterp_frac (x2880 (x2562 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x2880 (x2562 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2728 x3251 (uninterp_frac (x2880 (x2562 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x2880 (x2562 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3251 x2728 (uninterp_frac (x2880 (x2562 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x2880 (x2562 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3475 79228162514264337593543950336 (uninterp_frac (x2880 (x2562 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x2880 (x2562 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x409 79228162514264337593543950336 (uninterp_frac (x2880 (x2562 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x2880 (x2562 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4111 1461501637330902918203684832716283019655932542976 (uninterp_frac (x2880 (x2562 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x2880 (x2562 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4115 x3188 (uninterp_frac (x2880 (x2562 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x2880 (x2562 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x628 1461501637330902918203684832716283019655932542976 (uninterp_frac (x2880 (x2562 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (x4285 (x2562 x2934)) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (x4285 (x2562 x2934)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1461501637330902918203684832716283019655932542976 x1177 (uninterp_frac (x4285 (x2562 x2934)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x4285 (x2562 x2934)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1461501637330902918203684832716283019655932542976 x1912 (uninterp_frac (x4285 (x2562 x2934)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x4285 (x2562 x2934)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 26959946667150639794667015087019630673637144422540572481103610249216 x3874 (uninterp_frac (x4285 (x2562 x2934)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x4285 (x2562 x2934)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 26959946667150639794667015087019630673637144422540572481103610249216 x607 (uninterp_frac (x4285 (x2562 x2934)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x4285 (x2562 x2934)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 79228162514264337593543950336 x1604 (uninterp_frac (x4285 (x2562 x2934)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x4285 (x2562 x2934)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 79228162514264337593543950336 x3358 (uninterp_frac (x4285 (x2562 x2934)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x4285 (x2562 x2934)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 79228162514264337593543950336 x558 (uninterp_frac (x4285 (x2562 x2934)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x4285 (x2562 x2934)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1290 x522 (uninterp_frac (x4285 (x2562 x2934)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x4285 (x2562 x2934)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1657 x1229 (uninterp_frac (x4285 (x2562 x2934)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x4285 (x2562 x2934)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2274 79228162514264337593543950336 (uninterp_frac (x4285 (x2562 x2934)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x4285 (x2562 x2934)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2728 x3251 (uninterp_frac (x4285 (x2562 x2934)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x4285 (x2562 x2934)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3251 x2728 (uninterp_frac (x4285 (x2562 x2934)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x4285 (x2562 x2934)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3475 79228162514264337593543950336 (uninterp_frac (x4285 (x2562 x2934)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x4285 (x2562 x2934)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x409 79228162514264337593543950336 (uninterp_frac (x4285 (x2562 x2934)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x4285 (x2562 x2934)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4111 1461501637330902918203684832716283019655932542976 (uninterp_frac (x4285 (x2562 x2934)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x4285 (x2562 x2934)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4115 x3188 (uninterp_frac (x4285 (x2562 x2934)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (x4285 (x2562 x2934)) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x628 1461501637330902918203684832716283019655932542976 (uninterp_frac (x4285 (x2562 x2934)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1229))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1229 1461501637330902918203684832716283019655932542976 x1177 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1229)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1229 1461501637330902918203684832716283019655932542976 x1912 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1229)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1229 26959946667150639794667015087019630673637144422540572481103610249216 x3874 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1229)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1229 26959946667150639794667015087019630673637144422540572481103610249216 x607 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1229)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1229 79228162514264337593543950336 x1604 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1229)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1229 79228162514264337593543950336 x3358 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1229)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1229 79228162514264337593543950336 x558 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1229)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1229 x1290 x522 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1229)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1229 x1657 x1229 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1229)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1229 x2274 79228162514264337593543950336 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1229)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1229 x2728 x3251 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1229)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1229 x3251 x2728 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1229)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1229 x3475 79228162514264337593543950336 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1229)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1229 x409 79228162514264337593543950336 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1229)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1229 x4111 1461501637330902918203684832716283019655932542976 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1229)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1229 x4115 x3188 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1229)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1229 x628 1461501637330902918203684832716283019655932542976 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1229)))
(assert (axiom_frac_bound 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1290))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1290 1461501637330902918203684832716283019655932542976 x1177 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1290)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1290 1461501637330902918203684832716283019655932542976 x1912 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1290)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1290 26959946667150639794667015087019630673637144422540572481103610249216 x3874 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1290)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1290 26959946667150639794667015087019630673637144422540572481103610249216 x607 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1290)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1290 79228162514264337593543950336 x1604 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1290)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1290 79228162514264337593543950336 x3358 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1290)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1290 79228162514264337593543950336 x558 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1290)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1290 x1290 x522 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1290)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1290 x1657 x1229 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1290)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1290 x2274 79228162514264337593543950336 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1290)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1290 x2728 x3251 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1290)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1290 x3251 x2728 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1290)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1290 x3475 79228162514264337593543950336 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1290)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1290 x409 79228162514264337593543950336 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1290)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1290 x4111 1461501637330902918203684832716283019655932542976 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1290)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1290 x4115 x3188 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1290)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1290 x628 1461501637330902918203684832716283019655932542976 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1290)))
(assert (axiom_frac_bound 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2728))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2728 1461501637330902918203684832716283019655932542976 x1177 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2728)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2728 1461501637330902918203684832716283019655932542976 x1912 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2728)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2728 26959946667150639794667015087019630673637144422540572481103610249216 x3874 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2728)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2728 26959946667150639794667015087019630673637144422540572481103610249216 x607 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2728)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2728 79228162514264337593543950336 x1604 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2728)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2728 79228162514264337593543950336 x3358 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2728)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2728 79228162514264337593543950336 x558 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2728)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2728 x1290 x522 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2728)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2728 x1657 x1229 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2728)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2728 x2274 79228162514264337593543950336 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2728)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2728 x2728 x3251 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2728)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2728 x3251 x2728 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2728)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2728 x3475 79228162514264337593543950336 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2728)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2728 x409 79228162514264337593543950336 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2728)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2728 x4111 1461501637330902918203684832716283019655932542976 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2728)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2728 x4115 x3188 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2728)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2728 x628 1461501637330902918203684832716283019655932542976 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2728)))
(assert (axiom_frac_bound 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4115))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4115 1461501637330902918203684832716283019655932542976 x1177 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4115)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4115 1461501637330902918203684832716283019655932542976 x1912 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4115)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4115 26959946667150639794667015087019630673637144422540572481103610249216 x3874 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4115)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4115 26959946667150639794667015087019630673637144422540572481103610249216 x607 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4115)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4115 79228162514264337593543950336 x1604 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4115)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4115 79228162514264337593543950336 x3358 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4115)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4115 79228162514264337593543950336 x558 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4115)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4115 x1290 x522 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4115)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4115 x1657 x1229 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4115)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4115 x2274 79228162514264337593543950336 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4115)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4115 x2728 x3251 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4115)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4115 x3251 x2728 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4115)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4115 x3475 79228162514264337593543950336 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4115)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4115 x409 79228162514264337593543950336 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4115)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4115 x4111 1461501637330902918203684832716283019655932542976 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4115)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4115 x4115 x3188 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4115)))
(assert (axiom_frac_zero 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4115 x628 1461501637330902918203684832716283019655932542976 (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4115)))
(assert (axiom_frac_bound x121 5192296858534827628530496329220096))
(assert (axiom_frac_zero x121 5192296858534827628530496329220096 1461501637330902918203684832716283019655932542976 x1177 (uninterp_frac x121 5192296858534827628530496329220096)))
(assert (axiom_frac_zero x121 5192296858534827628530496329220096 1461501637330902918203684832716283019655932542976 x1912 (uninterp_frac x121 5192296858534827628530496329220096)))
(assert (axiom_frac_zero x121 5192296858534827628530496329220096 26959946667150639794667015087019630673637144422540572481103610249216 x3874 (uninterp_frac x121 5192296858534827628530496329220096)))
(assert (axiom_frac_zero x121 5192296858534827628530496329220096 26959946667150639794667015087019630673637144422540572481103610249216 x607 (uninterp_frac x121 5192296858534827628530496329220096)))
(assert (axiom_frac_zero x121 5192296858534827628530496329220096 79228162514264337593543950336 x1604 (uninterp_frac x121 5192296858534827628530496329220096)))
(assert (axiom_frac_zero x121 5192296858534827628530496329220096 79228162514264337593543950336 x3358 (uninterp_frac x121 5192296858534827628530496329220096)))
(assert (axiom_frac_zero x121 5192296858534827628530496329220096 79228162514264337593543950336 x558 (uninterp_frac x121 5192296858534827628530496329220096)))
(assert (axiom_frac_zero x121 5192296858534827628530496329220096 x1290 x522 (uninterp_frac x121 5192296858534827628530496329220096)))
(assert (axiom_frac_zero x121 5192296858534827628530496329220096 x1657 x1229 (uninterp_frac x121 5192296858534827628530496329220096)))
(assert (axiom_frac_zero x121 5192296858534827628530496329220096 x2274 79228162514264337593543950336 (uninterp_frac x121 5192296858534827628530496329220096)))
(assert (axiom_frac_zero x121 5192296858534827628530496329220096 x2728 x3251 (uninterp_frac x121 5192296858534827628530496329220096)))
(assert (axiom_frac_zero x121 5192296858534827628530496329220096 x3251 x2728 (uninterp_frac x121 5192296858534827628530496329220096)))
(assert (axiom_frac_zero x121 5192296858534827628530496329220096 x3475 79228162514264337593543950336 (uninterp_frac x121 5192296858534827628530496329220096)))
(assert (axiom_frac_zero x121 5192296858534827628530496329220096 x409 79228162514264337593543950336 (uninterp_frac x121 5192296858534827628530496329220096)))
(assert (axiom_frac_zero x121 5192296858534827628530496329220096 x4111 1461501637330902918203684832716283019655932542976 (uninterp_frac x121 5192296858534827628530496329220096)))
(assert (axiom_frac_zero x121 5192296858534827628530496329220096 x4115 x3188 (uninterp_frac x121 5192296858534827628530496329220096)))
(assert (axiom_frac_zero x121 5192296858534827628530496329220096 x628 1461501637330902918203684832716283019655932542976 (uninterp_frac x121 5192296858534827628530496329220096)))
(assert (axiom_frac_bound x1451 100))
(assert (axiom_frac_zero x1451 100 1461501637330902918203684832716283019655932542976 x1177 (uninterp_frac x1451 100)))
(assert (axiom_frac_zero x1451 100 1461501637330902918203684832716283019655932542976 x1912 (uninterp_frac x1451 100)))
(assert (axiom_frac_zero x1451 100 26959946667150639794667015087019630673637144422540572481103610249216 x3874 (uninterp_frac x1451 100)))
(assert (axiom_frac_zero x1451 100 26959946667150639794667015087019630673637144422540572481103610249216 x607 (uninterp_frac x1451 100)))
(assert (axiom_frac_zero x1451 100 79228162514264337593543950336 x1604 (uninterp_frac x1451 100)))
(assert (axiom_frac_zero x1451 100 79228162514264337593543950336 x3358 (uninterp_frac x1451 100)))
(assert (axiom_frac_zero x1451 100 79228162514264337593543950336 x558 (uninterp_frac x1451 100)))
(assert (axiom_frac_zero x1451 100 x1290 x522 (uninterp_frac x1451 100)))
(assert (axiom_frac_zero x1451 100 x1657 x1229 (uninterp_frac x1451 100)))
(assert (axiom_frac_zero x1451 100 x2274 79228162514264337593543950336 (uninterp_frac x1451 100)))
(assert (axiom_frac_zero x1451 100 x2728 x3251 (uninterp_frac x1451 100)))
(assert (axiom_frac_zero x1451 100 x3251 x2728 (uninterp_frac x1451 100)))
(assert (axiom_frac_zero x1451 100 x3475 79228162514264337593543950336 (uninterp_frac x1451 100)))
(assert (axiom_frac_zero x1451 100 x409 79228162514264337593543950336 (uninterp_frac x1451 100)))
(assert (axiom_frac_zero x1451 100 x4111 1461501637330902918203684832716283019655932542976 (uninterp_frac x1451 100)))
(assert (axiom_frac_zero x1451 100 x4115 x3188 (uninterp_frac x1451 100)))
(assert (axiom_frac_zero x1451 100 x628 1461501637330902918203684832716283019655932542976 (uninterp_frac x1451 100)))
(assert (axiom_frac_bound x1512 18446744073709551616))
(assert (axiom_frac_zero x1512 18446744073709551616 1461501637330902918203684832716283019655932542976 x1177 (uninterp_frac x1512 18446744073709551616)))
(assert (axiom_frac_zero x1512 18446744073709551616 1461501637330902918203684832716283019655932542976 x1912 (uninterp_frac x1512 18446744073709551616)))
(assert (axiom_frac_zero x1512 18446744073709551616 26959946667150639794667015087019630673637144422540572481103610249216 x3874 (uninterp_frac x1512 18446744073709551616)))
(assert (axiom_frac_zero x1512 18446744073709551616 26959946667150639794667015087019630673637144422540572481103610249216 x607 (uninterp_frac x1512 18446744073709551616)))
(assert (axiom_frac_zero x1512 18446744073709551616 79228162514264337593543950336 x1604 (uninterp_frac x1512 18446744073709551616)))
(assert (axiom_frac_zero x1512 18446744073709551616 79228162514264337593543950336 x3358 (uninterp_frac x1512 18446744073709551616)))
(assert (axiom_frac_zero x1512 18446744073709551616 79228162514264337593543950336 x558 (uninterp_frac x1512 18446744073709551616)))
(assert (axiom_frac_zero x1512 18446744073709551616 x1290 x522 (uninterp_frac x1512 18446744073709551616)))
(assert (axiom_frac_zero x1512 18446744073709551616 x1657 x1229 (uninterp_frac x1512 18446744073709551616)))
(assert (axiom_frac_zero x1512 18446744073709551616 x2274 79228162514264337593543950336 (uninterp_frac x1512 18446744073709551616)))
(assert (axiom_frac_zero x1512 18446744073709551616 x2728 x3251 (uninterp_frac x1512 18446744073709551616)))
(assert (axiom_frac_zero x1512 18446744073709551616 x3251 x2728 (uninterp_frac x1512 18446744073709551616)))
(assert (axiom_frac_zero x1512 18446744073709551616 x3475 79228162514264337593543950336 (uninterp_frac x1512 18446744073709551616)))
(assert (axiom_frac_zero x1512 18446744073709551616 x409 79228162514264337593543950336 (uninterp_frac x1512 18446744073709551616)))
(assert (axiom_frac_zero x1512 18446744073709551616 x4111 1461501637330902918203684832716283019655932542976 (uninterp_frac x1512 18446744073709551616)))
(assert (axiom_frac_zero x1512 18446744073709551616 x4115 x3188 (uninterp_frac x1512 18446744073709551616)))
(assert (axiom_frac_zero x1512 18446744073709551616 x628 1461501637330902918203684832716283019655932542976 (uninterp_frac x1512 18446744073709551616)))
(assert (axiom_frac_bound x2299 5192296858534827628530496329220096))
(assert (axiom_frac_zero x2299 5192296858534827628530496329220096 1461501637330902918203684832716283019655932542976 x1177 (uninterp_frac x2299 5192296858534827628530496329220096)))
(assert (axiom_frac_zero x2299 5192296858534827628530496329220096 1461501637330902918203684832716283019655932542976 x1912 (uninterp_frac x2299 5192296858534827628530496329220096)))
(assert (axiom_frac_zero x2299 5192296858534827628530496329220096 26959946667150639794667015087019630673637144422540572481103610249216 x3874 (uninterp_frac x2299 5192296858534827628530496329220096)))
(assert (axiom_frac_zero x2299 5192296858534827628530496329220096 26959946667150639794667015087019630673637144422540572481103610249216 x607 (uninterp_frac x2299 5192296858534827628530496329220096)))
(assert (axiom_frac_zero x2299 5192296858534827628530496329220096 79228162514264337593543950336 x1604 (uninterp_frac x2299 5192296858534827628530496329220096)))
(assert (axiom_frac_zero x2299 5192296858534827628530496329220096 79228162514264337593543950336 x3358 (uninterp_frac x2299 5192296858534827628530496329220096)))
(assert (axiom_frac_zero x2299 5192296858534827628530496329220096 79228162514264337593543950336 x558 (uninterp_frac x2299 5192296858534827628530496329220096)))
(assert (axiom_frac_zero x2299 5192296858534827628530496329220096 x1290 x522 (uninterp_frac x2299 5192296858534827628530496329220096)))
(assert (axiom_frac_zero x2299 5192296858534827628530496329220096 x1657 x1229 (uninterp_frac x2299 5192296858534827628530496329220096)))
(assert (axiom_frac_zero x2299 5192296858534827628530496329220096 x2274 79228162514264337593543950336 (uninterp_frac x2299 5192296858534827628530496329220096)))
(assert (axiom_frac_zero x2299 5192296858534827628530496329220096 x2728 x3251 (uninterp_frac x2299 5192296858534827628530496329220096)))
(assert (axiom_frac_zero x2299 5192296858534827628530496329220096 x3251 x2728 (uninterp_frac x2299 5192296858534827628530496329220096)))
(assert (axiom_frac_zero x2299 5192296858534827628530496329220096 x3475 79228162514264337593543950336 (uninterp_frac x2299 5192296858534827628530496329220096)))
(assert (axiom_frac_zero x2299 5192296858534827628530496329220096 x409 79228162514264337593543950336 (uninterp_frac x2299 5192296858534827628530496329220096)))
(assert (axiom_frac_zero x2299 5192296858534827628530496329220096 x4111 1461501637330902918203684832716283019655932542976 (uninterp_frac x2299 5192296858534827628530496329220096)))
(assert (axiom_frac_zero x2299 5192296858534827628530496329220096 x4115 x3188 (uninterp_frac x2299 5192296858534827628530496329220096)))
(assert (axiom_frac_zero x2299 5192296858534827628530496329220096 x628 1461501637330902918203684832716283019655932542976 (uninterp_frac x2299 5192296858534827628530496329220096)))
(assert (axiom_frac_bound x2436 18446744073709551616))
(assert (axiom_frac_zero x2436 18446744073709551616 1461501637330902918203684832716283019655932542976 x1177 (uninterp_frac x2436 18446744073709551616)))
(assert (axiom_frac_zero x2436 18446744073709551616 1461501637330902918203684832716283019655932542976 x1912 (uninterp_frac x2436 18446744073709551616)))
(assert (axiom_frac_zero x2436 18446744073709551616 26959946667150639794667015087019630673637144422540572481103610249216 x3874 (uninterp_frac x2436 18446744073709551616)))
(assert (axiom_frac_zero x2436 18446744073709551616 26959946667150639794667015087019630673637144422540572481103610249216 x607 (uninterp_frac x2436 18446744073709551616)))
(assert (axiom_frac_zero x2436 18446744073709551616 79228162514264337593543950336 x1604 (uninterp_frac x2436 18446744073709551616)))
(assert (axiom_frac_zero x2436 18446744073709551616 79228162514264337593543950336 x3358 (uninterp_frac x2436 18446744073709551616)))
(assert (axiom_frac_zero x2436 18446744073709551616 79228162514264337593543950336 x558 (uninterp_frac x2436 18446744073709551616)))
(assert (axiom_frac_zero x2436 18446744073709551616 x1290 x522 (uninterp_frac x2436 18446744073709551616)))
(assert (axiom_frac_zero x2436 18446744073709551616 x1657 x1229 (uninterp_frac x2436 18446744073709551616)))
(assert (axiom_frac_zero x2436 18446744073709551616 x2274 79228162514264337593543950336 (uninterp_frac x2436 18446744073709551616)))
(assert (axiom_frac_zero x2436 18446744073709551616 x2728 x3251 (uninterp_frac x2436 18446744073709551616)))
(assert (axiom_frac_zero x2436 18446744073709551616 x3251 x2728 (uninterp_frac x2436 18446744073709551616)))
(assert (axiom_frac_zero x2436 18446744073709551616 x3475 79228162514264337593543950336 (uninterp_frac x2436 18446744073709551616)))
(assert (axiom_frac_zero x2436 18446744073709551616 x409 79228162514264337593543950336 (uninterp_frac x2436 18446744073709551616)))
(assert (axiom_frac_zero x2436 18446744073709551616 x4111 1461501637330902918203684832716283019655932542976 (uninterp_frac x2436 18446744073709551616)))
(assert (axiom_frac_zero x2436 18446744073709551616 x4115 x3188 (uninterp_frac x2436 18446744073709551616)))
(assert (axiom_frac_zero x2436 18446744073709551616 x628 1461501637330902918203684832716283019655932542976 (uninterp_frac x2436 18446744073709551616)))
(assert (axiom_frac_bound x454 100))
(assert (axiom_frac_zero x454 100 1461501637330902918203684832716283019655932542976 x1177 (uninterp_frac x454 100)))
(assert (axiom_frac_zero x454 100 1461501637330902918203684832716283019655932542976 x1912 (uninterp_frac x454 100)))
(assert (axiom_frac_zero x454 100 26959946667150639794667015087019630673637144422540572481103610249216 x3874 (uninterp_frac x454 100)))
(assert (axiom_frac_zero x454 100 26959946667150639794667015087019630673637144422540572481103610249216 x607 (uninterp_frac x454 100)))
(assert (axiom_frac_zero x454 100 79228162514264337593543950336 x1604 (uninterp_frac x454 100)))
(assert (axiom_frac_zero x454 100 79228162514264337593543950336 x3358 (uninterp_frac x454 100)))
(assert (axiom_frac_zero x454 100 79228162514264337593543950336 x558 (uninterp_frac x454 100)))
(assert (axiom_frac_zero x454 100 x1290 x522 (uninterp_frac x454 100)))
(assert (axiom_frac_zero x454 100 x1657 x1229 (uninterp_frac x454 100)))
(assert (axiom_frac_zero x454 100 x2274 79228162514264337593543950336 (uninterp_frac x454 100)))
(assert (axiom_frac_zero x454 100 x2728 x3251 (uninterp_frac x454 100)))
(assert (axiom_frac_zero x454 100 x3251 x2728 (uninterp_frac x454 100)))
(assert (axiom_frac_zero x454 100 x3475 79228162514264337593543950336 (uninterp_frac x454 100)))
(assert (axiom_frac_zero x454 100 x409 79228162514264337593543950336 (uninterp_frac x454 100)))
(assert (axiom_frac_zero x454 100 x4111 1461501637330902918203684832716283019655932542976 (uninterp_frac x454 100)))
(assert (axiom_frac_zero x454 100 x4115 x3188 (uninterp_frac x454 100)))
(assert (axiom_frac_zero x454 100 x628 1461501637330902918203684832716283019655932542976 (uninterp_frac x454 100)))
(assert (axiom_int_approximation x10))
(assert (axiom_int_approximation x1002))
(assert (axiom_int_approximation x1003))
(assert (axiom_int_approximation x1005))
(assert (axiom_int_approximation x1006))
(assert (axiom_int_approximation x1013))
(assert (axiom_int_approximation x1015))
(assert (axiom_int_approximation x1016))
(assert (axiom_int_approximation x1017))
(assert (axiom_int_approximation x102))
(assert (axiom_int_approximation x1022))
(assert (axiom_int_approximation x1024))
(assert (axiom_int_approximation x1027))
(assert (axiom_int_approximation x103))
(assert (axiom_int_approximation x1030))
(assert (axiom_int_approximation x1031))
(assert (axiom_int_approximation x1033))
(assert (axiom_int_approximation x1035))
(assert (axiom_int_approximation x1037))
(assert (axiom_int_approximation x1038))
(assert (axiom_int_approximation x104))
(assert (axiom_int_approximation x1040))
(assert (axiom_int_approximation x1044))
(assert (axiom_int_approximation x1046))
(assert (axiom_int_approximation x106))
(assert (axiom_int_approximation x1062))
(assert (axiom_int_approximation x1065))
(assert (axiom_int_approximation x1067))
(assert (axiom_int_approximation x1069))
(assert (axiom_int_approximation x1076))
(assert (axiom_int_approximation x1077))
(assert (axiom_int_approximation x1079))
(assert (axiom_int_approximation x1082))
(assert (axiom_int_approximation x1088))
(assert (axiom_int_approximation x1089))
(assert (axiom_int_approximation x1090))
(assert (axiom_int_approximation x1091))
(assert (axiom_int_approximation x1096))
(assert (axiom_int_approximation x1097))
(assert (axiom_int_approximation x1105))
(assert (axiom_int_approximation x1106))
(assert (axiom_int_approximation x111))
(assert (axiom_int_approximation x1111))
(assert (axiom_int_approximation x1113))
(assert (axiom_int_approximation x1115))
(assert (axiom_int_approximation x1118))
(assert (axiom_int_approximation x1119))
(assert (axiom_int_approximation x1124))
(assert (axiom_int_approximation x1126))
(assert (axiom_int_approximation x1130))
(assert (axiom_int_approximation x1132))
(assert (axiom_int_approximation x1133))
(assert (axiom_int_approximation x1136))
(assert (axiom_int_approximation x114))
(assert (axiom_int_approximation x1140))
(assert (axiom_int_approximation x1141))
(assert (axiom_int_approximation x1142))
(assert (axiom_int_approximation x1143))
(assert (axiom_int_approximation x1147))
(assert (axiom_int_approximation x115))
(assert (axiom_int_approximation x1153))
(assert (axiom_int_approximation x1158))
(assert (axiom_int_approximation x1159))
(assert (axiom_int_approximation x1162))
(assert (axiom_int_approximation x1168))
(assert (axiom_int_approximation x1170))
(assert (axiom_int_approximation x1172))
(assert (axiom_int_approximation x1177))
(assert (axiom_int_approximation x1178))
(assert (axiom_int_approximation x1180))
(assert (axiom_int_approximation x1181))
(assert (axiom_int_approximation x1183))
(assert (axiom_int_approximation x1184))
(assert (axiom_int_approximation x119))
(assert (axiom_int_approximation x1190))
(assert (axiom_int_approximation x1191))
(assert (axiom_int_approximation x1192))
(assert (axiom_int_approximation x1193))
(assert (axiom_int_approximation x1198))
(assert (axiom_int_approximation x1199))
(assert (axiom_int_approximation x1200))
(assert (axiom_int_approximation x1202))
(assert (axiom_int_approximation x1207))
(assert (axiom_int_approximation x121))
(assert (axiom_int_approximation x1212))
(assert (axiom_int_approximation x1215))
(assert (axiom_int_approximation x1216))
(assert (axiom_int_approximation x1217))
(assert (axiom_int_approximation x1218))
(assert (axiom_int_approximation x122))
(assert (axiom_int_approximation x1220))
(assert (axiom_int_approximation x1221))
(assert (axiom_int_approximation x1224))
(assert (axiom_int_approximation x1225))
(assert (axiom_int_approximation x1228))
(assert (axiom_int_approximation x1229))
(assert (axiom_int_approximation x1233))
(assert (axiom_int_approximation x1235))
(assert (axiom_int_approximation x124))
(assert (axiom_int_approximation x1241))
(assert (axiom_int_approximation x1244))
(assert (axiom_int_approximation x1248))
(assert (axiom_int_approximation x1252))
(assert (axiom_int_approximation x1253))
(assert (axiom_int_approximation x1258))
(assert (axiom_int_approximation x1262))
(assert (axiom_int_approximation x1263))
(assert (axiom_int_approximation x1266))
(assert (axiom_int_approximation x1270))
(assert (axiom_int_approximation x1271))
(assert (axiom_int_approximation x1273))
(assert (axiom_int_approximation x1275))
(assert (axiom_int_approximation x1276))
(assert (axiom_int_approximation x1279))
(assert (axiom_int_approximation x1280))
(assert (axiom_int_approximation x1283))
(assert (axiom_int_approximation x1284))
(assert (axiom_int_approximation x1286))
(assert (axiom_int_approximation x1287))
(assert (axiom_int_approximation x1288))
(assert (axiom_int_approximation x1290))
(assert (axiom_int_approximation x1291))
(assert (axiom_int_approximation x1294))
(assert (axiom_int_approximation x1295))
(assert (axiom_int_approximation x1297))
(assert (axiom_int_approximation x13))
(assert (axiom_int_approximation x130))
(assert (axiom_int_approximation x1300))
(assert (axiom_int_approximation x1301))
(assert (axiom_int_approximation x1305))
(assert (axiom_int_approximation x1309))
(assert (axiom_int_approximation x131))
(assert (axiom_int_approximation x1311))
(assert (axiom_int_approximation x1316))
(assert (axiom_int_approximation x1317))
(assert (axiom_int_approximation x1318))
(assert (axiom_int_approximation x1320))
(assert (axiom_int_approximation x1325))
(assert (axiom_int_approximation x1327))
(assert (axiom_int_approximation x1329))
(assert (axiom_int_approximation x1334))
(assert (axiom_int_approximation x1335))
(assert (axiom_int_approximation x1336))
(assert (axiom_int_approximation x1341))
(assert (axiom_int_approximation x1342))
(assert (axiom_int_approximation x1343))
(assert (axiom_int_approximation x1347))
(assert (axiom_int_approximation x1348))
(assert (axiom_int_approximation x1351))
(assert (axiom_int_approximation x1352))
(assert (axiom_int_approximation x1353))
(assert (axiom_int_approximation x1357))
(assert (axiom_int_approximation x1358))
(assert (axiom_int_approximation x1364))
(assert (axiom_int_approximation x1368))
(assert (axiom_int_approximation x1369))
(assert (axiom_int_approximation x137))
(assert (axiom_int_approximation x1370))
(assert (axiom_int_approximation x1375))
(assert (axiom_int_approximation x1377))
(assert (axiom_int_approximation x1378))
(assert (axiom_int_approximation x1379))
(assert (axiom_int_approximation x1380))
(assert (axiom_int_approximation x1381))
(assert (axiom_int_approximation x1383))
(assert (axiom_int_approximation x1387))
(assert (axiom_int_approximation x139))
(assert (axiom_int_approximation x1391))
(assert (axiom_int_approximation x1392))
(assert (axiom_int_approximation x1394))
(assert (axiom_int_approximation x1397))
(assert (axiom_int_approximation x1399))
(assert (axiom_int_approximation x1400))
(assert (axiom_int_approximation x1404))
(assert (axiom_int_approximation x1406))
(assert (axiom_int_approximation x1407))
(assert (axiom_int_approximation x1410))
(assert (axiom_int_approximation x1414))
(assert (axiom_int_approximation x1422))
(assert (axiom_int_approximation x1424))
(assert (axiom_int_approximation x1425))
(assert (axiom_int_approximation x1426))
(assert (axiom_int_approximation x1427))
(assert (axiom_int_approximation x1430))
(assert (axiom_int_approximation x1433))
(assert (axiom_int_approximation x1435))
(assert (axiom_int_approximation x1439))
(assert (axiom_int_approximation x144))
(assert (axiom_int_approximation x1441))
(assert (axiom_int_approximation x1443))
(assert (axiom_int_approximation x1445))
(assert (axiom_int_approximation x1450))
(assert (axiom_int_approximation x1451))
(assert (axiom_int_approximation x1453))
(assert (axiom_int_approximation x1455))
(assert (axiom_int_approximation x1459))
(assert (axiom_int_approximation x1462))
(assert (axiom_int_approximation x1463))
(assert (axiom_int_approximation x1464))
(assert (axiom_int_approximation x1465))
(assert (axiom_int_approximation x1466))
(assert (axiom_int_approximation x1468))
(assert (axiom_int_approximation x1469))
(assert (axiom_int_approximation x147))
(assert (axiom_int_approximation x1472))
(assert (axiom_int_approximation x1473))
(assert (axiom_int_approximation x1474))
(assert (axiom_int_approximation x1475))
(assert (axiom_int_approximation x1477))
(assert (axiom_int_approximation x1485))
(assert (axiom_int_approximation x1489))
(assert (axiom_int_approximation x1490))
(assert (axiom_int_approximation x1491))
(assert (axiom_int_approximation x1493))
(assert (axiom_int_approximation x1494))
(assert (axiom_int_approximation x1495))
(assert (axiom_int_approximation x15))
(assert (axiom_int_approximation x150))
(assert (axiom_int_approximation x1502))
(assert (axiom_int_approximation x1510))
(assert (axiom_int_approximation x1512))
(assert (axiom_int_approximation x1522))
(assert (axiom_int_approximation x1523))
(assert (axiom_int_approximation x1525))
(assert (axiom_int_approximation x1526))
(assert (axiom_int_approximation x1527))
(assert (axiom_int_approximation x1529))
(assert (axiom_int_approximation x153))
(assert (axiom_int_approximation x1531))
(assert (axiom_int_approximation x1533))
(assert (axiom_int_approximation x1534))
(assert (axiom_int_approximation x1536))
(assert (axiom_int_approximation x1539))
(assert (axiom_int_approximation x154))
(assert (axiom_int_approximation x1540))
(assert (axiom_int_approximation x1542))
(assert (axiom_int_approximation x1545))
(assert (axiom_int_approximation x1548))
(assert (axiom_int_approximation x1549))
(assert (axiom_int_approximation x1551))
(assert (axiom_int_approximation x1553))
(assert (axiom_int_approximation x1557))
(assert (axiom_int_approximation x1559))
(assert (axiom_int_approximation x1560))
(assert (axiom_int_approximation x1563))
(assert (axiom_int_approximation x1564))
(assert (axiom_int_approximation x1566))
(assert (axiom_int_approximation x1568))
(assert (axiom_int_approximation x1576))
(assert (axiom_int_approximation x1581))
(assert (axiom_int_approximation x1582))
(assert (axiom_int_approximation x1585))
(assert (axiom_int_approximation x1587))
(assert (axiom_int_approximation x1588))
(assert (axiom_int_approximation x159))
(assert (axiom_int_approximation x1591))
(assert (axiom_int_approximation x1592))
(assert (axiom_int_approximation x1596))
(assert (axiom_int_approximation x1597))
(assert (axiom_int_approximation x1598))
(assert (axiom_int_approximation x1599))
(assert (axiom_int_approximation x1604))
(assert (axiom_int_approximation x1606))
(assert (axiom_int_approximation x1607))
(assert (axiom_int_approximation x1608))
(assert (axiom_int_approximation x1610))
(assert (axiom_int_approximation x1611))
(assert (axiom_int_approximation x1612))
(assert (axiom_int_approximation x1613))
(assert (axiom_int_approximation x1615))
(assert (axiom_int_approximation x1616))
(assert (axiom_int_approximation x1617))
(assert (axiom_int_approximation x162))
(assert (axiom_int_approximation x1620))
(assert (axiom_int_approximation x1621))
(assert (axiom_int_approximation x1629))
(assert (axiom_int_approximation x163))
(assert (axiom_int_approximation x1634))
(assert (axiom_int_approximation x1635))
(assert (axiom_int_approximation x1636))
(assert (axiom_int_approximation x164))
(assert (axiom_int_approximation x1646))
(assert (axiom_int_approximation x165))
(assert (axiom_int_approximation x1651))
(assert (axiom_int_approximation x1654))
(assert (axiom_int_approximation x1655))
(assert (axiom_int_approximation x1656))
(assert (axiom_int_approximation x1657))
(assert (axiom_int_approximation x1658))
(assert (axiom_int_approximation x166))
(assert (axiom_int_approximation x1660))
(assert (axiom_int_approximation x1662))
(assert (axiom_int_approximation x1667))
(assert (axiom_int_approximation x1669))
(assert (axiom_int_approximation x167))
(assert (axiom_int_approximation x1674))
(assert (axiom_int_approximation x1675))
(assert (axiom_int_approximation x1676))
(assert (axiom_int_approximation x1677))
(assert (axiom_int_approximation x1678))
(assert (axiom_int_approximation x1679))
(assert (axiom_int_approximation x1680))
(assert (axiom_int_approximation x1681))
(assert (axiom_int_approximation x1682))
(assert (axiom_int_approximation x1684))
(assert (axiom_int_approximation x1686))
(assert (axiom_int_approximation x1689))
(assert (axiom_int_approximation x169))
(assert (axiom_int_approximation x1691))
(assert (axiom_int_approximation x1693))
(assert (axiom_int_approximation x1694))
(assert (axiom_int_approximation x1695))
(assert (axiom_int_approximation x170))
(assert (axiom_int_approximation x1703))
(assert (axiom_int_approximation x1705))
(assert (axiom_int_approximation x1706))
(assert (axiom_int_approximation x1708))
(assert (axiom_int_approximation x1709))
(assert (axiom_int_approximation x1713))
(assert (axiom_int_approximation x1714))
(assert (axiom_int_approximation x1718))
(assert (axiom_int_approximation x172))
(assert (axiom_int_approximation x1721))
(assert (axiom_int_approximation x1724))
(assert (axiom_int_approximation x1726))
(assert (axiom_int_approximation x1729))
(assert (axiom_int_approximation x1730))
(assert (axiom_int_approximation x1737))
(assert (axiom_int_approximation x1738))
(assert (axiom_int_approximation x1740))
(assert (axiom_int_approximation x1741))
(assert (axiom_int_approximation x1742))
(assert (axiom_int_approximation x1746))
(assert (axiom_int_approximation x1749))
(assert (axiom_int_approximation x1752))
(assert (axiom_int_approximation x1754))
(assert (axiom_int_approximation x1757))
(assert (axiom_int_approximation x1762))
(assert (axiom_int_approximation x1763))
(assert (axiom_int_approximation x1764))
(assert (axiom_int_approximation x1767))
(assert (axiom_int_approximation x1768))
(assert (axiom_int_approximation x177))
(assert (axiom_int_approximation x1771))
(assert (axiom_int_approximation x1773))
(assert (axiom_int_approximation x178))
(assert (axiom_int_approximation x1781))
(assert (axiom_int_approximation x1782))
(assert (axiom_int_approximation x1783))
(assert (axiom_int_approximation x1784))
(assert (axiom_int_approximation x1786))
(assert (axiom_int_approximation x1788))
(assert (axiom_int_approximation x1789))
(assert (axiom_int_approximation x1790))
(assert (axiom_int_approximation x1791))
(assert (axiom_int_approximation x1792))
(assert (axiom_int_approximation x1793))
(assert (axiom_int_approximation x1796))
(assert (axiom_int_approximation x1797))
(assert (axiom_int_approximation x1799))
(assert (axiom_int_approximation x18))
(assert (axiom_int_approximation x180))
(assert (axiom_int_approximation x1802))
(assert (axiom_int_approximation x1805))
(assert (axiom_int_approximation x1806))
(assert (axiom_int_approximation x1808))
(assert (axiom_int_approximation x1809))
(assert (axiom_int_approximation x1811))
(assert (axiom_int_approximation x1812))
(assert (axiom_int_approximation x1817))
(assert (axiom_int_approximation x1818))
(assert (axiom_int_approximation x182))
(assert (axiom_int_approximation x1822))
(assert (axiom_int_approximation x1823))
(assert (axiom_int_approximation x1826))
(assert (axiom_int_approximation x1827))
(assert (axiom_int_approximation x183))
(assert (axiom_int_approximation x1831))
(assert (axiom_int_approximation x1835))
(assert (axiom_int_approximation x1837))
(assert (axiom_int_approximation x1841))
(assert (axiom_int_approximation x1844))
(assert (axiom_int_approximation x1845))
(assert (axiom_int_approximation x1848))
(assert (axiom_int_approximation x1849))
(assert (axiom_int_approximation x185))
(assert (axiom_int_approximation x1852))
(assert (axiom_int_approximation x1854))
(assert (axiom_int_approximation x1855))
(assert (axiom_int_approximation x1856))
(assert (axiom_int_approximation x1859))
(assert (axiom_int_approximation x1860))
(assert (axiom_int_approximation x1863))
(assert (axiom_int_approximation x1867))
(assert (axiom_int_approximation x1869))
(assert (axiom_int_approximation x1871))
(assert (axiom_int_approximation x1883))
(assert (axiom_int_approximation x1884))
(assert (axiom_int_approximation x1885))
(assert (axiom_int_approximation x189))
(assert (axiom_int_approximation x1890))
(assert (axiom_int_approximation x1891))
(assert (axiom_int_approximation x1894))
(assert (axiom_int_approximation x1898))
(assert (axiom_int_approximation x1899))
(assert (axiom_int_approximation x1901))
(assert (axiom_int_approximation x1906))
(assert (axiom_int_approximation x1907))
(assert (axiom_int_approximation x1908))
(assert (axiom_int_approximation x1912))
(assert (axiom_int_approximation x1915))
(assert (axiom_int_approximation x1917))
(assert (axiom_int_approximation x1918))
(assert (axiom_int_approximation x192))
(assert (axiom_int_approximation x1921))
(assert (axiom_int_approximation x1925))
(assert (axiom_int_approximation x1927))
(assert (axiom_int_approximation x1928))
(assert (axiom_int_approximation x1929))
(assert (axiom_int_approximation x1931))
(assert (axiom_int_approximation x1932))
(assert (axiom_int_approximation x1934))
(assert (axiom_int_approximation x1936))
(assert (axiom_int_approximation x1939))
(assert (axiom_int_approximation x194))
(assert (axiom_int_approximation x1941))
(assert (axiom_int_approximation x1943))
(assert (axiom_int_approximation x1944))
(assert (axiom_int_approximation x1945))
(assert (axiom_int_approximation x195))
(assert (axiom_int_approximation x1951))
(assert (axiom_int_approximation x1956))
(assert (axiom_int_approximation x1957))
(assert (axiom_int_approximation x1959))
(assert (axiom_int_approximation x1963))
(assert (axiom_int_approximation x1966))
(assert (axiom_int_approximation x1968))
(assert (axiom_int_approximation x1970))
(assert (axiom_int_approximation x1971))
(assert (axiom_int_approximation x1974))
(assert (axiom_int_approximation x1978))
(assert (axiom_int_approximation x1980))
(assert (axiom_int_approximation x1984))
(assert (axiom_int_approximation x1985))
(assert (axiom_int_approximation x1986))
(assert (axiom_int_approximation x1989))
(assert (axiom_int_approximation x199))
(assert (axiom_int_approximation x1993))
(assert (axiom_int_approximation x1997))
(assert (axiom_int_approximation x200))
(assert (axiom_int_approximation x2000))
(assert (axiom_int_approximation x2003))
(assert (axiom_int_approximation x2005))
(assert (axiom_int_approximation x2007))
(assert (axiom_int_approximation x2008))
(assert (axiom_int_approximation x2010))
(assert (axiom_int_approximation x2012))
(assert (axiom_int_approximation x2014))
(assert (axiom_int_approximation x2015))
(assert (axiom_int_approximation x2016))
(assert (axiom_int_approximation x2018))
(assert (axiom_int_approximation x2021))
(assert (axiom_int_approximation x2023))
(assert (axiom_int_approximation x2024))
(assert (axiom_int_approximation x2025))
(assert (axiom_int_approximation x2029))
(assert (axiom_int_approximation x203))
(assert (axiom_int_approximation x2031))
(assert (axiom_int_approximation x2038))
(assert (axiom_int_approximation x2040))
(assert (axiom_int_approximation x2042))
(assert (axiom_int_approximation x2044))
(assert (axiom_int_approximation x2045))
(assert (axiom_int_approximation x2046))
(assert (axiom_int_approximation x2048))
(assert (axiom_int_approximation x2049))
(assert (axiom_int_approximation x2051))
(assert (axiom_int_approximation x2053))
(assert (axiom_int_approximation x2056))
(assert (axiom_int_approximation x2059))
(assert (axiom_int_approximation x206))
(assert (axiom_int_approximation x2061))
(assert (axiom_int_approximation x2063))
(assert (axiom_int_approximation x2064))
(assert (axiom_int_approximation x2067))
(assert (axiom_int_approximation x2068))
(assert (axiom_int_approximation x2069))
(assert (axiom_int_approximation x2071))
(assert (axiom_int_approximation x2072))
(assert (axiom_int_approximation x2073))
(assert (axiom_int_approximation x2074))
(assert (axiom_int_approximation x2078))
(assert (axiom_int_approximation x2080))
(assert (axiom_int_approximation x2081))
(assert (axiom_int_approximation x2083))
(assert (axiom_int_approximation x2084))
(assert (axiom_int_approximation x2085))
(assert (axiom_int_approximation x209))
(assert (axiom_int_approximation x2090))
(assert (axiom_int_approximation x2093))
(assert (axiom_int_approximation x2095))
(assert (axiom_int_approximation x2096))
(assert (axiom_int_approximation x2099))
(assert (axiom_int_approximation x21))
(assert (axiom_int_approximation x2104))
(assert (axiom_int_approximation x2105))
(assert (axiom_int_approximation x2116))
(assert (axiom_int_approximation x2118))
(assert (axiom_int_approximation x2119))
(assert (axiom_int_approximation x212))
(assert (axiom_int_approximation x2122))
(assert (axiom_int_approximation x2128))
(assert (axiom_int_approximation x2129))
(assert (axiom_int_approximation x2136))
(assert (axiom_int_approximation x2138))
(assert (axiom_int_approximation x2144))
(assert (axiom_int_approximation x2147))
(assert (axiom_int_approximation x2149))
(assert (axiom_int_approximation x2150))
(assert (axiom_int_approximation x2155))
(assert (axiom_int_approximation x2157))
(assert (axiom_int_approximation x2158))
(assert (axiom_int_approximation x2161))
(assert (axiom_int_approximation x217))
(assert (axiom_int_approximation x2170))
(assert (axiom_int_approximation x2174))
(assert (axiom_int_approximation x2175))
(assert (axiom_int_approximation x2176))
(assert (axiom_int_approximation x2180))
(assert (axiom_int_approximation x2184))
(assert (axiom_int_approximation x2186))
(assert (axiom_int_approximation x2188))
(assert (axiom_int_approximation x2191))
(assert (axiom_int_approximation x2193))
(assert (axiom_int_approximation x2194))
(assert (axiom_int_approximation x2196))
(assert (axiom_int_approximation x2197))
(assert (axiom_int_approximation x2200))
(assert (axiom_int_approximation x2202))
(assert (axiom_int_approximation x2211))
(assert (axiom_int_approximation x2212))
(assert (axiom_int_approximation x2213))
(assert (axiom_int_approximation x2221))
(assert (axiom_int_approximation x2227))
(assert (axiom_int_approximation x2229))
(assert (axiom_int_approximation x2239))
(assert (axiom_int_approximation x224))
(assert (axiom_int_approximation x2240))
(assert (axiom_int_approximation x2246))
(assert (axiom_int_approximation x2247))
(assert (axiom_int_approximation x2249))
(assert (axiom_int_approximation x225))
(assert (axiom_int_approximation x2255))
(assert (axiom_int_approximation x2258))
(assert (axiom_int_approximation x2259))
(assert (axiom_int_approximation x2264))
(assert (axiom_int_approximation x2266))
(assert (axiom_int_approximation x2268))
(assert (axiom_int_approximation x2271))
(assert (axiom_int_approximation x2274))
(assert (axiom_int_approximation x2275))
(assert (axiom_int_approximation x2276))
(assert (axiom_int_approximation x2277))
(assert (axiom_int_approximation x2285))
(assert (axiom_int_approximation x2287))
(assert (axiom_int_approximation x2289))
(assert (axiom_int_approximation x2290))
(assert (axiom_int_approximation x2294))
(assert (axiom_int_approximation x2295))
(assert (axiom_int_approximation x2297))
(assert (axiom_int_approximation x2299))
(assert (axiom_int_approximation x2303))
(assert (axiom_int_approximation x2305))
(assert (axiom_int_approximation x2307))
(assert (axiom_int_approximation x2308))
(assert (axiom_int_approximation x2309))
(assert (axiom_int_approximation x2312))
(assert (axiom_int_approximation x2315))
(assert (axiom_int_approximation x2317))
(assert (axiom_int_approximation x2318))
(assert (axiom_int_approximation x232))
(assert (axiom_int_approximation x2320))
(assert (axiom_int_approximation x2326))
(assert (axiom_int_approximation x2327))
(assert (axiom_int_approximation x2333))
(assert (axiom_int_approximation x2336))
(assert (axiom_int_approximation x2338))
(assert (axiom_int_approximation x234))
(assert (axiom_int_approximation x2340))
(assert (axiom_int_approximation x2341))
(assert (axiom_int_approximation x2343))
(assert (axiom_int_approximation x2345))
(assert (axiom_int_approximation x2349))
(assert (axiom_int_approximation x2352))
(assert (axiom_int_approximation x2356))
(assert (axiom_int_approximation x2357))
(assert (axiom_int_approximation x2362))
(assert (axiom_int_approximation x2368))
(assert (axiom_int_approximation x237))
(assert (axiom_int_approximation x2370))
(assert (axiom_int_approximation x2372))
(assert (axiom_int_approximation x2373))
(assert (axiom_int_approximation x2374))
(assert (axiom_int_approximation x2379))
(assert (axiom_int_approximation x2381))
(assert (axiom_int_approximation x2382))
(assert (axiom_int_approximation x2383))
(assert (axiom_int_approximation x2384))
(assert (axiom_int_approximation x2390))
(assert (axiom_int_approximation x2391))
(assert (axiom_int_approximation x2392))
(assert (axiom_int_approximation x2395))
(assert (axiom_int_approximation x2397))
(assert (axiom_int_approximation x2399))
(assert (axiom_int_approximation x24))
(assert (axiom_int_approximation x2402))
(assert (axiom_int_approximation x2404))
(assert (axiom_int_approximation x2407))
(assert (axiom_int_approximation x2408))
(assert (axiom_int_approximation x2409))
(assert (axiom_int_approximation x2412))
(assert (axiom_int_approximation x2413))
(assert (axiom_int_approximation x2414))
(assert (axiom_int_approximation x2416))
(assert (axiom_int_approximation x2417))
(assert (axiom_int_approximation x2420))
(assert (axiom_int_approximation x2423))
(assert (axiom_int_approximation x2429))
(assert (axiom_int_approximation x2432))
(assert (axiom_int_approximation x2435))
(assert (axiom_int_approximation x2436))
(assert (axiom_int_approximation x2437))
(assert (axiom_int_approximation x244))
(assert (axiom_int_approximation x2440))
(assert (axiom_int_approximation x2445))
(assert (axiom_int_approximation x245))
(assert (axiom_int_approximation x2451))
(assert (axiom_int_approximation x2452))
(assert (axiom_int_approximation x2453))
(assert (axiom_int_approximation x2454))
(assert (axiom_int_approximation x2456))
(assert (axiom_int_approximation x2457))
(assert (axiom_int_approximation x2459))
(assert (axiom_int_approximation x2460))
(assert (axiom_int_approximation x2462))
(assert (axiom_int_approximation x2465))
(assert (axiom_int_approximation x2468))
(assert (axiom_int_approximation x2471))
(assert (axiom_int_approximation x2472))
(assert (axiom_int_approximation x2474))
(assert (axiom_int_approximation x2477))
(assert (axiom_int_approximation x2479))
(assert (axiom_int_approximation x248))
(assert (axiom_int_approximation x2482))
(assert (axiom_int_approximation x2483))
(assert (axiom_int_approximation x2484))
(assert (axiom_int_approximation x2485))
(assert (axiom_int_approximation x2486))
(assert (axiom_int_approximation x2489))
(assert (axiom_int_approximation x2491))
(assert (axiom_int_approximation x2493))
(assert (axiom_int_approximation x2494))
(assert (axiom_int_approximation x2495))
(assert (axiom_int_approximation x2498))
(assert (axiom_int_approximation x2499))
(assert (axiom_int_approximation x2504))
(assert (axiom_int_approximation x2507))
(assert (axiom_int_approximation x2508))
(assert (axiom_int_approximation x2513))
(assert (axiom_int_approximation x2514))
(assert (axiom_int_approximation x2516))
(assert (axiom_int_approximation x2517))
(assert (axiom_int_approximation x2519))
(assert (axiom_int_approximation x2522))
(assert (axiom_int_approximation x2523))
(assert (axiom_int_approximation x2528))
(assert (axiom_int_approximation x2529))
(assert (axiom_int_approximation x253))
(assert (axiom_int_approximation x2530))
(assert (axiom_int_approximation x2532))
(assert (axiom_int_approximation x2534))
(assert (axiom_int_approximation x2537))
(assert (axiom_int_approximation x2538))
(assert (axiom_int_approximation x2540))
(assert (axiom_int_approximation x2543))
(assert (axiom_int_approximation x2544))
(assert (axiom_int_approximation x255))
(assert (axiom_int_approximation x2552))
(assert (axiom_int_approximation x2556))
(assert (axiom_int_approximation x2557))
(assert (axiom_int_approximation x256))
(assert (axiom_int_approximation x2560))
(assert (axiom_int_approximation x2561))
(assert (axiom_int_approximation x2563))
(assert (axiom_int_approximation x2566))
(assert (axiom_int_approximation x2568))
(assert (axiom_int_approximation x2569))
(assert (axiom_int_approximation x2570))
(assert (axiom_int_approximation x2571))
(assert (axiom_int_approximation x2572))
(assert (axiom_int_approximation x2574))
(assert (axiom_int_approximation x2575))
(assert (axiom_int_approximation x2576))
(assert (axiom_int_approximation x2577))
(assert (axiom_int_approximation x2578))
(assert (axiom_int_approximation x2583))
(assert (axiom_int_approximation x2584))
(assert (axiom_int_approximation x2587))
(assert (axiom_int_approximation x2590))
(assert (axiom_int_approximation x2591))
(assert (axiom_int_approximation x2594))
(assert (axiom_int_approximation x2595))
(assert (axiom_int_approximation x2596))
(assert (axiom_int_approximation x2599))
(assert (axiom_int_approximation x260))
(assert (axiom_int_approximation x2606))
(assert (axiom_int_approximation x261))
(assert (axiom_int_approximation x2612))
(assert (axiom_int_approximation x2613))
(assert (axiom_int_approximation x2614))
(assert (axiom_int_approximation x2616))
(assert (axiom_int_approximation x2618))
(assert (axiom_int_approximation x2619))
(assert (axiom_int_approximation x2620))
(assert (axiom_int_approximation x2630))
(assert (axiom_int_approximation x2631))
(assert (axiom_int_approximation x2633))
(assert (axiom_int_approximation x2634))
(assert (axiom_int_approximation x2640))
(assert (axiom_int_approximation x2644))
(assert (axiom_int_approximation x2645))
(assert (axiom_int_approximation x2651))
(assert (axiom_int_approximation x2655))
(assert (axiom_int_approximation x2657))
(assert (axiom_int_approximation x2658))
(assert (axiom_int_approximation x2659))
(assert (axiom_int_approximation x2660))
(assert (axiom_int_approximation x2664))
(assert (axiom_int_approximation x2665))
(assert (axiom_int_approximation x2666))
(assert (axiom_int_approximation x2669))
(assert (axiom_int_approximation x2670))
(assert (axiom_int_approximation x2674))
(assert (axiom_int_approximation x2679))
(assert (axiom_int_approximation x2682))
(assert (axiom_int_approximation x2683))
(assert (axiom_int_approximation x2684))
(assert (axiom_int_approximation x2686))
(assert (axiom_int_approximation x2688))
(assert (axiom_int_approximation x2690))
(assert (axiom_int_approximation x2695))
(assert (axiom_int_approximation x2698))
(assert (axiom_int_approximation x27))
(assert (axiom_int_approximation x2700))
(assert (axiom_int_approximation x2702))
(assert (axiom_int_approximation x2704))
(assert (axiom_int_approximation x2707))
(assert (axiom_int_approximation x2709))
(assert (axiom_int_approximation x271))
(assert (axiom_int_approximation x2711))
(assert (axiom_int_approximation x2712))
(assert (axiom_int_approximation x2713))
(assert (axiom_int_approximation x2720))
(assert (axiom_int_approximation x2724))
(assert (axiom_int_approximation x2726))
(assert (axiom_int_approximation x2727))
(assert (axiom_int_approximation x2728))
(assert (axiom_int_approximation x2729))
(assert (axiom_int_approximation x273))
(assert (axiom_int_approximation x2731))
(assert (axiom_int_approximation x2733))
(assert (axiom_int_approximation x2740))
(assert (axiom_int_approximation x2742))
(assert (axiom_int_approximation x2743))
(assert (axiom_int_approximation x2744))
(assert (axiom_int_approximation x2746))
(assert (axiom_int_approximation x2748))
(assert (axiom_int_approximation x2749))
(assert (axiom_int_approximation x2752))
(assert (axiom_int_approximation x2753))
(assert (axiom_int_approximation x2759))
(assert (axiom_int_approximation x276))
(assert (axiom_int_approximation x2761))
(assert (axiom_int_approximation x2762))
(assert (axiom_int_approximation x2764))
(assert (axiom_int_approximation x2766))
(assert (axiom_int_approximation x2768))
(assert (axiom_int_approximation x2769))
(assert (axiom_int_approximation x2772))
(assert (axiom_int_approximation x2773))
(assert (axiom_int_approximation x2774))
(assert (axiom_int_approximation x278))
(assert (axiom_int_approximation x2785))
(assert (axiom_int_approximation x2786))
(assert (axiom_int_approximation x2789))
(assert (axiom_int_approximation x2794))
(assert (axiom_int_approximation x2796))
(assert (axiom_int_approximation x2799))
(assert (axiom_int_approximation x2800))
(assert (axiom_int_approximation x2811))
(assert (axiom_int_approximation x2812))
(assert (axiom_int_approximation x2817))
(assert (axiom_int_approximation x2818))
(assert (axiom_int_approximation x2819))
(assert (axiom_int_approximation x2821))
(assert (axiom_int_approximation x2823))
(assert (axiom_int_approximation x2826))
(assert (axiom_int_approximation x2827))
(assert (axiom_int_approximation x2833))
(assert (axiom_int_approximation x2838))
(assert (axiom_int_approximation x284))
(assert (axiom_int_approximation x2843))
(assert (axiom_int_approximation x2845))
(assert (axiom_int_approximation x2846))
(assert (axiom_int_approximation x2848))
(assert (axiom_int_approximation x2849))
(assert (axiom_int_approximation x285))
(assert (axiom_int_approximation x2855))
(assert (axiom_int_approximation x2856))
(assert (axiom_int_approximation x286))
(assert (axiom_int_approximation x2860))
(assert (axiom_int_approximation x2864))
(assert (axiom_int_approximation x2867))
(assert (axiom_int_approximation x2868))
(assert (axiom_int_approximation x2872))
(assert (axiom_int_approximation x2874))
(assert (axiom_int_approximation x2876))
(assert (axiom_int_approximation x2879))
(assert (axiom_int_approximation x2888))
(assert (axiom_int_approximation x2889))
(assert (axiom_int_approximation x289))
(assert (axiom_int_approximation x2890))
(assert (axiom_int_approximation x2899))
(assert (axiom_int_approximation x2901))
(assert (axiom_int_approximation x2905))
(assert (axiom_int_approximation x291))
(assert (axiom_int_approximation x2912))
(assert (axiom_int_approximation x2913))
(assert (axiom_int_approximation x2915))
(assert (axiom_int_approximation x2916))
(assert (axiom_int_approximation x2917))
(assert (axiom_int_approximation x2919))
(assert (axiom_int_approximation x2923))
(assert (axiom_int_approximation x2927))
(assert (axiom_int_approximation x2928))
(assert (axiom_int_approximation x293))
(assert (axiom_int_approximation x2931))
(assert (axiom_int_approximation x2933))
(assert (axiom_int_approximation x2934))
(assert (axiom_int_approximation x2937))
(assert (axiom_int_approximation x2939))
(assert (axiom_int_approximation x294))
(assert (axiom_int_approximation x2940))
(assert (axiom_int_approximation x2941))
(assert (axiom_int_approximation x2942))
(assert (axiom_int_approximation x2952))
(assert (axiom_int_approximation x2953))
(assert (axiom_int_approximation x2956))
(assert (axiom_int_approximation x2958))
(assert (axiom_int_approximation x2960))
(assert (axiom_int_approximation x2962))
(assert (axiom_int_approximation x2963))
(assert (axiom_int_approximation x2964))
(assert (axiom_int_approximation x2965))
(assert (axiom_int_approximation x2966))
(assert (axiom_int_approximation x2967))
(assert (axiom_int_approximation x297))
(assert (axiom_int_approximation x2973))
(assert (axiom_int_approximation x2976))
(assert (axiom_int_approximation x2977))
(assert (axiom_int_approximation x2979))
(assert (axiom_int_approximation x298))
(assert (axiom_int_approximation x2982))
(assert (axiom_int_approximation x2983))
(assert (axiom_int_approximation x2986))
(assert (axiom_int_approximation x2990))
(assert (axiom_int_approximation x2991))
(assert (axiom_int_approximation x2992))
(assert (axiom_int_approximation x2994))
(assert (axiom_int_approximation x2995))
(assert (axiom_int_approximation x3000))
(assert (axiom_int_approximation x3001))
(assert (axiom_int_approximation x3002))
(assert (axiom_int_approximation x3003))
(assert (axiom_int_approximation x3004))
(assert (axiom_int_approximation x3005))
(assert (axiom_int_approximation x3007))
(assert (axiom_int_approximation x3008))
(assert (axiom_int_approximation x301))
(assert (axiom_int_approximation x3010))
(assert (axiom_int_approximation x3014))
(assert (axiom_int_approximation x3015))
(assert (axiom_int_approximation x3016))
(assert (axiom_int_approximation x3020))
(assert (axiom_int_approximation x3021))
(assert (axiom_int_approximation x3022))
(assert (axiom_int_approximation x3024))
(assert (axiom_int_approximation x3026))
(assert (axiom_int_approximation x3028))
(assert (axiom_int_approximation x303))
(assert (axiom_int_approximation x3031))
(assert (axiom_int_approximation x3033))
(assert (axiom_int_approximation x3034))
(assert (axiom_int_approximation x3035))
(assert (axiom_int_approximation x3042))
(assert (axiom_int_approximation x3044))
(assert (axiom_int_approximation x3045))
(assert (axiom_int_approximation x3047))
(assert (axiom_int_approximation x3050))
(assert (axiom_int_approximation x3053))
(assert (axiom_int_approximation x3057))
(assert (axiom_int_approximation x3062))
(assert (axiom_int_approximation x3065))
(assert (axiom_int_approximation x3067))
(assert (axiom_int_approximation x3069))
(assert (axiom_int_approximation x307))
(assert (axiom_int_approximation x3071))
(assert (axiom_int_approximation x3078))
(assert (axiom_int_approximation x308))
(assert (axiom_int_approximation x3082))
(assert (axiom_int_approximation x3083))
(assert (axiom_int_approximation x3085))
(assert (axiom_int_approximation x3086))
(assert (axiom_int_approximation x3089))
(assert (axiom_int_approximation x309))
(assert (axiom_int_approximation x3092))
(assert (axiom_int_approximation x3093))
(assert (axiom_int_approximation x3094))
(assert (axiom_int_approximation x3096))
(assert (axiom_int_approximation x3099))
(assert (axiom_int_approximation x3103))
(assert (axiom_int_approximation x3105))
(assert (axiom_int_approximation x3107))
(assert (axiom_int_approximation x3109))
(assert (axiom_int_approximation x3110))
(assert (axiom_int_approximation x3111))
(assert (axiom_int_approximation x3113))
(assert (axiom_int_approximation x3114))
(assert (axiom_int_approximation x3118))
(assert (axiom_int_approximation x3122))
(assert (axiom_int_approximation x3123))
(assert (axiom_int_approximation x3124))
(assert (axiom_int_approximation x3125))
(assert (axiom_int_approximation x3126))
(assert (axiom_int_approximation x3127))
(assert (axiom_int_approximation x313))
(assert (axiom_int_approximation x3131))
(assert (axiom_int_approximation x3132))
(assert (axiom_int_approximation x3133))
(assert (axiom_int_approximation x3134))
(assert (axiom_int_approximation x3137))
(assert (axiom_int_approximation x314))
(assert (axiom_int_approximation x3140))
(assert (axiom_int_approximation x3141))
(assert (axiom_int_approximation x3142))
(assert (axiom_int_approximation x3144))
(assert (axiom_int_approximation x3145))
(assert (axiom_int_approximation x3148))
(assert (axiom_int_approximation x3149))
(assert (axiom_int_approximation x3151))
(assert (axiom_int_approximation x3153))
(assert (axiom_int_approximation x3156))
(assert (axiom_int_approximation x3157))
(assert (axiom_int_approximation x3163))
(assert (axiom_int_approximation x3166))
(assert (axiom_int_approximation x3169))
(assert (axiom_int_approximation x317))
(assert (axiom_int_approximation x3170))
(assert (axiom_int_approximation x3171))
(assert (axiom_int_approximation x3173))
(assert (axiom_int_approximation x3174))
(assert (axiom_int_approximation x3176))
(assert (axiom_int_approximation x3178))
(assert (axiom_int_approximation x3183))
(assert (axiom_int_approximation x3185))
(assert (axiom_int_approximation x3186))
(assert (axiom_int_approximation x3187))
(assert (axiom_int_approximation x3188))
(assert (axiom_int_approximation x319))
(assert (axiom_int_approximation x3191))
(assert (axiom_int_approximation x3194))
(assert (axiom_int_approximation x3195))
(assert (axiom_int_approximation x3198))
(assert (axiom_int_approximation x32))
(assert (axiom_int_approximation x3203))
(assert (axiom_int_approximation x3204))
(assert (axiom_int_approximation x3206))
(assert (axiom_int_approximation x3208))
(assert (axiom_int_approximation x3211))
(assert (axiom_int_approximation x3212))
(assert (axiom_int_approximation x3216))
(assert (axiom_int_approximation x3217))
(assert (axiom_int_approximation x3222))
(assert (axiom_int_approximation x3223))
(assert (axiom_int_approximation x3226))
(assert (axiom_int_approximation x3227))
(assert (axiom_int_approximation x3229))
(assert (axiom_int_approximation x3230))
(assert (axiom_int_approximation x3236))
(assert (axiom_int_approximation x3237))
(assert (axiom_int_approximation x3240))
(assert (axiom_int_approximation x3242))
(assert (axiom_int_approximation x3243))
(assert (axiom_int_approximation x3244))
(assert (axiom_int_approximation x3245))
(assert (axiom_int_approximation x3249))
(assert (axiom_int_approximation x325))
(assert (axiom_int_approximation x3251))
(assert (axiom_int_approximation x3252))
(assert (axiom_int_approximation x3257))
(assert (axiom_int_approximation x3258))
(assert (axiom_int_approximation x3259))
(assert (axiom_int_approximation x326))
(assert (axiom_int_approximation x3266))
(assert (axiom_int_approximation x3269))
(assert (axiom_int_approximation x327))
(assert (axiom_int_approximation x3273))
(assert (axiom_int_approximation x3275))
(assert (axiom_int_approximation x3277))
(assert (axiom_int_approximation x3279))
(assert (axiom_int_approximation x3281))
(assert (axiom_int_approximation x3286))
(assert (axiom_int_approximation x3287))
(assert (axiom_int_approximation x3290))
(assert (axiom_int_approximation x3293))
(assert (axiom_int_approximation x3294))
(assert (axiom_int_approximation x3296))
(assert (axiom_int_approximation x3298))
(assert (axiom_int_approximation x3300))
(assert (axiom_int_approximation x3302))
(assert (axiom_int_approximation x3304))
(assert (axiom_int_approximation x3306))
(assert (axiom_int_approximation x3308))
(assert (axiom_int_approximation x3310))
(assert (axiom_int_approximation x3311))
(assert (axiom_int_approximation x3312))
(assert (axiom_int_approximation x3314))
(assert (axiom_int_approximation x3315))
(assert (axiom_int_approximation x3317))
(assert (axiom_int_approximation x3318))
(assert (axiom_int_approximation x3319))
(assert (axiom_int_approximation x3321))
(assert (axiom_int_approximation x3322))
(assert (axiom_int_approximation x3324))
(assert (axiom_int_approximation x3325))
(assert (axiom_int_approximation x3326))
(assert (axiom_int_approximation x3327))
(assert (axiom_int_approximation x3329))
(assert (axiom_int_approximation x3335))
(assert (axiom_int_approximation x3339))
(assert (axiom_int_approximation x3343))
(assert (axiom_int_approximation x3348))
(assert (axiom_int_approximation x335))
(assert (axiom_int_approximation x3352))
(assert (axiom_int_approximation x3353))
(assert (axiom_int_approximation x3356))
(assert (axiom_int_approximation x3357))
(assert (axiom_int_approximation x3358))
(assert (axiom_int_approximation x3361))
(assert (axiom_int_approximation x3362))
(assert (axiom_int_approximation x3365))
(assert (axiom_int_approximation x337))
(assert (axiom_int_approximation x3370))
(assert (axiom_int_approximation x3375))
(assert (axiom_int_approximation x3378))
(assert (axiom_int_approximation x3382))
(assert (axiom_int_approximation x3385))
(assert (axiom_int_approximation x3393))
(assert (axiom_int_approximation x3395))
(assert (axiom_int_approximation x3399))
(assert (axiom_int_approximation x340))
(assert (axiom_int_approximation x3400))
(assert (axiom_int_approximation x3401))
(assert (axiom_int_approximation x3405))
(assert (axiom_int_approximation x3407))
(assert (axiom_int_approximation x3413))
(assert (axiom_int_approximation x3414))
(assert (axiom_int_approximation x3415))
(assert (axiom_int_approximation x3417))
(assert (axiom_int_approximation x3420))
(assert (axiom_int_approximation x3421))
(assert (axiom_int_approximation x3422))
(assert (axiom_int_approximation x3425))
(assert (axiom_int_approximation x3426))
(assert (axiom_int_approximation x3433))
(assert (axiom_int_approximation x3434))
(assert (axiom_int_approximation x3435))
(assert (axiom_int_approximation x3437))
(assert (axiom_int_approximation x3438))
(assert (axiom_int_approximation x3439))
(assert (axiom_int_approximation x3443))
(assert (axiom_int_approximation x3444))
(assert (axiom_int_approximation x3445))
(assert (axiom_int_approximation x3446))
(assert (axiom_int_approximation x3448))
(assert (axiom_int_approximation x3449))
(assert (axiom_int_approximation x3450))
(assert (axiom_int_approximation x3451))
(assert (axiom_int_approximation x3452))
(assert (axiom_int_approximation x3453))
(assert (axiom_int_approximation x3456))
(assert (axiom_int_approximation x3457))
(assert (axiom_int_approximation x3458))
(assert (axiom_int_approximation x3461))
(assert (axiom_int_approximation x3464))
(assert (axiom_int_approximation x3466))
(assert (axiom_int_approximation x3469))
(assert (axiom_int_approximation x3472))
(assert (axiom_int_approximation x3475))
(assert (axiom_int_approximation x3478))
(assert (axiom_int_approximation x348))
(assert (axiom_int_approximation x3480))
(assert (axiom_int_approximation x3483))
(assert (axiom_int_approximation x3484))
(assert (axiom_int_approximation x3487))
(assert (axiom_int_approximation x3489))
(assert (axiom_int_approximation x3491))
(assert (axiom_int_approximation x3493))
(assert (axiom_int_approximation x3495))
(assert (axiom_int_approximation x3496))
(assert (axiom_int_approximation x3497))
(assert (axiom_int_approximation x3498))
(assert (axiom_int_approximation x350))
(assert (axiom_int_approximation x3500))
(assert (axiom_int_approximation x3502))
(assert (axiom_int_approximation x3504))
(assert (axiom_int_approximation x3505))
(assert (axiom_int_approximation x3509))
(assert (axiom_int_approximation x3511))
(assert (axiom_int_approximation x3512))
(assert (axiom_int_approximation x3515))
(assert (axiom_int_approximation x3518))
(assert (axiom_int_approximation x3520))
(assert (axiom_int_approximation x3522))
(assert (axiom_int_approximation x3527))
(assert (axiom_int_approximation x3528))
(assert (axiom_int_approximation x3532))
(assert (axiom_int_approximation x3536))
(assert (axiom_int_approximation x3537))
(assert (axiom_int_approximation x3538))
(assert (axiom_int_approximation x354))
(assert (axiom_int_approximation x3540))
(assert (axiom_int_approximation x3541))
(assert (axiom_int_approximation x3544))
(assert (axiom_int_approximation x3545))
(assert (axiom_int_approximation x3548))
(assert (axiom_int_approximation x3549))
(assert (axiom_int_approximation x3550))
(assert (axiom_int_approximation x3552))
(assert (axiom_int_approximation x3555))
(assert (axiom_int_approximation x3559))
(assert (axiom_int_approximation x3560))
(assert (axiom_int_approximation x3561))
(assert (axiom_int_approximation x3567))
(assert (axiom_int_approximation x357))
(assert (axiom_int_approximation x3570))
(assert (axiom_int_approximation x3574))
(assert (axiom_int_approximation x3577))
(assert (axiom_int_approximation x358))
(assert (axiom_int_approximation x3580))
(assert (axiom_int_approximation x3582))
(assert (axiom_int_approximation x3583))
(assert (axiom_int_approximation x3584))
(assert (axiom_int_approximation x3585))
(assert (axiom_int_approximation x3586))
(assert (axiom_int_approximation x3589))
(assert (axiom_int_approximation x359))
(assert (axiom_int_approximation x3595))
(assert (axiom_int_approximation x3597))
(assert (axiom_int_approximation x3599))
(assert (axiom_int_approximation x36))
(assert (axiom_int_approximation x360))
(assert (axiom_int_approximation x3602))
(assert (axiom_int_approximation x3604))
(assert (axiom_int_approximation x3609))
(assert (axiom_int_approximation x3612))
(assert (axiom_int_approximation x3617))
(assert (axiom_int_approximation x3620))
(assert (axiom_int_approximation x3622))
(assert (axiom_int_approximation x3626))
(assert (axiom_int_approximation x3630))
(assert (axiom_int_approximation x3631))
(assert (axiom_int_approximation x3635))
(assert (axiom_int_approximation x3638))
(assert (axiom_int_approximation x3640))
(assert (axiom_int_approximation x3642))
(assert (axiom_int_approximation x3646))
(assert (axiom_int_approximation x3647))
(assert (axiom_int_approximation x3648))
(assert (axiom_int_approximation x3649))
(assert (axiom_int_approximation x365))
(assert (axiom_int_approximation x3650))
(assert (axiom_int_approximation x3652))
(assert (axiom_int_approximation x3656))
(assert (axiom_int_approximation x3658))
(assert (axiom_int_approximation x3659))
(assert (axiom_int_approximation x3660))
(assert (axiom_int_approximation x3661))
(assert (axiom_int_approximation x3664))
(assert (axiom_int_approximation x3667))
(assert (axiom_int_approximation x3668))
(assert (axiom_int_approximation x3669))
(assert (axiom_int_approximation x3670))
(assert (axiom_int_approximation x3674))
(assert (axiom_int_approximation x3675))
(assert (axiom_int_approximation x3676))
(assert (axiom_int_approximation x3677))
(assert (axiom_int_approximation x3678))
(assert (axiom_int_approximation x3679))
(assert (axiom_int_approximation x368))
(assert (axiom_int_approximation x3682))
(assert (axiom_int_approximation x3683))
(assert (axiom_int_approximation x3685))
(assert (axiom_int_approximation x3691))
(assert (axiom_int_approximation x3695))
(assert (axiom_int_approximation x3698))
(assert (axiom_int_approximation x37))
(assert (axiom_int_approximation x3700))
(assert (axiom_int_approximation x3704))
(assert (axiom_int_approximation x3708))
(assert (axiom_int_approximation x3710))
(assert (axiom_int_approximation x3713))
(assert (axiom_int_approximation x3714))
(assert (axiom_int_approximation x3717))
(assert (axiom_int_approximation x3719))
(assert (axiom_int_approximation x3722))
(assert (axiom_int_approximation x3725))
(assert (axiom_int_approximation x373))
(assert (axiom_int_approximation x3730))
(assert (axiom_int_approximation x3733))
(assert (axiom_int_approximation x3735))
(assert (axiom_int_approximation x3737))
(assert (axiom_int_approximation x3738))
(assert (axiom_int_approximation x374))
(assert (axiom_int_approximation x3742))
(assert (axiom_int_approximation x3749))
(assert (axiom_int_approximation x3753))
(assert (axiom_int_approximation x3755))
(assert (axiom_int_approximation x3756))
(assert (axiom_int_approximation x3757))
(assert (axiom_int_approximation x3758))
(assert (axiom_int_approximation x3759))
(assert (axiom_int_approximation x3761))
(assert (axiom_int_approximation x3762))
(assert (axiom_int_approximation x3763))
(assert (axiom_int_approximation x3764))
(assert (axiom_int_approximation x3769))
(assert (axiom_int_approximation x3770))
(assert (axiom_int_approximation x3771))
(assert (axiom_int_approximation x3772))
(assert (axiom_int_approximation x3774))
(assert (axiom_int_approximation x3777))
(assert (axiom_int_approximation x378))
(assert (axiom_int_approximation x3781))
(assert (axiom_int_approximation x3782))
(assert (axiom_int_approximation x3784))
(assert (axiom_int_approximation x3788))
(assert (axiom_int_approximation x3789))
(assert (axiom_int_approximation x3790))
(assert (axiom_int_approximation x3791))
(assert (axiom_int_approximation x3797))
(assert (axiom_int_approximation x3798))
(assert (axiom_int_approximation x38))
(assert (axiom_int_approximation x3800))
(assert (axiom_int_approximation x3801))
(assert (axiom_int_approximation x3802))
(assert (axiom_int_approximation x3806))
(assert (axiom_int_approximation x3808))
(assert (axiom_int_approximation x3809))
(assert (axiom_int_approximation x3810))
(assert (axiom_int_approximation x3812))
(assert (axiom_int_approximation x3813))
(assert (axiom_int_approximation x3814))
(assert (axiom_int_approximation x3819))
(assert (axiom_int_approximation x3820))
(assert (axiom_int_approximation x3821))
(assert (axiom_int_approximation x3822))
(assert (axiom_int_approximation x3824))
(assert (axiom_int_approximation x3827))
(assert (axiom_int_approximation x3830))
(assert (axiom_int_approximation x3832))
(assert (axiom_int_approximation x3836))
(assert (axiom_int_approximation x3839))
(assert (axiom_int_approximation x3840))
(assert (axiom_int_approximation x3841))
(assert (axiom_int_approximation x3846))
(assert (axiom_int_approximation x3848))
(assert (axiom_int_approximation x3850))
(assert (axiom_int_approximation x3852))
(assert (axiom_int_approximation x3854))
(assert (axiom_int_approximation x3856))
(assert (axiom_int_approximation x3857))
(assert (axiom_int_approximation x3858))
(assert (axiom_int_approximation x3862))
(assert (axiom_int_approximation x3865))
(assert (axiom_int_approximation x3867))
(assert (axiom_int_approximation x387))
(assert (axiom_int_approximation x3874))
(assert (axiom_int_approximation x3875))
(assert (axiom_int_approximation x3879))
(assert (axiom_int_approximation x3881))
(assert (axiom_int_approximation x3882))
(assert (axiom_int_approximation x3883))
(assert (axiom_int_approximation x3884))
(assert (axiom_int_approximation x3888))
(assert (axiom_int_approximation x3893))
(assert (axiom_int_approximation x3894))
(assert (axiom_int_approximation x3895))
(assert (axiom_int_approximation x3897))
(assert (axiom_int_approximation x3899))
(assert (axiom_int_approximation x390))
(assert (axiom_int_approximation x3902))
(assert (axiom_int_approximation x3903))
(assert (axiom_int_approximation x3909))
(assert (axiom_int_approximation x3910))
(assert (axiom_int_approximation x3913))
(assert (axiom_int_approximation x3916))
(assert (axiom_int_approximation x3917))
(assert (axiom_int_approximation x3918))
(assert (axiom_int_approximation x3920))
(assert (axiom_int_approximation x3923))
(assert (axiom_int_approximation x3925))
(assert (axiom_int_approximation x3926))
(assert (axiom_int_approximation x3927))
(assert (axiom_int_approximation x3928))
(assert (axiom_int_approximation x393))
(assert (axiom_int_approximation x3930))
(assert (axiom_int_approximation x3931))
(assert (axiom_int_approximation x3936))
(assert (axiom_int_approximation x3937))
(assert (axiom_int_approximation x3943))
(assert (axiom_int_approximation x3947))
(assert (axiom_int_approximation x3949))
(assert (axiom_int_approximation x395))
(assert (axiom_int_approximation x3953))
(assert (axiom_int_approximation x3954))
(assert (axiom_int_approximation x3956))
(assert (axiom_int_approximation x3964))
(assert (axiom_int_approximation x3968))
(assert (axiom_int_approximation x3972))
(assert (axiom_int_approximation x3973))
(assert (axiom_int_approximation x3975))
(assert (axiom_int_approximation x3980))
(assert (axiom_int_approximation x3983))
(assert (axiom_int_approximation x3985))
(assert (axiom_int_approximation x3989))
(assert (axiom_int_approximation x3991))
(assert (axiom_int_approximation x3995))
(assert (axiom_int_approximation x3996))
(assert (axiom_int_approximation x3998))
(assert (axiom_int_approximation x4))
(assert (axiom_int_approximation x4000))
(assert (axiom_int_approximation x4001))
(assert (axiom_int_approximation x4002))
(assert (axiom_int_approximation x4009))
(assert (axiom_int_approximation x4012))
(assert (axiom_int_approximation x4013))
(assert (axiom_int_approximation x4016))
(assert (axiom_int_approximation x4017))
(assert (axiom_int_approximation x4018))
(assert (axiom_int_approximation x4019))
(assert (axiom_int_approximation x402))
(assert (axiom_int_approximation x4020))
(assert (axiom_int_approximation x4022))
(assert (axiom_int_approximation x403))
(assert (axiom_int_approximation x4030))
(assert (axiom_int_approximation x4031))
(assert (axiom_int_approximation x4033))
(assert (axiom_int_approximation x4034))
(assert (axiom_int_approximation x404))
(assert (axiom_int_approximation x4041))
(assert (axiom_int_approximation x4043))
(assert (axiom_int_approximation x4044))
(assert (axiom_int_approximation x4045))
(assert (axiom_int_approximation x4046))
(assert (axiom_int_approximation x4048))
(assert (axiom_int_approximation x4050))
(assert (axiom_int_approximation x4052))
(assert (axiom_int_approximation x4053))
(assert (axiom_int_approximation x4055))
(assert (axiom_int_approximation x4056))
(assert (axiom_int_approximation x4057))
(assert (axiom_int_approximation x4059))
(assert (axiom_int_approximation x4066))
(assert (axiom_int_approximation x4067))
(assert (axiom_int_approximation x4068))
(assert (axiom_int_approximation x4070))
(assert (axiom_int_approximation x4073))
(assert (axiom_int_approximation x4075))
(assert (axiom_int_approximation x4078))
(assert (axiom_int_approximation x4080))
(assert (axiom_int_approximation x4081))
(assert (axiom_int_approximation x4085))
(assert (axiom_int_approximation x4086))
(assert (axiom_int_approximation x4089))
(assert (axiom_int_approximation x409))
(assert (axiom_int_approximation x4092))
(assert (axiom_int_approximation x4102))
(assert (axiom_int_approximation x4103))
(assert (axiom_int_approximation x4104))
(assert (axiom_int_approximation x4107))
(assert (axiom_int_approximation x4108))
(assert (axiom_int_approximation x4109))
(assert (axiom_int_approximation x4111))
(assert (axiom_int_approximation x4115))
(assert (axiom_int_approximation x4117))
(assert (axiom_int_approximation x4120))
(assert (axiom_int_approximation x4123))
(assert (axiom_int_approximation x4128))
(assert (axiom_int_approximation x4131))
(assert (axiom_int_approximation x4132))
(assert (axiom_int_approximation x4134))
(assert (axiom_int_approximation x4135))
(assert (axiom_int_approximation x4139))
(assert (axiom_int_approximation x4140))
(assert (axiom_int_approximation x4143))
(assert (axiom_int_approximation x4144))
(assert (axiom_int_approximation x4145))
(assert (axiom_int_approximation x4149))
(assert (axiom_int_approximation x4150))
(assert (axiom_int_approximation x4152))
(assert (axiom_int_approximation x4154))
(assert (axiom_int_approximation x4156))
(assert (axiom_int_approximation x4158))
(assert (axiom_int_approximation x4159))
(assert (axiom_int_approximation x416))
(assert (axiom_int_approximation x4160))
(assert (axiom_int_approximation x4163))
(assert (axiom_int_approximation x4165))
(assert (axiom_int_approximation x4166))
(assert (axiom_int_approximation x4168))
(assert (axiom_int_approximation x417))
(assert (axiom_int_approximation x4173))
(assert (axiom_int_approximation x4178))
(assert (axiom_int_approximation x4182))
(assert (axiom_int_approximation x4183))
(assert (axiom_int_approximation x4189))
(assert (axiom_int_approximation x419))
(assert (axiom_int_approximation x4191))
(assert (axiom_int_approximation x4192))
(assert (axiom_int_approximation x4193))
(assert (axiom_int_approximation x4194))
(assert (axiom_int_approximation x4195))
(assert (axiom_int_approximation x42))
(assert (axiom_int_approximation x4203))
(assert (axiom_int_approximation x4205))
(assert (axiom_int_approximation x4206))
(assert (axiom_int_approximation x4207))
(assert (axiom_int_approximation x4210))
(assert (axiom_int_approximation x4211))
(assert (axiom_int_approximation x4212))
(assert (axiom_int_approximation x4213))
(assert (axiom_int_approximation x4215))
(assert (axiom_int_approximation x4216))
(assert (axiom_int_approximation x4217))
(assert (axiom_int_approximation x4219))
(assert (axiom_int_approximation x422))
(assert (axiom_int_approximation x4220))
(assert (axiom_int_approximation x4221))
(assert (axiom_int_approximation x4225))
(assert (axiom_int_approximation x4227))
(assert (axiom_int_approximation x4228))
(assert (axiom_int_approximation x4229))
(assert (axiom_int_approximation x423))
(assert (axiom_int_approximation x4230))
(assert (axiom_int_approximation x4233))
(assert (axiom_int_approximation x4234))
(assert (axiom_int_approximation x4235))
(assert (axiom_int_approximation x4236))
(assert (axiom_int_approximation x424))
(assert (axiom_int_approximation x4240))
(assert (axiom_int_approximation x4241))
(assert (axiom_int_approximation x4242))
(assert (axiom_int_approximation x4246))
(assert (axiom_int_approximation x425))
(assert (axiom_int_approximation x4251))
(assert (axiom_int_approximation x4253))
(assert (axiom_int_approximation x4258))
(assert (axiom_int_approximation x426))
(assert (axiom_int_approximation x4260))
(assert (axiom_int_approximation x4261))
(assert (axiom_int_approximation x4262))
(assert (axiom_int_approximation x4263))
(assert (axiom_int_approximation x4264))
(assert (axiom_int_approximation x4265))
(assert (axiom_int_approximation x4268))
(assert (axiom_int_approximation x4270))
(assert (axiom_int_approximation x4271))
(assert (axiom_int_approximation x4273))
(assert (axiom_int_approximation x4277))
(assert (axiom_int_approximation x4278))
(assert (axiom_int_approximation x4286))
(assert (axiom_int_approximation x4288))
(assert (axiom_int_approximation x4294))
(assert (axiom_int_approximation x4299))
(assert (axiom_int_approximation x43))
(assert (axiom_int_approximation x430))
(assert (axiom_int_approximation x4300))
(assert (axiom_int_approximation x431))
(assert (axiom_int_approximation x434))
(assert (axiom_int_approximation x435))
(assert (axiom_int_approximation x44))
(assert (axiom_int_approximation x441))
(assert (axiom_int_approximation x442))
(assert (axiom_int_approximation x445))
(assert (axiom_int_approximation x451))
(assert (axiom_int_approximation x454))
(assert (axiom_int_approximation x457))
(assert (axiom_int_approximation x458))
(assert (axiom_int_approximation x459))
(assert (axiom_int_approximation x460))
(assert (axiom_int_approximation x461))
(assert (axiom_int_approximation x462))
(assert (axiom_int_approximation x474))
(assert (axiom_int_approximation x476))
(assert (axiom_int_approximation x487))
(assert (axiom_int_approximation x492))
(assert (axiom_int_approximation x493))
(assert (axiom_int_approximation x494))
(assert (axiom_int_approximation x495))
(assert (axiom_int_approximation x496))
(assert (axiom_int_approximation x498))
(assert (axiom_int_approximation x5))
(assert (axiom_int_approximation x501))
(assert (axiom_int_approximation x503))
(assert (axiom_int_approximation x509))
(assert (axiom_int_approximation x51))
(assert (axiom_int_approximation x510))
(assert (axiom_int_approximation x511))
(assert (axiom_int_approximation x512))
(assert (axiom_int_approximation x513))
(assert (axiom_int_approximation x521))
(assert (axiom_int_approximation x522))
(assert (axiom_int_approximation x525))
(assert (axiom_int_approximation x527))
(assert (axiom_int_approximation x529))
(assert (axiom_int_approximation x533))
(assert (axiom_int_approximation x535))
(assert (axiom_int_approximation x536))
(assert (axiom_int_approximation x537))
(assert (axiom_int_approximation x539))
(assert (axiom_int_approximation x544))
(assert (axiom_int_approximation x547))
(assert (axiom_int_approximation x548))
(assert (axiom_int_approximation x551))
(assert (axiom_int_approximation x552))
(assert (axiom_int_approximation x558))
(assert (axiom_int_approximation x56))
(assert (axiom_int_approximation x561))
(assert (axiom_int_approximation x566))
(assert (axiom_int_approximation x568))
(assert (axiom_int_approximation x569))
(assert (axiom_int_approximation x570))
(assert (axiom_int_approximation x572))
(assert (axiom_int_approximation x578))
(assert (axiom_int_approximation x579))
(assert (axiom_int_approximation x58))
(assert (axiom_int_approximation x580))
(assert (axiom_int_approximation x583))
(assert (axiom_int_approximation x584))
(assert (axiom_int_approximation x585))
(assert (axiom_int_approximation x589))
(assert (axiom_int_approximation x59))
(assert (axiom_int_approximation x591))
(assert (axiom_int_approximation x594))
(assert (axiom_int_approximation x604))
(assert (axiom_int_approximation x607))
(assert (axiom_int_approximation x61))
(assert (axiom_int_approximation x612))
(assert (axiom_int_approximation x615))
(assert (axiom_int_approximation x621))
(assert (axiom_int_approximation x628))
(assert (axiom_int_approximation x633))
(assert (axiom_int_approximation x636))
(assert (axiom_int_approximation x637))
(assert (axiom_int_approximation x638))
(assert (axiom_int_approximation x640))
(assert (axiom_int_approximation x645))
(assert (axiom_int_approximation x646))
(assert (axiom_int_approximation x648))
(assert (axiom_int_approximation x652))
(assert (axiom_int_approximation x653))
(assert (axiom_int_approximation x662))
(assert (axiom_int_approximation x665))
(assert (axiom_int_approximation x666))
(assert (axiom_int_approximation x669))
(assert (axiom_int_approximation x671))
(assert (axiom_int_approximation x675))
(assert (axiom_int_approximation x679))
(assert (axiom_int_approximation x687))
(assert (axiom_int_approximation x690))
(assert (axiom_int_approximation x697))
(assert (axiom_int_approximation x70))
(assert (axiom_int_approximation x702))
(assert (axiom_int_approximation x704))
(assert (axiom_int_approximation x708))
(assert (axiom_int_approximation x711))
(assert (axiom_int_approximation x713))
(assert (axiom_int_approximation x715))
(assert (axiom_int_approximation x716))
(assert (axiom_int_approximation x719))
(assert (axiom_int_approximation x723))
(assert (axiom_int_approximation x724))
(assert (axiom_int_approximation x727))
(assert (axiom_int_approximation x729))
(assert (axiom_int_approximation x730))
(assert (axiom_int_approximation x731))
(assert (axiom_int_approximation x732))
(assert (axiom_int_approximation x734))
(assert (axiom_int_approximation x735))
(assert (axiom_int_approximation x736))
(assert (axiom_int_approximation x738))
(assert (axiom_int_approximation x739))
(assert (axiom_int_approximation x74))
(assert (axiom_int_approximation x745))
(assert (axiom_int_approximation x749))
(assert (axiom_int_approximation x750))
(assert (axiom_int_approximation x754))
(assert (axiom_int_approximation x757))
(assert (axiom_int_approximation x758))
(assert (axiom_int_approximation x76))
(assert (axiom_int_approximation x764))
(assert (axiom_int_approximation x765))
(assert (axiom_int_approximation x769))
(assert (axiom_int_approximation x773))
(assert (axiom_int_approximation x774))
(assert (axiom_int_approximation x775))
(assert (axiom_int_approximation x777))
(assert (axiom_int_approximation x78))
(assert (axiom_int_approximation x782))
(assert (axiom_int_approximation x783))
(assert (axiom_int_approximation x784))
(assert (axiom_int_approximation x787))
(assert (axiom_int_approximation x79))
(assert (axiom_int_approximation x792))
(assert (axiom_int_approximation x794))
(assert (axiom_int_approximation x795))
(assert (axiom_int_approximation x797))
(assert (axiom_int_approximation x8))
(assert (axiom_int_approximation x80))
(assert (axiom_int_approximation x801))
(assert (axiom_int_approximation x802))
(assert (axiom_int_approximation x805))
(assert (axiom_int_approximation x806))
(assert (axiom_int_approximation x808))
(assert (axiom_int_approximation x809))
(assert (axiom_int_approximation x81))
(assert (axiom_int_approximation x811))
(assert (axiom_int_approximation x814))
(assert (axiom_int_approximation x816))
(assert (axiom_int_approximation x817))
(assert (axiom_int_approximation x820))
(assert (axiom_int_approximation x821))
(assert (axiom_int_approximation x822))
(assert (axiom_int_approximation x825))
(assert (axiom_int_approximation x830))
(assert (axiom_int_approximation x832))
(assert (axiom_int_approximation x834))
(assert (axiom_int_approximation x836))
(assert (axiom_int_approximation x837))
(assert (axiom_int_approximation x838))
(assert (axiom_int_approximation x84))
(assert (axiom_int_approximation x840))
(assert (axiom_int_approximation x841))
(assert (axiom_int_approximation x843))
(assert (axiom_int_approximation x848))
(assert (axiom_int_approximation x85))
(assert (axiom_int_approximation x850))
(assert (axiom_int_approximation x854))
(assert (axiom_int_approximation x855))
(assert (axiom_int_approximation x861))
(assert (axiom_int_approximation x863))
(assert (axiom_int_approximation x864))
(assert (axiom_int_approximation x867))
(assert (axiom_int_approximation x868))
(assert (axiom_int_approximation x870))
(assert (axiom_int_approximation x871))
(assert (axiom_int_approximation x876))
(assert (axiom_int_approximation x878))
(assert (axiom_int_approximation x879))
(assert (axiom_int_approximation x88))
(assert (axiom_int_approximation x881))
(assert (axiom_int_approximation x883))
(assert (axiom_int_approximation x887))
(assert (axiom_int_approximation x888))
(assert (axiom_int_approximation x89))
(assert (axiom_int_approximation x890))
(assert (axiom_int_approximation x895))
(assert (axiom_int_approximation x898))
(assert (axiom_int_approximation x9))
(assert (axiom_int_approximation x902))
(assert (axiom_int_approximation x906))
(assert (axiom_int_approximation x907))
(assert (axiom_int_approximation x91))
(assert (axiom_int_approximation x910))
(assert (axiom_int_approximation x912))
(assert (axiom_int_approximation x913))
(assert (axiom_int_approximation x921))
(assert (axiom_int_approximation x928))
(assert (axiom_int_approximation x930))
(assert (axiom_int_approximation x933))
(assert (axiom_int_approximation x936))
(assert (axiom_int_approximation x937))
(assert (axiom_int_approximation x938))
(assert (axiom_int_approximation x94))
(assert (axiom_int_approximation x940))
(assert (axiom_int_approximation x942))
(assert (axiom_int_approximation x943))
(assert (axiom_int_approximation x944))
(assert (axiom_int_approximation x947))
(assert (axiom_int_approximation x949))
(assert (axiom_int_approximation x951))
(assert (axiom_int_approximation x952))
(assert (axiom_int_approximation x953))
(assert (axiom_int_approximation x954))
(assert (axiom_int_approximation x955))
(assert (axiom_int_approximation x958))
(assert (axiom_int_approximation x960))
(assert (axiom_int_approximation x961))
(assert (axiom_int_approximation x962))
(assert (axiom_int_approximation x963))
(assert (axiom_int_approximation x967))
(assert (axiom_int_approximation x968))
(assert (axiom_int_approximation x969))
(assert (axiom_int_approximation x972))
(assert (axiom_int_approximation x973))
(assert (axiom_int_approximation x980))
(assert (axiom_int_approximation x982))
(assert (axiom_int_approximation x983))
(assert (axiom_int_approximation x984))
(assert (axiom_int_approximation x992))
(assert (axiom_int_approximation x993))
(assert (axiom_int_approximation x995))
(assert (axiom_int_approximation x996))
(assert (axiom_int_approximation x997))
(assert (axiom_int_approximation x999))
(assert (x3207 x3936))
(assert (= (and x3233 x3878) x3715))
(assert (x3207 x2462))
(assert (= (ite (and x207 (not x3115) x64 x2649 x2541 x3165) (x2396 x2085) (ite (and x2541 x3165 (not x2649) x64 x207) (x1924 x2085) (ite (and x2541 x64 (not x207) x3165) (x2625 x2085) (ite (and (not x64) x3165 x2541) (x2043 x2085) (x20 x2085))))) (x190 x2085)))
(assert (x3207 x2740))
(assert (= (=> (and (not (= x1802 1889567281)) (not (< x1802 826074471)) (= x1802 2835717307) (= x535 68) (= (or (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1989)) (> 64 x1989)) (> x1989 57896044618658097711785492504343953926634992332820282019728792003956564819967)) x2621) (not (= 2514000705 x1802)) (= x888 x2937) (not (= 826074471 x1802)) (= x1989 (x3402 (- x535 4))) (= 76450787359836037641860180984291677749980919077056822294353438043884394381312 x879) (not (< x535 4)) (= (x3060 (x2562 274184521717934524641157099916833587202)) x2040) (= x3223 x89) (= x535 x1752) (> x2040 0)) (and (=> x2621 x2505) (=> (not x2621) x3190))) x155))
(assert (x657 x3916 x992))
(assert (x3207 x547))
(assert (x3207 x511))
(assert (x3207 x731))
(assert (= x828 (=> (and (= x1788 (x2515 (+ x2297 64))) (= (= 0 x2308) x2238) (= (x3037 x3195 x913) x3567) (= x1228 (x2515 (+ 480 x1316))) (= x449 (= x3567 0)) (= x3881 (- (/ 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1229) (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1229))) (= (ite (< x3881 x584) 1 0) x913) (= (ite (not x2238) 1 0) x3195) (= x2341 (x2515 (+ x1316 160)))) (and (=> (not x449) x3106) (=> x449 x1134)))))
(assert (= (and (not x1061) x590) x2314))
(assert (= (ite (= x492 x999) x890 (x1371 x999)) (x3077 x999)))
(assert (= x3645 (or (and x759 x2139) (and x1431 x371) (and x2076 x3459) (and x4170 x254) (and x1498 (not x1388)) (and x1255 x2621))))
(assert (x3207 x2964))
(assert (= (and x3285 (not x3960)) x3095))
(assert (x3207 x36))
(assert (x3207 x769))
(assert (= (ite (= x422 x817) x3522 (x923 x817)) (x744 x817)))
(assert (x3207 x3897))
(assert (= (ite (= x637 x1742) x1658 (x842 x1742)) (x1298 x1742)))
(assert (= (x1924 x374) (ite (= x2977 x374) x4123 (x2625 x374))))
(assert (x2954 x368))
(assert (x3207 x244))
(assert (x3207 x1899))
(assert (= (x744 x2085) (ite (= x2085 x422) x3522 (x923 x2085))))
(assert (= (x2637 x938) (ite (and (not x427) x1955 x3892) (x1922 x938) (x549 x938))))
(assert (= (or (and x874 x1862) (and x3547 (not x3387))) x826))
(assert (x3207 x1030))
(assert (x3207 x3617))
(assert (x3207 x1957))
(assert (= x3729 (and (not x4121) x2242)))
(assert (x188 x3008))
(assert (= (ite (= x3433 x2429) x2731 (x3392 x3433)) (x1880 x3433)))
(assert (= (ite (= x2253 x2804) x1502 (x394 x2804)) (x4255 x2804)))
(assert (= (x3077 x1263) (ite (= x1263 x492) x890 (x1371 x1263))))
(assert (= x4174 (=> (= (= x3448 274184521717934524641157099916833587202) x2622) (and (=> (not x2622) x3262) (=> (and (> x2811 0) (not (< x868 826074471)) (not (= x868 826074471)) (= 50942633119752846454219349998365661925608737367104304655302372697894809501696 x4159) (= 1889567281 x868) (not (> 4 x2495)) (= 36 x2495) (= (x3402 (- x2495 4)) x403) (= (or (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x403)) (< x403 32)) (> x403 57896044618658097711785492504343953926634992332820282019728792003956564819967)) x664) (= x2495 x451) (= (x3060 (x2562 274184521717934524641157099916833587202)) x2811) (or (and (= 32 x88) (not x664) (= (x372 (x2562 274184521717934524641157099916833587240) (x3377 1) 0) x1438) (>= x811 0) (<= x811 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= 274184521717934524641157099916833587240 x3103) (= x787 1) (= (x673 x1438) x811)) (and x664 (= 0 x787) (= x88 x4160))) x2622) x2775)))))
(assert (= (x4223 x1465) (ite (= x4143 x1465) x4131 (x2220 x1465))))
(assert (= (ite (= x637 x817) x1658 (x842 x817)) (x1298 x817)))
(assert (= (ite (= x2537 x2977) x4123 (x2625 x2537)) (x1924 x2537)))
(assert (= (ite (and x3892 x1955 (not x427)) (x1922 x2482) (x549 x2482)) (x2637 x2482)))
(assert (x3207 x3443))
(assert (x3207 x2246))
(assert (= (x2115 x3440) (ite (= x3440 (x3377 0)) x3798 (x4026 x3440))))
(assert (x3207 x3176))
(assert (= (x3990 x3093) (ite (and x2270 x311 x581 (not x631) x2608 x4093) (x2837 x3093) (ite (and x2270 (not x2608) x581 x4093 x311) (x3077 x3093) (ite (and x2270 x311 (not x4093) x581) (x1371 x3093) (ite (and x2270 (not x581) x311) (x518 x3093) (x3794 x3093)))))))
(assert (= (ite (and (not x427) x1955 x3892) (x1922 x1742) (x549 x1742)) (x2637 x1742)))
(assert (x3207 x3585))
(assert (= (and x2602 (not x2162)) x812))
(assert (= (and x2547 x2208) x222))
(assert (x3207 x3937))
(assert (= x356 (or x100 (and x4237 (not x4231)))))
(assert (= (x518 x417) (ite (= x417 x1678) x3841 (x2757 x417))))
(assert (= x844 (and x2609 (not x3607))))
(assert (= 0 (x1197 x938)))
(assert (= x93 (and x3603 x2050)))
(assert (x3207 x1364))
(assert (x3207 x1067))
(assert (x3207 x2483))
(assert (= (or x614 (and x3736 (not x2593))) x1561))
(assert (x188 x2964))
(assert (= (x3161 (x3377 0)) (ite (= x4010 (x3377 0)) x1540 (x1601 (x3377 0)))))
(assert (= (=> (and (= x1067 (x3402 (- x1335 1))) (= (> x1266 115792089237316195423570985008687907853269984665640564039457584007913129639934) x1877) (= (x372 (x2562 274184521717934524641157099916833587240) (x3377 209) 0) x3276) (= x1266 (x3172 x3276))) (and (=> x1877 x2260) (=> (and (= x2540 0) (= (x3037 115792089237316195423570985007226406215939081747436879206741300988257197096960 x1781) x358) (= x462 (x2515 (+ 1 x1266))) (= x4225 (x2515 (+ 274184521717934524641157099916833587240 x358))) (= x382 (x372 (x2562 x878) (x3377 208) 0)) (= x1153 1) (not x1877) (= (x647 x382) x1781)) x1774))) x2554))
(assert (= (x2562 2514000705) (x3377 2514000705)))
(assert (= (and x894 x603) x2503))
(assert (x188 x3635))
(assert (x3207 x1856))
(assert (= (ite (= x2789 x1742) x1703 (x1924 x1742)) (x2396 x1742)))
(assert (= x545 (and x1975 (not x1085))))
(assert (= (=> (and (= x3959 (= 0 x2459)) (= (= (ite x4301 1 0) x2459) x3233) (= (x2515 (+ x1263 32)) x2010) (= (not x3959) x4301) (= x2459 (x148 x2010))) (and (=> (not x3233) x3106) (=> x3233 x2891))) x2101))
(assert (= (x3990 x1788) (ite (and x581 x2270 (not x631) x311 x4093 x2608) (x2837 x1788) (ite (and x581 x4093 x2270 x311 (not x2608)) (x3077 x1788) (ite (and x311 (not x4093) x2270 x581) (x1371 x1788) (ite (and (not x581) x311 x2270) (x518 x1788) (x3794 x1788)))))))
(assert (= (x3641 (x3377 455944412)) 455944412))
(assert (= (x2125 x783) (ite (and (not x2339) x919 x1630) (x396 x783) (x3992 x783))))
(assert (x3207 x2061))
(assert (= (and (not x3637) x3590) x2592))
(assert (= (ite (= x4182 x817) x1682 (x1668 x817)) (x3392 x817)))
(assert (= 0 (x2265 (- x2010 x4135))))
(assert (x188 x834))
(assert (= (=> (and (= (and (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3086) (<= 0 x3926)) x2825) (= (x3040 (x2562 x3879)) x3086) (= (x3040 (x2562 274184521717934524641157099916833587240)) x3926) (= x3457 x165)) (and (=> (and (not x2825) (= x3862 0) (= 0 x234)) x2167) (=> x2825 x1842))) x1201))
(assert (= (x1298 x4193) (ite (= x637 x4193) x1658 (x842 x4193))))
(assert (= x1354 (and x3387 x3547)))
(assert (= (x2637 x3317) (ite (and x3892 x1955 (not x427)) (x1922 x3317) (x549 x3317))))
(assert (x3207 x4193))
(assert (x3207 x3652))
(assert (x3207 x4031))
(assert (= x1661 (or (and x332 (not x681)) (and x1916 x3715))))
(assert (x3207 x4203))
(assert (x3207 x2194))
(assert (= (and x565 (not x4197)) x3663))
(assert (= (ite (= x67 (x3377 0)) x3798 (x4026 x67)) (x2115 x67)))
(assert (= (ite (= x2789 x209) x1703 (x1924 x209)) (x2396 x209)))
(assert (= (ite (= x2702 x3044) x147 (x518 x3044)) (x1371 x3044)))
(assert (= (x190 x1742) (ite (and x207 x2649 x3165 (not x3115) x64 x2541) (x2396 x1742) (ite (and x64 x2541 x207 (not x2649) x3165) (x1924 x1742) (ite (and x3165 x2541 x64 (not x207)) (x2625 x1742) (ite (and x3165 x2541 (not x64)) (x2043 x1742) (x20 x1742)))))))
(assert (x3207 x4135))
(assert (= (x1197 192) 0))
(assert (x3207 x2053))
(assert (= (x3377 404098525) (x2562 404098525)))
(assert (x2954 x36))
(assert (= (and (not x1892) x123) x3845))
(assert (x657 x2048 x2255))
(assert (= (=> (and (= x1811 (- (/ x1451 100) (uninterp_frac x1451 100))) (= x1220 (x2323 (x3377 1))) (= (x3037 18446744073709551615 x2698) x1557) (= (x2515 (+ 64 x4104)) x2318) (= x3118 (x2515 (+ 64 x2318))) (= (x3402 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4158)) x4189) (= x3834 (> x2698 x4189)) (= x4158 (x3037 18446744073709551615 x1220)) (= (x3037 1461501637330902918203684832716283019655932542975 x1445) x1564) (= (x2515 (+ x2494 64)) x1143) (= (x3037 1461501637330902918203684832716283019655932542975 x2599) x4016) (= (uninterp_mod (* x1290 x522) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x1451) (= (x2515 (+ x3910 64)) x2494)) (and (=> (not x3834) x71) (=> x3834 x1614))) x598))
(assert (= (=> (and (= (x3037 1461501637330902918203684832716283019655932542975 x2651) x1464) (= x3350 (not (= x1464 0))) (= x2651 (x3161 x691)) (= (x372 (x2562 x2202) (x3377 208) 0) x691)) (and (=> (and (or (and (= x2587 x3597) (not x12) (= (x372 (x2562 x2093) (x3377 211) 0) x1055) (= (x3161 x1547) x729) (= (x3037 255 x729) x2587) (= (x372 (x2562 274184521717934524641157099916833587240) x1055 0) x1547)) (and x12 (= x3597 (ite x12 1 0)))) (= (x372 (x2562 x2202) (x3377 210) 0) x2798) (= (x3161 x2798) x1737) x3350 (= (x3037 1461501637330902918203684832716283019655932542975 x1737) x3875) (= (= x3875 274184521717934524641157099916833587240) x12)) x2256) (=> (not x3350) x1360))) x330))
(assert (x3207 x3902))
(assert (= (x2637 x2413) (ite (and x3892 (not x427) x1955) (x1922 x2413) (x549 x2413))))
(assert (= 0 (x2265 (- x3093 x4135))))
(assert (= (x1668 x2413) (ite (= x1414 x2413) x4020 (x744 x2413))))
(assert (= (and x2946 x2580) x1471))
(assert (x3207 x232))
(assert (= (and x1505 x2526) x2547))
(assert (= (ite (= x2464 x4065) x3647 (x2115 x4065)) (x1363 x4065)))
(assert (= (and x2806 (not x835)) x3256))
(assert (x3207 x3789))
(assert (x3207 x2574))
(assert (x2954 x3991))
(assert (= (x3553 x46) (ite (= x46 x1969) x2633 (x1967 x46))))
(assert (= (x1371 x2402) (ite (= x2702 x2402) x147 (x518 x2402))))
(assert (= (ite (= x2402 x3308) x307 (x2245 x2402)) (x440 x2402)))
(assert (= (x2055 x1788) (ite (= x1788 x2227) 98474297345890754025501882143967591664980152141971839855651084132735363579904 (x2668 x1788))))
(assert (= (x3077 x1788) (ite (= x492 x1788) x890 (x1371 x1788))))
(assert (=> (> (+ 10000 1) x487) (= (x2562 x487) (x3377 x487))))
(assert (= (and (not x2822) x2904) x4151))
(assert (= (x126 x417) (ite (= x417 x1228) x3067 (x1442 x417))))
(assert (x188 x3580))
(assert (x3207 x1676))
(assert (x3207 x37))
(assert (= (=> (= (= x139 274184521717934524641157099916833587202) x1857) (and (=> (and (not (< x636 4)) (not (> 826074471 x1867)) (= (x3402 (- x636 4)) x13) (= 50942633119752846454219349998365661925608737367104304655302372697894809501696 x1450) (= x1683 (or (> x13 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= true (<= x13 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (> 32 x13)))) (= x1867 1889567281) (or (and (= 274184521717934524641157099916833587240 x1826) (= x2352 32) (not x1683) (= (x4023 x277) x3548) (= 1 x3094) (>= x3548 0) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3548) (= x277 (x372 (x2562 274184521717934524641157099916833587240) (x3377 1) 0))) (and (= x3094 0) x1683 (= x2352 x1545))) (= x3269 x636) (not (= x1867 826074471)) (= x636 36) (= (x3060 (x2562 274184521717934524641157099916833587202)) x645) (> x645 0) x1857) x497) (=> (not x1857) x2723))) x1250))
(assert (x3825 x289 x1762))
(assert (= (ite (= x2474 x2104) x199 (x362 x2104)) (x2043 x2104)))
(assert (= (ite (and x3423 x3056 (not x2859) x483 x2509 x4071) (x3436 x1263) (ite (and x2509 x4071 (not x483) x3423 x3056) (x979 x1263) (ite (and x2509 x3423 x4071 (not x3056)) (x3898 x1263) (ite (and x3423 (not x2509) x4071) (x1528 x1263) (x1623 x1263))))) (x3052 x1263)))
(assert (= (ite (and x3779 x617) (x1039 x2413) (x2497 x2413)) (x257 x2413)))
(assert (= (x744 x3910) (ite (= x3910 x422) x3522 (x923 x3910))))
(assert (x3207 x1453))
(assert (= (x3377 115792089237316195423570985008687907853269984665640564039457584007913129639680) (x2562 115792089237316195423570985008687907853269984665640564039457584007913129639680)))
(assert (= (x1214 x960) (ite (= x960 x2005) 274184521717934524641157099916833587240 (x4226 x960))))
(assert (x3207 x3622))
(assert (= (or (and (not x2166) x2098) x2267) x2199))
(assert (x3207 x94))
(assert (= (x126 x3487) (ite (= x3487 x1228) x3067 (x1442 x3487))))
(assert (= (x1528 x3789) (ite (= x1844 x3789) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x3826 x3789))))
(assert (= (x695 x2313) (ite (and x3779 x617) (ite (and x2586 (not x3613) x1060) (x2353 x2313) (x3011 x2313)) (x3011 x2313))))
(assert (x3207 x2197))
(assert (= (x2425 x783) (ite (= x1406 x783) x4102 (x3278 x783))))
(assert (= (ite (and x2541 x207 x64 (not x3115) x2649 x3165) (x2396 x10) (ite (and x3165 x207 x64 (not x2649) x2541) (x1924 x10) (ite (and x2541 (not x207) x64 x3165) (x2625 x10) (ite (and x3165 x2541 (not x64)) (x2043 x10) (x20 x10))))) (x190 x10)))
(assert (x3207 x457))
(assert (x3207 x2383))
(assert (=> (< (- x3669 1) 10000) (= (x3377 x3669) (x2562 x3669))))
(assert (=> (< (- x4056 1) 10000) (= (x3377 x4056) (x2562 x4056))))
(assert (x3207 x1564))
(assert (= (and x3330 x1583) x4218))
(assert (=> (< (- x474 1) 10000) (= (x2562 x474) (x3377 x474))))
(assert (= (x3641 (x2562 x2916)) x2916))
(assert (= (x1338 x1748) (ite (= x682 x1748) x1845 (x1488 x1748))))
(assert (x3207 x1890))
(assert (x3207 x373))
(assert (= (uninterp_mod (* 79228162514264337593543950336 x3358) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x3619 x3358 96)))
(assert (x3207 x2916))
(assert (x3207 x1805))
(assert (= (x744 x4213) (ite (= x4213 x422) x3522 (x923 x4213))))
(assert (x3207 x3028))
(assert (x3207 x1611))
(assert (= (uninterp_mod (* 79228162514264337593543950336 x1604) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x3619 x1604 96)))
(assert (x2832 x3710 x1835))
(assert (x3207 x1985))
(assert (x3207 x2352))
(assert (= (and (not x2422) x1622) x667))
(assert (= (ite (and (not x92) x2541 x3165) (x190 x2085) (x4112 x2085)) (x641 x2085)))
(assert (x3207 x913))
(assert (= (x2369 x382) (ite (= (x3377 0) x382) x2794 (x3228 x382))))
(assert (x3207 x3444))
(assert (= (ite (= x2474 x1111) x199 (x362 x1111)) (x2043 x1111)))
(assert (x3207 x3089))
(assert (= (and x1129 x2439) x516))
(assert (x188 x3764))
(assert (= (ite (= x3194 x1143) x2368 (x2043 x1143)) (x2625 x1143)))
(assert (x3207 x2744))
(assert (x3207 x1951))
(assert (= (ite (and x296 x650 (not x1914)) (x116 x2010) (x2055 x2010)) (x858 x2010)))
(assert (= (x3436 x3093) (ite (= x2595 x3093) x3561 (x979 x3093))))
(assert (= (ite (= x3300 x3343) 0 (x1144 x3300)) (x3492 x3300)))
(assert (= (ite (= x802 x2590) x1749 (x3842 x802)) (x2220 x802)))
(assert (x3207 x1399))
(assert (= (ite (= x2977 x4213) x4123 (x2625 x4213)) (x1924 x4213)))
(assert (= (ite (= x1969 x2894) x2633 (x1967 x2894)) (x3553 x2894)))
(assert (x3207 x2096))
(assert (x188 x1675))
(assert (x3207 x1525))
(assert (x3207 x2960))
(assert (= (or (and x3957 (not x2107)) x2434) x3184))
(assert (x2954 x2651))
(assert (= (ite (= x3093 x3308) x307 (x2245 x3093)) (x440 x3093)))
(assert (x3207 x317))
(assert (= (x1197 x2104) 0))
(assert (x2954 x3195))
(assert (= x506 (=> (and (= x430 (x1009 x3433)) (= (or (> x430 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (< x430 32) (= (<= x430 57896044618658097711785492504343953926634992332820282019728792003956564819967) true))) x321)) (and (=> x321 x1614) (=> (not x321) x1272)))))
(assert (x3207 x1082))
(assert (= (x3392 x1485) (ite (= x1485 x4182) x1682 (x1668 x1485))))
(assert (= (=> (and (= x3000 x165) (= 599290589 x1854) (< x1854 826074471) (= x1068 (or (and (= (<= x2674 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (< x2674 96)) (> x2674 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (= x871 x2620) (= (x3060 (x2562 274184521717934524641157099916833587206)) x3609) (= x3000 100) (< 0 x3609) (not (> 4 x3000)) (= x32 x1275) (= 16156842317565293874272834530371880720966471053262404558597773956279093428224 x2516) (not (= x1854 157198259)) (not (= 404098525 x1854)) (= (x3402 (- x3000 4)) x2674) (not (= 117300739 x1854))) (and (=> x1068 x1982) (=> (not x1068) x3890))) x2779))
(assert (=> (> (+ 10000 1) x1675) (= (x3377 x1675) (x2562 x1675))))
(assert (= (x2562 18446744073709551615) (x3377 18446744073709551615)))
(assert (x3207 x1792))
(assert (= (ite (and x3657 (not x35) x2803) (x1688 x2104) (x383 x2104)) (x270 x2104)))
(assert (= x1127 (=> (and (= x60 (> 1 x2670)) (= x2670 (x3161 (x3377 0)))) (and (=> x60 x1614) (=> (not x60) x1041)))))
(assert (= (and x4172 (not x3241)) x363))
(assert (x3207 x1693))
(assert (x1954 x3315 x503))
(assert (= 0 (x1197 x1463)))
(assert (= (x3641 (x2562 x2479)) x2479))
(assert (x3207 x2616))
(assert (= (x799 x1192) (ite (and x2885 x3621 (not x4082) x761 x4248 x2869) (x596 x1192) (ite (and x4248 x761 (not x2885) x2869 x3621) (x3760 x1192) (ite (and (not x4248) x3621 x761 x2869) (x4223 x1192) (ite (and (not x761) x3621 x2869) (x2220 x1192) (x530 x1192)))))))
(assert (= (and x2663 x1976) x872))
(assert (= (x3641 (x2562 x474)) x474))
(assert (= (ite (= x1969 x382) x2633 (x1967 x382)) (x3553 x382)))
(assert (x2954 x4066))
(assert (= (=> (= x1203 (= x3802 0)) (and (=> (not x1203) x3129) (=> x1203 x1614))) x2224))
(assert (x3601 x2191 x3682 x81 x2962))
(assert (x3207 x2612))
(assert (= (ite (and x791 x2701 (not x1018) x559 x2002 x2947) (x531 x2413) (ite (and (not x559) x791 x2947 x2002 x2701) (x2425 x2413) (ite (and x2002 x2947 x2701 (not x791)) (x3278 x2413) (ite (and x2947 (not x2701) x2002) (x3303 x2413) (x1994 x2413))))) (x3818 x2413)))
(assert (x3207 x1495))
(assert (x3207 x3458))
(assert (=> (> (+ 10000 1) x2529) (= (x3377 x2529) (x2562 x2529))))
(assert (= (ite (and (not x1355) x141 x3783) (x239 x3789) (x3098 x3789)) (x1429 x3789)))
(assert (x3207 x2543))
(assert (= x2130 (and x545 (not x2627))))
(assert (x3207 x2800))
(assert (= (ite (= x422 x1742) x3522 (x923 x1742)) (x744 x1742)))
(assert (= (and x674 (not x3143)) x2693))
(assert (= x782 (x3641 (x2562 x782))))
(assert (x3207 x782))
(assert (x3207 x2645))
(assert (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x3641 (x3377 115792089237316195423570985008687907853269984665640564039457584007913129639935))))
(assert (= (ite (and x617 x3779) (x1039 x2552) (x2497 x2552)) (x257 x2552)))
(assert (= (=> (and (= (x2515 (+ 4 x1030)) x3405) (= (x3402 (- x4206 x1030)) x3166) (= x834 (x3037 1461501637330902918203684832716283019655932542975 x2599)) (= (x3060 (x2562 x834)) x2528) (= 274184521717934524641157099916833587240 x3399) (= x3405 x3595) (= x4206 (x2515 (+ x1030 36))) (= (= 0 x2528) x2022)) (and (=> x2022 x1614) (=> (not x2022) x1723))) x4244))
(assert (= x1350 (or x2406 x2981 x2199)))
(assert (= (x1267 x3093) (ite (= x1489 x3093) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x2030 x3093))))
(assert (x188 x871))
(assert (x3207 x3242))
(assert (x3207 x3024))
(assert (= (ite (= x1024 x1465) 0 (x1337 x1465)) (x1728 x1465)))
(assert (= x2167 (=> (and (= x737 (= x234 0)) (or (and (= x3421 x3122) (= 96 x3433) x737) (and (= x3466 (x2515 (+ x234 63))) (not x737) (= x3421 x1233) (= (x2515 (+ x1477 x3122)) x1233) (= x3122 x3433) (= x1477 (x3037 115792089237316195423570985008687907853269984665640564039457584007913129639904 x3466)) (= x303 (x2515 (+ 96 x4264)))))) x3039)))
(assert (=> (> (+ 10000 1) x782) (= (x2562 x782) (x3377 x782))))
(assert (= (or (and x696 x186) (and x1249 (not x3751)) (and x299 x3280) (and x187 x619) (and x1496 x1995) (and x2251 x2536) (and x1094 x1292) (and x1478 x748)) x482))
(assert (= (x3152 (- x4213 x303)) 0))
(assert (= (ite (= x1788 x591) x2746 (x3077 x1788)) (x2837 x1788)))
(assert (x2832 x2872 x3356))
(assert (x3207 x1215))
(assert (= (x2055 x172) (ite (= x172 x2227) 98474297345890754025501882143967591664980152141971839855651084132735363579904 (x2668 x172))))
(assert (x3207 x3848))
(assert (x2750 x1065 x1347))
(assert (= (x3641 (x3377 4294967296)) 4294967296))
(assert (= (ite (= x591 x3789) x2746 (x3077 x3789)) (x2837 x3789)))
(assert (x3207 x3839))
(assert (x3207 x1253))
(assert (x2954 x1527))
(assert (= (x3403 x3264) (ite (= x1672 x3264) x1180 (x1363 x3264))))
(assert (x3207 x1859))
(assert (x3207 x4000))
(assert (x3207 x1368))
(assert (= (x2043 x3118) (ite (= x2474 x3118) x199 (x362 x3118))))
(assert (x1589 x368 x2266 x111 x2021))
(assert (= (x2043 x2494) (ite (= x2474 x2494) x199 (x362 x2494))))
(assert (= (ite (= x3469 x1105) x4144 (x2425 x1105)) (x531 x1105)))
(assert (= (x4223 256) (ite (= 256 x4143) x4131 (x2220 256))))
(assert (= (x2115 x2542) (ite (= x2542 (x3377 0)) x3798 (x4026 x2542))))
(assert (= 0 (x428 x2465)))
(assert (= (x531 x3433) (ite (= x3469 x3433) x4144 (x2425 x3433))))
(assert (= (=> (= (< x1407 x224) x2113) (and (=> (and (= x3813 (x3402 (- x1407 x224))) (not x2113) (= 32 x1003) (= 274184521717934524641157099916833587240 x1662) (= 1 x1927) (= x1581 x1439)) x1019) (=> x2113 x1036))) x4188))
(assert (= (x3077 x2402) (ite (= x2402 x492) x890 (x1371 x2402))))
(assert (x1257 x3141 x1620))
(assert (x3207 x2477))
(assert (= (x1814 x3433) (ite (= x3069 x3433) x2454 (x3672 x3433))))
(assert (x3207 x404))
(assert (= (x2244 x3276) (ite (= x3276 x3572) x1441 (x1338 x3276))))
(assert (= (x1751 x2465) (ite (= x154 x2465) 0 (x720 x2465))))
(assert (= (ite (= x2591 x2590) x1749 (x3842 x2591)) (x2220 x2591)))
(assert (x3207 x3714))
(assert (= x2226 (and x1624 x2405)))
(assert (= (x703 x209) (ite (and (not x2387) x2002 x2947) (x3818 x209) (x1259 x209))))
(assert (= x3838 (=> (= (= 0 x1262) x1577) (and (=> (not x1577) x41) (=> x1577 x3106)))))
(assert (= (ite (= x854 x4213) 98474297345890754025501882143967591664980152141971839855651084132735363579904 (x1772 x4213)) (x549 x4213)))
(assert (x3207 x3497))
(assert (x2954 x1835))
(assert (= (=> (and (= x378 (x3037 1461501637330902918203684832716283019655932542975 x1046)) (= (x1338 x534) x1046) (= (x372 (x2562 x878) (x3377 208) 0) x534) (= (not (= 0 x378)) x2006)) (and (=> (and (or (and x3778 (= x2772 (ite x3778 1 0))) (and (= x3510 (x372 (x2562 274184521717934524641157099916833587240) x367 0)) (= (x3037 255 x289) x3973) (= x289 (x1338 x3510)) (= (x372 (x2562 x2761) (x3377 211) 0) x367) (not x3778) (= x2772 x3973))) (= (x3037 1461501637330902918203684832716283019655932542975 x326) x2258) (= (= x2258 274184521717934524641157099916833587240) x3778) x2006 (= (x1338 x46) x326) (= x46 (x372 (x2562 x878) (x3377 210) 0))) x1161) (=> (not x2006) x2260))) x593))
(assert (= (x2562 1858285468) (x3377 1858285468)))
(assert (= (=> (= 0 x1849) x3608) x128))
(assert (x3207 x3821))
(assert (= (ite (= x1190 x3044) x419 (x1528 x3044)) (x3898 x3044)))
(assert (= (=> (= x1712 (= 0 x2855)) (and (=> (not x1712) x2389) (=> x1712 x1614))) x2653))
(assert (= 904250603428552709895185118199468575982109441609966099573332780532423983104 (x3641 (x3377 904250603428552709895185118199468575982109441609966099573332780532423983104))))
(assert (= (ite (= x209 x2429) x2731 (x3392 x209)) (x1880 x209)))
(assert (= (ite (= x3085 x4143) x4131 (x2220 x3085)) (x4223 x3085)))
(assert (= x2496 (=> (and (= (< x4070 x3249) x2107) (= (x2515 (+ x2659 x3249)) x4070)) (and (=> x2107 x1047) (=> (and (not x2107) (= x2523 1) (= 32 x1130) (= x1993 x1358)) x1240)))))
(assert (x3207 x2451))
(assert (x2954 x3882))
(assert (= (x1371 x1606) (ite (= x1606 x2702) x147 (x518 x1606))))
(assert (= (ite (= (x3377 0) x1509) x2794 (x3228 x1509)) (x2369 x1509)))
(assert (x657 x3708 x2952))
(assert (= (and x1010 x3234) x3017))
(assert (=> (> (+ 10000 1) x3212) (= (x3377 x3212) (x2562 x3212))))
(assert (x3207 x4299))
(assert (= (x3492 x2537) (ite (= x3343 x2537) 0 (x1144 x2537))))
(assert (= (ite (= x2537 x4182) x1682 (x1668 x2537)) (x3392 x2537)))
(assert (x3207 x195))
(assert (x3207 x3173))
(assert (= (x2108 x2730) (ite (and x617 x3779) (ite (and (not x3613) x1060 x2586) (x287 x2730) (x3940 x2730)) (x3940 x2730))))
(assert (= (x1716 x3093) (ite (and x3423 (not x2978) x4071) (x3052 x3093) (x3389 x3093))))
(assert (= (x1728 x999) (ite (= x999 x1024) 0 (x1337 x999))))
(assert (= (x1967 x2732) (ite (= x1219 x2732) x3714 (x2369 x2732))))
(assert (= (x3760 x172) (ite (= x172 x3326) x3497 (x4223 x172))))
(assert (= (ite (= x3326 x723) x3497 (x4223 x723)) (x3760 x723)))
(assert (x3207 x1024))
(assert (= (x2043 224) (ite (= 224 x2474) x199 (x362 224))))
(assert (x3207 x3824))
(assert (x3207 x3317))
(assert (x3207 x3103))
(assert (x3207 x1443))
(assert (= x3412 (and x4303 (not x793))))
(assert (x3207 x3931))
(assert (x2954 115792089237316195423570984636004990333889740523700931696805413995650331181055))
(assert (= (ite (and x3423 x483 x3056 x2509 (not x2859) x4071) (x3436 x999) (ite (and x3056 x3423 x4071 x2509 (not x483)) (x979 x999) (ite (and x3423 x2509 x4071 (not x3056)) (x3898 x999) (ite (and x4071 (not x2509) x3423) (x1528 x999) (x1623 x999))))) (x3052 x999)))
(assert (= (x4223 x2345) (ite (= x4143 x2345) x4131 (x2220 x2345))))
(assert (x2954 x159))
(assert (= (x1298 x1193) (ite (= x1193 x637) x1658 (x842 x1193))))
(assert (x3207 x1523))
(assert (x188 x3191))
(assert (= (ite (and x2270 x311 (not x914)) (x3990 x2402) (x448 x2402)) (x2288 x2402)))
(assert (= (x3436 x999) (ite (= x999 x2595) x3561 (x979 x999))))
(assert (= (ite (and x650 (not x1914) x296) (x116 x172) (x2055 x172)) (x858 x172)))
(assert (x3207 x4168))
(assert (= x1 (or x482 (and (not x3280) x299))))
(assert (= (x3760 x1263) (ite (= x3326 x1263) x3497 (x4223 x1263))))
(assert (x3207 x1370))
(assert (= 0 (x428 x1465)))
(assert (= (x3436 x723) (ite (= x2595 x723) x3561 (x979 x723))))
(assert (= (ite (= x1219 x3276) x3714 (x2369 x3276)) (x1967 x3276)))
(assert (x3207 x937))
(assert (= (ite (= x4193 x2474) x199 (x362 x4193)) (x2043 x4193)))
(assert (x3207 x895))
(assert (x3207 x3544))
(assert (= (x1668 x2482) (ite (= x2482 x1414) x4020 (x744 x2482))))
(assert (x3207 x3491))
(assert (= (x2625 x2552) (ite (= x3194 x2552) x2368 (x2043 x2552))))
(assert (x3207 x2003))
(assert (= (x858 x3310) (ite (and x296 x650 (not x1914)) (x116 x3310) (x2055 x3310))))
(assert (= (x549 x3910) (ite (= x3910 x854) 98474297345890754025501882143967591664980152141971839855651084132735363579904 (x1772 x3910))))
(assert (= x1399 (x3641 (x2562 x1399))))
(assert (= x3529 (=> (and (= x24 (x2001 x1788)) (= x1120 (< 0 x2619)) (= (x3060 (x2562 x2583)) x2619)) (and (=> x1120 x2041) (=> (not x1120) x1504)))))
(assert (x3207 x3626))
(assert (= (x2055 x960) (ite (= x2227 x960) 98474297345890754025501882143967591664980152141971839855651084132735363579904 (x2668 x960))))
(assert (x3207 x1662))
(assert (= (x2043 x4104) (ite (= x2474 x4104) x199 (x362 x4104))))
(assert (x3207 x2817))
(assert (x188 x3318))
(assert (= (and x747 x1962) x608))
(assert (x3207 x114))
(assert (x3207 x3996))
(assert (= (x518 x2402) (ite (= x2402 x1678) x3841 (x2757 x2402))))
(assert (= (x3641 (x3377 115792089237316195423570985008687907853269984665640564039457584007913129639934)) 115792089237316195423570985008687907853269984665640564039457584007913129639934))
(assert (= (and x1255 (not x2621)) x1498))
(assert (= x2873 (=> (= (= x425 0) x475) (and (=> x475 x3106) (=> (not x475) x3900)))))
(assert (x3207 x3642))
(assert (= (=> (and (= x898 (x3060 (x2562 x2620))) (= (x257 x4104) x32) (= (< 0 x898) x3091)) (and (=> x3091 x2478) (=> (not x3091) x1052))) x3565))
(assert (= (ite (= x1024 x723) 0 (x1337 x723)) (x1728 x723)))
(assert (= (x2625 x209) (ite (= x209 x3194) x2368 (x2043 x209))))
(assert (= (and x798 (not x263)) x2121))
(assert (= (x3901 x1983) (ite (= x181 x1983) x2175 (x692 x1983))))
(assert (= (=> (and (= x319 x1475) (= x4217 x902)) x3474) x2549))
(assert (x3207 x825))
(assert (= (ite (= x2302 x1766) x2849 (x3901 x1766)) (x2206 x1766)))
(assert (x2954 x289))
(assert (= (ite (= x3194 x4104) x2368 (x2043 x4104)) (x2625 x4104)))
(assert (x188 x232))
(assert (= (and x602 x3337) x4247))
(assert (= x3779 (and x2310 (not x4083))))
(assert (= (x596 x3085) (ite (= x3085 x3357) x3348 (x3760 x3085))))
(assert (= x3805 (=> (= (> x2338 0) x118) (and (=> x118 x1127) (=> (not x118) x1614)))))
(assert (x3207 x1738))
(assert (= x3262 true))
(assert (not x1555))
(assert (= (ite (and x3657 (not x35) x2803) (x1688 x817) (x383 x817)) (x270 x817)))
(assert (= (x2396 x1907) (ite (= x1907 x2789) x1703 (x1924 x1907))))
(assert (= (=> (and (= (or (> x2246 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (< x2246 32) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2246)))) x4083) (= x1351 (x2515 (+ 31 x2246))) (= (x3037 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1351) x3583) (= x3243 (x2515 (+ x3583 x3126)))) (and (=> (not x4083) x1186) (=> x4083 x1614))) x3013))
(assert (x188 x3777))
(assert (x3207 x5))
(assert (x3207 x1806))
(assert (x3207 x1218))
(assert (= x2993 (and x2419 x2738)))
(assert (= (x703 x3317) (ite (and x2002 (not x2387) x2947) (x3818 x3317) (x1259 x3317))))
(assert (x3207 x855))
(assert (= (x1814 x3300) (ite (= x3069 x3300) x2454 (x3672 x3300))))
(assert (= (x3641 (x3546 x1086 1)) (+ (x3641 x1086) 1)))
(assert (x3207 x783))
(assert (=> (> (+ 10000 1) x2568) (= (x3377 x2568) (x2562 x2568))))
(assert (= (=> (= (< 0 x2018) x1552) (and (=> (not x1552) x1614) (=> x1552 x1692))) x1232))
(assert (= (ite (= x999 x1678) x3841 (x2757 x999)) (x518 x999)))
(assert (=> (< (- x834 1) 10000) (= (x3377 x834) (x2562 x834))))
(assert (= (ite (= x4271 x4213) x3187 (x3303 x4213)) (x3278 x4213)))
(assert (= (ite (= x1465 x3308) x307 (x2245 x1465)) (x440 x1465)))
(assert (x2579 x3985 x2416 x2749 x1170))
(assert (= (x2767 x2104) (ite x2551 (ite x3934 (x703 x2104) (ite x356 (x1572 x2104) (x3694 x2104))) (x703 x2104))))
(assert (= (x2625 x2104) (ite (= x2104 x3194) x2368 (x2043 x2104))))
(assert (= (x1367 x209) (ite (= x1076 x209) x2538 (x688 x209))))
(assert (x3207 x1679))
(assert (x3207 x3022))
(assert (= (ite (and x2541 (not x92) x3165) (x190 x1463) (x4112 x1463)) (x641 x1463)))
(assert (x3207 x3343))
(assert (x2954 x2752))
(assert (= (x2115 (x3377 0)) x3798))
(assert (= x3752 (and x2721 (not x3849))))
(assert (= (x2562 115792089237316195423570985008687907853269984665640564039457584007913129639934) (x3377 115792089237316195423570985008687907853269984665640564039457584007913129639934)))
(assert (= (x3403 x4010) (ite (= x4010 x1672) x1180 (x1363 x4010))))
(assert (x3207 x2008))
(assert (= (ite (= x3789 x1678) x3841 (x2757 x3789)) (x518 x3789)))
(assert (x3207 x3302))
(assert (x3207 x1404))
(assert (= x3474 (=> (and (= x319 x2477) (= (- (x380 (x2562 x3227)) x3230) x2445) (= 0 x3230) x499 (= (< (+ (x1012 (x2562 274184521717934524641157099916833587240)) x3230) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x499) (= x44 x902) (= x3281 (x2515 (+ x3230 (uninterp_mod (x1012 (x2562 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936))))) x1834)))
(assert (= (x1814 x2413) (ite (= x2413 x3069) x2454 (x3672 x2413))))
(assert (x3207 x3852))
(assert (= (ite (= x1969 x534) x2633 (x1967 x534)) (x3553 x534)))
(assert (= true x1346))
(assert (x2954 x648))
(assert (x3207 x3954))
(assert (= (x2396 x2494) (ite (= x2789 x2494) x1703 (x1924 x2494))))
(assert (= (and (not x3460) x3017) x240))
(assert (= (x3760 x2799) (ite (= x3326 x2799) x3497 (x4223 x2799))))
(assert (x3207 x3668))
(assert (x3207 x3446))
(assert (= (x2055 x723) (ite (= x2227 x723) 98474297345890754025501882143967591664980152141971839855651084132735363579904 (x2668 x723))))
(assert (x2954 x3708))
(assert (= (=> (and (= x1885 (x2515 (+ 128 x621))) (= (x3037 115792089237316195423570985008687907853269984665640564039457584007913129639904 x4089) x982) (= (< 18446744073709551615 x1885) x40) (= (or x2699 x40) x3128) (= x2699 (> 128 x1885)) (= x3985 (x2515 (+ 63 x982))) (= x621 (x3037 115792089237316195423570985008687907853269984665640564039457584007913129639904 x3985)) (= x2663 (= 0 (ite x3128 1 0))) (= (x2515 (+ 31 x1013)) x4089)) (and (=> x2663 x1007) (=> (not x2663) x1614))) x2378))
(assert (x2954 x2698))
(assert (= (x1716 x999) (ite (and (not x2978) x3423 x4071) (x3052 x999) (x3389 x999))))
(assert (= (ite (and x2885 x761 x2869 x3621 x4248 (not x4082)) (x596 x1788) (ite (and (not x2885) x4248 x3621 x761 x2869) (x3760 x1788) (ite (and x761 x2869 (not x4248) x3621) (x4223 x1788) (ite (and x3621 x2869 (not x761)) (x2220 x1788) (x530 x1788))))) (x799 x1788)))
(assert (x3207 x2303))
(assert (= (=> (and (= (x3161 x1910) x2136) (= (x3037 1461501637330902918203684832716283019655932542975 x2136) x2093) (= x1910 (x372 (x2562 x2202) (x3377 208) 0)) (= x835 (= x2093 0))) (and (=> x835 x1360) (=> (not x835) x491))) x2875))
(assert (= (ite (= x3357 x1192) x3348 (x3760 x1192)) (x596 x1192)))
(assert (x3207 x1147))
(assert (x3207 x1207))
(assert (x3207 x2583))
(assert (= x747 (and (not x321) x4298)))
(assert (= (ite (= x3910 x637) x1658 (x842 x3910)) (x1298 x3910)))
(assert (= (x3641 (x2562 x4000)) x4000))
(assert (= x3743 (and (not x3476) x3063)))
(assert (= (ite (and x2270 (not x914) x311) (x3990 x1606) (x448 x1606)) (x2288 x1606)))
(assert (= (ite (= x3093 x1678) x3841 (x2757 x3093)) (x518 x3093)))
(assert (x3207 x750))
(assert (= (x2396 x1495) (ite (= x1495 x2789) x1703 (x1924 x1495))))
(assert (x3207 x2596))
(assert (= (x2396 x1111) (ite (= x1111 x2789) x1703 (x1924 x1111))))
(assert (x3207 x1451))
(assert (= x4224 (=> (and (= x2733 (x3037 115792089210356248756420345214020892766250353992003419616917011526809519390720 x3782)) (= x3782 (x1642 x2799)) (= x3660 x2799) (= (= x2733 x3782) x238)) (and (=> (not x238) x3106) (=> x238 x3727)))))
(assert (= (x1298 224) (ite (= 224 x637) x1658 (x842 224))))
(assert (= (ite (= x2537 x854) 98474297345890754025501882143967591664980152141971839855651084132735363579904 (x1772 x2537)) (x549 x2537)))
(assert (x2579 x3176 x2412 x2519 x1674))
(assert (x3207 x727))
(assert (x3207 x150))
(assert (x188 x122))
(assert (x3207 x3420))
(assert (x3207 x3788))
(assert (= (=> (= (= x185 274184521717934524641157099916833587202) x931) (and (=> (not x931) x1518) (=> x931 x520))) x1254))
(assert (x3207 x3211))
(assert (= (x2625 x2085) (ite (= x2085 x3194) x2368 (x2043 x2085))))
(assert (= 274184521717934524641157099916833587206 (x3641 (x2562 274184521717934524641157099916833587206))))
(assert (x3207 x3500))
(assert (x3207 x1789))
(assert (= (x2455 x209) (ite (and x2580 x2946 (not x4087)) (x3837 x209) (x1454 x209))))
(assert (= (and (not x254) x4170) x2076))
(assert (x3207 x1159))
(assert (x3207 x1677))
(assert (= (x596 x3487) (ite (= x3357 x3487) x3348 (x3760 x3487))))
(assert (x3207 x4189))
(assert (x3207 x3413))
(assert (= x1341 (x3641 (x2562 x1341))))
(assert (x3207 x1608))
(assert (x3207 x2879))
(assert (= (ite (= x3308 x2465) x307 (x2245 x2465)) (x440 x2465)))
(assert (x3207 x2175))
(assert (= (and x3590 x3637) x2946))
(assert (=> (> (+ 10000 1) x4000) (= (x3377 x4000) (x2562 x4000))))
(assert (= (=> (and (= (x3060 (x2562 x298)) x2700) (= (= 0 x2700) x4060)) (and (=> x4060 x3106) (=> (and (not x4060) (= x1101 (> x1709 0)) (or (and (> 4294967296 x1433) (= (= x1680 (x1696 (x2562 x298))) x562) (= (x2675 (x2562 274184521717934524641157099916833587240)) x4236) x1609 (= (>= (x1696 (x2562 274184521717934524641157099916833587240)) x4236) x1609) x562 (= x1680 (x2675 (x2562 x298))) x1101) (not x1101))) x778))) x63))
(assert (x657 x326 x1462))
(assert (= (=> (and (= x1542 274184521717934524641157099916833587240) (= (> x1522 x314) x3844) (= (x3402 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1596)) x314) (<= x1522 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x372 (x2562 274184521717934524641157099916833587240) (x3377 1) 0) x3997) (= (x3402 (- x37 x1596)) x1783) (>= x1522 0) (= (x2573 x2126) x1522) (= (x372 (x2562 x782) (x3377 1) 0) x2126)) (and (=> x3844 x3889) (=> (not x3844) x346))) x1765))
(assert (x3207 x3980))
(assert (= (x3898 x1606) (ite (= x1190 x1606) x419 (x1528 x1606))))
(assert (x3207 x3466))
(assert (x3207 x3790))
(assert (x3207 x4206))
(assert (= (=> (and (= x122 x735) (= x2802 (= x3401 x122))) (and (=> x2802 x3029) (=> (not x2802) x107))) x3041))
(assert (x3207 x1228))
(assert (x3207 x3378))
(assert (= (+ (x3641 x4005) 2) (x3641 (x3546 x4005 2))))
(assert (x3207 x2711))
(assert (= (ite (= x817 x3595) 274184521717934524641157099916833587240 (x1195 x817)) (x3036 x817)))
(assert (=> (< (- x878 1) 10000) (= (x3377 x878) (x2562 x878))))
(assert (= x917 (=> (= x2638 (< x2307 x1763)) (and (=> x2638 x17) (=> (not x2638) x3106)))))
(assert (= x1807 (and (not x4119) x3835)))
(assert (x3207 x3426))
(assert (= (ite (= x2005 x2785) 274184521717934524641157099916833587240 (x4226 x2785)) (x1214 x2785)))
(assert (x3207 x3229))
(assert (= x4283 (=> (= (= 0 x3661) x3598) (and (=> x3598 x1614) (=> (not x3598) x3154)))))
(assert (= (x1371 x2591) (ite (= x2591 x2702) x147 (x518 x2591))))
(assert (x3207 x3321))
(assert (x3207 x4210))
(assert (x3207 x303))
(assert (= (=> (and (= (x2637 x10) x2740) (= x2808 (= 0 x2740)) (= x2666 x10)) (and (=> x2808 x3072) (=> (not x2808) x1396))) x886))
(assert (x2750 x3897 x1588))
(assert (x3207 x3141))
(assert (x3207 x1126))
(assert (x1954 x1279 x2796))
(assert (x2954 x3053))
(assert (= (=> (= x601 (< x2698 x106)) (and (=> x601 x2262) (=> (not x601) x1614))) x1308))
(assert (= (or (and (not x1366) x4133) x859) x1973))
(assert (x3207 x2016))
(assert (= x3394 (=> (and (= x1773 x3290) (= (x1403 (x2562 x3515)) x2023) (= (and (>= x2312 0) (< x2023 115792089237316195423570985008687907853269984665640564039457584007913129639936)) x2791) (= x2312 (x1403 (x2562 274184521717934524641157099916833587240)))) (and (=> x2791 x957) (=> (and (= 0 x765) (= x3047 0) (not x2791)) x2463)))))
(assert (= (x1751 x1788) (ite (= x154 x1788) 0 (x720 x1788))))
(assert (= (ite (= x181 x4162) x2175 (x692 x4162)) (x3901 x4162)))
(assert (= (x1728 x2465) (ite (= x2465 x1024) 0 (x1337 x2465))))
(assert (x3207 x131))
(assert (= (x3641 (x2562 x1978)) x1978))
(assert (x3207 x3257))
(assert (= 0 (x1197 x783)))
(assert (x188 x2068))
(assert (= x2267 (or (and x3739 x1187) (and x133 x4180) (and x2166 x2098) (and x55 x3248) (and (not x3447) x771) (and x1816 x3507) (and x500 x4222) (and x174 x3215))))
(assert (= (x1668 x374) (ite (= x1414 x374) x4020 (x744 x374))))
(assert (x3207 x3277))
(assert (= (x2220 x723) (ite (= x723 x2590) x1749 (x3842 x723))))
(assert (= (x3377 50942633119752846454219349998365661925608737367104304655302372697894809501696) (x2562 50942633119752846454219349998365661925608737367104304655302372697894809501696)))
(assert (= x4122 (=> (and (= x3692 (< x37 x4195)) (>= x37 0) (= (x372 (x2562 274184521717934524641157099916833587240) (x3377 1) 0) x2804) (<= x37 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= 274184521717934524641157099916833587240 x2484) (= x37 (x2159 x2804)) (= x1596 x3016)) (and (=> x3692 x3889) (=> (not x3692) x2790)))))
(assert (= (or (and x4161 x1904) (and x3978 x3409) (and (not x2533) x4035) (and x853 x3155) (and x1211 x2094) (and x950 x2735) (and x978 x4137) (and x1043 x785)) x3345))
(assert (x3207 x3031))
(assert (x3207 x3537))
(assert (= x3221 (=> (and (= 274184521717934524641157099916833587240 x2397) (= x3078 (x2062 x1057)) (= x3891 (x372 (x2562 x3008) (x3377 2) 0)) (= (x372 (x2562 274184521717934524641157099916833587240) (x3377 1) 0) x2132) (<= x3078 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= 0 x3078) (= (x372 (x2562 274184521717934524641157099916833587240) x3891 0) x1057) (= x3014 274184521717934524641157099916833587240) (= (> x2194 x3078) x3155)) (and (=> x3155 x128) (=> (not x3155) x1072)))))
(assert (= x420 (and (not x54) x3455)))
(assert (x3207 x2044))
(assert (= x1043 (and x853 (not x3155))))
(assert (= x1204 (and x3369 x384)))
(assert (= (ite (= x3308 x999) x307 (x2245 x999)) (x440 x999)))
(assert (= (ite (and x2869 x3621 (not x2111)) (x799 x2799) (x2418 x2799)) (x2708 x2799)))
(assert (= (ite (= x1672 x229) x1180 (x1363 x229)) (x3403 x229)))
(assert (= (ite (= x2281 x181) x2175 (x692 x2281)) (x3901 x2281)))
(assert (= (x641 x1040) (ite (and (not x92) x3165 x2541) (x190 x1040) (x4112 x1040))))
(assert (x3207 x4009))
(assert (x3207 x27))
(assert (= (ite (= x1548 x4143) x4131 (x2220 x1548)) (x4223 x1548)))
(assert (=> (> (+ 10000 1) x1248) (= (x2562 x1248) (x3377 x1248))))
(assert (x3207 x1771))
(assert (x3207 x2271))
(assert (= (and x1923 (not x3976)) x3632))
(assert (x3207 x3174))
(assert (x657 x1655 x1329))
(assert (x3207 x2285))
(assert (= (ite (= x2010 x492) x890 (x1371 x2010)) (x3077 x2010)))
(assert (= (ite (= x417 x2227) 98474297345890754025501882143967591664980152141971839855651084132735363579904 (x2668 x417)) (x2055 x417)))
(assert (= (=> (and (>= x2724 0) (= x4281 (< x1077 x2724)) (= (x372 (x2562 x1957) (x3377 1) 0) x2091) (= x2724 (x1321 x4162)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2724) (= x2742 (x3402 (- x3294 x224))) (= 274184521717934524641157099916833587240 x1473) (= x4162 (x372 (x2562 274184521717934524641157099916833587240) (x3377 1) 0)) (= (x3402 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x224)) x1077)) (and (=> x4281 x1036) (=> (not x4281) x1293))) x3689))
(assert (x3207 x3187))
(assert (x3207 x1309))
(assert (x3207 x2184))
(assert (x188 x2916))
(assert (= (ite (= x2715 x2132) x2762 (x219 x2715)) (x3428 x2715)))
(assert (=> (< (- x2583 1) 10000) (= (x3377 x2583) (x2562 x2583))))
(assert (x3207 x3749))
(assert (= (x3428 x3270) (ite (= x2132 x3270) x2762 (x219 x3270))))
(assert (x3207 x3865))
(assert (= (x2115 x1888) (ite (= (x3377 0) x1888) x3798 (x4026 x1888))))
(assert (x2954 x1046))
(assert (x3207 x278))
(assert (= (ite (= x1966 x999) x166 (x223 x999)) (x1778 x999)))
(assert (= (and x3876 (not x3167)) x398))
(assert (= (x4223 x3789) (ite (= x4143 x3789) x4131 (x2220 x3789))))
(assert (= (=> (= (> x2659 x951) x215) (and (=> x215 x1047) (=> (not x215) x2347))) x2511))
(assert (x188 x2963))
(assert (= (ite (= x637 x2494) x1658 (x842 x2494)) (x1298 x2494)))
(assert (x3207 x492))
(assert (x3207 x2071))
(assert (= (x383 x817) (ite (= x817 x1364) x32 (x1919 x817))))
(assert (= (=> (and (<= 0 x1097) (= x3476 (> x1097 x1898)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1097) (= (x3901 x2017) x1097) (= x1898 (x3402 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x836))) (= (x3402 (- x2382 x836)) x2175) (= (x372 (x2562 x4000) (x3377 1) 0) x181) (= x2017 (x372 (x2562 274184521717934524641157099916833587240) (x3377 1) 0)) (= x1945 274184521717934524641157099916833587240)) (and (=> x3476 x3988) (=> (not x3476) x4025))) x2500))
(assert (= (ite (and x311 x2608 x581 x2270 x4093 (not x631)) (x2837 x2785) (ite (and (not x2608) x2270 x311 x4093 x581) (x3077 x2785) (ite (and x311 x581 x2270 (not x4093)) (x1371 x2785) (ite (and x311 (not x581) x2270) (x518 x2785) (x3794 x2785))))) (x3990 x2785)))
(assert (= (ite (= x938 x637) x1658 (x842 x938)) (x1298 x938)))
(assert (= (ite (= x2702 x1548) x147 (x518 x1548)) (x1371 x1548)))
(assert (= (ite x2551 (ite x3934 (x703 x2413) (ite x356 (x1572 x2413) (x3694 x2413))) (x703 x2413)) (x2767 x2413)))
(assert (x3207 x43))
(assert (= (ite (= x2977 x1105) x4123 (x2625 x1105)) (x1924 x1105)))
(assert (x3207 x3800))
(assert (= (ite (= x2590 x1192) x1749 (x3842 x1192)) (x2220 x1192)))
(assert (= (=> (and (= x1368 (x3037 1461501637330902918203684832716283019655932542975 x958)) (= x3552 274184521717934524641157099916833587240) (= x1644 (not (= x1368 0))) (= (x372 (x2562 x2202) (x3377 208) 0) x1707) (= x1598 x2202) (= 274184521717934524641157099916833587240 x3630) (= (x3161 x1707) x958)) (and (=> (not x1644) x1360) (=> x1644 x2875))) x1107))
(assert (= (ite (and x2885 (not x4082) x4248 x3621 x2869 x761) (x596 x1263) (ite (and x761 x2869 x4248 (not x2885) x3621) (x3760 x1263) (ite (and (not x4248) x761 x2869 x3621) (x4223 x1263) (ite (and x3621 (not x761) x2869) (x2220 x1263) (x530 x1263))))) (x799 x1263)))
(assert (x3207 x1790))
(assert (x3207 x4120))
(assert (x3207 x3249))
(assert (= (x3641 (x2562 x3544)) x3544))
(assert (= 1461501637330902918203684832716283019655932542976 (x3641 (x3377 1461501637330902918203684832716283019655932542976))))
(assert (x3207 x1667))
(assert (= (ite (= x154 x4230) 0 (x720 x4230)) (x1751 x4230)))
(assert (x3207 x2990))
(assert (= (x799 x2345) (ite (and (not x4082) x2885 x4248 x2869 x761 x3621) (x596 x2345) (ite (and x761 x2869 (not x2885) x4248 x3621) (x3760 x2345) (ite (and x2869 x3621 (not x4248) x761) (x4223 x2345) (ite (and x2869 (not x761) x3621) (x2220 x2345) (x530 x2345)))))))
(assert (= (ite (= x2702 x1788) x147 (x518 x1788)) (x1371 x1788)))
(assert (= x2776 (and (not x1506) x2805)))
(assert (= (x2288 x417) (ite (and x2270 x311 (not x914)) (x3990 x417) (x448 x417))))
(assert (= (x2125 x938) (ite (and (not x2339) x1630 x919) (x396 x938) (x3992 x938))))
(assert (= (x2562 826074471) (x3377 826074471)))
(assert (= (=> (and (< x2879 2311529814) (= 100 x1984) (> x1526 0) (= x1932 (x3402 (- x1984 4))) (= x2879 599290589) (not (< x1984 4)) (= x24 x878) (= (x3060 (x2562 274184521717934524641157099916833587240)) x1526) (= x2583 x3635) (not (= x2879 511946350)) (> 1166402363 x2879) (= x1984 x2420) (not (< x2879 455944412)) (= 16156842317565293874272834530371880720966471053262404558597773956279093428224 x2276) (= x678 (or (and (< x1932 96) (= (<= x1932 57896044618658097711785492504343953926634992332820282019728792003956564819967) true)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1932))) (not (= 455944412 x2879))) (and (=> x678 x2260) (=> (not x678) x1697))) x553))
(assert (x3207 x4173))
(assert (x2954 x4168))
(assert (x3207 x537))
(assert (= (ite (= x930 x723) x24 (x3720 x723)) (x3098 x723)))
(assert (x3207 x4220))
(assert (= (x2837 x417) (ite (= x591 x417) x2746 (x3077 x417))))
(assert (= x901 (and (not x3337) x602)))
(assert (= (x1728 x3093) (ite (= x3093 x1024) 0 (x1337 x3093))))
(assert (= (ite (and x2541 (not x3115) x207 x3165 x2649 x64) (x2396 x817) (ite (and x2541 x3165 (not x2649) x64 x207) (x1924 x817) (ite (and x64 x2541 x3165 (not x207)) (x2625 x817) (ite (and x3165 (not x64) x2541) (x2043 x817) (x20 x817))))) (x190 x817)))
(assert (x3207 x697))
(assert (x3207 x3772))
(assert (=> (> (+ 10000 1) x871) (= (x3377 x871) (x2562 x871))))
(assert (x3207 x653))
(assert (= (x1967 x46) (ite (= x46 x1219) x3714 (x2369 x46))))
(assert (= (ite (= (x3377 0) x1567) x2794 (x3228 x1567)) (x2369 x1567)))
(assert (= (and x2433 x1365) x1873))
(assert (= (and (not x2696) x489) x2060))
(assert (= (ite (= x930 x2785) x24 (x3720 x2785)) (x3098 x2785)))
(assert (x3207 x319))
(assert (x188 x2093))
(assert (= (x2767 x1105) (ite x2551 (ite x3934 (x703 x1105) (ite x356 (x1572 x1105) (x3694 x1105))) (x703 x1105))))
(assert (x3207 x419))
(assert (= (ite (and x2885 x761 x4248 x3621 (not x4082) x2869) (x596 x3085) (ite (and x3621 (not x2885) x2869 x761 x4248) (x3760 x3085) (ite (and x3621 x761 x2869 (not x4248)) (x4223 x3085) (ite (and x2869 (not x761) x3621) (x2220 x3085) (x530 x3085))))) (x799 x3085)))
(assert (= (x518 x2010) (ite (= x2010 x1678) x3841 (x2757 x2010))))
(assert (x3207 x1510))
(assert (= (and x240 x1484) x974))
(assert (x3207 x4277))
(assert (x3207 x621))
(assert (= (ite (= x2227 x1192) 98474297345890754025501882143967591664980152141971839855651084132735363579904 (x2668 x1192)) (x2055 x1192)))
(assert (x3207 x325))
(assert (x3207 x3555))
(assert (x3207 x1316))
(assert (x3207 x3144))
(assert (= (x4223 224) (ite (= x4143 224) x4131 (x2220 224))))
(assert (x3207 x3296))
(assert (= (ite (= x2482 x2789) x1703 (x1924 x2482)) (x2396 x2482)))
(assert (x3207 x1297))
(assert (x2954 x1022))
(assert (= (x428 x1474) 0))
(assert (= (x2369 x1314) (ite (= x1314 (x3377 0)) x2794 (x3228 x1314))))
(assert (= (ite (= x3310 x1678) x3841 (x2757 x3310)) (x518 x3310)))
(assert (x3207 x1158))
(assert (= (ite (= (x3377 0) x2894) x2794 (x3228 x2894)) (x2369 x2894)))
(assert (x3207 x2345))
(assert (= x3225 x2550))
(assert (= (x3152 (- x2413 x303)) 0))
(assert (= (x549 x1742) (ite (= x1742 x854) 98474297345890754025501882143967591664980152141971839855651084132735363579904 (x1772 x1742))))
(assert (= (=> (= (= x3862 0) x109) (and (=> (not x109) x2877) (=> x109 x1614))) x3039))
(assert (= x577 (and x3432 (not x95))))
(assert (= (x2125 x3433) (ite (and x919 x1630 (not x2339)) (x396 x3433) (x3992 x3433))))
(assert (= (x3436 x2591) (ite (= x2591 x2595) x3561 (x979 x2591))))
(assert (x3207 x4046))
(assert (= (ite (= x960 x1228) x3067 (x1442 x960)) (x126 x960)))
(assert (= (x1924 x209) (ite (= x209 x2977) x4123 (x2625 x209))))
(assert (= (x428 160) 0))
(assert (= x2948 (and (not x2893) x351)))
(assert (x3207 x3972))
(assert (= (x2625 x817) (ite (= x817 x3194) x2368 (x2043 x817))))
(assert (x657 x3478 x494))
(assert (= (=> (= x2028 (= 274184521717934524641157099916833587202 x834)) (and (=> (and x2028 (or (and (= (x372 (x2562 274184521717934524641157099916833587240) (x3377 1) 0) x2715) (not x242) (<= 0 x3007) (= 1 x3802) (= (x2108 x2715) x3007) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3007) (= 32 x1006) (= 274184521717934524641157099916833587240 x5)) (and (= x1006 x969) x242 (= 0 x3802))) (< 0 x3042) (= x3166 x4234) (not (< x2973 826074471)) (= x2973 1889567281) (= x242 (or (> x697 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x697)) (> 32 x697)))) (= (x3060 (x2562 274184521717934524641157099916833587202)) x3042) (not (= x2973 826074471)) (not (> 4 x4234)) (= x995 50942633119752846454219349998365661925608737367104304655302372697894809501696) (= x697 (x3402 (- x4234 4))) (= 36 x4234)) x2224) (=> (not x2028) x333))) x2809))
(assert (= (ite (= x2482 x4182) x1682 (x1668 x2482)) (x3392 x2482)))
(assert (= (x2425 x2413) (ite (= x1406 x2413) x4102 (x3278 x2413))))
(assert (x188 x3544))
(assert (x3207 x2764))
(assert (= (ite (and x4248 x761 x2869 x3621 (not x4082) x2885) (x596 x3310) (ite (and x3621 x4248 x2869 (not x2885) x761) (x3760 x3310) (ite (and x2869 x3621 x761 (not x4248)) (x4223 x3310) (ite (and (not x761) x3621 x2869) (x2220 x3310) (x530 x3310))))) (x799 x3310)))
(assert (= (ite (and (not x427) x3892 x1955) (x1922 x1193) (x549 x1193)) (x2637 x1193)))
(assert (x3207 x749))
(assert (x3207 x2982))
(assert (x3207 x165))
(assert (= x523 (=> (= (> x3704 x2370) x2687) (and (=> x2687 x3556) (=> (not x2687) x3716)))))
(assert (= (ite (and (not x92) x2541 x3165) (x190 x2494) (x4112 x2494)) (x641 x2494)))
(assert (=> (> (+ 10000 1) x15) (= (x3377 x15) (x2562 x15))))
(assert (x3207 x1291))
(assert (= (ite (= x4213 x3469) x4144 (x2425 x4213)) (x531 x4213)))
(assert (x3207 x1944))
(assert (= (x1298 x2104) (ite (= x637 x2104) x1658 (x842 x2104))))
(assert (x3207 x1984))
(assert (x3207 x1997))
(assert (= (x1363 x1707) (ite (= x2464 x1707) x3647 (x2115 x1707))))
(assert (x188 x1216))
(assert (= (x1716 x1606) (ite (and (not x2978) x3423 x4071) (x3052 x1606) (x3389 x1606))))
(assert (x3207 x286))
(assert (x3207 x139))
(assert (= (x695 x2385) (ite (and x617 x3779) (ite (and (not x3613) x2586 x1060) (x2353 x2385) (x3011 x2385)) (x3011 x2385))))
(assert (x3207 x2845))
(assert (x3207 x3464))
(assert (=> (> (+ 10000 1) x1096) (= (x2562 x1096) (x3377 x1096))))
(assert (x3207 x2147))
(assert (= (ite (= x2227 x802) 98474297345890754025501882143967591664980152141971839855651084132735363579904 (x2668 x802)) (x2055 x802)))
(assert (= (x1751 x2010) (ite (= x2010 x154) 0 (x720 x2010))))
(assert (x3207 x521))
(assert (= (ite (and x3892 (not x427) x1955) (x1922 x3433) (x549 x3433)) (x2637 x3433)))
(assert (= (=> (= x595 (< 0 x3505)) (and (=> (not x595) x1614) (=> x595 x2235))) x1829))
(assert (x3207 x3512))
(assert (x3207 x2392))
(assert (x3207 x1855))
(assert (= (ite (and x207 x2649 x3165 (not x3115) x64 x2541) (x2396 x2494) (ite (and x207 x64 x2541 x3165 (not x2649)) (x1924 x2494) (ite (and (not x207) x64 x3165 x2541) (x2625 x2494) (ite (and x3165 x2541 (not x64)) (x2043 x2494) (x20 x2494))))) (x190 x2494)))
(assert (= (=> (= x3250 (> x224 x3294)) (and (=> (not x3250) x3689) (=> x3250 x1036))) x1887))
(assert (= (ite (and x4248 (not x4082) x3621 x761 x2869 x2885) (x596 x723) (ite (and x2869 x3621 (not x2885) x761 x4248) (x3760 x723) (ite (and x2869 x3621 x761 (not x4248)) (x4223 x723) (ite (and (not x761) x3621 x2869) (x2220 x723) (x530 x723))))) (x799 x723)))
(assert (x3825 x1608 x1191))
(assert (= (ite (and x311 (not x914) x2270) (x3990 x1788) (x448 x1788)) (x2288 x1788)))
(assert (x657 x255 x1115))
(assert (= (x3161 x2798) (ite (= x2798 x4010) x1540 (x1601 x2798))))
(assert (= (x428 x2345) 0))
(assert (= (ite (= x422 x2104) x3522 (x923 x2104)) (x744 x2104)))
(assert (= (x3760 x2345) (ite (= x3326 x2345) x3497 (x4223 x2345))))
(assert (= (=> (= 0 x972) x470) x3988))
(assert (x3207 x2560))
(assert (= (ite (= x2464 x563) x3647 (x2115 x563)) (x1363 x563)))
(assert (= (x2396 x374) (ite (= x2789 x374) x1703 (x1924 x374))))
(assert (= x3732 (=> (and (= x3114 (- (/ x121 5192296858534827628530496329220096) (uninterp_frac x121 5192296858534827628530496329220096))) (= (x2515 (+ 64 x3725)) x3910) (= (= x1928 0) x1981) (= (x3037 x404 x1724) x273) (= (= x273 0) x2433) (= x121 (x2323 (x3377 1))) (= x1724 (ite (> x1472 x850) 1 0)) (= (- (/ 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2728) (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2728)) x850) (= (ite (not x1981) 1 0) x404) (= x3700 (uninterp_mod (* x2728 x3251) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= x522 (x3037 255 x3114))) (and (=> x2433 x210) (=> (not x2433) x1614)))))
(assert (x3207 x1430))
(assert (= x2438 (and x456 x1638)))
(assert (= (ite (= x817 x402) 0 (x1736 x817)) (x2497 x817)))
(assert (= (x1924 224) (ite (= x2977 224) x4123 (x2625 224))))
(assert (= (ite (= x4182 x3317) x1682 (x1668 x3317)) (x3392 x3317)))
(assert (= x3524 (and x3175 (not x1120))))
(assert (= x829 (=> (= x978 (> x2194 x1741)) (and (=> x978 x128) (=> (not x978) x1759)))))
(assert (= x1293 (=> (and (= (x2515 (+ x224 x2724)) x3956) (= x2263 (> x2724 x3956))) (and (=> x2263 x1036) (=> (not x2263) x1149)))))
(assert (= (x3760 x2785) (ite (= x3326 x2785) x3497 (x4223 x2785))))
(assert (= (x1298 x3433) (ite (= x637 x3433) x1658 (x842 x3433))))
(assert (= (=> (= x718 (= 274184521717934524641157099916833587206 x232)) (and (=> (and (< 0 x1523) (= x2860 50942633119752846454219349998365661925608737367104304655302372697894809501696) (= x3918 36) (= (x3402 (- x3918 4)) x1906) (not (< x3918 4)) (not (> 826074471 x2530)) (or (and (<= 0 x4001) (= (x975 x2411) x4001) (= x2411 (x372 (x2562 274184521717934524641157099916833587240) (x3377 1) 0)) (= x177 1) (= x1705 274184521717934524641157099916833587240) (= x3001 32) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4001) (not x2082)) (and (= x3001 x3275) x2082 (= 0 x177))) x718 (not (= x2530 826074471)) (= x2530 1889567281) (= x1523 (x3060 (x2562 274184521717934524641157099916833587206))) (= (or (> x1906 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= true (<= x1906 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (< x1906 32))) x2082) (= x3918 x1221)) x2331) (=> (not x718) x683))) x2360))
(assert (= (and x449 x3745) x2439))
(assert (x2750 x3784 x2874))
(assert (= (and x2539 x2446) x3285))
(assert (= (and x3845 x269) x3950))
(assert (x3207 x2753))
(assert (= (x1197 x2413) 0))
(assert (x3207 x4288))
(assert (x3207 x1336))
(assert (= (x2396 x1485) (ite (= x2789 x1485) x1703 (x1924 x1485))))
(assert (= (=> (and (= (= x2583 x3635) x2738) (= x3635 x3170)) (and (=> x2738 x2957) (=> (not x2738) x2260))) x1697))
(assert (x3207 x1634))
(assert (= (ite (= x203 x2413) x1383 (x768 x2413)) (x688 x2413)))
(assert (x3207 x3784))
(assert (= x437 (and (not x1103) x3945)))
(assert (= x236 (=> (and (= x2214 (x372 (x2562 274184521717934524641157099916833587240) x2449 0)) (= (> x836 x3145) x2758) (>= x3145 0) (= (x372 (x2562 274184521717934524641157099916833587240) (x3377 1) 0) x2302) (= x434 274184521717934524641157099916833587240) (= 274184521717934524641157099916833587240 x4277) (= (x372 (x2562 x4000) (x3377 2) 0) x2449) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3145) (= (x3441 x2214) x3145)) (and (=> (not x2758) x2945) (=> x2758 x3988)))))
(assert (x3207 x1341))
(assert (= (x3641 (x2562 x1435)) x1435))
(assert (= (ite (= (x3377 0) x753) x2794 (x3228 x753)) (x2369 x753)))
(assert (= 0 (x1197 160)))
(assert (= (x2497 x783) (ite (= x402 x783) 0 (x1736 x783))))
(assert (= (ite (= x3572 x682) x1845 (x1488 x3572)) (x1338 x3572)))
(assert (= (ite (and (not x4082) x761 x2885 x3621 x2869 x4248) (x596 x2010) (ite (and x761 x2869 (not x2885) x4248 x3621) (x3760 x2010) (ite (and x2869 x761 x3621 (not x4248)) (x4223 x2010) (ite (and x3621 x2869 (not x761)) (x2220 x2010) (x530 x2010))))) (x799 x2010)))
(assert (x3207 x1974))
(assert (= (=> (and (= (x3037 115792089237316195423570985008687907853269984665640564039457584007913129639904 x3229) x1422) (= (or (> x1006 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (> 32 x1006) (= (<= x1006 57896044618658097711785492504343953926634992332820282019728792003956564819967) true))) x450) (= (x2515 (+ x1006 31)) x3229) (= (x2515 (+ x1030 x1422)) x1599)) (and (=> x450 x1614) (=> (and (= x2537 x1030) (= (x1155 x2537) x3124) (= x124 x3124) (= x1599 x1311) (not x450)) x2865))) x3129))
(assert (= x136 (or (and (not x433) x1150) x2189)))
(assert (x3207 x4264))
(assert (= (x2220 x3487) (ite (= x3487 x2590) x1749 (x3842 x3487))))
(assert (= (x1363 x67) (ite (= x67 x2464) x3647 (x2115 x67))))
(assert (= (ite (and x3892 x1955 (not x427)) (x1922 x4104) (x549 x4104)) (x2637 x4104)))
(assert (= (x2115 x1125) (ite (= (x3377 0) x1125) x3798 (x4026 x1125))))
(assert (x3207 x3753))
(assert (x2954 x2965))
(assert (= (x3377 1889567281) (x2562 1889567281)))
(assert (= (x641 x2104) (ite (and (not x92) x2541 x3165) (x190 x2104) (x4112 x2104))))
(assert (= (ite (= x723 x1190) x419 (x1528 x723)) (x3898 x723)))
(assert (x3207 x3769))
(assert (= (x440 x1263) (ite (= x3308 x1263) x307 (x2245 x1263))))
(assert (= (ite (and x1955 (not x427) x3892) (x1922 x4213) (x549 x4213)) (x2637 x4213)))
(assert (x3207 x3448))
(assert (x3207 x2640))
(assert (= (=> (and (= x1913 (or (> x1271 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (> 32 x1271) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1271) true)))) (= (x148 x1263) x1271)) (and (=> (not x1913) x2101) (=> x1913 x3106))) x2717))
(assert (x188 x1978))
(assert (= (x3403 x4186) (ite (= x1672 x4186) x1180 (x1363 x4186))))
(assert (x188 x782))
(assert (=> (< (- x2720 1) 10000) (= (x2562 x2720) (x3377 x2720))))
(assert (= (ite (= x2737 (x3377 0)) x2794 (x3228 x2737)) (x2369 x2737)))
(assert (= (x3760 x1465) (ite (= x3326 x1465) x3497 (x4223 x1465))))
(assert (= (x383 x2413) (ite (= x2413 x1364) x32 (x1919 x2413))))
(assert (= (ite (and x207 x2649 (not x3115) x2541 x3165 x64) (x2396 x1040) (ite (and x2541 (not x2649) x207 x64 x3165) (x1924 x1040) (ite (and x64 (not x207) x2541 x3165) (x2625 x1040) (ite (and (not x64) x3165 x2541) (x2043 x1040) (x20 x1040))))) (x190 x1040)))
(assert (= (ite (= x2702 x960) x147 (x518 x960)) (x1371 x960)))
(assert (= (x1363 x2853) (ite (= x2464 x2853) x3647 (x2115 x2853))))
(assert (x3207 x1582))
(assert (x2020 x2191 x585 x256 x3226))
(assert (= x2541 (and x2226 x2004)))
(assert (= x885 (=> (and (= x855 (x803 (x3377 0))) (= x295 (< x855 1))) (and (=> (not x295) x377) (=> x295 x3106)))))
(assert (= (x3898 x2990) (ite (= x2990 x1190) x419 (x1528 x2990))))
(assert (= (ite (= x3326 x4230) x3497 (x4223 x4230)) (x3760 x4230)))
(assert (x3207 x2229))
(assert (x3207 x1786))
(assert (= (ite (= x292 x2253) x1502 (x394 x292)) (x4255 x292)))
(assert (x3207 x533))
(assert (x3207 x2025))
(assert (= x2505 (=> (and (= x1677 x1951) (= 0 x1831)) x3578)))
(assert (= (ite (and x3165 (not x92) x2541) (x190 x10) (x4112 x10)) (x641 x10)))
(assert (= x1972 (=> (= x2178 (> x24 x3536)) (and (=> (and (not x2178) (= x1062 x615)) x379) (=> x2178 x3106)))))
(assert (= (x2043 x2085) (ite (= x2085 x2474) x199 (x362 x2085))))
(assert (= x1237 (and x3019 x1471)))
(assert (x3207 x3148))
(assert (x3207 x2407))
(assert (= (ite (= x3308 x2010) x307 (x2245 x2010)) (x440 x2010)))
(assert (x2954 x2821))
(assert (x3207 x3326))
(assert (= (x2043 x2552) (ite (= x2552 x2474) x199 (x362 x2552))))
(assert (= (x2115 x3264) (ite (= (x3377 0) x3264) x3798 (x4026 x3264))))
(assert (x188 x3879))
(assert (= (x2115 x2464) (ite (= (x3377 0) x2464) x3798 (x4026 x2464))))
(assert (= (ite (= x1969 x3) x2633 (x1967 x3)) (x3553 x3)))
(assert (= (ite (= x1228 x2341) x3067 (x1442 x2341)) (x126 x2341)))
(assert (= (x1403 (x2562 x2934)) (ite (and (not x2087) x3018) (x2598 (x2562 x2934)) (ite x1661 (ite x1350 (x3147 (x2562 x2934)) (x3309 (x2562 x2934))) (x3309 (x2562 x2934))))))
(assert (= (x1197 x3824) 0))
(assert (= (ite (= x2345 x1228) x3067 (x1442 x2345)) (x126 x2345)))
(assert (= (x2562 98474297345890754025501882143967591664980152141971839855651084132735363579904) (x3377 98474297345890754025501882143967591664980152141971839855651084132735363579904)))
(assert (= (x3416 x1263) (ite x1350 (ite x2406 (x1716 x1263) (ite x2981 (x1593 x1263) (x467 x1263))) (x1716 x1263))))
(assert (= (x799 x2990) (ite (and (not x4082) x4248 x2885 x2869 x761 x3621) (x596 x2990) (ite (and x3621 x761 x2869 (not x2885) x4248) (x3760 x2990) (ite (and x761 x2869 x3621 (not x4248)) (x4223 x2990) (ite (and x3621 (not x761) x2869) (x2220 x2990) (x530 x2990)))))))
(assert (x188 x2682))
(assert (x3207 x3875))
(assert (= (ite (= x3069 x1463) x2454 (x3672 x1463)) (x1814 x1463)))
(assert (= (ite (= x682 x3499) x1845 (x1488 x3499)) (x1338 x3499)))
(assert (= (ite (and x2541 x3165 (not x92)) (x190 x783) (x4112 x783)) (x641 x783)))
(assert (= (ite (= x3572 (x3377 0)) x1441 (x1338 (x3377 0))) (x2244 (x3377 0))))
(assert (x3207 x1724))
(assert (= (x1197 256) 0))
(assert (x3207 x2136))
(assert (= (ite (= x3537 x3015) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x2410 x3015)) (x1950 x3015)))
(assert (= (x3077 x3093) (ite (= x3093 x492) x890 (x1371 x3093))))
(assert (= (ite (= x1495 x3069) x2454 (x3672 x1495)) (x1814 x1495)))
(assert (= (x3436 x2402) (ite (= x2402 x2595) x3561 (x979 x2402))))
(assert (x3207 x2068))
(assert (x657 x217 x2594))
(assert (= (x2369 x918) (ite (= x918 (x3377 0)) x2794 (x3228 x918))))
(assert (x3207 x4057))
(assert (= (x2001 x2402) (ite (and x1785 x399) (x3100 x2402) (x1728 x2402))))
(assert (= (ite (= x3194 x3118) x2368 (x2043 x3118)) (x2625 x3118)))
(assert (= (ite (and x617 x3779) (ite (and x1060 (not x3613) x2586) (x287 x3915) (x3940 x3915)) (x3940 x3915)) (x2108 x3915)))
(assert (x657 x131 x2456))
(assert (x3207 x2040))
(assert (= (ite (and x617 x3779) (x1039 x2104) (x2497 x2104)) (x257 x2104)))
(assert (= (ite (= x417 x2702) x147 (x518 x417)) (x1371 x417)))
(assert (= (ite (= x709 x557) x3365 (x1260 x709)) (x3690 x709)))
(assert (x3207 x2440))
(assert (= (ite (and (not x1355) x3783 x141) (x239 x2785) (x3098 x2785)) (x1429 x2785)))
(assert (= (ite (= x2010 x1844) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x3826 x2010)) (x1528 x2010)))
(assert (= x1470 (=> (and (= (uninterp_mod (* x4115 x3188) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x454) (= (x2515 (+ x1788 64)) x3570) (= (x2515 (+ 64 x3857)) x3487) (= (x2323 (x3377 1)) x1065) (= (x3037 1461501637330902918203684832716283019655932542975 x131) x189) (= x1934 (x3402 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x669))) (= x2889 (x2515 (+ x3570 64))) (= x3857 (x2515 (+ 64 x2785))) (= x2606 (x3037 18446744073709551615 x2307)) (= (x3037 1461501637330902918203684832716283019655932542975 x3478) x937) (= x669 (x3037 18446744073709551615 x1065)) (= x95 (> x2307 x1934)) (= x2423 (- (/ x454 100) (uninterp_frac x454 100)))) (and (=> x95 x3106) (=> (not x95) x4187)))))
(assert (= (x2396 x3300) (ite (= x3300 x2789) x1703 (x1924 x3300))))
(assert (= (x2115 x691) (ite (= x691 (x3377 0)) x3798 (x4026 x691))))
(assert (= (x2369 x1920) (ite (= (x3377 0) x1920) x2794 (x3228 x1920))))
(assert (x3207 x2927))
(assert (= (x2206 x3807) (ite (= x3807 x2302) x2849 (x3901 x3807))))
(assert (x3207 x1391))
(assert (x3207 x3550))
(assert (= x4289 (and (not x3202) x3256)))
(assert (= (=> (and (= (= x1928 0) x728) (= (x2515 (+ 64 x1885)) x4104) (= (- (/ 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2728) (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2728)) x3352) (= x3356 (ite (< x3352 x1472) 1 0)) (= (x2515 (+ x621 480)) x637) (= x2432 (x3037 x2872 x3356)) (= x3725 (x2515 (+ 160 x621))) (= (ite (not x728) 1 0) x2872) (= x218 (= x2432 0))) (and (=> x218 x3732) (=> (not x218) x1614))) x1165))
(assert (x3207 x1811))
(assert (= x644 (=> (and (= x3 (x372 (x2562 x2916) (x3377 208) 0)) (= x2916 (x3402 (- x3109 1))) (= x2583 (x3037 1461501637330902918203684832716283019655932542975 x1667)) (= (= 0 x2583) x83) (= (x1338 x3) x1667)) (and (=> (not x83) x3529) (=> x83 x3106)))))
(assert (x3207 x3212))
(assert (= (x2108 x709) (ite (and x3779 x617) (ite (and x2586 x1060 (not x3613)) (x287 x709) (x3940 x709)) (x3940 x709))))
(assert (= x582 x1949))
(assert (x3207 x2707))
(assert (= x1360 (=> (and (= x3931 x1740) (= 0 x825)) x1004)))
(assert (x3207 x2864))
(assert (x3207 x3186))
(assert (= (ite (and x3783 (not x1355) x141) (x239 x2591) (x3098 x2591)) (x1429 x2591)))
(assert (= 0 (x2265 (- x2785 x4135))))
(assert (x3207 x953))
(assert (= (ite (= x402 x1193) 0 (x1736 x1193)) (x2497 x1193)))
(assert (x3207 x1646))
(assert (= (x3392 x2085) (ite (= x4182 x2085) x1682 (x1668 x2085))))
(assert (= (x2220 x1263) (ite (= x2590 x1263) x1749 (x3842 x1263))))
(assert (x3207 x3322))
(assert (x3207 x3000))
(assert (x3207 x3223))
(assert (x3207 x3071))
(assert (x3207 x3846))
(assert (= (and x2648 (not x3388)) x2925))
(assert (= (ite (and x559 x2002 (not x1018) x2701 x2947 x791) (x531 x4213) (ite (and x2002 x2947 x2701 x791 (not x559)) (x2425 x4213) (ite (and x2002 x2701 (not x791) x2947) (x3278 x4213) (ite (and x2002 (not x2701) x2947) (x3303 x4213) (x1994 x4213))))) (x3818 x4213)))
(assert (= (and x2550 (not x2424)) x332))
(assert (= x2906 (=> (and (= x525 (x3037 115792089237316195423570985007226406215939081747436879206741300988257197096960 x501)) (= (x3037 1461501637330902918203684832716283019655932542975 x3306) x3737) (= x1441 x525) (= x501 (x1338 x3572)) (= (= 0 x3737) x909) (= (x2244 x1748) x3306) (= x78 0) (= (x372 (x2562 x878) (x3377 210) 0) x3572) (= (x372 (x2562 x878) (x3377 208) 0) x1748)) (and (=> x909 x2260) (=> (not x909) x2661)))))
(assert (= (ite (= x490 x2778) x572 (x2058 x490)) (x394 x490)))
(assert (x3207 x1013))
(assert (= (ite (= x3343 x3910) 0 (x1144 x3910)) (x3492 x3910)))
(assert (x3207 x358))
(assert (x3207 x1835))
(assert (x3207 x2081))
(assert (= (x3553 x1444) (ite (= x1444 x1969) x2633 (x1967 x1444))))
(assert (= x1645 (=> (= x3661 x3483) x4283)))
(assert (x3207 x1472))
(assert (x3207 x1275))
(assert (= 0 (x1197 x2537)))
(assert (x3207 x3310))
(assert (x3207 x1968))
(assert (x3207 x2899))
(assert (= (ite (= x1263 x2595) x3561 (x979 x1263)) (x3436 x1263)))
(assert (= (=> (and (= x2539 (= x871 x2620)) (= x871 x3954)) (and (=> (not x2539) x1982) (=> x2539 x1384))) x3890))
(assert (x3207 x4020))
(assert (= (ite (= x2450 x756) x3763 (x3218 x2450)) (x3628 x2450)))
(assert (x3207 x476))
(assert (x3207 x426))
(assert (x3207 x501))
(assert (x2579 x61 x3425 x2404 x2472))
(assert (x3207 x4163))
(assert (= x3396 (=> (and (= (= x1823 x15) x2656) (= x15 x961)) (and (=> (not x2656) x3556) (=> x2656 x1992)))))
(assert (= (ite (= x3194 x1463) x2368 (x2043 x1463)) (x2625 x1463)))
(assert (x2832 x404 x1724))
(assert (= (ite (and x3621 x2869 (not x2111)) (x799 x999) (x2418 x999)) (x2708 x999)))
(assert (x3207 x2413))
(assert (x3207 x3661))
(assert (x3207 x124))
(assert (= 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x3641 (x3377 37714057306076988483118529490347679105585116642029194716945419020321082336612))))
(assert (= (ite (and (not x1018) x2002 x559 x2701 x2947 x791) (x531 x1105) (ite (and x2701 x2947 (not x559) x2002 x791) (x2425 x1105) (ite (and (not x791) x2947 x2002 x2701) (x3278 x1105) (ite (and x2002 x2947 (not x2701)) (x3303 x1105) (x1994 x1105))))) (x3818 x1105)))
(assert (x3207 x2683))
(assert (= (x3052 x3093) (ite (and x3423 x4071 x3056 (not x2859) x483 x2509) (x3436 x3093) (ite (and x3056 x3423 x4071 x2509 (not x483)) (x979 x3093) (ite (and x4071 (not x3056) x3423 x2509) (x3898 x3093) (ite (and x4071 (not x2509) x3423) (x1528 x3093) (x1623 x3093)))))))
(assert (x2954 x3996))
(assert (x188 x1469))
(assert (x3207 x1908))
(assert (= (ite (= x2302 x4162) x2849 (x3901 x4162)) (x2206 x4162)))
(assert (x3207 x1077))
(assert (x3207 x423))
(assert (x3207 x1971))
(assert (x3207 x4053))
(assert (= (x126 x4230) (ite (= x4230 x1228) x3067 (x1442 x4230))))
(assert (x3207 x1773))
(assert (x3207 x200))
(assert (= (x3098 x1606) (ite (= x1606 x930) x24 (x3720 x1606))))
(assert (x3207 x3717))
(assert (= (or (and (not x827) x401) (and x3651 (not x450))) x2803))
(assert (= (ite (= x374 x637) x1658 (x842 x374)) (x1298 x374)))
(assert (= (x2637 x374) (ite (and (not x427) x3892 x1955) (x1922 x374) (x549 x374))))
(assert (= (x3377 2311529814) (x2562 2311529814)))
(assert (x3207 x147))
(assert (= (ite (and x2649 x207 x64 (not x3115) x3165 x2541) (x2396 x1907) (ite (and x2541 (not x2649) x207 x64 x3165) (x1924 x1907) (ite (and x3165 (not x207) x2541 x64) (x2625 x1907) (ite (and x3165 (not x64) x2541) (x2043 x1907) (x20 x1907))))) (x190 x1907)))
(assert (x3207 x3635))
(assert (= x1194 (or (and x1437 x2605) (and (not x146) x3707))))
(assert (= (and (not x2461) x2209) x2784))
(assert (= (or x1264 (and x2065 (not x3942))) x3934))
(assert (= (=> (and (= (x1310 (x2562 x474)) x1287) x1739 (= x2498 (x1029 (x2562 274184521717934524641157099916833587240))) (= (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1310 (x2562 x474))) x1739) (= (= x474 274184521717934524641157099916833587206) x3750)) (and (=> (not x3750) x3592) (=> x3750 x4125))) x632))
(assert (x3207 x4233))
(assert (x3207 x2479))
(assert (= (ite (= x3069 x4213) x2454 (x3672 x4213)) (x1814 x4213)))
(assert (x3207 x3548))
(assert (= (ite (= x817 x1443) 274184521717934524641157099916833587240 (x2961 x817)) (x3588 x817)))
(assert (= (ite x1350 (ite x2406 (x1716 x2785) (ite x2981 (x1593 x2785) (x467 x2785))) (x1716 x2785)) (x3416 x2785)))
(assert (= (x3416 x723) (ite x1350 (ite x2406 (x1716 x723) (ite x2981 (x1593 x723) (x467 x723))) (x1716 x723))))
(assert (= (ite (and x2541 x3165 x207 x2649 x64 (not x3115)) (x2396 x1463) (ite (and x3165 x2541 x207 (not x2649) x64) (x1924 x1463) (ite (and x2541 x64 (not x207) x3165) (x2625 x1463) (ite (and x3165 (not x64) x2541) (x2043 x1463) (x20 x1463))))) (x190 x1463)))
(assert (x188 x1957))
(assert (= (x126 x1548) (ite (= x1548 x1228) x3067 (x1442 x1548))))
(assert (= x1673 (=> (= (= 274184521717934524641157099916833587202 x3879) x3976) (and (=> x3976 x265) (=> (not x3976) x322)))))
(assert (=> (< (- x185 1) 10000) (= (x3377 x185) (x2562 x185))))
(assert (= (x428 x3093) 0))
(assert (x3207 x390))
(assert (= (ite (= x3357 x1474) x3348 (x3760 x1474)) (x596 x1474)))
(assert (= (x1924 x3300) (ite (= x3300 x2977) x4123 (x2625 x3300))))
(assert (= (x596 x417) (ite (= x417 x3357) x3348 (x3760 x417))))
(assert (x3207 x88))
(assert (x3207 x2666))
(assert (x188 274184521717934524641157099916833587206))
(assert (= x3366 (and (not x2263) x3470)))
(assert (x3207 x2417))
(assert (x3207 x1475))
(assert (= (x3641 (x2562 274184521717934524641157099916833587202)) 274184521717934524641157099916833587202))
(assert (= x2065 (and (not x3410) x3374)))
(assert (= 274184521717934524641157099916833587206 (x3641 (x3377 274184521717934524641157099916833587206))))
(assert (x2954 x194))
(assert (= (ite (and x2885 x761 x4248 (not x4082) x3621 x2869) (x596 x1548) (ite (and x2869 x4248 x761 (not x2885) x3621) (x3760 x1548) (ite (and x2869 x761 x3621 (not x4248)) (x4223 x1548) (ite (and (not x761) x3621 x2869) (x2220 x1548) (x530 x1548))))) (x799 x1548)))
(assert (= (x3303 x3910) (ite (= x3691 x3910) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x1274 x3910))))
(assert (= (ite (= x2281 x1083) x3956 (x1321 x2281)) (x2448 x2281)))
(assert (x3825 x962 x3574))
(assert (= (ite (= x2853 (x3377 0)) x3798 (x4026 x2853)) (x2115 x2853)))
(assert (= (ite (= x2977 x783) x4123 (x2625 x783)) (x1924 x783)))
(assert (x3207 x4213))
(assert (= x1312 (=> (and (< x51 1166402363) (< x51 2311529814) (not (> 4 x80)) (not (= x51 455944412)) (= 599290589 x51) (= x80 100) (= x2202 x32) (> x2184 0) (not (= x51 511946350)) (= 16156842317565293874272834530371880720966471053262404558597773956279093428224 x3065) (not (> 455944412 x51)) (= x2620 x3362) (= x47 (or (> x2275 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (> 96 x2275) (= true (<= x2275 57896044618658097711785492504343953926634992332820282019728792003956564819967))))) (= (x3060 (x2562 274184521717934524641157099916833587240)) x2184) (= (x3402 (- x80 4)) x2275) (= x80 x165)) (and (=> (not x47) x2283) (=> x47 x1360)))))
(assert (x3207 x2529))
(assert (= x447 (=> (and (= x2072 x2659) (= x4282 (x372 (x2562 274184521717934524641157099916833587240) (x3377 1) 0)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x951) (= x3048 (> x3223 x951)) (>= x951 0) (= (x486 x4282) x951) (= x445 274184521717934524641157099916833587240)) (and (=> (not x3048) x2511) (=> x3048 x1047)))))
(assert (x3207 x3926))
(assert (= (and x2776 x3999) x2332))
(assert (x3207 x1591))
(assert (= (ite (= (x3377 0) x2156) x2794 (x3228 x2156)) (x2369 x2156)))
(assert (x2954 x1220))
(assert (= (x3641 (x2562 x3879)) x3879))
(assert (=> (> (+ 10000 1) x122) (= (x2562 x122) (x3377 x122))))
(assert (x3207 x1450))
(assert (= (and x1492 x1600) x345))
(assert (x657 x3528 x1818))
(assert (= x3181 (=> (and (= x4092 x1956) (= x3010 x359)) x69)))
(assert (x3207 x4085))
(assert (= (x1924 x3910) (ite (= x2977 x3910) x4123 (x2625 x3910))))
(assert (= x2139 (and x2076 (not x3459))))
(assert (x2954 x3528))
(assert (= x1745 (=> (= (> x3273 18446744073709551615) x540) (and (=> (not x540) x2427) (=> x540 x3106)))))
(assert (x3207 x1925))
(assert (x3207 x983))
(assert (x2579 x3229 x1808 x3439 x1491))
(assert (x2750 x2008 x3493))
(assert (= (ite (and x2869 x761 x3621 x4248 x2885 (not x4082)) (x596 x2402) (ite (and (not x2885) x761 x2869 x3621 x4248) (x3760 x2402) (ite (and x3621 (not x4248) x2869 x761) (x4223 x2402) (ite (and x2869 (not x761) x3621) (x2220 x2402) (x530 x2402))))) (x799 x2402)))
(assert (= (x2708 x1474) (ite (and (not x2111) x2869 x3621) (x799 x1474) (x2418 x1474))))
(assert (x3207 x2420))
(assert (= (and x222 (not x540)) x1014))
(assert (= (ite (= x3357 x2799) x3348 (x3760 x2799)) (x596 x2799)))
(assert (x3207 x4278))
(assert (x3207 x2517))
(assert (= (=> (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x928) (= x101 (x372 (x2562 x871) (x3377 1) 0)) (= x3659 (x3402 (- x2786 x1275))) (= x3742 274184521717934524641157099916833587240) (= x928 (x3754 x1541)) (= (x3402 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1275)) x3148) (= x2088 (< x3148 x928)) (<= 0 x928) (= (x372 (x2562 274184521717934524641157099916833587240) (x3377 1) 0) x1541)) (and (=> (not x2088) x3594) (=> x2088 x1982))) x302))
(assert (= (=> (and (= (> 1 x665) x433) (= (x3521 (x3377 0)) x665)) (and (=> x433 x3106) (=> (and (= x3581 false) (not x433)) x3961))) x1122))
(assert (x3207 x2395))
(assert (= (x858 x960) (ite (and x650 x296 (not x1914)) (x116 x960) (x2055 x960))))
(assert (x3207 x2202))
(assert (= (x1668 x2104) (ite (= x1414 x2104) x4020 (x744 x2104))))
(assert (x3207 x3206))
(assert (= (ite (= x492 x1548) x890 (x1371 x1548)) (x3077 x1548)))
(assert (= true x689))
(assert (= x2235 (=> (= x3421 x3015) x3508)))
(assert (x3207 x2007))
(assert (x3207 x3725))
(assert (x3207 x4229))
(assert (= (ite (= x756 (x3377 0)) x3798 (x4026 x756)) (x2115 x756)))
(assert (= (and x2503 (not x1011)) x2602))
(assert (x2954 x1737))
(assert (= x1402 (and (not x4130) x1663)))
(assert (x3207 x3698))
(assert (x3207 x2575))
(assert (x3207 x166))
(assert (= (ite (= x3570 x2590) x1749 (x3842 x3570)) (x2220 x3570)))
(assert (x3207 x584))
(assert (x3207 x808))
(assert (x3207 x4111))
(assert (= (x219 x2730) (ite (= x2730 x1049) x983 (x2058 x2730))))
(assert (x3207 x2370))
(assert (x3207 x2826))
(assert (= (ite (= x682 x1567) x1845 (x1488 x1567)) (x1338 x1567)))
(assert (x3207 x4160))
(assert (= (ite (= x1920 x1219) x3714 (x2369 x1920)) (x1967 x1920)))
(assert (= (x1668 x817) (ite (= x817 x1414) x4020 (x744 x817))))
(assert (x3207 x3808))
(assert (x3207 x2474))
(assert (= x1255 (and x1304 x1578)))
(assert (= (x1751 x2402) (ite (= x2402 x154) 0 (x720 x2402))))
(assert (x3207 x583))
(assert (x3207 x459))
(assert (= x1810 (or x4266 x2831 x1561)))
(assert (x2954 x1351))
(assert (x3207 x1202))
(assert (x3207 x870))
(assert (x3207 x1936))
(assert (= (ite (= x3433 x3194) x2368 (x2043 x3433)) (x2625 x3433)))
(assert (= (ite (= x374 x422) x3522 (x923 x374)) (x744 x374)))
(assert (= (ite (= x4213 x3691) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x1274 x4213)) (x3303 x4213)))
(assert (= (ite (= x3705 x3391) x1822 (x3766 x3705)) (x896 x3705)))
(assert (= (or x3345 (and (not x785) x1043)) x4266))
(assert (x188 x1553))
(assert (x188 274184521717934524641157099916833587202))
(assert (=> (< (- x2934 1) 10000) (= (x2562 x2934) (x3377 x2934))))
(assert (x3207 x640))
(assert (=> (> (+ 10000 1) x1341) (= (x3377 x1341) (x2562 x1341))))
(assert (= (ite (= x817 x2977) x4123 (x2625 x817)) (x1924 x817)))
(assert (x3207 x3522))
(assert (= (ite (= x3264 x4186) x2966 (x3161 x3264)) (x3218 x3264)))
(assert (= (x1880 x1485) (ite (= x2429 x1485) x2731 (x3392 x1485))))
(assert (= (ite (= x3469 x3910) x4144 (x2425 x3910)) (x531 x3910)))
(assert (= (x2625 x1111) (ite (= x1111 x3194) x2368 (x2043 x1111))))
(assert (= (ite (= x3357 x1465) x3348 (x3760 x1465)) (x596 x1465)))
(assert (x3207 x2023))
(assert (= (ite (= x2252 (x3377 0)) x3798 (x4026 x2252)) (x2115 x2252)))
(assert (= (ite (and x4248 x761 x3621 x2885 (not x4082) x2869) (x596 x2341) (ite (and x3621 x4248 (not x2885) x761 x2869) (x3760 x2341) (ite (and x3621 x761 (not x4248) x2869) (x4223 x2341) (ite (and x2869 (not x761) x3621) (x2220 x2341) (x530 x2341))))) (x799 x2341)))
(assert (x3207 x3401))
(assert (x3207 x3903))
(assert (x3207 x4139))
(assert (= (ite (and x617 x3779) (ite (and (not x3613) x1060 x2586) (x517 (x2562 x2620)) (x2654 (x2562 x2620))) (x2654 (x2562 x2620))) (x3040 (x2562 x2620))))
(assert (= x173 (and x198 x3803)))
(assert (x3207 x3033))
(assert (x3207 x2078))
(assert (x3207 x1901))
(assert (= (ite (= x4104 x2429) x2731 (x3392 x4104)) (x1880 x4104)))
(assert (= (ite (= x3789 x3806) 274184521717934524641157099916833587240 (x3929 x3789)) (x1176 x3789)))
(assert (x3207 x3985))
(assert (= (x2637 x1463) (ite (and (not x427) x1955 x3892) (x1922 x1463) (x549 x1463))))
(assert (= (or (and x96 (not x3977)) (and x3711 (not x3517))) x2179))
(assert (= (x190 x4104) (ite (and x2541 x64 x207 x2649 x3165 (not x3115)) (x2396 x4104) (ite (and x207 x2541 x3165 (not x2649) x64) (x1924 x4104) (ite (and (not x207) x2541 x3165 x64) (x2625 x4104) (ite (and x3165 (not x64) x2541) (x2043 x4104) (x20 x4104)))))))
(assert (x2954 x1343))
(assert (x3207 x1980))
(assert (x3207 x3777))
(assert (= (x4223 x999) (ite (= x999 x4143) x4131 (x2220 x999))))
(assert (= (and x4292 x685) x133))
(assert (x2954 x2941))
(assert (x3207 x1153))
(assert (x3207 x972))
(assert (x3207 x1959))
(assert (x2954 x3466))
(assert (= 115792089237316195423570985008687907853269984665640564039457584007913129639904 (x3641 (x3377 115792089237316195423570985008687907853269984665640564039457584007913129639904))))
(assert (= (ite (= x3317 x2789) x1703 (x1924 x3317)) (x2396 x3317)))
(assert (= x3579 (=> (and (= x1991 (x372 (x2562 x3321) (x3377 1) 0)) (= x3850 (x3402 (- x3679 x3004))) (= (x1544 x4291) x1015) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1015) (= 274184521717934524641157099916833587240 x719) (= (x372 (x2562 274184521717934524641157099916833587240) (x3377 1) 0) x4291) (= x4222 (< x1369 x1015)) (<= 0 x1015) (= x1369 (x3402 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3004)))) (and (=> x4222 x31) (=> (not x4222) x3673)))))
(assert (= x2363 (=> (and (= x3004 x4085) (= (< x3679 x24) x3248) (>= x3679 0) (= (x1864 x292) x3679) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3679) (= (x372 (x2562 x3321) (x3377 1) 0) x292)) (and (=> (not x3248) x2177) (=> x3248 x31)))))
(assert (x3207 x4086))
(assert (= (x2043 x817) (ite (= x2474 x817) x199 (x362 x817))))
(assert (= (x2115 x1547) (ite (= (x3377 0) x1547) x3798 (x4026 x1547))))
(assert (x657 x570 x529))
(assert (= (ite (= x2537 x402) 0 (x1736 x2537)) (x2497 x2537)))
(assert (= (ite (and x2869 x3621 (not x2111)) (x799 x1207) (x2418 x1207)) (x2708 x1207)))
(assert (= x3173 (x3641 (x2562 x3173))))
(assert (= (and (not x2691) x4007) x351))
(assert (= x117 (=> (and (= x3649 (x3037 1461501637330902918203684832716283019655932542975 x4240)) (= x4240 (x2369 x1872)) (= (= x3649 0) x3460) (= x1872 (x372 (x2562 x2682) (x3377 208) 0))) (and (=> x3460 x3162) (=> (not x3460) x3587)))))
(assert (= (x975 x4162) (ite (and x1785 x399) (ite (and x3424 (not x4060) x1101) (x3526 x4162) (x1868 x4162)) (x1868 x4162))))
(assert (x3207 x947))
(assert (x3207 x3691))
(assert (= (ite (= x1228 x3093) x3067 (x1442 x3093)) (x126 x3093)))
(assert (=> (< (- x513 1) 10000) (= (x3377 x513) (x2562 x513))))
(assert (x3207 x3710))
(assert (x1257 x1968 x2247))
(assert (= (x1751 x999) (ite (= x154 x999) 0 (x720 x999))))
(assert (x3207 x2704))
(assert (x3207 x1283))
(assert (x3207 x2986))
(assert (= (ite (and x581 (not x631) x4093 x2608 x2270 x311) (x2837 x1548) (ite (and x581 x4093 x2270 (not x2608) x311) (x3077 x1548) (ite (and x311 x581 (not x4093) x2270) (x1371 x1548) (ite (and (not x581) x311 x2270) (x518 x1548) (x3794 x1548))))) (x3990 x1548)))
(assert (= (x518 x1548) (ite (= x1548 x1678) x3841 (x2757 x1548))))
(assert (x3207 x2516))
(assert (= (x126 x1192) (ite (= x1228 x1192) x3067 (x1442 x1192))))
(assert (x1257 x1343 x2149))
(assert (= (=> (= x2627 (= 274184521717934524641157099916833587202 x3515)) (and (=> x2627 x3359) (=> (not x2627) x143))) x660))
(assert (= (ite (= x154 x1548) 0 (x720 x1548)) (x1751 x1548)))
(assert (x3207 x2402))
(assert (x3207 x2484))
(assert (= (=> (and (= x2440 x509) (= (x3060 (x2562 x2620)) x3293) (= (x2515 (+ 32 x509)) x1364) (= (x2515 (+ 4 x1311)) x2440) (= x35 (= 0 x3293)) (= x2915 (x3037 1461501637330902918203684832716283019655932542975 x2599))) (and (=> (and (or (and (= x1848 (x3040 (x2562 x2620))) x3657 (= (<= x2453 (x2581 (x2562 274184521717934524641157099916833587240))) x1208) (> 4294967296 x3771) x2601 x1208 (= x2453 (x3040 (x2562 274184521717934524641157099916833587240))) (= (= (x2581 (x2562 x2620)) x1848) x2601)) (not x3657)) (= x3657 (> x1410 0)) (not x35)) x613) (=> x35 x1614))) x2865))
(assert (= x1100 (=> (and (= x4092 x3361) (= x3010 x365)) x69)))
(assert (= (x2708 x4230) (ite (and x2869 x3621 (not x2111)) (x799 x4230) (x2418 x4230))))
(assert (= (x2637 x3910) (ite (and (not x427) x1955 x3892) (x1922 x3910) (x549 x3910))))
(assert (x3207 x4018))
(assert (= (ite (= x3789 x4041) x459 (x3898 x3789)) (x979 x3789)))
(assert (x3207 x2644))
(assert (= (ite x2551 (ite x3934 (x703 x209) (ite x356 (x1572 x209) (x3694 x209))) (x703 x209)) (x2767 x209)))
(assert (= x1496 (and x2536 (not x2251))))
(assert (x3207 x1585))
(assert (x3207 x1397))
(assert (= x1643 (and x3707 x146)))
(assert (= x2667 (and x4179 (not x3654))))
(assert (x2954 x570))
(assert (= (=> (and (= (= x1654 0) x3337) (= x814 x1192) (= x1654 (x858 x1192))) (and (=> (not x3337) x2920) (=> x3337 x899))) x3575))
(assert (x3207 x512))
(assert (= (and x4084 x2428) x950))
(assert (=> (> (+ 10000 1) x589) (= (x3377 x589) (x2562 x589))))
(assert (= x2706 (=> (or (and (not x1775) (= x1775 x300)) (and (= x300 x1775) x1775)) x1189)))
(assert (= (ite (= x3725 x3194) x2368 (x2043 x3725)) (x2625 x3725)))
(assert (= (or (and x399 x1785) (and (not x311) x2270)) x456))
(assert (= (ite (and (not x92) x2541 x3165) (x190 x1495) (x4112 x1495)) (x641 x1495)))
(assert (x3207 x738))
(assert (= x500 (and (not x3507) x1816)))
(assert (= (ite (= x637 160) x1658 (x842 160)) (x1298 160)))
(assert (= (ite (= x3433 x422) x3522 (x923 x3433)) (x744 x3433)))
(assert (x3207 x3096))
(assert (= x2375 (=> (and (= x1426 100) (not (> 4 x1426)) (= x1426 x2071) (= x1017 x58) (not (= 404098525 x3156)) (= x1075 (or (> x2744 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (> 96 x2744) (= true (<= x2744 57896044618658097711785492504343953926634992332820282019728792003956564819967))))) (= 599290589 x3156) (< 0 x4086) (= (x3402 (- x1426 4)) x2744) (= x1399 x4300) (= x3800 16156842317565293874272834530371880720966471053262404558597773956279093428224) (not (= 157198259 x3156)) (< x3156 826074471) (not (= 117300739 x3156)) (= x4086 (x3060 (x2562 274184521717934524641157099916833587206)))) (and (=> x1075 x1798) (=> (not x1075) x965)))))
(assert (= (ite (= x1443 x2104) 274184521717934524641157099916833587240 (x2961 x2104)) (x3588 x2104)))
(assert (x3207 x3540))
(assert (= (=> (and (= x146 (< 0 x278)) (= (x1882 x999) x278)) (and (=> (not x146) x1722) (=> x146 x1750))) x4302))
(assert (= (x3377 1166402363) (x2562 1166402363)))
(assert (= (x2115 x73) (ite (= x73 (x3377 0)) x3798 (x4026 x73))))
(assert (= (ite (= x2104 x2977) x4123 (x2625 x2104)) (x1924 x2104)))
(assert (x3207 x1563))
(assert (x2954 x1781))
(assert (x3207 x1406))
(assert (= (ite (= x682 x46) x1845 (x1488 x46)) (x1338 x46)))
(assert (x3207 x4134))
(assert (= (x1156 x723) (ite (= x2451 x723) x1890 (x1267 x723))))
(assert (x3207 x1258))
(assert (= (x3303 x938) (ite (= x938 x3691) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x1274 x938))))
(assert (= x3159 (=> (and (= x2826 274184521717934524641157099916833587240) (= x4139 274184521717934524641157099916833587240) (<= 0 x2575) (= (x372 (x2562 x1399) (x3377 2) 0) x2488) (= (x3441 x3919) x2575) (= (> x1017 x2575) x488) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2575) (= x3391 (x372 (x2562 274184521717934524641157099916833587240) (x3377 1) 0)) (= (x372 (x2562 274184521717934524641157099916833587240) x2488 0) x3919)) (and (=> (not x488) x2011) (=> x488 x1798)))))
(assert (= (x2220 160) (ite (= x2590 160) x1749 (x3842 160))))
(assert (= (x3377 599290589) (x2562 599290589)))
(assert (=> (> (+ 10000 1) x2682) (= (x2562 x2682) (x3377 x2682))))
(assert (x3207 x3016))
(assert (x2954 x2769))
(assert (x3207 x3910))
(assert (= x1731 (and x3023 (not x2311))))
(assert (= (and x3768 (not x3844)) x3043))
(assert (= (x1214 x2402) (ite (= x2005 x2402) 274184521717934524641157099916833587240 (x4226 x2402))))
(assert (= (ite (and x465 x1630 x919 x4198 (not x3643) x3284) (x1880 x374) (ite (and x919 x4198 (not x3284) x1630 x465) (x3392 x374) (ite (and (not x4198) x919 x465 x1630) (x1668 x374) (ite (and x1630 x919 (not x465)) (x744 x374) (x2231 x374))))) (x396 x374)))
(assert (x3207 x3105))
(assert (= (=> (and (= x3982 (= x3401 x782)) (= x782 x3749)) (and (=> x3982 x4122) (=> (not x3982) x3889))) x959))
(assert (= 0 (x1197 x3300)))
(assert (= (=> (= x3977 (= x3774 0)) (and (=> (not x3977) x885) (=> x3977 x3106))) x3059))
(assert (x188 x2620))
(assert (x3207 x2923))
(assert (= x3318 (x3641 (x2562 x3318))))
(assert (x3207 x2530))
(assert (= (ite (and (not x3139) x2667) (x1637 (x2562 x3808)) (ite x1109 (ite x2551 (x4118 (x2562 x3808)) (x3040 (x2562 x3808))) (x3040 (x2562 x3808)))) (x1029 (x2562 x3808))))
(assert (= (ite (= (x3377 0) x1872) x2794 (x3228 x1872)) (x2369 x1872)))
(assert (x3207 x3352))
(assert (= x137 (x3641 (x2562 x137))))
(assert (= (ite (= x2595 x1606) x3561 (x979 x1606)) (x3436 x1606)))
(assert (= (ite (and x399 x1785) (ite (and (not x4060) x3424 x1101) (x1696 (x2562 x2583)) (x2675 (x2562 x2583))) (x2675 (x2562 x2583))) (x3309 (x2562 x2583))))
(assert (x3207 x637))
(assert (x3207 x2890))
(assert (= (ite (and x2541 x3165 (not x92)) (x190 x209) (x4112 x209)) (x641 x209)))
(assert (= (x2001 x3044) (ite (and x1785 x399) (x3100 x3044) (x1728 x3044))))
(assert (= (x396 x1742) (ite (and x4198 x1630 (not x3643) x465 x3284 x919) (x1880 x1742) (ite (and x4198 (not x3284) x465 x919 x1630) (x3392 x1742) (ite (and x465 x1630 (not x4198) x919) (x1668 x1742) (ite (and (not x465) x919 x1630) (x744 x1742) (x2231 x1742)))))))
(assert (= x3279 (x3641 (x2562 x3279))))
(assert (= x3180 (and x1014 x2510)))
(assert (x3207 x1473))
(assert (= (x2220 x3310) (ite (= x3310 x2590) x1749 (x3842 x3310))))
(assert (= (x3619 x2274 96) (uninterp_mod (* x2274 79228162514264337593543950336) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (= 0 (x428 x802)))
(assert (x2954 x3916))
(assert (x3207 x2953))
(assert (x188 x3212))
(assert (x3207 x3151))
(assert (= x3726 (=> (and (= (x372 (x2562 x3362) (x3377 209) 0) x756) (= (> 1 x3631) x3410) (= x3631 (x3218 x756))) (and (=> (not x3410) x3773) (=> x3410 x1360)))))
(assert (x3207 x2085))
(assert (= (ite (= x4010 x1707) x1540 (x1601 x1707)) (x3161 x1707)))
(assert (= x1842 (=> (and (= x3894 (x3040 (x2562 274184521717934524641157099916833587240))) (= x3299 (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x2148 (x2562 x3879)))) (= (= x3879 274184521717934524641157099916833587240) x1239) (= (x2148 (x2562 x3879)) x337) x3299) (and (=> x1239 x1312) (=> (not x1239) x1230)))))
(assert (= x1750 (=> (and (= x3652 (x1882 x999)) (= (or (> x3652 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3652)) (< x3652 32))) x1066)) (and (=> (not x1066) x2201) (=> x1066 x3106)))))
(assert (= x3587 (=> (= x1484 (= x2720 x3649)) (and (=> x1484 x342) (=> (not x1484) x3162)))))
(assert (= (+ 2 (x3641 x1086)) (x3641 (x3546 x1086 2))))
(assert (x3207 x2785))
(assert (x3207 x3631))
(assert (= (or (and x654 x420) (and x2687 x1685) (and x2216 x1574) (and x3112 x1586) (and x2443 x3119) (and x4133 x1366) (and x3455 x54) (and (not x2656) x4239)) x859))
(assert (= (x2220 256) (ite (= 256 x2590) x1749 (x3842 256))))
(assert (= 0 (x1197 x2482)))
(assert (= (x2545 x2413) (ite x258 (ite x3184 (x3265 x2413) (x1332 x2413)) (x2455 x2413))))
(assert (= (x2369 x1219) (ite (= (x3377 0) x1219) x2794 (x3228 x1219))))
(assert (x3207 x3475))
(assert (x3207 x78))
(assert (= (x3377 115792089237316195423570985008687907853269984665640564039457584007913129639935) (x2562 115792089237316195423570985008687907853269984665640564039457584007913129639935)))
(assert (= x834 (x3641 (x2562 x834))))
(assert (= (ite (= x1567 x1219) x3714 (x2369 x1567)) (x1967 x1567)))
(assert (= (x270 x4213) (ite (and x2803 (not x35) x3657) (x1688 x4213) (x383 x4213))))
(assert (= x3260 (=> (and (= x569 (x429 x369)) (= x463 (x372 (x2562 x3321) (x3377 2) 0)) (<= 0 x569) (= x284 274184521717934524641157099916833587240) (= x369 (x372 (x2562 274184521717934524641157099916833587240) x463 0)) (= x1656 274184521717934524641157099916833587240) (= x2470 (x372 (x2562 274184521717934524641157099916833587240) (x3377 1) 0)) (<= x569 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x1187 (> x3004 x569))) (and (=> x1187 x31) (=> (not x1187) x3101)))))
(assert (= (x1668 x4104) (ite (= x4104 x1414) x4020 (x744 x4104))))
(assert (= (or (and x3344 (not x2036)) (and x608 x595)) x1109))
(assert (x3207 x234))
(assert (= 26959946667150639794667015087019630673637144422540572481103610249216 (x3641 (x3377 26959946667150639794667015087019630673637144422540572481103610249216))))
(assert (= (ite (= x2789 x2537) x1703 (x1924 x2537)) (x2396 x2537)))
(assert (x3207 x451))
(assert (x3207 x3395))
(assert (=> (< (- x3279 1) 10000) (= (x3377 x3279) (x2562 x3279))))
(assert (x3207 x1459))
(assert (x3207 x3874))
(assert (= (ite (= x1678 x723) x3841 (x2757 x723)) (x518 x723)))
(assert (= (x2564 x2146) (ite (= x2146 x3341) x84 (x3754 x2146))))
(assert (x3207 x794))
(assert (x188 x3279))
(assert (x2954 115792089210356248756420345214020892766250353992003419616917011526809519390720))
(assert (x3207 x2213))
(assert (x3207 x2812))
(assert (= 404098525 (x3641 (x3377 404098525))))
(assert (= (x1461 x999) (ite (and x956 x1204 x4252 (not x554) x1777 x1511) (x1778 x999) (ite (and (not x4252) x1204 x1511 x956 x1777) (x223 x999) (ite (and x956 x1204 (not x1511) x1777) (x1156 x999) (ite (and (not x956) x1777 x1204) (x1267 x999) (x3748 x999)))))))
(assert (= (ite (= x2451 x3093) x1890 (x1267 x3093)) (x1156 x3093)))
(assert (x3207 x1802))
(assert (= (x4255 x4295) (ite (= x2253 x4295) x1502 (x394 x4295))))
(assert (= x1553 (x3641 (x2562 x1553))))
(assert (x3207 x2308))
(assert (x3207 x3770))
(assert (= x2703 (=> (and (= x583 (x3402 (- x1796 4))) (= (or (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x583)) (< x583 96)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x583)) x2422) (not (= x4278 404098525)) (= x1823 x4000) (not (= 117300739 x4278)) (= x3903 x1796) (= x836 x357) (< 0 x2362) (= (x3060 (x2562 274184521717934524641157099916833587206)) x2362) (= x736 16156842317565293874272834530371880720966471053262404558597773956279093428224) (= x4278 599290589) (not (> 4 x1796)) (= 100 x1796) (not (= 157198259 x4278)) (> 826074471 x4278)) (and (=> x2422 x3988) (=> (not x2422) x2207)))))
(assert (= x140 (=> (and (= x2329 (= x2864 0)) (= (x2515 (+ x402 32)) x3126) (= (x3037 1461501637330902918203684832716283019655932542975 x570) x2864) (= x4056 (x3402 (- x3426 1)))) (and (=> x2329 x1614) (=> (not x2329) x2027)))))
(assert (x3207 x814))
(assert (= x4220 (x3641 (x2562 x4220))))
(assert (x3207 x1465))
(assert (= (x2497 x1485) (ite (= x1485 x402) 0 (x1736 x1485))))
(assert (= x1272 (=> (and (= (= x3505 (ite x2160 1 0)) x1962) (= (= x3505 0) x752) (= x3505 (x1009 x1105)) (= x1105 (x2515 (+ x3433 32))) (= (not x752) x2160)) (and (=> x1962 x1829) (=> (not x1962) x1614)))))
(assert (= (x3641 (x2562 x1591)) x1591))
(assert (x3207 x3708))
(assert (= (=> (and (= (x2515 (+ x3769 x89)) x2059) (= x759 (> x3769 x2059))) (and (=> x759 x2505) (=> (and (= x3045 x1002) (= x1831 1) (not x759) (= x1677 32)) x3578))) x1640))
(assert (= (ite (= x1966 x2591) x166 (x223 x2591)) (x1778 x2591)))
(assert (= (x2369 x2732) (ite (= x2732 (x3377 0)) x2794 (x3228 x2732))))
(assert (= x25 (=> (and (not (= x3174 157198259)) (= x2420 x794) (not (= x3174 404098525)) (= x3174 599290589) (= (or (and (< x2992 96) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2992) true)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2992)) x4180) (= x2063 (x3060 (x2562 274184521717934524641157099916833587202))) (< 0 x2063) (= x3004 x24) (= 100 x794) (= 16156842317565293874272834530371880720966471053262404558597773956279093428224 x3899) (= x2992 (x3402 (- x794 4))) (> 826074471 x3174) (not (< x794 4)) (= x3321 x2583) (not (= x3174 117300739))) (and (=> (not x4180) x564) (=> x4180 x31)))))
(assert (=> (> (+ 10000 1) x1399) (= (x3377 x1399) (x2562 x1399))))
(assert (x3207 x3830))
(assert (= (=> (and (= x3999 (= x3125 x8)) (= x3125 (x2852 x3824)) (= x3824 x1379) (= x8 (x3037 115792089210356248756420345214020892766250353992003419616917011526809519390720 x3125))) (and (=> x3999 x3933) (=> (not x3999) x1614))) x4051))
(assert (=> (> (+ 10000 1) x167) (= (x2562 x167) (x3377 x167))))
(assert (= (ite (= x2702 x999) x147 (x518 x999)) (x1371 x999)))
(assert (= (x2497 x1495) (ite (= x1495 x402) 0 (x1736 x1495))))
(assert (= (and x1947 x1935) x1622))
(assert (= (ite (and x2541 (not x92) x3165) (x190 x2552) (x4112 x2552)) (x641 x2552)))
(assert (= x4274 (and (not x1633) x760)))
(assert (= (=> (and (= x815 (x372 (x2562 x1044) (x3377 208) 0)) (= x1044 x3582) (= x767 (not (= x2150 0))) (= x2827 274184521717934524641157099916833587240) (= 274184521717934524641157099916833587240 x3788) (= x2150 (x3037 1461501637330902918203684832716283019655932542975 x3916)) (= x3916 (x2115 x815))) (and (=> (not x767) x2903) (=> x767 x3121))) x1157))
(assert (= (x1728 x2402) (ite (= x1024 x2402) 0 (x1337 x2402))))
(assert (x3207 x1305))
(assert (= x1583 (and x320 (not x1281))))
(assert (x3207 x1675))
(assert (x3207 x2067))
(assert (x3207 x417))
(assert (x3207 x1433))
(assert (= (and x2270 x311) x3424))
(assert (= (ite (= x1228 x3310) x3067 (x1442 x3310)) (x126 x3310)))
(assert (x3207 x3489))
(assert (= 0 (x428 x723)))
(assert (= (=> (= (= x460 0) x2691) (and (=> (not x2691) x3210) (=> x2691 x3106))) x1744))
(assert (= x4303 (and x3828 (not x3615))))
(assert (x3207 x2005))
(assert (= (ite (= x3343 x1485) 0 (x1144 x1485)) (x3492 x1485)))
(assert (= (ite (= x3194 x1105) x2368 (x2043 x1105)) (x2625 x1105)))
(assert (x3207 x4195))
(assert (= (ite (and x1785 x399) (ite (and x1101 (not x4060) x3424) (x1247 x277) (x3006 x277)) (x3006 x277)) (x1864 x277)))
(assert (= x619 (and (not x186) x696)))
(assert (x3207 x687))
(assert (= (ite (= x1672 x626) x1180 (x1363 x626)) (x3403 x626)))
(assert (x3207 x3991))
(assert (x3207 x1229))
(assert (= x2999 (and x2222 x2626)))
(assert (= (x3077 x960) (ite (= x492 x960) x890 (x1371 x960))))
(assert (x3207 x1706))
(assert (x3207 x424))
(assert (x3207 x3801))
(assert (= (x2115 x229) (ite (= x229 (x3377 0)) x3798 (x4026 x229))))
(assert (= (x1156 x999) (ite (= x999 x2451) x1890 (x1267 x999))))
(assert (= (or (and (not x269) x3845) (and x2925 (not x392))) x4179))
(assert (= (x126 x3085) (ite (= x1228 x3085) x3067 (x1442 x3085))))
(assert (x3207 x525))
(assert (x3207 x2289))
(assert (= (x900 x999) (ite (and (not x2987) x1204 x1777) (x1461 x999) (x251 x999))))
(assert (= (=> (and (= x4261 (x3060 (x2562 x1553))) (= x1553 (x3037 1461501637330902918203684832716283019655932542975 x3478)) (= x1600 (< 0 x4261))) (and (=> x1600 x355) (=> (and (= x2468 x74) (= x1106 x1217) (not x1600) (= x2468 (x2598 (x2562 274184521717934524641157099916833587240)))) x2512))) x41))
(assert (= (ite (= x1207 x4143) x4131 (x2220 x1207)) (x4223 x1207)))
(assert (= x3924 (and (not x1507) x249)))
(assert (x3207 x2913))
(assert (= x3921 (or x1446 (and (not x526) x625))))
(assert (x3207 x4041))
(assert (x3207 x1286))
(assert (= (ite (= x2894 (x3377 0)) x1067 (x2244 (x3377 0))) (x3172 (x3377 0))))
(assert (= (x641 x1485) (ite (and x2541 x3165 (not x92)) (x190 x1485) (x4112 x1485))))
(assert (= (x1864 x4291) (ite (and x399 x1785) (ite (and x3424 (not x4060) x1101) (x1247 x4291) (x3006 x4291)) (x3006 x4291))))
(assert (= x613 (=> (= (= x1410 0) x1892) (and (=> x1892 x1614) (=> (not x1892) x2109)))))
(assert (= (x1967 x3070) (ite (= x3070 x1219) x3714 (x2369 x3070))))
(assert (= (x3760 x1788) (ite (= x3326 x1788) x3497 (x4223 x1788))))
(assert (= (x440 x1788) (ite (= x1788 x3308) x307 (x2245 x1788))))
(assert (x3207 x3298))
(assert (x3207 x1682))
(assert (= (ite (and x919 (not x2339) x1630) (x396 x3317) (x3992 x3317)) (x2125 x3317)))
(assert (= (x3077 x417) (ite (= x492 x417) x890 (x1371 x417))))
(assert (= (ite (= x938 x4271) x3187 (x3303 x938)) (x3278 x938)))
(assert (= x100 (or (and x2088 x279) (and x1068 x4127) (and x4237 x4231) (and x3285 x3960) (and x2446 (not x2539)) (and x1296 x1116) (and x2033 x3616) (and x1390 x3095))))
(assert (x3207 x1654))
(assert (x2954 x729))
(assert (= (and x2215 x3430) x4127))
(assert (= (and x4151 x1099) x2526))
(assert (= (x1880 x2104) (ite (= x2429 x2104) x2731 (x3392 x2104))))
(assert (= (x2220 x1606) (ite (= x1606 x2590) x1749 (x3842 x1606))))
(assert (x3207 x137))
(assert (= (ite (and x3779 x617) (x1039 x1495) (x2497 x1495)) (x257 x1495)))
(assert (= (and (not x3297) x1840) x625))
(assert (= (=> (= x710 (= 274184521717934524641157099916833587240 x1469)) (and (=> (not x710) x807) (=> (and (= x3400 (ite x710 1 0)) x710) x305))) x3080))
(assert (x3207 x298))
(assert (x2954 x178))
(assert (= (or (and x1546 x215) (and (not x2467) x1299) (and x2107 x3957) (and x2617 x3048) (and x1476 x964) (and x1902 x3618)) x2434))
(assert (x3207 x4))
(assert (x3207 x308))
(assert (= (x3077 x2345) (ite (= x492 x2345) x890 (x1371 x2345))))
(assert (= (x3553 x3572) (ite (= x1969 x3572) x2633 (x1967 x3572))))
(assert (x2954 x4128))
(assert (x3207 x3478))
(assert (x2954 x947))
(assert (= x2831 (or x721 (and x3313 (not x926)))))
(assert (x3207 x3857))
(assert (x3207 x154))
(assert (= (x3492 x2085) (ite (= x2085 x3343) 0 (x1144 x2085))))
(assert (x1589 x3378 x4073 x3259 x2695))
(assert (= (x3377 2835717307) (x2562 2835717307)))
(assert (= x3878 (and x4076 (not x1913))))
(assert (x3207 x2587))
(assert (= (=> (and (<= x1407 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x373 274184521717934524641157099916833587240) (= x1407 (x4098 x2678)) (= (x372 (x2562 274184521717934524641157099916833587240) x606 0) x2678) (= (x372 (x2562 x1957) (x3377 2) 0) x606) (= (> x224 x1407) x1996) (= (x372 (x2562 274184521717934524641157099916833587240) (x3377 1) 0) x1083) (<= 0 x1407) (= 274184521717934524641157099916833587240 x1391)) (and (=> (not x1996) x4188) (=> x1996 x1036))) x1149))
(assert (= (x1924 x1485) (ite (= x2977 x1485) x4123 (x2625 x1485))))
(assert (= (x2001 x960) (ite (and x1785 x399) (x3100 x960) (x1728 x960))))
(assert (= x3680 (=> (and (<= x2382 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x3626 x836) (= (x372 (x2562 x4000) (x3377 1) 0) x3102) (<= 0 x2382) (= x2382 (x692 x3102)) (= (> x357 x2382) x1633)) (and (=> (not x1633) x443) (=> x1633 x3988)))))
(assert (x3207 x3836))
(assert (= (x2497 x2413) (ite (= x402 x2413) 0 (x1736 x2413))))
(assert (= (=> (= x4097 (= x185 274184521717934524641157099916833587240)) (and (=> (not x4097) x4136) (=> x4097 x2426))) x1265))
(assert (x3207 x607))
(assert (x3207 x3502))
(assert (= (ite (= x1495 x2474) x199 (x362 x1495)) (x2043 x1495)))
(assert (= (x396 x209) (ite (and x4198 x3284 x465 x1630 x919 (not x3643)) (x1880 x209) (ite (and x919 x4198 (not x3284) x1630 x465) (x3392 x209) (ite (and x919 x1630 x465 (not x4198)) (x1668 x209) (ite (and (not x465) x1630 x919) (x744 x209) (x2231 x209)))))))
(assert (x3207 x3133))
(assert (x3207 x3879))
(assert (x3207 x2731))
(assert (x3207 x2227))
(assert (x3207 x1757))
(assert (x3207 x758))
(assert (x2954 x2686))
(assert (= (ite x2551 (ite x3934 (x703 x3433) (ite x356 (x1572 x3433) (x3694 x3433))) (x703 x3433)) (x2767 x3433)))
(assert (= (ite (= x3069 x3910) x2454 (x3672 x3910)) (x1814 x3910)))
(assert (= (x396 x4213) (ite (and x919 x1630 x4198 (not x3643) x3284 x465) (x1880 x4213) (ite (and x919 x465 x1630 (not x3284) x4198) (x3392 x4213) (ite (and x1630 x919 x465 (not x4198)) (x1668 x4213) (ite (and x919 x1630 (not x465)) (x744 x4213) (x2231 x4213)))))))
(assert (x3207 x276))
(assert (= (ite (and x2869 x3621 (not x2111)) (x799 x2010) (x2418 x2010)) (x2708 x2010)))
(assert (= (x3818 x2104) (ite (and x2947 x559 x791 (not x1018) x2002 x2701) (x531 x2104) (ite (and (not x559) x2701 x2002 x2947 x791) (x2425 x2104) (ite (and (not x791) x2947 x2002 x2701) (x3278 x2104) (ite (and x2002 (not x2701) x2947) (x3303 x2104) (x1994 x2104)))))))
(assert (= (x1363 x1672) (ite (= x2464 x1672) x3647 (x2115 x1672))))
(assert (= (x270 x209) (ite (and x3657 (not x35) x2803) (x1688 x209) (x383 x209))))
(assert (x3207 x409))
(assert (= (and (not x187) x619) x299))
(assert (= (x396 x4104) (ite (and x3284 x919 x465 (not x3643) x1630 x4198) (x1880 x4104) (ite (and x1630 x4198 x919 x465 (not x3284)) (x3392 x4104) (ite (and x919 x1630 (not x4198) x465) (x1668 x4104) (ite (and x1630 (not x465) x919) (x744 x4104) (x2231 x4104)))))))
(assert (= (x1338 x382) (ite (= x682 x382) x1845 (x1488 x382))))
(assert (x3207 x284))
(assert (= (=> (and (= (> x4221 0) x3387) (= x4221 (x504 x209))) (and (=> (not x3387) x1535) (=> x3387 x1990))) x3787))
(assert (= (x531 x2413) (ite (= x3469 x2413) x4144 (x2425 x2413))))
(assert (x3207 x3156))
(assert (x3207 x3812))
(assert (x3207 x1375))
(assert (= (ite (and x617 x3779) (x1039 x938) (x2497 x938)) (x257 x938)))
(assert (x3207 x1426))
(assert (x3207 x2295))
(assert (x3207 x4056))
(assert (= (x3377 117300739) (x2562 117300739)))
(assert (= (x2837 x3093) (ite (= x3093 x591) x2746 (x3077 x3093))))
(assert (= x614 (or (and x488 x844) (and x3603 (not x2050)) (and x2593 x3736) (and x3200 x1075) (and x3199 x3084) (and x2609 x3607) (and x989 x93) (and x781 x2131))))
(assert (=> (< (- x3544 1) 10000) (= (x2562 x3544) (x3377 x3544))))
(assert (= (=> (= x2311 (= 274184521717934524641157099916833587240 x139)) (and (=> (not x2311) x4196) (=> (and (= x3269 x3105) (not (> 1166402363 x552)) x2311 (not (= 1845821197 x552)) (not (> 1722255204 x552)) (= (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x4150) (and (< x4150 32) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x4150)))) x1372) (> x1286 0) (not (= x552 1722255204)) (or (and (= x1545 x2352) x1372 (= x3094 0)) (and (= 1 x3094) (= 32 x2352) (= x3499 (x372 (x2562 274184521717934524641157099916833587240) (x3377 209) 0)) (= 274184521717934524641157099916833587240 x1005) (not x1372) (= x164 (x1338 x3499)))) (= 1889567281 x552) (not (< x3105 4)) (= x1286 (x3060 (x2562 274184521717934524641157099916833587240))) (< x552 2311529814) (not (= x552 1858285468)) (= 36 x3105) (= x3445 50942633119752846454219349998365661925608737367104304655302372697894809501696) (= (x3402 (- x3105 4)) x4150)) x497))) x3747))
(assert (x3207 x879))
(assert (x2954 x1724))
(assert (= (ite (= x591 x2785) x2746 (x3077 x2785)) (x2837 x2785)))
(assert (= (and x1117 (not x39)) x798))
(assert (= (x3416 x3093) (ite x1350 (ite x2406 (x1716 x3093) (ite x2981 (x1593 x3093) (x467 x3093))) (x1716 x3093))))
(assert (= (ite (and x4198 (not x3643) x1630 x465 x3284 x919) (x1880 x3433) (ite (and x1630 x4198 x919 x465 (not x3284)) (x3392 x3433) (ite (and x1630 x919 x465 (not x4198)) (x1668 x3433) (ite (and (not x465) x1630 x919) (x744 x3433) (x2231 x3433))))) (x396 x3433)))
(assert (= true x149))
(assert (=> (< (- x3515 1) 10000) (= (x2562 x3515) (x3377 x3515))))
(assert (x3207 x3122))
(assert (x3207 x579))
(assert (x2750 x2307 x4103))
(assert (= (x858 x3789) (ite (and (not x1914) x650 x296) (x116 x3789) (x2055 x3789))))
(assert (= (=> (and (= (= x2937 x2529) x2467) (= x3149 x2529)) (and (=> (not x2467) x1047) (=> x2467 x447))) x2334))
(assert (x3207 x194))
(assert (= (=> (and (= x1388 (= x2937 x888)) (= x888 x2012)) (and (=> (not x1388) x2505) (=> x1388 x4256))) x3190))
(assert (x3207 x906))
(assert (x2954 x183))
(assert (x657 x1459 x21))
(assert (= (x596 x723) (ite (= x3357 x723) x3348 (x3760 x723))))
(assert (x3207 x2015))
(assert (x3207 x723))
(assert (= (x3766 x1541) (ite (= x4279 x1541) x3772 (x692 x1541))))
(assert (x2020 x4109 x3867 x1539 x702))
(assert (= x1671 (=> (= x3661 x3730) x4283)))
(assert (= x1624 (and x3734 (not x3834))))
(assert (= (x2497 x3433) (ite (= x402 x3433) 0 (x1736 x3433))))
(assert (=> (< (- x2068 1) 10000) (= (x3377 x2068) (x2562 x2068))))
(assert (x3207 x13))
(assert (= (x2043 256) (ite (= x2474 256) x199 (x362 256))))
(assert (= (ite x1350 (ite x2406 (x1716 x999) (ite x2981 (x1593 x999) (x467 x999))) (x1716 x999)) (x3416 x999)))
(assert (= (x786 x2804) (ite (= x2804 x2470) x3157 (x1544 x2804))))
(assert (= (x3990 x172) (ite (and x4093 x581 x2270 x2608 x311 (not x631)) (x2837 x172) (ite (and x581 x4093 x311 (not x2608) x2270) (x3077 x172) (ite (and (not x4093) x2270 x581 x311) (x1371 x172) (ite (and (not x581) x2270 x311) (x518 x172) (x3794 x172)))))))
(assert (= (ite (and x3779 x617) (x1039 x2085) (x2497 x2085)) (x257 x2085)))
(assert (= (ite (= x2590 x2889) x1749 (x3842 x2889)) (x2220 x2889)))
(assert (x3207 x2595))
(assert (= (ite (= x3317 x2977) x4123 (x2625 x3317)) (x1924 x3317)))
(assert (= (=> (and (= x3943 (x2515 (+ x124 x32))) (= x3139 (< x724 x3943))) (and (=> x3139 x1614) (=> (and (not x3139) (= x3540 x3015)) x3508))) x4006))
(assert (= (ite (= x2494 x3194) x2368 (x2043 x2494)) (x2625 x2494)))
(assert (x3207 x1111))
(assert (= (=> (and (= (x2515 (+ 4 x814)) x3902) (= (x2515 (+ 1 x2069)) x2794) (= (= x416 0) x1914) (= (x3037 1461501637330902918203684832716283019655932542975 x131) x1675) (= (x3060 (x2562 x1675)) x416) (= x3902 x2227) (= 274184521717934524641157099916833587240 x2655)) (and (=> (and (or (and (not x296) (= x498 x425)) (and x296 (= 1 x425) (> 4294967296 x1133))) (not x1914) (= x296 (< 0 x498))) x2873) (=> x1914 x3106))) x1098))
(assert (= (x3278 x2104) (ite (= x2104 x4271) x3187 (x3303 x2104))))
(assert (= x4296 (and x4071 x3423)))
(assert (= (ite (= x2785 x3357) x3348 (x3760 x2785)) (x596 x2785)))
(assert (= (ite (= x2702 x3093) x147 (x518 x3093)) (x1371 x3093)))
(assert (= (ite (= x1228 x3857) x3067 (x1442 x3857)) (x126 x3857)))
(assert (x3207 x2709))
(assert (x3207 x3570))
(assert (= x421 (=> (and (= x963 (x1967 x1969)) (= x1836 (< x963 1)) (= x1969 (x372 (x2562 x2720) (x3377 209) 0))) (and (=> (not x1836) x479) (=> x1836 x3162)))))
(assert (= (ite (and x3165 x64 x2541 (not x3115) x2649 x207) (x2396 x2413) (ite (and x2541 x207 x3165 x64 (not x2649)) (x1924 x2413) (ite (and (not x207) x3165 x64 x2541) (x2625 x2413) (ite (and (not x64) x3165 x2541) (x2043 x2413) (x20 x2413))))) (x190 x2413)))
(assert (=> (> (+ 10000 1) x3635) (= (x3377 x3635) (x2562 x3635))))
(assert (x3207 x1016))
(assert (x3207 x878))
(assert (x3207 x1217))
(assert (x3207 x3111))
(assert (= (ite (= x1228 x1606) x3067 (x1442 x1606)) (x126 x1606)))
(assert (x2954 x2136))
(assert (x3207 x378))
(assert (= (ite (and x64 x2649 x3165 (not x3115) x207 x2541) (x2396 x1143) (ite (and x64 x2541 x207 x3165 (not x2649)) (x1924 x1143) (ite (and x2541 x3165 (not x207) x64) (x2625 x1143) (ite (and x3165 x2541 (not x64)) (x2043 x1143) (x20 x1143))))) (x190 x1143)))
(assert (x3207 x3110))
(assert (x3207 x2457))
(assert (= (x703 x817) (ite (and (not x2387) x2002 x2947) (x3818 x817) (x1259 x817))))
(assert (x1589 x3882 x968 x2773 x940))
(assert (x3207 x1989))
(assert (= (and (not x3136) x2689) x3768))
(assert (= (ite (and (not x2111) x3621 x2869) (x799 x802) (x2418 x802)) (x2708 x802)))
(assert (= (x1728 x2785) (ite (= x1024 x2785) 0 (x1337 x2785))))
(assert (= (x190 x938) (ite (and x3165 x2649 x207 x64 (not x3115) x2541) (x2396 x938) (ite (and x64 x207 (not x2649) x3165 x2541) (x1924 x938) (ite (and x3165 x64 x2541 (not x207)) (x2625 x938) (ite (and (not x64) x2541 x3165) (x2043 x938) (x20 x938)))))))
(assert (= x3785 (=> (and (= (x3060 (x2562 x3191)) x561) (= x3467 (= 0 x561))) (and (=> (and (= x3721 (> x2986 0)) (or (and (= x2986 x460) (not x3721)) (and (> 4294967296 x3674) (= x460 1) x3721)) (not x3467)) x1744) (=> x3467 x3106)))))
(assert (= (=> (and (= x2578 x3362) (= x676 (= x2620 x3362))) (and (=> (not x676) x1360) (=> x676 x1107))) x2283))
(assert (= (ite (= x1406 x3433) x4102 (x3278 x3433)) (x2425 x3433)))
(assert (x2954 x3717))
(assert (x657 x183 x163))
(assert (= (ite (= x3537 x209) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x2410 x209)) (x1950 x209)))
(assert (x3207 x1035))
(assert (= (ite (= x3270 x1514) x2003 (x2108 x3270)) (x1260 x3270)))
(assert (x3207 x2556))
(assert (x3207 x1809))
(assert (x3207 x3840))
(assert (= (x3077 x2990) (ite (= x2990 x492) x890 (x1371 x2990))))
(assert (= (ite (= x637 192) x1658 (x842 192)) (x1298 192)))
(assert (= (ite (and x581 x4093 x311 x2270 x2608 (not x631)) (x2837 x3789) (ite (and x4093 x311 x2270 (not x2608) x581) (x3077 x3789) (ite (and x311 x2270 x581 (not x4093)) (x1371 x3789) (ite (and x2270 (not x581) x311) (x518 x3789) (x3794 x3789))))) (x3990 x3789)))
(assert (= (x396 x817) (ite (and x1630 x919 (not x3643) x3284 x4198 x465) (x1880 x817) (ite (and x919 (not x3284) x4198 x465 x1630) (x3392 x817) (ite (and x465 x1630 x919 (not x4198)) (x1668 x817) (ite (and x1630 (not x465) x919) (x744 x817) (x2231 x817)))))))
(assert (= (x1260 x3915) (ite (= x3915 x1514) x2003 (x2108 x3915))))
(assert (= x167 (x3641 (x2562 x167))))
(assert (x3207 x3290))
(assert (x1589 x3053 x1455 x3685 x1494))
(assert (= (x3036 x2104) (ite (= x2104 x3595) 274184521717934524641157099916833587240 (x1195 x2104))))
(assert (= x2891 (=> (= (> x2459 0) x1916) (and (=> x1916 x2386) (=> (not x1916) x3106)))))
(assert (x3207 x1607))
(assert (= (x3492 x3433) (ite (= x3343 x3433) 0 (x1144 x3433))))
(assert (x2750 x1220 x578))
(assert (x3207 x811))
(assert (x3207 x3452))
(assert (x657 x3306 x285))
(assert (= (=> (and (= x4052 (x2515 (+ x3458 36))) (= x1178 (x3116 x2560)) (= (> x1178 18446744073709551615) x2163)) (and (=> x2163 x3106) (=> (not x2163) x804))) x82))
(assert (= (x2055 x2402) (ite (= x2227 x2402) 98474297345890754025501882143967591664980152141971839855651084132735363579904 (x2668 x2402))))
(assert (= (x1967 x1314) (ite (= x1219 x1314) x3714 (x2369 x1314))))
(assert (= (ite (= x4162 x2091) x2742 (x975 x4162)) (x1321 x4162)))
(assert (= (or (and x1940 (not x2113)) x127) x2981))
(assert (= (x1728 x2345) (ite (= x2345 x1024) 0 (x1337 x2345))))
(assert (= x3200 (and x3412 x3334)))
(assert (= (and (not x2022) x1050) x489))
(assert (x3207 x2258))
(assert (= (x396 x938) (ite (and x919 (not x3643) x1630 x3284 x465 x4198) (x1880 x938) (ite (and x4198 x1630 x919 (not x3284) x465) (x3392 x938) (ite (and x919 x1630 x465 (not x4198)) (x1668 x938) (ite (and (not x465) x919 x1630) (x744 x938) (x2231 x938)))))))
(assert (= (=> (= x1437 (> x291 0)) (and (=> (not x1437) x3106) (=> x1437 x1722))) x2054))
(assert (= (ite (= x854 x2413) 98474297345890754025501882143967591664980152141971839855651084132735363579904 (x1772 x2413)) (x549 x2413)))
(assert (= (x190 x374) (ite (and x2649 x207 (not x3115) x3165 x64 x2541) (x2396 x374) (ite (and x3165 (not x2649) x64 x207 x2541) (x1924 x374) (ite (and (not x207) x64 x2541 x3165) (x2625 x374) (ite (and x2541 x3165 (not x64)) (x2043 x374) (x20 x374)))))))
(assert (=> (< (- x2916 1) 10000) (= (x3377 x2916) (x2562 x2916))))
(assert (= (x3990 x3044) (ite (and x311 x4093 (not x631) x581 x2270 x2608) (x2837 x3044) (ite (and x2270 x311 x581 x4093 (not x2608)) (x3077 x3044) (ite (and x311 x2270 x581 (not x4093)) (x1371 x3044) (ite (and x2270 (not x581) x311) (x518 x3044) (x3794 x3044)))))))
(assert (x3207 x4140))
(assert (= (x1814 x1193) (ite (= x1193 x3069) x2454 (x3672 x1193))))
(assert (x3207 x1655))
(assert (x3207 x2933))
(assert (= (x1728 x3310) (ite (= x3310 x1024) 0 (x1337 x3310))))
(assert (= (and x2002 x2947) x2830))
(assert (x3207 x3609))
(assert (= x586 (or x2153 (and x3431 x353))))
(assert (= (ite (= x4186 x4010) x1540 (x1601 x4186)) (x3161 x4186)))
(assert (= (=> (and (= x402 (x2515 (+ x2666 x4299))) (= x263 (or (and (= (<= x476 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (> 32 x476)) (> x476 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (= (x3037 115792089237316195423570985008687907853269984665640564039457584007913129639904 x3140) x4299) (= (x2515 (+ x476 31)) x3140)) (and (=> x263 x1614) (=> (not x263) x886))) x1032))
(assert (= (ite (= x3326 x3310) x3497 (x4223 x3310)) (x3760 x3310)))
(assert (x3207 x3065))
(assert (= (ite (= x1969 x1314) x2633 (x1967 x1314)) (x3553 x1314)))
(assert (=> (< (- x3173 1) 10000) (= (x3377 x3173) (x2562 x3173))))
(assert (x2954 x3722))
(assert (= (ite (= x1024 x1606) 0 (x1337 x1606)) (x1728 x1606)))
(assert (= (ite (= x3044 x1844) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x3826 x3044)) (x1528 x3044)))
(assert (= (ite (= x4282 x101) x3659 (x695 x4282)) (x3754 x4282)))
(assert (= (ite (= x1969 x3276) x2633 (x1967 x3276)) (x3553 x3276)))
(assert (x3207 x1235))
(assert (= (x190 x3433) (ite (and x2541 x64 x2649 x3165 (not x3115) x207) (x2396 x3433) (ite (and (not x2649) x64 x2541 x3165 x207) (x1924 x3433) (ite (and x64 x2541 (not x207) x3165) (x2625 x3433) (ite (and x3165 (not x64) x2541) (x2043 x3433) (x20 x3433)))))))
(assert (x3207 x3580))
(assert (= (x270 x1485) (ite (and (not x35) x2803 x3657) (x1688 x1485) (x383 x1485))))
(assert (= (ite (= x3326 x1606) x3497 (x4223 x1606)) (x3760 x1606)))
(assert (x3207 x2128))
(assert (= (x2562 274184521717934524641157099916833587240) (x3377 274184521717934524641157099916833587240)))
(assert (x3207 x3509))
(assert (x3207 x713))
(assert (x3207 x416))
(assert (= (x1880 x2537) (ite (= x2429 x2537) x2731 (x3392 x2537))))
(assert (x3207 x360))
(assert (= (x2369 x3510) (ite (= x3510 (x3377 0)) x2794 (x3228 x3510))))
(assert (= (ite (= (x3377 0) x1672) x3798 (x4026 x1672)) (x2115 x1672)))
(assert (= (x428 x2990) 0))
(assert (x3207 x1118))
(assert (= (+ 2 (x3641 x740)) (x3641 (x3546 x740 2))))
(assert (x3207 x1531))
(assert (x3207 x1006))
(assert (= (ite (and x2270 x311 (not x914)) (x3990 x3789) (x448 x3789)) (x2288 x3789)))
(assert (= (or (and (not x1630) x919) (and x617 x3779)) x2169))
(assert (= (ite (= x2889 x3326) x3497 (x4223 x2889)) (x3760 x2889)))
(assert (= (ite (= x2590 x1788) x1749 (x3842 x1788)) (x2220 x1788)))
(assert (= x748 (and x1923 x3976)))
(assert (= (ite (= x3357 x2402) x3348 (x3760 x2402)) (x596 x2402)))
(assert (x3207 x2679))
(assert (= (x2708 x3789) (ite (and x2869 (not x2111) x3621) (x799 x3789) (x2418 x3789))))
(assert (= (x2220 x3044) (ite (= x2590 x3044) x1749 (x3842 x3044))))
(assert (= (and x3847 x767) x2866))
(assert (x3207 x1445))
(assert (x3207 x2848))
(assert (x3207 x1464))
(assert (x2954 x3495))
(assert (x3207 x4102))
(assert (x3207 x2064))
(assert (= (x2637 x3300) (ite (and (not x427) x1955 x3892) (x1922 x3300) (x549 x3300))))
(assert (x3207 x4030))
(assert (= (ite (and x617 x3779) (x1039 x1105) (x2497 x1105)) (x257 x1105)))
(assert (= (ite (= x999 x591) x2746 (x3077 x999)) (x2837 x999)))
(assert (x3207 x1898))
(assert (= (ite (= x3069 x3317) x2454 (x3672 x3317)) (x1814 x3317)))
(assert (x3207 x840))
(assert (x3207 x1752))
(assert (= (+ 2 (x3641 x3408)) (x3641 (x3546 x3408 2))))
(assert (= x3064 (and x2169 x118)))
(assert (= x2609 (and (not x3199) x3084)))
(assert (= (x2265 (- x1606 x4135)) 0))
(assert (= (ite (= x1489 x999) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x2030 x999)) (x1267 x999)))
(assert (x3207 x4059))
(assert (x3207 x2983))
(assert (= (ite (= x3910 x4271) x3187 (x3303 x3910)) (x3278 x3910)))
(assert (x3207 x719))
(assert (x3207 x335))
(assert (= x3669 (x3641 (x2562 x3669))))
(assert (x2954 x1279))
(assert (= (x1214 x172) (ite (= x2005 x172) 274184521717934524641157099916833587240 (x4226 x172))))
(assert (x3207 x255))
(assert (x3207 x716))
(assert (x3207 x3495))
(assert (= (or (and x2332 x2639) (and x2541 (not x3165))) x3971))
(assert (= (and x3165 x2541) x1647))
(assert (x3207 x3469))
(assert (= (x641 x4193) (ite (and (not x92) x3165 x2541) (x190 x4193) (x4112 x4193))))
(assert (x3207 x3449))
(assert (x3825 x3034 x1037))
(assert (= (x3303 x1105) (ite (= x1105 x3691) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x1274 x1105))))
(assert (= (x975 x1983) (ite (and x399 x1785) (ite (and x1101 (not x4060) x3424) (x3526 x1983) (x1868 x1983)) (x1868 x1983))))
(assert (= (ite x1350 (ite x2406 (x1716 x2402) (ite x2981 (x1593 x2402) (x467 x2402))) (x1716 x2402)) (x3416 x2402)))
(assert (x3207 x834))
(assert (= x3130 (=> (and (= x3654 (< x2917 x124)) (= x2917 (x3402 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x32)))) (and (=> x3654 x1614) (=> (not x3654) x4006)))))
(assert (= x2945 (=> (= x400 (> x836 x3145)) (and (=> (and (= x2106 (x372 (x2562 x4000) (x3377 2) 0)) (= x406 (x372 (x2562 274184521717934524641157099916833587240) x2106 0)) (= 1 x972) (= x1708 274184521717934524641157099916833587240) (not x400) (= x1200 x442) (= x1771 (x3402 (- x3145 x836)))) x470) (=> x400 x3988)))))
(assert (x3207 x1141))
(assert (= (x1298 x4104) (ite (= x637 x4104) x1658 (x842 x4104))))
(assert (= (ite (= x637 x2085) x1658 (x842 x2085)) (x1298 x2085)))
(assert (x3207 x1705))
(assert (= (ite (= x4279 x2385) x3772 (x692 x2385)) (x3766 x2385)))
(assert (= (ite (and x2869 x3621 (not x2111)) (x799 x2990) (x2418 x2990)) (x2708 x2990)))
(assert (= (x1751 x3789) (ite (= x154 x3789) 0 (x720 x3789))))
(assert (x3207 x1124))
(assert (x3207 x1233))
(assert (= x2605 (and x2480 x772)))
(assert (x3207 x2368))
(assert (= (ite (= x4143 x2785) x4131 (x2220 x2785)) (x4223 x2785)))
(assert (x3207 x1592))
(assert (= (and (not x1476) x964) x1299))
(assert (x3207 x4070))
(assert (= (x428 256) 0))
(assert (x3207 x185))
(assert (= (=> (and (= x2174 (x2515 (+ x1178 31))) (= (or x142 x2781) x2152) (= (x3037 115792089237316195423570985008687907853269984665640564039457584007913129639904 x2513) x1316) (= (> 128 x2297) x2781) (= (x3037 115792089237316195423570985008687907853269984665640564039457584007913129639904 x2174) x3319) (= x2513 (x2515 (+ 63 x3319))) (= (> x2297 18446744073709551615) x142) (= (= (ite x2152 1 0) 0) x1532) (= x2297 (x2515 (+ 128 x1316)))) (and (=> x1532 x4105) (=> (not x1532) x3106))) x804))
(assert (= (ite (= x229 x4010) x1540 (x1601 x229)) (x3161 x229)))
(assert (= (x3990 x417) (ite (and x2270 x4093 x581 x311 (not x631) x2608) (x2837 x417) (ite (and x581 x4093 (not x2608) x2270 x311) (x3077 x417) (ite (and x2270 x581 x311 (not x4093)) (x1371 x417) (ite (and (not x581) x311 x2270) (x518 x417) (x3794 x417)))))))
(assert (= 115792089210356248756420345215482394403581256910207104449633294546465451933695 (x3641 (x3377 115792089210356248756420345215482394403581256910207104449633294546465451933695))))
(assert (x3207 x1741))
(assert (= (ite (and x2270 (not x631) x2608 x4093 x581 x311) (x2837 x2010) (ite (and x581 x2270 x4093 (not x2608) x311) (x3077 x2010) (ite (and x311 x2270 x581 (not x4093)) (x1371 x2010) (ite (and x311 (not x581) x2270) (x518 x2010) (x3794 x2010))))) (x3990 x2010)))
(assert (x3207 x4235))
(assert (= (and x3618 (not x1902)) x3957))
(assert (x3207 x3538))
(assert (x2954 x3315))
(assert (x3207 x690))
(assert (= x2237 (=> (and (>= x1741 0) (= (> x58 x1741) x2094) (= x3355 (x372 (x2562 x3008) (x3377 1) 0)) (= x1741 (x2058 x3355)) (= x206 x2194) (<= x1741 115792089237316195423570985008687907853269984665640564039457584007913129639935)) (and (=> (not x2094) x829) (=> x2094 x128)))))
(assert (= 34167655436598589418538772692774877509225721125679165766806516059628562808832 (x3641 (x3377 34167655436598589418538772692774877509225721125679165766806516059628562808832))))
(assert (= (=> (and (= (x2515 (+ x3286 64)) x1258) (= (x2515 (+ x1062 132)) x3304) (= (x2515 (+ 16156842317565293874272834530371880720966471053262404558597773956279093428224 x2031)) x2290) (= (< 0 x4166) x4071) (= x2356 274184521717934524641157099916833587240) (= (x3037 1461501637330902918203684832716283019655932542975 x3478) x3227) (= x417 (x2515 (+ x1062 32))) (= 274184521717934524641157099916833587240 x2753) (= x4030 x3286) (= (x3402 (- x2709 32)) x3664) (= x2462 0) (= (x3060 (x2562 x3227)) x4166) (= x2119 (x2515 (+ x3286 32))) (= (x2515 (+ 160 x4030)) x3612) (= (x1188 x417) x510) (= (x2515 (+ 36 x1062)) x4030) (= x1844 (x2515 (+ 128 x4030))) (= x2031 (x3037 26959946667150639794667015087019630673637144422540572481103610249215 x510)) (= x2709 (x3402 (- x3304 x1062)))) (and (=> (not x4071) x3106) (=> (and (= (> x2437 x3252) x2978) (or (and (= x1190 x3612) (= (x1528 x2345) x419) (or (and (= x2437 32) (not x3056)) (and x3056 (= x1548 (x2515 (+ x1062 64))) (= (x3898 x1548) x459) (or (and (= 64 x2437) (not x483)) (and (= (x2515 (+ 128 x3304)) x2595) (= (x2515 (+ x1062 96)) x3044) (or (and (= x2437 128) (not x1958) (= x2200 (x3436 x2990)) (= x2990 (x2515 (+ x1062 128))) (= x1958 (< 128 x3252)) x2859 (= x2640 (x2515 (+ 160 x3304)))) (and (= 96 x2437) (not x2859))) (= x3561 (x979 x3044)) (= (> x3252 96) x2859) x483)) (= (x2515 (+ x3304 96)) x4041) (= (> x3252 64) x483))) (= x2345 x417) (= (< 32 x3252) x3056) x2509) (and (not x2509) (= 0 x2437))) (= x2509 (< 0 x3252)) (= x3252 (x1528 x1062)) (or (not x2978) (and x2978 (= (x2515 (+ x3252 x3612)) x2712))) x4071) x2854))) x3793))
(assert (= (x2625 x783) (ite (= x783 x3194) x2368 (x2043 x783))))
(assert (= (x2425 x2104) (ite (= x2104 x1406) x4102 (x3278 x2104))))
(assert (x3207 x3245))
(assert (x3207 x838))
(assert (= (ite (= x3326 x2402) x3497 (x4223 x2402)) (x3760 x2402)))
(assert (= (x703 x374) (ite (and x2002 (not x2387) x2947) (x3818 x374) (x1259 x374))))
(assert (= x1185 (=> (and (= x1394 274184521717934524641157099916833587240) (= (x372 (x2562 x3173) (x3377 2) 0) x1092) (= 274184521717934524641157099916833587240 x1297) (= (x372 (x2562 274184521717934524641157099916833587240) x1092 0) x3482) (<= 0 x3559) (= x557 (x372 (x2562 274184521717934524641157099916833587240) (x3377 1) 0)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3559) (= (x1023 x3482) x3559) (= x187 (> x1284 x3559))) (and (=> x187 x2210) (=> (not x187) x916)))))
(assert (x3207 x2340))
(assert (x3207 x795))
(assert (x3207 x2659))
(assert (x3207 x1469))
(assert (x2954 x1533))
(assert (x3207 x2072))
(assert (x3207 x1489))
(assert (x3207 x2307))
(assert (x657 x1737 x4067))
(assert (x3207 x1287))
(assert (= (or (and x2028 x2248) (and x2060 x2182) (and x489 x2696)) x1618))
(assert (x1589 x867 x3677 x1918 x910))
(assert (= (ite (= x172 x1228) x3067 (x1442 x172)) (x126 x172)))
(assert (= (x1298 x783) (ite (= x783 x637) x1658 (x842 x783))))
(assert (x3207 x1678))
(assert (= (=> (and (= x2967 x1752) (= (and (<= 0 x3989) (< x3258 115792089237316195423570985008687907853269984665640564039457584007913129639936)) x3019) (= (x1029 (x2562 x474)) x3258) (= x3989 (x1029 (x2562 274184521717934524641157099916833587240)))) (and (=> (and (= 0 x1453) (not x3019) (= 0 x716)) x1423) (=> x3019 x632))) x3666))
(assert (= (ite x2551 (ite x3934 (x703 x4213) (ite x356 (x1572 x4213) (x3694 x4213))) (x703 x4213)) (x2767 x4213)))
(assert (x3207 x2769))
(assert (x3207 x2761))
(assert (= (ite (= x1463 x2789) x1703 (x1924 x1463)) (x2396 x1463)))
(assert (x3207 x2571))
(assert (x3207 x1934))
(assert (= x2321 (and (not x2622) x4094)))
(assert (x3207 x3400))
(assert (= (x1924 x1143) (ite (= x1143 x2977) x4123 (x2625 x1143))))
(assert (x3207 x4294))
(assert (= (and x4167 (not x710)) x2918))
(assert (= (x190 x1193) (ite (and x207 x2649 (not x3115) x64 x3165 x2541) (x2396 x1193) (ite (and x2541 (not x2649) x207 x64 x3165) (x1924 x1193) (ite (and x64 (not x207) x3165 x2541) (x2625 x1193) (ite (and x3165 x2541 (not x64)) (x2043 x1193) (x20 x1193)))))))
(assert (x3207 x2537))
(assert (= (ite (= x4213 x2474) x199 (x362 x4213)) (x2043 x4213)))
(assert (x3207 x2931))
(assert (= (ite (= x1606 x1678) x3841 (x2757 x1606)) (x518 x1606)))
(assert (= (x549 x1485) (ite (= x1485 x854) 98474297345890754025501882143967591664980152141971839855651084132735363579904 (x1772 x1485))))
(assert (= 18446744073709551615 (x3641 (x3377 18446744073709551615))))
(assert (= x1044 (x3641 (x2562 x1044))))
(assert (x657 x2570 x949))
(assert (x3207 x669))
(assert (= (=> (= true x1775) x2706) x1614))
(assert (= x3564 (and x650 (not x1914))))
(assert (= (ite (= x817 x2789) x1703 (x1924 x817)) (x2396 x817)))
(assert (x3207 x462))
(assert (= (x1814 x1742) (ite (= x1742 x3069) x2454 (x3672 x1742))))
(assert (x3207 x1383))
(assert (x3207 x566))
(assert (= (ite (and x311 x2270 (not x914)) (x3990 x2345) (x448 x2345)) (x2288 x2345)))
(assert (x3207 x1966))
(assert (= (x1967 x3510) (ite (= x1219 x3510) x3714 (x2369 x3510))))
(assert (x3207 x2046))
(assert (= true x322))
(assert (= (ite (and x296 x650 (not x1914)) (x116 x1465) (x2055 x1465)) (x858 x1465)))
(assert (= (x1668 x1193) (ite (= x1193 x1414) x4020 (x744 x1193))))
(assert (= x3673 (=> (and (= x3157 (x2515 (+ x3004 x1015))) (= x174 (< x3157 x1015))) (and (=> (not x174) x3260) (=> x174 x31)))))
(assert (x3207 x954))
(assert (= (ite (= x2595 x2990) x3561 (x979 x2990)) (x3436 x2990)))
(assert (= (ite (and x2649 x64 (not x3115) x207 x3165 x2541) (x2396 x3300) (ite (and (not x2649) x207 x2541 x3165 x64) (x1924 x3300) (ite (and x3165 x64 (not x207) x2541) (x2625 x3300) (ite (and x3165 x2541 (not x64)) (x2043 x3300) (x20 x3300))))) (x190 x3300)))
(assert (= (ite (= x492 x172) x890 (x1371 x172)) (x3077 x172)))
(assert (= (x3898 x3789) (ite (= x3789 x1190) x419 (x1528 x3789))))
(assert (= (ite (= x2474 x783) x199 (x362 x783)) (x2043 x783)))
(assert (x3207 x2860))
(assert (= (or x1661 (and (not x2178) x370) (and (not x2087) x3018)) x3369))
(assert (x3207 x3583))
(assert (= (x641 x3118) (ite (and x2541 x3165 (not x92)) (x190 x3118) (x4112 x3118))))
(assert (= (ite (= x2789 x3433) x1703 (x1924 x3433)) (x2396 x3433)))
(assert (= x371 (and x1498 x1388)))
(assert (x188 x3321))
(assert (= (ite (and x311 x2270 (not x914)) (x3990 x2990) (x448 x2990)) (x2288 x2990)))
(assert (x3207 x3674))
(assert (x2954 x2599))
(assert (x3207 x1970))
(assert (x3207 x1831))
(assert (= (ite (= x2482 x2429) x2731 (x3392 x2482)) (x1880 x2482)))
(assert (x3207 x4182))
(assert (x2954 x2212))
(assert (= (ite (= x3044 x3326) x3497 (x4223 x3044)) (x3760 x3044)))
(assert (= (x3377 115792089237316195423570985008687907853269984665640564039457584007913129639904) (x2562 115792089237316195423570985008687907853269984665640564039457584007913129639904)))
(assert (= (x2043 x2318) (ite (= x2474 x2318) x199 (x362 x2318))))
(assert (x3207 x460))
(assert (x3207 x3895))
(assert (= x3409 (and x4137 (not x978))))
(assert (= (x1728 x1024) 0))
(assert (x3207 x1357))
(assert (x3601 x2823 x1827 x2144 x3329))
(assert (= (x979 x2591) (ite (= x4041 x2591) x459 (x3898 x2591))))
(assert (= (and (not x3519) x3524) x370))
(assert (x3207 x1784))
(assert (= (x2425 x3317) (ite (= x1406 x3317) x4102 (x3278 x3317))))
(assert (= (ite (= x2977 x2494) x4123 (x2625 x2494)) (x1924 x2494)))
(assert (= (ite (= x2126 x2470) x3157 (x1544 x2126)) (x786 x2126)))
(assert (x3207 x1826))
(assert (= 0 (x2497 x402)))
(assert (= x2310 (and x1670 (not x98))))
(assert (= (x799 x417) (ite (and x4248 x3621 (not x4082) x761 x2885 x2869) (x596 x417) (ite (and x761 x2869 (not x2885) x3621 x4248) (x3760 x417) (ite (and x761 x2869 (not x4248) x3621) (x4223 x417) (ite (and x3621 x2869 (not x761)) (x2220 x417) (x530 x417)))))))
(assert (x3207 x522))
(assert (=> (> (+ 10000 1) x2093) (= (x3377 x2093) (x2562 x2093))))
(assert (x3207 x3362))
(assert (x3207 x2188))
(assert (= (x1214 x999) (ite (= x999 x2005) 274184521717934524641157099916833587240 (x4226 x999))))
(assert (= x334 (=> (and (= x2374 (- (/ 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4115) (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4115))) (= x4099 (= 0 x4115)) (= x1038 (ite (not x4099) 1 0)) (= x407 (= x3132 0)) (= x881 (ite (< x2374 x3188) 1 0)) (= x4115 (uninterp_mod (* x1657 x1229) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= (x3037 x1038 x881) x3132)) (and (=> (not x407) x3106) (=> x407 x1470)))))
(assert (= x4136 (=> (= x1947 (= x185 274184521717934524641157099916833587206)) (and (=> (not x1947) x1254) (=> x1947 x2703)))))
(assert (= (x2055 x2990) (ite (= x2227 x2990) 98474297345890754025501882143967591664980152141971839855651084132735363579904 (x2668 x2990))))
(assert (x3207 x1143))
(assert (= (ite (= x3 x1219) x3714 (x2369 x3)) (x1967 x3)))
(assert (x3207 x4217))
(assert (x3207 x2855))
(assert (= x3593 (and x4130 x1663)))
(assert (= (ite (= x2591 x1190) x419 (x1528 x2591)) (x3898 x2591)))
(assert (x3207 x3142))
(assert (= (x1176 x1606) (ite (= x1606 x3806) 274184521717934524641157099916833587240 (x3929 x1606))))
(assert (= (x1029 (x2562 274184521717934524641157099916833587240)) (ite (and (not x3139) x2667) (x1637 (x2562 274184521717934524641157099916833587240)) (ite x1109 (ite x2551 (x4118 (x2562 274184521717934524641157099916833587240)) (x3040 (x2562 274184521717934524641157099916833587240))) (x3040 (x2562 274184521717934524641157099916833587240))))))
(assert (= (ite (= x2429 x2552) x2731 (x3392 x2552)) (x1880 x2552)))
(assert (= (=> (and (not (> 826074471 x1370)) (not (= x1370 826074471)) (= (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x76) (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x76) true) (< x76 64))) x751) (< 0 x1142) (not (= 1889567281 x1370)) (= x782 x3401) (= x1142 (x3060 (x2562 274184521717934524641157099916833587202))) (= 2835717307 x1370) (= (x3402 (- x4215 4)) x76) (= x4215 68) (= x1773 x4215) (not (= x1370 2514000705)) (not (< x4215 4)) (= 76450787359836037641860180984291677749980919077056822294353438043884394381312 x3242) (= x4195 x1596)) (and (=> x751 x3889) (=> (not x751) x959))) x3359))
(assert (x188 x1793))
(assert (= (ite (= x1228 x1263) x3067 (x1442 x1263)) (x126 x1263)))
(assert (= (x3377 115792089210356248756420345215482394403581256910207104449633294546465451933695) (x2562 115792089210356248756420345215482394403581256910207104449633294546465451933695)))
(assert (= (ite (= x2474 x938) x199 (x362 x938)) (x2043 x938)))
(assert (= (ite (= x3308 x2785) x307 (x2245 x2785)) (x440 x2785)))
(assert (x3207 x3405))
(assert (= (x2562 109576784812748834340197573905731726730118698833493337707389013487240318287872) (x3377 109576784812748834340197573905731726730118698833493337707389013487240318287872)))
(assert (= x3027 (=> (and (= (x2515 (+ x749 35)) x547) (= x1361 (or (and (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x547) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x580)) (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x580) (<= x547 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (> x580 x547)))) (= (x2515 (+ x749 4)) x1939)) (and (=> (not x1361) x1614) (=> x1361 x611)))))
(assert (= x2037 (and x880 x1209)))
(assert (= (x2625 x374) (ite (= x374 x3194) x2368 (x2043 x374))))
(assert (x2954 x501))
(assert (x3207 x1636))
(assert (x3207 x2941))
(assert (x3207 x32))
(assert (= (ite (and x3779 x617) (ite (and x2586 x1060 (not x3613)) (x517 (x2562 274184521717934524641157099916833587240)) (x2654 (x2562 274184521717934524641157099916833587240))) (x2654 (x2562 274184521717934524641157099916833587240))) (x3040 (x2562 274184521717934524641157099916833587240))))
(assert (= (x3898 x999) (ite (= x1190 x999) x419 (x1528 x999))))
(assert (= (ite (= x3194 x3300) x2368 (x2043 x3300)) (x2625 x3300)))
(assert (= (ite (= x1228 x1465) x3067 (x1442 x1465)) (x126 x1465)))
(assert (x3207 x4150))
(assert (= x2098 (and (not x1187) x3739)))
(assert (= x221 (=> (and (= x830 274184521717934524641157099916833587240) (= x496 (x3037 1461501637330902918203684832716283019655932542975 x4253)) (= x3502 x2682) (= (not (= x496 0)) x603) (= (x2369 x918) x4253) (= x2340 274184521717934524641157099916833587240) (= (x372 (x2562 x2682) (x3377 208) 0) x918)) (and (=> (not x603) x3162) (=> x603 x2145)))))
(assert (= x2419 (and x3593 (not x678))))
(assert (= (ite (= x1406 x1105) x4102 (x3278 x1105)) (x2425 x1105)))
(assert (= (ite (= x3915 x1049) x983 (x2058 x3915)) (x219 x3915)))
(assert (x2954 x2249))
(assert (= (x3377 511946350) (x2562 511946350)))
(assert (= (x3309 (x2562 x2934)) (ite (and x399 x1785) (ite (and x3424 (not x4060) x1101) (x1696 (x2562 x2934)) (x2675 (x2562 x2934))) (x2675 (x2562 x2934)))))
(assert (= (=> (and (= (x3037 1461501637330902918203684832716283019655932542975 x2752) x1863) (= x1505 (= x2752 x1863)) (= x4263 x3478)) (and (=> (not x1505) x3106) (=> x1505 x57))) x1524))
(assert (x2954 x458))
(assert (x3207 x2397))
(assert (x1589 x501 x1380 x4117 x309))
(assert (= (ite (= x1672 x2853) x1180 (x1363 x2853)) (x3403 x2853)))
(assert (= (ite (= x2977 x4193) x4123 (x2625 x4193)) (x1924 x4193)))
(assert (= (x1429 x1606) (ite (and x141 (not x1355) x3783) (x239 x1606) (x3098 x1606))))
(assert (= (ite (= x1364 x209) x32 (x1919 x209)) (x383 x209)))
(assert (x1257 x3865 x708))
(assert (= (ite (= x1228 160) x3067 (x1442 160)) (x126 160)))
(assert (= (x596 x3310) (ite (= x3310 x3357) x3348 (x3760 x3310))))
(assert (x2954 115792089210356248756420345215482394403581256910207104449633294546465451933695))
(assert (x3207 x1684))
(assert (x3207 x817))
(assert (x3207 x4045))
(assert (= (x1668 x783) (ite (= x1414 x783) x4020 (x744 x783))))
(assert (x3207 x969))
(assert (= (ite (= x3570 x3326) x3497 (x4223 x3570)) (x3760 x3570)))
(assert (= x1248 (x3641 (x2562 x1248))))
(assert (= (ite (= x2702 x723) x147 (x518 x723)) (x1371 x723)))
(assert (= (x2108 x3270) (ite (and x3779 x617) (ite (and x1060 x2586 (not x3613)) (x287 x3270) (x3940 x3270)) (x3940 x3270))))
(assert (= (=> (and (= x3420 (x3037 1461501637330902918203684832716283019655932542975 x458)) (= (x3384 x2252) x458) (= (x372 (x2562 x4056) (x3377 208) 0) x2252) (= (not (= 0 x3420)) x3143)) (and (=> x3143 x1614) (=> (not x3143) x288))) x2027))
(assert (= (x1363 x626) (ite (= x626 x2464) x3647 (x2115 x626))))
(assert (x3207 x1105))
(assert (x3207 x2437))
(assert (x3207 x3044))
(assert (x3207 x2063))
(assert (x3207 x3407))
(assert (= (x858 x3093) (ite (and x650 x296 (not x1914)) (x116 x3093) (x2055 x3093))))
(assert (= (and x2677 (not x1239)) x2215))
(assert (= (ite (= x1228 x2799) x3067 (x1442 x2799)) (x126 x2799)))
(assert (x3207 x42))
(assert (= (ite (= x4143 x417) x4131 (x2220 x417)) (x4223 x417)))
(assert (= (x2562 1461501637330902918203684832716283019655932542975) (x3377 1461501637330902918203684832716283019655932542975)))
(assert (= (ite (= x2785 x2227) 98474297345890754025501882143967591664980152141971839855651084132735363579904 (x2668 x2785)) (x2055 x2785)))
(assert (= x1816 (and (not x3248) x55)))
(assert (= (or (and x3063 x3476) (and x2422 x1622) (and x3743 x1303) (and (not x480) x667) (and x4274 x2980) (and x760 x1633) (and x2250 x2758) (and x468 x400)) x1080))
(assert (= (x3161 x756) (ite (= x4010 x756) x1540 (x1601 x756))))
(assert (= (ite (= x2085 x2977) x4123 (x2625 x2085)) (x1924 x2085)))
(assert (x3207 x4236))
(assert (= (ite (= x4271 x2413) x3187 (x3303 x2413)) (x3278 x2413)))
(assert (= (ite (= x154 x2591) 0 (x720 x2591)) (x1751 x2591)))
(assert (= (ite (= x938 x402) 0 (x1736 x938)) (x2497 x938)))
(assert (= (x3641 (x3377 2835717307)) 2835717307))
(assert (x3207 x183))
(assert (x2954 x3897))
(assert (= 115792089210356248756420345214020892766250353992003419616917011526809519390720 (x3641 (x3377 115792089210356248756420345214020892766250353992003419616917011526809519390720))))
(assert (= (and x371 (not x1431)) x4170))
(assert (= (x1298 x2482) (ite (= x637 x2482) x1658 (x842 x2482))))
(assert (= (ite (= x3806 x723) 274184521717934524641157099916833587240 (x3929 x723)) (x1176 x723)))
(assert (x3207 x3157))
(assert (= (x3077 x1465) (ite (= x492 x1465) x890 (x1371 x1465))))
(assert (x657 x4128 x1894))
(assert (=> (= (x3816 x784 x2044 x3251 x106 x652 x2118 x921 x2221 x3417) (x3816 x2392 x533 x1657 x1763 x3279 x952 x4009 x980 x3417)) (and (= x652 x3279) (= x3251 x1657) (= x980 x2221) (= x4009 x921) (= x106 x1763) (= x784 x2392) (= x2044 x533) (= x2118 x952))))
(assert (x2954 x3306))
(assert (= (and x3091 x1807) x401))
(assert (= x1692 x1535))
(assert (= (x2562 1845821197) (x3377 1845821197)))
(assert (= (x1728 x2010) (ite (= x2010 x1024) 0 (x1337 x2010))))
(assert (x3207 x4066))
(assert (x3207 x3589))
(assert (= (ite (= x3357 x3789) x3348 (x3760 x3789)) (x596 x3789)))
(assert (x3207 x4234))
(assert (= (x596 x2010) (ite (= x3357 x2010) x3348 (x3760 x2010))))
(assert (x3207 x2211))
(assert (x2954 x1445))
(assert (= x470 (=> (= x972 x3774) x3059)))
(assert (= (x1176 x3093) (ite (= x3806 x3093) 274184521717934524641157099916833587240 (x3929 x3093))))
(assert (= x3967 (=> (and (= (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1433) (and (> 32 x1433) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1433)))) x184) (= x4212 (x3037 115792089237316195423570985008687907853269984665640564039457584007913129639904 x3176)) (= (x2515 (+ 31 x1433)) x3176) (= x3324 (x2515 (+ x4212 x943)))) (and (=> x184 x3106) (=> (not x184) x1243)))))
(assert (= (ite (= x417 x3326) x3497 (x4223 x417)) (x3760 x417)))
(assert (x3207 x671))
(assert (= (x1880 x817) (ite (= x2429 x817) x2731 (x3392 x817))))
(assert (= x857 (=> (and (= x36 (x2515 (+ 31 x88))) (= x4246 (x2515 (+ x1311 x327))) (= x392 (or (> x88 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (> 32 x88) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x88))))) (= x327 (x3037 115792089237316195423570985008687907853269984665640564039457584007913129639904 x36))) (and (=> (and (= (x1231 x1485) x301) (= x724 x301) (= x1311 x1485) (not x392) (= x3540 x4246)) x3130) (=> x392 x1614)))))
(assert (x3207 x1885))
(assert (x3207 x787))
(assert (= x696 (and x1496 (not x1995))))
(assert (x3207 x797))
(assert (x3207 x3145))
(assert (= (x3492 x938) (ite (= x938 x3343) 0 (x1144 x938))))
(assert (x3207 x2634))
(assert (= (ite (= x938 x2429) x2731 (x3392 x938)) (x1880 x938)))
(assert (= (ite (= x3469 x3317) x4144 (x2425 x3317)) (x531 x3317)))
(assert (= (or x258 (and x1471 (not x3019))) x156))
(assert (= x2262 (=> (and (= x3882 (x3905 x1356)) (= (x2366 x1143) x1559) (= (uninterp_mod (* 1461501637330902918203684832716283019655932542976 x1912) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x2557) (= x1033 (x3037 1461501637330902918203684832716283019655932542975 x1336)) (= x4061 x2466) (= x1404 (x2515 (+ x2138 x4294))) (= x1241 (x2515 (+ x2407 x1159))) (= x2933 (x87 x2751)) (= (= x1746 0) x176) (= x3415 (x2223 x2751)) (= x255 (x2366 x1111)) (= x4288 (x3037 1461501637330902918203684832716283019655932542975 x255)) (= x672 (not x176)) (= (x3546 x3408 2) x1356) (= x2383 (x2366 x4193)) (= x271 (x3037 115792089237316195423570985007226406215939081747436879206741300988257197096960 x3415)) (= (x2515 (+ x390 x2315)) x2373) (= x2074 (x2515 (+ (uninterp_mod (ite x672 1461501637330902918203684832716283019655932542976 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x1860))) (= (x372 (x2562 x3212) (x3377 2) 0) x2466) (= x607 (x3037 4294967295 x1279)) (= (x3546 x1056 2) x1448) (= x4193 x1885) (= (x3037 115792089237316195423570985007226406215939081747436879206741300988257197096960 x3882) x390) (= x809 x1033) (= x18 (x2515 (+ x271 x2309))) (= x2287 (x2366 x4104)) (= (x3037 115792089210356248756420345215482394403581256910207104449633294546465451933695 x2191) x170) (= x2407 (x3037 26959946667150639794667015087019630673637144422540572481103610249215 x1343)) (= (x3037 115792089210356248756420345215482394403581256910207104449633294546465451933695 x4109) x2138) (= x1056 (x3546 x2466 2)) (= x1336 (x2366 x2318)) (= x4294 (uninterp_mod (* 1461501637330902918203684832716283019655932542976 x1177) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= (x1460 (x3377 0)) x3212) (= x1279 (x2366 x1040)) (= (uninterp_mod (* 26959946667150639794667015087019630673637144422540572481103610249216 x607) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x1159) (= x276 (x2366 x3910)) (= x2309 x4288) (= (x2610 x1448) x3378) (= x4109 (x2458 x1448)) (= (x2515 (+ x2557 x170)) x2683) (= (x3037 1461501637330902918203684832716283019655932542975 x2078) x3640) (= (x4026 (x3377 0)) x3446) (= (x3546 x2019 2) x3408) (= x2315 x3640) (= x4147 (> x3446 115792089237316195423570985008687907853269984665640564039457584007913129639934)) (= (x388 x1356) x2191) (= (x2366 x3725) x3302) (= (x3546 x1448 2) x2751) (= (x2366 x2494) x457) (= x2019 (x3546 x2466 1)) (= x3257 (x3037 115792089237316195423570985007226406215939081747436879206741300988257197096960 x3378)) (= (x2515 (+ x809 x3257)) x3216) (= (x3037 115792089237316195423570984636004990333889740523700931696805413995650331181055 x2933) x1860) (= (x1828 x1356) x1343) (= x2078 (x2366 x3118)) (= (x3037 18446744073709551615 x457) x1177) (= x1746 (x2366 x1907)) (= x1912 (x3037 18446744073709551615 x1559))) (and (=> (not x4147) x2487) (=> x4147 x1614)))))
(assert (= (x270 x2413) (ite (and x3657 x2803 (not x35)) (x1688 x2413) (x383 x2413))))
(assert (x3207 x2200))
(assert (x3207 x3640))
(assert (x3207 x806))
(assert (x3207 x3007))
(assert (= (ite (= x2785 x3806) 274184521717934524641157099916833587240 (x3929 x2785)) (x1176 x2785)))
(assert (= (ite (= x4010 x3264) x1540 (x1601 x3264)) (x3161 x3264)))
(assert (x3207 x2940))
(assert (x3207 x4240))
(assert (x3207 x2074))
(assert (x3207 x454))
(assert (= (x744 x783) (ite (= x783 x422) x3522 (x923 x783))))
(assert (x3207 x3881))
(assert (= (ite (and (not x1914) x650 x296) (x116 x2591) (x2055 x2591)) (x858 x2591)))
(assert (x3207 x180))
(assert (= x3808 (x3641 (x2562 x3808))))
(assert (= (x3377 18446744073709551616) (x2562 18446744073709551616)))
(assert (= x4105 (=> (and (= (x2515 (+ x1178 x4052)) x4108) (= (< x1689 x4108) x819)) (and (=> (not x819) x2322) (=> x819 x3106)))))
(assert (x3601 x1613 x1714 x876 x260))
(assert (= (and (not x3442) x3939) x705))
(assert (= (x3036 x2537) (ite (= x3595 x2537) 274184521717934524641157099916833587240 (x1195 x2537))))
(assert (x3207 x3243))
(assert (= (ite (= x374 x3595) 274184521717934524641157099916833587240 (x1195 x374)) (x3036 x374)))
(assert (= (ite (= x723 x2005) 274184521717934524641157099916833587240 (x4226 x723)) (x1214 x723)))
(assert (x3207 x4178))
(assert (= (x2625 x1907) (ite (= x3194 x1907) x2368 (x2043 x1907))))
(assert (x3207 x2655))
(assert (x2954 x1997))
(assert (= (ite (= x1548 x1190) x419 (x1528 x1548)) (x3898 x1548)))
(assert (= (x2708 x2345) (ite (and (not x2111) x3621 x2869) (x799 x2345) (x2418 x2345))))
(assert (= (x3641 (x3546 x1056 2)) (+ 2 (x3641 x1056))))
(assert (= (x1197 x209) 0))
(assert (x3207 x1956))
(assert (= (and (not x609) x2555) x1359))
(assert (x3207 x3822))
(assert (= (or x3263 x3921) x860))
(assert (= (x2220 x2341) (ite (= x2590 x2341) x1749 (x3842 x2341))))
(assert (= (x3641 (x2562 x1675)) x1675))
(assert (= (x3641 (x3546 x2026 2)) (+ 2 (x3641 x2026))))
(assert (x3207 x1689))
(assert (x3207 x2489))
(assert (x3207 x2513))
(assert (x3207 x2196))
(assert (= x2347 (=> (and (= (x3402 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2659)) x2571) (= (< x2571 x3249) x1902) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3249) (= x3249 (x477 x2146)) (= 274184521717934524641157099916833587240 x511) (= x3163 (x3402 (- x951 x2659))) (>= x3249 0) (= x2146 (x372 (x2562 x2529) (x3377 1) 0)) (= (x372 (x2562 274184521717934524641157099916833587240) (x3377 1) 0) x2835)) (and (=> (not x1902) x2496) (=> x1902 x1047)))))
(assert (x2954 x255))
(assert (= (ite (= x1105 x2789) x1703 (x1924 x1105)) (x2396 x1105)))
(assert (x3207 x887))
(assert (x3207 x3782))
(assert (x3207 x1557))
(assert (= x2739 (=> (and (= x1679 (x2515 (+ 64 x973))) (= x745 (x3816 x784 x2044 x3251 x106 x652 x2118 x921 x2221 x3417)) (= (x3619 x3358 96) x2118) (= (x2515 (+ x2768 40)) x3983) (= x3895 (x2515 (+ x3893 52))) (= (x3037 1461501637330902918203684832716283019655932542975 x1445) x3358) (= (x2515 (+ 52 x3983)) x1379) (= x2568 (x3037 1461501637330902918203684832716283019655932542975 x570)) (= (x2515 (+ 64 x1679)) x2768) (= x2471 (x2515 (+ 40 x3895))) (= (x3402 (- x3107 32)) x1658) (= x3165 (> x2727 0)) (= x1604 (x3037 1461501637330902918203684832716283019655932542975 x570)) (= (ite (< 0 x754) 0 x2454) x784) (= x921 (x3619 x409 96)) (= x973 (x2515 (+ 64 x637))) (= (x2515 (+ x1378 64)) x2080) (= (x3402 (- x1379 x637)) x3107) (= x2044 (ite (> x754 0) 0 x2728)) (= x2727 (x3060 (x2562 x2568))) (= x2221 (x3619 x1604 96)) (= (x3037 1461501637330902918203684832716283019655932542975 x2599) x409) (= (x2515 (+ x1885 384)) x1378) (= x3893 (x2515 (+ 64 x2080)))) (and (=> (and (= x2666 x1379) (not x3165)) x1308) (=> (and (= (> x199 0) x64) (or (and (or (and (not x207) (= 32 x4140)) (and (or (and (or (and (= 96 x4140) (not x3115)) (and (= x4164 (> x199 128)) (= (x2515 (+ x2474 128)) x4152) x3115 (not x4164) (= x4140 128) (= x1576 (x2396 256)))) x2649 (= x1703 (x1924 224)) (= x2789 (x2515 (+ x2474 96))) (= x3115 (< 96 x199))) (and (= 64 x4140) (not x2649))) x207 (= (< 64 x199) x2649) (= x2977 (x2515 (+ x2474 64))) (= x4123 (x2625 192)))) x64 (= (> x199 32) x207) (= x3194 x3298) (= (x2043 160) x2368)) (and (= x4140 0) (not x64))) (= x2931 x2485) (or (and x92 (= (x2515 (+ x3298 x199)) x3638)) (not x92)) (= (x2515 (+ x2485 32)) x1612) (= x92 (< x199 x4140)) (= (x2515 (+ 68 x1379)) x2474) (= x3298 (x2515 (+ x2931 96))) (= (x2515 (+ 36 x2471)) x2931) (= x199 (x362 128)) (= x3848 (x3037 1461501637330902918203684832716283019655932542975 x570)) x3165) x2112)))))
(assert (= (x3218 (x3377 0)) (ite (= (x3377 0) x4186) x2966 (x3161 (x3377 0)))))
(assert (= (ite (and x3779 x617) (ite (and x1060 x2586 (not x3613)) (x2353 x3705) (x3011 x3705)) (x3011 x3705)) (x695 x3705)))
(assert (x3207 x3968))
(assert (= (x3377 115792089237316195423570984636004990333889740523700931696805413995650331181055) (x2562 115792089237316195423570984636004990333889740523700931696805413995650331181055)))
(assert (= (ite (and x617 x3779) (x1039 x817) (x2497 x817)) (x257 x817)))
(assert (x3207 x1854))
(assert (x3207 x2138))
(assert (= 274184521717934524641157099916833587240 (x3641 (x2562 274184521717934524641157099916833587240))))
(assert (= (x2220 x1548) (ite (= x1548 x2590) x1749 (x3842 x1548))))
(assert (= x1161 (=> (= (< 0 x2772) x2628) (and (=> x2628 x2697) (=> (not x2628) x2260)))))
(assert (x3207 x1749))
(assert (x3207 x2919))
(assert (= 0 (x1197 x1495)))
(assert (= (x2625 x938) (ite (= x938 x3194) x2368 (x2043 x938))))
(assert (= (x549 x1463) (ite (= x1463 x854) 98474297345890754025501882143967591664980152141971839855651084132735363579904 (x1772 x1463))))
(assert (= (x2625 x1040) (ite (= x1040 x3194) x2368 (x2043 x1040))))
(assert (x657 x2212 x313))
(assert (x3207 x3216))
(assert (= (ite (= x2464 x2798) x3647 (x2115 x2798)) (x1363 x2798)))
(assert (x3207 x1781))
(assert (x2954 x2933))
(assert (= (=> (= x4287 x3581) x3271) x3961))
(assert (x657 x1527 x2669))
(assert (= (x3641 (x3377 10019309979067222254582373821846632475949454479833780424560900009889672200192)) 10019309979067222254582373821846632475949454479833780424560900009889672200192))
(assert (x3207 x253))
(assert (x188 x474))
(assert (= (x396 x1485) (ite (and x3284 x1630 x919 (not x3643) x465 x4198) (x1880 x1485) (ite (and (not x3284) x1630 x919 x465 x4198) (x3392 x1485) (ite (and x919 x1630 (not x4198) x465) (x1668 x1485) (ite (and x1630 x919 (not x465)) (x744 x1485) (x2231 x1485)))))))
(assert (= (x2448 x3807) (ite (= x3807 x1083) x3956 (x1321 x3807))))
(assert (x3207 x4109))
(assert (x3207 x4022))
(assert (= (x3641 (x3377 1461501637330902918203684832716283019655932542975)) 1461501637330902918203684832716283019655932542975))
(assert (= (ite (and (not x2111) x2869 x3621) (x799 x1548) (x2418 x1548)) (x2708 x1548)))
(assert (= x674 (and x2784 (not x2329))))
(assert (x657 x1533 x2384))
(assert (= (ite (= x960 x2590) x1749 (x3842 x960)) (x2220 x960)))
(assert (= (x2043 x1485) (ite (= x2474 x1485) x199 (x362 x1485))))
(assert (x3207 x868))
(assert (x3207 x3679))
(assert (x3207 x3004))
(assert (= (ite (= x1024 x3789) 0 (x1337 x3789)) (x1728 x3789)))
(assert (= (x549 x938) (ite (= x938 x854) 98474297345890754025501882143967591664980152141971839855651084132735363579904 (x1772 x938))))
(assert (= (ite (= x422 x1485) x3522 (x923 x1485)) (x744 x1485)))
(assert (= x1036 (=> (and (= x1003 x2399) (= x1927 0)) x1019)))
(assert (= (=> (and (= (< x1502 x2129) x654) (= x1502 (x2515 (+ x3704 x2129)))) (and (=> (not x654) x4063) (=> x654 x3556))) x125))
(assert (= (x396 x1105) (ite (and x465 (not x3643) x4198 x919 x1630 x3284) (x1880 x1105) (ite (and (not x3284) x4198 x465 x1630 x919) (x3392 x1105) (ite (and x465 (not x4198) x919 x1630) (x1668 x1105) (ite (and (not x465) x1630 x919) (x744 x1105) (x2231 x1105)))))))
(assert (= (ite (and (not x631) x4093 x2270 x2608 x311 x581) (x2837 x1263) (ite (and x4093 x311 (not x2608) x581 x2270) (x3077 x1263) (ite (and (not x4093) x581 x2270 x311) (x1371 x1263) (ite (and x2270 x311 (not x581)) (x518 x1263) (x3794 x1263))))) (x3990 x1263)))
(assert (= (x1371 x2010) (ite (= x2702 x2010) x147 (x518 x2010))))
(assert (x2954 x1667))
(assert (= (x3641 (x2562 x139)) x139))
(assert (x2954 x1908))
(assert (x657 x1022 x3820))
(assert (= (ite (= x2085 x854) 98474297345890754025501882143967591664980152141971839855651084132735363579904 (x1772 x2085)) (x549 x2085)))
(assert (= (and (not x3250) x4106) x4257))
(assert (x3207 x2915))
(assert (= x4094 (and x437 (not x2151))))
(assert (x2954 x3113))
(assert (= (ite (= x492 x802) x890 (x1371 x802)) (x3077 x802)))
(assert (= (ite (and (not x1914) x650 x296) (x116 x4230) (x2055 x4230)) (x858 x4230)))
(assert (= (ite (and x3621 x2869 (not x2111)) (x799 x723) (x2418 x723)) (x2708 x723)))
(assert (= (ite (= x1489 x615) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x2030 x615)) (x1267 x615)))
(assert (x3207 x773))
(assert (x3207 x3930))
(assert (= (x1528 x2402) (ite (= x1844 x2402) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x3826 x2402))))
(assert (x201 x3125 x568 x1767 x3026))
(assert (= 826074471 (x3641 (x3377 826074471))))
(assert (= (ite (= x1606 x2451) x1890 (x1267 x1606)) (x1156 x1606)))
(assert (x3207 x2619))
(assert (x3207 x2942))
(assert (= (and x4035 x2533) x1211))
(assert (x2750 x1559 x3695))
(assert (= (ite (= x3317 x1414) x4020 (x744 x3317)) (x1668 x3317)))
(assert (x3207 x3094))
(assert (x3207 x3451))
(assert (= x57 (=> (and (= (x3037 1461501637330902918203684832716283019655932542975 x4050) x2046) (= x217 x1325) (= (= x4050 x2046) x2208)) (and (=> (not x2208) x3106) (=> x2208 x1745)))))
(assert (= (and x3535 (not x751)) x3054))
(assert (= (x2545 x209) (ite x258 (ite x3184 (x3265 x209) (x1332 x209)) (x2455 x209))))
(assert (= x2342 (=> (= x3393 x3774) x3059)))
(assert (x3207 x1726))
(assert (x3207 x3883))
(assert (x3207 x3294))
(assert (= (x4223 x3178) (ite (= x3178 x4143) x4131 (x2220 x3178))))
(assert (x2954 x2008))
(assert (x657 x2078 x2294))
(assert (= (x768 x2413) (ite (= x253 x2413) x1841 (x1950 x2413))))
(assert (= (ite (and x1785 x399) (x3100 x2591) (x1728 x2591)) (x2001 x2591)))
(assert (x3207 x1708))
(assert (= (x1298 x2318) (ite (= x2318 x637) x1658 (x842 x2318))))
(assert (= x543 (=> (= x1366 (< x2493 x3704)) (and (=> x1366 x3556) (=> (and (= x4205 274184521717934524641157099916833587240) (= 1 x3083) (not x1366) (= x3464 x1529) (= x2319 (x372 (x2562 x15) (x3377 2) 0)) (= (x372 (x2562 274184521717934524641157099916833587240) x2319 0) x851) (= (x3402 (- x2493 x3704)) x2327)) x1210)))))
(assert (= (ite (= x3044 x591) x2746 (x3077 x3044)) (x2837 x3044)))
(assert (x3207 x2240))
(assert (x3207 x1088))
(assert (= (x3278 x209) (ite (= x4271 x209) x3187 (x3303 x209))))
(assert (= (x3619 x558 96) (uninterp_mod (* 79228162514264337593543950336 x558) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (x3207 x2119))
(assert (= (ite (= x2595 x3789) x3561 (x979 x3789)) (x3436 x3789)))
(assert (= (x3766 x4282) (ite (= x4282 x4279) x3772 (x692 x4282))))
(assert (= (ite (= x1263 x1844) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x3826 x1263)) (x1528 x1263)))
(assert (= (x1751 x3093) (ite (= x154 x3093) 0 (x720 x3093))))
(assert (= (ite (= 128 x637) x1658 (x842 128)) (x1298 128)))
(assert (= 0 (x1197 x1485)))
(assert (= (x979 x3093) (ite (= x3093 x4041) x459 (x3898 x3093))))
(assert (= x602 (and x3383 (not x2034))))
(assert (x3207 x2399))
(assert (x3207 x2967))
(assert (x3207 x2789))
(assert (x3207 x192))
(assert (= (ite (= x3691 x2104) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x1274 x2104)) (x3303 x2104)))
(assert (=> (> (+ 10000 1) x3008) (= (x3377 x3008) (x2562 x3008))))
(assert (x3207 x2568))
(assert (= (x1298 x2413) (ite (= x2413 x637) x1658 (x842 x2413))))
(assert (= (x641 x3824) (ite (and x2541 (not x92) x3165) (x190 x3824) (x4112 x3824))))
(assert (= x2317 (x3641 (x2562 x2317))))
(assert (x3207 x4158))
(assert (x3207 x307))
(assert (= (and (not x2181) x2296) x650))
(assert (= 0 (x1197 x374)))
(assert (= (x3377 1461501637330902918203684832716283019655932542976) (x2562 1461501637330902918203684832716283019655932542976)))
(assert (= (x2625 256) (ite (= x3194 256) x2368 (x2043 256))))
(assert (x3207 x3300))
(assert (= (=> (= x3234 (> x3033 0)) (and (=> x3234 x117) (=> (not x3234) x3162))) x1245))
(assert (= (x858 x2345) (ite (and x296 x650 (not x1914)) (x116 x2345) (x2055 x2345))))
(assert (x188 x3227))
(assert (x2954 x1336))
(assert (x3207 x4242))
(assert (= (x126 x802) (ite (= x1228 x802) x3067 (x1442 x802))))
(assert (= (x799 x2591) (ite (and x3621 x761 x4248 (not x4082) x2869 x2885) (x596 x2591) (ite (and x4248 x2869 x761 x3621 (not x2885)) (x3760 x2591) (ite (and x2869 x761 (not x4248) x3621) (x4223 x2591) (ite (and x3621 (not x761) x2869) (x2220 x2591) (x530 x2591)))))))
(assert (= (ite (= x10 x2977) x4123 (x2625 x10)) (x1924 x10)))
(assert (= (x703 x2413) (ite (and x2947 x2002 (not x2387)) (x3818 x2413) (x1259 x2413))))
(assert (= (=> (and (= x3840 (x3037 115792089237316195423570985008687907853269984665640564039457584007913129639904 x335)) (= (or (> x3674 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (< x3674 32) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3674)))) x2893) (= x1764 (x2515 (+ x3660 x3840))) (= x335 (x2515 (+ 31 x3674)))) (and (=> x2893 x3106) (=> (not x2893) x4224))) x3210))
(assert (x3207 x1686))
(assert (= (ite (= x691 x4010) x1540 (x1601 x691)) (x3161 x691)))
(assert (= (x2115 x658) (ite (= x658 (x3377 0)) x3798 (x4026 x658))))
(assert (x3207 x3484))
(assert (x3207 x1845))
(assert (= (x3641 (x2562 x3635)) x3635))
(assert (= (x2115 x2798) (ite (= x2798 (x3377 0)) x3798 (x4026 x2798))))
(assert (= (=> (= x2251 (> x1284 x2890)) (and (=> x2251 x2210) (=> (not x2251) x4014))) x408))
(assert (= (=> (= x3730 0) x1671) x2903))
(assert (= (x394 x4291) (ite (= x4291 x2778) x572 (x2058 x4291))))
(assert (x3207 x3781))
(assert (= (x2001 x2785) (ite (and x399 x1785) (x3100 x2785) (x1728 x2785))))
(assert (= (=> (= 0 x3083) x1210) x3556))
(assert (= (x1864 x2804) (ite (and x399 x1785) (ite (and x1101 (not x4060) x3424) (x1247 x2804) (x3006 x2804)) (x3006 x2804))))
(assert (x3207 x3204))
(assert (x3207 x2599))
(assert (= (ite (= x3691 x3433) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x1274 x3433)) (x3303 x3433)))
(assert (= (x3172 x3276) (ite (= x2894 x3276) x1067 (x2244 x3276))))
(assert (= (ite (and x3892 (not x427) x1955) (x1922 x783) (x549 x783)) (x2637 x783)))
(assert (= (x3641 (x3377 115792089237316195423570985007226406215939081747436879206741300988257197096960)) 115792089237316195423570985007226406215939081747436879206741300988257197096960))
(assert (x3207 x1703))
(assert (= (ite (= x3570 x3357) x3348 (x3760 x3570)) (x596 x3570)))
(assert (= (ite (= x3487 x3326) x3497 (x4223 x3487)) (x3760 x3487)))
(assert (x3207 x3435))
(assert (= (x190 x3725) (ite (and (not x3115) x3165 x64 x2649 x207 x2541) (x2396 x3725) (ite (and x2541 x207 x64 (not x2649) x3165) (x1924 x3725) (ite (and x3165 x64 (not x207) x2541) (x2625 x3725) (ite (and x3165 x2541 (not x64)) (x2043 x3725) (x20 x3725)))))))
(assert (= (ite (and x761 x3621 x4248 (not x4082) x2869 x2885) (x596 x1207) (ite (and x761 x3621 (not x2885) x2869 x4248) (x3760 x1207) (ite (and x761 x2869 x3621 (not x4248)) (x4223 x1207) (ite (and (not x761) x3621 x2869) (x2220 x1207) (x530 x1207))))) (x799 x1207)))
(assert (= (ite (= x1672 x2252) x1180 (x1363 x2252)) (x3403 x2252)))
(assert (x2579 x648 x1353 x2155 x2042))
(assert (= (x2562 34167655436598589418538772692774877509225721125679165766806516059628562808832) (x3377 34167655436598589418538772692774877509225721125679165766806516059628562808832)))
(assert (= (ite (= x172 x2590) x1749 (x3842 x172)) (x2220 x172)))
(assert (x3207 x1334))
(assert (x3207 x3324))
(assert (= (x190 x209) (ite (and x3165 x2541 x64 x207 (not x3115) x2649) (x2396 x209) (ite (and x64 (not x2649) x3165 x207 x2541) (x1924 x209) (ite (and x3165 x64 (not x207) x2541) (x2625 x209) (ite (and x3165 (not x64) x2541) (x2043 x209) (x20 x209)))))))
(assert (= (x3898 x2785) (ite (= x2785 x1190) x419 (x1528 x2785))))
(assert (= (and (not x1203) x1618) x3651))
(assert (x2954 x3995))
(assert (=> (> (+ 10000 1) x3848) (= (x3377 x3848) (x2562 x3848))))
(assert (= 1889567281 (x3641 (x3377 1889567281))))
(assert (x3207 x177))
(assert (= (ite (= x2474 x1463) x199 (x362 x1463)) (x2043 x1463)))
(assert (=> (< (- x2620 1) 10000) (= (x2562 x2620) (x3377 x2620))))
(assert (=> (> (+ 10000 1) x340) (= (x3377 x340) (x2562 x340))))
(assert (= (ite (= x2450 x1672) x1180 (x1363 x2450)) (x3403 x2450)))
(assert (= (x3553 x714) (ite (= x1969 x714) x2633 (x1967 x714))))
(assert (= (ite (and x1785 x399) (x3100 x3789) (x1728 x3789)) (x2001 x3789)))
(assert (x3207 x1883))
(assert (x3207 x2937))
(assert (x3207 x3882))
(assert (x3207 x3713))
(assert (= (ite (= x4143 x3857) x4131 (x2220 x3857)) (x4223 x3857)))
(assert (= (x126 x2591) (ite (= x2591 x1228) x3067 (x1442 x2591))))
(assert (= (ite (= x492 x2591) x890 (x1371 x2591)) (x3077 x2591)))
(assert (= x3418 (=> (= x254 (< x4173 x89)) (and (=> (not x254) x3562) (=> x254 x2505)))))
(assert (x3207 x2073))
(assert (x3207 x58))
(assert (x188 x3515))
(assert (= (ite (= x637 x1907) x1658 (x842 x1907)) (x1298 x1907)))
(assert (= (x1880 x2085) (ite (= x2085 x2429) x2731 (x3392 x2085))))
(assert true)
(assert (= (ite (= x4104 x402) 0 (x1736 x4104)) (x2497 x4104)))
(assert (= (x428 x2010) 0))
(assert (= (ite (= x3326 x1207) x3497 (x4223 x1207)) (x3760 x1207)))
(assert (x2954 x3176))
(assert (x2954 x881))
(assert (= (ite (= x1606 x154) 0 (x720 x1606)) (x1751 x1606)))
(assert (= (ite (= x1024 x417) 0 (x1337 x417)) (x1728 x417)))
(assert (x3207 x784))
(assert (= (ite (and x761 x3621 (not x4082) x2885 x4248 x2869) (x596 x3487) (ite (and x3621 (not x2885) x2869 x761 x4248) (x3760 x3487) (ite (and x2869 (not x4248) x3621 x761) (x4223 x3487) (ite (and x3621 x2869 (not x761)) (x2220 x3487) (x530 x3487))))) (x799 x3487)))
(assert (= x966 (=> (and (= (x2323 x2172) x3034) (= (x3037 1461501637330902918203684832716283019655932542975 x217) x1435) (= (x3037 255 x3034) x633) (= x763 (= 0 x633)) (= (x372 (x2562 x1435) (x3377 3) 0) x556) (= (x372 (x2562 x3279) x556 0) x2172)) (and (=> (and (= x4254 (> x2016 0)) (or x4254 (and (= x2658 (x2515 (+ (uninterp_mod (ite x2988 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x3110))) (= x3996 (x2323 x4276)) (= (x372 (x2562 x993) (x3377 3) 0) x2442) (= x4276 (x372 (x2562 x3279) x2442 0)) (not x4254) (= (x3037 115792089237316195423570985008687907853269984665640564039457584007913129639680 x3996) x3110) (= true x2988) (= x993 (x3037 1461501637330902918203684832716283019655932542975 x217)))) x763) x1104) (=> (not x763) x3106)))))
(assert (x3207 x91))
(assert (x2954 x326))
(assert (x3207 x2161))
(assert (x3207 x1270))
(assert (x3207 x3069))
(assert (x3207 x3850))
(assert (= (x223 x723) (ite (= x3801 x723) x1342 (x1156 x723))))
(assert (x3207 x3437))
(assert (= (ite (= (x3377 0) x1748) x2794 (x3228 x1748)) (x2369 x1748)))
(assert (x3207 x1730))
(assert (= x2427 (=> (and (= x2560 (x2515 (+ x3458 4))) (= x3057 (x2515 (+ 35 x3458))) (= x2510 (or (and (> x3057 57896044618658097711785492504343953926634992332820282019728792003956564819967) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1689)) (and (< x3057 x1689) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1689) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3057)))))) (and (=> x2510 x82) (=> (not x2510) x3106)))))
(assert (= (x2637 x2552) (ite (and x3892 x1955 (not x427)) (x1922 x2552) (x549 x2552))))
(assert (= (x2837 x1606) (ite (= x591 x1606) x2746 (x3077 x1606))))
(assert (= (ite (and x3779 x617) (x1039 x2537) (x2497 x2537)) (x257 x2537)))
(assert (x2954 x1357))
(assert (x3207 x730))
(assert (x3207 x921))
(assert (= (x1728 x1548) (ite (= x1548 x1024) 0 (x1337 x1548))))
(assert (= x3008 (x3641 (x2562 x3008))))
(assert (x2954 1461501637330902918203684832716283019655932542975))
(assert (= (x3641 (x3377 599290589)) 599290589))
(assert (= (x4223 x172) (ite (= x4143 x172) x4131 (x2220 x172))))
(assert (x3207 x293))
(assert (= x3590 (or x1109 (and x705 (not x3922)) (and x2667 (not x3139)))))
(assert (x2954 x1959))
(assert (= (x394 x277) (ite (= x277 x2778) x572 (x2058 x277))))
(assert (= (=> (and (= x2087 (> x1837 x74)) (= (x2515 (+ x4241 x24)) x1837)) (and (=> (and (= x615 x1106) (not x2087)) x379) (=> x2087 x3106))) x2230))
(assert (= (and (not x304) x3576) x4069))
(assert (x3207 x2768))
(assert (= (ite (= x3391 x4282) x1822 (x3766 x4282)) (x896 x4282)))
(assert (x3207 x2482))
(assert (= (x3377 157198259) (x2562 157198259)))
(assert (= (ite (and x3621 x2869 (not x2111)) (x799 x1788) (x2418 x1788)) (x2708 x1788)))
(assert (x3207 x3417))
(assert (= (x3052 x2591) (ite (and x483 x4071 x3423 x3056 (not x2859) x2509) (x3436 x2591) (ite (and x3423 (not x483) x4071 x2509 x3056) (x979 x2591) (ite (and (not x3056) x4071 x2509 x3423) (x3898 x2591) (ite (and (not x2509) x4071 x3423) (x1528 x2591) (x1623 x2591)))))))
(assert (x3207 x1536))
(assert (= (ite (= x1606 x4041) x459 (x3898 x1606)) (x979 x1606)))
(assert (x3207 x3989))
(assert (= (ite (and (not x2978) x4071 x3423) (x3052 x2591) (x3389 x2591)) (x1716 x2591)))
(assert (x657 x1974 x3353))
(assert (= (ite (= x1076 x2413) x2538 (x688 x2413)) (x1367 x2413)))
(assert (= (x3760 x3178) (ite (= x3178 x3326) x3497 (x4223 x3178))))
(assert (= (ite (= x209 x3595) 274184521717934524641157099916833587240 (x1195 x209)) (x3036 x209)))
(assert (= (and x1578 (not x1304)) x4029))
(assert (= (ite (= x492 x3044) x890 (x1371 x3044)) (x3077 x3044)))
(assert (= (and (not x4060) x3424) x3817))
(assert (= (ite (= x2005 x1606) 274184521717934524641157099916833587240 (x4226 x1606)) (x1214 x1606)))
(assert (x3207 x4123))
(assert (x3207 x1096))
(assert (= (x126 x3570) (ite (= x1228 x3570) x3067 (x1442 x3570))))
(assert (=> (< (- x993 1) 10000) (= (x2562 x993) (x3377 x993))))
(assert (= x560 (=> (= x98 (= x3449 0)) (and (=> x98 x1614) (=> (not x98) x3013)))))
(assert (x2579 x1351 x4265 x1320 x3185))
(assert (x2750 x2698 x1695))
(assert (= (x858 x1606) (ite (and x650 x296 (not x1914)) (x116 x1606) (x2055 x1606))))
(assert (= (ite (= x1748 x1219) x3714 (x2369 x1748)) (x1967 x1748)))
(assert (x3207 x3660))
(assert (x3207 x2390))
(assert (= (x126 x2465) (ite (= x2465 x1228) x3067 (x1442 x2465))))
(assert (=> (< (- x1216 1) 10000) (= (x2562 x1216) (x3377 x1216))))
(assert (= (x1924 x3433) (ite (= x3433 x2977) x4123 (x2625 x3433))))
(assert (= (and x1361 x3752) x2902))
(assert (= (ite (= x3440 x4186) x2966 (x3161 x3440)) (x3218 x3440)))
(assert (= (x3436 x2785) (ite (= x2595 x2785) x3561 (x979 x2785))))
(assert (x3207 x4131))
(assert (x3207 x1358))
(assert (= (=> (and (= (= 0 x1738) x3615) (= x906 (x2515 (+ 4 x402))) (= (x3402 (- x3670 x402)) x2071) (= 274184521717934524641157099916833587240 x758) (= x4300 (x3037 1461501637330902918203684832716283019655932542975 x1908)) (= (x2515 (+ 32 x115)) x1621) (= (x2515 (+ x115 64)) x3069) (= x1738 (x3060 (x2562 x1493))) (= x1493 (x3037 1461501637330902918203684832716283019655932542975 x1445)) (= (x2515 (+ x402 100)) x3670) (= x115 x906)) (and (=> (not x3615) x3347) (=> x3615 x1614))) x3072))
(assert (= (x1528 x3093) (ite (= x1844 x3093) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x3826 x3093))))
(assert (= (ite (= x1263 x591) x2746 (x3077 x1263)) (x2837 x1263)))
(assert (= (ite (= (x3377 0) x1707) x3798 (x4026 x1707)) (x2115 x1707)))
(assert (x3207 x1915))
(assert (= x1486 (=> (and (= x4156 0) (= (x3037 1461501637330902918203684832716283019655932542975 x217) x2899) (= x2483 (x3037 115792089237316195423570985007226406215939081747436879206741300988257197096960 x3512)) (= (x1488 x682) x3512) (= x750 0) (= x3171 x2899) (= (< 0 x2688) x311) (= x153 (x2515 (+ x3111 1))) (= x1341 (x3037 1461501637330902918203684832716283019655932542975 x217)) (= (x2515 (+ x2483 x3171)) x1845) (= (x372 (x2562 x1248) (x3377 208) 0) x682) (= x2688 (x3060 (x2562 x1341)))) (and (=> (and (= 1 x2953) (= x1062 x943) (not x311)) x502) (=> (and (= x2613 (x2515 (+ x2096 160))) (= x1784 (x2515 (+ x3920 64))) (= (> x2679 x3841) x914) (= x182 (x3037 1461501637330902918203684832716283019655932542975 x4220)) (= x2096 x1126) (= x3841 (x2757 x1024)) (= x581 (> x3841 0)) x311 (= (x2515 (+ 36 x1024)) x2096) (or (not x914) (and (= (x2515 (+ x2613 x3841)) x1490) x914)) (= x2684 (x2515 (+ x1024 32))) (= x3920 (x2515 (+ x1126 32))) (= (x2515 (+ 64 x1126)) x3142) (or (and (= x2679 0) (not x581)) (and (= x2613 x2702) (= x147 (x518 x2465)) (or (and (not x4093) (= 32 x2679)) (and (= (x1371 x3310) x890) (or (and (= x2746 (x3077 x4230)) x2608 (= (x2515 (+ 96 x1678)) x591) (= x631 (> x3841 96)) (= (x2515 (+ 96 x1024)) x4230) (or (and x631 (= x3489 (x2837 x1465)) (= (x2515 (+ x1024 128)) x1465) (= 128 x2679) (not x3965) (= x3965 (< 128 x3841)) (= (x2515 (+ 128 x1678)) x1869)) (and (not x631) (= 96 x2679)))) (and (not x2608) (= x2679 64))) (= x492 (x2515 (+ x1678 64))) (= x3310 (x2515 (+ 64 x1024))) (= x2608 (< 64 x3841)) x4093)) (= (< 32 x3841) x4093) (= x2684 x2465) x581)) (= x298 (x3037 1461501637330902918203684832716283019655932542975 x217)) (= (x2515 (+ 132 x943)) x1678)) x63)))))
(assert (x3207 x1400))
(assert (=> (< (- x2963 1) 10000) (= (x3377 x2963) (x2562 x2963))))
(assert (x3207 x1199))
(assert (x3207 x3382))
(assert (= (x2625 x3910) (ite (= x3194 x3910) x2368 (x2043 x3910))))
(assert (x3207 x1660))
(assert (x2832 x551 x1305))
(assert (x3207 x3659))
(assert (x3207 x3472))
(assert (x3207 x3370))
(assert (= (x1814 x783) (ite (= x3069 x783) x2454 (x3672 x783))))
(assert (= x452 (=> (and (= x2599 x2095) (= (= x3708 x91) x2680) (= x91 (x3037 1461501637330902918203684832716283019655932542975 x3708))) (and (=> (not x2680) x1614) (=> x2680 x259)))))
(assert (x3207 x38))
(assert (= (x126 x1207) (ite (= x1228 x1207) x3067 (x1442 x1207))))
(assert (= (x518 x172) (ite (= x172 x1678) x3841 (x2757 x172))))
(assert (x3207 x2963))
(assert (= (or (and x747 (not x1962)) (and x2803 x35) (and (not x1862) x874) (and x2461 x2209) (and x123 x1892) (and x1712 x3686) (and x565 x4197) (and x450 x3651) (and x3922 x705) (and (not x3999) x2776) (and x60 x3064) (and x1117 x39) (and (not x2580) x2946) (and x1203 x1618) (and x988 x2304) (and x1810 x3598) (and x2592 x833) (and x3803 (not x198)) (and x1354 x158) (and x3779 (not x617)) (and x674 x3143) (and x1624 (not x2405)) (and x392 x2925) (and x1909 x3663) (and x173 (not x218)) (and x1000 x3568) (and x263 x798) (and x145 x1647) (and x2784 x2329) (and x2671 (not x4181)) (and (not x3987) x1278) (and (not x2639) x2332) (and x3849 x2721) (and x1976 (not x2663)) (and x3828 x3615) (and x608 (not x595)) (and x3139 x2667) (and (not x1552) x3969) (and x321 x4298) (and x4179 x3654) (and x3388 x2648) (and x1670 x98) (and x1955 x427) (and x3971 (not x601)) (and x1365 (not x2433)) (and x2531 x2693) (and x3734 x3834) (and x2310 x4083) (and (not x2947) x2002) (and x3613 x1060) (and x2169 (not x118)) (and (not x1361) x3752) (and x2022 x1050) (and x1949 x109) (and x2805 x1506) (and x320 x1281) (and x3835 x4119) (and x1873 (not x576)) (and (not x3267) x2718) (and (not x2680) x4218) (and x3950 x2944) (and (not x3330) x1583) (and x872 x2133) (and x1440 x4147) (and x2902 x23) (and x2226 (not x2004))) x193))
(assert (x3207 x1534))
(assert (= 0 (x1197 x1105)))
(assert (= (and (not x4038) x974) x1151))
(assert (x3207 x2290))
(assert (= x4237 (and x1296 (not x1116))))
(assert (= (and (not x909) x2914) x2481))
(assert (= (ite (and x1630 x919 (not x2339)) (x396 x209) (x3992 x209)) (x2125 x209)))
(assert (x3207 x1295))
(assert (= x2647 (=> (= (= x3227 274184521717934524641157099916833587206) x3684) (and (=> x3684 x1946) (=> (not x3684) x2814)))))
(assert (= (x3492 x3317) (ite (= x3317 x3343) 0 (x1144 x3317))))
(assert (x3207 x2552))
(assert (= x3707 (and x1418 (not x779))))
(assert (= (ite (= x1844 x999) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x3826 x999)) (x1528 x999)))
(assert (= x686 (=> (and (= x1357 (x803 x3070)) (= x274 (not (= x792 0))) (= (x3037 1461501637330902918203684832716283019655932542975 x1357) x792) (= x3070 (x372 (x2562 x1248) (x3377 208) 0))) (and (=> x274 x3106) (=> (not x274) x49)))))
(assert (= (ite (= x817 x253) x1841 (x1950 x817)) (x768 x817)))
(assert (= x3608 (=> (= x3661 x1849) x4283)))
(assert (= (x2055 x2345) (ite (= x2227 x2345) 98474297345890754025501882143967591664980152141971839855651084132735363579904 (x2668 x2345))))
(assert (x188 x4056))
(assert (x3207 x1252))
(assert (=> (< (- x1793 1) 10000) (= (x2562 x1793) (x3377 x1793))))
(assert (x3207 x1566))
(assert (= (x2220 x1465) (ite (= x2590 x1465) x1749 (x3842 x1465))))
(assert (= (ite (= x3499 (x3377 0)) x2794 (x3228 x3499)) (x2369 x3499)))
(assert (x3207 x1038))
(assert (= (ite (= x3326 x2341) x3497 (x4223 x2341)) (x3760 x2341)))
(assert (= (and x407 x516) x3432))
(assert (= (x3641 (x2562 x3448)) x3448))
(assert (= x3900 (=> (and (= x1024 (x2515 (+ x814 x4165))) (= x2034 (or (and (< x1133 32) (= true (<= x1133 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1133))) (= (x2515 (+ x1133 31)) x648) (= (x3037 115792089237316195423570985008687907853269984665640564039457584007913129639904 x648) x4165)) (and (=> x2034 x3106) (=> (not x2034) x3575)))))
(assert (= (x3553 x3070) (ite (= x1969 x3070) x2633 (x1967 x3070))))
(assert (x2579 x2174 x4081 x3527 x2414))
(assert (= (x2206 x2411) (ite (= x2411 x2302) x2849 (x3901 x2411))))
(assert (x3207 x1177))
(assert (x3207 x881))
(assert (x3207 x3771))
(assert (x3207 x2212))
(assert (= (=> (and (= x3617 (x2515 (+ 36 x749))) (= (> x1013 18446744073709551615) x23) (= x1013 (x2143 x1939))) (and (=> x23 x1614) (=> (not x23) x2378))) x611))
(assert (= (=> (and (= (x372 (x2562 x3764) (x3377 209) 0) x1672) (= x1619 (> 1 x3500)) (= x3500 (x1363 x1672))) (and (=> (not x1619) x2672) (=> x1619 x2903))) x3993))
(assert (x3207 x2435))
(assert (x3207 x434))
(assert (= (ite (= x1474 x1228) x3067 (x1442 x1474)) (x126 x1474)))
(assert (= (x1967 x382) (ite (= x1219 x382) x3714 (x2369 x382))))
(assert (= (x3901 x1766) (ite (= x1766 x181) x2175 (x692 x1766))))
(assert (= (=> (= (= 274184521717934524641157099916833587240 x834) x2696) (and (=> (not x2696) x4113) (=> (and (not (< x1235 1722255204)) x2696 (= x1381 (x3402 (- x1856 4))) (= x3166 x1856) (not (> 4 x1856)) (not (= 1858285468 x1235)) (= 50942633119752846454219349998365661925608737367104304655302372697894809501696 x3545) (= (or (and (= (<= x1381 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (< x1381 32)) (> x1381 57896044618658097711785492504343953926634992332820282019728792003956564819967)) x542) (not (= 1845821197 x1235)) (or (and x542 (= x3802 0) (= x1006 x969)) (and (= 1 x3802) (= (x3161 x67) x732) (= x67 (x372 (x2562 274184521717934524641157099916833587240) (x3377 209) 0)) (= 32 x1006) (= 274184521717934524641157099916833587240 x4227) (not x542))) (= 36 x1856) (= (x3060 (x2562 274184521717934524641157099916833587240)) x2295) (not (> 1166402363 x1235)) (not (= x1235 1722255204)) (> 2311529814 x1235) (= x1235 1889567281) (< 0 x2295)) x2224))) x1723))
(assert (= (x3760 x2465) (ite (= x3326 x2465) x3497 (x4223 x2465))))
(assert (= (ite (= x2552 x4271) x3187 (x3303 x2552)) (x3278 x2552)))
(assert (x3207 x4263))
(assert (= (=> (and (= x2081 (x2515 (+ x1013 160))) (= x2812 x754) (= (= (ite x3488 1 0) x3975) x3987) (= x3289 (= x2812 0)) (= x3488 (not x3289))) (and (=> (not x3987) x1614) (=> x3987 x2284))) x2650))
(assert (= (ite (and x3165 (not x3115) x64 x2541 x2649 x207) (x2396 x783) (ite (and x2541 (not x2649) x64 x3165 x207) (x1924 x783) (ite (and x64 (not x207) x3165 x2541) (x2625 x783) (ite (and x2541 (not x64) x3165) (x2043 x783) (x20 x783))))) (x190 x783)))
(assert (x3207 x816))
(assert (= (x3588 x2413) (ite (= x1443 x2413) 274184521717934524641157099916833587240 (x2961 x2413))))
(assert (x3207 x189))
(assert (= (ite (= x4193 x2789) x1703 (x1924 x4193)) (x2396 x4193)))
(assert (= (x3377 274184521717934524641157099916833587202) (x2562 274184521717934524641157099916833587202)))
(assert (x3207 x1435))
(assert (x3207 x74))
(assert (= (=> (and (= x3751 (= x2620 x3173)) (= x3173 x662)) (and (=> x3751 x2490) (=> (not x3751) x2210))) x2141))
(assert (x3207 x2326))
(assert (= (=> (and (= x1852 274184521717934524641157099916833587240) (= x3915 (x372 (x2562 x888) (x3377 1) 0)) (= x3769 (x2241 x3915)) (<= 0 x3769) (= (x3402 (- x4173 x89)) x2499) (= (x3402 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x89)) x2556) (<= x3769 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x3459 (< x2556 x3769)) (= x2908 (x372 (x2562 274184521717934524641157099916833587240) (x3377 1) 0))) (and (=> (not x3459) x1640) (=> x3459 x2505))) x3562))
(assert (x3207 x85))
(assert (= (ite (= x4010 x2853) x1540 (x1601 x2853)) (x3161 x2853)))
(assert (x3207 x1424))
(assert (= (x3416 x2010) (ite x1350 (ite x2406 (x1716 x2010) (ite x2981 (x1593 x2010) (x467 x2010))) (x1716 x2010))))
(assert (= (x1371 x802) (ite (= x2702 x802) x147 (x518 x802))))
(assert (= (and (not x2735) x950) x4035))
(assert (= (x126 x2010) (ite (= x2010 x1228) x3067 (x1442 x2010))))
(assert (= x888 (x3641 (x2562 x888))))
(assert (x3207 x1927))
(assert (x3207 x224))
(assert (= x2551 (or x1 x356 x3934)))
(assert (= (x1298 x1040) (ite (= x1040 x637) x1658 (x842 x1040))))
(assert (=> (> (+ 10000 1) x1469) (= (x2562 x1469) (x3377 x1469))))
(assert (x2954 x1305))
(assert (= 9518847204935358166548570266051330015907116135037852959641967396525866745856 (x3641 (x3377 9518847204935358166548570266051330015907116135037852959641967396525866745856))))
(assert (x3207 x104))
(assert (= (x440 x802) (ite (= x802 x3308) x307 (x2245 x802))))
(assert (= x1908 (x3641 (x2562 x1908))))
(assert (x3207 x2432))
(assert (= (ite (= x1406 x3910) x4102 (x3278 x3910)) (x2425 x3910)))
(assert (= (=> (= x2182 (= 274184521717934524641157099916833587206 x834)) (and (=> (not x2182) x2809) (=> (and (not (< x3839 4)) (or (and (not x624) (= (x372 (x2562 274184521717934524641157099916833587240) (x3377 1) 0) x2385) (= (x695 x2385) x2213) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2213) (<= 0 x2213) (= 32 x1006) (= 274184521717934524641157099916833587240 x3496) (= x3802 1)) (and (= x969 x1006) (= 0 x3802) x624)) (= 50942633119752846454219349998365661925608737367104304655302372697894809501696 x4216) (not (< x42 826074471)) (not (= x42 826074471)) (= x42 1889567281) (= x3166 x3839) x2182 (= (x3402 (- x3839 4)) x954) (< 0 x3836) (= x624 (or (and (< x954 32) (= (<= x954 57896044618658097711785492504343953926634992332820282019728792003956564819967) true)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x954))) (= x3839 36) (= (x3060 (x2562 274184521717934524641157099916833587206)) x3836)) x2224))) x4113))
(assert (= (ite (= x4182 x4104) x1682 (x1668 x4104)) (x3392 x4104)))
(assert (x188 x185))
(assert (x3207 x4034))
(assert (x3207 x3973))
(assert (x3207 x1113))
(assert (= (ite (= x3691 x1030) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x1274 x1030)) (x3303 x1030)))
(assert (= (x3161 x1910) (ite (= x1910 x4010) x1540 (x1601 x1910))))
(assert (x3207 x2084))
(assert (x3207 x3802))
(assert (= (x1501 x2591) (ite x860 (ite x3921 (x1517 x2591) (x2745 x2591)) (x900 x2591))))
(assert (= x1955 (and x1440 (not x4147))))
(assert (x3207 x3899))
(assert (x3207 x665))
(assert (=> (> (+ 10000 1) x1435) (= (x3377 x1435) (x2562 x1435))))
(assert (= (ite (= x382 x2894) x1067 (x2244 x382)) (x3172 x382)))
(assert (= (x768 x209) (ite (= x253 x209) x1841 (x1950 x209))))
(assert (= (x2396 x3910) (ite (= x3910 x2789) x1703 (x1924 x3910))))
(assert (x3207 x495))
(assert (= (ite (and x2869 x3621 (not x2111)) (x799 x1192) (x2418 x1192)) (x2708 x1192)))
(assert (= (and x2830 x2825) x2677))
(assert (x3207 x3114))
(assert (= (x190 x3824) (ite (and x2649 x207 (not x3115) x3165 x2541 x64) (x2396 x3824) (ite (and x207 x64 x2541 x3165 (not x2649)) (x1924 x3824) (ite (and x64 x3165 x2541 (not x207)) (x2625 x3824) (ite (and (not x64) x2541 x3165) (x2043 x3824) (x20 x3824)))))))
(assert (= (ite (= x2474 x1193) x199 (x362 x1193)) (x2043 x1193)))
(assert (= (x2562 5192296858534827628530496329220096) (x3377 5192296858534827628530496329220096)))
(assert (= (ite (and x1785 x399) (x3100 x3093) (x1728 x3093)) (x2001 x3093)))
(assert (x3207 x961))
(assert (x3207 x1680))
(assert (= (and (not x654) x420) x3119))
(assert (= (x1668 x3433) (ite (= x1414 x3433) x4020 (x744 x3433))))
(assert (x3207 x1193))
(assert (= (and x2481 (not x903)) x2351))
(assert (x3207 x2299))
(assert (x3207 x1986))
(assert (x3207 x4144))
(assert (= (=> (and (= (< 0 x3936) x269) (= (x3060 (x2562 x1978)) x3936) (= (x3037 1461501637330902918203684832716283019655932542975 x2599) x1978)) (and (=> x269 x3068) (=> (and (= x724 x2196) (= x1311 x3540) (not x269) (= x2196 (x1637 (x2562 274184521717934524641157099916833587240)))) x3130))) x2109))
(assert (= (and x1905 (not x819)) x1128))
(assert (= x778 (=> (= (= x1709 0) x1164) (and (=> (not x1164) x3967) (=> x1164 x3106)))))
(assert (= (ite (= x1105 x422) x3522 (x923 x1105)) (x744 x1105)))
(assert (= (ite x1350 (ite x2406 (x1716 x2591) (ite x2981 (x1593 x2591) (x467 x2591))) (x1716 x2591)) (x3416 x2591)))
(assert (= (x1197 x2552) 0))
(assert (= (x440 x723) (ite (= x3308 x723) x307 (x2245 x723))))
(assert (x3207 x3560))
(assert (= (x1924 x3725) (ite (= x3725 x2977) x4123 (x2625 x3725))))
(assert (= (x3492 x2104) (ite (= x2104 x3343) 0 (x1144 x2104))))
(assert (= (x1528 x1548) (ite (= x1548 x1844) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x3826 x1548))))
(assert (= (x1267 x1606) (ite (= x1606 x1489) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x2030 x1606))))
(assert (= (ite (and x761 x2885 x3621 (not x4082) x4248 x2869) (x596 x3044) (ite (and x4248 (not x2885) x761 x2869 x3621) (x3760 x3044) (ite (and (not x4248) x761 x3621 x2869) (x4223 x3044) (ite (and (not x761) x3621 x2869) (x2220 x3044) (x530 x3044))))) (x799 x3044)))
(assert (x3207 x2436))
(assert (x3207 x3577))
(assert (= (x3403 x691) (ite (= x1672 x691) x1180 (x1363 x691))))
(assert (x3207 x1559))
(assert (= x1238 (=> (and (= x2533 (= x3008 x4300)) (= x1140 x3008)) (and (=> (not x2533) x128) (=> x2533 x2237)))))
(assert (= (x2708 x2785) (ite (and x2869 (not x2111) x3621) (x799 x2785) (x2418 x2785))))
(assert (x188 x4000))
(assert (x3207 x2956))
(assert (= (x3392 x209) (ite (= x209 x4182) x1682 (x1668 x209))))
(assert (x3207 x1860))
(assert (x3207 x3399))
(assert (= (ite (= x709 x1049) x983 (x2058 x709)) (x219 x709)))
(assert (x1025 x4066 x2116 x4149 x536))
(assert (x3207 x3375))
(assert (= (x641 x4213) (ite (and (not x92) x3165 x2541) (x190 x4213) (x4112 x4213))))
(assert (x3207 x774))
(assert (= (x1950 x2413) (ite (= x3537 x2413) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x2410 x2413))))
(assert (x3207 x1740))
(assert (x3207 x1200))
(assert (= (=> (and (= x2381 x131) (= (x3037 1461501637330902918203684832716283019655932542975 x2941) x2574) (= x307 x357) (= x584 x1657) (= x1229 x2308) (= (= x2574 x2941) x1099)) (and (=> (not x1099) x3106) (=> x1099 x1524))) x3471))
(assert (= (x1668 x3910) (ite (= x1414 x3910) x4020 (x744 x3910))))
(assert (= (and x1644 x3912) x2806))
(assert (x3207 x2584))
(assert (= (x1371 x1465) (ite (= x1465 x2702) x147 (x518 x1465))))
(assert (= (x2043 x3910) (ite (= x3910 x2474) x199 (x362 x3910))))
(assert (x3207 x662))
(assert (= (ite (= x3357 x1207) x3348 (x3760 x1207)) (x596 x1207)))
(assert (= (=> (and (= (x3037 1461501637330902918203684832716283019655932542975 x1908) x3327) (= (x3037 255 x1959) x1202) (= (> x1202 0) x2405) (= (x2323 (x3377 1)) x1512) (= x1959 (x2323 x2261)) (= (x2515 (+ 64 x1040)) x1907) (= (x3037 4294967295 x841) x4233) (= (x3037 18446744073709551615 x3509) x1162) (= (x2515 (+ 64 x1143)) x1111) (= x3509 (x2515 (+ x4158 x2698))) (= (- (/ x1512 18446744073709551616) (uninterp_frac x1512 18446744073709551616)) x841) (= (x372 (x2562 x1793) (x3377 4) 0) x2261) (= x1040 (x2515 (+ x3118 64))) (= x1793 (x3037 1461501637330902918203684832716283019655932542975 x2599))) (and (=> x2405 x3381) (=> (not x2405) x1614))) x71))
(assert (x3207 x4154))
(assert (x188 x137))
(assert (= (x1176 x2402) (ite (= x3806 x2402) 274184521717934524641157099916833587240 (x3929 x2402))))
(assert (x3207 x3561))
(assert (= (ite (= x1463 x4182) x1682 (x1668 x1463)) (x3392 x1463)))
(assert (x3207 x2274))
(assert (x3207 x561))
(assert (= (ite (and x2869 (not x2111) x3621) (x799 x172) (x2418 x172)) (x2708 x172)))
(assert (x3207 x2069))
(assert (= (x190 x1105) (ite (and x3165 (not x3115) x64 x2649 x207 x2541) (x2396 x1105) (ite (and x64 x2541 x207 x3165 (not x2649)) (x1924 x1105) (ite (and x64 (not x207) x3165 x2541) (x2625 x1105) (ite (and x3165 x2541 (not x64)) (x2043 x1105) (x20 x1105)))))))
(assert (= (x1298 x1143) (ite (= x637 x1143) x1658 (x842 x1143))))
(assert (= (x3641 (x2562 x3362)) x3362))
(assert (= (x3392 x3433) (ite (= x4182 x3433) x1682 (x1668 x3433))))
(assert (= (ite (= x4104 x2789) x1703 (x1924 x4104)) (x2396 x4104)))
(assert (x3207 x2786))
(assert (x3207 x1782))
(assert (= x3969 (and x2592 (not x833))))
(assert (x3207 x1046))
(assert (= (ite (= x960 x3326) x3497 (x4223 x960)) (x3760 x960)))
(assert (= (ite (and x2869 x3621 (not x2111)) (x799 x3178) (x2418 x3178)) (x2708 x3178)))
(assert (x3207 x2372))
(assert (= (x703 x4213) (ite (and x2002 (not x2387) x2947) (x3818 x4213) (x1259 x4213))))
(assert (x3207 x2702))
(assert (x3207 x1300))
(assert (= x249 (and x2628 x484)))
(assert (= x2719 (=> (and (= (x372 (x2562 274184521717934524641157099916833587240) (x3377 1) 0) x275) (<= 0 x70) (= x3772 (x3402 (- x3676 x1017))) (= 274184521717934524641157099916833587240 x3208) (= x3199 (< x1891 x70)) (= x4279 (x372 (x2562 x1399) (x3377 1) 0)) (= x1891 (x3402 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1017))) (<= x70 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x70 (x3766 x275))) (and (=> x3199 x1798) (=> (not x3199) x651)))))
(assert (x2954 115792089237316195423570985008687907853269984665640564039457584007913129639904))
(assert (x1954 x841 x4043))
(assert (x3207 x4212))
(assert (x3207 x3057))
(assert (= (x4223 x2465) (ite (= x4143 x2465) x4131 (x2220 x2465))))
(assert (= x2068 (x3641 (x2562 x2068))))
(assert (= x4199 (and (not x339) x3295)))
(assert (= (x2115 x1910) (ite (= x1910 (x3377 0)) x3798 (x4026 x1910))))
(assert (= (x1197 x4213) 0))
(assert (x3207 x2670))
(assert (= (ite (= x1678 x2465) x3841 (x2757 x2465)) (x518 x2465)))
(assert (= (x549 x783) (ite (= x783 x854) 98474297345890754025501882143967591664980152141971839855651084132735363579904 (x1772 x783))))
(assert (= (ite (and x3621 x2869 x2885 (not x4082) x761 x4248) (x596 x4230) (ite (and x3621 (not x2885) x4248 x761 x2869) (x3760 x4230) (ite (and x3621 x761 (not x4248) x2869) (x4223 x4230) (ite (and x2869 x3621 (not x761)) (x2220 x4230) (x530 x4230))))) (x799 x4230)))
(assert (= (x799 x2889) (ite (and x761 x4248 x2885 x2869 x3621 (not x4082)) (x596 x2889) (ite (and (not x2885) x3621 x2869 x761 x4248) (x3760 x2889) (ite (and x3621 x761 (not x4248) x2869) (x4223 x2889) (ite (and x2869 (not x761) x3621) (x2220 x2889) (x530 x2889)))))))
(assert (x2954 x3140))
(assert (x3207 x442))
(assert (= (ite (= x3194 x4193) x2368 (x2043 x4193)) (x2625 x4193)))
(assert (x3207 x2528))
(assert (x657 x1667 x2534))
(assert (= (ite (= x1495 x422) x3522 (x923 x1495)) (x744 x1495)))
(assert (x3207 x2682))
(assert (= x3479 (=> (and (= x3691 (x2515 (+ 128 x2572))) (= (x2515 (+ x1030 32)) x2085) (= x2947 (> x2979 0)) (= (x2515 (+ x1334 64)) x3491) (= x2452 (x3402 (- x4264 x1030))) (= x2271 274184521717934524641157099916833587240) (= (x2515 (+ 32 x1334)) x85) (= x3879 (x3037 1461501637330902918203684832716283019655932542975 x2599)) (= (x2975 x2085) x3141) (= x1334 x2572) (= x2979 (x3060 (x2562 x3879))) (= x3071 (x2515 (+ x2229 16156842317565293874272834530371880720966471053262404558597773956279093428224))) (= (x3037 26959946667150639794667015087019630673637144422540572481103610249215 x3141) x2229) (= (x3402 (- x2452 32)) x1027) (= x3122 (x2515 (+ x2572 160))) (= x2572 (x2515 (+ 36 x1030))) (= (x2515 (+ 132 x1030)) x4264) (= x3370 274184521717934524641157099916833587240) (= 0 x4235)) (and (=> (and (or (not x2387) (and (= (x2515 (+ x3457 x3122)) x2064) x2387)) (or (and (not x2701) (= x2161 0)) (and (or (and (not x791) (= x2161 32)) (and (= x1406 (x2515 (+ 96 x4264))) (= (x3278 x938) x4102) x791 (or (and (= x2552 (x2515 (+ 96 x1030))) x559 (= x3469 (x2515 (+ x4264 128))) (= x1018 (< 96 x3457)) (or (and (= x1253 (x2515 (+ 160 x4264))) (= x2236 (< 128 x3457)) x1018 (= x783 (x2515 (+ 128 x1030))) (= x2161 128) (not x2236) (= x1424 (x531 x783))) (and (= x2161 96) (not x1018))) (= (x2425 x2552) x4144)) (and (= x2161 64) (not x559))) (= (> x3457 64) x559) (= x938 (x2515 (+ x1030 64))))) (= x3187 (x3303 x1495)) (= x3122 x4271) x2701 (= x791 (< 32 x3457)) (= x1495 x2085))) (= (< x3457 x2161) x2387) x2947 (= x2701 (> x3457 0)) (= x3457 (x3303 x1030))) x1201) (=> (not x2947) x1614)))))
(assert (x3207 x2633))
(assert (= (ite (and (not x914) x2270 x311) (x3990 x999) (x448 x999)) (x2288 x999)))
(assert (x3207 x1097))
(assert (= (and x827 x401) x1050))
(assert (= (ite (= x783 x3343) 0 (x1144 x783)) (x3492 x783)))
(assert (= (x394 x2804) (ite (= x2804 x2778) x572 (x2058 x2804))))
(assert (= x4025 (=> (and (= (> x1097 x2849) x1303) (= (x2515 (+ x836 x1097)) x2849)) (and (=> (not x1303) x236) (=> x1303 x3988)))))
(assert (= (ite (= x3310 x2702) x147 (x518 x3310)) (x1371 x3310)))
(assert (x3207 x2928))
(assert (= (=> (= x2280 (= 274184521717934524641157099916833587240 x2761)) (and (=> (and x2280 (= (ite x2280 1 0) x2772)) x1161) (=> (not x2280) x593))) x2430))
(assert (= (=> (and (= (= x2197 0) x3613) (= x2197 (x3060 (x2562 x167)))) (and (=> (and (or (not x2586) (and (= x175 (>= (x517 (x2562 274184521717934524641157099916833587240)) x808)) (= (= x1184 (x517 (x2562 x167))) x1095) (= (x2654 (x2562 x167)) x1184) (< x2246 4294967296) x175 x2586 x1095 (= (x2654 (x2562 274184521717934524641157099916833587240)) x808))) (= x2586 (> x3449 0)) (not x3613)) x560) (=> x3613 x1614))) x2936))
(assert (= (ite (and (not x914) x2270 x311) (x3990 x1263) (x448 x1263)) (x2288 x1263)))
(assert (= (ite (= x2474 x374) x199 (x362 x374)) (x2043 x374)))
(assert (= x4007 (and (not x3467) x1948)))
(assert (x3207 x3422))
(assert (= x3912 (and x3780 x676)))
(assert (= (x3377 4294967296) (x2562 4294967296)))
(assert (= (x3619 x409 96) (uninterp_mod (* x409 79228162514264337593543950336) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (x3207 x3649))
(assert (= (ite (= x1495 x2429) x2731 (x3392 x1495)) (x1880 x1495)))
(assert (x2954 x3478))
(assert (x3207 x3647))
(assert (= x468 (and x2250 (not x2758))))
(assert (x3207 x2665))
(assert (= (x2708 x2889) (ite (and x3621 (not x2111) x2869) (x799 x2889) (x2418 x2889))))
(assert (= (ite x2551 (ite x3934 (x703 x3910) (ite x356 (x1572 x3910) (x3694 x3910))) (x703 x3910)) (x2767 x3910)))
(assert (= x3313 (and x2788 (not x1619))))
(assert (= (ite (= x3178 x2590) x1749 (x3842 x3178)) (x2220 x3178)))
(assert (= (x2396 x938) (ite (= x2789 x938) x1703 (x1924 x938))))
(assert (x3207 x2453))
(assert (x3207 x1294))
(assert (= (and (not x1580) x2324) x3462))
(assert (= (x2837 x1548) (ite (= x591 x1548) x2746 (x3077 x1548))))
(assert (= x1904 (and (not x3978) x3409)))
(assert (= (x3641 (x3377 5192296858534827628530496329220096)) 5192296858534827628530496329220096))
(assert (= x1070 (=> (and (= x3698 100) (not (< x3821 455944412)) (< x3821 2311529814) (= x339 (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1082) (and (> 96 x1082) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1082) true)))) (= x1082 (x3402 (- x3698 4))) (not (> 4 x3698)) (= x2071 x3698) (not (= x3821 455944412)) (= x3266 (x3060 (x2562 274184521717934524641157099916833587240))) (> 1166402363 x3821) (= x3821 599290589) (< 0 x3266) (= x58 x1044) (= x4300 x3764) (= 16156842317565293874272834530371880720966471053262404558597773956279093428224 x1806) (not (= 511946350 x3821))) (and (=> (not x339) x3946) (=> x339 x2903)))))
(assert (= x2446 (and x4127 (not x1068))))
(assert (= (x3588 x209) (ite (= x209 x1443) 274184521717934524641157099916833587240 (x2961 x209))))
(assert (x3207 x115))
(assert (x3207 x4115))
(assert (x3207 x3461))
(assert (x3207 x2373))
(assert (= x143 true))
(assert (= (and (not x220) x3363) x1715))
(assert (= (x1751 x2345) (ite (= x2345 x154) 0 (x720 x2345))))
(assert (= 0 (x428 x4230)))
(assert (= 0 (x428 192)))
(assert (x3207 x3650))
(assert (= (=> (= (= x2093 274184521717934524641157099916833587240) x3202) (and (=> (not x3202) x330) (=> (and x3202 (= (ite x3202 1 0) x3597)) x2256))) x491))
(assert (= (ite (= x854 x2104) 98474297345890754025501882143967591664980152141971839855651084132735363579904 (x1772 x2104)) (x549 x2104)))
(assert (= (ite (= x1414 x2537) x4020 (x744 x2537)) (x1668 x2537)))
(assert (x657 x4050 x2532))
(assert (= (=> (and (= x365 0) (= x3361 x2704)) x1100) x3889))
(assert (= (ite (= x1788 x1024) 0 (x1337 x1788)) (x1728 x1788)))
(assert (= x3803 (and x1278 x3987)))
(assert (x3207 x3528))
(assert (= (x219 x1482) (ite (= x1482 x1049) x983 (x2058 x1482))))
(assert (= (ite (= x2146 x3391) x1822 (x3766 x2146)) (x896 x2146)))
(assert (x3207 x4166))
(assert (x3207 x3198))
(assert (= (x3818 x374) (ite (and x2947 x2701 x791 x2002 (not x1018) x559) (x531 x374) (ite (and x2701 x2002 x791 x2947 (not x559)) (x2425 x374) (ite (and (not x791) x2701 x2947 x2002) (x3278 x374) (ite (and (not x2701) x2947 x2002) (x3303 x374) (x1994 x374)))))))
(assert (= (ite (= x2552 x422) x3522 (x923 x2552)) (x744 x2552)))
(assert (= (ite (= x1474 x2590) x1749 (x3842 x1474)) (x2220 x1474)))
(assert (x3207 x2452))
(assert (= x2406 (or (and (not x1877) x2351) x2292)))
(assert (= (x3036 x1485) (ite (= x3595 x1485) 274184521717934524641157099916833587240 (x1195 x1485))))
(assert (= (x223 x3093) (ite (= x3093 x3801) x1342 (x1156 x3093))))
(assert (= (ite (= x292 x2778) x572 (x2058 x292)) (x394 x292)))
(assert (x3207 x3140))
(assert (= (x1528 x2785) (ite (= x1844 x2785) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x3826 x2785))))
(assert (= x3227 (x3641 (x2562 x3227))))
(assert (= (x1814 x209) (ite (= x3069 x209) x2454 (x3672 x209))))
(assert (= 0 (x438 (- x999 x1158))))
(assert (= (or x1194 (and x3104 x1160)) x1150))
(assert (x3207 x1621))
(assert (= (ite (and x3165 (not x92) x2541) (x190 x3725) (x4112 x3725)) (x641 x3725)))
(assert (= 0 (x428 x1606)))
(assert (= (x1880 x4213) (ite (= x4213 x2429) x2731 (x3392 x4213))))
(assert (= (ite (and x3423 x3056 x4071 (not x2859) x483 x2509) (x3436 x2402) (ite (and x2509 x4071 x3056 x3423 (not x483)) (x979 x2402) (ite (and (not x3056) x2509 x3423 x4071) (x3898 x2402) (ite (and x4071 (not x2509) x3423) (x1528 x2402) (x1623 x2402))))) (x3052 x2402)))
(assert (= (x3309 (x2562 x3227)) (ite (and x399 x1785) (ite (and (not x4060) x1101 x3424) (x1696 (x2562 x3227)) (x2675 (x2562 x3227))) (x2675 (x2562 x3227)))))
(assert (= (x596 x2990) (ite (= x2990 x3357) x3348 (x3760 x2990))))
(assert (= (=> (and (= x1660 (x3060 (x2562 x3848))) (= x145 (= 0 x1660))) (and (=> x145 x1614) (=> (and (not x145) (= (< 0 x297) x1058) (or (and (not x1058) (= x297 x2855)) (and (> 4294967296 x3599) (= 1 x2855) x1058))) x2653))) x2112))
(assert (= (x2220 x2402) (ite (= x2590 x2402) x1749 (x3842 x2402))))
(assert (= (=> (and (= x3167 (= x2761 0)) (= x1509 (x372 (x2562 x878) (x3377 208) 0)) (= (x3037 1461501637330902918203684832716283019655932542975 x1805) x2761) (= (x1338 x1509) x1805)) (and (=> x3167 x2260) (=> (not x3167) x2430))) x3799))
(assert (x3207 x2056))
(assert (x3207 x1817))
(assert (= (ite (and x2270 (not x914) x311) (x3990 x2785) (x448 x2785)) (x2288 x2785)))
(assert (x3207 x2772))
(assert (= (=> (and (= (= 0 x716) x1861) (or (and (= 96 x209) x1861) (and (= x1119 x209) (not x1861) (= x3183 (x2515 (+ x1218 96)))))) x2525) x1423))
(assert (x3207 x1713))
(assert (x3207 x2934))
(assert (x3207 x164))
(assert (x3207 x2468))
(assert (= (x2708 x3570) (ite (and (not x2111) x3621 x2869) (x799 x3570) (x2418 x3570))))
(assert (= x1685 (and x1574 (not x2216))))
(assert (= x4298 (and x3344 x2036)))
(assert (= (ite (= x172 x3357) x3348 (x3760 x172)) (x596 x172)))
(assert (= (x3377 274184521717934524641157099916833587206) (x2562 274184521717934524641157099916833587206)))
(assert (x3825 x729 x3035))
(assert (= (ite (= (x3377 0) x1969) x2794 (x3228 x1969)) (x2369 x1969)))
(assert (= (x3641 (x3377 1858285468)) 1858285468))
(assert (x3207 x1076))
(assert (x3207 x4108))
(assert (x3207 x1502))
(assert (= x2788 (and x1769 (not x1833))))
(assert (x3207 x2275))
(assert (x3207 x967))
(assert (x3207 x2867))
(assert (x3207 x3258))
(assert (= x2131 (and x93 (not x989))))
(assert (= (x688 x817) (ite (= x817 x203) x1383 (x768 x817))))
(assert (= (ite (= x3440 x1672) x1180 (x1363 x3440)) (x3403 x3440)))
(assert (= x1249 (and x748 (not x1478))))
(assert (= (ite (= x3357 x2465) x3348 (x3760 x2465)) (x596 x2465)))
(assert (= (and x332 x681) x4076))
(assert (= x2145 (=> (and (= x1096 (x3037 1461501637330902918203684832716283019655932542975 x183)) (= x753 (x372 (x2562 x2682) (x3377 208) 0)) (= (= 0 x1096) x1011) (= x183 (x2369 x753))) (and (=> x1011 x3162) (=> (not x1011) x1850)))))
(assert (x2954 x3985))
(assert (= (x394 x4295) (ite (= x4295 x2778) x572 (x2058 x4295))))
(assert (= (x3040 (x2562 x3879)) (ite (and x617 x3779) (ite (and x1060 (not x3613) x2586) (x517 (x2562 x3879)) (x2654 (x2562 x3879))) (x2654 (x2562 x3879)))))
(assert (= x965 (=> (and (= x1817 x1399) (= (= x4300 x1399) x2050)) (and (=> x2050 x3074) (=> (not x2050) x1798)))))
(assert (x3207 x3099))
(assert (x3207 x3757))
(assert (= x1019 (=> (and (= x902 x1927) (= x1003 x319)) x3474)))
(assert (= (ite (= x3308 x3789) x307 (x2245 x3789)) (x440 x3789)))
(assert (= 0 (x3193 (- x2413 x3183))))
(assert (x3207 x445))
(assert (x2954 x687))
(assert (x201 x1730 x2577 x944 x3925))
(assert (x2954 x1608))
(assert (x3207 x764))
(assert (= (ite (= x2537 x3194) x2368 (x2043 x2537)) (x2625 x2537)))
(assert (x3207 x3050))
(assert (x3207 x3126))
(assert (= (ite (and (not x2978) x3423 x4071) (x3052 x2785) (x3389 x2785)) (x1716 x2785)))
(assert (= (ite (= x1788 x1228) x3067 (x1442 x1788)) (x126 x1788)))
(assert (x3207 x3273))
(assert (x3207 x2973))
(assert (= (x975 x2411) (ite (and x399 x1785) (ite (and x1101 (not x4060) x3424) (x3526 x2411) (x1868 x2411)) (x1868 x2411))))
(assert (= (=> (and (= x2193 x3884) (= x3846 (x2515 (+ x3884 32))) (= (x3037 1461501637330902918203684832716283019655932542975 x1908) x1617) (= (= 0 x942) x4197) (= x56 (x2515 (+ x1375 64))) (= (x2515 (+ x3884 64)) x1375) (= x3544 (x3037 1461501637330902918203684832716283019655932542975 x1445)) (= x4219 (x2515 (+ x3846 64))) (= x3343 (x2515 (+ 164 x402))) (= x942 (x3060 (x2562 x3544))) (= x2193 (x2515 (+ x402 4)))) (and (=> x4197 x1614) (=> (and (or (not x3573) (and (> 4294967296 x646) (= (x3938 (x2562 x3544)) x3937) x2997 (= (x3938 (x2562 274184521717934524641157099916833587240)) x1809) (= x3634 (= x3937 (x2959 (x2562 x3544)))) (= x2997 (>= (x2959 (x2562 274184521717934524641157099916833587240)) x1809)) x3634 x3573)) (not x4197) (= (> x1118 0) x3573)) x1413))) x1396))
(assert (x3207 x3700))
(assert (x3207 x4183))
(assert (= (x3628 (x3377 0)) (ite (= x756 (x3377 0)) x3763 (x3218 (x3377 0)))))
(assert (x3207 x1439))
(assert (x2579 x335 x1963 x2357 x1549))
(assert (= (ite (and x3621 x2869 (not x2111)) (x799 x3044) (x2418 x3044)) (x2708 x3044)))
(assert (x2954 x4154))
(assert (= (ite (= x2464 x3264) x3647 (x2115 x3264)) (x1363 x3264)))
(assert (x3207 x4001))
(assert (x3207 x2336))
(assert (x2954 x2048))
(assert (= (=> (= x1390 (< x2786 x1275)) (and (=> (not x1390) x302) (=> x1390 x1982))) x1732))
(assert (x3207 x3127))
(assert (x2954 115792089237316195423570985008687907853269984665640564039457584007913129639680))
(assert (= (x3641 (x3377 26959946667150639794667015087019630673637144422540572481103610249215)) 26959946667150639794667015087019630673637144422540572481103610249215))
(assert (x3207 x4261))
(assert (x3207 x314))
(assert (x3207 x3893))
(assert (= (x1880 x3317) (ite (= x2429 x3317) x2731 (x3392 x3317))))
(assert (x2954 x404))
(assert (x3207 x3153))
(assert (x3207 x2631))
(assert (x3207 x1279))
(assert (=> (< (- x652 1) 10000) (= (x2562 x652) (x3377 x652))))
(assert (= x519 (=> (and (= (x2515 (+ x2194 x1899)) x2762) (= (> x1899 x2762) x4161)) (and (=> x4161 x128) (=> (not x4161) x3221)))))
(assert (x3207 x3733))
(assert (= (x2625 224) (ite (= x3194 224) x2368 (x2043 224))))
(assert (= x2626 (and x3175 x1120)))
(assert (= (ite (and x1630 x465 x4198 x3284 (not x3643) x919) (x1880 x2085) (ite (and x465 x1630 (not x3284) x4198 x919) (x3392 x2085) (ite (and x465 x1630 x919 (not x4198)) (x1668 x2085) (ite (and x919 x1630 (not x465)) (x744 x2085) (x2231 x2085))))) (x396 x2085)))
(assert (= (ite (= x637 x2552) x1658 (x842 x2552)) (x1298 x2552)))
(assert (= (x1197 224) 0))
(assert (x3207 x3149))
(assert (= (x3052 x1606) (ite (and x3423 x483 x3056 x4071 x2509 (not x2859)) (x3436 x1606) (ite (and x3056 (not x483) x2509 x4071 x3423) (x979 x1606) (ite (and (not x3056) x2509 x3423 x4071) (x3898 x1606) (ite (and x3423 (not x2509) x4071) (x1528 x1606) (x1623 x1606)))))))
(assert (x3207 x4013))
(assert (= (x3641 (x3546 x3863 2)) (+ (x3641 x3863) 2)))
(assert (= (ite (= x3093 x2590) x1749 (x3842 x3093)) (x2220 x3093)))
(assert (= (and x1359 (not x4202)) x1840))
(assert (x3207 x1891))
(assert (x3207 x294))
(assert (x3207 x2259))
(assert (= (ite (and x311 x2608 (not x631) x4093 x2270 x581) (x2837 x723) (ite (and x581 (not x2608) x4093 x311 x2270) (x3077 x723) (ite (and x2270 (not x4093) x581 x311) (x1371 x723) (ite (and (not x581) x311 x2270) (x518 x723) (x3794 x723))))) (x3990 x723)))
(assert (= (x3553 x3499) (ite (= x1969 x3499) x2633 (x1967 x3499))))
(assert (= (=> (and (= (x1403 (x2562 274184521717934524641157099916833587240)) x711) (= (x3037 1461501637330902918203684832716283019655932542975 x4220) x2934) (= (> x4195 x711) x891)) (and (=> x891 x3106) (=> (and (= x1328 (and (<= x4195 x43) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x4195 x2774)))) (= (x1403 (x2562 x2934)) x2774) (not x891) (= x43 (x1403 (x2562 274184521717934524641157099916833587240))) (= (= x3538 0) x4146) (or (and (not x1328) (= 0 x3538) (= x3134 0)) (and (= x3947 x3134) (= (- (x1403 (x2562 274184521717934524641157099916833587240)) x4195) x675) (= x3473 (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ (x4285 (x2562 x2934)) x4195))) (= x3538 x895) x3473 (= (- (x2935 (x2562 x2934)) x1113) x3584) (= (< 0 x3947) x3411) (= (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x1113 (x228 (x2562 274184521717934524641157099916833587240)))) x2228) x1328 (= (x2515 (+ (uninterp_mod (x4285 (x2562 x2934)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x4195)) x3407) x2228 (= x1113 (ite (= 0 x3947) x4195 0)) (or (not x3411) (and (= (<= x360 (x4171 (x2562 274184521717934524641157099916833587240))) x908) (= (x4049 (x2562 x2934)) x3980) (= x72 (= (x4171 (x2562 x2934)) x3980)) x3411 x72 (= x360 (x4049 (x2562 274184521717934524641157099916833587240))) x908 (< x895 4294967296)))))) x3744))) x1434))
(assert (= (x2625 192) (ite (= 192 x3194) x2368 (x2043 192))))
(assert (x3207 x2614))
(assert (= (ite (= x3317 x3194) x2368 (x2043 x3317)) (x2625 x3317)))
(assert (= (ite (and x2869 x3621 (not x2111)) (x799 x1465) (x2418 x1465)) (x2708 x1465)))
(assert (= (x2220 192) (ite (= x2590 192) x1749 (x3842 192))))
(assert (x3207 x3230))
(assert (x3207 x2992))
(assert (= (ite (= x3910 x1364) x32 (x1919 x3910)) (x383 x3910)))
(assert (= (ite (and x4071 x3423 (not x2978)) (x3052 x3789) (x3389 x3789)) (x1716 x3789)))
(assert (= (and x3442 x3939) x2002))
(assert (= (x2497 x1463) (ite (= x402 x1463) 0 (x1736 x1463))))
(assert (= (=> (and (= x2760 (> x730 115792089237316195423570985008687907853269984665640564039457584007913129639934)) (= (x3553 x1920) x730) (= (x372 (x2562 274184521717934524641157099916833587240) (x3377 209) 0) x1920) (= (x3402 (- x963 1)) x2633)) (and (=> x2760 x3162) (=> (and (not x2760) (= (x2183 x2732) x368) (= x773 (x3037 115792089237316195423570985007226406215939081747436879206741300988257197096960 x368)) (= x3393 1) (= x2732 (x372 (x2562 x2682) (x3377 208) 0)) (= (x2515 (+ x730 1)) x3648) (= x1088 (x2515 (+ 274184521717934524641157099916833587240 x773)))) x2342))) x479))
(assert (= (x3392 x938) (ite (= x4182 x938) x1682 (x1668 x938))))
(assert (= (x3641 (x2562 x3764)) x3764))
(assert (= (x695 x1541) (ite (and x3779 x617) (ite (and x1060 x2586 (not x3613)) (x2353 x1541) (x3011 x1541)) (x3011 x1541))))
(assert (x3207 x2759))
(assert (x3207 x1410))
(assert (= 0 (x1197 x2085)))
(assert (x188 x3173))
(assert (x3207 x735))
(assert (x3207 x3082))
(assert (= x990 (=> (and x1034 (= x3923 (x3309 (x2562 274184521717934524641157099916833587240))) (= x1034 (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1395 (x2562 x3227)))) (= (= x3227 274184521717934524641157099916833587240) x4130) (= x2105 (x1395 (x2562 x3227)))) (and (=> (not x4130) x2647) (=> x4130 x553)))))
(assert (= (ite (= x2789 x1040) x1703 (x1924 x1040)) (x2396 x1040)))
(assert (= (x2497 x2085) (ite (= x402 x2085) 0 (x1736 x2085))))
(assert (= (=> (= x304 (= 274184521717934524641157099916833587202 x232)) (and (=> (and (= x3314 1889567281) (= x1626 (or (> x4178 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (> 32 x4178) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x4178) true)))) (= x805 50942633119752846454219349998365661925608737367104304655302372697894809501696) (= x94 (x3060 (x2562 274184521717934524641157099916833587202))) (= x4178 (x3402 (- x2867 4))) (not (< x2867 4)) (or (and x1626 (= 0 x177) (= x3001 x3275)) (and (<= 0 x638) (= x177 1) (= 32 x3001) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x638) (= x1079 274184521717934524641157099916833587240) (= x638 (x1864 x4295)) (= x4295 (x372 (x2562 274184521717934524641157099916833587240) (x3377 1) 0)) (not x1626))) x304 (not (= 826074471 x3314)) (= x2867 x1221) (> x94 0) (= 36 x2867) (not (< x3314 826074471))) x2331) (=> (not x304) x1346))) x683))
(assert (= x2207 (=> (and (= (= x1823 x4000) x480) (= x4000 x774)) (and (=> (not x480) x3988) (=> x480 x3680)))))
(assert (x3207 x1796))
(assert (= 0 (x428 x2591)))
(assert (= (ite (and x2541 x3165 (not x92)) (x190 x3300) (x4112 x3300)) (x641 x3300)))
(assert (= (x2115 x3605) (ite (= x3605 (x3377 0)) x3798 (x4026 x3605))))
(assert (= x2250 (and x3743 (not x1303))))
(assert (= (ite (= x930 x960) x24 (x3720 x960)) (x3098 x960)))
(assert (= (ite (= x1105 x4182) x1682 (x1668 x1105)) (x3392 x1105)))
(assert (x3207 x1849))
(assert (= (x1967 x1313) (ite (= x1219 x1313) x3714 (x2369 x1313))))
(assert (= (x3377 1722255204) (x2562 1722255204)))
(assert (= (ite (= x2537 x637) x1658 (x842 x2537)) (x1298 x2537)))
(assert (= (ite (and (not x914) x2270 x311) (x3990 x172) (x448 x172)) (x2288 x172)))
(assert (= (x190 x2104) (ite (and x2649 x2541 x3165 x64 (not x3115) x207) (x2396 x2104) (ite (and x2541 (not x2649) x3165 x207 x64) (x1924 x2104) (ite (and (not x207) x2541 x64 x3165) (x2625 x2104) (ite (and (not x64) x2541 x3165) (x2043 x2104) (x20 x2104)))))))
(assert (= (=> (and (= (< x84 x928) x3616) (= (x2515 (+ x928 x1275)) x84)) (and (=> (not x3616) x2815) (=> x3616 x1982))) x3594))
(assert (x188 x1096))
(assert (x3207 x3053))
(assert (= x1834 (=> (and (= x1171 (= 0 x2477)) (or (and (= x1263 96) (= x3612 x1669) x1171) (and (= x2764 (x3037 115792089237316195423570985008687907853269984665640564039457584007913129639904 x194)) (= x1592 x1669) (= x3612 x1263) (not x1171) (= (x2515 (+ x3304 96)) x4135) (= (x2515 (+ 63 x2477)) x194) (= x1592 (x2515 (+ x3612 x2764)))))) x4021)))
(assert (x3207 x3450))
(assert (= (=> (and (= x1630 (< 0 x3296)) (= 0 x3518) (= x867 (x1601 x4010)) (= (x2515 (+ x4132 x2614)) x1540) (= (x3037 115792089237316195423570985007226406215939081747436879206741300988257197096960 x867) x4132) (= x1568 (x2515 (+ x1915 1))) (= x2614 x3435) (= x3296 (x3060 (x2562 x3777))) (= 0 x4107) (= x4010 (x372 (x2562 x4056) (x3377 208) 0)) (= (x3037 1461501637330902918203684832716283019655932542975 x570) x3777) (= (x3037 1461501637330902918203684832716283019655932542975 x570) x3435)) (and (=> (and (= x1030 x3126) (not x1630) (= 1 x2338)) x3805) (=> (and (= x1681 x1531) (= x1681 (x2515 (+ 36 x402))) (or (and (= x795 (x2515 (+ x3522 x4053))) x2339) (not x2339)) (= x422 (x2515 (+ 132 x3126))) (= x465 (< 0 x3522)) (= x3375 (x2515 (+ 32 x1531))) (= x2995 (x2515 (+ x3375 64))) x1630 (= x2339 (< x3522 x3206)) (= x3522 (x923 x402)) (= x4258 (x2515 (+ x1531 64))) (= x797 (x3037 1461501637330902918203684832716283019655932542975 x1908)) (= x4053 (x2515 (+ 160 x1681))) (= (x3037 1461501637330902918203684832716283019655932542975 x570) x167) (= x1943 (x2515 (+ 32 x402))) (or (and x465 (or (and (= x3206 32) (not x4198)) (and (= x4182 (x2515 (+ 64 x422))) (= (> x3522 64) x3284) (= x1193 (x2515 (+ 64 x402))) x4198 (or (and (= (> x3522 96) x3643) x3284 (= (x3392 x1463) x2731) (= x1463 (x2515 (+ x402 96))) (= (x2515 (+ x422 96)) x2429) (or (and (not x3643) (= 96 x3206)) (and (= x2289 (x2515 (+ 128 x422))) (= x3206 128) (= (x2515 (+ x402 128)) x2482) (= x1166 (> x3522 128)) (= x3089 (x1880 x2482)) x3643 (not x1166)))) (and (= 64 x3206) (not x3284))) (= x1682 (x1668 x1193)))) (= (< 32 x3522) x4198) (= x1943 x3300) (= x1414 x4053) (= (x744 x3300) x4020)) (and (not x465) (= x3206 0)))) x2936))) x700))
(assert (= (ite (= x2590 x3857) x1749 (x3842 x3857)) (x2220 x3857)))
(assert (=> (> (+ 10000 1) x2202) (= (x3377 x2202) (x2562 x2202))))
(assert (= (x3641 (x2562 x1793)) x1793))
(assert (x1589 x3512 x3909 x864 x2522))
(assert (= (ite (= x3469 x817) x4144 (x2425 x817)) (x531 x817)))
(assert (= (x2369 (x3377 0)) x2794))
(assert (= (x2115 x626) (ite (= (x3377 0) x626) x3798 (x4026 x626))))
(assert (= 0 (x1881 (x3816 x784 x2044 x3251 x106 x652 x2118 x921 x2221 x3417))))
(assert (= (ite (and x2885 x761 x3621 (not x4082) x4248 x2869) (x596 x1606) (ite (and x2869 x4248 (not x2885) x761 x3621) (x3760 x1606) (ite (and (not x4248) x761 x3621 x2869) (x4223 x1606) (ite (and x3621 (not x761) x2869) (x2220 x1606) (x530 x1606))))) (x799 x1606)))
(assert (= (x1924 x3118) (ite (= x3118 x2977) x4123 (x2625 x3118))))
(assert (x3207 x430))
(assert (= (x799 x3570) (ite (and x761 x4248 x3621 x2869 x2885 (not x4082)) (x596 x3570) (ite (and x761 (not x2885) x4248 x2869 x3621) (x3760 x3570) (ite (and x2869 (not x4248) x3621 x761) (x4223 x3570) (ite (and x2869 x3621 (not x761)) (x2220 x3570) (x530 x3570)))))))
(assert (= x1138 (and x3369 (not x384))))
(assert (= (ite (= x3326 x1474) x3497 (x4223 x1474)) (x3760 x1474)))
(assert (x3207 x1079))
(assert (x3207 x3678))
(assert (x3207 x1527))
(assert (x188 x3848))
(assert (x2579 x36 x777 x431 x2170))
(assert (x3207 x3761))
(assert (x3207 x3515))
(assert (= (x744 x938) (ite (= x938 x422) x3522 (x923 x938))))
(assert (= (ite (= x2894 x1219) x3714 (x2369 x2894)) (x1967 x2894)))
(assert (= (x3641 (x3377 76450787359836037641860180984291677749980919077056822294353438043884394381312)) 76450787359836037641860180984291677749980919077056822294353438043884394381312))
(assert (= (x549 x3300) (ite (= x3300 x854) 98474297345890754025501882143967591664980152141971839855651084132735363579904 (x1772 x3300))))
(assert (x3207 x2811))
(assert (= (=> (and (= x2576 (x3060 (x2562 x3580))) (= x3442 (> x2576 0)) (= (x3037 1461501637330902918203684832716283019655932542975 x2599) x3580)) (and (=> (not x3442) x3984) (=> x3442 x3479))) x1052))
(assert (= (x1924 x2413) (ite (= x2977 x2413) x4123 (x2625 x2413))))
(assert (x3207 x942))
(assert (= (=> (and (= x2015 (x3037 115792089210356248756420345214020892766250353992003419616917011526809519390720 x308)) (= x308 (x3100 x802)) (= x943 x802) (= x1785 (= x2015 x308))) (and (=> (and (= (= 9518847204935358166548570266051330015907116135037852959641967396525866745856 x3675) x790) (= (ite x790 1 0) x2953) (= x1062 x3324) x1785 (= x3675 (x3037 115792089210356248756420345214020892766250353992003419616917011526809519390720 x308))) x502) (=> (not x1785) x3106))) x1243))
(assert (= (x3641 (x3377 50942633119752846454219349998365661925608737367104304655302372697894809501696)) 50942633119752846454219349998365661925608737367104304655302372697894809501696))
(assert (= (ite (and x296 (not x1914) x650) (x116 x2465) (x2055 x2465)) (x858 x2465)))
(assert (x2954 x1805))
(assert (x3207 x2374))
(assert (x3825 x3114 x2045))
(assert (= (x2837 x802) (ite (= x591 x802) x2746 (x3077 x802))))
(assert (x3207 x4044))
(assert (x3207 x1612))
(assert (x3207 x1884))
(assert (= x123 (and x2803 (not x35))))
(assert (x3207 x84))
(assert (= x925 (and (not x1355) x141)))
(assert (x3207 x395))
(assert (= (ite (= x3357 x1263) x3348 (x3760 x1263)) (x596 x1263)))
(assert (x3207 x2327))
(assert (x3207 x1545))
(assert (x3207 x178))
(assert (= (ite (and x311 (not x914) x2270) (x3990 x723) (x448 x723)) (x2288 x723)))
(assert (= (x2369 x714) (ite (= x714 (x3377 0)) x2794 (x3228 x714))))
(assert (= (x1429 x3093) (ite (and x141 x3783 (not x1355)) (x239 x3093) (x3098 x3093))))
(assert (x657 x1997 x3964))
(assert (= (ite (= x2464 x4010) x3647 (x2115 x4010)) (x1363 x4010)))
(assert (x3207 x144))
(assert (= x1418 x108))
(assert (= (x2564 x4282) (ite (= x3341 x4282) x84 (x3754 x4282))))
(assert (x2954 x2191))
(assert (x3207 x1378))
(assert (= (ite (= x402 x209) 0 (x1736 x209)) (x2497 x209)))
(assert (x3207 x2460))
(assert (= (ite (= x1263 x1190) x419 (x1528 x1263)) (x3898 x1263)))
(assert (x3207 x1192))
(assert (= (and x1731 (not x1832)) x2079))
(assert (x188 x1248))
(assert (x3207 x493))
(assert (x2954 x544))
(assert (x3207 x3675))
(assert (x2954 x2307))
(assert (= (ite (= x2482 x402) 0 (x1736 x2482)) (x2497 x2482)))
(assert (= (=> (and (= x1094 (< x2890 x32)) (= x2890 (x2108 x2730)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2890) (<= 0 x2890) (= (x372 (x2562 x3173) (x3377 1) 0) x2730) (= x2618 x1284)) (and (=> (not x1094) x408) (=> x1094 x2210))) x2490))
(assert (= (ite (= x4213 x2789) x1703 (x1924 x4213)) (x2396 x4213)))
(assert (= (x1716 x2010) (ite (and x3423 x4071 (not x2978)) (x3052 x2010) (x3389 x2010))))
(assert (= (x3641 (x2562 x2720)) x2720))
(assert (x3207 x3194))
(assert (x3207 x3630))
(assert (x2954 x841))
(assert (x3207 x2849))
(assert (x3207 x1284))
(assert (x3207 x2939))
(assert (= (ite (and (not x92) x3165 x2541) (x190 x1907) (x4112 x1907)) (x641 x1907)))
(assert (x3207 x1529))
(assert (= (x2288 x802) (ite (and x2270 (not x914) x311) (x3990 x802) (x448 x802))))
(assert (= (or (and x1715 x718) (and x3576 x304) (and x220 x3363)) x1420))
(assert (= (ite (and x617 x3779) (x1039 x3910) (x2497 x3910)) (x257 x3910)))
(assert (= (x3161 x3440) (ite (= x4010 x3440) x1540 (x1601 x3440))))
(assert (x3207 x3445))
(assert (= (x2425 x4213) (ite (= x4213 x1406) x4102 (x3278 x4213))))
(assert (x3207 x980))
(assert (= (ite (= x817 x3537) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x2410 x817)) (x1950 x817)))
(assert (= (x270 x374) (ite (and x2803 x3657 (not x35)) (x1688 x374) (x383 x374))))
(assert (= (x394 x2126) (ite (= x2778 x2126) x572 (x2058 x2126))))
(assert (= 0 (x428 x417)))
(assert (= (ite (and x3779 x617) (x1039 x783) (x2497 x783)) (x257 x783)))
(assert (x3207 x2523))
(assert (= (=> (and (= (= x2583 x3321) x3447) (= x2305 x3321)) (and (=> (not x3447) x31) (=> x3447 x2363))) x564))
(assert (= (x1751 x2785) (ite (= x154 x2785) 0 (x720 x2785))))
(assert (x3207 x2264))
(assert (x201 x308 x4268 x3819 x3003))
(assert (x3207 x1581))
(assert (x3160 x2933 x4012 x907 x2049))
(assert (x3207 x2485))
(assert (= x1004 (=> (and (= x4163 x825) (= x3931 x195)) x4175)))
(assert (x2750 x457 x3237))
(assert (= (=> (and (= (x2515 (+ x4013 x2349)) x1294) (= x526 (< x1294 x2349))) (and (=> x526 x107) (=> (and (not x526) (= x359 1) (= 32 x1956) (= x2336 x493)) x3181))) x629))
(assert (x2954 x3865))
(assert (x3207 x2105))
(assert (x657 x2941 x2514))
(assert (=> (< (- x3580 1) 10000) (= (x2562 x3580) (x3377 x3580))))
(assert (= x279 (and (not x1390) x3095)))
(assert (x3207 x4092))
(assert (= (ite (and x1785 x399) (x3100 x2345) (x1728 x2345)) (x2001 x2345)))
(assert (= (=> (= x39 (= 0 x286)) (and (=> x39 x1614) (=> (not x39) x1032))) x1374))
(assert (= (ite (= x723 x4143) x4131 (x2220 x723)) (x4223 x723)))
(assert (x3207 x938))
(assert (= (ite (and x919 x1630 (not x2339)) (x396 x1105) (x3992 x1105)) (x2125 x1105)))
(assert (= x911 (and (not x2163) x3180)))
(assert (x3207 x1225))
(assert (x3207 x1709))
(assert (x3207 x1276))
(assert (= (ite (= x2591 x1489) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x2030 x2591)) (x1267 x2591)))
(assert (x3207 x1477))
(assert (= (ite (= x1594 (x3377 0)) x3798 (x4026 x1594)) (x2115 x1594)))
(assert (= (ite (= x591 x172) x2746 (x3077 x172)) (x2837 x172)))
(assert (= (x2708 x2591) (ite (and x3621 (not x2111) x2869) (x799 x2591) (x2418 x2591))))
(assert (=> (< (- x1044 1) 10000) (= (x3377 x1044) (x2562 x1044))))
(assert (= (x596 x2591) (ite (= x2591 x3357) x3348 (x3760 x2591))))
(assert (= (and x3200 (not x1075)) x3603))
(assert (= x894 (and x2314 x1870)))
(assert (= x196 (=> (= (< x1534 x4013) x4202) (and (=> (not x4202) x3944) (=> x4202 x107)))))
(assert (x3207 x3505))
(assert (x3207 x2014))
(assert (= (ite (= x1672 x67) x1180 (x1363 x67)) (x3403 x67)))
(assert (= (ite (and (not x3139) x2667) (x1637 (x2562 x474)) (ite x1109 (ite x2551 (x4118 (x2562 x474)) (x3040 (x2562 x474))) (x3040 (x2562 x474)))) (x1029 (x2562 x474))))
(assert (x3207 x809))
(assert (= (x1321 x2281) (ite (= x2281 x2091) x2742 (x975 x2281))))
(assert (x3207 x2965))
(assert (= x3578 (=> (and (= x2053 x1677) (= x1831 x537)) x541)))
(assert (x3825 x3113 x3856))
(assert (= x541 (=> (and (= (- (x528 (x2562 x474)) x3888) x2544) x945 (= x945 (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x3888 (x3320 (x2562 274184521717934524641157099916833587240))))) (= x1453 x537) (= 0 x3888) (= x716 x2053)) x1423)))
(assert (x3207 x1848))
(assert (x3207 x1606))
(assert (= (x2125 x2085) (ite (and (not x2339) x919 x1630) (x396 x2085) (x3992 x2085))))
(assert (x3207 x2010))
(assert (= (x518 x3044) (ite (= x1678 x3044) x3841 (x2757 x3044))))
(assert (x3207 x745))
(assert (= (x3377 9518847204935358166548570266051330015907116135037852959641967396525866745856) (x2562 9518847204935358166548570266051330015907116135037852959641967396525866745856)))
(assert (= x3861 (=> (and (= x58 x2454) (= x2728 x1928) (= (x3037 1461501637330902918203684832716283019655932542975 x159) x1901) (= x1445 x3099) (= x1472 x3251) (= x3330 (= x159 x1901))) (and (=> x3330 x452) (=> (not x3330) x1614)))))
(assert (= (ite (= x3605 x2464) x3647 (x2115 x3605)) (x1363 x3605)))
(assert (x3207 x2038))
(assert (x188 x1435))
(assert (= x2525 (=> (= (= x1453 0) x2304) (and (=> x2304 x1614) (=> (not x2304) x3787)))))
(assert (= (ite (= x154 x2990) 0 (x720 x2990)) (x1751 x2990)))
(assert (x3207 x1871))
(assert (x3207 x3612))
(assert (x3207 x3113))
(assert (x3207 x2833))
(assert (x3207 x3947))
(assert (x3207 x474))
(assert (x3207 x821))
(assert (= x3933 (=> (and (= (= 10019309979067222254582373821846632475949454479833780424560900009889672200192 x3031) x2639) (= x3031 (x3037 115792089210356248756420345214020892766250353992003419616917011526809519390720 x3125))) (and (=> (not x2639) x1614) (=> (and (= x2666 x2616) x2639) x1308)))))
(assert (= x1137 (=> (and (= x1288 (x3037 1461501637330902918203684832716283019655932542975 x3995)) (= (x372 (x2562 x2202) (x3377 208) 0) x229) (= (= x1288 0) x247) (= (x3161 x229) x3995)) (and (=> x247 x1360) (=> (not x247) x1020)))))
(assert (= (ite (= x854 x1193) 98474297345890754025501882143967591664980152141971839855651084132735363579904 (x1772 x1193)) (x549 x1193)))
(assert (= (x3818 x3317) (ite (and x2947 x559 x2701 (not x1018) x791 x2002) (x531 x3317) (ite (and x791 x2701 (not x559) x2002 x2947) (x2425 x3317) (ite (and x2002 x2701 x2947 (not x791)) (x3278 x3317) (ite (and x2002 (not x2701) x2947) (x3303 x3317) (x1994 x3317)))))))
(assert (= (=> (= (= 0 x44) x2424) (and (=> (not x2424) x3908) (=> x2424 x3106))) x4021))
(assert (= (x3641 (x2562 x871)) x871))
(assert (= (ite (= x2341 x3357) x3348 (x3760 x2341)) (x596 x2341)))
(assert (= (ite (= (x3377 0) x3) x2794 (x3228 x3)) (x2369 x3)))
(assert (x3207 x2766))
(assert (=> (< (- x3448 1) 10000) (= (x3377 x3448) (x2562 x3448))))
(assert (x3207 x3916))
(assert (x3207 x535))
(assert (= x497 (=> (= x698 (= 0 x3094)) (and (=> (not x698) x1131) (=> x698 x3106)))))
(assert (= x1047 (=> (and (= x1130 x1951) (= x2523 0)) x1240)))
(assert (x3207 x2391))
(assert (= (ite (= x3357 x1548) x3348 (x3760 x1548)) (x596 x1548)))
(assert (= (x2562 10019309979067222254582373821846632475949454479833780424560900009889672200192) (x3377 10019309979067222254582373821846632475949454479833780424560900009889672200192)))
(assert (= (x2043 x209) (ite (= x209 x2474) x199 (x362 x209))))
(assert (= (x596 x4230) (ite (= x4230 x3357) x3348 (x3760 x4230))))
(assert (= (and x2428 (not x4084)) x2092))
(assert (= (x3641 (x2562 x4056)) x4056))
(assert (x3207 x461))
(assert (x3207 x1822))
(assert (x3207 x1746))
(assert (= (x744 x3300) (ite (= x422 x3300) x3522 (x923 x3300))))
(assert (x3207 x1136))
(assert (= (and x1630 x919) x1060))
(assert (x2954 26959946667150639793205513449688727755433459589824289461447677706240))
(assert (= (x799 x1474) (ite (and (not x4082) x2885 x3621 x2869 x4248 x761) (x596 x1474) (ite (and (not x2885) x4248 x3621 x761 x2869) (x3760 x1474) (ite (and x761 x2869 x3621 (not x4248)) (x4223 x1474) (ite (and (not x761) x2869 x3621) (x2220 x1474) (x530 x1474)))))))
(assert (x3207 x2917))
(assert (= (x1197 x10) 0))
(assert (x2579 x2513 x3917 x1031 x3656))
(assert (x3207 x89))
(assert (x3207 x984))
(assert (= (ite (= x1495 x3691) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x1274 x1495)) (x3303 x1495)))
(assert (= x2011 (=> (= (> x1017 x2575) x2593) (and (=> (and (= (x372 (x2562 274184521717934524641157099916833587240) x2898 0) x1760) (= x2147 (x3402 (- x2575 x1017))) (= x2898 (x372 (x2562 x1399) (x3377 2) 0)) (= 274184521717934524641157099916833587240 x1931) (not x2593) (= 1 x3483) (= x3852 x212)) x1645) (=> x2593 x1798)))))
(assert (x3207 x724))
(assert (x3207 x4143))
(assert (x3207 x3774))
(assert (x3207 x594))
(assert (= (x1298 x209) (ite (= x209 x637) x1658 (x842 x209))))
(assert (= (ite (and x650 x296 (not x1914)) (x116 x2785) (x2055 x2785)) (x858 x2785)))
(assert (x3207 x1325))
(assert (x3207 x248))
(assert (= (x896 x2313) (ite (= x3391 x2313) x1822 (x3766 x2313))))
(assert (x3207 x2312))
(assert (= (x223 x999) (ite (= x3801 x999) x1342 (x1156 x999))))
(assert (= x1292 (and x1249 x3751)))
(assert (= (x799 x2799) (ite (and x4248 x761 (not x4082) x2885 x2869 x3621) (x596 x2799) (ite (and x2869 x3621 x761 x4248 (not x2885)) (x3760 x2799) (ite (and x3621 (not x4248) x2869 x761) (x4223 x2799) (ite (and x2869 (not x761) x3621) (x2220 x2799) (x530 x2799)))))))
(assert (x3207 x1599))
(assert (x3207 x2823))
(assert (x2954 x308))
(assert (= (x2637 x209) (ite (and x1955 (not x427) x3892) (x1922 x209) (x549 x209))))
(assert (= (and (not x427) x1955) x1117))
(assert (= (x1338 x714) (ite (= x682 x714) x1845 (x1488 x714))))
(assert (x3207 x2686))
(assert (x3207 x3545))
(assert (= (=> (and (= x444 x3994) (= (not x2476) x3868) (= x4238 (not x252)) (= x1376 x4238) (= x4287 x252) (= x2476 (and x444 x1376))) x3868) x3271))
(assert (= (ite (= 256 x2789) x1703 (x1924 256)) (x2396 256)))
(assert (= (ite (and x4248 x761 x3621 (not x4082) x2869 x2885) (x596 x3178) (ite (and (not x2885) x2869 x4248 x761 x3621) (x3760 x3178) (ite (and x761 x3621 x2869 (not x4248)) (x4223 x3178) (ite (and x3621 x2869 (not x761)) (x2220 x3178) (x530 x3178))))) (x799 x3178)))
(assert (x188 x2761))
(assert (= (=> (and (= x521 x878) (= (x3037 1461501637330902918203684832716283019655932542975 x544) x1510) (= x544 (x1338 x714)) (= 274184521717934524641157099916833587240 x739) (= (x372 (x2562 x878) (x3377 208) 0) x714) (= x2838 274184521717934524641157099916833587240) (= x347 (not (= x1510 0)))) (and (=> (not x347) x2260) (=> x347 x3799))) x2957))
(assert (= (x896 x1541) (ite (= x3391 x1541) x1822 (x3766 x1541))))
(assert (x188 x2317))
(assert (= (x2206 x1983) (ite (= x1983 x2302) x2849 (x3901 x1983))))
(assert (x3207 x1184))
(assert (x3207 x3092))
(assert (x2020 x1613 x933 x4286 x4080))
(assert (= (and (not x2280) x398) x655))
(assert (= (=> (= x266 (= x177 0)) (and (=> x266 x3106) (=> (not x266) x1584))) x2331))
(assert (= (ite (and (not x1914) x296 x650) (x116 x723) (x2055 x723)) (x858 x723)))
(assert (x2954 x3782))
(assert (= (x1728 x802) (ite (= x802 x1024) 0 (x1337 x802))))
(assert (= (x979 x723) (ite (= x723 x4041) x459 (x3898 x723))))
(assert (= (=> (and (= x3858 (x3309 (x2562 274184521717934524641157099916833587240))) (= x3252 x2420) (= x2089 (and (<= 0 x3858) (< x2912 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (x3309 (x2562 x3227)) x2912)) (and (=> (and (= 0 x2477) (= x44 0) (not x2089)) x1834) (=> x2089 x990))) x2854))
(assert (= (x396 x783) (ite (and (not x3643) x4198 x3284 x465 x919 x1630) (x1880 x783) (ite (and x465 x4198 (not x3284) x1630 x919) (x3392 x783) (ite (and x465 (not x4198) x1630 x919) (x1668 x783) (ite (and x919 x1630 (not x465)) (x744 x783) (x2231 x783)))))))
(assert (= (x396 x2537) (ite (and x3284 (not x3643) x465 x919 x1630 x4198) (x1880 x2537) (ite (and x465 x4198 x919 (not x3284) x1630) (x3392 x2537) (ite (and x465 (not x4198) x919 x1630) (x1668 x2537) (ite (and x919 (not x465) x1630) (x744 x2537) (x2231 x2537)))))))
(assert (x1257 x4154 x2408))
(assert (= (x3641 (x2562 x1469)) x1469))
(assert (= (or (and x2602 x2162) (and x812 x3168)) x1010))
(assert (= 0 (x2265 (- x3789 x4135))))
(assert (x3207 x3134))
(assert (= (x1363 x3440) (ite (= x3440 x2464) x3647 (x2115 x3440))))
(assert (= (ite (= x2010 x4041) x459 (x3898 x2010)) (x979 x2010)))
(assert (= (x1321 x3807) (ite (= x3807 x2091) x2742 (x975 x3807))))
(assert (= (+ 1 (x3641 x2466)) (x3641 (x3546 x2466 1))))
(assert (= (ite (= x3510 x682) x1845 (x1488 x3510)) (x1338 x3510)))
(assert (x3207 x2221))
(assert (x3207 x1548))
(assert (= (ite (= x2402 x4041) x459 (x3898 x2402)) (x979 x2402)))
(assert (= x2697 (=> (and (= (= 0 x604) x1507) (= x1444 (x372 (x2562 x878) (x3377 208) 0)) (= x604 (x3037 1461501637330902918203684832716283019655932542975 x1459)) (= (x1338 x1444) x1459)) (and (=> (not x1507) x3829) (=> x1507 x2260)))))
(assert (x3207 x2000))
(assert (= (x2708 x2341) (ite (and x2869 x3621 (not x2111)) (x799 x2341) (x2418 x2341))))
(assert (= (and x2415 x3924) x2914))
(assert (= x3023 (and (not x2114) x345)))
(assert (= x3829 (=> (= x2415 (= x3635 x604)) (and (=> x2415 x2906) (=> (not x2415) x2260)))))
(assert (= (x2043 160) (ite (= 160 x2474) x199 (x362 160))))
(assert (= (ite (= x2789 x3824) x1703 (x1924 x3824)) (x2396 x3824)))
(assert (x3207 x2618))
(assert (= x3104 (and x1138 (not x891))))
(assert (x3207 x1181))
(assert (x3207 x2827))
(assert (= (x1814 x4104) (ite (= x3069 x4104) x2454 (x3672 x4104))))
(assert (x3207 x569))
(assert (x3207 x121))
(assert (x188 x3808))
(assert (x3207 x1244))
(assert (x3207 x1017))
(assert (x3207 x3137))
(assert (x3207 x548))
(assert (x3207 x1490))
(assert (x3207 x3319))
(assert (= (x858 x1788) (ite (and (not x1914) x296 x650) (x116 x1788) (x2055 x1788))))
(assert (x3207 x182))
(assert (= (x2220 x3085) (ite (= x3085 x2590) x1749 (x3842 x3085))))
(assert (x3207 x3704))
(assert (x3207 x291))
(assert (= x107 (=> (and (= x1956 x2704) (= 0 x359)) x3181)))
(assert (= (ite (= x1193 x3343) 0 (x1144 x1193)) (x3492 x1193)))
(assert (= (ite (= x1548 x3308) x307 (x2245 x1548)) (x440 x1548)))
(assert (= (and x3817 (not x1164)) x3481))
(assert (x3207 x4221))
(assert (= (and x771 x3447) x55))
(assert (= x652 (x3641 (x2562 x652))))
(assert (= x3908 (=> (and (= (x148 x1263) x3972) (= (> x3972 0) x681)) (and (=> (not x681) x2386) (=> x681 x2717)))))
(assert (= (x4223 x2341) (ite (= x2341 x4143) x4131 (x2220 x2341))))
(assert (x3207 x1318))
(assert (= (x2562 455944412) (x3377 455944412)))
(assert (x3207 x209))
(assert (x3207 x4205))
(assert (x3207 x4241))
(assert (x2954 x2078))
(assert (= x1216 (x3641 (x2562 x1216))))
(assert (= (x858 x999) (ite (and x650 x296 (not x1914)) (x116 x999) (x2055 x999))))
(assert (x3207 x3020))
(assert (x2954 x3710))
(assert (= (x979 x2785) (ite (= x4041 x2785) x459 (x3898 x2785))))
(assert (= (=> (and (= x1726 0) (= (x1363 x1888) x1022) (= x1616 (x3037 115792089237316195423570985007226406215939081747436879206741300988257197096960 x947)) (= (= x757 0) x1833) (= (x2115 x2464) x947) (= (x372 (x2562 x1044) (x3377 210) 0) x2464) (= x757 (x3037 1461501637330902918203684832716283019655932542975 x1022)) (= x3647 x1616) (= (x372 (x2562 x1044) (x3377 208) 0) x1888)) (and (=> (not x1833) x3993) (=> x1833 x2903))) x331))
(assert (x3207 x951))
(assert (x3207 x3998))
(assert (= (ite (= x2450 x4010) x1540 (x1601 x2450)) (x3161 x2450)))
(assert (= (x3278 x3433) (ite (= x3433 x4271) x3187 (x3303 x3433))))
(assert (= x853 (and x1904 (not x4161))))
(assert (= (x3760 256) (ite (= x3326 256) x3497 (x4223 256))))
(assert (= (x2043 x3433) (ite (= x2474 x3433) x199 (x362 x3433))))
(assert (x3207 x122))
(assert (x3207 x44))
(assert (x3207 x3286))
(assert (x2954 x3229))
(assert (x188 x3362))
(assert (= x1946 (=> (and (= (x3402 (- x4019 4)) x3520) (= x1957 x2583) (= x1566 (x3060 (x2562 274184521717934524641157099916833587206))) (not (= x3437 157198259)) (= (or (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3520) true) (> 96 x3520)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3520)) x3241) (not (= x3437 404098525)) (= x224 x24) (not (= 117300739 x3437)) (< 0 x1566) (= x3437 599290589) (= x3151 16156842317565293874272834530371880720966471053262404558597773956279093428224) (= x4019 x2420) (= x4019 100) (< x3437 826074471) (not (< x4019 4))) (and (=> (not x3241) x1223) (=> x3241 x1036)))))
(assert (x627 x3996 x1718 x832 x3311))
(assert (=> (< (- x3227 1) 10000) (= (x2562 x3227) (x3377 x3227))))
(assert (x3207 x24))
(assert (x3207 x995))
(assert (x3207 x2454))
(assert (x3207 x203))
(assert (= (x2001 x1788) (ite (and x1785 x399) (x3100 x1788) (x1728 x1788))))
(assert (x3207 x3163))
(assert (= (ite (and x3779 x617) (x1039 x3317) (x2497 x3317)) (x257 x3317)))
(assert (= (x3377 26959946667150639794667015087019630673637144422540572481103610249215) (x2562 26959946667150639794667015087019630673637144422540572481103610249215)))
(assert (= (ite (= x1844 x1606) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x3826 x1606)) (x1528 x1606)))
(assert (= (x2396 x3118) (ite (= x2789 x3118) x1703 (x1924 x3118))))
(assert (= true x1518))
(assert (= (x1924 x1193) (ite (= x2977 x1193) x4123 (x2625 x1193))))
(assert (=> (> (+ 10000 1) x1553) (= (x3377 x1553) (x2562 x1553))))
(assert (x3207 x1737))
(assert (x3207 x3083))
(assert (= (ite (= x1463 x637) x1658 (x842 x1463)) (x1298 x1463)))
(assert (= x3727 (=> (and (= (= x200 10019309979067222254582373821846632475949454479833780424560900009889672200192) x3235) (= (x3037 115792089210356248756420345214020892766250353992003419616917011526809519390720 x3782) x200)) (and (=> (not x3235) x3106) (=> (and (= x1764 x814) x3235) x917)))))
(assert (= (x126 x3044) (ite (= x3044 x1228) x3067 (x1442 x3044))))
(assert (= (ite (= (x3377 0) x682) x2794 (x3228 x682)) (x2369 x682)))
(assert (= (x549 x1105) (ite (= x854 x1105) 98474297345890754025501882143967591664980152141971839855651084132735363579904 (x1772 x1105))))
(assert (= (x1501 x999) (ite x860 (ite x3921 (x1517 x999) (x2745 x999)) (x900 x999))))
(assert (=> (< (- x139 1) 10000) (= (x3377 x139) (x2562 x139))))
(assert (=> (< (- x2761 1) 10000) (= (x3377 x2761) (x2562 x2761))))
(assert (= (x549 x3317) (ite (= x854 x3317) 98474297345890754025501882143967591664980152141971839855651084132735363579904 (x1772 x3317))))
(assert (= (x3641 (x3377 115792089237316195423570985008687907853269984665640564039457584007913129639680)) 115792089237316195423570985008687907853269984665640564039457584007913129639680))
(assert (x3207 x3244))
(assert (= (x2708 x960) (ite (and x3621 (not x2111) x2869) (x799 x960) (x2418 x960))))
(assert (= x1838 (=> (and (= (x2515 (+ x2634 128)) x3127) (= x2563 (x3060 (x2562 x3515))) (= (x2515 (+ x4192 32)) x1812) (= (x1977 x3789) x4154) (= (x3037 1461501637330902918203684832716283019655932542975 x4220) x3401) (= x2991 (x3037 26959946667150639794667015087019630673637144422540572481103610249215 x4154)) (= (x3037 1461501637330902918203684832716283019655932542975 x3478) x3515) (= x3822 (x3402 (- x727 32))) (= x2634 (x2515 (+ 36 x615))) (= x1790 (x2515 (+ x2991 76450787359836037641860180984291677749980919077056822294353438043884394381312))) (= x4192 x2634) (= x144 0) (= x1244 (x2515 (+ x615 100))) (= (> x2563 0) x1777) (= (x3402 (- x1244 x615)) x727) (= (x2515 (+ x2634 96)) x1489) (= x3789 (x2515 (+ 32 x615)))) (and (=> (and (= x2987 (> x3480 x3290)) (= (x1267 x615) x3290) x1777 (= (< 0 x3290) x956) (or (and (= x3480 0) (not x956)) (and (or (and (= 32 x3480) (not x1511)) (and (= (x2515 (+ x1244 96)) x3801) (= (x2515 (+ x615 64)) x1606) x1511 (= x4252 (> x3290 64)) (or (and (= x3480 64) (not x4252)) (and (= x554 (> x3290 96)) x4252 (= x166 (x223 x3093)) (or (and (not x554) (= x3480 96)) (and (= x723 (x2515 (+ 128 x615))) (= (< 128 x3290) x280) (not x280) x554 (= (x1778 x723) x3668) (= x3480 128) (= (x2515 (+ 160 x1244)) x2939))) (= (x2515 (+ 128 x1244)) x1966) (= x3093 (x2515 (+ 96 x615))))) (= (x1156 x1606) x1342))) (= x2402 x3789) (= x2451 x3127) x956 (= (< 32 x3290) x1511) (= x1890 (x1267 x2402)))) (or (not x2987) (and (= x1427 (x2515 (+ x3127 x3290))) x2987))) x3394) (=> (not x1777) x3106)))))
(assert (= (x1950 x3317) (ite (= x3317 x3537) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x2410 x3317))))
(assert (x3207 x3480))
(assert (= (or (and x1810 (not x3598)) (and (not x1909) x3663)) x2209))
(assert (= (x3309 (x2562 274184521717934524641157099916833587240)) (ite (and x1785 x399) (ite (and x1101 x3424 (not x4060)) (x1696 (x2562 274184521717934524641157099916833587240)) (x2675 (x2562 274184521717934524641157099916833587240))) (x2675 (x2562 274184521717934524641157099916833587240)))))
(assert (= (ite (and x3779 x617) (ite (and x1060 (not x3613) x2586) (x517 (x2562 x3808)) (x2654 (x2562 x3808))) (x2654 (x2562 x3808))) (x3040 (x2562 x3808))))
(assert (= (=> (and (= x1835 (ite (> x522 x1925) 1 0)) (= (uninterp_mod (* x3251 x2728) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x1290) (= x1925 (- (/ 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1290) (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1290))) (= x576 (= x3062 0)) (= x3146 (= 0 x1290)) (= (x3037 x3710 x1835) x3062) (= (ite (not x3146) 1 0) x3710)) (and (=> x576 x598) (=> (not x576) x1614))) x210))
(assert (= (ite (= x209 x854) 98474297345890754025501882143967591664980152141971839855651084132735363579904 (x1772 x209)) (x549 x209)))
(assert (= (ite (= x999 x930) x24 (x3720 x999)) (x3098 x999)))
(assert (x3207 x1266))
(assert (= x878 (x3641 (x2562 x878))))
(assert (= x17 (=> (and (= x1710 x1086) (= (x1858 x1788) x2800) (= (x1858 x2785) x4242) (= x3382 (x3037 115792089237316195423570985007226406215939081747436879206741300988257197096960 x3053)) (= (uninterp_mod (* x4111 1461501637330902918203684832716283019655932542976) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x3620) (= x2297 x1474) (= (x1021 x3963) x4066) (= x2188 x3968) (= x1392 (x3037 115792089237316195423570985007226406215939081747436879206741300988257197096960 x579)) (= x2188 (x3037 1461501637330902918203684832716283019655932542975 x687)) (= x2026 (x3546 x1086 1)) (= (x3037 115792089237316195423570984636004990333889740523700931696805413995650331181055 x4066) x3735) (= x1944 (x3037 115792089210356248756420345215482394403581256910207104449633294546465451933695 x1613)) (= x4270 (x2515 (+ x3968 x3382))) (= (x3546 x1086 2) x4005) (= (x3228 (x3377 0)) x2069) (= x3137 (x3037 1461501637330902918203684832716283019655932542975 x1997)) (= x3784 (x1858 x3487)) (= (x3546 x740 2) x3963) (= (x3546 x2026 2) x3863) (= x2517 (x1858 x3178)) (= x3541 x1884) (= (x1858 x3857) x3897) (= x4111 (x3037 18446744073709551615 x3897)) (= x2743 (x2515 (+ x4031 x1582))) (= x2823 (x110 x4129)) (= (x3697 (x3377 0)) x513) (= x4129 (x3546 x3863 2)) (= (x3037 1461501637330902918203684832716283019655932542975 x1527) x1884) (= x1339 (not x722)) (= x687 (x1858 x2889)) (= x423 (x2515 (+ x3735 (uninterp_mod (ite x1339 1461501637330902918203684832716283019655932542976 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (= (x3037 4294967295 x2769) x3874) (= (x1858 x1207) x2769) (= (x3037 115792089210356248756420345215482394403581256910207104449633294546465451933695 x2823) x1582) (= (uninterp_mod (* x628 1461501637330902918203684832716283019655932542976) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x4031) (= x1613 (x3291 x740)) (= x579 (x3796 x740)) (= (< 115792089237316195423570985008687907853269984665640564039457584007913129639934 x2069) x2181) (= x3137 x3287) (= x3053 (x2588 x4129)) (= (x2515 (+ x3620 x1944)) x1291) (= (x3037 26959946667150639794667015087019630673637144422540572481103610249215 x1968) x2726) (= (x3546 x4005 2) x740) (= x3790 (x1858 x2341)) (= x1997 (x1858 x3085)) (= (x235 x3963) x4168) (= x4134 (x2515 (+ x3541 x1392))) (= (x2515 (+ x1686 x2726)) x997) (= (x3037 18446744073709551615 x3784) x628) (= x1527 (x1858 x3570)) (= x3560 (x1858 x1474)) (= (uninterp_mod (* 26959946667150639794667015087019630673637144422540572481103610249216 x3874) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x1686) (= x1086 (x372 (x2562 x513) (x3377 2) 0)) (= (x3037 115792089237316195423570985007226406215939081747436879206741300988257197096960 x4168) x2817) (= (x1753 x4129) x1968) (= (x2515 (+ x3287 x2817)) x3713) (= (= x2517 0) x722)) (and (=> x2181 x3106) (=> (not x2181) x1098)))))
(assert (= (=> (and (= x261 x2966) (= x4186 (x372 (x2562 x2202) (x3377 210) 0)) (= x79 0) (= (x3218 x3264) x2570) (= x2686 (x3161 x4186)) (= (x3037 115792089237316195423570985007226406215939081747436879206741300988257197096960 x2686) x261) (= x3550 (x3037 1461501637330902918203684832716283019655932542975 x2570)) (= x466 (= 0 x3550)) (= x3264 (x372 (x2562 x2202) (x3377 208) 0))) (and (=> x466 x1360) (=> (not x466) x3726))) x3135))
(assert (= x1787 (and (not x1857) x2079)))
(assert (= (ite (and x2869 x3621 (not x2111)) (x799 x417) (x2418 x417)) (x2708 x417)))
(assert (x3207 x2591))
(assert (= (ite (and (not x914) x311 x2270) (x3990 x1548) (x448 x1548)) (x2288 x1548)))
(assert (= (ite (= x1742 x3194) x2368 (x2043 x1742)) (x2625 x1742)))
(assert (x3207 x2966))
(assert (x657 x544 x2819))
(assert (= (x2837 x1465) (ite (= x591 x1465) x2746 (x3077 x1465))))
(assert (= (x3641 (x2562 x1957)) x1957))
(assert (= (ite (= x1219 x1509) x3714 (x2369 x1509)) (x1967 x1509)))
(assert (= (ite (and (not x92) x3165 x2541) (x190 x1143) (x4112 x1143)) (x641 x1143)))
(assert (x3207 x4225))
(assert (= x2620 (x3641 (x2562 x2620))))
(assert (= (x799 x3093) (ite (and x3621 (not x4082) x4248 x761 x2885 x2869) (x596 x3093) (ite (and (not x2885) x3621 x761 x2869 x4248) (x3760 x3093) (ite (and x3621 x761 x2869 (not x4248)) (x4223 x3093) (ite (and x2869 (not x761) x3621) (x2220 x3093) (x530 x3093)))))))
(assert (x3207 x4050))
(assert (x3207 x498))
(assert (x657 x1908 x1799))
(assert (= (x3098 x2402) (ite (= x930 x2402) x24 (x3720 x2402))))
(assert (= (ite (= x2702 x2345) x147 (x518 x2345)) (x1371 x2345)))
(assert (= (x2001 x1606) (ite (and x1785 x399) (x3100 x1606) (x1728 x1606))))
(assert (= (ite (= x2990 x2590) x1749 (x3842 x2990)) (x2220 x2990)))
(assert (x3207 x2660))
(assert (= (x2043 x1105) (ite (= x1105 x2474) x199 (x362 x1105))))
(assert (x201 x3782 x3222 x2504 x3131))
(assert (= (x2369 x46) (ite (= x46 (x3377 0)) x2794 (x3228 x46))))
(assert (= (ite x1350 (ite x2406 (x1716 x1606) (ite x2981 (x1593 x1606) (x467 x1606))) (x1716 x1606)) (x3416 x1606)))
(assert (= (x3436 x2010) (ite (= x2595 x2010) x3561 (x979 x2010))))
(assert (= (ite (= x10 x637) x1658 (x842 x10)) (x1298 x10)))
(assert (=> (< (- x2317 1) 10000) (= (x2562 x2317) (x3377 x2317))))
(assert (x3207 x1553))
(assert (x3207 x337))
(assert (= (x3901 x2411) (ite (= x181 x2411) x2175 (x692 x2411))))
(assert (= (ite (and x4093 x581 (not x631) x311 x2608 x2270) (x2837 x2402) (ite (and (not x2608) x4093 x581 x311 x2270) (x3077 x2402) (ite (and (not x4093) x581 x311 x2270) (x1371 x2402) (ite (and (not x581) x2270 x311) (x518 x2402) (x3794 x2402))))) (x3990 x2402)))
(assert (= (and (not x4097) x2911) x1935))
(assert (x3207 x2338))
(assert (= (x3492 x2413) (ite (= x3343 x2413) 0 (x1144 x2413))))
(assert (x3207 x2320))
(assert (= (x799 x3857) (ite (and x3621 x4248 x2885 x761 x2869 (not x4082)) (x596 x3857) (ite (and x761 x4248 x3621 (not x2885) x2869) (x3760 x3857) (ite (and x2869 (not x4248) x761 x3621) (x4223 x3857) (ite (and (not x761) x2869 x3621) (x2220 x3857) (x530 x3857)))))))
(assert (= (x3492 x374) (ite (= x374 x3343) 0 (x1144 x374))))
(assert (= (ite (= x3691 x783) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x1274 x783)) (x3303 x783)))
(assert (x3207 x1917))
(assert (x3207 x1657))
(assert (x3207 x4228))
(assert (x3207 x2752))
(assert (x188 x3022))
(assert (= (x3152 (- x3317 x303)) 0))
(assert (x3207 x850))
(assert (= (ite (= x2010 x2227) 98474297345890754025501882143967591664980152141971839855651084132735363579904 (x2668 x2010)) (x2055 x2010)))
(assert (= (ite (= x3595 x2413) 274184521717934524641157099916833587240 (x1195 x2413)) (x3036 x2413)))
(assert (= (x3553 x2732) (ite (= x1969 x2732) x2633 (x1967 x2732))))
(assert (x657 x1357 x1560))
(assert (x3207 x3737))
(assert (= (x3641 (x2562 x487)) x487))
(assert (x3207 x2459))
(assert (= (x1751 x960) (ite (= x960 x154) 0 (x720 x960))))
(assert (x3207 x527))
(assert (= (x1814 x938) (ite (= x938 x3069) x2454 (x3672 x938))))
(assert (= (x4255 x277) (ite (= x277 x2253) x1502 (x394 x277))))
(assert (= (x190 x4193) (ite (and x64 x207 x2649 x2541 (not x3115) x3165) (x2396 x4193) (ite (and (not x2649) x2541 x207 x3165 x64) (x1924 x4193) (ite (and x64 x2541 (not x207) x3165) (x2625 x4193) (ite (and x3165 (not x64) x2541) (x2043 x4193) (x20 x4193)))))))
(assert (x3207 x1394))
(assert (x3207 x2613))
(assert (x2954 x2174))
(assert (= x1584 (=> (and (= (x2515 (+ 31 x3001)) x61) (= x1397 (x3037 115792089237316195423570985008687907853269984665640564039457584007913129639904 x61)) (= (x2515 (+ x1062 x1397)) x3738) (= x4208 (or (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3001)) (< x3001 32)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3001)))) (and (=> (and (not x4208) (= x4241 x4048) (= x1062 x172) (= (x1026 x172) x4048) (= x3738 x1217)) x418) (=> x4208 x3106)))))
(assert (=> (< (- x3022 1) 10000) (= (x2562 x3022) (x3377 x3022))))
(assert (= (x3152 (- x209 x303)) 0))
(assert (= (ite (= x374 x3069) x2454 (x3672 x374)) (x1814 x374)))
(assert (= (ite (= x3343 x2552) 0 (x1144 x2552)) (x3492 x2552)))
(assert (x3207 x2979))
(assert (= (x2206 x2281) (ite (= x2281 x2302) x2849 (x3901 x2281))))
(assert (= (x1367 x817) (ite (= x1076 x817) x2538 (x688 x817))))
(assert (x657 x3991 x3511))
(assert (= (x428 x2402) 0))
(assert (= (ite (= x3789 x2702) x147 (x518 x3789)) (x1371 x3789)))
(assert (x2954 x1655))
(assert (= (ite (and x1785 x399) (x3100 x172) (x1728 x172)) (x2001 x172)))
(assert (x3207 x509))
(assert (x3207 x2726))
(assert (x3207 x387))
(assert (= (ite (= x2789 x2085) x1703 (x1924 x2085)) (x2396 x2085)))
(assert (x3207 x1369))
(assert (= (ite (= x2482 x854) 98474297345890754025501882143967591664980152141971839855651084132735363579904 (x1772 x2482)) (x549 x2482)))
(assert (x3207 x3085))
(assert (= (ite (= x1219 x3499) x3714 (x2369 x3499)) (x1967 x3499)))
(assert (= (x1528 x2990) (ite (= x1844 x2990) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x3826 x2990))))
(assert (= (x688 x3317) (ite (= x3317 x203) x1383 (x768 x3317))))
(assert (= (x1751 x172) (ite (= x172 x154) 0 (x720 x172))))
(assert (= (ite (= x2227 x2591) 98474297345890754025501882143967591664980152141971839855651084132735363579904 (x2668 x2591)) (x2055 x2591)))
(assert (x3207 x3814))
(assert (= (=> (= x663 (= x1587 x3764)) (and (=> x663 x331) (=> (not x663) x2903))) x3214))
(assert (= (ite (= x2413 x2789) x1703 (x1924 x2413)) (x2396 x2413)))
(assert (= (x3218 x756) (ite (= x756 x4186) x2966 (x3161 x756))))
(assert (x3207 x4019))
(assert (= (x440 x3044) (ite (= x3308 x3044) x307 (x2245 x3044))))
(assert (= (ite (= x229 x2464) x3647 (x2115 x229)) (x1363 x229)))
(assert (= (ite (= x1672 x2798) x1180 (x1363 x2798)) (x3403 x2798)))
(assert (x3207 x3975))
(assert (= x3068 (=> (and (= (= 0 x59) x2944) (= (x2515 (+ x1311 36)) x2176) (= x2927 x1443) (= x1091 274184521717934524641157099916833587240) (= (x3060 (x2562 x3448)) x59) (= (x2515 (+ x1311 4)) x2927) (= x451 (x3402 (- x2176 x1311))) (= x3448 (x3037 1461501637330902918203684832716283019655932542975 x2599))) (and (=> x2944 x1614) (=> (not x2944) x1053)))))
(assert (= (x2220 x2785) (ite (= x2590 x2785) x1749 (x3842 x2785))))
(assert (x188 x589))
(assert (= (x596 x999) (ite (= x3357 x999) x3348 (x3760 x999))))
(assert (= x1020 (=> (= (= x3362 x1288) x880) (and (=> (not x880) x1360) (=> x880 x3135)))))
(assert (x3207 x2620))
(assert (= x471 (=> (and (= (= x2845 (ite x2950 1 0)) x4181) (= (x2515 (+ 32 x209)) x2413) (= x2845 (x504 x2413)) (= (not x3336) x2950) (= x3336 (= x2845 0))) (and (=> x4181 x1179) (=> (not x4181) x1614)))))
(assert (= (x1814 x1485) (ite (= x1485 x3069) x2454 (x3672 x1485))))
(assert (= (and (not x2086) x586) x2904))
(assert (= (ite (and (not x92) x3165 x2541) (x190 x2537) (x4112 x2537)) (x641 x2537)))
(assert (= (ite (= x2990 x1678) x3841 (x2757 x2990)) (x518 x2990)))
(assert (x3207 x2180))
(assert (= x3739 (and x3215 (not x174))))
(assert (x3207 x854))
(assert (= (x1429 x723) (ite (and x3783 x141 (not x1355)) (x239 x723) (x3098 x723))))
(assert (x3207 x1540))
(assert (x3207 x867))
(assert (= (=> (and (= x1000 (< x3770 1)) (= (x3534 (x3377 0)) x3770)) (and (=> (and (= x1775 false) (not x1000)) x2706) (=> x1000 x1614))) x1692))
(assert (x3207 x1823))
(assert (x3207 x4260))
(assert (x2954 x1974))
(assert (= x2284 (=> (and (= x2982 (x3037 255 x962)) (= (x2323 (x3377 106)) x962) (= x198 (= 0 x2982))) (and (=> x198 x1165) (=> (not x198) x1614)))))
(assert (= (x744 x2482) (ite (= x2482 x422) x3522 (x923 x2482))))
(assert (x3207 x1119))
(assert (= (x4223 x3093) (ite (= x4143 x3093) x4131 (x2220 x3093))))
(assert (x3207 x3498))
(assert (= (x2708 x1263) (ite (and x3621 (not x2111) x2869) (x799 x1263) (x2418 x1263))))
(assert (= (ite (= x4182 x1742) x1682 (x1668 x1742)) (x3392 x1742)))
(assert (= x1992 (=> (and (= x2344 (x372 (x2562 x15) (x3377 1) 0)) (= x2216 (< x2370 x357)) (<= x2370 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x2370 (x2058 x2344)) (= x1980 x3704) (>= x2370 0)) (and (=> x2216 x3556) (=> (not x2216) x523)))))
(assert (= (ite (= x756 x3440) x3763 (x3218 x3440)) (x3628 x3440)))
(assert (=> (> (+ 10000 1) x3777) (= (x3377 x3777) (x2562 x3777))))
(assert (x3207 x2150))
(assert (x3207 x2012))
(assert (x3207 x1091))
(assert (= (ite (= x3326 x2591) x3497 (x4223 x2591)) (x3760 x2591)))
(assert (x188 x1399))
(assert (= x3121 (=> (and (= x1469 (x3037 1461501637330902918203684832716283019655932542975 x2212)) (= x2542 (x372 (x2562 x1044) (x3377 208) 0)) (= x2212 (x2115 x2542)) (= (= x1469 0) x2604)) (and (=> (not x2604) x3080) (=> x2604 x2903)))))
(assert (x3207 x3759))
(assert (x3207 x4300))
(assert (x3207 x3318))
(assert (x2832 x1038 x881))
(assert (x188 x139))
(assert (x3207 x3414))
(assert (= (ite (= x422 x3317) x3522 (x923 x3317)) (x744 x3317)))
(assert (= (ite (= x1485 x1443) 274184521717934524641157099916833587240 (x2961 x1485)) (x3588 x1485)))
(assert (= (ite (= x2429 x783) x2731 (x3392 x783)) (x1880 x783)))
(assert (=> (> (+ 10000 1) x3321) (= (x3377 x3321) (x2562 x3321))))
(assert (x3207 x3356))
(assert (= (ite (= x3308 x2990) x307 (x2245 x2990)) (x440 x2990)))
(assert (x3207 x3042))
(assert (= (ite (and x3779 x617) (ite (and x1060 (not x3613) x2586) (x2353 x2146) (x3011 x2146)) (x3011 x2146)) (x695 x2146)))
(assert (x2954 x217))
(assert (= (ite (and x919 (not x2339) x1630) (x396 x2552) (x3992 x2552)) (x2125 x2552)))
(assert (= (x2265 (- x723 x4135)) 0))
(assert (= (x3392 x3910) (ite (= x4182 x3910) x1682 (x1668 x3910))))
(assert (= (and x2869 x3621) x1948))
(assert (x3207 x3183))
(assert (x3207 x4192))
(assert (= (=> (= x3633 (> x3597 0)) (and (=> x3633 x1137) (=> (not x3633) x1360))) x2256))
(assert (= x721 (or (and x2469 (not x2272)) (and x3295 x339) (and x2788 x1619) (and x1833 x1769) (and x4199 (not x2862)) (and x3847 (not x767)) (and x3313 x926) (and x2604 x2866) (and x2918 (not x2187)) (and x2795 (not x663)) (and x1573 x986))))
(assert (= x353 true))
(assert (= (=> (and (= x734 (- (x941 (x2562 x3515)) x1468)) (= x765 x4092) (= x3010 x3047) (= (< (+ x1468 (x1503 (x2562 274184521717934524641157099916833587240))) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x2431) x2431 (= x1468 0)) x2463) x69))
(assert (= (x219 x3270) (ite (= x1049 x3270) x983 (x2058 x3270))))
(assert (x3207 x2843))
(assert (= x575 (=> (and (= x186 (> x820 x3365)) (= x3365 (x2515 (+ x1284 x820)))) (and (=> x186 x2210) (=> (not x186) x1185)))))
(assert (x3207 x757))
(assert (x3207 x1651))
(assert (= 0 (x2265 (- x1263 x4135))))
(assert (x3207 x1852))
(assert (x3207 x80))
(assert (x3207 x18))
(assert (= (ite (= x930 x3093) x24 (x3720 x3093)) (x3098 x3093)))
(assert (= x4196 (=> (= (= x139 274184521717934524641157099916833587206) x1832) (and (=> (not x1832) x1250) (=> (and (= (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1536) (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1536)) (< x1536 32))) x1277) (= x4 (x3060 (x2562 274184521717934524641157099916833587206))) (or (and x1277 (= x2352 x1545) (= 0 x3094)) (and (= 32 x2352) (= x1766 (x372 (x2562 274184521717934524641157099916833587240) (x3377 1) 0)) (= (x2883 x1766) x1634) (not x1277) (<= x1634 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= 274184521717934524641157099916833587240 x3810) (>= x1634 0) (= 1 x3094))) (= x2942 x3269) (= (x3402 (- x2942 4)) x1536) (= 36 x2942) (not (> 826074471 x1124)) (= x1124 1889567281) x1832 (not (= x1124 826074471)) (not (> 4 x2942)) (> x4 0) (= 50942633119752846454219349998365661925608737367104304655302372697894809501696 x2713)) x497)))))
(assert (= (ite (= x4065 (x3377 0)) x3798 (x4026 x4065)) (x2115 x4065)))
(assert (= x3515 (x3641 (x2562 x3515))))
(assert (= (and x2922 x2791) x1975))
(assert (= (ite (= x1228 x3178) x3067 (x1442 x3178)) (x126 x3178)))
(assert (= (x428 x1263) 0))
(assert (= (x549 x2552) (ite (= x854 x2552) 98474297345890754025501882143967591664980152141971839855651084132735363579904 (x1772 x2552))))
(assert (= (ite (= x1143 x2474) x199 (x362 x1143)) (x2043 x1143)))
(assert (x3207 x3170))
(assert (x188 x2720))
(assert (x2954 x1968))
(assert (= (x3901 x2017) (ite (= x2017 x181) x2175 (x692 x2017))))
(assert (= x3580 (x3641 (x2562 x3580))))
(assert (= (ite (= x374 x1406) x4102 (x3278 x374)) (x2425 x374)))
(assert (= (ite (= x2789 x3725) x1703 (x1924 x3725)) (x2396 x3725)))
(assert (x3207 x2507))
(assert (= (ite (= x1672 x1910) x1180 (x1363 x1910)) (x3403 x1910)))
(assert (x3207 x365))
(assert (= (ite (= x402 x2104) 0 (x1736 x2104)) (x2497 x2104)))
(assert (= (and x1237 x3750) x964))
(assert (x1589 x3186 x1615 x3453 x3602))
(assert (= (ite (= x1024 x2990) 0 (x1337 x2990)) (x1728 x2990)))
(assert (x3207 x3595))
(assert (= (ite (and x919 x1630 (not x2339)) (x396 x1485) (x3992 x1485)) (x2125 x1485)))
(assert (= (ite (= x209 x3343) 0 (x1144 x209)) (x3492 x209)))
(assert (= (ite (= x2104 x2789) x1703 (x1924 x2104)) (x2396 x2104)))
(assert (x3207 x326))
(assert (= (x428 x172) 0))
(assert (= (ite (= x374 x4271) x3187 (x3303 x374)) (x3278 x374)))
(assert (= x3886 (and x3530 x3633)))
(assert (= (ite (= x4143 x2010) x4131 (x2220 x2010)) (x4223 x2010)))
(assert (= (ite (= x3469 x783) x4144 (x2425 x783)) (x531 x783)))
(assert (= x3307 (=> (and (= x861 x224) (<= 0 x3294) (<= x3294 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x372 (x2562 x1957) (x3377 1) 0) x1983) (= (x975 x1983) x3294) (= (< x3294 x24) x1401)) (and (=> (not x1401) x1887) (=> x1401 x1036)))))
(assert (x3207 x2381))
(assert (= (ite (= x172 x3308) x307 (x2245 x172)) (x440 x172)))
(assert (= (ite (and x650 (not x1914) x296) (x116 x2402) (x2055 x2402)) (x858 x2402)))
(assert (= x1210 (=> (= x3083 x3774) x3059)))
(assert (x3207 x646))
(assert (= (=> (and (= x902 x1153) (= x319 x2540)) x3474) x1774))
(assert (= (x126 x2402) (ite (= x2402 x1228) x3067 (x1442 x2402))))
(assert (= (ite (= x154 x1465) 0 (x720 x1465)) (x1751 x1465)))
(assert (= (=> (and (= x4217 0) (= x1475 x2399)) x2549) x31))
(assert (= 4294967295 (x3641 (x3377 4294967295))))
(assert (= (ite (and x3892 x1955 (not x427)) (x1922 x2537) (x549 x2537)) (x2637 x2537)))
(assert (x3207 x3365))
(assert (= (x3377 115792089237316195423570985007226406215939081747436879206741300988257197096960) (x2562 115792089237316195423570985007226406215939081747436879206741300988257197096960)))
(assert (x3207 x1069))
(assert (x3207 x3604))
(assert (= (x2125 x2537) (ite (and (not x2339) x1630 x919) (x396 x2537) (x3992 x2537))))
(assert (= (x257 x4213) (ite (and x617 x3779) (x1039 x4213) (x2497 x4213))))
(assert (=> (> (+ 10000 1) x298) (= (x3377 x298) (x2562 x298))))
(assert (= (=> (and (= x1883 0) (= x1740 x640)) x33) x1982))
(assert (= (=> (= x2166 (< x569 x3004)) (and (=> x2166 x31) (=> (and (= x3450 x4055) (= x2029 274184521717934524641157099916833587240) (= x1475 32) (not x2166) (= 1 x4217) (= x3443 (x3402 (- x569 x3004)))) x2549))) x3101))
(assert (= x899 (=> (and (= x3308 (x2515 (+ 64 x3413))) (= x3903 (x3402 (- x3024 x1024))) (= x4046 (x3060 (x2562 x185))) (= x1309 (x2515 (+ 32 x3413))) (= x3024 (x2515 (+ 100 x1024))) (= x679 (x2515 (+ 4 x1024))) (= x690 274184521717934524641157099916833587240) (= (x3037 1461501637330902918203684832716283019655932542975 x4220) x1823) (= x3413 x679) (= x386 (= 0 x4046)) (= x185 (x3037 1461501637330902918203684832716283019655932542975 x131))) (and (=> x386 x3106) (=> (not x386) x1265)))))
(assert (= (ite (= x2702 x2990) x147 (x518 x2990)) (x1371 x2990)))
(assert (= (and x3950 (not x2944)) x3945))
(assert (= (and x3684 x1402) x4172))
(assert (= (ite (= x682 x1219) x3714 (x2369 x682)) (x1967 x682)))
(assert (x3207 x830))
(assert (= (ite (= x1844 x2591) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x3826 x2591)) (x1528 x2591)))
(assert (= (ite (= x4143 x2889) x4131 (x2220 x2889)) (x4223 x2889)))
(assert (= (x1728 x172) (ite (= x172 x1024) 0 (x1337 x172))))
(assert (= (x1363 x2252) (ite (= x2252 x2464) x3647 (x2115 x2252))))
(assert (= x1663 (and x4296 x2089)))
(assert (= (ite (and x3165 x2541 (not x92)) (x190 x3317) (x4112 x3317)) (x641 x3317)))
(assert (= x3175 (and x3316 (not x83))))
(assert (x3207 x539))
(assert (= (ite (= 192 x4143) x4131 (x2220 192)) (x4223 192)))
(assert (= (ite (= x2429 x1105) x2731 (x3392 x1105)) (x1880 x1105)))
(assert (= (x979 x2990) (ite (= x4041 x2990) x459 (x3898 x2990))))
(assert (x3207 x1694))
(assert (x1589 x1970 x9 x912 x1768))
(assert (= (x858 x2990) (ite (and x650 (not x1914) x296) (x116 x2990) (x2055 x2990))))
(assert (= (x1924 x3824) (ite (= x2977 x3824) x4123 (x2625 x3824))))
(assert (= (=> (and (= x1049 (x372 (x2562 x3008) (x3377 1) 0)) (= (x3402 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2194)) x1141) (= (x3402 (- x1741 x2194)) x983) (= (x219 x1482) x1899) (= x1482 (x372 (x2562 274184521717934524641157099916833587240) (x3377 1) 0)) (<= 0 x1899) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1899) (= 274184521717934524641157099916833587240 x2435) (= (< x1141 x1899) x3978)) (and (=> x3978 x128) (=> (not x3978) x519))) x1759))
(assert (= x1850 (=> (= (= 274184521717934524641157099916833587240 x1096) x2162) (and (=> (and x2162 (= (ite x2162 1 0) x3033)) x1245) (=> (not x2162) x2857)))))
(assert (x3207 x1533))
(assert (= (ite (and (not x92) x2541 x3165) (x190 x2318) (x4112 x2318)) (x641 x2318)))
(assert (= (x3641 (x2562 x2761)) x2761))
(assert (= (x1528 x2345) (ite (= x1844 x2345) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x3826 x2345))))
(assert (= (x1814 x2552) (ite (= x3069 x2552) x2454 (x3672 x2552))))
(assert (= (ite (and x4071 x3423 (not x2978)) (x3052 x2402) (x3389 x2402)) (x1716 x2402)))
(assert (x3207 x1943))
(assert (x3207 x3008))
(assert (x3207 x4165))
(assert (= (x2244 x1748) (ite (= x1748 x3572) x1441 (x1338 x1748))))
(assert (= (ite (= x2474 192) x199 (x362 192)) (x2043 192)))
(assert (x3207 x2093))
(assert (x3825 x2249 x3809))
(assert (= (x2837 x960) (ite (= x960 x591) x2746 (x3077 x960))))
(assert (= (ite (= x2591 x591) x2746 (x3077 x2591)) (x2837 x2591)))
(assert (= x3363 (and x2999 (not x2117))))
(assert (x3207 x4246))
(assert (= (x1403 (x2562 274184521717934524641157099916833587240)) (ite (and x3018 (not x2087)) (x2598 (x2562 274184521717934524641157099916833587240)) (ite x1661 (ite x1350 (x3147 (x2562 274184521717934524641157099916833587240)) (x3309 (x2562 274184521717934524641157099916833587240))) (x3309 (x2562 274184521717934524641157099916833587240))))))
(assert (x3207 x1027))
(assert (= x2934 (x3641 (x2562 x2934))))
(assert (= (ite (= x402 x3910) 0 (x1736 x3910)) (x2497 x3910)))
(assert (= (x3760 224) (ite (= x3326 224) x3497 (x4223 224))))
(assert (x3207 x2083))
(assert (= (x2055 x3310) (ite (= x3310 x2227) 98474297345890754025501882143967591664980152141971839855651084132735363579904 (x2668 x3310))))
(assert (= (x1924 x4104) (ite (= x2977 x4104) x4123 (x2625 x4104))))
(assert (= (x1197 x4193) 0))
(assert (= (=> (and (= x626 (x372 (x2562 274184521717934524641157099916833587240) (x3377 209) 0)) (= x1180 (x3402 (- x3500 1))) (= (x3403 x626) x2277) (= (< 115792089237316195423570985008687907853269984665640564039457584007913129639934 x2277) x926)) (and (=> (and (not x926) (= (x2515 (+ x2277 1)) x2508) (= (x3037 115792089237316195423570985007226406215939081747436879206741300988257197096960 x3717) x3678) (= x3730 1) (= x3586 (x2515 (+ 274184521717934524641157099916833587240 x3678))) (= x3717 (x4042 x3605)) (= (x372 (x2562 x1044) (x3377 208) 0) x3605)) x1671) (=> x926 x2903))) x2672))
(assert (x188 x513))
(assert (x3207 x572))
(assert (= (ite (= x3404 (x3377 0)) x2794 (x3228 x3404)) (x2369 x3404)))
(assert (x3207 x2277))
(assert (x2954 x4050))
(assert (= (ite (= x4213 x1443) 274184521717934524641157099916833587240 (x2961 x4213)) (x3588 x4213)))
(assert (= (and (not x2567) x2380) x2270))
(assert (= (ite (= x2591 x3308) x307 (x2245 x2591)) (x440 x2591)))
(assert (= (ite (= x2126 x1991) x3850 (x1864 x2126)) (x1544 x2126)))
(assert (= (x744 x1193) (ite (= x1193 x422) x3522 (x923 x1193))))
(assert (= (x3428 x2730) (ite (= x2730 x2132) x2762 (x219 x2730))))
(assert (= (ite (and x2803 (not x35) x3657) (x1688 x3317) (x383 x3317)) (x270 x3317)))
(assert (= (ite (= x637 x3118) x1658 (x842 x3118)) (x1298 x3118)))
(assert (= (x3641 (x2562 x3777)) x3777))
(assert (x3207 x2977))
(assert (= (x1728 x3044) (ite (= x3044 x1024) 0 (x1337 x3044))))
(assert (= x3547 (and x988 (not x2304))))
(assert (x3207 x1596))
(assert (x2954 x3378))
(assert (x3207 x3599))
(assert (x3207 x1241))
(assert (= x1104 (=> (and (= (x2515 (+ x2856 64)) x3395) (= (x2515 (+ x245 52)) x3660) (= x883 (x3402 (- x3660 x1228))) (= (x2515 (+ x1466 40)) x245) (= (x3037 1461501637330902918203684832716283019655932542975 x217) x558) (= (x3037 1461501637330902918203684832716283019655932542975 x131) x3475) (= x952 (x3619 x3475 96)) (= (x2515 (+ 40 x3759)) x395) (= (x3037 1461501637330902918203684832716283019655932542975 x3478) x2274) (= x980 (x3619 x558 96)) (= x1651 (x2515 (+ x3395 64))) (= x3414 (x3060 (x2562 x3022))) (= (ite (> x3096 0) 0 x1229) x533) (= x4009 (x3619 x2274 96)) (= (x3816 x2392 x533 x1657 x1763 x3279 x952 x4009 x980 x3417) x713) (= (x2515 (+ 64 x1228)) x2660) (= (x2515 (+ x237 64)) x1466) (= (ite (> x3096 0) 0 x307) x2392) (= (x3402 (- x883 32)) x3067) (= x3022 (x3037 1461501637330902918203684832716283019655932542975 x217)) (= (x2515 (+ 64 x2660)) x237) (= x2856 (x2515 (+ x2297 384))) (= (x2515 (+ x1651 52)) x3759) (= x3621 (> x3414 0))) (and (=> (and (= (> x1430 x1749) x2111) (= (x3037 1461501637330902918203684832716283019655932542975 x217) x3191) (= (> x1749 0) x761) (= (x2515 (+ x3660 68)) x2590) (= (x2515 (+ x395 36)) x775) (or (and (= x4248 (> x1749 32)) (= x1069 x4143) x761 (or (and (= x2885 (< 64 x1749)) (or (and (= (x3760 224) x3348) (= (> x1749 96) x4082) x2885 (or (and (not x4082) (= 96 x1430)) (and (= (> x1749 128) x264) (= (x2515 (+ x2590 128)) x2631) (= x150 (x596 256)) (not x264) x4082 (= x1430 128))) (= (x2515 (+ x2590 96)) x3357)) (and (= 64 x1430) (not x2885))) (= (x4223 192) x3497) (= x3326 (x2515 (+ 64 x2590))) x4248) (and (= 32 x1430) (not x4248))) (= (x2220 160) x4131)) (and (not x761) (= 0 x1430))) (or (not x2111) (and (= x1797 (x2515 (+ x1069 x1749))) x2111)) (= (x2515 (+ 32 x527)) x2818) (= (x2515 (+ x775 96)) x1069) (= x1749 (x3842 128)) (= x527 x775) x3621) x3785) (=> (and (not x3621) (= x3660 x814)) x917)))))
(assert (= (x396 x1495) (ite (and x3284 x465 x919 (not x3643) x1630 x4198) (x1880 x1495) (ite (and x465 x4198 (not x3284) x919 x1630) (x3392 x1495) (ite (and (not x4198) x1630 x919 x465) (x1668 x1495) (ite (and x919 (not x465) x1630) (x744 x1495) (x2231 x1495)))))))
(assert (= x15 (x3641 (x2562 x15))))
(assert (= (=> (and (= x3669 (x3402 (- x2670 1))) (= x2620 (x3037 1461501637330902918203684832716283019655932542975 x3528)) (= x2853 (x372 (x2562 x3669) (x3377 208) 0)) (= x4119 (= x2620 0)) (= x3528 (x3161 x2853))) (and (=> x4119 x1614) (=> (not x4119) x3565))) x1041))
(assert (x3207 x3188))
(assert (= (x1429 x960) (ite (and (not x1355) x3783 x141) (x239 x960) (x3098 x960))))
(assert (= (ite (= x1105 x4271) x3187 (x3303 x1105)) (x3278 x1105)))
(assert (= (x531 x374) (ite (= x374 x3469) x4144 (x2425 x374))))
(assert (= (x1528 x1062) (ite (= x1062 x1844) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x3826 x1062))))
(assert (x3207 x802))
(assert (= (ite (= x422 x209) x3522 (x923 x209)) (x744 x209)))
(assert (= (ite (and x207 x3165 x2541 (not x3115) x2649 x64) (x2396 x4213) (ite (and x2541 x3165 (not x2649) x64 x207) (x1924 x4213) (ite (and x64 (not x207) x2541 x3165) (x2625 x4213) (ite (and x2541 x3165 (not x64)) (x2043 x4213) (x20 x4213))))) (x190 x4213)))
(assert (= (ite (= x2104 x4182) x1682 (x1668 x2104)) (x3392 x2104)))
(assert (= (ite (= x2402 x1489) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x2030 x2402)) (x1267 x2402)))
(assert (x3207 x1343))
(assert (= (x2125 x3910) (ite (and x919 x1630 (not x2339)) (x396 x3910) (x3992 x3910))))
(assert (=> (< (- x3879 1) 10000) (= (x2562 x3879) (x3377 x3879))))
(assert (= (ite (= x253 x3317) x1841 (x1950 x3317)) (x768 x3317)))
(assert (x3207 x1474))
(assert (= (=> (= x615 x1669) x379) x2386))
(assert (= (ite (= x3343 x1105) 0 (x1144 x1105)) (x3492 x1105)))
(assert (x3207 x4216))
(assert (= (ite (= x2132 x3915) x2762 (x219 x3915)) (x3428 x3915)))
(assert (= (x3492 x4104) (ite (= x4104 x3343) 0 (x1144 x4104))))
(assert (= (x1544 x2804) (ite (= x1991 x2804) x3850 (x1864 x2804))))
(assert (= (ite (= x1443 x3910) 274184521717934524641157099916833587240 (x2961 x3910)) (x3588 x3910)))
(assert (= (=> (and (= (x1882 x2591) x291) (= (= x291 (ite x2770 1 0)) x2480) (= (x2515 (+ x999 32)) x2591) (= (= 0 x291) x515) (= x2770 (not x515))) (and (=> x2480 x2054) (=> (not x2480) x3106))) x2201))
(assert (x2954 x1613))
(assert (x3207 x729))
(assert (x3207 x1190))
(assert (= (x2265 (- x2402 x4135)) 0))
(assert (= (ite (= x2313 x4279) x3772 (x692 x2313)) (x3766 x2313)))
(assert (x3207 x1062))
(assert (x3207 x59))
(assert (= (x2637 x2085) (ite (and (not x427) x3892 x1955) (x1922 x2085) (x549 x2085))))
(assert (= (x3641 (x3377 117300739)) 117300739))
(assert (x3207 x2499))
(assert (= x2929 (=> (and (= x3451 68) (= x4121 (or (> x4228 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (< x4228 64) (= true (<= x4228 57896044618658097711785492504343953926634992332820282019728792003956564819967))))) (= x4195 x4013) (not (< x3451 4)) (not (= x548 826074471)) (not (> 826074471 x548)) (= x731 76450787359836037641860180984291677749980919077056822294353438043884394381312) (= x3451 x1773) (not (= 1889567281 x548)) (= x3401 x122) (= x4228 (x3402 (- x3451 4))) (< 0 x512) (= x512 (x3060 (x2562 274184521717934524641157099916833587206))) (not (= 2514000705 x548)) (= 2835717307 x548)) (and (=> (not x4121) x3041) (=> x4121 x107)))))
(assert (x3207 x820))
(assert (x657 x3722 x3658))
(assert (=> (> (+ 10000 1) x4220) (= (x2562 x4220) (x3377 x4220))))
(assert (= (ite (= x3308 x417) x307 (x2245 x417)) (x440 x417)))
(assert (x3207 x3457))
(assert (= true x4039))
(assert (x3825 x3472 x1929))
(assert (= (x2001 x417) (ite (and x399 x1785) (x3100 x417) (x1728 x417))))
(assert (x3207 x3251))
(assert (= (x126 x2990) (ite (= x2990 x1228) x3067 (x1442 x2990))))
(assert (= (x2625 x2482) (ite (= x2482 x3194) x2368 (x2043 x2482))))
(assert (= (ite (= x4213 x1364) x32 (x1919 x4213)) (x383 x4213)))
(assert (= (ite (= x4143 x1606) x4131 (x2220 x1606)) (x4223 x1606)))
(assert (x2579 x3140 x1635 x1921 x350))
(assert (= (x518 x4230) (ite (= x1678 x4230) x3841 (x2757 x4230))))
(assert (= (x4223 x3570) (ite (= x4143 x3570) x4131 (x2220 x3570))))
(assert (x3207 x1441))
(assert (= x2 (=> (= (= x1493 274184521717934524641157099916833587202) x4084) (and (=> (not x4084) x149) (=> x4084 x2032)))))
(assert (x2954 x867))
(assert (x1589 x947 x3434 x4251 x1691))
(assert (x3207 x3888))
(assert (x3207 x2090))
(assert (x3207 x4230))
(assert (= (x3641 (x2562 x3191)) x3191))
(assert (x3207 x3125))
(assert (= (and x2121 x2808) x3828))
(assert (x2954 18446744073709551615))
(assert (x3207 x2684))
(assert (= (=> (= x785 (< x3078 x2194)) (and (=> x785 x128) (=> (and (= x3277 (x3402 (- x3078 x2194))) (not x785) (= x3974 (x372 (x2562 274184521717934524641157099916833587240) x2736 0)) (= x3604 x2729) (= x2736 (x372 (x2562 x3008) (x3377 2) 0)) (= x3781 274184521717934524641157099916833587240) (= 1 x1849)) x3608))) x1072))
(assert (x3207 x999))
(assert (= (ite (= x534 (x3377 0)) x2794 (x3228 x534)) (x2369 x534)))
(assert (= (x2396 x2318) (ite (= x2789 x2318) x1703 (x1924 x2318))))
(assert (= (ite (= x2464 x1888) x3647 (x2115 x1888)) (x1363 x1888)))
(assert (x3207 x2193))
(assert (x3207 x604))
(assert (x2954 x3509))
(assert (x3207 x402))
(assert (x3207 x591))
(assert (x3207 x2912))
(assert (= (ite (= x3194 x1485) x2368 (x2043 x1485)) (x2625 x1485)))
(assert (= 1722255204 (x3641 (x3377 1722255204))))
(assert (= (ite (= x1193 x2789) x1703 (x1924 x1193)) (x2396 x1193)))
(assert (x1589 x3717 x1090 x3797 x2630))
(assert (x3207 x425))
(assert (= (x3218 x2450) (ite (= x2450 x4186) x2966 (x3161 x2450))))
(assert (= (x695 x4282) (ite (and x3779 x617) (ite (and x2586 x1060 (not x3613)) (x2353 x4282) (x3011 x4282)) (x3011 x4282))))
(assert (= 0 (x3193 (- x209 x3183))))
(assert (= (and x347 x2993) x3876))
(assert (= (ite (= x1907 x2474) x199 (x362 x1907)) (x2043 x1907)))
(assert (x3207 x1867))
(assert (x2954 x457))
(assert (= (ite (= x2402 x591) x2746 (x3077 x2402)) (x2837 x2402)))
(assert (x3207 x1422))
(assert (x1589 x579 x1754 x3325 x1224))
(assert (= (x768 x2104) (ite (= x253 x2104) x1841 (x1950 x2104))))
(assert (= (ite (= x3343 x1463) 0 (x1144 x1463)) (x3492 x1463)))
(assert (x3207 x2191))
(assert (x3207 x3086))
(assert (= (x3040 (x2562 x474)) (ite (and x617 x3779) (ite (and (not x3613) x2586 x1060) (x517 (x2562 x474)) (x2654 (x2562 x474))) (x2654 (x2562 x474)))))
(assert (= (=> (and (= x943 (x2515 (+ 32 x1024))) (= x1248 (x3402 (- x855 1))) (= x1580 (= 0 x317)) (= x317 (x3037 1461501637330902918203684832716283019655932542975 x217))) (and (=> x1580 x3106) (=> (not x1580) x686))) x377))
(assert (= x1306 (and x1128 x1415)))
(assert (= (ite (= x2450 (x3377 0)) x3798 (x4026 x2450)) (x2115 x2450)))
(assert (= (ite (= (x3377 0) x3276) x2794 (x3228 x3276)) (x2369 x3276)))
(assert (x3207 x2729))
(assert (= x2202 (x3641 (x2562 x2202))))
(assert (= (ite (= x854 x3433) 98474297345890754025501882143967591664980152141971839855651084132735363579904 (x1772 x3433)) (x549 x3433)))
(assert (= (ite (= x1190 x2402) x419 (x1528 x2402)) (x3898 x2402)))
(assert (= (x641 x3910) (ite (and (not x92) x3165 x2541) (x190 x3910) (x4112 x3910))))
(assert (x3207 x2465))
(assert (x3207 x2713))
(assert (x657 x3995 x4075))
(assert (= (=> (and (= x1207 (x2515 (+ 64 x2889))) (= x1608 (x2323 x3724)) (= (x3037 18446744073709551615 x2008) x2566) (= x1172 (x3037 1461501637330902918203684832716283019655932542975 x4220)) (= x3315 (- (/ x2436 18446744073709551616) (uninterp_frac x2436 18446744073709551616))) (= (x2515 (+ x3487 64)) x3085) (= x1537 (< 0 x3236)) (= (x3037 255 x1608) x3236) (= x589 (x3037 1461501637330902918203684832716283019655932542975 x3478)) (= (x3037 4294967295 x3315) x1629) (= (x372 (x2562 x589) (x3377 4) 0) x3724) (= x2008 (x2515 (+ x669 x2307))) (= x3178 (x2515 (+ x1207 64))) (= x2436 (x2323 (x3377 1)))) (and (=> x1537 x966) (=> (not x1537) x3106))) x4187))
(assert (x3207 x3810))
(assert (x3207 x340))
(assert (x3207 x2728))
(assert (= (ite (= x2591 x3801) x1342 (x1156 x2591)) (x223 x2591)))
(assert (x3207 x1945))
(assert (= (ite (= x4143 x2591) x4131 (x2220 x2591)) (x4223 x2591)))
(assert (= x2322 (=> (and (= x3709 (not x2756)) (= x3096 x2016) (= (x2515 (+ x1178 160)) x2833) (= x2756 (= x2016 0)) (= (= (ite x3709 1 0) x2007) x1415)) (and (=> (not x1415) x3106) (=> x1415 x762)))))
(assert (= (ite (= x591 x2990) x2746 (x3077 x2990)) (x2837 x2990)))
(assert (= 0 (x1197 x3433)))
(assert (= (x1298 x3725) (ite (= x3725 x637) x1658 (x842 x3725))))
(assert (x3207 x3315))
(assert (x3207 x1392))
(assert (x3207 x2569))
(assert (x3207 x589))
(assert (= (and (not x2182) x2060) x2248))
(assert (= (x2708 x1606) (ite (and (not x2111) x3621 x2869) (x799 x1606) (x2418 x1606))))
(assert (x3207 x3620))
(assert (x3207 x3738))
(assert (= (and x2755 x2638) x2296))
(assert (= (x3641 (x2562 x513)) x513))
(assert (= (ite (= x1485 x1414) x4020 (x744 x1485)) (x1668 x1485)))
(assert (x2750 x3509 x3169))
(assert (= (ite (= x3789 x2590) x1749 (x3842 x3789)) (x2220 x3789)))
(assert (= (x1924 x2318) (ite (= x2977 x2318) x4123 (x2625 x2318))))
(assert (= (ite (= x1105 x1414) x4020 (x744 x1105)) (x1668 x1105)))
(assert (= x346 (=> (and (= (x2515 (+ x1522 x1596)) x3198) (= x168 (< x3198 x1522))) (and (=> (and (= 1 x365) (= 32 x3361) (= x1283 x936) (not x168)) x1100) (=> x168 x3889)))))
(assert (=> (< (- x2964 1) 10000) (= (x2562 x2964) (x3377 x2964))))
(assert (= (ite (and (not x1914) x650 x296) (x116 x1263) (x2055 x1263)) (x858 x1263)))
(assert (x3207 x3832))
(assert (x3207 x3520))
(assert (= 511946350 (x3641 (x3377 511946350))))
(assert (= (x858 x802) (ite (and x296 x650 (not x1914)) (x116 x802) (x2055 x802))))
(assert (x3207 x775))
(assert (x657 x1805 x1348))
(assert (= (ite (and x2541 (not x3115) x207 x3165 x64 x2649) (x2396 x2552) (ite (and x3165 x2541 (not x2649) x207 x64) (x1924 x2552) (ite (and (not x207) x64 x2541 x3165) (x2625 x2552) (ite (and x2541 (not x64) x3165) (x2043 x2552) (x20 x2552))))) (x190 x2552)))
(assert (= (ite (= x3595 x4213) 274184521717934524641157099916833587240 (x1195 x4213)) (x3036 x4213)))
(assert (= (ite (= x374 x3537) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x2410 x374)) (x1950 x374)))
(assert (x3207 x172))
(assert (x3207 x3203))
(assert (= (x3818 x3433) (ite (and x559 x791 x2701 (not x1018) x2947 x2002) (x531 x3433) (ite (and x2947 x2002 x2701 x791 (not x559)) (x2425 x3433) (ite (and (not x791) x2947 x2002 x2701) (x3278 x3433) (ite (and x2002 x2947 (not x2701)) (x3303 x3433) (x1994 x3433)))))))
(assert (x3207 x3304))
(assert (= (ite (and x399 x1785) (x3100 x2010) (x1728 x2010)) (x2001 x2010)))
(assert (= true x333))
(assert (= 0 (x3152 (- x3910 x303))))
(assert (= (x3641 (x3377 1166402363)) 1166402363))
(assert (x3207 x3670))
(assert (=> (< (- x3362 1) 10000) (= (x2562 x3362) (x3377 x3362))))
(assert (= (and x1643 (not x1066)) x772))
(assert (x3207 x2733))
(assert (x3207 x1212))
(assert (= (=> (and (= (< 0 x248) x3519) (= (x3060 (x2562 x1216)) x248) (= (x3037 1461501637330902918203684832716283019655932542975 x3478) x1216)) (and (=> x3519 x3793) (=> (not x3519) x1972))) x1504))
(assert (= (x1814 x2537) (ite (= x2537 x3069) x2454 (x3672 x2537))))
(assert (x3207 x1512))
(assert (= (ite (= x1040 x2977) x4123 (x2625 x1040)) (x1924 x1040)))
(assert (= (x641 x1105) (ite (and x2541 (not x92) x3165) (x190 x1105) (x4112 x1105))))
(assert (x3207 x1763))
(assert (= (x1214 x3789) (ite (= x2005 x3789) 274184521717934524641157099916833587240 (x4226 x3789))))
(assert (= (ite (and x1630 x919 (not x2339)) (x396 x4104) (x3992 x4104)) (x2125 x4104)))
(assert (= (x549 x817) (ite (= x854 x817) 98474297345890754025501882143967591664980152141971839855651084132735363579904 (x1772 x817))))
(assert (x3207 x3421))
(assert (= (x1716 x723) (ite (and x4071 x3423 (not x2978)) (x3052 x723) (x3389 x723))))
(assert (= (ite (= x1672 x1547) x1180 (x1363 x1547)) (x3403 x1547)))
(assert (x3207 x1015))
(assert (x3207 x2059))
(assert (= (x4223 x1192) (ite (= x4143 x1192) x4131 (x2220 x1192))))
(assert (= 0 (x428 x3044)))
(assert (= (x440 x4230) (ite (= x3308 x4230) x307 (x2245 x4230))))
(assert (= (x3990 x2591) (ite (and x4093 x2270 x311 x2608 (not x631) x581) (x2837 x2591) (ite (and (not x2608) x311 x4093 x581 x2270) (x3077 x2591) (ite (and x581 x311 (not x4093) x2270) (x1371 x2591) (ite (and x2270 (not x581) x311) (x518 x2591) (x3794 x2591)))))))
(assert (= (ite (= x4143 x2402) x4131 (x2220 x2402)) (x4223 x2402)))
(assert (x3207 x1003))
(assert (x3207 x1427))
(assert (x3207 x2846))
(assert (= x49 (=> (and (= (x3037 1461501637330902918203684832716283019655932542975 x217) x2317) (= (x372 (x2562 x2317) (x3377 209) 0) x1314) (= (x803 x1314) x3111) (= x3123 0) (= (< 115792089237316195423570985008687907853269984665640564039457584007913129639934 x3111) x2567)) (and (=> x2567 x3106) (=> (not x2567) x1486)))))
(assert (= x3374 (and (not x466) x2037)))
(assert (x3207 x679))
(assert (= x3263 (or (and (not x168) x3043) x2896)))
(assert (x2954 x3356))
(assert (= (and x1292 (not x1094)) x2536))
(assert (x3207 x2276))
(assert (x3207 x2341))
(assert (= (=> (and (= (> x325 0) x2222) (= (x3060 (x2562 x1591)) x325) (= x1591 (x3037 1461501637330902918203684832716283019655932542975 x3478))) (and (=> (and (not x2222) (= x4207 x4241) (= x4207 (x3309 (x2562 274184521717934524641157099916833587240))) (= x1062 x1217)) x418) (=> x2222 x1571))) x2041))
(assert (x3207 x792))
(assert (= (x1668 x1495) (ite (= x1414 x1495) x4020 (x744 x1495))))
(assert (x2954 x913))
(assert (= x2389 (=> (and (= x2616 (x2515 (+ x1379 x1252))) (= (x3037 115792089237316195423570985008687907853269984665640564039457584007913129639904 x178) x1252) (= (x2515 (+ 31 x3599)) x178) (= (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3599) (and (= (<= x3599 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (> 32 x3599))) x1506)) (and (=> (not x1506) x4051) (=> x1506 x1614)))))
(assert (x2954 x1038))
(assert (= (ite (and x2541 (not x92) x3165) (x190 x374) (x4112 x374)) (x641 x374)))
(assert (= (x3553 x3510) (ite (= x3510 x1969) x2633 (x1967 x3510))))
(assert (x188 x1493))
(assert (= (=> (= (> x1017 x3676) x781) (and (=> x781 x1798) (=> (not x781) x2719))) x893))
(assert (= (and (not x184) x3481) x399))
(assert (x3207 x3266))
(assert (x3207 x2349))
(assert (x3207 x170))
(assert (= (ite (and x919 x1630 (not x2339)) (x396 x4213) (x3992 x4213)) (x2125 x4213)))
(assert (x3207 x3078))
(assert (= (ite (= x4279 x2146) x3772 (x692 x2146)) (x3766 x2146)))
(assert (= x3295 (and x4303 x793)))
(assert (x3207 x3928))
(assert (= (x1668 x2085) (ite (= x1414 x2085) x4020 (x744 x2085))))
(assert (= (ite (= x802 x3357) x3348 (x3760 x802)) (x596 x802)))
(assert (x3207 x1022))
(assert (= (x641 x2413) (ite (and x3165 x2541 (not x92)) (x190 x2413) (x4112 x2413))))
(assert (= (x3619 x3475 96) (uninterp_mod (* x3475 79228162514264337593543950336) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (= (ite (= x723 x1489) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x2030 x723)) (x1267 x723)))
(assert (= (ite (= x3691 x2552) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x1274 x2552)) (x3303 x2552)))
(assert (= (x596 x3178) (ite (= x3178 x3357) x3348 (x3760 x3178))))
(assert (x3207 x3483))
(assert (x1257 x510 x2343))
(assert (= (ite (= x3310 x154) 0 (x720 x3310)) (x1751 x3310)))
(assert (= (ite (= x374 x3691) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x1274 x374)) (x3303 x374)))
(assert (x3207 x936))
(assert (= (=> (and (not (= 455944412 x3153)) (not (< x580 4)) (not (< x3153 455944412)) (= (x3060 (x2562 274184521717934524641157099916833587240)) x2657) (= x1281 (or (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1276) true) (> 320 x1276)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1276))) (= 511946350 x3153) (> x2657 0) (< x3153 2311529814) (= x1276 (x3402 (- x580 4))) (> 1166402363 x3153)) (and (=> (not x1281) x3861) (=> x1281 x1614))) x2777))
(assert (x3207 x997))
(assert (x188 x878))
(assert (x3207 x199))
(assert (x188 x167))
(assert (= (ite (= x1444 (x3377 0)) x2794 (x3228 x1444)) (x2369 x1444)))
(assert (= (ite (= x1024 x4230) 0 (x1337 x4230)) (x1728 x4230)))
(assert (= (=> (and (= x3188 (x3037 255 x3472)) (= x1147 (- (/ 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1229) (uninterp_frac 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1229))) (= (ite (< x1147 x584) 1 0) x1305) (= x551 (ite (not x635) 1 0)) (= x3456 (x3037 x551 x1305)) (= (= 0 x3456) x1129) (= (uninterp_mod (* x1657 x1229) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x2759) (= x3472 (- (/ x2299 5192296858534827628530496329220096) (uninterp_frac x2299 5192296858534827628530496329220096))) (= x2785 (x2515 (+ x2341 64))) (= (= 0 x2308) x635) (= x2299 (x2323 (x3377 1)))) (and (=> (not x1129) x3106) (=> x1129 x334))) x1134))
(assert (x188 x2202))
(assert (= (x3760 x1192) (ite (= x3326 x1192) x3497 (x4223 x1192))))
(assert (= x3063 (and x4274 (not x2980))))
(assert (x3207 x2122))
(assert (= (x1778 x723) (ite (= x723 x1966) x166 (x223 x723))))
(assert (= (x2125 x1742) (ite (and x1630 x919 (not x2339)) (x396 x1742) (x3992 x1742))))
(assert (= (x190 x1495) (ite (and x3165 x2649 x2541 x207 x64 (not x3115)) (x2396 x1495) (ite (and x2541 x64 (not x2649) x3165 x207) (x1924 x1495) (ite (and (not x207) x64 x2541 x3165) (x2625 x1495) (ite (and (not x64) x3165 x2541) (x2043 x1495) (x20 x1495)))))))
(assert (= (ite (= x1969 x682) x2633 (x1967 x682)) (x3553 x682)))
(assert (x3207 x1928))
(assert (x2954 x3415))
(assert (x3207 x2688))
(assert (x3207 x2774))
(assert (= 157198259 (x3641 (x3377 157198259))))
(assert (= x2328 (and x363 x2350)))
(assert (= (and x1532 x911) x1905))
(assert (= (x2396 x783) (ite (= x2789 x783) x1703 (x1924 x783))))
(assert (= (=> (= (= 274184521717934524641157099916833587240 x232) x220) (and (=> (and (not (= x2960 1858285468)) (not (= x2960 1845821197)) (or (and (= x3001 x3275) x3150 (= 0 x177)) (and (not x3150) (= 1 x177) (= 32 x3001) (= x1215 274184521717934524641157099916833587240) (= x1567 (x372 (x2562 274184521717934524641157099916833587240) (x3377 209) 0)) (= x764 (x1338 x1567)))) (< x2960 2311529814) x220 (not (= 1722255204 x2960)) (not (> 1166402363 x2960)) (= x3422 (x3402 (- x2067 4))) (= 50942633119752846454219349998365661925608737367104304655302372697894809501696 x1986) (not (< x2960 1722255204)) (= x2067 x1221) (= (x3060 (x2562 274184521717934524641157099916833587240)) x3452) (= x2067 36) (= (or (and (> 32 x3422) (= true (<= x3422 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (> x3422 57896044618658097711785492504343953926634992332820282019728792003956564819967)) x3150) (< 0 x3452) (= x2960 1889567281) (not (> 4 x2067))) x2331) (=> (not x220) x2360))) x2097))
(assert (x3207 x3357))
(assert (= (ite (and x2270 (not x914) x311) (x3990 x3093) (x448 x3093)) (x2288 x3093)))
(assert (x3207 x359))
(assert (x2020 x2823 x2905 x704 x3438))
(assert (x3207 x1379))
(assert (x3207 x3171))
(assert (= (and x1237 (not x3750)) x1578))
(assert (= x342 (=> (and (= (x372 (x2562 x2682) (x3377 208) 0) x1313) (= x2766 (x3037 115792089237316195423570985007226406215939081747436879206741300988257197096960 x3186)) (= x3186 (x2369 x1219)) (= x3714 x2766) (= (x1967 x1313) x3991) (= x4038 (= 0 x1597)) (= 0 x1280) (= (x3037 1461501637330902918203684832716283019655932542975 x3991) x1597) (= x1219 (x372 (x2562 x2682) (x3377 210) 0))) (and (=> (not x4038) x421) (=> x4038 x3162)))))
(assert (x3207 x2995))
(assert (= (ite (= x382 x3572) x1441 (x1338 x382)) (x2244 x382)))
(assert (x3207 x580))
(assert (= (x2562 904250603428552709895185118199468575982109441609966099573332780532423983104) (x3377 904250603428552709895185118199468575982109441609966099573332780532423983104)))
(assert (=> (< (- x1591 1) 10000) (= (x2562 x1591) (x3377 x1591))))
(assert (x3207 x1906))
(assert (= (=> (and (= x1855 (x3402 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4013))) (= (x372 (x2562 x122) (x3377 1) 0) x3807) (= (x372 (x2562 274184521717934524641157099916833587240) (x3377 1) 0) x1631) (= 274184521717934524641157099916833587240 x3928) (= (x1419 x3807) x2349) (= x3297 (> x2349 x1855)) (<= 0 x2349) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2349) (= x2186 (x3402 (- x1534 x4013)))) (and (=> (not x3297) x629) (=> x3297 x107))) x3944))
(assert (= (ite (and x1048 x818 x2946 x2580 (not x152) x1333) (x1367 x209) (ite (and x818 x2946 x2580 x1333 (not x1048)) (x688 x209) (ite (and x2946 x1333 (not x818) x2580) (x768 x209) (ite (and x2946 (not x1333) x2580) (x1950 x209) (x2636 x209))))) (x3837 x209)))
(assert (= (x3641 (x2562 x232)) x232))
(assert (x3207 x2742))
(assert (= (ite (and x3056 x2509 x3423 x4071 x483 (not x2859)) (x3436 x3789) (ite (and (not x483) x3056 x2509 x4071 x3423) (x979 x3789) (ite (and x4071 (not x3056) x2509 x3423) (x3898 x3789) (ite (and x3423 x4071 (not x2509)) (x1528 x3789) (x1623 x3789))))) (x3052 x3789)))
(assert (x3207 x2958))
(assert (= x3344 (and (not x109) x1949)))
(assert (= (x2708 x3487) (ite (and x3621 x2869 (not x2111)) (x799 x3487) (x2418 x3487))))
(assert (x3207 x3552))
(assert (= (=> (and (= (- (x3386 (x2562 x3879)) x1713) x2268) (= x3862 x4163) (= x1687 (< (+ x1713 (x1458 (x2562 274184521717934524641157099916833587240))) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= x1713 0) (= x234 x195) x1687 (= x2843 (x2515 (+ (uninterp_mod (x1458 (x2562 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x1713)))) x2167) x4175))
(assert (= (ite (= x3343 x2482) 0 (x1144 x2482)) (x3492 x2482)))
(assert (x3207 x3956))
(assert (= (and x2627 x545) x3535))
(assert (= (and x1085 x1975) x2242))
(assert (= (or (and x157 x47) (and x3410 x3374) (and x2065 x3942) (and x466 x2037) (and (not x1644) x3912) (and x247 x3886) (and x835 x2806) (and x3780 (not x676)) (and x1209 (not x880)) (and x4289 (not x3350)) (and x3530 (not x3633))) x1264))
(assert (= (x190 x3910) (ite (and x2649 x207 x64 x2541 (not x3115) x3165) (x2396 x3910) (ite (and x3165 x207 x2541 (not x2649) x64) (x1924 x3910) (ite (and x3165 (not x207) x2541 x64) (x2625 x3910) (ite (and x2541 (not x64) x3165) (x2043 x3910) (x20 x3910)))))))
(assert (= (ite (and x1955 x3892 (not x427)) (x1922 x10) (x549 x10)) (x2637 x10)))
(assert (= (ite (= x3070 (x3377 0)) x2794 (x3228 x3070)) (x2369 x3070)))
(assert (= (ite (= x1263 x2702) x147 (x518 x1263)) (x1371 x1263)))
(assert (x2954 x3784))
(assert (= (ite (= x3308 x960) x307 (x2245 x960)) (x440 x960)))
(assert (x3207 x2700))
(assert (x3207 x206))
(assert (= (x440 x2345) (ite (= x3308 x2345) x307 (x2245 x2345))))
(assert (= (x3303 x209) (ite (= x3691 x209) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x1274 x209))))
(assert (x3207 x1788))
(assert (= (x3036 x3317) (ite (= x3317 x3595) 274184521717934524641157099916833587240 (x1195 x3317))))
(assert (= (=> (and (= (x3037 1461501637330902918203684832716283019655932542975 x2599) x3318) (= x827 (< 0 x769)) (= (x3060 (x2562 x3318)) x769)) (and (=> x827 x4244) (=> (and (= x2390 x124) (= x2390 (x3040 (x2562 274184521717934524641157099916833587240))) (not x827) (= x1030 x1311)) x2865))) x2478))
(assert (x3207 x1617))
(assert (= (x4223 x1263) (ite (= x4143 x1263) x4131 (x2220 x1263))))
(assert (x3207 x4132))
(assert (= (x979 x3044) (ite (= x4041 x3044) x459 (x3898 x3044))))
(assert (= x1940 (and x3366 (not x1996))))
(assert (= (x2767 x374) (ite x2551 (ite x3934 (x703 x374) (ite x356 (x1572 x374) (x3694 x374))) (x703 x374))))
(assert (= x1154 (or (and (not x759) x2139) x3645)))
(assert (x3207 x883))
(assert (= (ite (and x3783 (not x1355) x141) (x239 x2402) (x3098 x2402)) (x1429 x2402)))
(assert (= (x3492 x4213) (ite (= x4213 x3343) 0 (x1144 x4213))))
(assert (= (x518 x2345) (ite (= x2345 x1678) x3841 (x2757 x2345))))
(assert (= (ite (and x4198 x919 x465 (not x3643) x1630 x3284) (x1880 x2552) (ite (and x4198 x465 (not x3284) x1630 x919) (x3392 x2552) (ite (and x919 (not x4198) x1630 x465) (x1668 x2552) (ite (and (not x465) x1630 x919) (x744 x2552) (x2231 x2552))))) (x396 x2552)))
(assert (x3207 x633))
(assert (x3207 x2799))
(assert (= (x1924 x2482) (ite (= x2482 x2977) x4123 (x2625 x2482))))
(assert (= (ite (= x1219 x714) x3714 (x2369 x714)) (x1967 x714)))
(assert (= (and (not x215) x1546) x3618))
(assert (x188 x2934))
(assert (= (and (not x1401) x2328) x4106))
(assert (= (=> (and (= x887 x293) (= x1387 (x3060 (x2562 x2583))) (= x930 (x2515 (+ x887 32))) (= x1355 (= 0 x1387)) (= (x2515 (+ 4 x1217)) x293) (= (x3037 1461501637330902918203684832716283019655932542975 x3478) x2491)) (and (=> (and (= (> x1262 0) x3783) (not x1355) (or (not x3783) (and (= x3028 (x3309 (x2562 x2583))) x3783 x3531 (= (x3309 (x2562 274184521717934524641157099916833587240)) x1318) x323 (> 4294967296 x2711) (= (= (x3468 (x2562 x2583)) x3028) x3531) (= (<= x1318 (x3468 (x2562 274184521717934524641157099916833587240))) x323)))) x3838) (=> x1355 x3106))) x418))
(assert (x3207 x973))
(assert (= x1878 (=> (and (< x3830 1166402363) (not (= 455944412 x3830)) (= (x3060 (x2562 274184521717934524641157099916833587240)) x2320) (= x2543 (x3402 (- x1689 4))) (< 0 x2320) (= x2822 (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2543) (and (> 320 x2543) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2543) true)))) (not (> 455944412 x3830)) (= x3830 511946350) (< x3830 2311529814) (not (< x1689 4))) (and (=> (not x2822) x3471) (=> x2822 x3106)))))
(assert (= (x1338 x3) (ite (= x3 x682) x1845 (x1488 x3))))
(assert (= (x518 x802) (ite (= x1678 x802) x3841 (x2757 x802))))
(assert (x3207 x3532))
(assert (x3207 x2712))
(assert (= (x1197 x3317) 0))
(assert (= (ite (= x3357 x3093) x3348 (x3760 x3093)) (x596 x3093)))
(assert (x2954 x551))
(assert (x3207 x3582))
(assert (x3207 x2287))
(assert (= (ite (= x1219 x534) x3714 (x2369 x534)) (x1967 x534)))
(assert (= x2529 (x3641 (x2562 x2529))))
(assert (x3207 x1463))
(assert (= (x799 x2785) (ite (and x4248 x761 x2869 x3621 (not x4082) x2885) (x596 x2785) (ite (and x4248 x761 x2869 (not x2885) x3621) (x3760 x2785) (ite (and x761 (not x4248) x3621 x2869) (x4223 x2785) (ite (and x2869 x3621 (not x761)) (x2220 x2785) (x530 x2785)))))))
(assert (= (ite (= (x3377 0) x1313) x2794 (x3228 x1313)) (x2369 x1313)))
(assert (= (ite x2551 (ite x3934 (x703 x3317) (ite x356 (x1572 x3317) (x3694 x3317))) (x703 x3317)) (x2767 x3317)))
(assert (= x96 (or x1973 x1121 x1222)))
(assert (x3207 x3813))
(assert (= (ite (= x3093 x2227) 98474297345890754025501882143967591664980152141971839855651084132735363579904 (x2668 x3093)) (x2055 x3093)))
(assert (= (x3641 (x3377 2514000705)) 2514000705))
(assert (x3207 x3312))
(assert (= (ite (= x10 x854) 98474297345890754025501882143967591664980152141971839855651084132735363579904 (x1772 x10)) (x549 x10)))
(assert (= x2428 (and (not x3334) x3412)))
(assert (x3207 x441))
(assert (= (x438 (- x2591 x1158)) 0))
(assert (x3207 x2818))
(assert (= (x641 x817) (ite (and x3165 (not x92) x2541) (x190 x817) (x4112 x817))))
(assert (= (x799 x1465) (ite (and x761 x2869 x3621 x2885 x4248 (not x4082)) (x596 x1465) (ite (and x3621 x2869 x761 x4248 (not x2885)) (x3760 x1465) (ite (and x3621 x761 (not x4248) x2869) (x4223 x1465) (ite (and x2869 x3621 (not x761)) (x2220 x1465) (x530 x1465)))))))
(assert (= (ite (= x4182 x2552) x1682 (x1668 x2552)) (x3392 x2552)))
(assert (= x3470 (and (not x4281) x4257)))
(assert (= (x3901 x3807) (ite (= x181 x3807) x2175 (x692 x3807))))
(assert (= (=> (and (< 0 x2901) (= x1476 (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1352) (and (> 64 x1352) (= (<= x1352 57896044618658097711785492504343953926634992332820282019728792003956564819967) true)))) (not (= x387 826074471)) (= (x3402 (- x3021 4)) x1352) (= x2529 x2937) (= x2659 x3223) (= x2901 (x3060 (x2562 274184521717934524641157099916833587206))) (= x3021 x1752) (= x2569 76450787359836037641860180984291677749980919077056822294353438043884394381312) (not (< x3021 4)) (= 68 x3021) (not (= x387 1889567281)) (not (> 826074471 x387)) (= x387 2835717307) (not (= 2514000705 x387))) (and (=> (not x1476) x2334) (=> x1476 x1047))) x4125))
(assert (= (x3760 x3789) (ite (= x3326 x3789) x3497 (x4223 x3789))))
(assert (= (ite (and x3165 (not x92) x2541) (x190 x3433) (x4112 x3433)) (x641 x3433)))
(assert (= (ite (and x2869 (not x2111) x3621) (x799 x3857) (x2418 x3857)) (x2708 x3857)))
(assert (= (ite (= x2537 x2474) x199 (x362 x2537)) (x2043 x2537)))
(assert (x3207 x615))
(assert (=> (< (- x888 1) 10000) (= (x2562 x888) (x3377 x888))))
(assert (x3207 x1089))
(assert (= (and x4218 x2680) x2718))
(assert (x3207 x3415))
(assert (= x157 (and x1239 x2677)))
(assert (x3207 x3062))
(assert (= 0 (x428 x2799)))
(assert (= (ite (= x3806 x999) 274184521717934524641157099916833587240 (x3929 x999)) (x1176 x999)))
(assert (x3207 x1616))
(assert (x3207 x551))
(assert (= (x126 256) (ite (= x1228 256) x3067 (x1442 256))))
(assert (= (x2125 x2413) (ite (and (not x2339) x1630 x919) (x396 x2413) (x3992 x2413))))
(assert (= (x2001 x1263) (ite (and x399 x1785) (x3100 x1263) (x1728 x1263))))
(assert (x3207 x2576))
(assert (= (x1880 x2413) (ite (= x2429 x2413) x2731 (x3392 x2413))))
(assert (= x1436 (and (not x1947) x1935)))
(assert (x1954 x2769 x612))
(assert (= (x979 x999) (ite (= x999 x4041) x459 (x3898 x999))))
(assert (x2579 x4089 x2158 x3240 x3927))
(assert (= (x3077 x3789) (ite (= x3789 x492) x890 (x1371 x3789))))
(assert (x627 x953 x1168 x3667 x4145))
(assert (= x807 (=> (and (= (not (= x2303 0)) x2187) (= (x372 (x2562 x1044) (x3377 208) 0) x658) (= x2303 (x3037 1461501637330902918203684832716283019655932542975 x1655)) (= x1655 (x2115 x658))) (and (=> (not x2187) x2903) (=> (and (= (= 274184521717934524641157099916833587240 x2180) x2286) (or (and (= x1125 (x372 (x2562 274184521717934524641157099916833587240) x3097 0)) (= x3400 x4262) (not x2286) (= (x2115 x1125) x3113) (= x4262 (x3037 255 x3113)) (= x3097 (x372 (x2562 x1469) (x3377 211) 0))) (and (= x3400 (ite x2286 1 0)) x2286)) (= (x3037 1461501637330902918203684832716283019655932542975 x1533) x2180) x2187 (= (x372 (x2562 x1044) (x3377 210) 0) x73) (= (x2115 x73) x1533)) x305)))))
(assert (= (x2220 x2799) (ite (= x2590 x2799) x1749 (x3842 x2799))))
(assert (x3207 x2794))
(assert (= (x3392 x783) (ite (= x4182 x783) x1682 (x1668 x783))))
(assert (x1589 x3415 x3854 x2888 x119))
(assert (= (ite (= x1495 x4182) x1682 (x1668 x1495)) (x3392 x1495)))
(assert (= (=> (and (= x2976 x570) (= x3267 (= x1974 x2596)) (= (x3037 1461501637330902918203684832716283019655932542975 x1974) x2596)) (and (=> (not x3267) x1614) (=> x3267 x2140))) x259))
(assert (x3207 x1044))
(assert (x3207 x993))
(assert (x3207 x61))
(assert (= x919 (and x2693 (not x2531))))
(assert (= (x3837 x2413) (ite (and x1333 x818 x2580 x1048 (not x152) x2946) (x1367 x2413) (ite (and (not x1048) x2580 x1333 x2946 x818) (x688 x2413) (ite (and x2946 x2580 x1333 (not x818)) (x768 x2413) (ite (and (not x1333) x2946 x2580) (x1950 x2413) (x2636 x2413)))))))
(assert (x3207 x4270))
(assert (x3207 x2305))
(assert (x3207 x1907))
(assert (x3207 x4152))
(assert (x2954 x3512))
(assert (x188 x2583))
(assert (x3207 x2471))
(assert (= (x641 x1111) (ite (and x2541 x3165 (not x92)) (x190 x1111) (x4112 x1111))))
(assert (x3207 x3567))
(assert (x3207 x3755))
(assert (x657 x4240 x3953))
(assert (x1025 x2933 x3683 x4194 x1729))
(assert (x3207 x1468))
(assert (x3207 x3067))
(assert (x2954 x1559))
(assert (= (ite (= x1414 x2552) x4020 (x744 x2552)) (x1668 x2552)))
(assert (= x589 (x3641 (x2562 x589))))
(assert (x3207 x2382))
(assert (= (and x931 x1436) x3112))
(assert (x3207 x3597))
(assert (= (x3152 (- x374 x303)) 0))
(assert (x3207 x930))
(assert (= x3723 (and x922 (not x698))))
(assert (= (x1924 x1111) (ite (= x2977 x1111) x4123 (x2625 x1111))))
(assert (= (ite (and x2002 x2947 (not x2387)) (x3818 x3910) (x1259 x3910)) (x703 x3910)))
(assert (= (=> (= (= 274184521717934524641157099916833587202 x474) x1304) (and (=> (not x1304) x689) (=> x1304 x155))) x3592))
(assert (= 0 (x428 x999)))
(assert (= (ite (and x2002 (not x2387) x2947) (x3818 x3433) (x1259 x3433)) (x703 x3433)))
(assert (x1589 x1781 x348 x1273 x2561))
(assert (x3207 x1220))
(assert (x3207 x1844))
(assert (x3207 x3348))
(assert (= (x219 x2715) (ite (= x2715 x1049) x983 (x2058 x2715))))
(assert (x3207 x1837))
(assert (= (=> (= x3430 (= x3879 274184521717934524641157099916833587206)) (and (=> x3430 x2779) (=> (not x3430) x1673))) x1230))
(assert (x3207 x1597))
(assert (x3207 x3308))
(assert (x3207 x4128))
(assert (= (or (and x2151 x437) (and x3945 x1103) (and x4094 x2622)) x2648))
(assert (= (ite (= x4143 x960) x4131 (x2220 x960)) (x4223 x960)))
(assert (x3207 x3918))
(assert (x3207 x3014))
(assert (x3207 x3504))
(assert (x3207 x3983))
(assert (= (or (and x1507 x249) (and x903 x2481) (and (not x2738) x2419) (and x2993 (not x347)) (and x3924 (not x2415)) (and x2914 x909) (and x3167 x3876) (and x3593 x678) (and (not x2628) x484) (and x2351 x1877) (and x655 (not x2006))) x2292))
(assert (x3207 x3361))
(assert (= (and (not x1565) x2438) x3316))
(assert (= x2177 (=> (= (> x3004 x3679) x3507) (and (=> (not x3507) x3579) (=> x3507 x31)))))
(assert (= x2869 (and x3907 x763)))
(assert (= (=> (and (>= x1534 0) (= 274184521717934524641157099916833587240 x1212) (= x2281 (x372 (x2562 274184521717934524641157099916833587240) (x3377 1) 0)) (= x1534 (x2632 x2281)) (= (< x1534 x4195) x609) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1534) (= x4013 x3646)) (and (=> (not x609) x196) (=> x609 x107))) x3029))
(assert (x657 x1046 x435))
(assert (x3207 x1542))
(assert (x3207 x1002))
(assert (= (=> (and (not (= 157198259 x1757)) (= 599290589 x1757) (= x3903 x103) (= x801 16156842317565293874272834530371880720966471053262404558597773956279093428224) (not (= 404098525 x1757)) (not (= x1757 117300739)) (not (< x103 4)) (> x3585 0) (= (x3402 (- x103 4)) x3335) (= x3704 x357) (= x1586 (or (> x3335 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3335) true) (> 96 x3335)))) (= (x3060 (x2562 274184521717934524641157099916833587202)) x3585) (> 826074471 x1757) (= 100 x103) (= x15 x1823)) (and (=> (not x1586) x3396) (=> x1586 x3556))) x520))
(assert (x3207 x3021))
(assert (= (x1298 x3300) (ite (= x3300 x637) x1658 (x842 x3300))))
(assert (= x2325 (=> (and (= x1565 (< x3109 1)) (= x3109 (x1338 (x3377 0)))) (and (=> (not x1565) x644) (=> x1565 x3106)))))
(assert (= (x1298 x1495) (ite (= x1495 x637) x1658 (x842 x1495))))
(assert (= (x2043 x3824) (ite (= x2474 x3824) x199 (x362 x3824))))
(assert (x3207 x2720))
(assert (= x1717 (=> (= x3517 (= 0 x2584)) (and (=> (not x3517) x885) (=> x3517 x3106)))))
(assert (= (=> (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3676) (<= 0 x3676) (= (x372 (x2562 x1399) (x3377 1) 0) x2559) (= x989 (< x3676 x58)) (= (x692 x2559) x3676) (= x2259 x1017)) (and (=> (not x989) x893) (=> x989 x1798))) x3074))
(assert (x3207 x4207))
(assert (= (ite (= x154 x417) 0 (x720 x417)) (x1751 x417)))
(assert (x3207 x3913))
(assert (= (x688 x209) (ite (= x209 x203) x1383 (x768 x209))))
(assert (x3207 x2031))
(assert (= (x1403 (x2562 x3515)) (ite (and x3018 (not x2087)) (x2598 (x2562 x3515)) (ite x1661 (ite x1350 (x3147 (x2562 x3515)) (x3309 (x2562 x3515))) (x3309 (x2562 x3515))))))
(assert (= (x2055 x1548) (ite (= x1548 x2227) 98474297345890754025501882143967591664980152141971839855651084132735363579904 (x2668 x1548))))
(assert (x3207 x76))
(assert (= (ite (= x815 (x3377 0)) x3798 (x4026 x815)) (x2115 x815)))
(assert (= x502 (=> (= (< 0 x2953) x1638) (and (=> (not x1638) x3106) (=> x1638 x2325)))))
(assert (x3207 x1841))
(assert (x3825 x2821 x843))
(assert (= (and (not x145) x1647) x3686))
(assert (x2954 x579))
(assert (x3207 x3827))
(assert (= (x1298 x4213) (ite (= x4213 x637) x1658 (x842 x4213))))
(assert (x3207 x130))
(assert (= (and (not x3431) x353) x320))
(assert (= (=> (and (= x1789 0) (= x566 x1740)) x361) x2210))
(assert (= (x3641 (x2562 x2682)) x2682))
(assert (= (x3098 x2591) (ite (= x2591 x930) x24 (x3720 x2591))))
(assert (= (and (not x4180) x133) x771))
(assert (x3207 x2186))
(assert (= (ite (= x682 x534) x1845 (x1488 x534)) (x1338 x534)))
(assert (= (ite (and (not x631) x311 x2270 x2608 x581 x4093) (x2837 x2990) (ite (and x581 x311 x4093 (not x2608) x2270) (x3077 x2990) (ite (and x2270 x311 x581 (not x4093)) (x1371 x2990) (ite (and (not x581) x311 x2270) (x518 x2990) (x3794 x2990))))) (x3990 x2990)))
(assert (x3207 x2494))
(assert (= (x190 x1111) (ite (and (not x3115) x2541 x3165 x64 x2649 x207) (x2396 x1111) (ite (and x3165 x207 x2541 (not x2649) x64) (x1924 x1111) (ite (and (not x207) x2541 x64 x3165) (x2625 x1111) (ite (and x3165 x2541 (not x64)) (x2043 x1111) (x20 x1111)))))))
(assert (= (ite (and x2270 (not x914) x311) (x3990 x960) (x448 x960)) (x2288 x960)))
(assert (= (x2637 x1495) (ite (and (not x427) x1955 x3892) (x1922 x1495) (x549 x1495))))
(assert (x3207 x3646))
(assert (x3207 x805))
(assert (x3207 x836))
(assert (= (x3641 (x3377 274184521717934524641157099916833587202)) 274184521717934524641157099916833587202))
(assert (= x2033 (and (not x2088) x279)))
(assert (x3207 x1681))
(assert (x3207 x3393))
(assert (= 98474297345890754025501882143967591664980152141971839855651084132735363579904 (x3641 (x3377 98474297345890754025501882143967591664980152141971839855651084132735363579904))))
(assert (= (x3403 x4065) (ite (= x1672 x4065) x1180 (x1363 x4065))))
(assert (x3207 x1783))
(assert (x2579 x178 x4078 x2157 x3339))
(assert (= x2189 (or (and x370 x2178) (and (not x1638) x456) (and x3018 x2087) (and x3878 (not x3233)) (and x577 (not x1537)) (and x3715 (not x1916)) (and x475 x3564) (and (not x1777) x1204) (and x3817 x1164) (and x2380 x2567) (and (not x1437) x2605) (and x2691 x4007) (and x4151 (not x1099)) (and (not x810) x1306) (and x222 x540) (and (not x763) x3907) (and x141 x1355) (and x1138 x891) (and x779 x1418) (and (not x449) x3745) (and (not x1160) x3104) (and x3462 x274) (and (not x2638) x2755) (and x1914 x650) (and (not x2208) x2547) (and x3711 x3517) (and x1565 x2438) (and x1562 (not x3235)) (and x2526 (not x1505)) (and x2163 x3180) (and x184 x3481) (and x3424 x4060) (and x2324 x1580) (and x83 x3316) (and x96 x3977) (and x2893 x351) (and x698 x922) (and x3364 x901) (and (not x407) x516) (and (not x4071) x3423) (and x1066 x1643) (and x386 x4247) (and x1948 x3467) (and x295 x2179) (and x3432 x95) (and x2114 x345) (and x2424 x2550) (and x1014 (not x2510)) (and x925 x1577) (and x433 x1150) (and x2999 x2117) (and x3723 x2734) (and (not x1532) x911) (and x1821 x2298) (and x2439 (not x1129)) (and x1421 x4208) (and x1128 (not x1415)) (and x1913 x4076) (and x2181 x2296) (and (not x2480) x772) (and x399 (not x1785)) (and x2034 x3383) (and x2904 x2822) (and (not x238) x2948) (and x266 x1420) (and x1905 x819))))
(assert (x3207 x2129))
(assert (x3207 x3487))
(assert (= (ite (and x3779 x617) (x1039 x374) (x2497 x374)) (x257 x374)))
(assert (x3207 x3236))
(assert (= (and x1402 (not x3684)) x4292))
(assert (x3207 x3676))
(assert (= x108 (or (and x2922 (not x2791)) x860)))
(assert (x3207 x1791))
(assert (= (=> (and (= x1085 (= x3515 274184521717934524641157099916833587206)) x1169 (= (x1403 (x2562 274184521717934524641157099916833587240)) x2409) (= x1169 (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x439 (x2562 x3515)))) (= x1917 (x439 (x2562 x3515)))) (and (=> x1085 x2929) (=> (not x1085) x660))) x957))
(assert (x3207 x3358))
(assert (x3207 x56))
(assert (= x3986 (or (and x974 x4038) (and x812 (not x3168)) (and (not x1484) x240) (and (not x1870) x2314) (and (not x603) x894) (and x2760 x3182) (and x1011 x2503) (and x590 x1061) (and x3017 x3460) (and x1151 x1836) (and (not x3234) x1010))))
(assert (x3207 x261))
(assert (x3207 x3518))
(assert (= (x4223 x1474) (ite (= x4143 x1474) x4131 (x2220 x1474))))
(assert (= (x1668 x1463) (ite (= x1414 x1463) x4020 (x744 x1463))))
(assert (= (x1668 x1742) (ite (= x1742 x1414) x4020 (x744 x1742))))
(assert (x3207 x2118))
(assert (x188 x1341))
(assert (= (x799 x3789) (ite (and x2885 x3621 x4248 (not x4082) x761 x2869) (x596 x3789) (ite (and x761 x4248 x3621 (not x2885) x2869) (x3760 x3789) (ite (and x2869 (not x4248) x3621 x761) (x4223 x3789) (ite (and (not x761) x2869 x3621) (x2220 x3789) (x530 x3789)))))))
(assert (= (ite (= x817 x3069) x2454 (x3672 x817)) (x1814 x817)))
(assert (= x3018 (and (not x1821) x2298)))
(assert (= (x1728 x1263) (ite (= x1024 x1263) 0 (x1337 x1263))))
(assert (= x265 (=> (and (> x715 0) (= x3761 16156842317565293874272834530371880720966471053262404558597773956279093428224) (= 599290589 x2211) (= x715 (x3060 (x2562 274184521717934524641157099916833587202))) (= x1478 (or (> x1684 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (> 96 x1684) (= true (<= x1684 57896044618658097711785492504343953926634992332820282019728792003956564819967))))) (not (= 404098525 x2211)) (= x1199 100) (not (= 117300739 x2211)) (= x1684 (x3402 (- x1199 4))) (not (= x2211 157198259)) (= x32 x1284) (= x1199 x165) (= x3173 x2620) (> 826074471 x2211) (not (< x1199 4))) (and (=> (not x1478) x2141) (=> x1478 x2210)))))
(assert (= (ite (and x3892 x1955 (not x427)) (x1922 x1485) (x549 x1485)) (x2637 x1485)))
(assert (= (ite (= x492 x2785) x890 (x1371 x2785)) (x3077 x2785)))
(assert (= (x975 x2281) (ite (and x1785 x399) (ite (and x1101 x3424 (not x4060)) (x3526 x2281) (x1868 x2281)) (x1868 x2281))))
(assert (x3207 x2762))
(assert (= x565 (and (not x2808) x2121)))
(assert (x3207 x245))
(assert (= (and (not x1586) x3112) x4239))
(assert (= (x1668 x4213) (ite (= x1414 x4213) x4020 (x744 x4213))))
(assert (x3207 x544))
(assert (= (ite (and x296 (not x1914) x650) (x116 x1548) (x2055 x1548)) (x858 x1548)))
(assert (x3207 x212))
(assert (x3207 x1311))
(assert (= x1384 (=> (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2786) (<= 0 x2786) (= (x695 x3705) x2786) (= (x372 (x2562 x871) (x3377 1) 0) x3705) (= x1275 x2083) (= (> x32 x2786) x3960)) (and (=> (not x3960) x1732) (=> x3960 x1982)))))
(assert (x3207 x3015))
(assert (= x355 (=> (and (= x3806 x3755) (= (x2515 (+ 36 x1217)) x1782) (= x139 (x3037 1461501637330902918203684832716283019655932542975 x3478)) (= (= 0 x426) x2114) (= 274184521717934524641157099916833587240 x2690) (= x426 (x3060 (x2562 x139))) (= (x3402 (- x1782 x1217)) x3269) (= (x2515 (+ x1217 4)) x3755)) (and (=> x2114 x3106) (=> (not x2114) x3747)))))
(assert (x657 x159 x2239))
(assert (= (ite (= x723 x1228) x3067 (x1442 x723)) (x126 x723)))
(assert (= x1179 (=> (= (> x2845 0) x1862) (and (=> x1862 x1535) (=> (not x1862) x1614)))))
(assert (x3207 x354))
(assert (= (ite (= x1105 x3069) x2454 (x3672 x1105)) (x1814 x1105)))
(assert (= (x190 x1485) (ite (and x3165 x2649 x207 x64 (not x3115) x2541) (x2396 x1485) (ite (and x64 x2541 x3165 x207 (not x2649)) (x1924 x1485) (ite (and x64 x2541 x3165 (not x207)) (x2625 x1485) (ite (and x3165 (not x64) x2541) (x2043 x1485) (x20 x1485)))))))
(assert (= (ite (= x1024 x2591) 0 (x1337 x2591)) (x1728 x2591)))
(assert (= (x1298 256) (ite (= 256 x637) x1658 (x842 256))))
(assert (= (x2497 x3300) (ite (= x3300 x402) 0 (x1736 x3300))))
(assert (x3207 x890))
(assert (= (ite (= x2465 x2227) 98474297345890754025501882143967591664980152141971839855651084132735363579904 (x2668 x2465)) (x2055 x2465)))
(assert (= (x1716 x1263) (ite (and (not x2978) x3423 x4071) (x3052 x1263) (x3389 x1263))))
(assert (= (ite (= x682 x3276) x1845 (x1488 x3276)) (x1338 x3276)))
(assert (= (=> (and (= (x3402 (- x1295 4)) x1563) (not (= 404098525 x2073)) (not (> 4 x1295)) (not (= 157198259 x2073)) (= x2735 (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1563) (and (< x1563 96) (= true (<= x1563 57896044618658097711785492504343953926634992332820282019728792003956564819967))))) (= x1295 100) (= (x3060 (x2562 274184521717934524641157099916833587202)) x4022) (= x2071 x1295) (= x3008 x4300) (> 826074471 x2073) (> x4022 0) (not (= x2073 117300739)) (= x2073 599290589) (= 16156842317565293874272834530371880720966471053262404558597773956279093428224 x3949) (= x2194 x58)) (and (=> x2735 x128) (=> (not x2735) x1238))) x2032))
(assert (= x3773 (=> (and (= x3440 (x372 (x2562 274184521717934524641157099916833587240) (x3377 209) 0)) (= (x3402 (- x3631 1)) x3763) (= (x3628 x3440) x2612) (= x3942 (> x2612 115792089237316195423570985008687907853269984665640564039457584007913129639934))) (and (=> (and (= (x48 x2450) x1970) (not x3942) (= (x2515 (+ x2612 1)) x1706) (= x3931 0) (= (x2515 (+ x3133 274184521717934524641157099916833587240)) x821) (= (x3037 115792089237316195423570985007226406215939081747436879206741300988257197096960 x1970) x3133) (= (x372 (x2562 x2202) (x3377 208) 0) x2450) (= x825 1)) x1004) (=> x3942 x1360)))))
(assert (x3207 x1342))
(assert (= (and x2656 x4239) x1574))
(assert (= x2963 (x3641 (x2562 x2963))))
(assert (= 0 (x428 224)))
(assert (= x3744 (=> (= x1160 (< 0 x3134)) (and (=> (not x1160) x3106) (=> x1160 x1122)))))
(assert (x3207 x153))
(assert (x3207 x928))
(assert (= (ite (= x2104 x3069) x2454 (x3672 x2104)) (x1814 x2104)))
(assert (x3207 x4156))
(assert (= (ite (= x1465 x2227) 98474297345890754025501882143967591664980152141971839855651084132735363579904 (x2668 x1465)) (x2055 x1465)))
(assert (x3207 x2563))
(assert (= (x1197 x817) 0))
(assert (x2954 x2823))
(assert (= (x3690 x3915) (ite (= x557 x3915) x3365 (x1260 x3915))))
(assert (= (x2043 x3725) (ite (= x3725 x2474) x199 (x362 x3725))))
(assert (= x2426 (=> (and (not (< x130 455944412)) (= (or (and (> 96 x102) (= (<= x102 57896044618658097711785492504343953926634992332820282019728792003956564819967) true)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x102)) x1061) (not (= 455944412 x130)) (= x114 16156842317565293874272834530371880720966471053262404558597773956279093428224) (= x357 x2682) (< 0 x1016) (= x102 (x3402 (- x2707 4))) (< x130 1166402363) (not (< x2707 4)) (= x1016 (x3060 (x2562 274184521717934524641157099916833587240))) (= x2707 100) (not (= x130 511946350)) (> 2311529814 x130) (= x1823 x2720) (= x130 599290589) (= x2707 x3903)) (and (=> x1061 x3162) (=> (not x1061) x2401)))))
(assert (= x298 (x3641 (x2562 x298))))
(assert (x3207 x636))
(assert (= (x3760 x2990) (ite (= x3326 x2990) x3497 (x4223 x2990))))
(assert (= (ite (and x399 x1785) (ite (and x1101 (not x4060) x3424) (x1247 x292) (x3006 x292)) (x3006 x292)) (x1864 x292)))
(assert (= (ite (= x682 x1444) x1845 (x1488 x1444)) (x1338 x1444)))
(assert (= x2568 (x3641 (x2562 x2568))))
(assert (x3207 x765))
(assert (x3207 x2538))
(assert (= x185 (x3641 (x2562 x185))))
(assert (= (=> (and (= (x3060 (x2562 x232)) x3753) (= x2240 (x2515 (+ x1062 4))) (= x1221 (x3402 (- x2958 x1062))) (= x2958 (x2515 (+ x1062 36))) (= x738 274184521717934524641157099916833587240) (= x232 (x3037 1461501637330902918203684832716283019655932542975 x3478)) (= (= 0 x3753) x2117) (= x2240 x2005)) (and (=> x2117 x3106) (=> (not x2117) x2097))) x1571))
(assert (= (ite (and (not x554) x1204 x1511 x956 x1777 x4252) (x1778 x2591) (ite (and x1204 x1777 x956 (not x4252) x1511) (x223 x2591) (ite (and (not x1511) x1777 x1204 x956) (x1156 x2591) (ite (and x1777 x1204 (not x956)) (x1267 x2591) (x3748 x2591))))) (x1461 x2591)))
(assert (x3207 x15))
(assert (= (x2562 26959946667150639794667015087019630673637144422540572481103610249216) (x3377 26959946667150639794667015087019630673637144422540572481103610249216)))
(assert (x3207 x2743))
(assert (= (ite (= x2977 x938) x4123 (x2625 x938)) (x1924 x938)))
(assert (x3207 x888))
(assert (= (ite (= x101 x2146) x3659 (x695 x2146)) (x3754 x2146)))
(assert (x3207 x861))
(assert (x3207 x2491))
(assert (x657 x958 x848))
(assert (x3207 x1613))
(assert (= (x2425 x817) (ite (= x817 x1406) x4102 (x3278 x817))))
(assert (x3207 x3496))
(assert (x3207 x2174))
(assert (= (ite (= x854 x1495) 98474297345890754025501882143967591664980152141971839855651084132735363579904 (x1772 x1495)) (x549 x1495)))
(assert (x3207 x237))
(assert (x3207 x1793))
(assert (x3207 x871))
(assert (= (x596 x1606) (ite (= x1606 x3357) x3348 (x3760 x1606))))
(assert (x3207 x4258))
(assert (= (x3760 x3085) (ite (= x3326 x3085) x3497 (x4223 x3085))))
(assert (= (ite (= x3789 x930) x24 (x3720 x3789)) (x3098 x3789)))
(assert (= (x518 x2591) (ite (= x1678 x2591) x3841 (x2757 x2591))))
(assert (= (ite (= x4186 x2464) x3647 (x2115 x4186)) (x1363 x4186)))
(assert (= (x744 x2413) (ite (= x422 x2413) x3522 (x923 x2413))))
(assert (x188 x15))
(assert (= x1421 (and (not x266) x1420)))
(assert (= (ite (= x2132 x709) x2762 (x219 x709)) (x3428 x709)))
(assert (= x3347 (=> (= x793 (= x1493 274184521717934524641157099916833587240)) (and (=> (not x793) x948) (=> x793 x1070)))))
(assert (= (x3278 x817) (ite (= x817 x4271) x3187 (x3303 x817))))
(assert (= (x3990 x999) (ite (and x2270 x581 x4093 (not x631) x2608 x311) (x2837 x999) (ite (and x581 x311 x4093 (not x2608) x2270) (x3077 x999) (ite (and x2270 (not x4093) x581 x311) (x1371 x999) (ite (and (not x581) x2270 x311) (x518 x999) (x3794 x999)))))))
(assert (= (ite (and x919 x465 x3284 x1630 (not x3643) x4198) (x1880 x2413) (ite (and x465 x4198 x1630 (not x3284) x919) (x3392 x2413) (ite (and x919 x465 (not x4198) x1630) (x1668 x2413) (ite (and x919 (not x465) x1630) (x744 x2413) (x2231 x2413))))) (x396 x2413)))
(assert (x657 x1336 x4211))
(assert (= (ite (= x3357 x2889) x3348 (x3760 x2889)) (x596 x2889)))
(assert (x3207 x3306))
(assert (= (x2125 x374) (ite (and x919 (not x2339) x1630) (x396 x374) (x3992 x374))))
(assert (= (=> (and (= x3168 (not (= 0 x4044))) (= x3722 (x2369 x2156)) (= x2156 (x372 (x2562 x2682) (x3377 208) 0)) (= x4044 (x3037 1461501637330902918203684832716283019655932542975 x3722))) (and (=> (not x3168) x3162) (=> (and (= (x2369 x2737) x2048) x3168 (= x2737 (x372 (x2562 x2682) (x3377 210) 0)) (= (x3037 1461501637330902918203684832716283019655932542975 x2048) x3050) (= (= x3050 274184521717934524641157099916833587240) x1307) (or (and (= x329 (x372 (x2562 x1096) (x3377 211) 0)) (= (x3037 255 x2965) x3913) (= (x2369 x3404) x2965) (= x3404 (x372 (x2562 274184521717934524641157099916833587240) x329 0)) (= x3913 x3033) (not x1307)) (and x1307 (= x3033 (ite x1307 1 0))))) x1245))) x2857))
(assert (x3207 x1005))
(assert (= (x257 x4104) (ite (and x3779 x617) (x1039 x4104) (x2497 x4104))))
(assert (= (ite (= x2104 x1364) x32 (x1919 x2104)) (x383 x2104)))
(assert (x3207 x2868))
(assert (x3207 x3648))
(assert (x3207 x3385))
(assert (= x2555 (and x2802 x3729)))
(assert (x3207 x4107))
(assert (x2954 x2570))
(assert (x3207 x3287))
(assert (x3207 x2994))
(assert (x3207 x3884))
(assert (x3207 x3118))
(assert (x3207 x2657))
(assert (= (ite (= x1606 x2227) 98474297345890754025501882143967591664980152141971839855651084132735363579904 (x2668 x1606)) (x2055 x1606)))
(assert (x3207 x403))
(assert (x3207 x3841))
(assert (x3207 x422))
(assert (x3207 x1931))
(assert (x657 x2752 x4033))
(assert (x3207 x1387))
(assert (x2954 x3186))
(assert (x2954 x4089))
(assert (x3207 x1216))
(assert (= (x270 x3910) (ite (and x2803 (not x35) x3657) (x1688 x3910) (x383 x3910))))
(assert (= (x2708 x2465) (ite (and (not x2111) x3621 x2869) (x799 x2465) (x2418 x2465))))
(assert (x3207 x841))
(assert (= (ite (= x1672 x756) x1180 (x1363 x756)) (x3403 x756)))
(assert (x3207 x3178))
(assert (x3207 x2104))
(assert (= (ite x2551 (ite x3934 (x703 x817) (ite x356 (x1572 x817) (x3694 x817))) (x703 x817)) (x2767 x817)))
(assert (x3207 x2540))
(assert (x3207 x3109))
(assert (x3207 x1040))
(assert (x3207 x1172))
(assert (= (x1751 x802) (ite (= x802 x154) 0 (x720 x802))))
(assert (= (and x3064 (not x60)) x3835))
(assert (= x379 (=> (and (= (x3037 1461501637330902918203684832716283019655932542975 x3478) x2479) (= (x3060 (x2562 x2479)) x3092) (= x384 (< 0 x3092)) (= x4195 (x3501 x2785))) (and (=> x384 x1838) (=> (not x384) x1434)))))
(assert (= (ite (and x2002 x2701 x559 x2947 x791 (not x1018)) (x531 x817) (ite (and x791 x2947 x2002 (not x559) x2701) (x2425 x817) (ite (and x2701 x2002 x2947 (not x791)) (x3278 x817) (ite (and x2002 (not x2701) x2947) (x3303 x817) (x1994 x817))))) (x3818 x817)))
(assert (x3207 x3995))
(assert (x3207 x1133))
(assert (= x2469 (or (and x2187 x2918) (and x710 x4167))))
(assert (= x3162 (=> (= x3393 0) x2342)))
(assert (= (ite (and x2580 (not x4087) x2946) (x3837 x2413) (x1454 x2413)) (x2455 x2413)))
(assert (= (ite (= x374 x854) 98474297345890754025501882143967591664980152141971839855651084132735363579904 (x1772 x374)) (x549 x374)))
(assert (= (ite (= x3326 x2010) x3497 (x4223 x2010)) (x3760 x2010)))
(assert (x3207 x2872))
(assert (= 0 (x1197 x1193)))
(assert (x2954 x1065))
(assert (= x305 (=> (= (< 0 x3400) x2272) (and (=> (not x2272) x2903) (=> x2272 x2441)))))
(assert (x3207 x3730))
(assert (= (ite (= x3044 x4143) x4131 (x2220 x3044)) (x4223 x3044)))
(assert (= x3321 (x3641 (x2562 x3321))))
(assert (= (x3403 x1707) (ite (= x1672 x1707) x1180 (x1363 x1707))))
(assert (= (x1864 x4295) (ite (and x1785 x399) (ite (and x1101 (not x4060) x3424) (x1247 x4295) (x3006 x4295)) (x3006 x4295))))
(assert (x3207 x3559))
(assert (x3207 x2572))
(assert (= (x2288 x3044) (ite (and x311 x2270 (not x914)) (x3990 x3044) (x448 x3044))))
(assert (x3207 x159))
(assert (x3207 x4055))
(assert (= x1493 (x3641 (x2562 x1493))))
(assert (= (x1363 x756) (ite (= x2464 x756) x3647 (x2115 x756))))
(assert (= (x4255 x2126) (ite (= x2126 x2253) x1502 (x394 x2126))))
(assert (= (ite (= x999 x3326) x3497 (x4223 x999)) (x3760 x999)))
(assert (x3207 x628))
(assert (x3207 x2991))
(assert (= (ite (= x1541 x101) x3659 (x695 x1541)) (x3754 x1541)))
(assert (x3207 x3763))
(assert (= (ite (= x3317 x4271) x3187 (x3303 x3317)) (x3278 x3317)))
(assert (= (ite (= x3317 x2474) x199 (x362 x3317)) (x2043 x3317)))
(assert (= (x1371 x4230) (ite (= x4230 x2702) x147 (x518 x4230))))
(assert (x3207 x3281))
(assert (= (x2369 x3572) (ite (= x3572 (x3377 0)) x2794 (x3228 x3572))))
(assert (= (x190 x3118) (ite (and x64 (not x3115) x207 x2649 x3165 x2541) (x2396 x3118) (ite (and x207 x64 x2541 (not x2649) x3165) (x1924 x3118) (ite (and x3165 (not x207) x2541 x64) (x2625 x3118) (ite (and x3165 (not x64) x2541) (x2043 x3118) (x20 x3118)))))))
(assert (x657 x4220 x1132))
(assert (= (x2055 x3044) (ite (= x3044 x2227) 98474297345890754025501882143967591664980152141971839855651084132735363579904 (x2668 x3044))))
(assert (x3207 x3195))
(assert (x3207 x51))
(assert (x3207 x2318))
(assert (= (ite (= x209 x3469) x4144 (x2425 x209)) (x531 x209)))
(assert (x2954 x1970))
(assert (=> (< (- x3764 1) 10000) (= (x3377 x3764) (x2562 x3764))))
(assert (= (x3377 76450787359836037641860180984291677749980919077056822294353438043884394381312) (x2562 76450787359836037641860180984291677749980919077056822294353438043884394381312)))
(assert (= (and x3971 x601) x1440))
(assert (x3207 x3638))
(assert (x3207 x368))
(assert (= (ite (= x4143 x1788) x4131 (x2220 x1788)) (x4223 x1788)))
(assert (x3207 x273))
(assert (= 0 (x3152 (- x1105 x303))))
(assert (x3207 x2429))
(assert (= (or (and x363 (not x2350)) (and x1940 x2113) (and x4281 x4257) (and x4106 x3250) (and x3241 x4172) (and x1996 x3366) (and x2263 x3470) (and x2328 x1401)) x127))
(assert (= (ite (= x960 x1024) 0 (x1337 x960)) (x1728 x960)))
(assert (= (x799 x172) (ite (and x2869 x4248 (not x4082) x2885 x761 x3621) (x596 x172) (ite (and x4248 x2869 (not x2885) x3621 x761) (x3760 x172) (ite (and x3621 x761 x2869 (not x4248)) (x4223 x172) (ite (and x3621 (not x761) x2869) (x2220 x172) (x530 x172)))))))
(assert (= (ite (and x761 x2885 x3621 (not x4082) x2869 x4248) (x596 x960) (ite (and x3621 x761 (not x2885) x4248 x2869) (x3760 x960) (ite (and x761 x2869 x3621 (not x4248)) (x4223 x960) (ite (and x3621 x2869 (not x761)) (x2220 x960) (x530 x960))))) (x799 x960)))
(assert (x188 x2568))
(assert (= (ite (= x2132 x1438) x2762 (x219 x1438)) (x3428 x1438)))
(assert (= (ite (= x3093 x1190) x419 (x1528 x3093)) (x3898 x3093)))
(assert (= (x3052 x2785) (ite (and x2509 x3056 (not x2859) x4071 x3423 x483) (x3436 x2785) (ite (and x2509 x3423 (not x483) x4071 x3056) (x979 x2785) (ite (and x2509 x4071 x3423 (not x3056)) (x3898 x2785) (ite (and (not x2509) x4071 x3423) (x1528 x2785) (x1623 x2785)))))))
(assert (= x1446 (or (and x1359 x4202) (and x526 x625) (and x609 x2555) (and x3729 (not x2802)) (and x1840 x3297) (and x2242 x4121))))
(assert (= (ite (= x3300 x2474) x199 (x362 x3300)) (x2043 x3300)))
(assert (= x1965 (or (and x2086 x586) x136)))
(assert (x3207 x3862))
(assert (x3207 x1869))
(assert (= (and (not x1712) x3686) x2805))
(assert (= (ite (= x3093 x2005) 274184521717934524641157099916833587240 (x4226 x3093)) (x1214 x3093)))
(assert (= (x428 x3789) 0))
(assert (= (ite (= x2977 x2552) x4123 (x2625 x2552)) (x1924 x2552)))
(assert (= (x2115 x4010) (ite (= x4010 (x3377 0)) x3798 (x4026 x4010))))
(assert (x3207 x1576))
(assert (= (=> (and (= x3426 (x3384 (x3377 0))) (= (> 1 x3426) x2461)) (and (=> (not x2461) x140) (=> x2461 x1614))) x3154))
(assert (x3207 x3806))
(assert (= (ite (= x682 x2894) x1845 (x1488 x2894)) (x1338 x2894)))
(assert (= (x2220 x2345) (ite (= x2345 x2590) x1749 (x3842 x2345))))
(assert (x3207 x1178))
(assert (= x590 (and x2911 x4097)))
(assert (= x2815 (=> (and (= 274184521717934524641157099916833587240 x1300) (= (x372 (x2562 274184521717934524641157099916833587240) x1078 0) x2168) (= x3322 (x3490 x2168)) (<= x3322 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= x3322 0) (= 274184521717934524641157099916833587240 x2417) (= (x372 (x2562 274184521717934524641157099916833587240) (x3377 1) 0) x3341) (= (x372 (x2562 x871) (x3377 2) 0) x1078) (= (> x1275 x3322) x1116)) (and (=> (not x1116) x1324) (=> x1116 x1982)))))
(assert (x3207 x510))
(assert (x3207 x943))
(assert (x3207 x2698))
(assert (x2954 255))
(assert (x3207 x3252))
(assert (= (ite (= x3326 x3857) x3497 (x4223 x3857)) (x3760 x3857)))
(assert (= (or x193 (and x3568 (not x1000))) x2153))
(assert (= (x531 x2104) (ite (= x2104 x3469) x4144 (x2425 x2104))))
(assert (x2954 x4220))
(assert (x3207 x3943))
(assert (x3207 x3742))
(assert (x3207 x2309))
(assert (= (=> (and (= x1514 (x372 (x2562 x3173) (x3377 1) 0)) (= (x3402 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1284)) x4229) (= (x3402 (- x2890 x1284)) x2003) (>= x820 0) (= (x1260 x3270) x820) (<= x820 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (< x4229 x820) x1995) (= (x372 (x2562 274184521717934524641157099916833587240) (x3377 1) 0) x3270) (= x2025 274184521717934524641157099916833587240)) (and (=> x1995 x2210) (=> (not x1995) x575))) x4014))
(assert (x188 x2529))
(assert (x3207 x1604))
(assert (= x3288 (=> (= (= x3047 0) x779) (and (=> x779 x3106) (=> (not x779) x4302)))))
(assert (= (x383 x3317) (ite (= x3317 x1364) x32 (x1919 x3317))))
(assert (= (x3403 x563) (ite (= x563 x1672) x1180 (x1363 x563))))
(assert (x657 x2136 x863))
(assert (=> (> (+ 10000 1) x1908) (= (x3377 x1908) (x2562 x1908))))
(assert (x3207 x4215))
(assert (= (ite (= x1548 x3326) x3497 (x4223 x1548)) (x3760 x1548)))
(assert (= (and x2215 (not x3430)) x1923))
(assert (= (ite (= x3069 x2085) x2454 (x3672 x2085)) (x1814 x2085)))
(assert (= (x257 x1485) (ite (and x617 x3779) (x1039 x1485) (x2497 x1485))))
(assert (= (x190 x2482) (ite (and x64 x207 x3165 x2541 x2649 (not x3115)) (x2396 x2482) (ite (and (not x2649) x64 x207 x2541 x3165) (x1924 x2482) (ite (and x64 (not x207) x3165 x2541) (x2625 x2482) (ite (and x3165 (not x64) x2541) (x2043 x2482) (x20 x2482)))))))
(assert (x3207 x496))
(assert (= (ite (= x4230 x2227) 98474297345890754025501882143967591664980152141971839855651084132735363579904 (x2668 x4230)) (x2055 x4230)))
(assert (x3207 x3045))
(assert (= (x126 x999) (ite (= x999 x1228) x3067 (x1442 x999))))
(assert (x3207 x1932))
(assert (x3207 x1526))
(assert (x3207 x301))
(assert (= (x3377 37714057306076988483118529490347679105585116642029194716945419020321082336612) (x2562 37714057306076988483118529490347679105585116642029194716945419020321082336612)))
(assert (x3207 x648))
(assert (x2954 x3114))
(assert (= (ite (= x2977 x1463) x4123 (x2625 x1463)) (x1924 x1463)))
(assert (x3207 x3327))
(assert (= (and x157 (not x47)) x3780))
(assert (x3207 x1485))
(assert (x3207 x2557))
(assert (x3207 x1939))
(assert (= (ite (= x723 x492) x890 (x1371 x723)) (x3077 x723)))
(assert (= (x1881 (x3816 x2392 x533 x1657 x1763 x3279 x952 x4009 x980 x3417)) 0))
(assert (x657 x2651 x2099))
(assert (= (x1363 x2450) (ite (= x2450 x2464) x3647 (x2115 x2450))))
(assert (= (x3309 (x2562 x3515)) (ite (and x399 x1785) (ite (and x3424 (not x4060) x1101) (x1696 (x2562 x3515)) (x2675 (x2562 x3515))) (x2675 (x2562 x3515)))))
(assert (= (x858 x3044) (ite (and x296 (not x1914) x650) (x116 x3044) (x2055 x3044))))
(assert (= (and x3119 (not x2443)) x4133))
(assert (= (ite (= x172 x2702) x147 (x518 x172)) (x1371 x172)))
(assert (x188 x298))
(assert (x3207 x393))
(assert (= (ite (and x3779 x617) (ite (and x1060 (not x3613) x2586) (x287 x1438) (x3940 x1438)) (x3940 x1438)) (x2108 x1438)))
(assert (= (ite (= x154 x723) 0 (x720 x723)) (x1751 x723)))
(assert (= (and x3267 x2718) x2721))
(assert (= x2535 (=> (and (= x4213 (x2515 (+ 32 x3015))) (= (x2515 (+ x1136 76450787359836037641860180984291677749980919077056822294353438043884394381312)) x4210) (= x2848 0) (= x3865 (x2127 x4213)) (= (x2515 (+ 36 x3015)) x2876) (= (x2515 (+ x2876 128)) x1119) (= (x3037 26959946667150639794667015087019630673637144422540572481103610249215 x3865) x1136) (= (x3037 1461501637330902918203684832716283019655932542975 x2599) x474) (= x4045 (x3060 (x2562 x474))) (= (x2515 (+ 96 x2876)) x3537) (= (< 0 x4045) x2580) (= (x3402 (- x2507 32)) x2846) (= x1400 (x2515 (+ x1676 32))) (= x2507 (x3402 (- x1218 x3015))) (= x2937 (x3037 1461501637330902918203684832716283019655932542975 x1908)) (= x2876 x1676) (= (x2515 (+ x3015 100)) x1218)) (and (=> (and (= x4087 (> x2014 x2967)) (= (x1950 x3015) x2967) x2580 (= x1333 (< 0 x2967)) (or (and (= 0 x2014) (not x1333)) (and (= x1119 x253) (= x4213 x374) (= x818 (> x2967 32)) x1333 (or (and (not x818) (= 32 x2014)) (and x818 (= (x2515 (+ 64 x3015)) x2104) (= (< 64 x2967) x1048) (= x203 (x2515 (+ 96 x1218))) (= x1383 (x768 x2104)) (or (and (= x2014 64) (not x1048)) (and x1048 (= x2538 (x688 x3317)) (= (x2515 (+ x3015 96)) x3317) (= x152 (> x2967 96)) (= x1076 (x2515 (+ x1218 128))) (or (and (= x1636 (x1367 x817)) (= x817 (x2515 (+ x3015 128))) (not x1236) (= x1236 (< 128 x2967)) (= 128 x2014) x152 (= x3642 (x2515 (+ x1218 160)))) (and (not x152) (= 96 x2014))))))) (= (x1950 x374) x1841))) (or (and (= (x2515 (+ x2967 x1119)) x3832) x4087) (not x4087))) x3666) (=> (not x2580) x1614)))))
(assert (x2954 x4253))
(assert (= (x3990 x802) (ite (and x581 x2270 x2608 x311 (not x631) x4093) (x2837 x802) (ite (and x4093 (not x2608) x311 x2270 x581) (x3077 x802) (ite (and x311 x581 x2270 (not x4093)) (x1371 x802) (ite (and x2270 x311 (not x581)) (x518 x802) (x3794 x802)))))))
(assert (x2954 x335))
(assert (x3207 x960))
(assert (= (x3303 x3317) (ite (= x3691 x3317) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x1274 x3317))))
(assert (= (ite (= 128 x1228) x3067 (x1442 128)) (x126 128)))
(assert (x188 x1908))
(assert (x1589 x4168 x2333 x3758 x1198))
(assert (= (x3641 (x2562 x2964)) x2964))
(assert (= (x3161 x1547) (ite (= x4010 x1547) x1540 (x1601 x1547))))
(assert (x3207 x1221))
(assert (x3601 x4109 x4017 x4273 x955))
(assert (= (x126 x2889) (ite (= x1228 x2889) x3067 (x1442 x2889))))
(assert (x3207 x2690))
(assert (x3207 x1262))
(assert (= x948 (=> (= x3334 (= x1493 274184521717934524641157099916833587206)) (and (=> x3334 x2375) (=> (not x3334) x2)))))
(assert (= x2600 (and (not x685) x4292)))
(assert (= (ite (= x1040 x2474) x199 (x362 x1040)) (x2043 x1040)))
(assert (= (ite (and x311 x2270 (not x914)) (x3990 x2591) (x448 x2591)) (x2288 x2591)))
(assert (= (x2837 x723) (ite (= x591 x723) x2746 (x3077 x723))))
(assert (= (ite (= x4143 x802) x4131 (x2220 x802)) (x4223 x802)))
(assert (= x916 (=> (= x3280 (> x1284 x3559)) (and (=> x3280 x2210) (=> (and (not x3280) (= x3211 274184521717934524641157099916833587240) (= 1 x1789) (= x566 32) (= x1611 (x3402 (- x3559 x1284))) (= x2460 x2644)) x361)))))
(assert (= x2324 (and x2179 (not x295))))
(assert (= (ite (= x422 x2537) x3522 (x923 x2537)) (x744 x2537)))
(assert (= x2380 (and x3462 (not x274))))
(assert (= 2311529814 (x3641 (x3377 2311529814))))
(assert (= (and x1873 x576) x3734))
(assert (=> (> (+ 10000 1) x3191) (= (x2562 x3191) (x3377 x3191))))
(assert (= (and x1537 x577) x3907))
(assert (= (x3990 x1606) (ite (and (not x631) x2270 x581 x2608 x311 x4093) (x2837 x1606) (ite (and x581 x311 (not x2608) x2270 x4093) (x3077 x1606) (ite (and (not x4093) x2270 x311 x581) (x1371 x1606) (ite (and x2270 (not x581) x311) (x518 x1606) (x3794 x1606)))))))
(assert (= (x2288 x2010) (ite (and x311 x2270 (not x914)) (x3990 x2010) (x448 x2010))))
(assert (= (x2625 x2413) (ite (= x2413 x3194) x2368 (x2043 x2413))))
(assert (x2579 x3495 x996 x169 x822))
(assert (= (ite (and (not x2387) x2947 x2002) (x3818 x2104) (x1259 x2104)) (x703 x2104)))
(assert (= (ite (and (not x3643) x919 x3284 x465 x1630 x4198) (x1880 x2104) (ite (and x1630 (not x3284) x4198 x465 x919) (x3392 x2104) (ite (and x919 (not x4198) x1630 x465) (x1668 x2104) (ite (and (not x465) x1630 x919) (x744 x2104) (x2231 x2104))))) (x396 x2104)))
(assert (= (x3036 x3910) (ite (= x3595 x3910) 274184521717934524641157099916833587240 (x1195 x3910))))
(assert (= (x2265 (- x999 x4135)) 0))
(assert (= (x596 x1788) (ite (= x1788 x3357) x3348 (x3760 x1788))))
(assert (x3207 x2578))
(assert (x3207 x2606))
(assert (= (x3641 (x3546 x2466 2)) (+ 2 (x3641 x2466))))
(assert (= (x1363 (x3377 0)) (ite (= (x3377 0) x2464) x3647 (x2115 (x3377 0)))))
(assert (x3207 x1993))
(assert (= x1096 (x3641 (x2562 x1096))))
(assert (x3207 x1352))
(assert (= x2896 (or (and x2793 x3692) (and x3535 x751) (and x3768 x3844) (and x3136 x2689) (and x3043 x168) (and x3054 (not x3982)))))
(assert (= (x2637 x817) (ite (and (not x427) x1955 x3892) (x1922 x817) (x549 x817))))
(assert (= (and x2617 (not x3048)) x1546))
(assert (x3207 x1106))
(assert (= (and x2248 (not x2028)) x3687))
(assert (= (ite (= x2591 x2451) x1890 (x1267 x2591)) (x1156 x2591)))
(assert (x3207 x106))
(assert (= (x3766 x3705) (ite (= x4279 x3705) x3772 (x692 x3705))))
(assert (= (ite (and x3779 x617) (x1039 x209) (x2497 x209)) (x257 x209)))
(assert (= x484 (or (and x398 x2280) (and x655 x2006))))
(assert (= x3711 (and x901 (not x3364))))
(assert (x3207 x1162))
(assert (= (ite (= x374 x1443) 274184521717934524641157099916833587240 (x2961 x374)) (x3588 x374)))
(assert (x3207 x10))
(assert (x3207 x558))
(assert (= (x3818 x209) (ite (and x2002 x559 x2701 x791 (not x1018) x2947) (x531 x209) (ite (and x2002 x791 x2947 (not x559) x2701) (x2425 x209) (ite (and x2701 (not x791) x2947 x2002) (x3278 x209) (ite (and x2947 (not x2701) x2002) (x3303 x209) (x1994 x209)))))))
(assert (= (ite (and x483 (not x2859) x2509 x4071 x3423 x3056) (x3436 x2010) (ite (and x4071 x3423 x3056 (not x483) x2509) (x979 x2010) (ite (and x4071 x3423 (not x3056) x2509) (x3898 x2010) (ite (and x4071 x3423 (not x2509)) (x1528 x2010) (x1623 x2010))))) (x3052 x2010)))
(assert (x2954 x3034))
(assert (= (ite (= (x3377 0) x682) x1845 (x1488 (x3377 0))) (x1338 (x3377 0))))
(assert (= (x3641 (x2562 x340)) x340))
(assert (= x1798 (=> (= x3483 0) x1645)))
(assert (x188 x487))
(assert (x3207 x2664))
(assert (= (x3760 x802) (ite (= x802 x3326) x3497 (x4223 x802))))
(assert (= x3455 (and x1685 (not x2687))))
(assert (x3207 x1414))
(assert (= (x3403 x3605) (ite (= x1672 x3605) x1180 (x1363 x3605))))
(assert (x3207 x3132))
(assert (x2954 x131))
(assert (= (x858 x417) (ite (and x296 (not x1914) x650) (x116 x417) (x2055 x417))))
(assert (= (ite (= x637 x1111) x1658 (x842 x1111)) (x1298 x1111)))
(assert (x3207 x1863))
(assert (= (and (not x3616) x2033) x1296))
(assert (= (and x2862 x4199) x3847))
(assert (= (=> (and (= x1957 x3144) (= (= x1957 x2583) x2350)) (and (=> x2350 x3307) (=> (not x2350) x1036))) x1223))
(assert (= (x1298 x3317) (ite (= x637 x3317) x1658 (x842 x3317))))
(assert (= (ite (= x1207 x2590) x1749 (x3842 x1207)) (x2220 x1207)))
(assert (= (x1197 x1742) 0))
(assert (x3207 x103))
(assert (= x1722 x1122))
(assert (= (ite (= x3357 x3044) x3348 (x3760 x3044)) (x596 x3044)))
(assert (= (ite (= x817 x3343) 0 (x1144 x817)) (x3492 x817)))
(assert (= x3215 (and x500 (not x4222))))
(assert (= (x2497 x2552) (ite (= x402 x2552) 0 (x1736 x2552))))
(assert (x2832 x3195 x913))
(assert (x188 x340))
(assert (= (x2708 x3093) (ite (and (not x2111) x3621 x2869) (x799 x3093) (x2418 x3093))))
(assert (x3207 x1941))
(assert (= (ite (= x2429 x1742) x2731 (x3392 x1742)) (x1880 x1742)))
(assert (= (ite (= x2482 x3069) x2454 (x3672 x2482)) (x1814 x2482)))
(assert (= (ite (and x3284 x1630 x465 (not x3643) x919 x4198) (x1880 x3910) (ite (and x1630 x919 (not x3284) x4198 x465) (x3392 x3910) (ite (and x1630 x465 x919 (not x4198)) (x1668 x3910) (ite (and x919 (not x465) x1630) (x744 x3910) (x2231 x3910))))) (x396 x3910)))
(assert (= x2790 (=> (= (> x1596 x37) x3136) (and (=> (not x3136) x1765) (=> x3136 x3889)))))
(assert (= (and x1211 (not x2094)) x4137))
(assert (= (or (and x4296 (not x2089)) x1350) x3225))
(assert (x3207 x3269))
(assert (= (=> (and (= (> x3223 x2090) x833) (= x2090 (x1029 (x2562 274184521717934524641157099916833587240))) (= x3808 (x3037 1461501637330902918203684832716283019655932542975 x1908))) (and (=> (and (= (and (>= x2395 x3223) (< (+ x4018 x3223) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) x866) (not x833) (or (and (= x4191 0) (not x866) (= 0 x2018)) (and (or (and (= x294 (x4088 (x2562 274184521717934524641157099916833587240))) x977 x904 (> 4294967296 x3461) (= (<= x294 (x328 (x2562 274184521717934524641157099916833587240))) x2782) x2782 (= x904 (= (x328 (x2562 x3808)) x1035)) (= (x4088 (x2562 x3808)) x1035)) (not x977)) (= x977 (< 0 x38)) (= x424 (x2515 (+ (uninterp_mod (x2870 (x2562 x3808)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x3223))) x391 (= x1610 (- (x1029 (x2562 274184521717934524641157099916833587240)) x3223)) (= x2642 (< (+ x806 (x26 (x2562 274184521717934524641157099916833587240))) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= x3461 x4191) (= x806 (ite (= 0 x38) x3223 0)) (= x391 (< (+ (x2870 (x2562 x3808)) x3223) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) x2642 x866 (= x38 x2018) (= x1721 (- (x4142 (x2562 x3808)) x806)))) (= (= 0 x4191) x3859) (= (x1029 (x2562 274184521717934524641157099916833587240)) x2395) (= (x1029 (x2562 x3808)) x4018)) x1232) (=> x833 x1614))) x3776))
(assert (= (x596 x2345) (ite (= x2345 x3357) x3348 (x3760 x2345))))
(assert (= x156 x988))
(assert (x3207 x3433))
(assert (= (x3377 4294967295) (x2562 4294967295)))
(assert (x3207 x2651))
(assert (x3207 x1669))
(assert (= (ite (and x1785 x399) (ite (and x1101 (not x4060) x3424) (x1247 x2126) (x3006 x2126)) (x3006 x2126)) (x1864 x2126)))
(assert (= (x3641 (x2562 x2583)) x2583))
(assert (= (x744 x4104) (ite (= x422 x4104) x3522 (x923 x4104))))
(assert (=> (< (- x3318 1) 10000) (= (x2562 x3318) (x3377 x3318))))
(assert (x3207 x1764))
(assert (x3207 x1142))
(assert (x3207 x3047))
(assert (= (x3990 x960) (ite (and x4093 x2270 x311 (not x631) x581 x2608) (x2837 x960) (ite (and x581 (not x2608) x4093 x2270 x311) (x3077 x960) (ite (and x311 x581 x2270 (not x4093)) (x1371 x960) (ite (and (not x581) x2270 x311) (x518 x960) (x3794 x960)))))))
(assert (= x2487 (=> (and (= 274184521717934524641157099916833587240 x3498) (= (x3060 (x2562 x137)) x2128) (= x137 (x3037 1461501637330902918203684832716283019655932542975 x1445)) (= (x2515 (+ x2666 4)) x3998) (= x427 (= 0 x2128)) (= x3998 x854) (= (x2515 (+ 1 x3446)) x3798)) (and (=> (and (= (> x2391 0) x3892) (or (and (not x3892) (= x286 x2391)) (and (= x286 1) (< x476 4294967296) x3892)) (not x427)) x1374) (=> x427 x1614)))))
(assert (= (ite (and x761 x2885 x3621 (not x4082) x4248 x2869) (x596 x999) (ite (and x2869 x3621 x4248 x761 (not x2885)) (x3760 x999) (ite (and (not x4248) x3621 x761 x2869) (x4223 x999) (ite (and x2869 (not x761) x3621) (x2220 x999) (x530 x999))))) (x799 x999)))
(assert (= (and (not x23) x2902) x1976))
(assert (x3207 x2901))
(assert (= (x3392 x374) (ite (= x4182 x374) x1682 (x1668 x374))))
(assert (x3207 x1335))
(assert (= 0 (x2265 (- x2591 x4135))))
(assert (= (ite (and x919 x1630 (not x2339)) (x396 x817) (x3992 x817)) (x2125 x817)))
(assert (x3207 x3208))
(assert (= (x1363 x1547) (ite (= x2464 x1547) x3647 (x2115 x1547))))
(assert (x3207 x2362))
(assert (x3207 x167))
(assert (= (=> (and (= (x3037 1461501637330902918203684832716283019655932542975 x2599) x487) (= x1871 (x3060 (x2562 x487))) (= x3637 (> x1871 0)) (= x3223 (x241 x3910))) (and (=> x3637 x2535) (=> (not x3637) x3776))) x3508))
(assert (x3207 x3227))
(assert (x3207 x1033))
(assert (x3207 x3314))
(assert (x3207 x4271))
(assert (= (x3588 x3317) (ite (= x3317 x1443) 274184521717934524641157099916833587240 (x2961 x3317))))
(assert (x3207 x736))
(assert (= x3745 (and x1306 x810)))
(assert (= x4256 (=> (and (= x1431 (> x3223 x4173)) (= x89 x3812) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4173) (>= x4173 0) (= (x372 (x2562 274184521717934524641157099916833587240) (x3377 1) 0) x709) (= x4173 (x1196 x709)) (= x2940 274184521717934524641157099916833587240)) (and (=> x1431 x2505) (=> (not x1431) x3418)))))
(assert (x1589 x2686 x3719 x666 x3005))
(assert (= (=> (= (> x32 x3827) x3922) (and (=> (and (= x3015 x1030) (not x3922)) x3508) (=> x3922 x1614))) x3984))
(assert (= (x2055 x3789) (ite (= x3789 x2227) 98474297345890754025501882143967591664980152141971839855651084132735363579904 (x2668 x3789))))
(assert (= (=> (and (= x1870 (= x2720 x1823)) (= x244 x2720)) (and (=> x1870 x221) (=> (not x1870) x3162))) x2401))
(assert (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x3816 x2392 x533 x1657 x1763 x3279 x952 x4009 x980 x3417)) (>= (x3816 x2392 x533 x1657 x1763 x3279 x952 x4009 x980 x3417) 10000)))
(assert (= (ite (and x399 x1785) (ite (and x3424 (not x4060) x1101) (x3526 x3807) (x1868 x3807)) (x1868 x3807)) (x975 x3807)))
(assert (= x2463 (=> (and (or (and (= (x2515 (+ 96 x1244)) x1158) (not x1747) (= x999 x3127)) (and (= x999 96) x1747)) (= (= x765 0) x1747)) x3288)))
(assert (x3207 x1377))
(assert (x3207 x70))
(assert (= (x3392 x2413) (ite (= x2413 x4182) x1682 (x1668 x2413))))
(assert (x2954 x1730))
(assert (= (ite (and x919 x1630 (not x2339)) (x396 x2104) (x3992 x2104)) (x2125 x2104)))
(assert (= (ite (= x2227 x1263) 98474297345890754025501882143967591664980152141971839855651084132735363579904 (x2668 x1263)) (x2055 x1263)))
(assert (= (x1176 x2591) (ite (= x2591 x3806) 274184521717934524641157099916833587240 (x3929 x2591))))
(assert (x3207 x2856))
(assert (= (ite (= x1969 (x3377 0)) x2633 (x1967 (x3377 0))) (x3553 (x3377 0))))
(assert (x657 x458 x3549))
(assert (x3207 x2423))
(assert (x657 x2599 x3791))
(assert (= x993 (x3641 (x2562 x993))))
(assert (= (=> (= (= x3448 274184521717934524641157099916833587206) x2151) (and (=> (and (= x3887 (or (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3444) true) (> 32 x3444)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3444))) (not (< x967 4)) x2151 (not (< x3733 826074471)) (= 50942633119752846454219349998365661925608737367104304655302372697894809501696 x2264) (= 36 x967) (not (= 826074471 x3733)) (= x653 (x3060 (x2562 274184521717934524641157099916833587206))) (= (x3402 (- x967 4)) x3444) (= x3733 1889567281) (> x653 0) (= x967 x451) (or (and (= x88 32) (>= x3555 0) (= x2868 274184521717934524641157099916833587240) (= x3555 (x2165 x2313)) (not x3887) (= x2313 (x372 (x2562 274184521717934524641157099916833587240) (x3377 1) 0)) (<= x3555 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x787 1)) (and (= x88 x4160) x3887 (= x787 0)))) x2775) (=> (not x2151) x4174))) x2807))
(assert (x2954 x2513))
(assert (= 0 (x428 x3310)))
(assert (x3207 x3001))
(assert (= (x1924 x1495) (ite (= x2977 x1495) x4123 (x2625 x1495))))
(assert (= (x1967 x1444) (ite (= x1219 x1444) x3714 (x2369 x1444))))
(assert (x3207 x4219))
(assert (= (=> (and (= x537 x2523) (= x1130 x2053)) x541) x1240))
(assert (= (x2244 x2894) (ite (= x2894 x3572) x1441 (x1338 x2894))))
(assert (= x3576 (and x1715 (not x718))))
(assert (= (and (not x386) x4247) x2911))
(assert (= (x3553 x1567) (ite (= x1969 x1567) x2633 (x1967 x1567))))
(assert (= x2298 (or (and (not x1600) x1492) (and x3723 (not x2734)))))
(assert (= (=> (= x1103 (= x3448 274184521717934524641157099916833587240)) (and (=> (and (= 36 x816) (not (= x3930 1722255204)) (not (< x3930 1166402363)) (not (> 4 x816)) (< 0 x1859) (not (= x3930 1858285468)) (not (= 1845821197 x3930)) (= (x3060 (x2562 274184521717934524641157099916833587240)) x1859) (= 1889567281 x3930) x1103 (> 2311529814 x3930) (= x451 x816) (not (> 1722255204 x3930)) (= (x3402 (- x816 4)) x870) (= x2553 (or (and (> 32 x870) (= true (<= x870 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (> x870 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (= x2379 50942633119752846454219349998365661925608737367104304655302372697894809501696) (or (and (= x2326 (x3161 x4065)) (= 32 x88) (not x2553) (= 1 x787) (= 274184521717934524641157099916833587240 x2489) (= (x372 (x2562 274184521717934524641157099916833587240) (x3377 209) 0) x4065)) (and (= x88 x4160) x2553 (= 0 x787)))) x2775) (=> (not x1103) x2807))) x1053))
(assert (x3207 x2315))
(assert (= (ite (= x2413 x2474) x199 (x362 x2413)) (x2043 x2413)))
(assert (= (x518 x1465) (ite (= x1465 x1678) x3841 (x2757 x1465))))
(assert (= (x3766 x275) (ite (= x4279 x275) x3772 (x692 x275))))
(assert (= (ite (= x492 x4230) x890 (x1371 x4230)) (x3077 x4230)))
(assert (x3207 x2297))
(assert (x3207 x374))
(assert (= (x518 x960) (ite (= x960 x1678) x3841 (x2757 x960))))
(assert (x3207 x513))
(assert (x3160 x4066 x3217 x1425 x3762))
(assert (= (ite (and (not x1914) x650 x296) (x116 x1192) (x2055 x1192)) (x858 x1192)))
(assert (x3207 x4262))
(assert (= (=> (and (= (x3037 1461501637330902918203684832716283019655932542975 x4128) x1587) (= x1594 (x372 (x2562 x1044) (x3377 208) 0)) (= (x2115 x1594) x4128) (= x1573 (= 0 x1587))) (and (=> (not x1573) x3214) (=> x1573 x2903))) x2441))
(assert (= (ite (and x399 x1785) (x3100 x1548) (x1728 x1548)) (x2001 x1548)))
(assert (x2954 4294967295))
(assert (x3207 x3275))
(assert (= x3106 (=> (= x3581 true) x3961)))
(assert (x3207 x754))
(assert (= (x2637 x1105) (ite (and x3892 x1955 (not x427)) (x1922 x1105) (x549 x1105))))
(assert (x3207 x2746))
(assert (= (x3077 x1606) (ite (= x492 x1606) x890 (x1371 x1606))))
(assert (= (x3641 (x2562 x2093)) x2093))
(assert (x657 x4253 x837))
(assert (= (x3161 x4065) (ite (= x4010 x4065) x1540 (x1601 x4065))))
(assert (x2954 x61))
(assert (x3207 x1493))
(assert (x2954 x2872))
(assert (x3207 x2889))
(assert (= x4167 (and x2866 (not x2604))))
(assert (= (x1260 x709) (ite (= x1514 x709) x2003 (x2108 x709))))
(assert (= (=> (= x4231 (> x1275 x3322)) (and (=> (and (= x4203 (x3402 (- x3322 x1275))) (= 1 x1883) (= x640 32) (not x4231) (= 274184521717934524641157099916833587240 x393) (= x2084 x4057)) x33) (=> x4231 x1982))) x1324))
(assert (x3207 x1381))
(assert (= (x126 x3789) (ite (= x3789 x1228) x3067 (x1442 x3789))))
(assert (= x33 (=> (and (= x195 x640) (= x4163 x1883)) x4175)))
(assert (= (and x2467 x1299) x2617))
(assert (x3207 x3586))
(assert (x3207 x4227))
(assert (= (ite (and (not x92) x3165 x2541) (x190 x4104) (x4112 x4104)) (x641 x4104)))
(assert (= (x3818 x3910) (ite (and x2002 x559 x2701 (not x1018) x2947 x791) (x531 x3910) (ite (and x2701 x791 x2947 x2002 (not x559)) (x2425 x3910) (ite (and x2002 x2947 (not x791) x2701) (x3278 x3910) (ite (and x2947 (not x2701) x2002) (x3303 x3910) (x1994 x3910)))))))
(assert (x3207 x1912))
(assert (x188 x3669))
(assert (x2579 x3466 x1327 x162 x2486))
(assert (= (ite (= x1678 x1788) x3841 (x2757 x1788)) (x518 x1788)))
(assert (x3207 x289))
(assert (= (ite (= x591 x2345) x2746 (x3077 x2345)) (x2837 x2345)))
(assert (x3207 x3735))
(assert (= (x4223 x4230) (ite (= x4230 x4143) x4131 (x2220 x4230))))
(assert (x3207 x458))
(assert (= (x2001 x723) (ite (and x1785 x399) (x3100 x723) (x1728 x723))))
(assert (= (x2001 x2990) (ite (and x1785 x399) (x3100 x2990) (x1728 x2990))))
(assert (x3207 x3541))
(assert (x3825 x1959 x1183))
(assert (= (ite (= x154 x1263) 0 (x720 x1263)) (x1751 x1263)))
(assert (x3207 x1656))
(assert (= (ite (= x1414 x209) x4020 (x744 x209)) (x1668 x209)))
(assert (x3207 x958))
(assert (= x1007 (=> (and (= x1786 (x2515 (+ x3617 x1013))) (= (> x1786 x580) x2133)) (and (=> (not x2133) x2650) (=> x2133 x1614)))))
(assert (= (=> (and (<= 0 x2129) (= x2778 (x372 (x2562 x15) (x3377 1) 0)) (= x490 (x372 (x2562 274184521717934524641157099916833587240) (x3377 1) 0)) (= (x3402 (- x2370 x3704)) x572) (= x3650 274184521717934524641157099916833587240) (= (x3402 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3704)) x192) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2129) (= (> x2129 x192) x54) (= x2129 (x394 x490))) (and (=> x54 x3556) (=> (not x54) x125))) x3716))
(assert (= (ite (= x938 x1414) x4020 (x744 x938)) (x1668 x938)))
(assert (x3207 x2658))
(assert (x3207 x952))
(assert (x3207 x711))
(assert (= x2775 (=> (= (= x787 0) x3388) (and (=> x3388 x1614) (=> (not x3388) x857)))))
(assert (x2954 x3472))
(assert (= (and x173 x218) x1365))
(assert (x3207 x2508))
(assert (= (ite (and x3892 x1955 (not x427)) (x1922 x2104) (x549 x2104)) (x2637 x2104)))
(assert (= (and x1807 (not x3091)) x3939))
(assert (x3207 x1248))
(assert (=> (> (+ 10000 1) x232) (= (x2562 x232) (x3377 x232))))
(assert (x3207 x3536))
(assert (= (ite (= x1406 x2552) x4102 (x3278 x2552)) (x2425 x2552)))
(assert (x3207 x2029))
(assert (= (x2562 115792089210356248756420345214020892766250353992003419616917011526809519390720) (x3377 115792089210356248756420345214020892766250353992003419616917011526809519390720)))
(assert (x3207 x1598))
(assert (= (x190 x3317) (ite (and x64 x207 (not x3115) x3165 x2541 x2649) (x2396 x3317) (ite (and x3165 x64 x2541 x207 (not x2649)) (x1924 x3317) (ite (and x64 x2541 x3165 (not x207)) (x2625 x3317) (ite (and x2541 x3165 (not x64)) (x2043 x3317) (x20 x3317)))))))
(assert (x3207 x3858))
(assert (x3207 x1658))
(assert (= (ite (= x1907 x2977) x4123 (x2625 x1907)) (x1924 x1907)))
(assert (x3207 x3093))
(assert (= (ite (and x141 x3783 (not x1355)) (x239 x999) (x3098 x999)) (x1429 x999)))
(assert (x2954 x4109))
(assert (= (and x4181 x2671) x874))
(assert (= (ite (= x682 x1509) x1845 (x1488 x1509)) (x1338 x1509)))
(assert (= x3182 (and x1151 (not x1836))))
(assert (= (x428 x1548) 0))
(assert (=> (< (- x1978 1) 10000) (= (x2562 x1978) (x3377 x1978))))
(assert (x2954 x3141))
(assert (= x4063 (=> (and (= (< x2493 x3704) x2443) (= x1926 (x372 (x2562 274184521717934524641157099916833587240) x310 0)) (= (x2062 x1926) x2493) (= x3203 274184521717934524641157099916833587240) (= 274184521717934524641157099916833587240 x3589) (= x2253 (x372 (x2562 274184521717934524641157099916833587240) (x3377 1) 0)) (>= x2493 0) (<= x2493 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x310 (x372 (x2562 x15) (x3377 2) 0))) (and (=> x2443 x3556) (=> (not x2443) x543)))))
(assert (= (x1950 x2104) (ite (= x3537 x2104) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x2410 x2104))))
(assert (= 109576784812748834340197573905731726730118698833493337707389013487240318287872 (x3641 (x3377 109576784812748834340197573905731726730118698833493337707389013487240318287872))))
(assert (x3207 x552))
(assert (x3207 x2018))
(assert (= (x2043 x2482) (ite (= x2474 x2482) x199 (x362 x2482))))
(assert (= (x3553 x1748) (ite (= x1748 x1969) x2633 (x1967 x1748))))
(assert (= (x3641 (x2562 x3022)) x3022))
(assert (= x2400 (and (not x931) x1436)))
(assert (= (and x872 (not x2133)) x1278))
(assert (= (or (and x2869 (not x3621)) (and x3235 x1562)) x2755))
(assert (= (ite (= x4213 x402) 0 (x1736 x4213)) (x2497 x4213)))
(assert (x3207 x4253))
(assert (= (x799 x2465) (ite (and x4248 x2869 x2885 x3621 x761 (not x4082)) (x596 x2465) (ite (and (not x2885) x2869 x761 x4248 x3621) (x3760 x2465) (ite (and x761 x3621 x2869 (not x4248)) (x4223 x2465) (ite (and x2869 (not x761) x3621) (x2220 x2465) (x530 x2465)))))))
(assert (= (=> (and (= x3740 (< 0 (x3060 (x2562 274184521717934524641157099916833587240)))) (= (> (x3060 (x2562 274184521717934524641157099916833587202)) 0) x892) (= x4034 x1908) (>= 1461501637330902918203684832716283019655932542975 x539) (= x2000 x1908) x3740 (< x1908 1461501637330902918203684832716283019655932542976) (= x2257 (> (x3060 (x2562 274184521717934524641157099916833587206)) 0)) (= x1481 (= x2928 x4034)) (= x539 x27) (<= x2000 1461501637330902918203684832716283019655932542975) (<= x1941 1461501637330902918203684832716283019655932542975) (= x1876 true) x892 (or x405 x243) (<= 0 x1693) (= 10 x671) (= x3757 (x865 (x2562 274184521717934524641157099916833587206))) (= x180 511946350) (>= x461 0) (= false x1163) (= x405 (> x1908 0)) (= x1971 (x865 (x2562 x1908))) (= x1941 x2928) (>= x1941 0) (= x1693 (x865 (x2562 274184521717934524641157099916833587240))) (>= x3757 0) x1481 x2257 (= x620 false) (= x3431 (< x1971 x3827)) (<= 0 x2000) (= (= 0 x1908) x243) (= x2938 false) (= x461 (x865 (x2562 274184521717934524641157099916833587202))) (>= x539 0)) (and (=> (and x3431 (= x300 true)) x1189) (=> (and (= (x2515 (+ x3827 (uninterp_mod (x2880 (x2562 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) x2372) (= x570 x1974) (= x3814 x2728) (= x3251 x840) (not x3431) (<= 0 x3245) (= x2056 x1908) x3506 (= x2024 (- (x865 (x2562 x1908)) x3827)) (= true (<= x580 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (= x3245 x2285) (= x159 x1445) (= x2061 x2285) (= x749 x3385) (<= 0 x1936) (= x3975 x2812) (<= 0 x2056) (>= 1461501637330902918203684832716283019655932542975 x1936) (= x3484 x652) (= x1377 x106) (= x2454 x104) (<= x3245 1461501637330902918203684832716283019655932542975) (< 323 x580) (= x2599 x3708) (= (< (+ x3827 (x2880 (x2562 274184521717934524641157099916833587240))) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x3506) (<= x2056 1461501637330902918203684832716283019655932542975)) x2777))) x1555))
(assert (= x288 (=> (and (= x2531 (< 115792089237316195423570985008687907853269984665640564039457584007913129639934 x1915)) (= x4059 0) (= x563 (x372 (x2562 x340) (x3377 209) 0)) (= (x3384 x563) x1915) (= x340 (x3037 1461501637330902918203684832716283019655932542975 x570))) (and (=> (not x2531) x700) (=> x2531 x1614)))))
(assert (= (x2220 x2010) (ite (= x2590 x2010) x1749 (x3842 x2010))))
(assert (x3207 x1288))
(assert (x3207 x570))
(assert (= (ite (and x2869 x3621 x2885 x4248 (not x4082) x761) (x596 x802) (ite (and x3621 x2869 x4248 (not x2885) x761) (x3760 x802) (ite (and x761 (not x4248) x3621 x2869) (x4223 x802) (ite (and (not x761) x2869 x3621) (x2220 x802) (x530 x802))))) (x799 x802)))
(assert (= (ite (and (not x92) x3165 x2541) (x190 x1193) (x4112 x1193)) (x641 x1193)))
(assert (x3207 x1407))
(assert (= (=> (and (= x1789 x4163) (= x195 x566)) x4175) x361))
(assert (= x1670 (and (not x3613) x1060)))
(assert (x3207 x2493))
(assert (x3207 x3010))
(assert (= x443 (=> (= (> x836 x2382) x2980) (and (=> (not x2980) x2500) (=> x2980 x3988)))))
(assert (= (ite (= x1509 x1969) x2633 (x1967 x1509)) (x3553 x1509)))
(assert (= x258 (or x3184 x1154)))
(assert (= (x1880 x374) (ite (= x374 x2429) x2731 (x3392 x374))))
(assert (x3207 x1568))
(assert (= (x3492 x1742) (ite (= x3343 x1742) 0 (x1144 x1742))))
(assert (= (x3152 (- x817 x303)) 0))
(assert (= 0 (x428 x960)))
(assert (= (ite (= x2010 x1190) x419 (x1528 x2010)) (x3898 x2010)))
(assert (= (x2625 x4213) (ite (= x3194 x4213) x2368 (x2043 x4213))))
(assert (x657 x687 x2051))
(assert (x3207 x3764))
(assert (x3207 x327))
(assert (= (or (and (not x2222) x2626) (and (not x4208) x1421)) x141))
(assert (= (x4223 x3310) (ite (= x4143 x3310) x4131 (x2220 x3310))))
(assert (= (ite (= x783 x4271) x3187 (x3303 x783)) (x3278 x783)))
(assert (= (x2837 x2010) (ite (= x2010 x591) x2746 (x3077 x2010))))
(assert (x3207 x963))
(assert (= (x3641 (x3546 x1448 2)) (+ 2 (x3641 x1448))))
(assert (x3207 x217))
(assert (x3207 x487))
(assert (x3207 x1263))
(assert (= (and x2131 (not x781)) x3084))
(assert (= (ite (= x1406 x209) x4102 (x3278 x209)) (x2425 x209)))
(assert (x3207 x2674))
(assert (= (=> (and (= x2895 (x372 (x2562 x2068) (x3377 3) 0)) (= (= 0 x2645) x2004) (= x2249 (x2323 x3030)) (= x2068 (x3037 1461501637330902918203684832716283019655932542975 x570)) (= x3030 (x372 (x2562 x652) x2895 0)) (= x2645 (x3037 255 x2249))) (and (=> (and (or x3514 (and (= (x3037 1461501637330902918203684832716283019655932542975 x570) x2963) (= true x2013) (= (x372 (x2562 x2963) (x3377 3) 0) x1554) (not x3514) (= x1226 (x372 (x2562 x652) x1554 0)) (= x953 (x2323 x1226)) (= (x2515 (+ (uninterp_mod (ite x2013 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x838)) x2956) (= x838 (x3037 115792089237316195423570985008687907853269984665640564039457584007913129639680 x953)))) x2004 (= (< 0 x2812) x3514)) x2739) (=> (not x2004) x1614))) x3381))
(assert (x3207 x1351))
(assert (x3207 x2317))
(assert (= (x3303 x817) (ite (= x3691 x817) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x1274 x817))))
(assert (x3207 x2080))
(assert (= (x518 x2785) (ite (= x2785 x1678) x3841 (x2757 x2785))))
(assert (= (=> (and (= x2540 x2399) (= 0 x1153)) x1774) x2260))
(assert (x2954 x4240))
(assert (and (>= (x3816 x784 x2044 x3251 x106 x652 x2118 x921 x2221 x3417) 10000) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x3816 x784 x2044 x3251 x106 x652 x2118 x921 x2221 x3417))))
(assert (x3207 x3456))
(assert (x3207 x3166))
(assert (=> (< (- x2479 1) 10000) (= (x3377 x2479) (x2562 x2479))))
(assert (= (ite (= x3194 x10) x2368 (x2043 x10)) (x2625 x10)))
(assert (= x2793 (and x3054 x3982)))
(assert (x3207 x739))
(assert (x3207 x4016))
(assert (= (ite (= x2789 x2552) x1703 (x1924 x2552)) (x2396 x2552)))
(assert (x3207 x732))
(assert (x3207 x2176))
(assert (= 115792089237316195423570984636004990333889740523700931696805413995650331181055 (x3641 (x3377 115792089237316195423570984636004990333889740523700931696805413995650331181055))))
(assert (= (ite (= x999 x2590) x1749 (x3842 x999)) (x2220 x999)))
(assert (x3207 x2495))
(assert (=> (> (+ 10000 1) x137) (= (x2562 x137) (x3377 x137))))
(assert (= (=> (and (= (> x3312 0) x2036) (= x3312 (x1009 x3433))) (and (=> (not x2036) x2235) (=> x2036 x506))) x2877))
(assert (x3207 x2590))
(assert (= (x2125 x1495) (ite (and (not x2339) x919 x1630) (x396 x1495) (x3992 x1495))))
(assert (= (x3152 (- x2104 x303)) 0))
(assert (= (x896 x2385) (ite (= x2385 x3391) x1822 (x3766 x2385))))
(assert (x2954 x3125))
(assert (= (ite (and x919 x1630 x3284 (not x3643) x465 x4198) (x1880 x3317) (ite (and x4198 x465 (not x3284) x919 x1630) (x3392 x3317) (ite (and x1630 x919 (not x4198) x465) (x1668 x3317) (ite (and x1630 (not x465) x919) (x744 x3317) (x2231 x3317))))) (x396 x3317)))
(assert (= (ite (= x1969 x1219) x3714 (x2369 x1969)) (x1967 x1969)))
(assert (x188 x993))
(assert (x3207 x2838))
(assert (x3207 x2976))
(assert (= (and x3524 x3519) x3423))
(assert (= (and (not x475) x3564) x3383))
(assert (= (=> (and (= (or (and (< x2352 32) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2352))) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2352)) x2734) (= x3495 (x2515 (+ 31 x2352))) (= x2665 (x3037 115792089237316195423570985008687907853269984665640564039457584007913129639904 x3495)) (= x354 (x2515 (+ x2665 x1217)))) (and (=> (and (= x354 x1106) (not x2734) (= x74 x3622) (= x960 x1217) (= x3622 (x3904 x960))) x2512) (=> x2734 x3106))) x1131))
(assert (x2579 x194 x1301 x225 x2748))
(assert (= (ite (= x960 x3357) x3348 (x3760 x960)) (x596 x960)))
(assert (= (x596 x3857) (ite (= x3357 x3857) x3348 (x3760 x3857))))
(assert (= (x703 x1105) (ite (and x2002 x2947 (not x2387)) (x3818 x1105) (x1259 x1105))))
(assert (= (and x925 (not x1577)) x1492))
(assert (x3207 x3664))
(assert (x3207 x2876))
(assert (x188 x1044))
(assert (x3207 x3191))
(assert (= (ite (= x1991 x4291) x3850 (x1864 x4291)) (x1544 x4291)))
(assert (= x2920 (=> (and (= x154 (x2515 (+ x1024 164))) (= x495 x4183) (= x1607 (x2515 (+ 32 x495))) (= x2983 (x2515 (+ 64 x495))) (= x2994 (x3037 1461501637330902918203684832716283019655932542975 x4220)) (= x3364 (= x2122 0)) (= (x2515 (+ x1024 4)) x4183) (= (x3037 1461501637330902918203684832716283019655932542975 x131) x2964) (= x1985 (x2515 (+ 64 x2983))) (= x1181 (x2515 (+ 64 x1607))) (= (x3060 (x2562 x2964)) x2122)) (and (=> (and (= (> x2584 0) x385) (or (not x385) (and (= (= (x1575 (x2562 x2964)) x3244) x2142) (< x1792 4294967296) x385 x2142 (= (x3775 (x2562 274184521717934524641157099916833587240)) x4120) (= (>= (x1575 (x2562 274184521717934524641157099916833587240)) x4120) x2192) (= (x3775 (x2562 x2964)) x3244) x2192)) (not x3364)) x1717) (=> x3364 x3106)))))
(assert (= x2140 (=> (= (> x3385 18446744073709551615) x3849) (and (=> x3849 x1614) (=> (not x3849) x3027)))))
(assert (= x2661 (=> (and (= (> 1 x1335) x903) (= (x372 (x2562 x3635) (x3377 209) 0) x2894) (= (x2244 x2894) x1335)) (and (=> x903 x2260) (=> (not x903) x2554)))))
(assert (x3207 x2249))
(assert (x3207 x902))
(assert (x3207 x3034))
(assert (= (ite x1350 (ite x2406 (x1716 x3789) (ite x2981 (x1593 x3789) (x467 x3789))) (x1716 x3789)) (x3416 x3789)))
(assert (= x3530 (or (and x3350 x4289) (and x3256 x3202))))
(assert (= (ite (and x3165 x2649 x2541 x207 x64 (not x3115)) (x2396 x2318) (ite (and x3165 (not x2649) x2541 x64 x207) (x1924 x2318) (ite (and (not x207) x3165 x2541 x64) (x2625 x2318) (ite (and x2541 x3165 (not x64)) (x2043 x2318) (x20 x2318))))) (x190 x2318)))
(assert (= (ite (= 224 x1228) x3067 (x1442 224)) (x126 224)))
(assert (x3207 x638))
(assert (x188 274184521717934524641157099916833587240))
(assert (= (ite (= x1606 x3308) x307 (x2245 x1606)) (x440 x1606)))
(assert (x188 x4220))
(assert (= 18446744073709551616 (x3641 (x3377 18446744073709551616))))
(assert (= (x979 x1263) (ite (= x1263 x4041) x459 (x3898 x1263))))
(assert (= (ite (= x1228 x2785) x3067 (x1442 x2785)) (x126 x2785)))
(assert (x3207 x645))
(assert (x3207 x1551))
(assert (= x1990 (=> (and (= (x504 x209) x3504) (= (or (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3504)) (> 32 x3504)) (> x3504 57896044618658097711785492504343953926634992332820282019728792003956564819967)) x158)) (and (=> x158 x1614) (=> (not x158) x471)))))
(assert (x3207 x2048))
(assert (x3207 x4089))
(assert (= (x900 x2591) (ite (and x1777 x1204 (not x2987)) (x1461 x2591) (x251 x2591))))
(assert (= (x641 x1742) (ite (and x2541 x3165 (not x92)) (x190 x1742) (x4112 x1742))))
(assert (x3207 x982))
(assert (= (x3152 (- x3433 x303)) 0))
(assert (= (x257 x3433) (ite (and x3779 x617) (x1039 x3433) (x2497 x3433))))
(assert (= (ite (= 256 x2977) x4123 (x2625 256)) (x1924 256)))
(assert (x3207 x2821))
(assert (= (ite (= x1678 x1263) x3841 (x2757 x1263)) (x518 x1263)))
(assert (x3207 x3798))
(assert (= (x440 x3310) (ite (= x3308 x3310) x307 (x2245 x3310))))
(assert (= (ite (= x1193 x3194) x2368 (x2043 x1193)) (x2625 x1193)))
(assert (= (ite (= x3093 x3326) x3497 (x4223 x3093)) (x3760 x3093)))
(assert (x3207 x1271))
(assert (x3207 x1466))
(assert (x3207 x2566))
(assert (= (ite (and x3165 (not x92) x2541) (x190 x2482) (x4112 x2482)) (x641 x2482)))
(assert (= (x3641 (x2562 x122)) x122))
(assert (= (x2625 x1495) (ite (= x1495 x3194) x2368 (x2043 x1495))))
(assert (= (ite (= (x3377 0) x4186) x3798 (x4026 x4186)) (x2115 x4186)))
(assert (x188 x3448))
(assert (x3207 x1522))
(assert (x2954 x1459))
(assert (= (ite (= x2590 x2465) x1749 (x3842 x2465)) (x2220 x2465)))
(assert (= (ite (= x960 x3806) 274184521717934524641157099916833587240 (x3929 x960)) (x1176 x960)))
(assert (x3207 x1587))
(assert (= (ite (= x402 x1742) 0 (x1736 x1742)) (x2497 x1742)))
(assert (x3207 x962))
(assert (x188 x1591))
(assert (x3207 x1065))
(assert (= (x1967 (x3377 0)) (ite (= x1219 (x3377 0)) x3714 (x2369 (x3377 0)))))
(assert (x188 x2479))
(assert (= x1413 (=> (= x1909 (= 0 x1118)) (and (=> x1909 x1614) (=> (not x1909) x3154)))))
(assert (= (and x663 x2795) x1769))
(assert (= (x2497 x1105) (ite (= x1105 x402) 0 (x1736 x1105))))
(assert (x3207 x715))
(assert (x3207 x3722))
(assert (x3207 x3124))
(assert (x3207 x1812))
(assert (= (ite (= x4230 x2590) x1749 (x3842 x4230)) (x2220 x4230)))
(assert (= (+ 2 (x3641 x2019)) (x3641 (x3546 x2019 2))))
(assert (x2954 x510))
(assert (= (x2562 16156842317565293874272834530371880720966471053262404558597773956279093428224) (x3377 16156842317565293874272834530371880720966471053262404558597773956279093428224)))
(assert (= (x1363 x1910) (ite (= x1910 x2464) x3647 (x2115 x1910))))
(assert (= (=> (and (= x3764 x3020) (= x2862 (= x3764 x4300))) (and (=> (not x2862) x2903) (=> x2862 x1157))) x3946))
(assert (=> (> (+ 10000 1) x1957) (= (x2562 x1957) (x3377 x1957))))
(assert (= (ite (= x2789 x10) x1703 (x1924 x10)) (x2396 x10)))
(assert (x3207 x2724))
(assert (x3207 x3920))
(assert (= 0 (x428 x1192)))
(assert (= x3568 (or (and x1552 x3969) x826)))
(assert (x3207 x1978))
(assert (x3207 x4159))
(assert (x3207 x3279))
(assert (= (ite (= x637 x3824) x1658 (x842 x3824)) (x1298 x3824)))
(assert (= (x3492 x1495) (ite (= x3343 x1495) 0 (x1144 x1495))))
(assert (= (x3641 (x3377 1845821197)) 1845821197))
(assert (= (or x1080 (and (not x400) x468)) x1121))
(assert (= (=> (and (= x810 (= 0 x4002)) (= (x3037 255 x2821) x4002) (= (x2323 (x3377 106)) x2821)) (and (=> x810 x828) (=> (not x810) x3106))) x762))
(assert (= (x3641 (x3377 274184521717934524641157099916833587240)) 274184521717934524641157099916833587240))
(assert (= (=> (and (= x2913 (x3402 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x24))) (= (< x2913 x4241) x1821)) (and (=> (not x1821) x2230) (=> x1821 x3106))) x2512))
(assert (x3207 x102))
(assert (= (ite (and x2869 (not x2111) x3621) (x799 x3310) (x2418 x3310)) (x2708 x3310)))
(assert (= (ite (= (x3377 0) x563) x3798 (x4026 x563)) (x2115 x563)))
(assert (= (ite (= 256 x3357) x3348 (x3760 256)) (x596 256)))
(assert (= (ite (= x4182 x4213) x1682 (x1668 x4213)) (x3392 x4213)))
(assert (=> (< (- x1493 1) 10000) (= (x2562 x1493) (x3377 x1493))))
(assert (x3207 x1290))
(assert (= (x2708 x3085) (ite (and x3621 x2869 (not x2111)) (x799 x3085) (x2418 x3085))))
(assert (x2954 26959946667150639794667015087019630673637144422540572481103610249215))
(assert (= x1186 (=> (and (= (= x1730 x1585) x617) (= x3126 x1742) (= (x3037 115792089210356248756420345214020892766250353992003419616917011526809519390720 x1730) x1585) (= x1730 (x1039 x1742))) (and (=> (and (= (x3037 115792089210356248756420345214020892766250353992003419616917011526809519390720 x1730) x1525) (= x2338 (ite x50 1 0)) x617 (= x50 (= x1525 9518847204935358166548570266051330015907116135037852959641967396525866745856)) (= x3243 x1030)) x3805) (=> (not x617) x1614)))))
(assert (= (ite (and x4093 x2608 x581 (not x631) x311 x2270) (x2837 x2345) (ite (and x311 x581 x4093 (not x2608) x2270) (x3077 x2345) (ite (and x581 x311 (not x4093) x2270) (x1371 x2345) (ite (and x311 x2270 (not x581)) (x518 x2345) (x3794 x2345))))) (x3990 x2345)))
(assert (= x2795 (and (not x1573) x986)))
(assert (x3207 x4052))
(assert (= (=> (and (= (x2515 (+ x1017 x70)) x1822) (= x3607 (> x70 x1822))) (and (=> (not x3607) x3159) (=> x3607 x1798))) x651))
(assert (= (or x3986 (and (not x2760) x3182)) x1222))
(assert (= (x3403 (x3377 0)) (ite (= (x3377 0) x1672) x1180 (x1363 (x3377 0)))))
(assert (= (ite (= x3572 x1219) x3714 (x2369 x3572)) (x1967 x3572)))
(assert (x3207 x2095))
(assert (= x1209 (and x3886 (not x247))))
(assert (x3207 x79))
(assert (x3207 x898))
(assert (= (ite (= x3194 x3824) x2368 (x2043 x3824)) (x2625 x3824)))
(assert (= true x2723))
(assert (x657 x1445 x3002))
(assert (x3207 x801))
(assert (x2954 x958))
(assert (= (x1751 x3044) (ite (= x3044 x154) 0 (x720 x3044))))
(assert (x3825 x2965 x1317))
(assert (= (ite (= x2789 x1143) x1703 (x1924 x1143)) (x2396 x1143)))
(assert (=> (< (- x3808 1) 10000) (= (x2562 x3808) (x3377 x3808))))
(assert (= (x190 x2537) (ite (and x3165 x2649 x207 x2541 x64 (not x3115)) (x2396 x2537) (ite (and (not x2649) x3165 x2541 x64 x207) (x1924 x2537) (ite (and x64 (not x207) x2541 x3165) (x2625 x2537) (ite (and x2541 (not x64) x3165) (x2043 x2537) (x20 x2537)))))))
(assert (x3207 x3107))
(assert (x3207 x1140))
(assert (= (x2001 x999) (ite (and x399 x1785) (x3100 x999) (x1728 x999))))
(assert (= (ite (= x2785 x2702) x147 (x518 x2785)) (x1371 x2785)))
(assert (= x3736 (and x844 (not x488))))
(assert (= (ite (= x691 x2464) x3647 (x2115 x691)) (x1363 x691)))
(assert (x3207 x4002))
(assert (= (ite (= x2253 x4291) x1502 (x394 x4291)) (x4255 x4291)))
(assert (= (x3641 (x3377 16156842317565293874272834530371880720966471053262404558597773956279093428224)) 16156842317565293874272834530371880720966471053262404558597773956279093428224))
(assert (= (x549 x4104) (ite (= x4104 x854) 98474297345890754025501882143967591664980152141971839855651084132735363579904 (x1772 x4104))))
(assert (= (x2043 x1742) (ite (= x1742 x2474) x199 (x362 x1742))))
(assert (= x3212 (x3641 (x2562 x3212))))
(assert (= (ite (= x2590 224) x1749 (x3842 224)) (x2220 224)))
(assert (= (ite (= x2990 x4143) x4131 (x2220 x2990)) (x4223 x2990)))
(assert (= x922 (or (and x1832 x1731) (and x2311 x3023) (and x1857 x2079))))
(assert (= (ite (= x2413 x3691) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x1274 x2413)) (x3303 x2413)))
(assert (x3207 x2727))
(assert (x3207 x2570))
(assert (= (x975 x1766) (ite (and x399 x1785) (ite (and x1101 (not x4060) x3424) (x3526 x1766) (x1868 x1766)) (x1868 x1766))))
(assert (x3207 x297))
(assert (= (ite (= x2799 x4143) x4131 (x2220 x2799)) (x4223 x2799)))
(assert (x3207 x4104))
(assert (= (and (not x158) x1354) x2671))
(assert (x3207 x3669))
(assert (= (x2625 x2318) (ite (= x3194 x2318) x2368 (x2043 x2318))))
(assert (x3207 x1280))
(assert (= x2814 (=> (= x685 (= 274184521717934524641157099916833587202 x3227)) (and (=> (not x685) x4039) (=> x685 x25)))))
(assert (= (and x2272 x2469) x986))
(assert (x3207 x652))
(assert (= (ite (= x1920 x1969) x2633 (x1967 x1920)) (x3553 x1920)))
(assert (= (and x2948 x238) x1562))
(assert (= (x3641 (x2562 x3848)) x3848))
(assert (x3207 x1742))
(assert (= (x219 x1438) (ite (= x1438 x1049) x983 (x2058 x1438))))
(assert (= (ite (and x2509 (not x2859) x483 x3056 x3423 x4071) (x3436 x723) (ite (and x4071 x3423 x2509 x3056 (not x483)) (x979 x723) (ite (and x4071 x2509 x3423 (not x3056)) (x3898 x723) (ite (and x3423 x4071 (not x2509)) (x1528 x723) (x1623 x723))))) (x3052 x723)))
(assert (= (or x2551 (and x2830 (not x2825))) x582))
(assert (x3207 x1180))
(assert (= (ite (= x2227 x999) 98474297345890754025501882143967591664980152141971839855651084132735363579904 (x2668 x999)) (x2055 x999)))
(assert (= (ite (= x1364 x374) x32 (x1919 x374)) (x383 x374)))
(assert (= (ite (and x2541 (not x92) x3165) (x190 x938) (x4112 x938)) (x641 x938)))
(assert (= (ite (= x2977 x1742) x4123 (x2625 x1742)) (x1924 x1742)))
(assert (x3207 x3293))
(assert (= (ite (= x1485 x1364) x32 (x1919 x1485)) (x383 x1485)))
(assert (= (ite (= x1485 x637) x1658 (x842 x1485)) (x1298 x1485)))
(assert (x188 x652))
(assert (= (ite (= x2590 x417) x1749 (x3842 x417)) (x2220 x417)))
(assert (x3207 x1629))
(assert (x3207 x8))
(assert (x2954 115792089237316195423570985007226406215939081747436879206741300988257197096960))
(assert (= (x2497 x374) (ite (= x402 x374) 0 (x1736 x374))))
(assert (x2954 x962))
(assert (x3207 x4191))
(assert (x3207 x3949))
(assert (= (ite (= x1228 192) x3067 (x1442 192)) (x126 192)))
(assert (x2954 372682917519380244141939632342652170012262798458880))
(assert (x3207 x4068))
(assert (= x1189 (=> (and (>= x2038 0) (= x4068 x4220) (= (= 0 x4220) x469) (> 1461501637330902918203684832716283019655932542976 x4220) (>= 1461501637330902918203684832716283019655932542975 x4068) (= x984 x4220) (= x1941 x441) (= x300 x1701) x1349 (= (not (= x984 x441)) x1349) (or x469 x3351) (= (< x2919 x3536) x2086) (= (< 0 x4220) x3351) (= x3994 (not x1701)) (<= 0 x4068) (>= 1461501637330902918203684832716283019655932542975 x2038) (= x2919 (x865 (x2562 x4220))) (= x1551 x2038)) (and (=> (and (= x4287 true) x2086) x3271) (=> (and (= x1225 (x2515 (+ x3536 (uninterp_mod (x113 (x2562 274184521717934524641157099916833587240)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (= x1657 x3082) (>= x1270 0) (= x3273 x3458) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1689) true) (= x2752 x3478) (= x3883 x3279) (= x307 x3532) (= x1229 x3204) (>= 1461501637330902918203684832716283019655932542975 x2457) (= x4050 x217) (= x2941 x131) (= (- (x865 (x2562 x4220)) x3536) x3756) (>= x2457 0) (<= x3577 1461501637330902918203684832716283019655932542975) (= x2007 x2016) (not x2086) (= x4260 x1270) (< 323 x1689) (= x4220 x2457) (= x1071 (< (+ x3536 (x113 (x2562 274184521717934524641157099916833587240))) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (<= 0 x3577) (>= 1461501637330902918203684832716283019655932542975 x1270) x1071 (= x1646 x1763) (= x1089 x4260)) x1878)))))
(assert (= (ite (= x2429 x3910) x2731 (x3392 x3910)) (x1880 x3910)))
(assert (= (and (not x3692) x2793) x2689))
(assert (= (x1528 x723) (ite (= x1844 x723) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x3826 x723))))
(assert (x3207 x4048))
(assert (= (ite (= x1463 x422) x3522 (x923 x1463)) (x744 x1463)))
(assert (= (ite (= x2005 x2591) 274184521717934524641157099916833587240 (x4226 x2591)) (x1214 x2591)))
(assert (x3207 x357))
(assert (x3207 x3123))
(assert (x3207 x1130))
(assert (= (x1298 x1105) (ite (= x1105 x637) x1658 (x842 x1105))))
(assert (x188 x888))
(assert (x3207 x3335))
(assert (x3207 x271))
(assert (x3207 x1797))
(assert (= (and x667 x480) x760))
(assert (x2954 x953))
(assert (= (x4223 x3487) (ite (= x4143 x3487) x4131 (x2220 x3487))))
(assert (x3207 x2356))
(assert (= (x2043 x10) (ite (= x2474 x10) x199 (x362 x10))))
(assert (x3207 x2379))
(assert (= (ite (= x3317 x402) 0 (x1736 x3317)) (x2497 x3317)))
(assert (= x2922 (and x1777 x1204)))
(assert (= (x2708 x2402) (ite (and x2869 x3621 (not x2111)) (x799 x2402) (x2418 x2402))))
(assert (= (ite (= x4010 x67) x1540 (x1601 x67)) (x3161 x67)))
(assert (= (x2108 x2715) (ite (and x3779 x617) (ite (and x2586 x1060 (not x3613)) (x287 x2715) (x3940 x2715)) (x3940 x2715))))
(check-sat)
