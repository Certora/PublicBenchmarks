(set-option :print-success false)
(set-option :produce-models true)
(set-logic QF_UFDTNRA)
(declare-fun uninterp_frac (Real Real) Real)
(define-fun axiom_frac_bound ((d1 Real) (d2 Real)) Bool (and (=> (> d2 0) (and (<= 0.0 (uninterp_frac d1 d2)) (< (uninterp_frac d1 d2) 1.0))) (=> (< d2 0) (and (>= 0.0 (uninterp_frac d1 d2)) (> (uninterp_frac d1 d2) (- 1.0))))))
(define-fun axiom_frac_zero ((d1 Real) (d2 Real) (m1 Real) (m2 Real) (e Real)) Bool (=> (and (= d1 (* m1 m2)) (or (= d2 m1) (= d2 m2))) (= e 0)))
(define-fun uninterp_mod ((x Real) (m Real)) Real (ite (and (>= x 0) (< x m)) x (ite (and (>= x m) (< x (+ m m))) (- x m) (ite (and (>= x (- m)) (< x 0)) (+ x m) (* m (uninterp_frac x m))))))
(define-fun axiom_int_approximation ((x Real)) Bool (or (= x 0) (>= x 1) (<= x (- 1))))
(declare-datatypes ((x237 0)) (((x577 (x1131 x237) (x1192 x237) (x1 Real)) (x450 (x1376 Real)) (x784 (x989 x237) (x1075 Real)))))
(declare-fun x1033 () Real)
(declare-fun x1017 () Real)
(declare-fun x229 () Real)
(declare-fun x1510 () Real)
(declare-fun x461 () Real)
(declare-fun x1058 () Real)
(declare-fun x191 () Bool)
(declare-fun x1373 () Real)
(declare-fun x1197 () x237)
(declare-fun x1089 () Bool)
(declare-fun x141 () Real)
(declare-fun x1493 () Bool)
(declare-fun x1420 () Real)
(declare-fun x100 () Real)
(declare-fun x1362 () Real)
(declare-fun x869 (Real) Real)
(declare-fun x740 () Bool)
(declare-fun x120 () x237)
(declare-fun x522 () Bool)
(declare-fun x679 () Real)
(declare-fun x1353 () Bool)
(declare-fun x590 () x237)
(declare-fun x1332 () Real)
(declare-fun x486 () Bool)
(declare-fun x600 () x237)
(declare-fun x215 () Real)
(declare-fun x1530 () Bool)
(declare-fun x859 () x237)
(declare-fun x489 () Bool)
(declare-fun x253 () Real)
(declare-fun x485 () Real)
(declare-fun x612 () Real)
(declare-fun x1257 () Real)
(declare-fun x10 () Real)
(declare-fun x693 () x237)
(declare-fun x1283 () x237)
(declare-fun x782 (x237) Real)
(declare-fun x1129 () x237)
(declare-fun x769 () Real)
(declare-fun x1515 (Real) Real)
(declare-fun x864 () Real)
(declare-fun x404 (Real) Real)
(declare-fun x170 () x237)
(declare-fun x820 () Bool)
(declare-fun x1091 () x237)
(declare-fun x1379 () Real)
(declare-fun x377 () Bool)
(declare-fun x58 () Real)
(declare-fun x764 () x237)
(declare-fun x1450 () Real)
(declare-fun x1104 () x237)
(declare-fun x119 () Bool)
(declare-fun x1079 () Real)
(declare-fun x781 () Bool)
(declare-fun x608 () Real)
(declare-fun x1437 () x237)
(declare-fun x1111 () Bool)
(declare-fun x956 () Real)
(declare-fun x1265 () Bool)
(declare-fun x487 () Bool)
(declare-fun x1066 () Real)
(declare-fun x779 () x237)
(declare-fun x568 () Real)
(declare-fun x379 () x237)
(declare-fun x1372 () x237)
(declare-fun x1143 () x237)
(declare-fun x211 () Bool)
(declare-fun x1281 () Real)
(declare-fun x734 () Bool)
(declare-fun x90 () x237)
(declare-fun x611 () Real)
(declare-fun x38 (Real) Real)
(declare-fun x75 () x237)
(declare-fun x453 () Real)
(declare-fun x430 () Bool)
(declare-fun x1252 () Real)
(declare-fun x718 () Bool)
(declare-fun x1397 () Real)
(declare-fun x460 () Real)
(declare-fun x67 () Bool)
(declare-fun x353 () Real)
(declare-fun x1107 () Real)
(declare-fun x1186 (x237) Real)
(declare-fun x731 () Real)
(declare-fun x1543 () x237)
(declare-fun x1508 () Real)
(declare-fun x83 () Real)
(declare-fun x494 () Real)
(declare-fun x1475 () Real)
(declare-fun x1157 () Bool)
(declare-fun x145 () Real)
(declare-fun x805 () Real)
(declare-fun x1216 () Bool)
(declare-fun x60 () Real)
(declare-fun x816 () x237)
(declare-fun x1253 () Real)
(declare-fun x1481 () Bool)
(declare-fun x1139 () Bool)
(declare-fun x433 () Real)
(declare-fun x1284 () Bool)
(declare-fun x915 () Real)
(declare-fun x525 () Real)
(declare-fun x356 () Bool)
(declare-fun x270 () Bool)
(declare-fun x918 (x237) Real)
(declare-fun x1553 () x237)
(declare-fun x289 () Bool)
(declare-fun x499 () Real)
(declare-fun x161 () Real)
(declare-fun x500 () Real)
(declare-fun x1402 () Real)
(declare-fun x178 () Real)
(declare-fun x926 () Bool)
(declare-fun x535 (Real) Real)
(declare-fun x252 () Real)
(declare-fun x1191 () Real)
(declare-fun x624 () Real)
(declare-fun x313 () Real)
(declare-fun x1480 () x237)
(declare-fun x574 () Bool)
(declare-fun x650 () Real)
(declare-fun x331 () Real)
(declare-fun x1393 () Bool)
(declare-fun x661 () Real)
(declare-fun x1114 () Real)
(declare-fun x909 () x237)
(declare-fun x1410 () Real)
(declare-fun x479 () Bool)
(declare-fun x1121 () Bool)
(declare-fun x1269 (Real) Real)
(declare-fun x504 () Real)
(declare-fun x1290 () Bool)
(declare-fun x897 () Real)
(declare-fun x773 () Real)
(declare-fun x148 () x237)
(declare-fun x636 () x237)
(declare-fun x1103 () Bool)
(declare-fun x819 () Real)
(declare-fun x1520 () Real)
(declare-fun x554 () Bool)
(declare-fun x1042 () Real)
(declare-fun x829 () Real)
(declare-fun x308 () Real)
(declare-fun x212 () Real)
(declare-fun x1423 () Real)
(declare-fun x826 () Real)
(declare-fun x21 () Bool)
(declare-fun x1536 () Bool)
(declare-fun x1414 () Real)
(declare-fun x1145 () Bool)
(declare-fun x1175 () x237)
(declare-fun x342 () Real)
(declare-fun x1347 () x237)
(declare-fun x907 () x237)
(declare-fun x1159 () Bool)
(declare-fun x223 () x237)
(declare-fun x293 () Real)
(declare-fun x1504 () Real)
(declare-fun x772 () x237)
(declare-fun x806 (Real) Real)
(declare-fun x409 () x237)
(declare-fun x1169 () x237)
(declare-fun x604 () x237)
(declare-fun x1334 () Bool)
(declare-fun x458 () Real)
(declare-fun x234 () Real)
(declare-fun x744 () Bool)
(declare-fun x854 () x237)
(declare-fun x1041 () Real)
(declare-fun x39 () Real)
(declare-fun x602 () x237)
(declare-fun x878 () Real)
(declare-fun x928 () Bool)
(declare-fun x1436 () Real)
(declare-fun x727 () Real)
(declare-fun x841 () Bool)
(declare-fun x1479 () Bool)
(declare-fun x569 () x237)
(declare-fun x921 () Real)
(declare-fun x176 () Bool)
(declare-fun x1234 () Bool)
(declare-fun x665 () Real)
(declare-fun x16 () Real)
(declare-fun x449 () x237)
(declare-fun x1412 () x237)
(declare-fun x402 () Real)
(declare-fun x865 () x237)
(declare-fun x699 () x237)
(declare-fun x108 () Bool)
(declare-fun x537 () Real)
(declare-fun x84 (x237) Real)
(declare-fun x1277 () Real)
(declare-fun x130 () Real)
(declare-fun x1222 () Bool)
(declare-fun x378 () Real)
(declare-fun x328 (x237) Real)
(declare-fun x767 () Real)
(declare-fun x1047 () Bool)
(declare-fun x1465 () Bool)
(declare-fun x260 () Real)
(declare-fun x357 () x237)
(declare-fun x1185 () Bool)
(declare-fun x1338 () Bool)
(declare-fun x389 () Bool)
(declare-fun x1328 () Bool)
(declare-fun x1401 () Bool)
(declare-fun x700 () x237)
(declare-fun x247 () Real)
(declare-fun x156 () Real)
(declare-fun x955 () Real)
(declare-fun x942 () Real)
(declare-fun x587 () Bool)
(declare-fun x466 () Real)
(declare-fun x1096 () Real)
(declare-fun x850 () Real)
(declare-fun x467 () x237)
(declare-fun x1055 () Bool)
(declare-fun x527 () Bool)
(declare-fun x381 () Bool)
(declare-fun x1221 () Bool)
(declare-fun x539 () x237)
(declare-fun x1498 (x237) Real)
(declare-fun x654 () Bool)
(declare-fun x1086 () Bool)
(declare-fun x228 () Real)
(declare-fun x984 () Real)
(declare-fun x361 () Real)
(declare-fun x372 () Real)
(declare-fun x346 () Real)
(declare-fun x4 () Real)
(declare-fun x472 () Real)
(declare-fun x1018 () Real)
(declare-fun x482 () Bool)
(declare-fun x1196 () Bool)
(declare-fun x959 () x237)
(declare-fun x278 () x237)
(declare-fun x1522 () x237)
(declare-fun x41 () Real)
(declare-fun x1278 () Real)
(declare-fun x417 (x237) Real)
(declare-fun x1213 () Real)
(declare-fun x724 () Real)
(declare-fun x551 () Bool)
(declare-fun x977 () Real)
(declare-fun x1245 () Real)
(declare-fun x1000 () Bool)
(declare-fun x1513 () Real)
(declare-fun x35 () Bool)
(declare-fun x272 () Real)
(declare-fun x541 () Real)
(declare-fun x1305 () x237)
(declare-fun x385 () Real)
(declare-fun x276 () x237)
(declare-fun x167 () Real)
(declare-fun x425 () x237)
(declare-fun x507 () Bool)
(declare-fun x1457 () Real)
(declare-fun x811 () Bool)
(declare-fun x225 () Real)
(declare-fun x255 () x237)
(declare-fun x1246 () Bool)
(declare-fun x705 () Real)
(declare-fun x1291 () x237)
(declare-fun x1297 () Bool)
(declare-fun x1512 () Bool)
(declare-fun x343 () Real)
(declare-fun x226 () Real)
(declare-fun x831 () Real)
(declare-fun x937 () Real)
(declare-fun x251 () Bool)
(declare-fun x735 () Real)
(declare-fun x1460 () Bool)
(declare-fun x1346 () x237)
(declare-fun x1509 () Real)
(declare-fun x283 () Real)
(declare-fun x250 () Bool)
(declare-fun x848 () Real)
(declare-fun x931 () Real)
(declare-fun x992 () Real)
(declare-fun x1286 () Real)
(declare-fun x320 () Bool)
(declare-fun x674 () Bool)
(declare-fun x259 () Bool)
(declare-fun x1323 () Real)
(declare-fun x70 () Real)
(declare-fun x1044 () Real)
(declare-fun x1037 () Real)
(declare-fun x1149 () x237)
(declare-fun x1174 () Real)
(declare-fun x845 () Real)
(declare-fun x1156 () Real)
(declare-fun x1352 () Real)
(declare-fun x836 () Real)
(declare-fun x736 () Bool)
(declare-fun x1013 () Real)
(declare-fun x1507 () Real)
(declare-fun x1081 () x237)
(declare-fun x411 (x237) Real)
(declare-fun x1012 () Real)
(declare-fun x358 (Real) Real)
(declare-fun x861 () Real)
(declare-fun x1554 () x237)
(declare-fun x266 () Bool)
(declare-fun x106 () x237)
(declare-fun x495 () Real)
(declare-fun x1439 () Real)
(declare-fun x669 () Bool)
(declare-fun x690 () x237)
(declare-fun x1140 (Real) Real)
(declare-fun x133 () Real)
(declare-fun x1336 () Real)
(declare-fun x1064 () Real)
(declare-fun x997 () Real)
(declare-fun x1345 () Bool)
(declare-fun x552 () Real)
(declare-fun x364 () x237)
(declare-fun x1342 () Bool)
(declare-fun x899 () Real)
(declare-fun x1455 () x237)
(declare-fun x1105 () Real)
(declare-fun x842 () Real)
(declare-fun x1537 () Real)
(declare-fun x686 () Real)
(declare-fun x1523 () Real)
(declare-fun x104 () Real)
(declare-fun x43 () Real)
(declare-fun x1364 () Real)
(declare-fun x1155 () x237)
(declare-fun x664 () Real)
(declare-fun x1063 () Real)
(declare-fun x1524 () Bool)
(declare-fun x236 () x237)
(declare-fun x137 () Bool)
(declare-fun x970 (Real) Real)
(declare-fun x644 () Real)
(declare-fun x1403 () x237)
(declare-fun x140 () Real)
(declare-fun x1230 () x237)
(declare-fun x1067 () Real)
(declare-fun x689 () Bool)
(declare-fun x459 () Real)
(declare-fun x961 () Real)
(declare-fun x1127 () Real)
(declare-fun x965 () Real)
(declare-fun x291 () Bool)
(declare-fun x1258 () Bool)
(declare-fun x367 () Bool)
(declare-fun x598 () Real)
(declare-fun x338 () Real)
(declare-fun x946 () Bool)
(declare-fun x502 () Real)
(declare-fun x359 () Real)
(declare-fun x1052 () Real)
(declare-fun x231 () Bool)
(declare-fun x960 () Real)
(declare-fun x155 () Bool)
(declare-fun x562 () Bool)
(declare-fun x855 () Real)
(declare-fun x184 () Real)
(declare-fun x791 () Bool)
(declare-fun x575 () x237)
(declare-fun x1099 () Real)
(declare-fun x879 () Real)
(declare-fun x715 () Real)
(declare-fun x721 () x237)
(declare-fun x50 () Bool)
(declare-fun x1229 () Bool)
(declare-fun x1366 () Real)
(declare-fun x1038 () Real)
(declare-fun x222 () x237)
(declare-fun x863 () Real)
(declare-fun x930 () Real)
(declare-fun x592 () Real)
(declare-fun x785 () Bool)
(declare-fun x159 () Real)
(declare-fun x1327 () Real)
(declare-fun x1247 () Real)
(declare-fun x1315 () Bool)
(declare-fun x838 () Bool)
(declare-fun x373 () x237)
(declare-fun x1419 () Bool)
(declare-fun x508 () Real)
(declare-fun x365 (Real) Real)
(declare-fun x87 () x237)
(declare-fun x1453 () Real)
(declare-fun x557 () Real)
(declare-fun x893 () Real)
(declare-fun x1386 () Real)
(declare-fun x376 () Bool)
(declare-fun x633 () Real)
(declare-fun x310 () Bool)
(declare-fun x25 () Real)
(declare-fun x628 () x237)
(declare-fun x797 () Real)
(declare-fun x219 () Real)
(declare-fun x1416 () Real)
(declare-fun x710 () Real)
(declare-fun x1082 () x237)
(declare-fun x85 () Bool)
(declare-fun x521 () Real)
(declare-fun x1357 () Bool)
(declare-fun x375 () Real)
(declare-fun x739 () Real)
(declare-fun x947 () Real)
(declare-fun x418 () x237)
(declare-fun x672 () x237)
(declare-fun x218 (Real) Real)
(declare-fun x1203 (x237) Real)
(declare-fun x519 () Bool)
(declare-fun x1215 () Real)
(declare-fun x166 () Bool)
(declare-fun x1080 () Real)
(declare-fun x892 () Bool)
(declare-fun x1151 () Real)
(declare-fun x1065 () Real)
(declare-fun x480 () Bool)
(declare-fun x580 () Real)
(declare-fun x540 () Real)
(declare-fun x1459 () x237)
(declare-fun x681 () Real)
(declare-fun x941 () Bool)
(declare-fun x248 () Real)
(declare-fun x975 () Real)
(declare-fun x871 () Real)
(declare-fun x475 () Bool)
(declare-fun x1307 () Real)
(declare-fun x680 () x237)
(declare-fun x1236 () Bool)
(declare-fun x1206 () Real)
(declare-fun x774 (Real) Real)
(declare-fun x1392 () Bool)
(declare-fun x503 () Real)
(declare-fun x1341 () x237)
(declare-fun x606 () Real)
(declare-fun x1161 () Real)
(declare-fun x438 () x237)
(declare-fun x362 () x237)
(declare-fun x395 () Real)
(declare-fun x1310 () Real)
(declare-fun x322 () Real)
(declare-fun x220 () Real)
(declare-fun x105 () Real)
(declare-fun x484 () Real)
(declare-fun x165 () Bool)
(declare-fun x344 () Real)
(declare-fun x1070 () Real)
(declare-fun x676 () Real)
(declare-fun x1304 () Real)
(declare-fun x5 () x237)
(declare-fun x271 () Real)
(declare-fun x158 () Bool)
(declare-fun x235 () Bool)
(declare-fun x1279 () Bool)
(declare-fun x348 () Bool)
(declare-fun x1095 () Bool)
(declare-fun x1518 () Real)
(declare-fun x126 () Bool)
(declare-fun x1492 () Real)
(declare-fun x510 () Real)
(declare-fun x923 () Bool)
(declare-fun x22 () x237)
(declare-fun x808 () Bool)
(declare-fun x169 () Real)
(declare-fun x894 () x237)
(declare-fun x1384 () Real)
(declare-fun x1133 () Bool)
(declare-fun x1395 () Bool)
(declare-fun x1085 (x237) Real)
(declare-fun x1381 () x237)
(declare-fun x182 () Real)
(declare-fun x129 () Bool)
(declare-fun x213 () Bool)
(declare-fun x1378 () Real)
(declare-fun x1538 () Bool)
(declare-fun x549 () Bool)
(declare-fun x750 () Real)
(declare-fun x1431 () Real)
(declare-fun x1020 () Bool)
(declare-fun x493 () Bool)
(declare-fun x911 () x237)
(declare-fun x99 () Real)
(declare-fun x837 () Bool)
(declare-fun x1182 () Real)
(declare-fun x980 () Bool)
(declare-fun x336 () Bool)
(declare-fun x516 () Real)
(declare-fun x714 () Real)
(declare-fun x1170 () Real)
(declare-fun x901 () Real)
(declare-fun x81 () Real)
(declare-fun x131 () Real)
(declare-fun x1008 () Bool)
(declare-fun x1231 () Bool)
(declare-fun x745 (Real) Real)
(declare-fun x518 () Bool)
(declare-fun x758 () Bool)
(declare-fun x888 () Bool)
(declare-fun x9 () Bool)
(declare-fun x1266 () Real)
(declare-fun x1168 () Real)
(declare-fun x1549 () Bool)
(declare-fun x656 () Bool)
(declare-fun x240 () Real)
(declare-fun x469 (Real) Real)
(declare-fun x910 () Real)
(declare-fun x302 () Real)
(declare-fun x1428 () Real)
(declare-fun x1361 () x237)
(declare-fun x512 () Bool)
(declare-fun x1280 () Bool)
(declare-fun x28 () Bool)
(declare-fun x37 () x237)
(declare-fun x752 () Real)
(declare-fun x953 () Real)
(declare-fun x27 () Bool)
(declare-fun x964 () x237)
(declare-fun x1029 () Real)
(declare-fun x57 () Bool)
(declare-fun x1429 () Bool)
(declare-fun x835 () Real)
(declare-fun x1531 () x237)
(declare-fun x742 () Bool)
(declare-fun x543 () Real)
(declare-fun x273 () Real)
(declare-fun x1430 () x237)
(declare-fun x1441 () Bool)
(declare-fun x1249 () Real)
(declare-fun x890 () Bool)
(declare-fun x546 () Real)
(declare-fun x1319 () Bool)
(declare-fun x529 () x237)
(declare-fun x1301 () Real)
(declare-fun x697 () Bool)
(declare-fun x581 () Real)
(declare-fun x1244 () Real)
(declare-fun x982 () Bool)
(declare-fun x1109 () Bool)
(declare-fun x334 () Real)
(declare-fun x1482 () x237)
(declare-fun x940 () Real)
(declare-fun x759 () Bool)
(declare-fun x386 () Bool)
(declare-fun x1189 (x237) Real)
(declare-fun x818 () Real)
(declare-fun x1026 () Real)
(declare-fun x1134 () Real)
(declare-fun x1163 () Real)
(declare-fun x1382 () x237)
(declare-fun x277 () Real)
(declare-fun x1048 () Real)
(declare-fun x401 () Bool)
(declare-fun x446 () Real)
(declare-fun x279 () Bool)
(declare-fun x1263 () x237)
(declare-fun x69 () Real)
(declare-fun x627 () Real)
(declare-fun x706 () Real)
(declare-fun x319 () Real)
(declare-fun x1167 () Real)
(declare-fun x1177 (Real) Real)
(declare-fun x876 () Real)
(declare-fun x858 () Real)
(declare-fun x452 () Bool)
(declare-fun x1049 () x237)
(declare-fun x127 () Bool)
(declare-fun x1124 () Real)
(declare-fun x663 () Bool)
(declare-fun x421 () Bool)
(declare-fun x246 () Real)
(declare-fun x56 () Real)
(declare-fun x300 () Real)
(declare-fun x23 () x237)
(declare-fun x474 () Bool)
(declare-fun x54 () Real)
(declare-fun x426 () Bool)
(declare-fun x8 () x237)
(declare-fun x179 () Real)
(declare-fun x420 () Bool)
(declare-fun x1454 () Bool)
(declare-fun x209 () Bool)
(declare-fun x882 () Real)
(declare-fun x1092 () Real)
(declare-fun x1030 () Real)
(declare-fun x1474 () Real)
(declare-fun x870 () x237)
(declare-fun x324 () Bool)
(declare-fun x756 () Bool)
(declare-fun x1488 () Bool)
(declare-fun x1224 () Bool)
(declare-fun x1329 () Real)
(declare-fun x881 () Bool)
(declare-fun x658 () Bool)
(declare-fun x1433 () Bool)
(declare-fun x622 () Bool)
(declare-fun x447 () Bool)
(declare-fun x1435 () Real)
(declare-fun x840 () Real)
(declare-fun x34 () Real)
(declare-fun x743 () Real)
(declare-fun x135 () Bool)
(declare-fun x325 () x237)
(declare-fun x1452 () Real)
(declare-fun x872 () Bool)
(declare-fun x746 () Bool)
(declare-fun x1088 () Real)
(declare-fun x1311 () Real)
(declare-fun x547 () Bool)
(declare-fun x834 () Real)
(declare-fun x1098 () Bool)
(declare-fun x1212 (x237) Real)
(declare-fun x1438 () Bool)
(declare-fun x483 () x237)
(declare-fun x523 () x237)
(declare-fun x239 () Real)
(declare-fun x933 () Real)
(declare-fun x399 () Bool)
(declare-fun x15 () Real)
(declare-fun x1371 () Bool)
(declare-fun x456 () x237)
(declare-fun x48 () Real)
(declare-fun x934 () x237)
(declare-fun x513 () x237)
(declare-fun x874 () Bool)
(declare-fun x2 () Bool)
(declare-fun x1198 () Bool)
(declare-fun x351 () Bool)
(declare-fun x1377 () Bool)
(declare-fun x455 () Bool)
(declare-fun x1173 () Real)
(declare-fun x594 () x237)
(declare-fun x349 () Bool)
(declare-fun x1374 () Real)
(declare-fun x405 () Real)
(declare-fun x1076 (Real) Real)
(declare-fun x332 () Bool)
(declare-fun x1060 () Bool)
(declare-fun x397 () Bool)
(declare-fun x1464 () Bool)
(declare-fun x311 () x237)
(declare-fun x1501 () Real)
(declare-fun x1552 () Real)
(declare-fun x722 () Real)
(declare-fun x13 () x237)
(declare-fun x586 () Real)
(declare-fun x702 () Real)
(declare-fun x1548 () Real)
(declare-fun x629 () Real)
(declare-fun x625 () Bool)
(declare-fun x286 () Real)
(declare-fun x1380 (x237) Real)
(declare-fun x790 () Real)
(declare-fun x817 () Bool)
(declare-fun x1350 () Real)
(declare-fun x1532 () Bool)
(declare-fun x534 () Real)
(declare-fun x244 () Bool)
(declare-fun x59 () Real)
(declare-fun x1039 () Bool)
(declare-fun x96 () Real)
(declare-fun x1137 () Real)
(declare-fun x610 () Bool)
(declare-fun x1316 () x237)
(declare-fun x201 () Bool)
(declare-fun x44 () Real)
(declare-fun x856 () x237)
(declare-fun x214 () x237)
(declare-fun x280 () Real)
(declare-fun x1383 () Real)
(declare-fun x532 () Real)
(declare-fun x436 () Real)
(declare-fun x962 () Real)
(declare-fun x991 () Bool)
(declare-fun x754 () x237)
(declare-fun x906 () Real)
(declare-fun x1444 () Real)
(declare-fun x576 () Bool)
(declare-fun x564 () Bool)
(declare-fun x264 () Bool)
(declare-fun x1317 () Real)
(declare-fun x171 () Bool)
(declare-fun x1461 () Real)
(declare-fun x1130 () x237)
(declare-fun x102 () Bool)
(declare-fun x1101 () Real)
(declare-fun x281 () Real)
(declare-fun x1308 () Bool)
(declare-fun x89 () x237)
(declare-fun x634 () x237)
(declare-fun x548 () Real)
(declare-fun x867 () Real)
(declare-fun x1184 () Real)
(declare-fun x476 () Real)
(declare-fun x545 () Real)
(declare-fun x640 () Real)
(declare-fun x1540 () Real)
(declare-fun x1002 () Real)
(declare-fun x1132 () Real)
(declare-fun x810 () Bool)
(declare-fun x139 () x237)
(declare-fun x110 () Real)
(declare-fun x748 () Bool)
(declare-fun x1309 () Real)
(declare-fun x413 () x237)
(declare-fun x924 () x237)
(declare-fun x659 () Real)
(declare-fun x345 () Bool)
(declare-fun x505 () Real)
(declare-fun x183 () x237)
(declare-fun x1555 () x237)
(declare-fun x473 () Bool)
(declare-fun x1288 () Bool)
(declare-fun x1232 () Bool)
(declare-fun x1256 () Real)
(declare-fun x585 () Real)
(declare-fun x1021 () Real)
(declare-fun x730 () Real)
(declare-fun x1087 () x237)
(declare-fun x412 () Bool)
(declare-fun x287 () x237)
(declare-fun x245 () x237)
(declare-fun x1528 () Bool)
(declare-fun x555 () Real)
(declare-fun x249 () Bool)
(declare-fun x1117 () Real)
(declare-fun x1421 () Bool)
(declare-fun x766 () Real)
(declare-fun x1274 () Real)
(declare-fun x703 () Bool)
(declare-fun x713 () Bool)
(declare-fun x241 () Real)
(declare-fun x1006 () Real)
(declare-fun x1409 () Real)
(declare-fun x1094 () Real)
(declare-fun x1141 () Real)
(declare-fun x1389 () Real)
(declare-fun x1440 () Real)
(declare-fun x1387 () Bool)
(declare-fun x206 () Real)
(declare-fun x1285 () Real)
(declare-fun x1243 () x237)
(declare-fun x567 () Bool)
(declare-fun x407 () Real)
(declare-fun x242 () Real)
(declare-fun x596 () Real)
(declare-fun x1193 () Real)
(declare-fun x823 () Real)
(declare-fun x1007 () Bool)
(declare-fun x88 () Real)
(declare-fun x638 () Bool)
(declare-fun x1406 () x237)
(declare-fun x63 () Real)
(declare-fun x454 () Real)
(declare-fun x729 () Real)
(declare-fun x1299 () Real)
(declare-fun x1119 () Real)
(declare-fun x572 () Real)
(declare-fun x1136 () Real)
(declare-fun x208 () Real)
(declare-fun x147 () Bool)
(declare-fun x778 () x237)
(declare-fun x990 () Real)
(declare-fun x1458 () Real)
(declare-fun x651 () Bool)
(declare-fun x1404 () Real)
(declare-fun x1496 () Bool)
(declare-fun x1240 () Real)
(declare-fun x716 () Bool)
(declare-fun x298 () Bool)
(declare-fun x616 () Real)
(declare-fun x908 () Bool)
(declare-fun x1468 () Bool)
(declare-fun x847 () Bool)
(declare-fun x649 (Real Real) Real)
(declare-fun x1106 () Bool)
(declare-fun x655 () Real)
(declare-fun x52 () Bool)
(declare-fun x1004 () Real)
(declare-fun x45 () Bool)
(declare-fun x177 () Real)
(declare-fun x101 () Bool)
(declare-fun x434 () Real)
(declare-fun x396 () Real)
(declare-fun x268 () x237)
(declare-fun x795 () Bool)
(declare-fun x445 () Bool)
(declare-fun x393 () Bool)
(declare-fun x1100 (x237) Real)
(declare-fun x363 () Bool)
(declare-fun x1194 () x237)
(declare-fun x1261 () Bool)
(declare-fun x1529 () Bool)
(declare-fun x815 () Real)
(declare-fun x717 () Bool)
(declare-fun x1300 () Real)
(declare-fun x617 () Real)
(declare-fun x812 () Real)
(declare-fun x1036 () Bool)
(declare-fun x1359 () x237)
(declare-fun x1432 () Bool)
(declare-fun x1217 () Bool)
(declare-fun x853 () Real)
(declare-fun x993 () Bool)
(declare-fun x1226 () Bool)
(declare-fun x1164 () Bool)
(declare-fun x1339 () Bool)
(declare-fun x719 () Real)
(declare-fun x593 () Real)
(declare-fun x683 () Real)
(declare-fun x71 () Bool)
(declare-fun x113 () Real)
(declare-fun x1068 () Real)
(declare-fun x1446 () Bool)
(declare-fun x297 () Real)
(declare-fun x1349 () Bool)
(declare-fun x198 () x237)
(declare-fun x932 () Real)
(declare-fun x1375 () Real)
(declare-fun x986 () Bool)
(declare-fun x1478 (Real) Real)
(declare-fun x227 () x237)
(declare-fun x307 () Bool)
(declare-fun x457 () Real)
(declare-fun x12 () Bool)
(declare-fun x591 () Real)
(declare-fun x760 () Bool)
(declare-fun x387 () Real)
(declare-fun x1077 () x237)
(declare-fun x1282 () Real)
(declare-fun x492 () x237)
(declare-fun x667 () Real)
(declare-fun x866 () Real)
(declare-fun x415 () Real)
(declare-fun x316 () x237)
(declare-fun x646 () Real)
(declare-fun x329 (x237) Real)
(declare-fun x943 () x237)
(declare-fun x1166 () Real)
(declare-fun x1422 () Real)
(declare-fun x798 () Real)
(declare-fun x282 () Bool)
(declare-fun x224 () Real)
(declare-fun x925 () Real)
(declare-fun x645 () Real)
(declare-fun x1218 (Real) Real)
(declare-fun x1303 () Real)
(declare-fun x771 () Bool)
(declare-fun x999 () Real)
(declare-fun x263 () Real)
(declare-fun x828 () Real)
(declare-fun x1411 () Real)
(declare-fun x143 () Bool)
(declare-fun x935 () Bool)
(declare-fun x1517 () Real)
(declare-fun x1293 () Real)
(declare-fun x1201 () Bool)
(declare-fun x1122 () Bool)
(declare-fun x86 () Real)
(declare-fun x118 () Real)
(declare-fun x1424 () Real)
(declare-fun x563 () Bool)
(declare-fun x1241 () Real)
(declare-fun x1138 () Real)
(declare-fun x691 () Real)
(declare-fun x904 () Real)
(declare-fun x1235 () x237)
(declare-fun x162 () Real)
(declare-fun x595 () Bool)
(declare-fun x709 () x237)
(declare-fun x896 () Real)
(declare-fun x1112 () Bool)
(declare-fun x1296 () Real)
(declare-fun x432 () Bool)
(declare-fun x79 () x237)
(declare-fun x1408 () Real)
(declare-fun x1160 () Real)
(declare-fun x163 () Bool)
(declare-fun x1335 () Real)
(declare-fun x1367 () Real)
(declare-fun x1074 () Real)
(declare-fun x777 () Bool)
(declare-fun x1326 () x237)
(declare-fun x20 () x237)
(declare-fun x1001 () Bool)
(declare-fun x509 () Bool)
(declare-fun x1472 () Bool)
(declare-fun x97 () Bool)
(declare-fun x821 () Real)
(declare-fun x1011 () Bool)
(declare-fun x427 () Real)
(declare-fun x181 () x237)
(declare-fun x115 () Real)
(declare-fun x111 () Real)
(declare-fun x1396 () Bool)
(declare-fun x406 (Real) Real)
(declare-fun x1533 () Bool)
(declare-fun x42 () x237)
(declare-fun x770 () Real)
(declare-fun x233 () x237)
(declare-fun x571 (x237) Real)
(declare-fun x1152 () Real)
(declare-fun x939 () Real)
(declare-fun x232 () Bool)
(declare-fun x309 () Bool)
(declare-fun x827 () Real)
(declare-fun x1546 () Bool)
(declare-fun x1016 () Bool)
(declare-fun x136 () Bool)
(declare-fun x284 () Bool)
(declare-fun x1527 () x237)
(declare-fun x873 () Bool)
(declare-fun x269 () Real)
(declare-fun x440 () x237)
(declare-fun x763 () Bool)
(declare-fun x314 () x237)
(declare-fun x383 () Bool)
(declare-fun x877 () Bool)
(declare-fun x1544 () Bool)
(declare-fun x1072 () Bool)
(declare-fun x490 () Real)
(declare-fun x3 () Real)
(declare-fun x524 () Bool)
(declare-fun x583 () Real)
(declare-fun x441 () Real)
(declare-fun x1228 () Real)
(declare-fun x916 () Bool)
(declare-fun x256 () Real)
(declare-fun x880 () Real)
(declare-fun x1188 () Real)
(declare-fun x637 () Bool)
(declare-fun x382 () Bool)
(declare-fun x1053 () Real)
(declare-fun x903 () Bool)
(declare-fun x391 () Bool)
(declare-fun x832 () x237)
(declare-fun x889 () x237)
(declare-fun x1069 () Bool)
(declare-fun x1205 () Bool)
(declare-fun x274 () Real)
(declare-fun x1302 () Real)
(declare-fun x751 () x237)
(declare-fun x948 () Real)
(declare-fun x437 () Real)
(declare-fun x30 () Real)
(declare-fun x852 () Real)
(declare-fun x976 () Real)
(declare-fun x967 () Real)
(declare-fun x1165 () Real)
(declare-fun x1506 () Real)
(declare-fun x544 () Bool)
(declare-fun x1200 () Real)
(declare-fun x780 () Real)
(declare-fun x732 () Bool)
(declare-fun x1331 () x237)
(declare-fun x728 () Bool)
(declare-fun x824 () Real)
(declare-fun x560 () Bool)
(declare-fun x431 () x237)
(declare-fun x355 () Bool)
(declare-fun x151 () Bool)
(declare-fun x761 () Real)
(declare-fun x857 () Real)
(declare-fun x296 () Real)
(declare-fun x912 () Bool)
(declare-fun x609 () Real)
(declare-fun x1003 () Bool)
(declare-fun x1516 () Real)
(declare-fun x371 () Bool)
(declare-fun x410 () Real)
(declare-fun x1497 () Bool)
(declare-fun x463 () Bool)
(declare-fun x1415 () Real)
(declare-fun x1426 () Real)
(declare-fun x11 () Real)
(declare-fun x199 () Real)
(declare-fun x1535 () Real)
(declare-fun x1148 () Real)
(declare-fun x221 () Bool)
(declare-fun x652 () Real)
(declare-fun x1525 () Bool)
(declare-fun x822 () x237)
(declare-fun x922 () Real)
(declare-fun x515 () Bool)
(declare-fun x800 () Real)
(declare-fun x749 () Real)
(declare-fun x648 () x237)
(declare-fun x14 () Real)
(declare-fun x605 () Bool)
(declare-fun x843 () x237)
(declare-fun x678 () Real)
(declare-fun x673 () Bool)
(declare-fun x1050 () Bool)
(declare-fun x347 () Real)
(declare-fun x531 () x237)
(declare-fun x556 () Bool)
(declare-fun x723 () Bool)
(declare-fun x187 () Bool)
(declare-fun x388 () Real)
(declare-fun x1519 () Bool)
(declare-fun x40 () Real)
(declare-fun x1295 () x237)
(declare-fun x124 () Real)
(declare-fun x1054 (x237) Real)
(declare-fun x152 () Real)
(declare-fun x936 () Real)
(declare-fun x72 () Bool)
(declare-fun x584 () Bool)
(declare-fun x981 () Bool)
(declare-fun x846 () Real)
(declare-fun x414 () Real)
(declare-fun x614 () Real)
(declare-fun x688 () Real)
(declare-fun x632 () Bool)
(declare-fun x185 () Bool)
(declare-fun x400 () Real)
(declare-fun x180 () Bool)
(declare-fun x983 () Real)
(declare-fun x1031 () Real)
(declare-fun x804 () Bool)
(declare-fun x860 () Real)
(declare-fun x7 () Bool)
(declare-fun x258 () Real)
(declare-fun x733 () Bool)
(declare-fun x262 () Real)
(declare-fun x216 () Real)
(declare-fun x1340 () Real)
(declare-fun x1292 () Bool)
(declare-fun x1209 () Bool)
(declare-fun x1391 () Real)
(declare-fun x582 () x237)
(declare-fun x963 () Bool)
(declare-fun x1040 () x237)
(declare-fun x1153 () Real)
(declare-fun x174 () Real)
(declare-fun x914 () x237)
(declare-fun x1268 () Real)
(declare-fun x599 () Real)
(declare-fun x1219 () Bool)
(declare-fun x323 () Bool)
(declare-fun x341 () Real)
(declare-fun x958 () Real)
(declare-fun x542 () Real)
(declare-fun x491 () Bool)
(declare-fun x103 () Real)
(declare-fun x1093 () Bool)
(declare-fun x424 () Real)
(declare-fun x807 () Real)
(declare-fun x1500 () x237)
(declare-fun x394 () Real)
(declare-fun x78 () x237)
(declare-fun x392 () Bool)
(declare-fun x696 () Real)
(declare-fun x938 () Bool)
(declare-fun x123 () Real)
(declare-fun x985 () Bool)
(declare-fun x788 () Bool)
(declare-fun x172 () x237)
(declare-fun x530 () Bool)
(declare-fun x1255 () Bool)
(declare-fun x470 (x237) Real)
(declare-fun x150 () Real)
(declare-fun x639 () Bool)
(declare-fun x573 () Real)
(declare-fun x1471 () Bool)
(declare-fun x1154 () x237)
(declare-fun x517 () Real)
(declare-fun x121 () Real)
(declare-fun x949 () Real)
(declare-fun x1298 (Real Real) Real)
(declare-fun x210 () Real)
(declare-fun x1022 () Real)
(declare-fun x1199 () Bool)
(declare-fun x793 () Real)
(declare-fun x74 () Bool)
(declare-fun x1400 () Bool)
(declare-fun x80 () Bool)
(declare-fun x1477 () x237)
(declare-fun x73 () Real)
(declare-fun x1476 () x237)
(declare-fun x1463 () Real)
(declare-fun x1505 () Real)
(declare-fun x1489 () Real)
(declare-fun x49 () Real)
(declare-fun x875 () Real)
(declare-fun x1179 () x237)
(declare-fun x559 () x237)
(declare-fun x1427 () Bool)
(declare-fun x1208 () Bool)
(declare-fun x122 () Bool)
(declare-fun x398 () Real)
(declare-fun x553 () x237)
(declare-fun x597 () Real)
(declare-fun x91 () Bool)
(declare-fun x423 () Bool)
(declare-fun x1487 () x237)
(declare-fun x1271 () Real)
(declare-fun x1211 () Real)
(declare-fun x725 () Real)
(declare-fun x684 () Real)
(declare-fun x1491 () Bool)
(declare-fun x1494 () Bool)
(declare-fun x175 () Real)
(declare-fun x1150 () Real)
(declare-fun x951 () Bool)
(declare-fun x1550 () Real)
(declare-fun x132 () Bool)
(declare-fun x1490 () Real)
(declare-fun x1394 () Bool)
(declare-fun x1248 () Bool)
(declare-fun x29 () Real)
(declare-fun x1318 () Real)
(declare-fun x61 () x237)
(declare-fun x462 () Real)
(declare-fun x1264 () Bool)
(declare-fun x1485 () Real)
(declare-fun x618 () x237)
(declare-fun x1146 () Real)
(declare-fun x1158 () Real)
(declare-fun x1045 () x237)
(declare-fun x380 () x237)
(declare-fun x635 () Bool)
(declare-fun x1542 () x237)
(declare-fun x565 () Real)
(declare-fun x369 () Real)
(declare-fun x26 () Bool)
(declare-fun x53 () Bool)
(declare-fun x1407 () Real)
(declare-fun x408 () x237)
(declare-fun x197 () Real)
(declare-fun x704 () x237)
(declare-fun x146 () Real)
(declare-fun x708 () Real)
(declare-fun x294 () Bool)
(declare-fun x190 () Bool)
(declare-fun x192 () Bool)
(declare-fun x753 () Real)
(declare-fun x261 () Real)
(declare-fun x677 () x237)
(declare-fun x112 () Real)
(declare-fun x366 () Real)
(declare-fun x775 () Bool)
(declare-fun x533 () Real)
(declare-fun x444 () Bool)
(declare-fun x1545 () Bool)
(declare-fun x1470 () x237)
(declare-fun x1330 () x237)
(declare-fun x506 () Real)
(declare-fun x1142 () Real)
(declare-fun x1312 () Real)
(declare-fun x765 () Bool)
(declare-fun x1056 () x237)
(declare-fun x1385 () Bool)
(declare-fun x550 () Real)
(declare-fun x884 () Bool)
(declare-fun x1370 () Bool)
(declare-fun x419 () Real)
(declare-fun x1547 () Bool)
(declare-fun x1090 () Real)
(declare-fun x528 () Real)
(declare-fun x288 () Real)
(declare-fun x662 () x237)
(declare-fun x306 () Real)
(declare-fun x520 () Real)
(declare-fun x1176 () x237)
(declare-fun x1333 () Real)
(declare-fun x566 () Bool)
(declare-fun x607 () Real)
(declare-fun x1010 () x237)
(declare-fun x203 () Bool)
(declare-fun x1005 () x237)
(declare-fun x1534 () Real)
(declare-fun x153 () Real)
(declare-fun x326 () x237)
(declare-fun x787 () Bool)
(declare-fun x337 () x237)
(declare-fun x1343 () Real)
(declare-fun x1511 () Real)
(declare-fun x1322 () Bool)
(declare-fun x1358 () x237)
(declare-fun x588 () x237)
(declare-fun x295 () Real)
(declare-fun x642 () Real)
(declare-fun x168 () Real)
(declare-fun x844 () x237)
(declare-fun x1344 () Real)
(declare-fun x465 () x237)
(declare-fun x1078 () Real)
(declare-fun x1034 () Bool)
(declare-fun x422 () Real)
(declare-fun x1073 () Bool)
(declare-fun x851 () Real)
(declare-fun x1442 (Real) Real)
(declare-fun x883 () Real)
(declare-fun x796 () Bool)
(declare-fun x1398 () Real)
(declare-fun x647 () Bool)
(declare-fun x33 () Real)
(declare-fun x1097 (Real) Real)
(declare-fun x1466 () Real)
(declare-fun x368 () Real)
(declare-fun x886 () x237)
(declare-fun x1363 () Bool)
(declare-fun x1551 () Real)
(declare-fun x670 () x237)
(declare-fun x354 () Real)
(declare-fun x94 () Bool)
(declare-fun x972 () Bool)
(declare-fun x1172 () Real)
(declare-fun x1214 () Real)
(declare-fun x285 () Real)
(declare-fun x1220 () Bool)
(declare-fun x945 () Real)
(declare-fun x630 () Bool)
(declare-fun x481 () Bool)
(declare-fun x789 () Real)
(declare-fun x217 () Real)
(declare-fun x1202 () Real)
(declare-fun x675 () Real)
(declare-fun x1443 () Real)
(declare-fun x1254 () Bool)
(declare-fun x1083 () Real)
(declare-fun x1354 () Real)
(declare-fun x77 () Bool)
(declare-fun x514 () Real)
(declare-fun x707 () x237)
(declare-fun x1399 () x237)
(declare-fun x919 () Bool)
(declare-fun x694 () Real)
(declare-fun x68 () Bool)
(declare-fun x660 (Real) Real)
(declare-fun x809 () Real)
(declare-fun x93 () x237)
(declare-fun x1144 () Real)
(declare-fun x973 () Bool)
(declare-fun x497 () Real)
(declare-fun x1417 () x237)
(declare-fun x738 () Bool)
(declare-fun x814 () Real)
(declare-fun x439 () x237)
(declare-fun x1418 () Real)
(declare-fun x657 () Real)
(declare-fun x726 () Bool)
(declare-fun x927 (x237) Real)
(declare-fun x538 () x237)
(declare-fun x65 (Real) Real)
(declare-fun x1486 () Real)
(declare-fun x352 () Real)
(declare-fun x786 () Bool)
(declare-fun x801 () Real)
(declare-fun x292 (x237) Real)
(declare-fun x1242 () Real)
(declare-fun x1320 () Real)
(declare-fun x448 () Real)
(declare-fun x1467 () Bool)
(declare-fun x275 () Bool)
(declare-fun x471 () Bool)
(declare-fun x149 () Real)
(declare-fun x1238 () Real)
(declare-fun x195 () Bool)
(declare-fun x116 () Real)
(declare-fun x813 () Real)
(declare-fun x32 () Real)
(declare-fun x1321 (Real) x237)
(declare-fun x558 () Bool)
(declare-fun x194 () Real)
(declare-fun x825 () Bool)
(declare-fun x685 () Real)
(declare-fun x803 () Bool)
(declare-fun x968 () Bool)
(declare-fun x243 () Real)
(declare-fun x188 () Bool)
(declare-fun x62 () Bool)
(declare-fun x1484 () Bool)
(declare-fun x913 (Real) Real)
(declare-fun x1250 () x237)
(declare-fun x755 () Real)
(declare-fun x1351 () Bool)
(declare-fun x330 () x237)
(declare-fun x1014 () x237)
(declare-fun x66 () x237)
(declare-fun x318 () Real)
(declare-fun x570 () Bool)
(declare-fun x1449 () Bool)
(declare-fun x1115 () Bool)
(declare-fun x360 () x237)
(declare-fun x204 () Bool)
(declare-fun x792 () x237)
(declare-fun x601 () Real)
(declare-fun x498 () Bool)
(declare-fun x370 () x237)
(declare-fun x416 () Real)
(declare-fun x783 () Bool)
(declare-fun x885 () Real)
(declare-fun x1116 () Bool)
(declare-fun x202 () Real)
(declare-fun x1108 () Real)
(declare-fun x92 () Bool)
(declare-fun x666 () x237)
(declare-fun x974 () x237)
(declare-fun x1469 () Real)
(declare-fun x429 () x237)
(declare-fun x1195 () Bool)
(declare-fun x1390 (x237) Real)
(declare-fun x902 () Bool)
(declare-fun x561 () x237)
(declare-fun x720 () Real)
(declare-fun x384 () x237)
(declare-fun x1434 () Real)
(declare-fun x966 () Real)
(declare-fun x403 () Real)
(declare-fun x1495 () Real)
(declare-fun x1084 () Bool)
(declare-fun x887 () Real)
(declare-fun x757 () Bool)
(declare-fun x1028 () Bool)
(declare-fun x603 () Bool)
(declare-fun x6 () Real)
(declare-fun x1473 () Bool)
(declare-fun x1128 () Bool)
(declare-fun x1225 () Real)
(declare-fun x1123 () x237)
(declare-fun x1233 () Real)
(declare-fun x895 () Real)
(declare-fun x164 () Real)
(declare-fun x701 () Real)
(declare-fun x987 (x237) Real)
(declare-fun x905 () Bool)
(declare-fun x1425 () x237)
(declare-fun x321 () Bool)
(declare-fun x339 () Real)
(declare-fun x76 () Bool)
(declare-fun x695 () Real)
(declare-fun x1262 () Real)
(declare-fun x1539 (Real) Real)
(declare-fun x82 () Real)
(declare-fun x1526 () Bool)
(declare-fun x621 () Real)
(declare-fun x1521 () Bool)
(declare-fun x802 () Bool)
(declare-fun x98 () Real)
(declare-fun x1313 () x237)
(declare-fun x290 () Bool)
(declare-fun x799 () Bool)
(declare-fun x464 () Bool)
(declare-fun x762 () Real)
(declare-fun x1445 () Real)
(declare-fun x1118 () Bool)
(declare-fun x254 () Bool)
(declare-fun x626 () Real)
(declare-fun x1009 () Bool)
(declare-fun x1272 () Real)
(declare-fun x579 () Real)
(declare-fun x954 () Real)
(declare-fun x1348 () Bool)
(declare-fun x920 () x237)
(declare-fun x1267 () Real)
(declare-fun x257 () Real)
(declare-fun x794 () Real)
(declare-fun x1071 () Real)
(declare-fun x768 () Real)
(declare-fun x230 () Real)
(declare-fun x996 (x237) Real)
(declare-fun x1223 () Real)
(declare-fun x862 () Real)
(declare-fun x698 () Real)
(declare-fun x917 () Real)
(declare-fun x265 () Real)
(declare-fun x125 () Bool)
(declare-fun x1499 () Real)
(declare-fun x952 () x237)
(declare-fun x1462 () Real)
(declare-fun x712 () x237)
(declare-fun x995 () Real)
(declare-fun x1451 () Real)
(declare-fun x1541 () Real)
(declare-fun x589 () Real)
(declare-fun x711 () x237)
(declare-fun x641 () Real)
(declare-fun x653 () Real)
(declare-fun x849 () Real)
(declare-fun x969 () Bool)
(declare-fun x18 () Real)
(declare-fun x619 () Real)
(declare-fun x944 () Real)
(declare-fun x868 () Real)
(declare-fun x1171 () Bool)
(declare-fun x1032 () Bool)
(declare-fun x1135 () Bool)
(declare-fun x1360 () x237)
(declare-fun x1502 () Real)
(declare-fun x205 () Real)
(declare-fun x1275 () Real)
(declare-fun x1270 () Bool)
(declare-fun x1239 () Real)
(declare-fun x196 () Real)
(declare-fun x117 () Real)
(declare-fun x1015 () Real)
(declare-fun x144 () x237)
(declare-fun x160 () Bool)
(declare-fun x1025 () Real)
(declare-fun x971 () Bool)
(declare-fun x478 () Bool)
(declare-fun x692 () x237)
(declare-fun x1388 (x237) Real)
(declare-fun x1187 () Real)
(declare-fun x1120 () Real)
(declare-fun x51 () Bool)
(declare-fun x957 () Bool)
(declare-fun x1190 () x237)
(declare-fun x1337 () Bool)
(declare-fun x238 () x237)
(declare-fun x1024 () Bool)
(declare-fun x468 () Real)
(declare-fun x496 () Bool)
(define-fun x1276 ((x237 x237) (x998 Real)) x237 (ite ((_ is x784) x237) (x784 (x989 x237) (+ x998 (x1075 x237))) (ite ((_ is x577) x237) (x577 (x1131 x237) (x1192 x237) (+ (x1 x237) x998)) (x450 (+ x998 (x1376 x237))))))
(define-fun x1503 ((x671 Real)) Real (ite (and (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 x671) (>= x671 0)) x671 (- x671 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(define-fun x1207 ((x671 Real)) Real (ite (and (>= x671 (- 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (> 0 x671)) (+ 115792089237316195423570985008687907853269984665640564039457584007913129639936 x671) x671))
(define-fun x682 ((x536 Real)) Bool (and (< x536 115792089237316195423570985008687907853269984665640564039457584007913129639936) (<= 0 x536)))
(define-fun x107 ((x536 Real)) Bool (and (= x536 (x649 115792089237316195423570985008687907853269984665640564039457584007913129639935 x536)) (= x536 (x649 x536 115792089237316195423570985008687907853269984665640564039457584007913129639935))))
(define-fun x435 ((x536 Real)) Bool (and (= (x649 x536 0) 0) (= (x649 0 x536) 0)))
(define-fun x64 ((x536 Real)) Bool (= x536 (x649 x536 x536)))
(define-fun x1314 ((x536 Real)) Bool (and (x435 x536) (x64 x536) (x107 x536)))
(define-fun x830 ((x536 Real)) Bool (= (x649 1461501637330902918203684832716283019655932542975 (x649 1461501637330902918203684832716283019655932542975 x536)) (x649 1461501637330902918203684832716283019655932542975 x536)))
(define-fun x1178 ((x536 Real)) Bool (=> (and (>= x536 0) (< x536 1461501637330902918203684832716283019655932542976)) (= (x649 1461501637330902918203684832716283019655932542975 x536) x536)))
(define-fun x1306 ((x536 Real)) Bool (=> (= x536 (x649 1461501637330902918203684832716283019655932542975 x536)) (and (> 1461501637330902918203684832716283019655932542976 x536) (>= x536 0))))
(define-fun x1162 ((x536 Real)) Bool (=> (and (< x536 2923003274661805836407369665432566039311865085952) (>= x536 1461501637330902918203684832716283019655932542976)) (= (x649 1461501637330902918203684832716283019655932542975 x536) (- x536 1461501637330902918203684832716283019655932542976))))
(define-fun x305 ((x536 Real) (x623 Real)) Bool (and (>= x623 0) (= (+ (x649 1461501637330902918203684832716283019655932542975 x536) (* x623 1461501637330902918203684832716283019655932542976)) x536)))
(define-fun x1051 ((x536 Real) (x315 Real)) Bool (and (x1178 x536) (x1306 x536) (x1162 x536) (x305 x536 x315) (x830 x536)))
(define-fun x299 ((x536 Real) (x623 Real)) Bool (= (x649 x623 x536) (x649 x536 x623)))
(define-fun x114 ((x536 Real) (x623 Real)) Bool (and (=> (>= x623 0) (>= x623 (x649 x536 x623))) (>= (x649 x536 x623) 0) (=> (<= 0 x536) (<= (x649 x536 x623) x536))))
(define-fun x994 ((x536 Real) (x623 Real)) Bool (and (x299 x536 x623) (x114 x536 x623)))
(define-fun x267 ((x536 Real) (x315 Real)) Bool (and (x994 x536 1461501637330902918203684832716283019655932542975) (x1051 x536 x315)))
(define-fun x47 ((x536 Real)) Bool (= (x649 26959946667150639794667015087019630673637144422540572481103610249215 (x649 26959946667150639794667015087019630673637144422540572481103610249215 x536)) (x649 26959946667150639794667015087019630673637144422540572481103610249215 x536)))
(define-fun x317 ((x536 Real)) Bool (=> (and (>= x536 0) (> 26959946667150639794667015087019630673637144422540572481103610249216 x536)) (= x536 (x649 26959946667150639794667015087019630673637144422540572481103610249215 x536))))
(define-fun x390 ((x536 Real)) Bool (=> (= x536 (x649 26959946667150639794667015087019630673637144422540572481103610249215 x536)) (and (<= 0 x536) (< x536 26959946667150639794667015087019630673637144422540572481103610249216))))
(define-fun x312 ((x536 Real)) Bool (=> (and (>= x536 26959946667150639794667015087019630673637144422540572481103610249216) (< x536 53919893334301279589334030174039261347274288845081144962207220498432)) (= (- x536 26959946667150639794667015087019630673637144422540572481103610249216) (x649 26959946667150639794667015087019630673637144422540572481103610249215 x536))))
(define-fun x340 ((x536 Real) (x623 Real)) Bool (and (>= x623 0) (= (+ (x649 26959946667150639794667015087019630673637144422540572481103610249215 x536) (* 26959946667150639794667015087019630673637144422540572481103610249216 x623)) x536)))
(define-fun x929 ((x536 Real) (x315 Real)) Bool (and (x47 x536) (x340 x536 x315) (x317 x536) (x312 x536) (x390 x536)))
(define-fun x898 ((x536 Real) (x315 Real)) Bool (and (x929 x536 x315) (x994 x536 26959946667150639794667015087019630673637144422540572481103610249215)))
(define-fun x1259 ((x536 Real)) Bool (= (x649 115792089237316195423570985008687907853269984665640564039457584007913129639904 (x649 115792089237316195423570985008687907853269984665640564039457584007913129639904 x536)) (x649 115792089237316195423570985008687907853269984665640564039457584007913129639904 x536)))
(define-fun x442 ((x536 Real)) Bool (=> (and (<= 0 x536) (> 32 x536)) (= 0 (x649 115792089237316195423570985008687907853269984665640564039457584007913129639904 x536))))
(define-fun x1324 ((x536 Real) (x623 Real) (x1023 Real) (x578 Real)) Bool (and (= x536 (+ (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 x578) x623 (* 32 x1023))) (>= x1023 0) (<= 0 x578) (> 1 x578) (> 32 x623) (> 3618502788666131106986593281521497120414687020801267626233049500247285301248 x1023) (= (* x1023 32) (x649 115792089237316195423570985008687907853269984665640564039457584007913129639904 x536)) (>= x623 0)))
(define-fun x303 ((x536 Real) (x1061 Real) (x138 Real) (x428 Real)) Bool (and (x1259 x536) (x1324 x536 x1061 x138 x428) (x442 x536)))
(define-fun x443 ((x536 Real) (x1061 Real) (x138 Real) (x428 Real)) Bool (and (x994 x536 115792089237316195423570985008687907853269984665640564039457584007913129639904) (x303 x536 x1061 x138 x428)))
(define-fun x501 ((x335 Real)) Real (x660 x335))
(define-fun x613 ((x335 Real)) Real (ite (= 128 x335) x893 (x404 x335)))
(define-fun x1483 ((x335 Real)) Real (ite (and (<= 160 x335) (> (+ 160 x1058) x335)) (x660 (+ x1310 (- x335 160))) (x613 x335)))
(define-fun x1019 ((x335 Real)) Real (ite (= x335 x525) 0 (x1483 x335)))
(define-fun x839 ((x335 Real)) Real (ite (and (<= x375 x335) (< x335 (+ x1333 x375))) (x660 (+ (- x335 x375) x1516)) (x774 x335)))
(define-fun x1294 ((x335 x237)) Real (ite (= x483 x335) x1404 (x417 x335)))
(define-fun x301 ((x335 x237)) Real (ite (= x335 x287) x1404 (x417 x335)))
(define-fun x1227 ((x335 x237)) Real (ite (= x335 x604) x1404 (x987 x335)))
(define-fun x154 ((x335 x237)) Real (ite (= x335 x1190) x1404 (x987 x335)))
(define-fun x1183 ((x335 x237)) Real (ite (and x1334 x1342) (x987 x335) (ite (and x1265 x21) (x417 x335) (ite (and (not x12) x97) (x1227 x335) (x154 x335)))))
(define-fun x988 ((x335 x237)) Real (ite (= x335 x670) x385 (x1100 x335)))
(define-fun x1059 ((x335 x237)) Real (ite (= x792 x335) x306 (x1212 x335)))
(define-fun x1447 ((x335 x237)) Real (ite (and (not x12) x97) (x1059 x335) (x1212 x335)))
(define-fun x1405 ((x335 x237)) Real (ite (and x1334 x1342) (x1212 x335) (ite (and x1265 x21) (x1100 x335) (x1447 x335))))
(define-fun x207 ((x335 x237)) Real (ite (= x425 x335) x300 (x328 x335)))
(define-fun x1113 ((x335 x237)) Real (ite (= x952 x335) x906 (x470 x335)))
(define-fun x31 ((x335 x237)) Real (ite (and x1342 x1334) (x470 x335) (ite (and x1265 x21) (x328 x335) (ite (and x669 x97) (x470 x335) (x1113 x335)))))
(define-fun x1210 ((x335 x237)) Real (ite (= x335 x559) x1404 (x329 x335)))
(define-fun x128 ((x335 x237)) Real (ite (= x335 x529) x1404 (x329 x335)))
(define-fun x1289 ((x335 x237)) Real (ite (= x335 x531) x1404 (x329 x335)))
(define-fun x1456 ((x335 x237)) Real (ite (= x335 x1470) x1404 (x1390 x335)))
(define-fun x173 ((x335 x237)) Real (ite (= x1263 x335) x1404 (x1390 x335)))
(define-fun x109 ((x335 x237)) Real (ite (= x335 x183) x1404 (x1390 x335)))
(define-fun x1125 ((x335 x237)) Real (ite (and x1334 x1342) (x1390 x335) (ite (and x1265 x21) (x329 x335) (ite (and (not x192) x1279 (not x1258)) (x1456 x335) (ite (and x1279 (not x192) x1258) (x173 x335) (x109 x335))))))
(define-fun x737 ((x335 x237)) Real (ite (= x5 x335) x797 (x996 x335)))
(define-fun x643 ((x335 x237)) Real (ite (= x78 x335) x159 (x1186 x335)))
(define-fun x900 ((x335 x237)) Real (ite (and x1342 x1334) (x1186 x335) (ite (and x21 x1265) (x996 x335) (ite (and x1279 x85) (x1186 x335) (x643 x335)))))
(define-fun x95 ((x335 x237)) Real (ite (= x335 x139) x1211 (x411 x335)))
(define-fun x747 ((x335 x237)) Real (ite (= x934 x335) x130 (x927 x335)))
(define-fun x833 ((x335 x237)) Real (ite (and x1279 (not x192) (not x1258)) (x747 x335) (x927 x335)))
(define-fun x1448 ((x335 x237)) Real (ite (and x1342 x1334) (x927 x335) (ite (and x1265 x21) (x411 x335) (x833 x335))))
(define-fun x1110 ((x335 x237)) Real (ite (= x854 x335) x767 (x1388 x335)))
(define-fun x189 ((x335 x237)) Real (ite (= x384 x335) x1070 (x1380 x335)))
(define-fun x1180 ((x335 x237)) Real (ite (and x1334 x1342) (x1054 x335) (ite (and x21 x1265) (x571 x335) (ite (and (not x838) (not x432) x97 x1221) (x1380 x335) (ite (and (not x432) x97 (not x1221)) (x1054 x335) (ite (and x432 x97) (x1054 x335) (x189 x335)))))))
(define-fun x668 ((x335 Real)) Real (ite (= x335 x599) x809 (x406 x335)))
(define-fun x1287 ((x335 Real)) Real (ite (= x335 x1094) x1410 (x668 x335)))
(define-fun x1147 ((x335 Real)) Real (ite (and x799 x160) (x406 x335) (x1287 x335)))
(define-fun x1355 ((x335 Real)) Real (ite (= x335 x153) x895 (x1147 x335)))
(define-fun x950 ((x335 Real)) Real (ite (= x335 x453) x1163 (x1442 x335)))
(define-fun x1273 ((x335 Real)) Real (ite (= x694 x335) x769 (x1478 x335)))
(define-fun x1325 ((x335 Real)) Real (ite (= x335 x387) x954 (x1273 x335)))
(define-fun x1204 ((x335 Real)) Real (ite (and (not x1258) x1279 (not x192)) (x1325 x335) (ite (and x1279 x1258 (not x192)) (x1325 x335) (x1478 x335))))
(define-fun x186 ((x335 Real)) Real (ite (= x335 x642) x1257 (x1204 x335)))
(define-fun x304 ((x335 Real)) Real (ite (= x219 x335) x182 (x535 x335)))
(define-fun x1046 ((x335 Real)) Real (ite (and x1334 x1342) (x1478 x335) (ite (and x21 x1265) (x406 x335) (ite (and (not x432) x97 x1221 (not x838)) (x535 x335) (ite (and (not x1221) (not x432) x97) (x38 x335) (ite (and x97 x432) (x38 x335) (x304 x335)))))))
(define-fun x193 ((x335 Real)) Real (ite (= x335 x167) x286 (x1046 x335)))
(define-fun x511 ((x335 Real)) Real (ite (= x335 x441) x1200 (x193 x335)))
(define-fun x24 ((x335 Real)) Real (ite (= x335 x823) x458 (x511 x335)))
(define-fun x1356 ((x335 Real)) Real (ite (= x851 x335) x229 (x24 x335)))
(define-fun x776 ((x335 Real)) Real (ite (= x683 x335) 32 (x1356 x335)))
(define-fun x978 ((x335 Real)) Real (ite (= x335 x1244) x334 (x1076 x335)))
(define-fun x979 ((x335 Real)) Real (ite (= x335 x228) 0 (x65 x335)))
(define-fun x1365 ((x335 Real)) Real (ite (= x335 0) 1 (x1140 x335)))
(define-fun x1181 ((x335 Real)) Real (ite (= x335 0) 1 (x1140 x335)))
(define-fun x526 ((x335 Real)) Real (ite (and x1171 x788) (x1365 x335) (x1181 x335)))
(define-fun x687 ((x335 Real)) Real (ite (= x335 x146) x657 (x365 x335)))
(define-fun x1369 ((x335 Real)) Real (ite (= x146 x335) x696 (x365 x335)))
(define-fun x1368 ((x335 Real)) Real (ite (= x335 x146) x352 (x913 x335)))
(define-fun x741 ((x335 Real)) Real (ite (and (>= x335 x1013) (> (+ x352 x1013) x335)) (x526 (+ 0 (- x335 x1013))) (x1368 x335)))
(define-fun x1413 ((x335 Real)) Real (ite (and x946 (not x1264)) (x741 x335) (x913 x335)))
(define-fun x1260 ((x335 Real)) Real (ite (= x335 x1071) x70 (x1413 x335)))
(define-fun x55 ((x335 Real)) Real (ite (= x335 x819) x246 (x1260 x335)))
(define-fun x157 ((x335 Real)) Real (ite (= x1414 x335) x96 (x55 x335)))
(define-fun x200 ((x335 Real)) Real (ite (= x335 x1511) x1340 (x157 x335)))
(define-fun x36 ((x335 Real)) Real (ite (= x335 x1037) 32 (x200 x335)))
(define-fun x1102 ((x335 Real)) Real (ite (= x601 x335) x983 (x1269 x335)))
(define-fun x1251 ((x335 Real)) Real (ite (= x335 x807) 0 (x358 x335)))
(define-fun x891 ((x335 x237)) Real (ite (= x335 (x1321 274184521717934524641157099916833587206)) x359 (x1085 x335)))
(define-fun x477 ((x335 x237)) Real (ite (= (x1321 x948) x335) x208 (x891 x335)))
(define-fun x327 ((x335 x237)) Real (ite (= (x1321 x948) x335) x194 (x477 x335)))
(define-fun x1237 ((x335 x237)) Real (ite (= x335 (x1321 274184521717934524641157099916833587206)) x1548 (x327 x335)))
(define-fun x1514 ((x335 x237)) Real (ite (= (x1321 274184521717934524641157099916833587206) x335) x1302 (x1237 x335)))
(define-fun x134 ((x335 x237)) Real (ite (= (x1321 x1367) x335) x69 (x1514 x335)))
(define-fun x1057 ((x335 x237)) Real (ite (= x1129 x335) x659 (x84 x335)))
(define-fun x46 ((x335 x237)) Real (ite (= x582 x335) x1170 (x1057 x335)))
(define-fun x1035 ((x335 x237)) Real (ite (and x788 x1171) (x46 x335) (x84 x335)))
(define-fun x350 ((x335 x237)) Real (ite (= x335 x66) x378 (x1035 x335)))
(define-fun x1126 ((x335 Real)) Real (ite (= 0 x335) 1 (x469 x335)))
(define-fun x142 ((x335 Real)) Real (ite (= x335 x883) x1510 (x1218 x335)))
(define-fun x451 ((x335 x237)) Real (ite (= x1313 x335) x115 (x1203 x335)))
(define-fun x1027 ((x335 x237)) Real (ite (= x335 x314) x49 (x451 x335)))
(define-fun x17 ((x335 x237)) Real (ite (and x788 x1171) (x1203 x335) (x1027 x335)))
(define-fun x333 ((x335 x237)) Real (ite (= x335 x1104) x944 (x17 x335)))
(define-fun x631 ((x335 Real)) Real (ite (= x335 0) 1 (x469 x335)))
(define-fun x615 ((x335 Real)) Real (ite (= x883 x335) x1202 (x1218 x335)))
(define-fun x1062 ((x335 Real)) Real (ite (and x654 x309) (x1126 x335) (x631 x335)))
(define-fun x620 ((x335 x237)) Real (ite (= (x1321 x1367) x335) x141 (x134 x335)))
(define-fun x488 ((x335 Real)) Real (ite (= x883 x335) x1301 (x745 x335)))
(define-fun x19 ((x335 Real)) Real (ite (and (< x335 (+ x131 x1301)) (>= x335 x131)) (x1062 (+ (- x335 x131) 0)) (x488 x335)))
(define-fun x374 ((x335 Real)) Real (ite (and x923 x298) (x745 x335) (x19 x335)))
(define-fun x1043 ((x536 Real)) Bool (=> (and (not (= 911411945 x536)) (not (= x536 76450787359836037641860180984291677749980919077056822294353438043884394381312)) (not (= x536 2798343961)) (not (= x536 69947311)) (not (= 1986467848 x536)) (not (= x536 2293535753)) (not (= 2868243304 x536)) (not (= x536 2743102681)) (not (= x536 826074471)) (not (= x536 2512682246)) (not (= 1000000000000000000 x536)) (not (= 2835717307 x536)) (not (= x536 1461501637330902918203684832716283019655932542975)) (not (= x536 2764855426)) (not (= x536 1517119036)) (not (= 274184521717934524641157099916833587214 x536)) (not (= x536 3123789364)) (not (= x536 1889567281)) (not (= x536 274184521717934524641157099916833587206)) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x536)) (not (= 142201243 x536)) (not (= x536 2532887486)) (not (= x536 649617121)) (not (= x536 2258409472)) (not (= 2211524764 x536)) (not (= 2960351575 x536)) (not (= 37714057306076988483118529490347679105585116642029194716945419020321082336612 x536)) (not (= x536 2418364589)) (not (= 2939843472 x536)) (not (= 1968616202 x536)) (not (= 604800 x536)) (not (= 2690754053 x536)) (not (= x536 759532456)) (not (= x536 115792089237316195423570985008687907853269984665640564039457584007913129639904)) (not (= x536 2061678023)) (not (= 468353030 x536)) (< 10000 x536) (not (= x536 26959946667150639794667015087019630673637144422540572481103610249215)) (not (= x536 18446744073709551615)) (not (= x536 2514000705)) (not (= x536 635128645)) (not (= x536 274184521717934524641157099916833587218)) (not (= 115792089237316195423570985008687907853269984665640564039457 x536)) (not (= 87118632 x536))) (not ((_ is x450) (x1321 x536)))))
(assert (axiom_frac_bound (* 1000000000000000000 x1070) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (* 1000000000000000000 x1070) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x1070 (uninterp_frac (* 1000000000000000000 x1070) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x1070) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1063 x1079 (uninterp_frac (* 1000000000000000000 x1070) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x1070) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1063 x850 (uninterp_frac (* 1000000000000000000 x1070) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x1070) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1079 x1063 (uninterp_frac (* 1000000000000000000 x1070) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x1070) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1173 x906 (uninterp_frac (* 1000000000000000000 x1070) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x1070) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x159 x997 (uninterp_frac (* 1000000000000000000 x1070) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x1070) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x168 x1508 (uninterp_frac (* 1000000000000000000 x1070) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x1070) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x596 x300 (uninterp_frac (* 1000000000000000000 x1070) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x1070) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x767 1000000000000000000 (uninterp_frac (* 1000000000000000000 x1070) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x1070) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x797 x500 (uninterp_frac (* 1000000000000000000 x1070) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x1070) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x846 x168 (uninterp_frac (* 1000000000000000000 x1070) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x1070) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x850 x1063 (uninterp_frac (* 1000000000000000000 x1070) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x1070) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x893 32 (uninterp_frac (* 1000000000000000000 x1070) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x1070) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x997 x159 (uninterp_frac (* 1000000000000000000 x1070) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (* x767 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (* x767 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x1070 (uninterp_frac (* x767 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x767 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1063 x1079 (uninterp_frac (* x767 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x767 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1063 x850 (uninterp_frac (* x767 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x767 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1079 x1063 (uninterp_frac (* x767 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x767 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1173 x906 (uninterp_frac (* x767 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x767 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x159 x997 (uninterp_frac (* x767 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x767 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x168 x1508 (uninterp_frac (* x767 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x767 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x596 x300 (uninterp_frac (* x767 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x767 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x767 1000000000000000000 (uninterp_frac (* x767 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x767 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x797 x500 (uninterp_frac (* x767 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x767 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x846 x168 (uninterp_frac (* x767 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x767 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x850 x1063 (uninterp_frac (* x767 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x767 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x893 32 (uninterp_frac (* x767 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x767 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x997 x159 (uninterp_frac (* x767 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (* x893 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (* x893 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x1070 (uninterp_frac (* x893 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x893 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1063 x1079 (uninterp_frac (* x893 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x893 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1063 x850 (uninterp_frac (* x893 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x893 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1079 x1063 (uninterp_frac (* x893 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x893 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1173 x906 (uninterp_frac (* x893 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x893 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x159 x997 (uninterp_frac (* x893 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x893 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x168 x1508 (uninterp_frac (* x893 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x893 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x596 x300 (uninterp_frac (* x893 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x893 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x767 1000000000000000000 (uninterp_frac (* x893 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x893 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x797 x500 (uninterp_frac (* x893 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x893 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x846 x168 (uninterp_frac (* x893 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x893 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x850 x1063 (uninterp_frac (* x893 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x893 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x893 32 (uninterp_frac (* x893 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x893 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x997 x159 (uninterp_frac (* x893 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound x368 1000000000000000000))
(assert (axiom_frac_zero x368 1000000000000000000 1000000000000000000 x1070 (uninterp_frac x368 1000000000000000000)))
(assert (axiom_frac_zero x368 1000000000000000000 x1063 x1079 (uninterp_frac x368 1000000000000000000)))
(assert (axiom_frac_zero x368 1000000000000000000 x1063 x850 (uninterp_frac x368 1000000000000000000)))
(assert (axiom_frac_zero x368 1000000000000000000 x1079 x1063 (uninterp_frac x368 1000000000000000000)))
(assert (axiom_frac_zero x368 1000000000000000000 x1173 x906 (uninterp_frac x368 1000000000000000000)))
(assert (axiom_frac_zero x368 1000000000000000000 x159 x997 (uninterp_frac x368 1000000000000000000)))
(assert (axiom_frac_zero x368 1000000000000000000 x168 x1508 (uninterp_frac x368 1000000000000000000)))
(assert (axiom_frac_zero x368 1000000000000000000 x596 x300 (uninterp_frac x368 1000000000000000000)))
(assert (axiom_frac_zero x368 1000000000000000000 x767 1000000000000000000 (uninterp_frac x368 1000000000000000000)))
(assert (axiom_frac_zero x368 1000000000000000000 x797 x500 (uninterp_frac x368 1000000000000000000)))
(assert (axiom_frac_zero x368 1000000000000000000 x846 x168 (uninterp_frac x368 1000000000000000000)))
(assert (axiom_frac_zero x368 1000000000000000000 x850 x1063 (uninterp_frac x368 1000000000000000000)))
(assert (axiom_frac_zero x368 1000000000000000000 x893 32 (uninterp_frac x368 1000000000000000000)))
(assert (axiom_frac_zero x368 1000000000000000000 x997 x159 (uninterp_frac x368 1000000000000000000)))
(assert (axiom_frac_bound x56 1000000000000000000))
(assert (axiom_frac_zero x56 1000000000000000000 1000000000000000000 x1070 (uninterp_frac x56 1000000000000000000)))
(assert (axiom_frac_zero x56 1000000000000000000 x1063 x1079 (uninterp_frac x56 1000000000000000000)))
(assert (axiom_frac_zero x56 1000000000000000000 x1063 x850 (uninterp_frac x56 1000000000000000000)))
(assert (axiom_frac_zero x56 1000000000000000000 x1079 x1063 (uninterp_frac x56 1000000000000000000)))
(assert (axiom_frac_zero x56 1000000000000000000 x1173 x906 (uninterp_frac x56 1000000000000000000)))
(assert (axiom_frac_zero x56 1000000000000000000 x159 x997 (uninterp_frac x56 1000000000000000000)))
(assert (axiom_frac_zero x56 1000000000000000000 x168 x1508 (uninterp_frac x56 1000000000000000000)))
(assert (axiom_frac_zero x56 1000000000000000000 x596 x300 (uninterp_frac x56 1000000000000000000)))
(assert (axiom_frac_zero x56 1000000000000000000 x767 1000000000000000000 (uninterp_frac x56 1000000000000000000)))
(assert (axiom_frac_zero x56 1000000000000000000 x797 x500 (uninterp_frac x56 1000000000000000000)))
(assert (axiom_frac_zero x56 1000000000000000000 x846 x168 (uninterp_frac x56 1000000000000000000)))
(assert (axiom_frac_zero x56 1000000000000000000 x850 x1063 (uninterp_frac x56 1000000000000000000)))
(assert (axiom_frac_zero x56 1000000000000000000 x893 32 (uninterp_frac x56 1000000000000000000)))
(assert (axiom_frac_zero x56 1000000000000000000 x997 x159 (uninterp_frac x56 1000000000000000000)))
(assert (axiom_frac_bound x586 1000000000000000000))
(assert (axiom_frac_zero x586 1000000000000000000 1000000000000000000 x1070 (uninterp_frac x586 1000000000000000000)))
(assert (axiom_frac_zero x586 1000000000000000000 x1063 x1079 (uninterp_frac x586 1000000000000000000)))
(assert (axiom_frac_zero x586 1000000000000000000 x1063 x850 (uninterp_frac x586 1000000000000000000)))
(assert (axiom_frac_zero x586 1000000000000000000 x1079 x1063 (uninterp_frac x586 1000000000000000000)))
(assert (axiom_frac_zero x586 1000000000000000000 x1173 x906 (uninterp_frac x586 1000000000000000000)))
(assert (axiom_frac_zero x586 1000000000000000000 x159 x997 (uninterp_frac x586 1000000000000000000)))
(assert (axiom_frac_zero x586 1000000000000000000 x168 x1508 (uninterp_frac x586 1000000000000000000)))
(assert (axiom_frac_zero x586 1000000000000000000 x596 x300 (uninterp_frac x586 1000000000000000000)))
(assert (axiom_frac_zero x586 1000000000000000000 x767 1000000000000000000 (uninterp_frac x586 1000000000000000000)))
(assert (axiom_frac_zero x586 1000000000000000000 x797 x500 (uninterp_frac x586 1000000000000000000)))
(assert (axiom_frac_zero x586 1000000000000000000 x846 x168 (uninterp_frac x586 1000000000000000000)))
(assert (axiom_frac_zero x586 1000000000000000000 x850 x1063 (uninterp_frac x586 1000000000000000000)))
(assert (axiom_frac_zero x586 1000000000000000000 x893 32 (uninterp_frac x586 1000000000000000000)))
(assert (axiom_frac_zero x586 1000000000000000000 x997 x159 (uninterp_frac x586 1000000000000000000)))
(assert (axiom_frac_bound x629 x835))
(assert (axiom_frac_zero x629 x835 1000000000000000000 x1070 (uninterp_frac x629 x835)))
(assert (axiom_frac_zero x629 x835 x1063 x1079 (uninterp_frac x629 x835)))
(assert (axiom_frac_zero x629 x835 x1063 x850 (uninterp_frac x629 x835)))
(assert (axiom_frac_zero x629 x835 x1079 x1063 (uninterp_frac x629 x835)))
(assert (axiom_frac_zero x629 x835 x1173 x906 (uninterp_frac x629 x835)))
(assert (axiom_frac_zero x629 x835 x159 x997 (uninterp_frac x629 x835)))
(assert (axiom_frac_zero x629 x835 x168 x1508 (uninterp_frac x629 x835)))
(assert (axiom_frac_zero x629 x835 x596 x300 (uninterp_frac x629 x835)))
(assert (axiom_frac_zero x629 x835 x767 1000000000000000000 (uninterp_frac x629 x835)))
(assert (axiom_frac_zero x629 x835 x797 x500 (uninterp_frac x629 x835)))
(assert (axiom_frac_zero x629 x835 x846 x168 (uninterp_frac x629 x835)))
(assert (axiom_frac_zero x629 x835 x850 x1063 (uninterp_frac x629 x835)))
(assert (axiom_frac_zero x629 x835 x893 32 (uninterp_frac x629 x835)))
(assert (axiom_frac_zero x629 x835 x997 x159 (uninterp_frac x629 x835)))
(assert (axiom_frac_bound x698 x995))
(assert (axiom_frac_zero x698 x995 1000000000000000000 x1070 (uninterp_frac x698 x995)))
(assert (axiom_frac_zero x698 x995 x1063 x1079 (uninterp_frac x698 x995)))
(assert (axiom_frac_zero x698 x995 x1063 x850 (uninterp_frac x698 x995)))
(assert (axiom_frac_zero x698 x995 x1079 x1063 (uninterp_frac x698 x995)))
(assert (axiom_frac_zero x698 x995 x1173 x906 (uninterp_frac x698 x995)))
(assert (axiom_frac_zero x698 x995 x159 x997 (uninterp_frac x698 x995)))
(assert (axiom_frac_zero x698 x995 x168 x1508 (uninterp_frac x698 x995)))
(assert (axiom_frac_zero x698 x995 x596 x300 (uninterp_frac x698 x995)))
(assert (axiom_frac_zero x698 x995 x767 1000000000000000000 (uninterp_frac x698 x995)))
(assert (axiom_frac_zero x698 x995 x797 x500 (uninterp_frac x698 x995)))
(assert (axiom_frac_zero x698 x995 x846 x168 (uninterp_frac x698 x995)))
(assert (axiom_frac_zero x698 x995 x850 x1063 (uninterp_frac x698 x995)))
(assert (axiom_frac_zero x698 x995 x893 32 (uninterp_frac x698 x995)))
(assert (axiom_frac_zero x698 x995 x997 x159 (uninterp_frac x698 x995)))
(assert (axiom_frac_bound x828 1000000000000000000))
(assert (axiom_frac_zero x828 1000000000000000000 1000000000000000000 x1070 (uninterp_frac x828 1000000000000000000)))
(assert (axiom_frac_zero x828 1000000000000000000 x1063 x1079 (uninterp_frac x828 1000000000000000000)))
(assert (axiom_frac_zero x828 1000000000000000000 x1063 x850 (uninterp_frac x828 1000000000000000000)))
(assert (axiom_frac_zero x828 1000000000000000000 x1079 x1063 (uninterp_frac x828 1000000000000000000)))
(assert (axiom_frac_zero x828 1000000000000000000 x1173 x906 (uninterp_frac x828 1000000000000000000)))
(assert (axiom_frac_zero x828 1000000000000000000 x159 x997 (uninterp_frac x828 1000000000000000000)))
(assert (axiom_frac_zero x828 1000000000000000000 x168 x1508 (uninterp_frac x828 1000000000000000000)))
(assert (axiom_frac_zero x828 1000000000000000000 x596 x300 (uninterp_frac x828 1000000000000000000)))
(assert (axiom_frac_zero x828 1000000000000000000 x767 1000000000000000000 (uninterp_frac x828 1000000000000000000)))
(assert (axiom_frac_zero x828 1000000000000000000 x797 x500 (uninterp_frac x828 1000000000000000000)))
(assert (axiom_frac_zero x828 1000000000000000000 x846 x168 (uninterp_frac x828 1000000000000000000)))
(assert (axiom_frac_zero x828 1000000000000000000 x850 x1063 (uninterp_frac x828 1000000000000000000)))
(assert (axiom_frac_zero x828 1000000000000000000 x893 32 (uninterp_frac x828 1000000000000000000)))
(assert (axiom_frac_zero x828 1000000000000000000 x997 x159 (uninterp_frac x828 1000000000000000000)))
(assert (axiom_int_approximation x10))
(assert (axiom_int_approximation x100))
(assert (axiom_int_approximation x1002))
(assert (axiom_int_approximation x1004))
(assert (axiom_int_approximation x1006))
(assert (axiom_int_approximation x1012))
(assert (axiom_int_approximation x1013))
(assert (axiom_int_approximation x1015))
(assert (axiom_int_approximation x1017))
(assert (axiom_int_approximation x1018))
(assert (axiom_int_approximation x1021))
(assert (axiom_int_approximation x1022))
(assert (axiom_int_approximation x1025))
(assert (axiom_int_approximation x1026))
(assert (axiom_int_approximation x1029))
(assert (axiom_int_approximation x103))
(assert (axiom_int_approximation x1030))
(assert (axiom_int_approximation x1031))
(assert (axiom_int_approximation x1033))
(assert (axiom_int_approximation x1037))
(assert (axiom_int_approximation x1038))
(assert (axiom_int_approximation x104))
(assert (axiom_int_approximation x1041))
(assert (axiom_int_approximation x1042))
(assert (axiom_int_approximation x1044))
(assert (axiom_int_approximation x1048))
(assert (axiom_int_approximation x105))
(assert (axiom_int_approximation x1052))
(assert (axiom_int_approximation x1053))
(assert (axiom_int_approximation x1058))
(assert (axiom_int_approximation x1063))
(assert (axiom_int_approximation x1064))
(assert (axiom_int_approximation x1065))
(assert (axiom_int_approximation x1066))
(assert (axiom_int_approximation x1067))
(assert (axiom_int_approximation x1068))
(assert (axiom_int_approximation x1070))
(assert (axiom_int_approximation x1071))
(assert (axiom_int_approximation x1074))
(assert (axiom_int_approximation x1078))
(assert (axiom_int_approximation x1079))
(assert (axiom_int_approximation x1080))
(assert (axiom_int_approximation x1083))
(assert (axiom_int_approximation x1088))
(assert (axiom_int_approximation x1090))
(assert (axiom_int_approximation x1092))
(assert (axiom_int_approximation x1094))
(assert (axiom_int_approximation x1096))
(assert (axiom_int_approximation x1099))
(assert (axiom_int_approximation x11))
(assert (axiom_int_approximation x110))
(assert (axiom_int_approximation x1101))
(assert (axiom_int_approximation x1105))
(assert (axiom_int_approximation x1107))
(assert (axiom_int_approximation x1108))
(assert (axiom_int_approximation x111))
(assert (axiom_int_approximation x1114))
(assert (axiom_int_approximation x1117))
(assert (axiom_int_approximation x1119))
(assert (axiom_int_approximation x112))
(assert (axiom_int_approximation x1120))
(assert (axiom_int_approximation x1124))
(assert (axiom_int_approximation x1127))
(assert (axiom_int_approximation x113))
(assert (axiom_int_approximation x1132))
(assert (axiom_int_approximation x1134))
(assert (axiom_int_approximation x1136))
(assert (axiom_int_approximation x1137))
(assert (axiom_int_approximation x1138))
(assert (axiom_int_approximation x1141))
(assert (axiom_int_approximation x1142))
(assert (axiom_int_approximation x1144))
(assert (axiom_int_approximation x1146))
(assert (axiom_int_approximation x1148))
(assert (axiom_int_approximation x115))
(assert (axiom_int_approximation x1150))
(assert (axiom_int_approximation x1151))
(assert (axiom_int_approximation x1152))
(assert (axiom_int_approximation x1153))
(assert (axiom_int_approximation x1156))
(assert (axiom_int_approximation x1158))
(assert (axiom_int_approximation x116))
(assert (axiom_int_approximation x1160))
(assert (axiom_int_approximation x1161))
(assert (axiom_int_approximation x1163))
(assert (axiom_int_approximation x1165))
(assert (axiom_int_approximation x1166))
(assert (axiom_int_approximation x1167))
(assert (axiom_int_approximation x1168))
(assert (axiom_int_approximation x117))
(assert (axiom_int_approximation x1170))
(assert (axiom_int_approximation x1172))
(assert (axiom_int_approximation x1173))
(assert (axiom_int_approximation x1174))
(assert (axiom_int_approximation x118))
(assert (axiom_int_approximation x1182))
(assert (axiom_int_approximation x1184))
(assert (axiom_int_approximation x1187))
(assert (axiom_int_approximation x1188))
(assert (axiom_int_approximation x1191))
(assert (axiom_int_approximation x1193))
(assert (axiom_int_approximation x1200))
(assert (axiom_int_approximation x1202))
(assert (axiom_int_approximation x1206))
(assert (axiom_int_approximation x121))
(assert (axiom_int_approximation x1211))
(assert (axiom_int_approximation x1213))
(assert (axiom_int_approximation x1214))
(assert (axiom_int_approximation x1215))
(assert (axiom_int_approximation x1223))
(assert (axiom_int_approximation x1225))
(assert (axiom_int_approximation x1228))
(assert (axiom_int_approximation x123))
(assert (axiom_int_approximation x1233))
(assert (axiom_int_approximation x1238))
(assert (axiom_int_approximation x1239))
(assert (axiom_int_approximation x124))
(assert (axiom_int_approximation x1240))
(assert (axiom_int_approximation x1241))
(assert (axiom_int_approximation x1242))
(assert (axiom_int_approximation x1244))
(assert (axiom_int_approximation x1245))
(assert (axiom_int_approximation x1247))
(assert (axiom_int_approximation x1249))
(assert (axiom_int_approximation x1252))
(assert (axiom_int_approximation x1253))
(assert (axiom_int_approximation x1256))
(assert (axiom_int_approximation x1257))
(assert (axiom_int_approximation x1262))
(assert (axiom_int_approximation x1266))
(assert (axiom_int_approximation x1267))
(assert (axiom_int_approximation x1268))
(assert (axiom_int_approximation x1271))
(assert (axiom_int_approximation x1272))
(assert (axiom_int_approximation x1274))
(assert (axiom_int_approximation x1275))
(assert (axiom_int_approximation x1277))
(assert (axiom_int_approximation x1278))
(assert (axiom_int_approximation x1281))
(assert (axiom_int_approximation x1282))
(assert (axiom_int_approximation x1285))
(assert (axiom_int_approximation x1286))
(assert (axiom_int_approximation x1293))
(assert (axiom_int_approximation x1296))
(assert (axiom_int_approximation x1299))
(assert (axiom_int_approximation x130))
(assert (axiom_int_approximation x1300))
(assert (axiom_int_approximation x1301))
(assert (axiom_int_approximation x1302))
(assert (axiom_int_approximation x1303))
(assert (axiom_int_approximation x1304))
(assert (axiom_int_approximation x1307))
(assert (axiom_int_approximation x1309))
(assert (axiom_int_approximation x131))
(assert (axiom_int_approximation x1310))
(assert (axiom_int_approximation x1311))
(assert (axiom_int_approximation x1312))
(assert (axiom_int_approximation x1317))
(assert (axiom_int_approximation x1318))
(assert (axiom_int_approximation x1320))
(assert (axiom_int_approximation x1323))
(assert (axiom_int_approximation x1327))
(assert (axiom_int_approximation x1329))
(assert (axiom_int_approximation x133))
(assert (axiom_int_approximation x1332))
(assert (axiom_int_approximation x1333))
(assert (axiom_int_approximation x1335))
(assert (axiom_int_approximation x1336))
(assert (axiom_int_approximation x1340))
(assert (axiom_int_approximation x1343))
(assert (axiom_int_approximation x1344))
(assert (axiom_int_approximation x1350))
(assert (axiom_int_approximation x1352))
(assert (axiom_int_approximation x1354))
(assert (axiom_int_approximation x1362))
(assert (axiom_int_approximation x1364))
(assert (axiom_int_approximation x1366))
(assert (axiom_int_approximation x1367))
(assert (axiom_int_approximation x1373))
(assert (axiom_int_approximation x1374))
(assert (axiom_int_approximation x1375))
(assert (axiom_int_approximation x1378))
(assert (axiom_int_approximation x1379))
(assert (axiom_int_approximation x1383))
(assert (axiom_int_approximation x1384))
(assert (axiom_int_approximation x1386))
(assert (axiom_int_approximation x1389))
(assert (axiom_int_approximation x1391))
(assert (axiom_int_approximation x1397))
(assert (axiom_int_approximation x1398))
(assert (axiom_int_approximation x14))
(assert (axiom_int_approximation x140))
(assert (axiom_int_approximation x1402))
(assert (axiom_int_approximation x1404))
(assert (axiom_int_approximation x1407))
(assert (axiom_int_approximation x1408))
(assert (axiom_int_approximation x1409))
(assert (axiom_int_approximation x141))
(assert (axiom_int_approximation x1410))
(assert (axiom_int_approximation x1411))
(assert (axiom_int_approximation x1414))
(assert (axiom_int_approximation x1415))
(assert (axiom_int_approximation x1416))
(assert (axiom_int_approximation x1418))
(assert (axiom_int_approximation x1420))
(assert (axiom_int_approximation x1422))
(assert (axiom_int_approximation x1423))
(assert (axiom_int_approximation x1424))
(assert (axiom_int_approximation x1426))
(assert (axiom_int_approximation x1428))
(assert (axiom_int_approximation x1431))
(assert (axiom_int_approximation x1434))
(assert (axiom_int_approximation x1435))
(assert (axiom_int_approximation x1436))
(assert (axiom_int_approximation x1439))
(assert (axiom_int_approximation x1440))
(assert (axiom_int_approximation x1443))
(assert (axiom_int_approximation x1444))
(assert (axiom_int_approximation x1445))
(assert (axiom_int_approximation x145))
(assert (axiom_int_approximation x1450))
(assert (axiom_int_approximation x1451))
(assert (axiom_int_approximation x1452))
(assert (axiom_int_approximation x1453))
(assert (axiom_int_approximation x1457))
(assert (axiom_int_approximation x1458))
(assert (axiom_int_approximation x146))
(assert (axiom_int_approximation x1461))
(assert (axiom_int_approximation x1462))
(assert (axiom_int_approximation x1463))
(assert (axiom_int_approximation x1466))
(assert (axiom_int_approximation x1469))
(assert (axiom_int_approximation x1474))
(assert (axiom_int_approximation x1475))
(assert (axiom_int_approximation x1485))
(assert (axiom_int_approximation x1486))
(assert (axiom_int_approximation x1489))
(assert (axiom_int_approximation x149))
(assert (axiom_int_approximation x1490))
(assert (axiom_int_approximation x1492))
(assert (axiom_int_approximation x1495))
(assert (axiom_int_approximation x1499))
(assert (axiom_int_approximation x15))
(assert (axiom_int_approximation x150))
(assert (axiom_int_approximation x1501))
(assert (axiom_int_approximation x1502))
(assert (axiom_int_approximation x1504))
(assert (axiom_int_approximation x1505))
(assert (axiom_int_approximation x1506))
(assert (axiom_int_approximation x1507))
(assert (axiom_int_approximation x1508))
(assert (axiom_int_approximation x1509))
(assert (axiom_int_approximation x1510))
(assert (axiom_int_approximation x1511))
(assert (axiom_int_approximation x1513))
(assert (axiom_int_approximation x1516))
(assert (axiom_int_approximation x1517))
(assert (axiom_int_approximation x1518))
(assert (axiom_int_approximation x152))
(assert (axiom_int_approximation x1520))
(assert (axiom_int_approximation x1523))
(assert (axiom_int_approximation x153))
(assert (axiom_int_approximation x1534))
(assert (axiom_int_approximation x1535))
(assert (axiom_int_approximation x1537))
(assert (axiom_int_approximation x1540))
(assert (axiom_int_approximation x1541))
(assert (axiom_int_approximation x1548))
(assert (axiom_int_approximation x1550))
(assert (axiom_int_approximation x1551))
(assert (axiom_int_approximation x1552))
(assert (axiom_int_approximation x156))
(assert (axiom_int_approximation x159))
(assert (axiom_int_approximation x16))
(assert (axiom_int_approximation x161))
(assert (axiom_int_approximation x162))
(assert (axiom_int_approximation x164))
(assert (axiom_int_approximation x167))
(assert (axiom_int_approximation x168))
(assert (axiom_int_approximation x169))
(assert (axiom_int_approximation x174))
(assert (axiom_int_approximation x175))
(assert (axiom_int_approximation x177))
(assert (axiom_int_approximation x178))
(assert (axiom_int_approximation x179))
(assert (axiom_int_approximation x18))
(assert (axiom_int_approximation x182))
(assert (axiom_int_approximation x184))
(assert (axiom_int_approximation x194))
(assert (axiom_int_approximation x196))
(assert (axiom_int_approximation x197))
(assert (axiom_int_approximation x199))
(assert (axiom_int_approximation x202))
(assert (axiom_int_approximation x205))
(assert (axiom_int_approximation x206))
(assert (axiom_int_approximation x208))
(assert (axiom_int_approximation x210))
(assert (axiom_int_approximation x212))
(assert (axiom_int_approximation x215))
(assert (axiom_int_approximation x216))
(assert (axiom_int_approximation x217))
(assert (axiom_int_approximation x219))
(assert (axiom_int_approximation x220))
(assert (axiom_int_approximation x224))
(assert (axiom_int_approximation x225))
(assert (axiom_int_approximation x226))
(assert (axiom_int_approximation x228))
(assert (axiom_int_approximation x229))
(assert (axiom_int_approximation x230))
(assert (axiom_int_approximation x234))
(assert (axiom_int_approximation x239))
(assert (axiom_int_approximation x240))
(assert (axiom_int_approximation x241))
(assert (axiom_int_approximation x242))
(assert (axiom_int_approximation x243))
(assert (axiom_int_approximation x246))
(assert (axiom_int_approximation x247))
(assert (axiom_int_approximation x248))
(assert (axiom_int_approximation x25))
(assert (axiom_int_approximation x252))
(assert (axiom_int_approximation x253))
(assert (axiom_int_approximation x256))
(assert (axiom_int_approximation x257))
(assert (axiom_int_approximation x258))
(assert (axiom_int_approximation x260))
(assert (axiom_int_approximation x261))
(assert (axiom_int_approximation x262))
(assert (axiom_int_approximation x263))
(assert (axiom_int_approximation x265))
(assert (axiom_int_approximation x269))
(assert (axiom_int_approximation x271))
(assert (axiom_int_approximation x272))
(assert (axiom_int_approximation x273))
(assert (axiom_int_approximation x274))
(assert (axiom_int_approximation x277))
(assert (axiom_int_approximation x280))
(assert (axiom_int_approximation x281))
(assert (axiom_int_approximation x283))
(assert (axiom_int_approximation x285))
(assert (axiom_int_approximation x286))
(assert (axiom_int_approximation x288))
(assert (axiom_int_approximation x29))
(assert (axiom_int_approximation x293))
(assert (axiom_int_approximation x295))
(assert (axiom_int_approximation x296))
(assert (axiom_int_approximation x297))
(assert (axiom_int_approximation x3))
(assert (axiom_int_approximation x30))
(assert (axiom_int_approximation x300))
(assert (axiom_int_approximation x302))
(assert (axiom_int_approximation x306))
(assert (axiom_int_approximation x308))
(assert (axiom_int_approximation x313))
(assert (axiom_int_approximation x318))
(assert (axiom_int_approximation x319))
(assert (axiom_int_approximation x32))
(assert (axiom_int_approximation x322))
(assert (axiom_int_approximation x33))
(assert (axiom_int_approximation x331))
(assert (axiom_int_approximation x334))
(assert (axiom_int_approximation x338))
(assert (axiom_int_approximation x339))
(assert (axiom_int_approximation x34))
(assert (axiom_int_approximation x341))
(assert (axiom_int_approximation x342))
(assert (axiom_int_approximation x343))
(assert (axiom_int_approximation x344))
(assert (axiom_int_approximation x346))
(assert (axiom_int_approximation x347))
(assert (axiom_int_approximation x352))
(assert (axiom_int_approximation x353))
(assert (axiom_int_approximation x354))
(assert (axiom_int_approximation x359))
(assert (axiom_int_approximation x361))
(assert (axiom_int_approximation x366))
(assert (axiom_int_approximation x368))
(assert (axiom_int_approximation x369))
(assert (axiom_int_approximation x372))
(assert (axiom_int_approximation x375))
(assert (axiom_int_approximation x378))
(assert (axiom_int_approximation x385))
(assert (axiom_int_approximation x387))
(assert (axiom_int_approximation x388))
(assert (axiom_int_approximation x39))
(assert (axiom_int_approximation x394))
(assert (axiom_int_approximation x395))
(assert (axiom_int_approximation x396))
(assert (axiom_int_approximation x398))
(assert (axiom_int_approximation x4))
(assert (axiom_int_approximation x40))
(assert (axiom_int_approximation x400))
(assert (axiom_int_approximation x402))
(assert (axiom_int_approximation x403))
(assert (axiom_int_approximation x405))
(assert (axiom_int_approximation x407))
(assert (axiom_int_approximation x41))
(assert (axiom_int_approximation x410))
(assert (axiom_int_approximation x414))
(assert (axiom_int_approximation x415))
(assert (axiom_int_approximation x416))
(assert (axiom_int_approximation x419))
(assert (axiom_int_approximation x422))
(assert (axiom_int_approximation x424))
(assert (axiom_int_approximation x427))
(assert (axiom_int_approximation x43))
(assert (axiom_int_approximation x433))
(assert (axiom_int_approximation x434))
(assert (axiom_int_approximation x436))
(assert (axiom_int_approximation x437))
(assert (axiom_int_approximation x44))
(assert (axiom_int_approximation x441))
(assert (axiom_int_approximation x446))
(assert (axiom_int_approximation x448))
(assert (axiom_int_approximation x453))
(assert (axiom_int_approximation x454))
(assert (axiom_int_approximation x457))
(assert (axiom_int_approximation x458))
(assert (axiom_int_approximation x459))
(assert (axiom_int_approximation x460))
(assert (axiom_int_approximation x461))
(assert (axiom_int_approximation x462))
(assert (axiom_int_approximation x466))
(assert (axiom_int_approximation x468))
(assert (axiom_int_approximation x472))
(assert (axiom_int_approximation x476))
(assert (axiom_int_approximation x48))
(assert (axiom_int_approximation x484))
(assert (axiom_int_approximation x485))
(assert (axiom_int_approximation x49))
(assert (axiom_int_approximation x490))
(assert (axiom_int_approximation x494))
(assert (axiom_int_approximation x495))
(assert (axiom_int_approximation x497))
(assert (axiom_int_approximation x499))
(assert (axiom_int_approximation x500))
(assert (axiom_int_approximation x502))
(assert (axiom_int_approximation x503))
(assert (axiom_int_approximation x504))
(assert (axiom_int_approximation x505))
(assert (axiom_int_approximation x506))
(assert (axiom_int_approximation x508))
(assert (axiom_int_approximation x510))
(assert (axiom_int_approximation x514))
(assert (axiom_int_approximation x516))
(assert (axiom_int_approximation x517))
(assert (axiom_int_approximation x520))
(assert (axiom_int_approximation x521))
(assert (axiom_int_approximation x525))
(assert (axiom_int_approximation x528))
(assert (axiom_int_approximation x532))
(assert (axiom_int_approximation x533))
(assert (axiom_int_approximation x534))
(assert (axiom_int_approximation x537))
(assert (axiom_int_approximation x54))
(assert (axiom_int_approximation x540))
(assert (axiom_int_approximation x541))
(assert (axiom_int_approximation x542))
(assert (axiom_int_approximation x543))
(assert (axiom_int_approximation x545))
(assert (axiom_int_approximation x546))
(assert (axiom_int_approximation x548))
(assert (axiom_int_approximation x550))
(assert (axiom_int_approximation x552))
(assert (axiom_int_approximation x555))
(assert (axiom_int_approximation x557))
(assert (axiom_int_approximation x56))
(assert (axiom_int_approximation x565))
(assert (axiom_int_approximation x568))
(assert (axiom_int_approximation x572))
(assert (axiom_int_approximation x573))
(assert (axiom_int_approximation x579))
(assert (axiom_int_approximation x58))
(assert (axiom_int_approximation x580))
(assert (axiom_int_approximation x581))
(assert (axiom_int_approximation x583))
(assert (axiom_int_approximation x585))
(assert (axiom_int_approximation x586))
(assert (axiom_int_approximation x589))
(assert (axiom_int_approximation x59))
(assert (axiom_int_approximation x591))
(assert (axiom_int_approximation x592))
(assert (axiom_int_approximation x593))
(assert (axiom_int_approximation x596))
(assert (axiom_int_approximation x597))
(assert (axiom_int_approximation x598))
(assert (axiom_int_approximation x599))
(assert (axiom_int_approximation x6))
(assert (axiom_int_approximation x60))
(assert (axiom_int_approximation x601))
(assert (axiom_int_approximation x606))
(assert (axiom_int_approximation x607))
(assert (axiom_int_approximation x608))
(assert (axiom_int_approximation x609))
(assert (axiom_int_approximation x611))
(assert (axiom_int_approximation x612))
(assert (axiom_int_approximation x614))
(assert (axiom_int_approximation x616))
(assert (axiom_int_approximation x617))
(assert (axiom_int_approximation x619))
(assert (axiom_int_approximation x621))
(assert (axiom_int_approximation x624))
(assert (axiom_int_approximation x626))
(assert (axiom_int_approximation x627))
(assert (axiom_int_approximation x629))
(assert (axiom_int_approximation x63))
(assert (axiom_int_approximation x633))
(assert (axiom_int_approximation x640))
(assert (axiom_int_approximation x641))
(assert (axiom_int_approximation x642))
(assert (axiom_int_approximation x644))
(assert (axiom_int_approximation x645))
(assert (axiom_int_approximation x646))
(assert (axiom_int_approximation x650))
(assert (axiom_int_approximation x652))
(assert (axiom_int_approximation x653))
(assert (axiom_int_approximation x655))
(assert (axiom_int_approximation x657))
(assert (axiom_int_approximation x659))
(assert (axiom_int_approximation x661))
(assert (axiom_int_approximation x664))
(assert (axiom_int_approximation x665))
(assert (axiom_int_approximation x667))
(assert (axiom_int_approximation x675))
(assert (axiom_int_approximation x676))
(assert (axiom_int_approximation x678))
(assert (axiom_int_approximation x679))
(assert (axiom_int_approximation x681))
(assert (axiom_int_approximation x683))
(assert (axiom_int_approximation x684))
(assert (axiom_int_approximation x685))
(assert (axiom_int_approximation x686))
(assert (axiom_int_approximation x688))
(assert (axiom_int_approximation x69))
(assert (axiom_int_approximation x691))
(assert (axiom_int_approximation x694))
(assert (axiom_int_approximation x695))
(assert (axiom_int_approximation x696))
(assert (axiom_int_approximation x698))
(assert (axiom_int_approximation x70))
(assert (axiom_int_approximation x701))
(assert (axiom_int_approximation x702))
(assert (axiom_int_approximation x705))
(assert (axiom_int_approximation x706))
(assert (axiom_int_approximation x708))
(assert (axiom_int_approximation x710))
(assert (axiom_int_approximation x714))
(assert (axiom_int_approximation x715))
(assert (axiom_int_approximation x719))
(assert (axiom_int_approximation x720))
(assert (axiom_int_approximation x722))
(assert (axiom_int_approximation x724))
(assert (axiom_int_approximation x725))
(assert (axiom_int_approximation x727))
(assert (axiom_int_approximation x729))
(assert (axiom_int_approximation x73))
(assert (axiom_int_approximation x730))
(assert (axiom_int_approximation x731))
(assert (axiom_int_approximation x735))
(assert (axiom_int_approximation x739))
(assert (axiom_int_approximation x743))
(assert (axiom_int_approximation x749))
(assert (axiom_int_approximation x750))
(assert (axiom_int_approximation x752))
(assert (axiom_int_approximation x753))
(assert (axiom_int_approximation x755))
(assert (axiom_int_approximation x761))
(assert (axiom_int_approximation x762))
(assert (axiom_int_approximation x766))
(assert (axiom_int_approximation x767))
(assert (axiom_int_approximation x768))
(assert (axiom_int_approximation x769))
(assert (axiom_int_approximation x770))
(assert (axiom_int_approximation x773))
(assert (axiom_int_approximation x780))
(assert (axiom_int_approximation x789))
(assert (axiom_int_approximation x790))
(assert (axiom_int_approximation x793))
(assert (axiom_int_approximation x794))
(assert (axiom_int_approximation x797))
(assert (axiom_int_approximation x798))
(assert (axiom_int_approximation x800))
(assert (axiom_int_approximation x801))
(assert (axiom_int_approximation x805))
(assert (axiom_int_approximation x807))
(assert (axiom_int_approximation x809))
(assert (axiom_int_approximation x81))
(assert (axiom_int_approximation x812))
(assert (axiom_int_approximation x813))
(assert (axiom_int_approximation x814))
(assert (axiom_int_approximation x815))
(assert (axiom_int_approximation x818))
(assert (axiom_int_approximation x819))
(assert (axiom_int_approximation x82))
(assert (axiom_int_approximation x821))
(assert (axiom_int_approximation x823))
(assert (axiom_int_approximation x824))
(assert (axiom_int_approximation x826))
(assert (axiom_int_approximation x827))
(assert (axiom_int_approximation x828))
(assert (axiom_int_approximation x829))
(assert (axiom_int_approximation x83))
(assert (axiom_int_approximation x831))
(assert (axiom_int_approximation x834))
(assert (axiom_int_approximation x835))
(assert (axiom_int_approximation x836))
(assert (axiom_int_approximation x840))
(assert (axiom_int_approximation x842))
(assert (axiom_int_approximation x845))
(assert (axiom_int_approximation x846))
(assert (axiom_int_approximation x848))
(assert (axiom_int_approximation x849))
(assert (axiom_int_approximation x850))
(assert (axiom_int_approximation x851))
(assert (axiom_int_approximation x852))
(assert (axiom_int_approximation x853))
(assert (axiom_int_approximation x855))
(assert (axiom_int_approximation x857))
(assert (axiom_int_approximation x858))
(assert (axiom_int_approximation x86))
(assert (axiom_int_approximation x860))
(assert (axiom_int_approximation x861))
(assert (axiom_int_approximation x862))
(assert (axiom_int_approximation x863))
(assert (axiom_int_approximation x864))
(assert (axiom_int_approximation x866))
(assert (axiom_int_approximation x867))
(assert (axiom_int_approximation x868))
(assert (axiom_int_approximation x871))
(assert (axiom_int_approximation x875))
(assert (axiom_int_approximation x876))
(assert (axiom_int_approximation x878))
(assert (axiom_int_approximation x879))
(assert (axiom_int_approximation x88))
(assert (axiom_int_approximation x880))
(assert (axiom_int_approximation x882))
(assert (axiom_int_approximation x883))
(assert (axiom_int_approximation x885))
(assert (axiom_int_approximation x887))
(assert (axiom_int_approximation x893))
(assert (axiom_int_approximation x895))
(assert (axiom_int_approximation x896))
(assert (axiom_int_approximation x897))
(assert (axiom_int_approximation x899))
(assert (axiom_int_approximation x901))
(assert (axiom_int_approximation x904))
(assert (axiom_int_approximation x906))
(assert (axiom_int_approximation x910))
(assert (axiom_int_approximation x915))
(assert (axiom_int_approximation x917))
(assert (axiom_int_approximation x921))
(assert (axiom_int_approximation x922))
(assert (axiom_int_approximation x925))
(assert (axiom_int_approximation x930))
(assert (axiom_int_approximation x931))
(assert (axiom_int_approximation x932))
(assert (axiom_int_approximation x933))
(assert (axiom_int_approximation x936))
(assert (axiom_int_approximation x937))
(assert (axiom_int_approximation x939))
(assert (axiom_int_approximation x940))
(assert (axiom_int_approximation x942))
(assert (axiom_int_approximation x944))
(assert (axiom_int_approximation x945))
(assert (axiom_int_approximation x947))
(assert (axiom_int_approximation x948))
(assert (axiom_int_approximation x949))
(assert (axiom_int_approximation x953))
(assert (axiom_int_approximation x954))
(assert (axiom_int_approximation x955))
(assert (axiom_int_approximation x956))
(assert (axiom_int_approximation x958))
(assert (axiom_int_approximation x96))
(assert (axiom_int_approximation x960))
(assert (axiom_int_approximation x961))
(assert (axiom_int_approximation x962))
(assert (axiom_int_approximation x965))
(assert (axiom_int_approximation x966))
(assert (axiom_int_approximation x967))
(assert (axiom_int_approximation x975))
(assert (axiom_int_approximation x976))
(assert (axiom_int_approximation x977))
(assert (axiom_int_approximation x98))
(assert (axiom_int_approximation x983))
(assert (axiom_int_approximation x984))
(assert (axiom_int_approximation x99))
(assert (axiom_int_approximation x990))
(assert (axiom_int_approximation x992))
(assert (axiom_int_approximation x995))
(assert (axiom_int_approximation x997))
(assert (axiom_int_approximation x999))
(assert (x682 x657))
(assert (x682 x1182))
(assert (= (x1177 x341) (ite (= x341 x372) x667 (x1355 x341))))
(assert (x682 x701))
(assert (x1043 x516))
(assert (x682 x1463))
(assert (=> (< (- x1101 1) 10000) (= (x1321 x1101) (x450 x1101))))
(assert (= 115792089237316195423570985008687907853269984665640564039457584007913129639904 (x918 (x450 115792089237316195423570985008687907853269984665640564039457584007913129639904))))
(assert (= x1215 (x918 (x1321 x1215))))
(assert (= (x535 x1012) (ite (= x1012 x1015) x1461 (x38 x1012))))
(assert (x682 x1282))
(assert (= (x918 (x450 468353030)) 468353030))
(assert (x682 x485))
(assert (= (x1321 1461501637330902918203684832716283019655932542975) (x450 1461501637330902918203684832716283019655932542975)))
(assert (= x331 (x918 (x1321 x331))))
(assert (x682 x508))
(assert (= (ite (= x794 x617) x407 (x1177 x617)) (x1442 x617)))
(assert (= (x918 (x1321 x243)) x243))
(assert (x682 x300))
(assert (=> (< (- x1252 1) 10000) (= (x1321 x1252) (x450 x1252))))
(assert (x682 x1017))
(assert (= (x1218 x1335) (ite (and x1315 (not x235) x759) (x358 x1335) (x1251 x1335))))
(assert (= x1391 (x918 (x1321 x1391))))
(assert (= (ite (and x1394 x973 (not x80) (not x176)) (x1442 x462) (ite (and x1394 (not x80) (not x973)) (x1177 x462) (ite (and x1394 x80) (x1177 x462) (x950 x462)))) (x1478 x462)))
(assert (= (x918 (x450 635128645)) 635128645))
(assert (x682 x1252))
(assert (= (ite (= x1172 x545) x366 (x869 x1172)) (x1076 x1172)))
(assert (x682 x1146))
(assert (x682 x846))
(assert (= 274184521717934524641157099916833587206 (x918 (x1321 274184521717934524641157099916833587206))))
(assert (x682 x521))
(assert (= (x365 x617) (ite (and x639 x673 (not x26)) (x65 x617) (x979 x617))))
(assert (=> (< (- x871 1) 10000) (= (x1321 x871) (x450 x871))))
(assert (x1043 x1537))
(assert (= (ite (and (not x26) x639 x673) (x65 x661) (x979 x661)) (x365 x661)))
(assert (x682 x858))
(assert (=> (< (- x866 1) 10000) (= (x1321 x866) (x450 x866))))
(assert (= (x404 x295) 0))
(assert (= (x774 x1272) (ite (= x1272 x11) x893 (x1019 x1272))))
(assert (x1043 x1373))
(assert (x682 x220))
(assert (= (x1321 1968616202) (x450 1968616202)))
(assert (x682 x1301))
(assert (x682 x1318))
(assert (x682 x103))
(assert (x682 x812))
(assert (x1043 x1540))
(assert (= (x1076 x297) (ite (= x297 x545) x366 (x869 x297))))
(assert (x682 x1327))
(assert (x682 x206))
(assert (x682 x1445))
(assert (x682 x940))
(assert (= (x918 (x1321 x206)) x206))
(assert (x682 x608))
(assert (= (ite (= x225 x794) x407 (x1177 x225)) (x1442 x225)))
(assert (x682 x871))
(assert (x682 x1375))
(assert (x682 x617))
(assert (x682 x164))
(assert (x682 x353))
(assert (x682 x925))
(assert (x682 x612))
(assert (= (ite (= x1022 x1272) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x36 x1272)) (x970 x1272)))
(assert (= 69947311 (x918 (x450 69947311))))
(assert (x682 x1379))
(assert (x1043 x1137))
(assert (= x1385 (and (not x654) x309)))
(assert (= (x218 x617) (ite (= x617 x878) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x776 x617))))
(assert (x682 x572))
(assert (x682 x715))
(assert (= (ite (= x794 x11) x893 (x1019 x794)) (x774 x794)))
(assert (= (x1212 x1291) (ite (and x1536 x1394) (x1100 x1291) (x988 x1291))))
(assert (= (or (and (not x718) x1195) (and x1280 x726) (and x1109 (not x1121))) x391))
(assert (x1043 x1247))
(assert (x682 x1173))
(assert (x682 x503))
(assert (= (x450 2418364589) (x1321 2418364589)))
(assert (= x1494 (or (and x426 (not x1525)) (and x884 (not x77)))))
(assert (= (x535 x851) (ite (= x851 x1015) x1461 (x38 x851))))
(assert (x682 x1272))
(assert (x682 x722))
(assert (= (x218 x1511) (ite (= x1511 x878) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x776 x1511))))
(assert (x682 x1418))
(assert (=> (< (- x184 1) 10000) (= (x450 x184) (x1321 x184))))
(assert (= (x1539 x617) (ite (= x617 x1166) x826 (x970 x617))))
(assert (x682 x954))
(assert (x682 x1550))
(assert (= x1465 (=> (= x1537 x619) x132)))
(assert (=> (> (+ 10000 1) x1137) (= (x1321 x1137) (x450 x1137))))
(assert (x1043 x234))
(assert (x682 x69))
(assert (x682 x1344))
(assert (= (x913 x1511) (ite (and x1171 x788) (x687 x1511) (x1369 x1511))))
(assert (=> (> (+ 10000 1) x1439) (= (x450 x1439) (x1321 x1439))))
(assert (= (x404 224) 0))
(assert (= (x918 (x1321 x1029)) x1029))
(assert (x682 x955))
(assert (=> (< (- x1099 1) 10000) (= (x1321 x1099) (x450 x1099))))
(assert (= (x913 x546) (ite (and x1171 x788) (x687 x546) (x1369 x546))))
(assert (x682 x667))
(assert (x682 x1238))
(assert (= (=> (and (= x392 (>= x113 x815)) (= x1153 x845) (= x113 x149) (= x6 x815)) (and x392 (=> (and (= x1268 x1332) (= x984 x1187) (= x1392 (<= x1187 x1332))) (and (=> (and (= x1506 x715) (= x888 (<= x308 x715)) (= x1489 x308)) (and (=> (and (= x646 x789) (= x1472 (>= x1523 x646)) (= x1523 x1153)) (and x1472 (=> (and (= true x1339) (= 2939843472 x1352) (= x249 true) (= x217 x840) (= 2512682246 x116) (= true x1118) (= x1466 x1267) (= x258 2939843472) (= true x1353) (= 2939843472 x793) (= 87118632 x857) (= 3123789364 x88) (= 1517119036 x849) (= x528 2939843472) (= (<= x1466 x840) x1546) (= x1236 true)) (and (=> (and (= x874 (<= x1138 x1158)) (= x1138 x940) (= x1299 x1158)) (and (=> (and (= (<= x247 x945) x549) (= x873 false) (= x1106 true) (= x945 x494) (= 2512682246 x1517) (= x503 2939843472) (= x247 x901) (= false x1319)) x549) x874)) x1546)))) x888)) x1392)))) x938))
(assert (x1043 x405))
(assert (=> (> (+ 10000 1) x398) (= (x1321 x398) (x450 x398))))
(assert (x682 x1415))
(assert (= x1282 (x918 (x1321 x1282))))
(assert (= x1055 (=> (= x557 x876) x787)))
(assert (= (ite (= x1335 x1166) x826 (x970 x1335)) (x1539 x1335)))
(assert (x1043 x644))
(assert (x682 x70))
(assert (= x1439 (x918 (x1321 x1439))))
(assert (= x1001 (=> (= (< 0 x1099) x567) (and (=> x567 x1290) (=> (not x567) x1419)))))
(assert (x682 x6))
(assert (x443 x457 x1271 x339 x1038))
(assert (x682 x285))
(assert (= (x450 2258409472) (x1321 2258409472)))
(assert (= (x535 x1172) (ite (= x1172 x1015) x1461 (x38 x1172))))
(assert (=> (< (- x118 1) 10000) (= (x1321 x118) (x450 x118))))
(assert (x994 x1451 x117))
(assert (x682 x145))
(assert (x682 x346))
(assert (= (x450 2835717307) (x1321 2835717307)))
(assert (x682 x937))
(assert (= (ite (= x510 x1272) x252 (x1539 x1272)) (x1515 x1272)))
(assert (= (x869 x295) (ite (= x295 x676) x967 (x1097 x295))))
(assert (= x493 x723))
(assert (= (x918 (x1321 x514)) x514))
(assert (x682 x1520))
(assert (= (x918 (x1321 274184521717934524641157099916833587218)) 274184521717934524641157099916833587218))
(assert (= (=> (= 0 x876) x787) x570))
(assert (x682 x1502))
(assert (x682 x3))
(assert (= x1512 (and x478 x1047)))
(assert (x682 x944))
(assert (x682 x1262))
(assert (x682 x921))
(assert (x682 x1300))
(assert (x682 x453))
(assert (= (x918 (x1321 x1344)) x1344))
(assert (x682 x834))
(assert (= (ite (and x788 x1171) (x687 x341) (x1369 x341)) (x913 x341)))
(assert (= (x918 (x1321 x1450)) x1450))
(assert (x682 x958))
(assert (= (x918 (x450 2960351575)) 2960351575))
(assert (=> (> (+ 10000 1) x1256) (= (x450 x1256) (x1321 x1256))))
(assert (x1043 x645))
(assert (x682 x246))
(assert (x682 x1537))
(assert (= (or (and (not x673) x639) x298 (and x759 (not x1315))) x566))
(assert (=> (< (- x999 1) 10000) (= (x450 x999) (x1321 x999))))
(assert (= (x918 (x450 2868243304)) 2868243304))
(assert (= (x987 x1522) (ite (and x1394 x1536) (x1294 x1522) (x301 x1522))))
(assert (x682 x1058))
(assert (= (x218 x341) (ite (= x341 x878) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x776 x341))))
(assert (x682 x4))
(assert (x682 x146))
(assert (x682 x681))
(assert (= (ite (= x341 x676) x967 (x1097 x341)) (x869 x341)))
(assert (=> (> (+ 10000 1) x1431) (= (x1321 x1431) (x450 x1431))))
(assert (= (ite (= x295 x878) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x776 x295)) (x218 x295)))
(assert (x682 x504))
(assert (x682 x942))
(assert (= (x918 (x1321 x405)) x405))
(assert (x682 x354))
(assert (= (x918 (x1321 x1407)) x1407))
(assert (x682 x433))
(assert (= (ite (= x112 x297) x41 (x186 x297)) (x38 x297)))
(assert (=> (> (+ 10000 1) x1184) (= (x1321 x1184) (x450 x1184))))
(assert (x682 x1451))
(assert (= (x218 x661) (ite (= x878 x661) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x776 x661))))
(assert (= (x774 x1015) (ite (= x1015 x11) x893 (x1019 x1015))))
(assert (=> (> (+ 10000 1) x876) (= (x1321 x876) (x450 x876))))
(assert (= (x918 (x1321 x178)) x178))
(assert (=> (< (- x1021 1) 10000) (= (x1321 x1021) (x450 x1021))))
(assert (= (ite (= x676 x617) x967 (x1097 x617)) (x869 x617)))
(assert (x682 x30))
(assert (x682 x271))
(assert (= (x450 635128645) (x1321 635128645)))
(assert (x682 x762))
(assert (= (x1321 759532456) (x450 759532456)))
(assert (x1314 x457))
(assert (x1043 x863))
(assert (=> (< (- x354 1) 10000) (= (x450 x354) (x1321 x354))))
(assert (= (ite (and (not x176) x1394 (not x80) x973) (x1442 x1335) (ite (and (not x973) x1394 (not x80)) (x1177 x1335) (ite (and x1394 x80) (x1177 x1335) (x950 x1335)))) (x1478 x1335)))
(assert (= x1254 (or (and x1328 (not x810)) (and x323 (not x190)))))
(assert (= (x918 (x450 18446744073709551615)) 18446744073709551615))
(assert (= x426 (and x912 x1468)))
(assert (= x248 (x918 (x1321 x248))))
(assert (x682 x1422))
(assert (x682 x848))
(assert (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x918 (x450 115792089237316195423570985008687907853269984665640564039457584007913129639935))))
(assert (=> (< (- x1379 1) 10000) (= (x1321 x1379) (x450 x1379))))
(assert (x1043 x1440))
(assert (= (x918 (x1321 x1018)) x1018))
(assert (x1043 x1520))
(assert (x682 x121))
(assert (x682 x1119))
(assert (x682 x642))
(assert (x682 x43))
(assert (x1043 x248))
(assert (x682 x1074))
(assert (x682 x241))
(assert (x682 x113))
(assert (x682 x684))
(assert (x682 x1151))
(assert (= (x1076 x341) (ite (= x341 x545) x366 (x869 x341))))
(assert (x682 x852))
(assert (= (x869 x11) (ite (= x11 x676) x967 (x1097 x11))))
(assert (= (x1177 x462) (ite (= x372 x462) x667 (x1355 x462))))
(assert (x682 x1281))
(assert (= (x450 274184521717934524641157099916833587214) (x1321 274184521717934524641157099916833587214)))
(assert (= (x774 x851) (ite (= x851 x11) x893 (x1019 x851))))
(assert (=> (< (- x1552 1) 10000) (= (x450 x1552) (x1321 x1552))))
(assert (= (ite (= x295 x1015) x1461 (x38 x295)) (x535 x295)))
(assert (= (ite (and x673 (not x26) x639) (x65 x11) (x979 x11)) (x365 x11)))
(assert (= (x65 x297) (ite (and x639 (not x1036) x673 x1198 x981 x689) (x1076 x297) (ite (and x639 (not x981) x689 x673 x1198) (x869 x297) (ite (and x673 x639 (not x689) x1198) (x1097 x297) (ite (and x673 (not x1198) x639) (x218 x297) (x978 x297)))))))
(assert (= x527 (=> (and (= x33 x960) (= x603 (>= x1411 0)) (= (x891 (x1321 x948)) x208) (= (< x1136 115792089237316195423570985008687907853269984665640564039457584007913129639936) x349) (= (= x948 274184521717934524641157099916833587218) x1171) (= x1136 (x1085 (x1321 x948))) (= (x1085 (x1321 274184521717934524641157099916833587206)) x1411) (= (x1085 (x1321 274184521717934524641157099916833587206)) x359) x603 x349 x367 (= (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x891 (x1321 x948))) x367)) (and (=> (and (= x1349 (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x790) (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x790) true) (> 64 x790)))) (>= 1461501637330902918203684832716283019655932542975 x1242) (= x709 (x577 (x1321 274184521717934524641157099916833587206) (x450 1) 0)) (< (+ x1486 x1033) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (not (> 4 x59)) (not x1393) (= x708 x1033) (= x691 x1486) (= 76450787359836037641860180984291677749980919077056822294353438043884394381312 x1453) (= x1033 (x1057 x974)) (not x1473) (= x1200 x1436) (= (x1498 (x1321 274184521717934524641157099916833587218)) x1044) (not (= x1150 649617121)) (= x1150 2835717307) (= x1393 (<= 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x1486 x1033))) (= x1242 x286) (= x82 274184521717934524641157099916833587206) (not x1349) (= 274184521717934524641157099916833587206 x818) (= x1129 (x577 (x1321 274184521717934524641157099916833587206) (x450 1) 0)) (= x1170 (+ x708 x691)) (= (x577 (x1321 x1242) (x450 1) 0) x582) (= (x84 x709) x344) (= 68 x59) x1171 (= (x577 (x1321 x1242) (x450 1) 0) x974) (>= x344 0) (<= 0 x1033) (not (= x1150 1889567281)) (= (x1207 (- x59 4)) x790) (not (< x1150 649617121)) (= (> x1486 x344) x445) (= x1473 (< x344 x1436)) (not x445) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x344) (< 0 x1044) (<= x1033 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x1445 1) (= x59 x33) (= x1486 x1436) (= 32 x352) (= x657 x520) (= x1242 x801) (not (= 826074471 x1150)) (= (x1207 (- x344 x1436)) x659) (not (= x1150 2514000705))) x760) (=> (not x1171) x1322)))))
(assert (= (=> (and (= (x577 (x1321 x248) x1554 0) x1522) (<= 0 x1120) (= (= 0 x241) x982) (= x1554 (x577 (x1321 x1099) (x450 6) 0)) (not (> x1099 x1120)) (<= x1120 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x987 x1522) x241) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x241) (= (x649 1461501637330902918203684832716283019655932542975 x724) x248) (<= 0 x241)) (and (=> (and (= (x470 x1230) x1354) (= (x577 (x1321 x1551) x588 0) x1230) (= 0 x179) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1354) (not x982) (= (x649 1461501637330902918203684832716283019655932542975 x724) x1551) (= x588 (x577 (x1321 x1099) (x450 10) 0)) (= x1354 x906) (<= 0 x1354)) x94) (=> x982 x1001))) x371))
(assert (= (x927 x456) (ite (and x799 x160) (x411 x456) (ite (and x452 x799 (not x160)) (x411 x456) (x95 x456)))))
(assert (= (x774 x1172) (ite (= x1172 x11) x893 (x1019 x1172))))
(assert (x682 x436))
(assert (= x41 (x38 x112)))
(assert (x682 x1336))
(assert (x682 x168))
(assert (x1043 x540))
(assert (= (x918 (x1321 x917)) x917))
(assert (x682 x821))
(assert (= (ite (= x1335 x1022) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x36 x1335)) (x970 x1335)))
(assert (= (x918 (x450 3123789364)) 3123789364))
(assert (x682 x375))
(assert (x682 x1424))
(assert (x1043 x1064))
(assert (x682 x1508))
(assert (x682 x710))
(assert (x1043 x1223))
(assert (x682 x182))
(assert (= x461 (x918 (x1321 x461))))
(assert (= (x918 (x1321 x506)) x506))
(assert (x682 x836))
(assert (x682 x1163))
(assert (= x1277 (x918 (x1321 x1277))))
(assert (= (ite (= x427 x1092) x585 (x218 x1092)) (x1097 x1092)))
(assert (= (ite (and x738 x799) (x996 x222) (x737 x222)) (x1186 x222)))
(assert (x682 x790))
(assert (= x1247 (x918 (x1321 x1247))))
(assert (= (x918 (x1321 x1184)) x1184))
(assert (x682 x1241))
(assert (= (x918 (x1276 x13 1)) (+ (x918 x13) 1)))
(assert (x682 x224))
(assert (=> (> (+ 10000 1) x540) (= (x450 x540) (x1321 x540))))
(assert (x1043 x514))
(assert (x1043 x621))
(assert (=> (> (+ 10000 1) x1485) (= (x450 x1485) (x1321 x1485))))
(assert (x1043 x260))
(assert (= (ite (and (not x80) (not x176) x1394 x973) (x1442 x851) (ite (and (not x80) (not x973) x1394) (x1177 x851) (ite (and x1394 x80) (x1177 x851) (x950 x851)))) (x1478 x851)))
(assert (=> (> (+ 10000 1) x1550) (= (x450 x1550) (x1321 x1550))))
(assert (= x985 x1265))
(assert (= x1002 (x918 (x1321 x1002))))
(assert (x1043 x331))
(assert (= (x918 (x1321 x1099)) x1099))
(assert (x1043 x555))
(assert (= (x913 x11) (ite (and x788 x1171) (x687 x11) (x1369 x11))))
(assert (x682 x915))
(assert (= x1135 (and x791 x982)))
(assert (x682 x1013))
(assert (= (and (not x264) x1112) x1529))
(assert (x682 x454))
(assert (x682 x405))
(assert (x682 x1066))
(assert (= x1021 (x918 (x1321 x1021))))
(assert (= x1433 (and x1109 x1121)))
(assert (= (x1177 x453) (ite (= x453 x372) x667 (x1355 x453))))
(assert (= (x1478 x617) (ite (and (not x80) (not x176) x1394 x973) (x1442 x617) (ite (and (not x973) (not x80) x1394) (x1177 x617) (ite (and x1394 x80) (x1177 x617) (x950 x617))))))
(assert (=> (< (- x1520 1) 10000) (= (x450 x1520) (x1321 x1520))))
(assert (= (x1212 x553) (ite (and x1394 x1536) (x1100 x553) (x988 x553))))
(assert (= x533 (x918 (x1321 x533))))
(assert (=> (> (+ 10000 1) x537) (= (x450 x537) (x1321 x537))))
(assert (x682 x1242))
(assert (x1043 x100))
(assert (x682 x797))
(assert (x682 x494))
(assert (x1043 x256))
(assert (=> (> (+ 10000 1) x626) (= (x450 x626) (x1321 x626))))
(assert (= (x406 x295) (ite (and x332 x985) (x774 x295) (x839 x295))))
(assert (x1043 x1300))
(assert (x682 x1244))
(assert (x682 x1166))
(assert (= (x918 (x1321 x1223)) x1223))
(assert (x682 x533))
(assert (x682 x407))
(assert (x1043 x110))
(assert (x682 x1012))
(assert (= (ite (= x11 x297) x893 (x1019 x297)) (x774 x297)))
(assert (x1043 x1327))
(assert (= (ite (= x794 x546) x407 (x1177 x546)) (x1442 x546)))
(assert (x682 x730))
(assert (= (ite (= x851 x794) x407 (x1177 x851)) (x1442 x851)))
(assert (= (x450 2293535753) (x1321 2293535753)))
(assert (= (ite (= x1166 x341) x826 (x970 x341)) (x1539 x341)))
(assert (= (x1321 142201243) (x450 142201243)))
(assert (x682 x995))
(assert (= (ite (= x1335 x510) x252 (x1539 x1335)) (x1515 x1335)))
(assert (= x912 (and x820 x777)))
(assert (= (x1390 x23) (ite (and x799 x160) (x1210 x23) (ite (and (not x160) x452 x799) (x128 x23) (x1289 x23)))))
(assert (= (ite (= x1378 x676) x967 (x1097 x1378)) (x869 x1378)))
(assert (x682 x624))
(assert (=> (> (+ 10000 1) x1300) (= (x450 x1300) (x1321 x1300))))
(assert (x682 x302))
(assert (= x841 (=> (and (<= x766 1461501637330902918203684832716283019655932542975) (= x394 x580) (= false x1234) (<= 0 x123) (>= x904 0) (<= x123 1461501637330902918203684832716283019655932542975) x804 x825 (<= x580 1461501637330902918203684832716283019655932542975) (= x716 (> (x1498 (x1321 274184521717934524641157099916833587218)) 0)) (= 5 x1312) (= x1030 (x1085 (x1321 274184521717934524641157099916833587218))) (>= 1461501637330902918203684832716283019655932542975 x39) (<= 0 x1030) (= x848 x1344) (= (< 0 (x1498 (x1321 274184521717934524641157099916833587214))) x804) (= x275 false) (>= x652 0) (= x825 (< 0 (x1498 (x1321 274184521717934524641157099916833587206)))) (= 2939843472 x1435) (>= 1461501637330902918203684832716283019655932542975 x73) (= x574 false) (= (x1085 (x1321 274184521717934524641157099916833587214)) x904) (>= x580 0) (<= 0 x73) (>= x766 0) x716 (= false x1086) (= x1343 x766) (= x652 (x1085 (x1321 274184521717934524641157099916833587206))) (<= 0 x39) (= x73 x947)) x165)))
(assert (= x1327 (x918 (x1321 x1327))))
(assert (= (x406 x546) (ite (and x332 x985) (x774 x546) (x839 x546))))
(assert (x1043 x675))
(assert (= (and x810 x1328) x71))
(assert (= (ite (= x11 x878) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x776 x11)) (x218 x11)))
(assert true)
(assert (= (or (and x264 x1112) x52) x799))
(assert (= x560 (=> (and (<= x1463 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x417 x711) x1463) (= (x649 1461501637330902918203684832716283019655932542975 x724) x1440) (>= x1463 0) (= x380 (x577 (x1321 x1245) (x450 6) 0)) (= (x577 (x1321 x1440) x380 0) x711) (= (= x1463 0) x77)) (and (=> (and (= x1434 x1245) (not x77)) x732) (=> (and (not x188) (= (x1207 (- x1245 1)) x145) (= x188 (> x145 0)) x77) x544)))))
(assert (= (ite (= x11 x661) x893 (x1019 x661)) (x774 x661)))
(assert (=> (< (- x1215 1) 10000) (= (x1321 x1215) (x450 x1215))))
(assert (= (x918 (x1321 x419)) x419))
(assert (=> (> (+ 10000 1) x234) (= (x450 x234) (x1321 x234))))
(assert (x682 x616))
(assert (= (x918 (x1321 x1551)) x1551))
(assert (x682 x887))
(assert (= (x1076 x546) (ite (= x545 x546) x366 (x869 x546))))
(assert (x682 x331))
(assert (= (x918 (x1321 x627)) x627))
(assert (x682 x297))
(assert (= (x1177 x295) (ite (= x295 x372) x667 (x1355 x295))))
(assert (x682 x461))
(assert (x1043 x533))
(assert (x682 x269))
(assert (= x1419 (=> (= x215 0) x1224)))
(assert (x682 x1228))
(assert (=> (> (+ 10000 1) x814) (= (x1321 x814) (x450 x814))))
(assert (x682 x719))
(assert (x1043 x614))
(assert (= 0 (x404 x617)))
(assert (x1043 x1423))
(assert (x267 x724 x1320))
(assert (= (x450 911411945) (x1321 911411945)))
(assert (= (x1269 x295) (ite (= x295 x395) x1317 (x1515 x295))))
(assert (= (=> (and (or (and (= x159 0) (= x1409 0) x647) (and (= (x1186 x712) x858) (= x159 x858) (= (x649 1461501637330902918203684832716283019655932542975 x724) x930) (<= 0 x858) (= (x649 1461501637330902918203684832716283019655932542975 x1238) x506) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x858) (= (x577 (x1321 x1537) (x450 9) 0) x700) (= x911 (x577 (x1321 x930) x700 0)) (= x1409 1) (not x647) (= (x577 (x1321 x506) x911 0) x712))) (= x647 (= 0 x1537))) x211) x132))
(assert (x682 x967))
(assert (= (x918 (x1321 x866)) x866))
(assert (= x110 (x918 (x1321 x110))))
(assert (x682 x272))
(assert (x682 x1469))
(assert (= (ite (and x1536 x1394) (x1294 x634) (x301 x634)) (x987 x634)))
(assert (= x1279 x791))
(assert (= (x918 (x1321 x614)) x614))
(assert (= (=> (= (< 0 x103) x744) (and (=> (not x744) x570) (=> x744 x847))) x1246))
(assert (=> (> (+ 10000 1) x552) (= (x450 x552) (x1321 x552))))
(assert (= (x918 (x1321 x1535)) x1535))
(assert (x682 x750))
(assert (=> (> (+ 10000 1) x110) (= (x1321 x110) (x450 x110))))
(assert (x682 x460))
(assert (x682 x1452))
(assert (= (ite (= x1272 x1015) x1461 (x38 x1272)) (x535 x1272)))
(assert (x682 x1268))
(assert (x682 x58))
(assert (x682 x1080))
(assert (= (x918 (x1321 x863)) x863))
(assert (x1043 x611))
(assert (x682 x606))
(assert (x267 x272 x253))
(assert (= (ite (= x661 x427) x585 (x218 x661)) (x1097 x661)))
(assert (x682 x174))
(assert (= x143 (=> (and (<= x887 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x577 (x1321 x933) x751 0) x1176) (= x887 (x31 x1176)) (= (x577 (x1321 x1029) (x450 10) 0) x751) (> 2293535753 x293) (< x293 468353030) (= x169 x887) (= 69947311 x293) (= x735 (x1498 (x1321 274184521717934524641157099916833587206))) (< x293 911411945) (<= x933 1461501637330902918203684832716283019655932542975) (> x735 0) (>= x887 0)) (=> (and (= x848 x1083) (= x39 x1300) (= x1247 x73) (= x169 x217)) x254))))
(assert (x682 x1225))
(assert (x682 x831))
(assert (= (=> (and (= x199 (x417 x37)) (= (x577 (x1321 x1422) x106 0) x37) (= x106 (x577 (x1321 x103) (x450 6) 0)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1120) (>= x199 0) (>= x1120 0) (= (x649 1461501637330902918203684832716283019655932542975 x724) x1422) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x199) (= (= 0 x199) x777) (not (> x949 x1120))) (and (=> (and (>= x939 0) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x939) (= x677 (x577 (x1321 x1274) x628 0)) (= (x649 1461501637330902918203684832716283019655932542975 x724) x1274) (= (x577 (x1321 x103) (x450 10) 0) x628) (= (x328 x677) x939) (= x300 x939) (= x1278 0) (not x777)) x1493) (=> x777 x786))) x991))
(assert (=> (< (- x930 1) 10000) (= (x450 x930) (x1321 x930))))
(assert (= x45 (=> (and (>= x1120 0) (= (x1390 x816) x476) (= x672 (x577 (x1321 x1277) x214 0)) (= x294 (> x476 0)) (not (< x1120 x1099)) (<= x476 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= x476 0) (= (x649 1461501637330902918203684832716283019655932542975 x1238) x1391) (= x214 (x577 (x1321 x1099) (x450 7) 0)) (= (x649 1461501637330902918203684832716283019655932542975 x724) x1277) (= x816 (x577 (x1321 x1391) x672 0)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1120)) (and (=> (and (= x20 (x577 (x1321 x1099) (x450 9) 0)) (= x1507 (x649 1461501637330902918203684832716283019655932542975 x1238)) (= (x577 (x1321 x1191) x20 0) x1553) (= x962 (x1186 x222)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x962) (<= 0 x962) (= (x577 (x1321 x1507) x1553 0) x222) x294 (= 0 x1409) (= x962 x159) (= (x649 1461501637330902918203684832716283019655932542975 x724) x1191)) x211) (=> (not x294) x491)))))
(assert (= (x38 x1092) (ite (= x112 x1092) x41 (x186 x1092))))
(assert (=> (> (+ 10000 1) x555) (= (x450 x555) (x1321 x555))))
(assert (x682 x997))
(assert (x682 x860))
(assert (x682 x86))
(assert (x682 x1101))
(assert (= (x406 x851) (ite (and x332 x985) (x774 x851) (x839 x851))))
(assert (= (x38 x642) (ite (= x112 x642) x41 (x186 x642))))
(assert (x1043 x727))
(assert (x682 x159))
(assert (x682 x1462))
(assert (x1043 x1431))
(assert (= 2798343961 (x918 (x450 2798343961))))
(assert (= (x450 2512682246) (x1321 2512682246)))
(assert (x682 x499))
(assert (= (x918 (x1321 x722)) x722))
(assert (= (ite (= x794 x1015) x407 (x1177 x1015)) (x1442 x1015)))
(assert (= (ite (and x654 x309) (x142 x1335) (x615 x1335)) (x745 x1335)))
(assert (x1043 x1420))
(assert (x682 x322))
(assert (= (x404 x1012) 0))
(assert (= (x450 274184521717934524641157099916833587218) (x1321 274184521717934524641157099916833587218)))
(assert (= x1083 (x918 (x1321 x1083))))
(assert (x682 x961))
(assert (= (x918 (x1321 x1552)) x1552))
(assert (= (x918 (x1321 x398)) x398))
(assert (x682 x1215))
(assert (x1043 x103))
(assert (= (ite (and (not x26) x639 x673) (x65 x1172) (x979 x1172)) (x365 x1172)))
(assert (x682 x1453))
(assert (x682 x1053))
(assert (= 2061678023 (x918 (x450 2061678023))))
(assert (x1043 x369))
(assert (= (ite (= x1172 x112) x41 (x186 x1172)) (x38 x1172)))
(assert (= (=> (and (> 468353030 x86) (>= x1167 0) (>= 1461501637330902918203684832716283019655932542975 x855) (<= x1167 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x577 (x1321 x242) x1179 0) x1082) (= (x577 (x1321 x1428) (x450 9) 0) x1056) (= x86 142201243) (< x86 2293535753) (= x1114 x1167) (not (= x86 69947311)) (not (= 87118632 x86)) (= (x1498 (x1321 274184521717934524641157099916833587206)) x1452) (= x1179 (x577 (x1321 x855) x1056 0)) (<= x242 1461501637330902918203684832716283019655932542975) (< x86 911411945) (= x1167 (x996 x1082)) (> x1452 0)) (=> (and (= x940 x1114) (= x992 x39) (= x848 x206) (= x1193 x73)) x35)) x464))
(assert (=> (> (+ 10000 1) x1450) (= (x1321 x1450) (x450 x1450))))
(assert (= x547 (=> (and (< x550 2960351575) (<= x414 1461501637330902918203684832716283019655932542975) (not (= x550 2293535753)) (> 2690754053 x550) (<= x1137 1461501637330902918203684832716283019655932542975) (= 2532887486 x550) (= x3 x845) (not (> 2293535753 x550)) (> x32 0) (= (x577 (x1321 x1137) x832 0) x822) (= x539 (x577 (x1321 x1064) (x450 4) 0)) (<= x3 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x577 (x1321 x1423) x539 0) x832) (= x1430 (x577 (x1321 x414) x822 0)) (<= 0 x3) (not (= 2512682246 x550)) (>= 1461501637330902918203684832716283019655932542975 x1423) (= x3 (x1180 x1430)) (not (= 2418364589 x550)) (= (x1498 (x1321 274184521717934524641157099916833587206)) x32)) x938)))
(assert (x682 x1317))
(assert (= (x1442 x1012) (ite (= x1012 x794) x407 (x1177 x1012))))
(assert (x682 x1211))
(assert (= (x1478 x1015) (ite (and x1394 (not x176) (not x80) x973) (x1442 x1015) (ite (and (not x80) (not x973) x1394) (x1177 x1015) (ite (and x80 x1394) (x1177 x1015) (x950 x1015))))))
(assert (= 2258409472 (x918 (x450 2258409472))))
(assert (x682 x217))
(assert (=> (< (- x105 1) 10000) (= (x1321 x105) (x450 x105))))
(assert (x682 x1397))
(assert (= x564 x496))
(assert (x682 x1037))
(assert (=> (< (- x937 1) 10000) (= (x450 x937) (x1321 x937))))
(assert (= x1394 x1334))
(assert (x1043 x1239))
(assert (= x280 (x918 (x1321 x280))))
(assert (=> (> (+ 10000 1) x855) (= (x450 x855) (x1321 x855))))
(assert (= x1290 (=> (and (= x1307 (x649 1461501637330902918203684832716283019655932542975 x724)) (<= x739 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x577 (x1321 x1099) (x450 6) 0) x172) (= (x987 x198) x739) (>= x739 0) (= x810 (= 0 x739)) (= x198 (x577 (x1321 x1307) x172 0))) (and (=> x810 x717) (=> (and (not x810) (= x1099 x1031)) x377)))))
(assert (x682 x1184))
(assert (=> (> (+ 10000 1) x1083) (= (x1321 x1083) (x450 x1083))))
(assert (x682 x550))
(assert (=> (> (+ 10000 1) x461) (= (x1321 x461) (x450 x461))))
(assert (= (x774 x1378) (ite (= x1378 x11) x893 (x1019 x1378))))
(assert (= (x918 (x1321 x1420)) x1420))
(assert (x682 x583))
(assert (= (x1177 x794) (ite (= x794 x372) x667 (x1355 x794))))
(assert (= (x365 x297) (ite (and x639 (not x26) x673) (x65 x297) (x979 x297))))
(assert (x682 x1431))
(assert (x682 x1299))
(assert (= (x918 (x1321 x537)) x537))
(assert (= (x38 x11) (ite (= x11 x112) x41 (x186 x11))))
(assert (x682 x1296))
(assert (= x609 (x918 (x1321 x609))))
(assert (x682 x819))
(assert (x682 x88))
(assert (= (x918 (x1321 x184)) x184))
(assert (= x605 (=> (and (= (> x1099 x1096) x1342) (= x1099 (x1503 (+ x103 1))) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x949))) (and (=> (and (= x823 x694) x1342) x515) (=> (not x1342) x45)))))
(assert (= (x1390 x1130) (ite (and x799 x160) (x1210 x1130) (ite (and x799 (not x160) x452) (x128 x1130) (x1289 x1130)))))
(assert (x682 x1161))
(assert (= x799 x820))
(assert (= 26959946667150639794667015087019630673637144422540572481103610249215 (x918 (x450 26959946667150639794667015087019630673637144422540572481103610249215))))
(assert (= x871 (x918 (x1321 x871))))
(assert (= (x918 (x1321 x1245)) x1245))
(assert (= (x65 x617) (ite (and x1198 x639 x981 x689 (not x1036) x673) (x1076 x617) (ite (and x1198 x639 x689 x673 (not x981)) (x869 x617) (ite (and x1198 x639 x673 (not x689)) (x1097 x617) (ite (and x639 x673 (not x1198)) (x218 x617) (x978 x617)))))))
(assert (x682 x1029))
(assert (x682 x288))
(assert (= (x918 (x1321 x1025)) x1025))
(assert (x682 x897))
(assert (= (x918 (x1321 x834)) x834))
(assert (= (x406 x1012) (ite (and x985 x332) (x774 x1012) (x839 x1012))))
(assert (x682 x29))
(assert (= x893 (x774 x11)))
(assert (= x251 (=> (and (= (= x210 0) x1525) (= x210 (x417 x764)) (= x1420 (x649 1461501637330902918203684832716283019655932542975 x724)) (<= x210 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x577 (x1321 x103) (x450 6) 0) x337) (= (x577 (x1321 x1420) x337 0) x764) (>= x210 0)) (and (=> x1525 x57) (=> (and (not x1525) (= x1434 x103)) x732)))))
(assert (=> (> (+ 10000 1) x1144) (= (x1321 x1144) (x450 x1144))))
(assert (= (and x1265 (not x21)) x1112))
(assert (x682 x1033))
(assert (x682 x1507))
(assert (=> (> (+ 10000 1) x863) (= (x1321 x863) (x450 x863))))
(assert (= x1284 (=> (= x21 (> x103 x1096)) (and (=> (not x21) x1479) (=> (and x21 (= x823 x599)) x515)))))
(assert (= (x1177 x1012) (ite (= x372 x1012) x667 (x1355 x1012))))
(assert (= x254 (=> (and (not (= x436 468353030)) (= x1130 (x577 (x1321 x1300) x618 0)) (< x436 2293535753) (= x684 (x1125 x1130)) (> 911411945 x436) (= 759532456 x436) (< 0 x205) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x684) (= (x1498 (x1321 274184521717934524641157099916833587206)) x205) (= (x577 (x1321 x1247) x772 0) x618) (= x684 x388) (= x772 (x577 (x1321 x1083) (x450 7) 0)) (not (< x436 468353030)) (not (= 635128645 x436)) (>= 1461501637330902918203684832716283019655932542975 x1300) (>= x684 0) (<= x1247 1461501637330902918203684832716283019655932542975)) (=> (and (= x73 x1215) (= x39 x1048) (= x1268 x388) (= x419 x848)) x1348))))
(assert (=> (> (+ 10000 1) x749) (= (x450 x749) (x1321 x749))))
(assert (x682 x1410))
(assert (= x1432 (or (and (not x473) x746) (and x1047 (not x478)))))
(assert (= 0 (x404 x297)))
(assert (x682 x805))
(assert (x682 x1367))
(assert (= x726 (and x1195 x718)))
(assert (= 1000000000000000000 (x918 (x450 1000000000000000000))))
(assert (= x493 x771))
(assert (x1043 x834))
(assert (=> (> (+ 10000 1) x369) (= (x1321 x369) (x450 x369))))
(assert (= 0 (x404 x225)))
(assert (= 274184521717934524641157099916833587218 (x918 (x450 274184521717934524641157099916833587218))))
(assert (=> (> (+ 10000 1) x1053) (= (x1321 x1053) (x450 x1053))))
(assert (x1043 x1367))
(assert (x682 x1444))
(assert (x682 x226))
(assert (x682 x644))
(assert (x682 x827))
(assert (x682 x123))
(assert (= (x535 x11) (ite (= x1015 x11) x1461 (x38 x11))))
(assert (x1043 x999))
(assert (x682 x1193))
(assert (=> (> (+ 10000 1) x948) (= (x1321 x948) (x450 x948))))
(assert (= (ite (= x909 x575) x1070 (x1054 x575)) (x1380 x575)))
(assert (=> (< (- x1475 1) 10000) (= (x450 x1475) (x1321 x1475))))
(assert (= x1520 (x918 (x1321 x1520))))
(assert (= 142201243 (x918 (x450 142201243))))
(assert (x682 x794))
(assert (= (=> (and (not (< x1303 911411945)) (> 2293535753 x1303) (< 0 x497) (= x655 x1402) (not (= x1303 1986467848)) (= (x417 x1326) x655) (= (x1498 (x1321 274184521717934524641157099916833587206)) x497) (<= x947 1461501637330902918203684832716283019655932542975) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x655) (not (= 1968616202 x1303)) (>= x655 0) (not (< x1303 1968616202)) (= x1326 (x577 (x1321 x947) x1040 0)) (= (x577 (x1321 x1344) (x450 6) 0) x1040) (= 2258409472 x1303) (not (= 2211524764 x1303)) (not (= x1303 2061678023))) (=> (and (= x184 x73) (= x514 x848) (= x6 x1402)) x986)) x165))
(assert (= x242 (x918 (x1321 x242))))
(assert (x682 x205))
(assert (= (x869 x1172) (ite (= x676 x1172) x967 (x1097 x1172))))
(assert (= (x1321 3123789364) (x450 3123789364)))
(assert (x682 x1025))
(assert (x682 x1266))
(assert (=> (> (+ 10000 1) x1002) (= (x450 x1002) (x1321 x1002))))
(assert (= (ite (= x225 x112) x41 (x186 x225)) (x38 x225)))
(assert (=> (> (+ 10000 1) x1440) (= (x1321 x1440) (x450 x1440))))
(assert (x682 x510))
(assert (x682 x896))
(assert (x682 x395))
(assert (x682 x945))
(assert (= (=> (and (= x1008 (= x215 0)) (or (and (= (x577 (x1321 x215) (x450 10) 0) x666) (= (x577 (x1321 x1223) x666 0) x959) (not x1008) (= x805 (x470 x959)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x805) (<= 0 x805) (= (x649 1461501637330902918203684832716283019655932542975 x724) x1223) (or (and (= 0 x179) (= 0 x906) x968) (and (not x968) (= 1 x179) (= x906 x805))) (= x968 (= x805 0))) (and x1008 (= x179 0) (= 0 x906)))) x94) x1224))
(assert (x682 x105))
(assert (x1043 x1018))
(assert (x682 x179))
(assert (x682 x1233))
(assert (x682 x661))
(assert (= (=> (and (= (x577 (x1321 x1407) x238 0) x634) (>= x1165 0) (= (= 0 x1165) x190) (= x1407 (x649 1461501637330902918203684832716283019655932542975 x724)) (<= x1165 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x1165 (x987 x634)) (= x238 (x577 (x1321 x627) (x450 6) 0))) (and (=> (and (= x1199 (> x1148 0)) x190 (not x1199) (= (x1207 (- x627 1)) x1148)) x1419) (=> (and (not x190) (= x1031 x627)) x377))) x76))
(assert (= x1485 (x918 (x1321 x1485))))
(assert (x898 x710 x686))
(assert (x1043 x552))
(assert (= (x918 (x1321 x933)) x933))
(assert (= (x918 (x1321 x215)) x215))
(assert (x267 x1424 x633))
(assert (x682 x256))
(assert (x682 x500))
(assert (x682 x177))
(assert (= (x450 2690754053) (x1321 2690754053)))
(assert (x682 x1134))
(assert (x682 x40))
(assert (x682 x117))
(assert (x682 x1191))
(assert (=> (> (+ 10000 1) x1006) (= (x450 x1006) (x1321 x1006))))
(assert (= (x1515 x341) (ite (= x510 x341) x252 (x1539 x341))))
(assert (x682 x1044))
(assert (x682 x818))
(assert (= x717 (=> (and (= x279 (> x627 0)) (= x627 (x1207 (- x1099 1)))) (and (=> (not x279) x1419) (=> x279 x76)))))
(assert (x682 x25))
(assert (=> (> (+ 10000 1) x1551) (= (x1321 x1551) (x450 x1551))))
(assert (x682 x1414))
(assert (x682 x641))
(assert (= 2532887486 (x918 (x450 2532887486))))
(assert (= (ite (= x1272 x676) x967 (x1097 x1272)) (x869 x1272)))
(assert (= 0 (x404 160)))
(assert (= (ite (= x661 x676) x967 (x1097 x661)) (x869 x661)))
(assert (x682 x156))
(assert (x682 x457))
(assert (x682 x1343))
(assert (x1314 1461501637330902918203684832716283019655932542975))
(assert (= (x918 (x450 1968616202)) 1968616202))
(assert (x1043 x460))
(assert (= (x1442 x1378) (ite (= x794 x1378) x407 (x1177 x1378))))
(assert (=> (> (+ 10000 1) x1391) (= (x450 x1391) (x1321 x1391))))
(assert (x682 x813))
(assert (= (x918 (x450 2211524764)) 2211524764))
(assert (=> (< (- x1344 1) 10000) (= (x1321 x1344) (x450 x1344))))
(assert (x682 x1070))
(assert (= x731 (x918 (x1321 x731))))
(assert (= (x1218 x341) (ite (and x759 (not x235) x1315) (x358 x341) (x1251 x341))))
(assert (= (ite (= x11 x1511) x893 (x1019 x1511)) (x774 x1511)))
(assert (x682 x131))
(assert (= (x774 x617) (ite (= x11 x617) x893 (x1019 x617))))
(assert (x682 x1504))
(assert (= x733 (=> (= x1537 0) x132)))
(assert (= (=> (= x1226 (= x948 274184521717934524641157099916833587214)) (and (=> (and (= x862 (x1207 (- x719 4))) (= (> x1366 x338) x576) (not x1297) (not (= 826074471 x150)) (not x576) (= x817 (<= 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x1090 x1366))) (not x817) (= x25 (x1498 (x1321 274184521717934524641157099916833587214))) (= x752 274184521717934524641157099916833587206) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x338) (= x1052 x286) x1226 (= (x577 (x1321 x1052) (x450 1) 0) x314) (= 2835717307 x150) (<= 0 x338) (<= x1052 1461501637330902918203684832716283019655932542975) (not (= x150 2514000705)) (< 0 x25) (= x1534 274184521717934524641157099916833587206) (not (= 1889567281 x150)) (>= x1090 0) (= x1228 76450787359836037641860180984291677749980919077056822294353438043884394381312) (< (+ x1090 x1366) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= 1 x1445) (= x1366 x261) (not x522) (not (= x150 649617121)) (= x907 (x577 (x1321 x1052) (x450 1) 0)) (= x115 (x1207 (- x338 x261))) (<= x1090 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x719 x33) (= x1444 x1052) (= x1297 (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x862) (and (< x862 64) (= true (<= x862 57896044618658097711785492504343953926634992332820282019728792003956564819967))))) (= x1313 (x577 (x1321 274184521717934524641157099916833587206) (x450 1) 0)) (not (> 649617121 x150)) (= x964 (x577 (x1321 274184521717934524641157099916833587206) (x450 1) 0)) (= x338 (x1203 x964)) (= x695 x696) (= x1200 x261) (= x1090 (x451 x907)) (= x1090 x434) (= (+ x434 x597) x49) (= x522 (> x261 x338)) (= 68 x719) (= x352 32) (not (> 4 x719)) (= x597 x1366)) x760) (=> (not x1226) x1370))) x1322))
(assert (= x323 (and x71 x279)))
(assert (= 1889567281 (x918 (x450 1889567281))))
(assert (x682 x416))
(assert (x682 x739))
(assert (=> (> (+ 10000 1) x812) (= (x1321 x812) (x450 x812))))
(assert (x682 x1323))
(assert (= x1537 (x918 (x1321 x1537))))
(assert (x682 x1352))
(assert (x682 x215))
(assert (= (x918 (x1321 x1006)) x1006))
(assert (= (x918 (x1321 x730)) x730))
(assert (=> (< (- x243 1) 10000) (= (x450 x243) (x1321 x243))))
(assert (=> (< (- x1052 1) 10000) (= (x1321 x1052) (x450 x1052))))
(assert (x682 x344))
(assert (x682 x112))
(assert (x682 x265))
(assert (= (and x748 x1512) x746))
(assert (= (=> (and (= (x411 x1482) x1492) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1492) (not (< x296 2690754053)) (>= 1461501637330902918203684832716283019655932542975 x1193) (< x296 2960351575) (= (x577 (x1321 x992) x569 0) x1482) (= (x577 (x1321 x206) (x450 3) 0) x538) (not (= 2690754053 x296)) (= 2743102681 x296) (> x608 0) (= (x1498 (x1321 274184521717934524641157099916833587206)) x608) (= x569 (x577 (x1321 x1193) x538 0)) (= x1142 x1492) (not (< x296 2293535753)) (>= 1461501637330902918203684832716283019655932542975 x992) (>= x1492 0)) (=> (and (= x39 x1535) (= x848 x999) (= x1142 x901) (= x402 x123) (= x73 x495)) x1185)) x35))
(assert (= (=> (= x814 x1434) x584) x732))
(assert (= (x1177 x661) (ite (= x372 x661) x667 (x1355 x661))))
(assert (= (x918 (x1321 x626)) x626))
(assert (= x1101 (x918 (x1321 x1101))))
(assert (x1043 x133))
(assert (= (x918 (x1321 x812)) x812))
(assert (x682 x864))
(assert (x682 x175))
(assert (x682 x1350))
(assert (x1043 x876))
(assert (= (ite (and x1171 x788) (x687 x1272) (x1369 x1272)) (x913 x1272)))
(assert (= x765 (=> (and (= (x577 (x1321 x532) x1330 0) x1500) (= x532 (x649 1461501637330902918203684832716283019655932542975 x724)) (= x473 (= x953 0)) (= (x577 (x1321 x592) (x450 7) 0) x1330) (= (x577 (x1321 x243) x1500 0) x87) (>= x953 0) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x953) (= x953 (x329 x87)) (= (x649 1461501637330902918203684832716283019655932542975 x1238) x243)) (and (=> (and (not x473) (= x557 x592)) x1055) (=> (and (= x993 (> x177 0)) (= (x1207 (- x592 1)) x177) (not x993) x473) x570)))))
(assert (= x1371 x771))
(assert (= x118 (x918 (x1321 x118))))
(assert (x1043 x506))
(assert (= (ite (= x1378 x1015) x1461 (x38 x1378)) (x535 x1378)))
(assert (=> (> (+ 10000 1) x750) (= (x450 x750) (x1321 x750))))
(assert (= (=> (= (= x1367 274184521717934524641157099916833587214) x376) (and (=> (not x376) x486) (=> (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x965) (= (x577 (x1321 274184521717934524641157099916833587206) (x450 1) 0) x1104) (>= 1461501637330902918203684832716283019655932542975 x1184) (not x903) (= (x333 x1169) x965) (<= 0 x813) (= (< x813 x1074) x1219) (not (= x1389 2514000705)) (= x903 (or (and (= true (<= x1285 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (< x1285 64)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1285))) (< 0 x761) (not x1467) x376 (not x507) (= (x1207 (- x579 4)) x1285) (= (+ x1206 x313) x174) (= x1505 x579) (= x1184 x70) (not x1219) (= x246 x1275) (= x313 x965) (= 2835717307 x1389) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x813) (= x1074 x1206) (= x1275 x1074) (= (x577 (x1321 274184521717934524641157099916833587206) (x450 1) 0) x316) (= x768 76450787359836037641860180984291677749980919077056822294353438043884394381312) (= x1202 x1240) (= x1301 32) (= 274184521717934524641157099916833587206 x1241) (= x761 (x1498 (x1321 274184521717934524641157099916833587214))) (= x1467 (< x813 x1275)) (not (= x1389 826074471)) (= x1184 x521) (= x1156 274184521717934524641157099916833587206) (not (= 1889567281 x1389)) (not (< x579 4)) (= (x17 x316) x813) (= 68 x579) (= x507 (<= 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x1074 x965))) (= 1 x591) (>= x965 0) (= x944 (x1207 (- x813 x1275))) (= (x577 (x1321 x1184) (x450 1) 0) x1169) (not (> 649617121 x1389)) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x1074 x965)) (not (= 649617121 x1389))) x1530))) x595))
(assert (= x589 (x918 (x1321 x589))))
(assert (x682 x260))
(assert (= (=> (and (= x1146 (x649 1461501637330902918203684832716283019655932542975 x1238)) (= (x1390 x23) x283) (= x23 (x577 (x1321 x1146) x409 0)) (<= 0 x283) (= (x577 (x1321 x29) x439 0) x409) (= x29 (x649 1461501637330902918203684832716283019655932542975 x724)) (= (= x283 0) x53) (<= x283 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x577 (x1321 x1099) (x450 7) 0) x439)) (and (=> (and (= x1099 x619) (not x53)) x1465) (=> x53 x518))) x481))
(assert (= (x450 1889567281) (x1321 1889567281)))
(assert (x682 x626))
(assert (x682 x1510))
(assert (= (ite (= x112 x1015) x41 (x186 x1015)) (x38 x1015)))
(assert (x682 x1383))
(assert (x682 x548))
(assert (x682 x845))
(assert (x682 x1548))
(assert (x1043 274184521717934524641157099916833587218))
(assert (= (x1097 x295) (ite (= x295 x427) x585 (x218 x295))))
(assert (x682 x130))
(assert (= (ite (and x332 x985) (x774 x1335) (x839 x1335)) (x406 x1335)))
(assert (=> (< (- x678 1) 10000) (= (x450 x678) (x1321 x678))))
(assert (= (or (and x294 x635) x512) x1279))
(assert (x682 x1137))
(assert (x682 x1518))
(assert (x682 x1257))
(assert (x1043 x1485))
(assert (x682 x883))
(assert (= (x38 x462) (ite (= x462 x112) x41 (x186 x462))))
(assert (x682 x152))
(assert (= (x1097 x462) (ite (= x427 x462) x585 (x218 x462))))
(assert (= (x38 x1012) (ite (= x1012 x112) x41 (x186 x1012))))
(assert (=> (< (- x133 1) 10000) (= (x1321 x133) (x450 x133))))
(assert (=> (> (+ 10000 1) x419) (= (x1321 x419) (x450 x419))))
(assert (x682 x293))
(assert (x1043 x461))
(assert (x682 x419))
(assert (= 911411945 (x918 (x450 911411945))))
(assert (x682 x517))
(assert (x682 x1461))
(assert (x682 x773))
(assert (x682 x1022))
(assert (x267 x48 x879))
(assert (x1314 x272))
(assert (= (ite (and x309 x654) (x142 x341) (x615 x341)) (x745 x341)))
(assert (=> (> (+ 10000 1) x592) (= (x1321 x592) (x450 x592))))
(assert (= (ite (= x546 x676) x967 (x1097 x546)) (x869 x546)))
(assert (x682 x1436))
(assert (x682 x18))
(assert (=> (< (- x1213 1) 10000) (= (x1321 x1213) (x450 x1213))))
(assert (x682 x476))
(assert (= (ite (and (not x80) (not x176) x973 x1394) (x1442 x1272) (ite (and x1394 (not x80) (not x973)) (x1177 x1272) (ite (and x80 x1394) (x1177 x1272) (x950 x1272)))) (x1478 x1272)))
(assert (x682 x932))
(assert (= (ite (= x112 x546) x41 (x186 x546)) (x38 x546)))
(assert (x682 x1274))
(assert (=> (< (- x975 1) 10000) (= (x450 x975) (x1321 x975))))
(assert (= (x918 (x1321 x897)) x897))
(assert (= (or (and (not x279) x71) (and x323 x190) (and x1135 (not x567))) x2))
(assert (x682 x585))
(assert (x682 x466))
(assert (x682 x990))
(assert (= (x1177 x1272) (ite (= x372 x1272) x667 (x1355 x1272))))
(assert (x682 x261))
(assert (x682 x1391))
(assert (x682 x537))
(assert (x682 x1384))
(assert (x682 x1366))
(assert (x682 x752))
(assert (x682 x167))
(assert (x682 x729))
(assert (= (x1212 x1010) (ite (and x1536 x1394) (x1100 x1010) (x988 x1010))))
(assert (x1043 x812))
(assert (x682 x1114))
(assert (x682 x1398))
(assert (= (x1177 x1511) (ite (= x1511 x372) x667 (x1355 x1511))))
(assert (x682 x280))
(assert (= x958 (x918 (x1321 x958))))
(assert (= (x918 (x1321 x552)) x552))
(assert (= (x918 (x1321 x402)) x402))
(assert (= x516 (x918 (x1321 x516))))
(assert (= x1137 (x918 (x1321 x1137))))
(assert (x1043 x1083))
(assert (= (and x122 x1526) x884))
(assert (x682 x1223))
(assert (= (=> (= (> x893 1) x1315) (and (=> (and x1028 (< 1 x485) (or (not x235) (and (= x807 (x1503 (+ x852 x883))) x235)) (= (x1503 (+ 100 x1414)) x1037) (= x235 (< x852 x743)) (= (x1413 x297) x246) (= x852 (x970 x1414)) (= (x1503 (+ 68 x1414)) x819) (or (and (= x743 0) (not x307)) (and (= x108 (< 32 x852)) (= x546 x1511) (= x883 x1166) (or (and (= x1292 (> x852 64)) (or (and (= (x1503 (+ x1414 96)) x1272) x1292 (= x1317 (x1515 x1272)) (= (< 96 x852) x147) (or (and (= 96 x743) (not x147)) (and (= x743 128) (= x983 (x1269 x295)) (= (> x852 128) x386) (= (x1503 (+ 128 x1414)) x295) x147 (= x601 (x1503 (+ x1037 160))) (not x386))) (= (x1503 (+ 128 x1037)) x395)) (and (= 64 x743) (not x1292))) (= (x1539 x617) x252) x108 (= (x1503 (+ x1414 64)) x617) (= (x1503 (+ x1037 96)) x510)) (and (not x108) (= x743 32))) x307 (= (x970 x546) x826))) (> x893 1) x1315 (= (x1503 (+ x508 76450787359836037641860180984291677749980919077056822294353438043884394381312)) x1340) (= x70 (x649 1461501637330902918203684832716283019655932542975 x1238)) (= (x157 x1511) x542) (= (x1503 (+ x1071 96)) x1022) (= (x1503 (+ 32 x1414)) x1511) (= x111 (x1498 (x1321 x1367))) (= x508 (x649 26959946667150639794667015087019630673637144422540572481103610249215 x542)) (= (x1207 (- x1037 x1414)) x1281) (>= 1461501637330902918203684832716283019655932542975 x1367) (= x96 (x1207 (- x1281 32))) (= (< 0 x852) x307) (= 0 x543) (= (x1503 (+ 64 x921)) x83) (= (x1503 (+ x961 192)) x297) (= (x1413 x11) x485) (= (x660 x83) x1367) (= (> x111 0) x1028) (= (x1503 (+ 36 x1414)) x1071) (= (x1503 (+ 128 x1071)) x883)) x1208) (=> (not x1315) x1532))) x1034))
(assert (x1043 x855))
(assert (= x1394 (or x1024 (and x820 (not x777)))))
(assert (x682 x15))
(assert (x682 x767))
(assert (x682 x534))
(assert (=> (< (- x495 1) 10000) (= (x450 x495) (x1321 x495))))
(assert (x682 x252))
(assert (= (ite (and x639 x673 (not x26)) (x65 x1335) (x979 x1335)) (x365 x1335)))
(assert (x682 x679))
(assert (= (x918 (x1321 x1252)) x1252))
(assert (= (ite (and x985 x332) (x774 x1015) (x839 x1015)) (x406 x1015)))
(assert (= (ite (and (not x147) x1292 x1315 x759 x307 x108) (x1269 x1335) (ite (and x1315 x108 x307 x759 (not x1292)) (x1515 x1335) (ite (and x759 (not x108) x307 x1315) (x1539 x1335) (ite (and x1315 x759 (not x307)) (x970 x1335) (x1102 x1335))))) (x358 x1335)))
(assert (x682 x878))
(assert (x682 x150))
(assert (= x321 (=> (and (or (and (= (x649 1461501637330902918203684832716283019655932542975 x1238) x1141) (= x599 x153) (= x559 (x577 (x1321 x1141) x227 0)) (= x1014 (x577 (x1321 x103) (x450 7) 0)) x160 (= x516 (x649 1461501637330902918203684832716283019655932542975 x724)) (= x227 (x577 (x1321 x516) x1014 0))) (and (or (and (= x322 x153) (= (x577 (x1321 x103) (x450 3) 0) x707) (< (* x797 x500) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= (x649 1461501637330902918203684832716283019655932542975 x1238) x1021) (= (x577 (x1321 x958) x707 0) x1406) (= x1305 (x577 (x1321 x103) (x450 7) 0)) (= (x649 1461501637330902918203684832716283019655932542975 x1238) x1379) (= (* x797 x500) x484) (= (x577 (x1321 x1021) x1406 0) x139) (= x40 (x649 1461501637330902918203684832716283019655932542975 x724)) (not x452) (= (x577 (x1321 x1379) x492 0) x531) (= x484 x1211) (= x958 (x649 1461501637330902918203684832716283019655932542975 x724)) (= (x577 (x1321 x40) x1305 0) x492)) (and x452 (= (x649 1461501637330902918203684832716283019655932542975 x724) x555) (= x153 x322) (= x812 (x649 1461501637330902918203684832716283019655932542975 x1238)) (= (x577 (x1321 x812) x1087 0) x529) (= x1087 (x577 (x1321 x555) x413 0)) (= (x577 (x1321 x103) (x450 7) 0) x413))) (= x400 (x1287 x1094)) (= x809 (x782 x13)) (= (x577 (x1321 x1249) x330 0) x429) (<= x809 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x13 (x577 (x1321 x103) (x450 1) 0)) (<= x99 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x1094 (x1503 (+ 32 x599))) (= x1410 (x1189 x1531)) (= (x649 1461501637330902918203684832716283019655932542975 x724) x1249) (= (= 0 x500) x452) (<= 0 x99) (= (x329 x1283) x99) (= (x577 (x1321 x103) (x450 7) 0) x330) (not x160) (or (and (= (= x99 0) x1395) (or (and x1395 (= x725 (x1287 x599)) (= x1151 (x1207 (- x196 x725))) (not (> x725 x196)) (= x1151 x500)) (and (= x422 604800) (= (x1207 (- x196 x99)) x34) (not (< x196 x99)) (= (ite (< x34 604800) x34 604800) x433) (= x433 x500) (not x1395))) x102 (or (and (= x1404 x196) (not x74)) (and (= x932 x196) (= (x1287 x1094) x932) x74)) (= (x1287 x1094) x702) (= (< x702 x1404) x74)) (and (= x500 0) (not x102))) (= (x1276 x13 1) x1531) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1410) (= x1283 (x577 (x1321 x1213) x429 0)) (<= 0 x1410) (= x322 (x1503 (+ 64 x599))) (= x102 (< x99 x400)) (= (x649 1461501637330902918203684832716283019655932542975 x1238) x1213) (>= x809 0))) (= (= x593 0) x738) (= x160 (= 0 x797)) (or (and (= x680 (x577 (x1321 x103) (x450 9) 0)) (= (x649 1461501637330902918203684832716283019655932542975 x724) x280) (= (x577 (x1321 x280) x680 0) x590) (not x738) (= x5 (x577 (x1321 x1018) x590 0)) (= x1018 (x649 1461501637330902918203684832716283019655932542975 x1238))) x738)) x991)))
(assert (x682 x933))
(assert (= (x1321 2939843472) (x450 2939843472)))
(assert (= (ite (= x1511 x794) x407 (x1177 x1511)) (x1442 x1511)))
(assert (x682 x248))
(assert (x1043 x722))
(assert (= (x1388 x662) (ite (= x90 x662) x767 (x571 x662))))
(assert (= (x1269 x1335) (ite (= x1335 x395) x1317 (x1515 x1335))))
(assert (= (x1321 826074471) (x450 826074471)))
(assert (=> (> (+ 10000 1) x212) (= (x1321 x212) (x450 x212))))
(assert (= (ite (and x973 (not x176) (not x80) x1394) (x1388 x575) (ite (and (not x80) (not x973) x1394) (x571 x575) (ite (and x1394 x80) (x571 x575) (x1110 x575)))) (x1054 x575)))
(assert (= x212 (x918 (x1321 x212))))
(assert (= x1496 x1481))
(assert (= x256 (x918 (x1321 x256))))
(assert (= x1208 (=> (and (= (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1514 (x1321 x1367))) x282) (= x1443 (x1237 (x1321 274184521717934524641157099916833587206))) (= (< x1350 115792089237316195423570985008687907853269984665640564039457584007913129639936) x9) (= x69 (x1514 (x1321 x1367))) (= x654 (= x1367 274184521717934524641157099916833587218)) x808 (= x808 (>= x1443 0)) x282 (= x852 x1505) (= x1350 (x1237 (x1321 x1367))) x9 (= x1302 (x1237 (x1321 274184521717934524641157099916833587206)))) (and (=> (and (not (= 2514000705 x616)) (= (> x1462 x220) x479) (>= 1461501637330902918203684832716283019655932542975 x1144) (= 76450787359836037641860180984291677749980919077056822294353438043884394381312 x1214) (not (= x616 1889567281)) (= (x577 (x1321 274184521717934524641157099916833587206) (x450 1) 0) x636) (= x1462 x246) (= x1510 x1509) (= x1243 (x577 (x1321 x1144) (x450 1) 0)) (= (x1498 (x1321 274184521717934524641157099916833587218)) x343) (= x1505 x499) (= x591 1) (not x479) (>= x10 0) (= x10 (x350 x1243)) (not x203) (= x1144 x1329) (= (or (and (= (<= x502 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (> 64 x502)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x502)) x785) (= x1495 274184521717934524641157099916833587206) (= x1144 x70) (<= x10 115792089237316195423570985008687907853269984665640564039457584007913129639935) (< 0 x343) (not x785) (= x1003 (>= (+ x860 x10) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= 2835717307 x616) x654 (= 32 x1301) (= x342 x860) (= x860 x1462) (not x1003) (not (< x499 4)) (= x10 x1004) (<= x220 115792089237316195423570985008687907853269984665640564039457584007913129639935) (not (= 649617121 x616)) (not (< x616 649617121)) (= x203 (< x220 x860)) (<= 0 x220) (= x502 (x1207 (- x499 4))) (not (= x616 826074471)) (= 274184521717934524641157099916833587206 x827) (= (x577 (x1321 274184521717934524641157099916833587206) (x450 1) 0) x66) (= (x1207 (- x220 x1462)) x378) (= 68 x499) (< (+ x860 x10) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= (+ x342 x1004) x448) (= (x1035 x636) x220)) x1530) (=> (not x654) x595)))))
(assert (=> (> (+ 10000 1) x29) (= (x450 x29) (x1321 x29))))
(assert (=> (< (- x1239 1) 10000) (= (x1321 x1239) (x450 x1239))))
(assert (x682 x1335))
(assert (=> (> (+ 10000 1) x405) (= (x1321 x405) (x450 x405))))
(assert (x682 x1416))
(assert (=> (< (- x1323 1) 10000) (= (x450 x1323) (x1321 x1323))))
(assert (= (ite (and x332 x985) (x774 x341) (x839 x341)) (x406 x341)))
(assert (=> (< (- x1064 1) 10000) (= (x450 x1064) (x1321 x1064))))
(assert (x682 x1285))
(assert (x682 x234))
(assert (= (ite (and x332 x985) (x774 x1092) (x839 x1092)) (x406 x1092)))
(assert (x1043 x1507))
(assert (= 274184521717934524641157099916833587214 (x918 (x1321 274184521717934524641157099916833587214))))
(assert (= (x918 (x1321 x1146)) x1146))
(assert (= (x918 (x1321 x875)) x875))
(assert (x1314 x117))
(assert (x682 x1428))
(assert (x682 x962))
(assert (= (x918 (x1321 x1256)) x1256))
(assert (= x491 (=> (= x1121 (> x1099 0)) (and (=> (not x1121) x733) (=> x1121 x481)))))
(assert (x1043 x318))
(assert (=> (< (- x1249 1) 10000) (= (x1321 x1249) (x450 x1249))))
(assert (= (x918 (x1321 x1300)) x1300))
(assert (x682 x274))
(assert (x1314 x710))
(assert (= (=> (and (= (x577 (x1321 x540) x844 0) x1155) (= (x329 x255) x955) (<= x955 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x577 (x1321 x103) (x450 7) 0) x844) (= (x649 1461501637330902918203684832716283019655932542975 x724) x540) (= x118 (x649 1461501637330902918203684832716283019655932542975 x1238)) (= (= x955 0) x478) (>= x955 0) (= (x577 (x1321 x118) x1155 0) x255)) (and (=> x478 x1519) (=> (and (= x557 x103) (not x478)) x1055))) x847))
(assert (x682 x169))
(assert (x682 x1354))
(assert (=> (> (+ 10000 1) x318) (= (x1321 x318) (x450 x318))))
(assert (= (ite (and (not x176) x973 x1394 (not x80)) (x1442 x1092) (ite (and (not x80) x1394 (not x973)) (x1177 x1092) (ite (and x80 x1394) (x1177 x1092) (x950 x1092)))) (x1478 x1092)))
(assert (x682 x437))
(assert (x1043 x532))
(assert (x682 x1492))
(assert (x682 x798))
(assert (x682 x1511))
(assert (=> (> (+ 10000 1) x215) (= (x450 x215) (x1321 x215))))
(assert (x682 x1120))
(assert (= x946 x759))
(assert (x682 x826))
(assert (x1043 x568))
(assert (x682 x184))
(assert (= (x1097 x1172) (ite (= x1172 x427) x585 (x218 x1172))))
(assert (=> (< (- x1025 1) 10000) (= (x1321 x1025) (x450 x1025))))
(assert (x682 x866))
(assert (= (x918 (x450 759532456)) 759532456))
(assert (= (ite (= x1015 x546) x1461 (x38 x546)) (x535 x546)))
(assert (= (x918 (x1321 x230)) x230))
(assert (= (and x1135 x567) x1328))
(assert (= (x918 (x450 1986467848)) 1986467848))
(assert (x682 x917))
(assert (x682 x676))
(assert (= (ite (= x112 x295) x41 (x186 x295)) (x38 x295)))
(assert (x682 x1523))
(assert (= (x1186 x1543) (ite (and x738 x799) (x996 x1543) (x737 x1543))))
(assert (= 0 (x404 x341)))
(assert (x682 x1450))
(assert (=> (> (+ 10000 1) x1428) (= (x1321 x1428) (x450 x1428))))
(assert (= (x1390 x816) (ite (and x799 x160) (x1210 x816) (ite (and x452 x799 (not x160)) (x128 x816) (x1289 x816)))))
(assert (x682 x277))
(assert (= 2514000705 (x918 (x450 2514000705))))
(assert (x682 x609))
(assert (x682 x698))
(assert (x682 x1160))
(assert (x682 x581))
(assert (x682 x956))
(assert (=> (> (+ 10000 1) x958) (= (x1321 x958) (x450 x958))))
(assert (= (x450 2211524764) (x1321 2211524764)))
(assert (= 2743102681 (x918 (x450 2743102681))))
(assert (x682 x930))
(assert (x682 x1172))
(assert (x1043 x1021))
(assert (x682 x876))
(assert (= (ite (and x332 x985) (x774 x1172) (x839 x1172)) (x406 x1172)))
(assert (x682 x82))
(assert (= (x1097 x546) (ite (= x546 x427) x585 (x218 x546))))
(assert (= (x1442 x462) (ite (= x794 x462) x407 (x1177 x462))))
(assert (x682 x402))
(assert (= x611 (x918 (x1321 x611))))
(assert (=> (< (- x1327 1) 10000) (= (x450 x1327) (x1321 x1327))))
(assert (= (x1388 x575) (ite (= x90 x575) x767 (x571 x575))))
(assert (x682 x110))
(assert (= (x38 x1511) (ite (= x1511 x112) x41 (x186 x1511))))
(assert (= (x1321 2743102681) (x450 2743102681)))
(assert (x682 x410))
(assert (x682 x761))
(assert (x682 x850))
(assert (= x260 (x918 (x1321 x260))))
(assert (= (x38 x341) (ite (= x341 x112) x41 (x186 x341))))
(assert (= 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x918 (x450 37714057306076988483118529490347679105585116642029194716945419020321082336612))))
(assert (= (ite (and x673 x639 (not x26)) (x65 x1511) (x979 x1511)) (x365 x1511)))
(assert (x682 x446))
(assert (= (x535 x1335) (ite (= x1335 x1015) x1461 (x38 x1335))))
(assert (x682 x202))
(assert (x682 x98))
(assert (x682 x983))
(assert (=> (< (- x230 1) 10000) (= (x1321 x230) (x450 x230))))
(assert (x1043 x1323))
(assert (= (x470 x1176) (ite (and x1394 x656) (x328 x1176) (x207 x1176))))
(assert (=> (< (- x260 1) 10000) (= (x450 x260) (x1321 x260))))
(assert (x267 x63 x424))
(assert (= x584 (=> (and (or (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1364) (= (x577 (x1321 x609) x268 0) x1480) (= (= 0 x1364) x480) (= x268 (x577 (x1321 x814) (x450 10) 0)) (= (x328 x1480) x1364) (or (and (= x300 x1364) (not x480) (= 1 x1278)) (and (= 0 x300) x480 (= x1278 0))) (not x348) (>= x1364 0) (= x609 (x649 1461501637330902918203684832716283019655932542975 x724))) (and (= 0 x300) (= 0 x1278) x348)) (= (= x814 0) x348)) x1493)))
(assert (x682 x133))
(assert (= (ite (= x225 x372) x667 (x1355 x225)) (x1177 x225)))
(assert (x682 x366))
(assert (= (ite (and (not x176) x1394 (not x80) x973) (x1442 x1012) (ite (and (not x80) (not x973) x1394) (x1177 x1012) (ite (and x80 x1394) (x1177 x1012) (x950 x1012)))) (x1478 x1012)))
(assert (= (x918 (x1321 x749)) x749))
(assert (=> (< (- x1277 1) 10000) (= (x450 x1277) (x1321 x1277))))
(assert (= 2512682246 (x918 (x450 2512682246))))
(assert (x682 x1340))
(assert (= (x918 (x1321 x675)) x675))
(assert (= (ite (= x1378 x427) x585 (x218 x1378)) (x1097 x1378)))
(assert (= (ite (= x794 x341) x407 (x1177 x341)) (x1442 x341)))
(assert (= 649617121 (x918 (x450 649617121))))
(assert (x682 x1303))
(assert (x682 x591))
(assert (=> (< (- x256 1) 10000) (= (x450 x256) (x1321 x256))))
(assert (x1043 x1422))
(assert (x1043 x1052))
(assert (= (ite (and x656 x1394) (x328 x1230) (x207 x1230)) (x470 x1230)))
(assert (=> (< (- x947 1) 10000) (= (x1321 x947) (x450 x947))))
(assert (= (ite (= x1414 x1022) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x36 x1414)) (x970 x1414)))
(assert (x682 x652))
(assert (x682 x308))
(assert (x682 x1094))
(assert (x1043 x40))
(assert (= (ite (and x788 x1171) (x687 x1335) (x1369 x1335)) (x913 x1335)))
(assert (= (ite (= x794 x295) x407 (x1177 x295)) (x1442 x295)))
(assert (= (x1321 2868243304) (x450 2868243304)))
(assert (= (ite (= x661 x112) x41 (x186 x661)) (x38 x661)))
(assert (x1043 x1242))
(assert (x682 x664))
(assert (= (x1321 649617121) (x450 649617121)))
(assert (x682 x1079))
(assert (= x736 (or (and x1526 (not x122)) (and (not x1468) x912) (and x77 x884))))
(assert (= (x918 (x1321 x937)) x937))
(assert (= (x1321 2764855426) (x450 2764855426)))
(assert (= x67 (and (not x1171) x788)))
(assert (= (x450 69947311) (x1321 69947311)))
(assert (= (x970 x546) (ite (= x1022 x546) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x36 x546))))
(assert (x682 x601))
(assert (=> (< (- x644 1) 10000) (= (x450 x644) (x1321 x644))))
(assert (x682 x1364))
(assert (= x298 (or (and x654 x309) (and x376 x1385))))
(assert (= (=> (and (= (x328 x754) x896) (= x868 69947311) (>= 1461501637330902918203684832716283019655932542975 x1101) (= x896 x1502) (< 0 x121) (= (x1498 (x1321 274184521717934524641157099916833587206)) x121) (>= x896 0) (= x754 (x577 (x1321 x1101) x370 0)) (< x868 911411945) (> 468353030 x868) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x896) (> 2293535753 x868) (= x370 (x577 (x1321 x863) (x450 10) 0))) (=> (and (= (and x1072 x1050) x1533) (= x1188 x6) (= x39 x730) (= x1196 (>= x274 x1188)) x7 (= (= x14 0) x1050) (= x1072 (= 0 x581)) (= x354 x73) (= x1267 x1502) (= x14 x1489) (= x598 0) (= x848 x1485) (= (or x1533 (not x556)) x7) (= x6 x1415) (= 0 x265) (= (= 0 x1415) x556) (= x1267 x581) (= x274 x1404) (= 0 x505) x1196) x412)) x383))
(assert (= x29 (x918 (x1321 x29))))
(assert (= (x913 x617) (ite (and x788 x1171) (x687 x617) (x1369 x617))))
(assert (= (ite (= x372 x851) x667 (x1355 x851)) (x1177 x851)))
(assert (x1314 x542))
(assert (x682 x885))
(assert (x682 x225))
(assert (= x68 x266))
(assert (x682 x59))
(assert (x682 x555))
(assert (x682 x724))
(assert (= (x918 (x1321 x1367)) x1367))
(assert (x1043 x1307))
(assert (= x544 (=> (= 0 x814) x584)))
(assert (= (x404 x1378) 0))
(assert (x682 x378))
(assert (= (ite (= x395 x341) x1317 (x1515 x341)) (x1269 x341)))
(assert (=> (> (+ 10000 1) x1017) (= (x1321 x1017) (x450 x1017))))
(assert (= (ite (and x673 x1198 (not x1036) x689 x981 x639) (x1076 x1272) (ite (and x673 x1198 (not x981) x639 x689) (x869 x1272) (ite (and x1198 x639 x673 (not x689)) (x1097 x1272) (ite (and (not x1198) x673 x639) (x218 x1272) (x978 x1272))))) (x65 x1272)))
(assert (x682 x1404))
(assert (x682 x96))
(assert (x682 x283))
(assert (x1043 x1002))
(assert (= 2764855426 (x918 (x450 2764855426))))
(assert (= x100 (x918 (x1321 x100))))
(assert (= (ite (and (not x1036) x673 x689 x639 x1198 x981) (x1076 x11) (ite (and x689 x673 x639 (not x981) x1198) (x869 x11) (ite (and x1198 x639 x673 (not x689)) (x1097 x11) (ite (and x639 (not x1198) x673) (x218 x11) (x978 x11))))) (x65 x11)))
(assert (= 604800 (x918 (x450 604800))))
(assert (= x562 x92))
(assert (= (x1177 x153) (ite (= x372 x153) x667 (x1355 x153))))
(assert (x682 x230))
(assert (x1043 x1101))
(assert (= (x1321 2532887486) (x450 2532887486)))
(assert (=> (< (- x156 1) 10000) (= (x1321 x156) (x450 x156))))
(assert (x682 x1202))
(assert (x682 x10))
(assert (x682 x48))
(assert (x682 x281))
(assert (= (x918 (x1321 x1052)) x1052))
(assert (= (x450 115792089237316195423570985008687907853269984665640564039457584007913129639904) (x1321 115792089237316195423570985008687907853269984665640564039457584007913129639904)))
(assert (x682 x296))
(assert (=> (< (- x103 1) 10000) (= (x450 x103) (x1321 x103))))
(assert (x682 x1200))
(assert (= (=> (and (or (and (= (x577 (x1321 x568) x1476 0) x183) (= x178 (x649 1461501637330902918203684832716283019655932542975 x724)) (= x694 x642) x192 (= x568 (x649 1461501637330902918203684832716283019655932542975 x1238)) (= (x577 (x1321 x1099) (x450 7) 0) x843) (= (x577 (x1321 x178) x843 0) x1476)) (and (= x234 (x649 1461501637330902918203684832716283019655932542975 x1238)) (= x914 (x1276 x1197 1)) (<= x769 115792089237316195423570985008687907853269984665640564039457584007913129639935) (not x192) (= x1487 (x577 (x1321 x234) x1425 0)) (= (x1189 x914) x954) (= (x1503 (+ x153 128)) x1418) (<= x954 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x1390 x1487) x226) (= x325 (x577 (x1321 x1099) (x450 7) 0)) (<= 0 x954) (or (and (= x1252 (x649 1461501637330902918203684832716283019655932542975 x1238)) (= x1527 (x577 (x1321 x1099) (x450 7) 0)) (= x642 x1418) (= x721 (x577 (x1321 x461) x1527 0)) x1258 (= x461 (x649 1461501637330902918203684832716283019655932542975 x724)) (= x1263 (x577 (x1321 x1252) x721 0))) (and (= x1304 (* x159 x997)) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (* x997 x159)) (= x379 (x577 (x1321 x750) x42 0)) (= x42 (x577 (x1321 x1099) (x450 3) 0)) (= (x577 (x1321 x1099) (x450 7) 0) x1346) (= (x577 (x1321 x1256) x1412 0) x1470) (= (x649 1461501637330902918203684832716283019655932542975 x724) x750) (= x1412 (x577 (x1321 x1025) x1346 0)) (= (x649 1461501637330902918203684832716283019655932542975 x1238) x897) (= x130 x1304) (= (x649 1461501637330902918203684832716283019655932542975 x724) x1025) (= x1418 x642) (not x1258) (= (x649 1461501637330902918203684832716283019655932542975 x1238) x1256) (= x934 (x577 (x1321 x897) x379 0)))) (= x831 (x1325 x387)) (= x1197 (x577 (x1321 x1099) (x450 1) 0)) (= x387 (x1503 (+ 96 x153))) (= (< x226 x831) x872) (or (and (= 0 x997) (not x872)) (and (or (and (not (< x60 x1174)) (= x44 (x1207 (- x60 x1174))) x135 (= x44 x997) (= x1174 (x1325 x694))) (and (= (ite (> 604800 x681) x681 604800) x755) (= x997 x755) (not (< x60 x226)) (= 604800 x705) (not x135) (= (x1207 (- x60 x226)) x681))) (= x1078 (x1325 x387)) x872 (or (and x489 (= x60 x706) (= x706 (x1325 x387))) (and (= x1404 x60) (not x489))) (= x489 (< x1078 x1404)) (= x135 (= 0 x226)))) (<= x226 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= 0 x769) (= (= x997 0) x1258) (= (x649 1461501637330902918203684832716283019655932542975 x724) x1518) (= (x577 (x1321 x1518) x325 0) x1425) (= x769 (x782 x1197)) (>= x226 0))) (or x85 (and (= (x649 1461501637330902918203684832716283019655932542975 x1238) x722) (not x85) (= x78 (x577 (x1321 x722) x561 0)) (= x611 (x649 1461501637330902918203684832716283019655932542975 x724)) (= x648 (x577 (x1321 x1099) (x450 9) 0)) (= (x577 (x1321 x611) x648 0) x561))) (= x192 (= x159 0)) (= x85 (= x1409 0))) x371) x211))
(assert (x682 x520))
(assert (x682 x242))
(assert (x1043 x1160))
(assert (x682 x240))
(assert (x682 x462))
(assert (x682 x1409))
(assert (x682 x1021))
(assert (= (x406 x11) (ite (and x985 x332) (x774 x11) (x839 x11))))
(assert (=> (< (- x1537 1) 10000) (= (x450 x1537) (x1321 x1537))))
(assert (x1043 x1277))
(assert (x682 x104))
(assert (= (and x1334 (not x1342)) x635))
(assert (= (ite (and x799 x160) (x411 x1542) (ite (and x799 x452 (not x160)) (x411 x1542) (x95 x1542))) (x927 x1542)))
(assert (x1043 x937))
(assert (= x345 x423))
(assert (x682 x1256))
(assert (=> (< (- x875 1) 10000) (= (x1321 x875) (x450 x875))))
(assert (= x1201 x723))
(assert (= (x918 (x1321 x930)) x930))
(assert (x682 x63))
(assert (x682 x338))
(assert (= x621 (x918 (x1321 x621))))
(assert (x682 x1386))
(assert (x994 x573 x347))
(assert (x682 x306))
(assert (x682 x388))
(assert (=> (> (+ 10000 1) x248) (= (x1321 x248) (x450 x248))))
(assert (x682 x197))
(assert (= (x918 (x1321 x1144)) x1144))
(assert (x682 x387))
(assert (= (x918 (x1321 x824)) x824))
(assert (= (x218 x546) (ite (= x546 x878) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x776 x546))))
(assert (= (ite (= x1092 x1015) x1461 (x38 x1092)) (x535 x1092)))
(assert (= (x918 (x1321 x1323)) x1323))
(assert (x682 x1501))
(assert (= (ite (and x981 (not x1036) x639 x1198 x689 x673) (x1076 x546) (ite (and x689 x673 (not x981) x639 x1198) (x869 x546) (ite (and x1198 (not x689) x639 x673) (x1097 x546) (ite (and x639 (not x1198) x673) (x218 x546) (x978 x546))))) (x65 x546)))
(assert (= (ite (= x372 x1378) x667 (x1355 x1378)) (x1177 x1378)))
(assert (x682 x922))
(assert (x682 x580))
(assert (= (x218 x1092) (ite (= x1092 x878) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x776 x1092))))
(assert (= (ite (= x462 x676) x967 (x1097 x462)) (x869 x462)))
(assert (x682 x1063))
(assert (= x985 x1371))
(assert (= (ite (= x878 x823) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x776 x823)) (x218 x823)))
(assert (x1043 x975))
(assert (x682 x263))
(assert (x682 x1513))
(assert (x1043 x1501))
(assert (x682 x1495))
(assert (x682 x685))
(assert (= x592 (x918 (x1321 x592))))
(assert (x682 x1489))
(assert (= (x913 x1172) (ite (and x788 x1171) (x687 x1172) (x1369 x1172))))
(assert (x682 x347))
(assert (x682 x720))
(assert (= x1191 (x918 (x1321 x1191))))
(assert (= x787 (=> (and (= (= 0 x876) x1093) (or (and x1093 (= x593 0) (= 0 x797)) (and (= (x649 1461501637330902918203684832716283019655932542975 x1238) x1540) (>= x922 0) (= x922 x797) (not x1093) (= (x577 (x1321 x876) (x450 9) 0) x1154) (= (x649 1461501637330902918203684832716283019655932542975 x724) x800) (= 1 x593) (= (x996 x1555) x922) (= (x577 (x1321 x1540) x1358 0) x1555) (= (x577 (x1321 x800) x1154 0) x1358) (<= x922 115792089237316195423570985008687907853269984665640564039457584007913129639935)))) x321)))
(assert (x682 x1499))
(assert (= (=> (and (= (x782 x236) x895) (= (= x767 0) x80) (= (x577 (x1321 x103) (x450 6) 0) x889) (= x693 (x1276 x236 1)) (= (x649 1461501637330902918203684832716283019655932542975 x724) x749) (<= x679 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= x895 0) (= (x577 (x1321 x58) x704 0) x692) (= x1081 (x577 (x1321 x678) x889 0)) (= (x649 1461501637330902918203684832716283019655932542975 x724) x678) (<= x995 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= 0 x679) (<= x667 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x767 (x927 x692)) (or x80 (and (or (and (= x1310 x152) (= (- (/ x368 1000000000000000000) (uninterp_frac x368 1000000000000000000)) x853) (= (x577 (x1321 x103) (x450 11) 0) x1005) (= (x577 (x1321 x1550) x1143 0) x1381) (= (x1503 (+ 160 x961)) x794) x973 (= x915 (x1177 x11)) (= x1068 x504) (= x368 (* x850 x1063)) (< (* x1063 x850) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (>= x850 0) (= x1426 x853) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x850) (= (x577 (x1321 x871) x1360 0) x856) (or (not x176) (and (= x1341 (x577 (x1321 x103) (x450 11) 0)) (= 0 x216) (= (x577 (x1321 x614) x1341 0) x1235) (= (x649 1461501637330902918203684832716283019655932542975 x1238) x653) (< (+ x714 x353) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x1006 (x649 1461501637330902918203684832716283019655932542975 x724)) (>= x216 0) x176 (= (x577 (x1321 x103) (x450 4) 0) x89) (= x449 (x577 (x1321 x653) x360 0)) (= (+ x1408 x140) x1163) (= (* x1063 x1079) x586) (= (x660 x197) x885) (= x614 (x649 1461501637330902918203684832716283019655932542975 x724)) (= x854 (x577 (x1321 x260) x438 0)) (= (x292 x1049) x1079) (= x230 (x660 x197)) (= x834 (x649 1461501637330902918203684832716283019655932542975 x724)) (< (* x1079 x1063) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (> x893 1) (= x197 (x1503 (+ 64 x921))) (= x276 (x577 (x1321 x103) (x450 4) 0)) (= (x577 (x1321 x885) x449 0) x523) (= (x1442 x453) x353) (= x453 (x1503 (+ 192 x961))) (>= 1461501637330902918203684832716283019655932542975 x885) (>= x1079 0) (= x714 x1408) (= x438 (x577 (x1321 x105) x886 0)) (= x396 (x1442 x11)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1079) (= x886 (x577 (x1321 x1006) x89 0)) (<= x216 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x714 (- (/ x586 1000000000000000000) (uninterp_frac x586 1000000000000000000))) (< 1 x396) (= (x1388 x523) x216) (= (x649 1461501637330902918203684832716283019655932542975 x1238) x105) (not x474) (= x260 (x660 x197)) (= (< 2 x893) x474) (< 1 x893) (= x360 (x577 (x1321 x834) x276 0)) (= x353 x140) (>= 1461501637330902918203684832716283019655932542975 x230) (= (x577 (x1321 x230) x1235 0) x1049) (< 1 x893) (>= 1461501637330902918203684832716283019655932542975 x260))) (= x1383 0) (= x1383 (x571 x1437)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1383) (= x504 (x1177 x794)) (= (x577 (x1321 x1457) x8 0) x362) (= x1360 (x577 (x1321 x103) (x450 4) 0)) (= x90 (x577 (x1321 x552) x1077 0)) (= x1143 (x577 (x1321 x875) x1005 0)) (= (x660 x152) x1053) (= (x649 1461501637330902918203684832716283019655932542975 x1238) x626) (= x8 (x577 (x1321 x1327) x1295 0)) (= x1295 (x577 (x1321 x103) (x450 4) 0)) (> x893 0) (= (+ x1068 x1426) x407) (= x176 (> x893 1)) (= x875 (x649 1461501637330902918203684832716283019655932542975 x724)) (= (x660 x152) x552) (= (x660 x152) x1550) (< 0 x915) (>= 1461501637330902918203684832716283019655932542975 x1053) (= (x577 (x1321 x1053) x362 0) x1437) (>= 1461501637330902918203684832716283019655932542975 x552) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x853 x504)) (= x1327 (x649 1461501637330902918203684832716283019655932542975 x724)) (<= 0 x1383) (= (x649 1461501637330902918203684832716283019655932542975 x1238) x1457) (= x871 (x649 1461501637330902918203684832716283019655932542975 x724)) (= (x292 x1381) x850) (>= 1461501637330902918203684832716283019655932542975 x1550) (< 0 x893) (> x893 0) (= x1077 (x577 (x1321 x626) x856 0))) (not x973)) (= x347 (ite (> x767 115792089237316195423570985008687907853269984665640564039457) 1 0)) (= (- (/ x698 x995) (uninterp_frac x698 x995)) x1063) (not x80) (= x43 0) (= (uninterp_mod (* x767 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x698) (= (> x893 0) x973) (> x995 0) (= 1 x573) (= x43 (x649 x573 x347)))) (= x58 (x649 1461501637330902918203684832716283019655932542975 x1238)) (= (x1503 (+ x153 64)) x694) (= x372 (x1503 (+ x153 32))) (= x995 (x1212 x1291)) (= (= x1278 0) x656) (= (x1189 x693) x667) (<= 0 x767) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x895) (= x1088 (x649 1461501637330902918203684832716283019655932542975 x724)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x767) (= (x577 (x1321 x103) (x450 5) 0) x690) (<= 0 x995) (= x704 (x577 (x1321 x749) x1045 0)) (= (= x596 0) x1536) (= (x577 (x1321 x1088) x690 0) x1291) (or (and (= x100 (x649 1461501637330902918203684832716283019655932542975 x724)) (= (x577 (x1321 x1239) x594 0) x670) (= (x577 (x1321 x100) x1250 0) x287) (= (x577 (x1321 x103) (x450 6) 0) x1250) (= (x649 1461501637330902918203684832716283019655932542975 x724) x1239) (= x239 x385) (= (x577 (x1321 x103) (x450 5) 0) x594) (not x1536) (= (* x596 x300) x239) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (* x596 x300))) (and (= x1455 (x577 (x1321 x103) (x450 6) 0)) (= x256 (x649 1461501637330902918203684832716283019655932542975 x724)) x1536 (= (x577 (x1321 x256) x1455 0) x483))) (= x679 (x417 x1081)) (>= x667 0) (= (< x679 x281) x1338) (= (x577 (x1321 x103) (x450 1) 0) x236) (or (and (= x1225 (x1177 x372)) (= x802 (< x1225 x1404)) (or (and (= x990 x596) x763 (= (x1177 x153) x842) (= x990 (x1207 (- x202 x842))) (not (> x842 x202))) (and (= x263 (ite (< x770 604800) x770 604800)) (not (> x679 x202)) (not x763) (= x606 604800) (= (x1207 (- x202 x679)) x770) (= x263 x596))) x1338 (or (and (not x802) (= x202 x1404)) (and (= x640 (x1177 x372)) x802 (= x202 x640))) (= x763 (= 0 x679))) (and (not x1338) (= 0 x596))) (or x656 (and (not x656) (= (x577 (x1321 x675) x513 0) x425) (= x675 (x649 1461501637330902918203684832716283019655932542975 x724)) (= x513 (x577 (x1321 x103) (x450 10) 0)))) (= x281 (x1177 x372)) (= x1045 (x577 (x1321 x103) (x450 3) 0))) x605) x1493))
(assert (=> (< (- x653 1) 10000) (= (x450 x653) (x1321 x653))))
(assert (x682 x1457))
(assert (= (x404 x1172) 0))
(assert (= x1307 (x918 (x1321 x1307))))
(assert (=> (> (+ 10000 1) x824) (= (x450 x824) (x1321 x824))))
(assert (=> (< (- x992 1) 10000) (= (x450 x992) (x1321 x992))))
(assert (= (ite (= x297 x372) x667 (x1355 x297)) (x1177 x297)))
(assert (x682 x273))
(assert (x682 x210))
(assert (x682 x1127))
(assert (x682 x906))
(assert (= (x774 x1335) (ite (= x11 x1335) x893 (x1019 x1335))))
(assert (x1043 x824))
(assert (x1314 x573))
(assert (=> (< (- x1282 1) 10000) (= (x1321 x1282) (x450 x1282))))
(assert (x1043 x1029))
(assert (= (x918 (x1321 x975)) x975))
(assert (x1043 x1552))
(assert (= (x1321 2061678023) (x450 2061678023)))
(assert (x682 x706))
(assert (x1043 x958))
(assert (= 2939843472 (x918 (x450 2939843472))))
(assert (x682 x372))
(assert (x1043 x215))
(assert (= x1475 (x918 (x1321 x1475))))
(assert (x682 x1052))
(assert (= x885 (x918 (x1321 x885))))
(assert (x682 x162))
(assert (x1043 x866))
(assert (=> (> (+ 10000 1) x885) (= (x1321 x885) (x450 x885))))
(assert (=> (< (- x1535 1) 10000) (= (x450 x1535) (x1321 x1535))))
(assert (= (ite (= x372 x1172) x667 (x1355 x1172)) (x1177 x1172)))
(assert (x682 x977))
(assert (=> (> (+ 10000 1) x206) (= (x450 x206) (x1321 x206))))
(assert (= (ite (and x332 x985) (x774 x794) (x839 x794)) (x406 x794)))
(assert (= (x970 x617) (ite (= x1022 x617) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x36 x617))))
(assert (x267 x1238 x1474))
(assert (=> (> (+ 10000 1) x1247) (= (x450 x1247) (x1321 x1247))))
(assert (x682 x800))
(assert (= (and x639 x673) x788))
(assert (x682 x490))
(assert (= (x1478 x341) (ite (and x1394 (not x176) x973 (not x80)) (x1442 x341) (ite (and x1394 (not x973) (not x80)) (x1177 x341) (ite (and x80 x1394) (x1177 x341) (x950 x341))))))
(assert (x682 x1152))
(assert (x682 x766))
(assert (x682 x1362))
(assert (x682 x1458))
(assert (x1043 x1391))
(assert (x682 x199))
(assert (x682 x1048))
(assert (=> (< (- x1191 1) 10000) (= (x450 x1191) (x1321 x1191))))
(assert (= (x450 87118632) (x1321 87118632)))
(assert (= (ite (and (not x80) (not x176) x973 x1394) (x1442 x11) (ite (and (not x973) (not x80) x1394) (x1177 x11) (ite (and x1394 x80) (x1177 x11) (x950 x11)))) (x1478 x11)))
(assert (x682 x1309))
(assert (x682 x731))
(assert (x682 x1090))
(assert (x682 x11))
(assert (x682 x341))
(assert (x682 x1278))
(assert (= (x1321 2960351575) (x450 2960351575)))
(assert (x682 x257))
(assert (x682 x369))
(assert (x1043 x243))
(assert (= (x406 x453) (ite (and x332 x985) (x774 x453) (x839 x453))))
(assert (= (x535 x661) (ite (= x661 x1015) x1461 (x38 x661))))
(assert (= (x1321 115792089237316195423570985008687907853269984665640564039457) (x450 115792089237316195423570985008687907853269984665640564039457)))
(assert (x1314 x347))
(assert (x1043 x750))
(assert (= 0 (x404 x1272)))
(assert (= (x918 (x1321 x1249)) x1249))
(assert (x682 x984))
(assert (x682 x1443))
(assert (= (+ (x918 x1197) 1) (x918 (x1276 x1197 1))))
(assert (x1314 x1238))
(assert (x682 x875))
(assert (x682 x1240))
(assert (=> (< (- x1146 1) 10000) (= (x450 x1146) (x1321 x1146))))
(assert (x682 x1168))
(assert (x682 x219))
(assert (= (=> (and (= x156 x848) (= x937 x73)) x1009) x1532))
(assert (x682 x60))
(assert (= (x918 (x450 115792089237316195423570985008687907853269984665640564039457)) 115792089237316195423570985008687907853269984665640564039457))
(assert (= (x1076 x462) (ite (= x462 x545) x366 (x869 x462))))
(assert (= (x450 604800) (x1321 604800)))
(assert (x682 x861))
(assert (= x1109 (and (not x294) x635)))
(assert (= (ite (= x372 x1015) x667 (x1355 x1015)) (x1177 x1015)))
(assert (= 0 (x404 x794)))
(assert (x682 x1015))
(assert (x682 x1132))
(assert (=> (> (+ 10000 1) x1029) (= (x450 x1029) (x1321 x1029))))
(assert (= (x918 (x1321 x354)) x354))
(assert (= (x535 x297) (ite (= x297 x1015) x1461 (x38 x297))))
(assert (=> (> (+ 10000 1) x1223) (= (x1321 x1223) (x450 x1223))))
(assert (= x345 x566))
(assert (x682 x867))
(assert (= (x1177 x11) (ite (= x372 x11) x667 (x1355 x11))))
(assert (x682 x343))
(assert (x682 x749))
(assert (= x495 (x918 (x1321 x495))))
(assert (= (x365 x1272) (ite (and x639 x673 (not x26)) (x65 x1272) (x979 x1272))))
(assert (x682 x814))
(assert (= x1193 (x918 (x1321 x1193))))
(assert (= (x918 (x1321 x1242)) x1242))
(assert (x682 x258))
(assert (= (x1388 x523) (ite (= x90 x523) x767 (x571 x523))))
(assert (x682 x472))
(assert (x682 x1170))
(assert (x682 x901))
(assert (x1043 x1450))
(assert (=> (< (- x242 1) 10000) (= (x1321 x242) (x450 x242))))
(assert (x1314 x724))
(assert (x1043 x917))
(assert (x682 x1153))
(assert (x682 x49))
(assert (x1043 x731))
(assert (x682 x793))
(assert (= (x918 (x450 76450787359836037641860180984291677749980919077056822294353438043884394381312)) 76450787359836037641860180984291677749980919077056822294353438043884394381312))
(assert (x682 x334))
(assert (x682 x1064))
(assert (= (ite (= x112 x1378) x41 (x186 x1378)) (x38 x1378)))
(assert (x682 x1407))
(assert (x682 x621))
(assert (x682 x840))
(assert (= (x1478 x295) (ite (and x1394 (not x80) x973 (not x176)) (x1442 x295) (ite (and (not x80) (not x973) x1394) (x1177 x295) (ite (and x80 x1394) (x1177 x295) (x950 x295))))))
(assert (x682 x665))
(assert (x682 x1311))
(assert (x682 x398))
(assert (= 0 (x404 x1335)))
(assert (=> (< (- x1048 1) 10000) (= (x1321 x1048) (x450 x1048))))
(assert (= x460 (x918 (x1321 x460))))
(assert (= x234 (x918 (x1321 x234))))
(assert (= (x918 (x1321 x1440)) x1440))
(assert (x1043 x1191))
(assert (= (and x1433 x53) x1195))
(assert (x1043 x1184))
(assert (x682 x683))
(assert (= (x918 (x1321 x992)) x992))
(assert (x682 x695))
(assert (= (x918 (x1321 x727)) x727))
(assert (x682 x1435))
(assert (= (=> (and (> 2293535753 x468) (= 2258409472 x468) (<= 0 x361) (>= 1461501637330902918203684832716283019655932542975 x937) (not (= 2211524764 x468)) (= x361 x1067) (not (> 911411945 x468)) (not (= 1968616202 x468)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x361) (not (= x468 1986467848)) (= (x1183 x233) x361) (= x600 (x577 (x1321 x156) (x450 6) 0)) (= x233 (x577 (x1321 x937) x600 0)) (= x685 (x1498 (x1321 274184521717934524641157099916833587206))) (< 0 x685) (not (= x468 2061678023)) (not (> 1968616202 x468))) (=> (and (= x149 x1067) (= x621 x73) (= x848 x917)) x213)) x1009))
(assert (= x1048 (x918 (x1321 x1048))))
(assert (x682 x1214))
(assert (x682 x966))
(assert (= (ite (and x1394 (not x80) x973 (not x176)) (x1388 x662) (ite (and x1394 (not x973) (not x80)) (x571 x662) (ite (and x1394 x80) (x571 x662) (x1110 x662)))) (x1054 x662)))
(assert (= (x1388 x1430) (ite (= x1430 x90) x767 (x571 x1430))))
(assert (= (x918 (x1321 x1379)) x1379))
(assert (x682 x295))
(assert (=> (> (+ 10000 1) x1373) (= (x1321 x1373) (x450 x1373))))
(assert (= (=> (= x1468 (< 0 x103)) (and (=> x1468 x251) (=> (not x1468) x544))) x786))
(assert (= x946 (or (and x1171 x788) (and x67 x1226))))
(assert (x682 x653))
(assert (x682 x557))
(assert (x1043 x626))
(assert (=> (> (+ 10000 1) x1141) (= (x1321 x1141) (x450 x1141))))
(assert (x1043 x773))
(assert (= (ite (and x1536 x1394) (x1294 x233) (x301 x233)) (x987 x233)))
(assert (= x105 (x918 (x1321 x105))))
(assert (x682 x895))
(assert (= (x218 x1378) (ite (= x1378 x878) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x776 x1378))))
(assert (= x999 (x918 (x1321 x999))))
(assert (= x94 (=> (and (> x1286 x410) (= x418 (x577 (x1321 x1099) (x450 3) 0)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x41) (= x1501 (x649 1461501637330902918203684832716283019655932542975 x1238)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1070) (= (x987 x278) x583) (or (and (= x1451 1) (= x168 (- (/ x629 x835) (uninterp_frac x629 x835))) (or (not x1221) (and x1221 (= (x649 1461501637330902918203684832716283019655932542975 x724) x1520) (= (x577 (x1321 x1099) (x450 4) 0) x148) (< 0 x893) (= (x660 x607) x866) (= x920 (x577 (x1321 x1099) (x450 4) 0)) (= x1182 x1253) (>= x161 0) (= x924 (x577 (x1321 x405) x364 0)) (or (and (> x893 1) (>= 1461501637330902918203684832716283019655932542975 x1282) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x753) (>= 1461501637330902918203684832716283019655932542975 x824) (= (x660 x1490) x1282) (= (x577 (x1321 x1099) (x450 11) 0) x778) (= (x577 (x1321 x533) x1347 0) x440) (= x460 (x649 1461501637330902918203684832716283019655932542975 x724)) (= 0 x753) (= (x660 x1490) x133) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x104 x956)) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (* x846 x168)) (>= x846 0) (= (x535 x11) x1168) (= (x577 (x1321 x318) x120 0) x75) (= x956 (x535 x219)) (= (x577 (x1321 x1099) (x450 4) 0) x1347) (= (+ x403 x81) x182) (= x81 x104) (<= x133 1461501637330902918203684832716283019655932542975) x838 (= (x577 (x1321 x537) x778 0) x22) (= (x577 (x1321 x1099) (x450 4) 0) x1477) (= x1216 (< 2 x893)) (= x318 (x649 1461501637330902918203684832716283019655932542975 x1238)) (< 1 x1168) (= x120 (x577 (x1321 x460) x1477 0)) (not x1216) (= (x292 x1372) x846) (= x575 (x577 (x1321 x824) x859 0)) (= x537 (x649 1461501637330902918203684832716283019655932542975 x724)) (= x859 (x577 (x1321 x369) x440 0)) (= (x649 1461501637330902918203684832716283019655932542975 x724) x533) (<= 0 x753) (= x219 (x1503 (+ x961 192))) (= (x660 x1490) x824) (= x369 (x649 1461501637330902918203684832716283019655932542975 x1238)) (= x403 x956) (= x1490 (x1503 (+ 64 x921))) (= (x1380 x575) x753) (= (x577 (x1321 x133) x22 0) x1372) (= x384 (x577 (x1321 x1282) x75 0)) (<= x846 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x104 (- (/ x56 1000000000000000000) (uninterp_frac x56 1000000000000000000))) (< 1 x893) (< 1 x893) (= x56 (* x846 x168))) (not x838)) (>= x1508 0) (= (x649 1461501637330902918203684832716283019655932542975 x724) x110) (= x838 (> x893 1)) (< 0 x864) (= (* x168 x1508) x828) (= (x577 (x1321 x589) x1316 0) x662) (< 0 x893) (= x1508 (x292 x144)) (>= 1461501637330902918203684832716283019655932542975 x773) (>= 1461501637330902918203684832716283019655932542975 x866) (= x364 (x577 (x1321 x1002) x148 0)) (= (x38 x1015) x1182) (= x602 (x577 (x1321 x1099) (x450 11) 0)) (= (- (/ x828 1000000000000000000) (uninterp_frac x828 1000000000000000000)) x882) (= (x1054 x662) x161) (<= x161 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x437 (x649 1461501637330902918203684832716283019655932542975 x1238)) (= (x660 x607) x773) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x882 x1182)) (<= x1508 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= 1461501637330902918203684832716283019655932542975 x589) (= (x1503 (+ x961 160)) x1015) (= x607 x1310) (= (x577 (x1321 x110) x920 0) x1403) (= (x577 (x1321 x773) x245 0) x144) (> x893 0) (= (x660 x607) x589) (= (x649 1461501637330902918203684832716283019655932542975 x1238) x405) (= x909 (x577 (x1321 x866) x924 0)) (= (+ x1253 x54) x1461) (= (x649 1461501637330902918203684832716283019655932542975 x724) x1002) (= x882 x54) (= (x577 (x1321 x437) x1403 0) x1316) (= x245 (x577 (x1321 x1520) x602 0)) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (* x168 x1508)) (= x864 (x38 x11)) (= 0 x161))) (= x629 (uninterp_mod (* 1000000000000000000 x1070) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (not x432) (> x835 0) (= (ite (< 115792089237316195423570985008687907853269984665640564039457 x1070) 1 0) x117) (= (x649 x1451 x117) x164) (= (< 0 x893) x1221) (= x164 0)) x432) (= (x577 (x1321 x1099) (x450 5) 0) x1459) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1257) (<= 0 x583) (= (x577 (x1321 x1099) (x450 1) 0) x699) (= x1513 x823) (or (and (= (x649 1461501637330902918203684832716283019655932542975 x724) x1160) x12 (= x1190 (x577 (x1321 x1160) x865 0)) (= (x577 (x1321 x1099) (x450 6) 0) x865)) (and (= x306 x1108) (= x331 (x649 1461501637330902918203684832716283019655932542975 x724)) (= x792 (x577 (x1321 x331) x894 0)) (= (x577 (x1321 x1017) x779 0) x604) (= (x649 1461501637330902918203684832716283019655932542975 x724) x1017) (= x779 (x577 (x1321 x1099) (x450 6) 0)) (not x12) (= (* x1173 x906) x1108) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (* x1173 x906)) (= (x577 (x1321 x1099) (x450 5) 0) x894))) (= x1323 (x649 1461501637330902918203684832716283019655932542975 x724)) (= x821 (x38 x112)) (= (= x1173 0) x12) (= (x1189 x1417) x41) (= (x649 1461501637330902918203684832716283019655932542975 x724) x1552) (= x835 (x1447 x1010)) (= x1513 (x1503 (+ x642 64))) (= x1286 (x1503 (+ x103 2))) (= x278 (x577 (x1321 x1552) x79 0)) (<= 0 x835) (or x669 (and (= (x577 (x1321 x1099) (x450 10) 0) x870) (not x669) (= x1373 (x649 1461501637330902918203684832716283019655932542975 x724)) (= (x577 (x1321 x1373) x870 0) x952))) (= (< x583 x821) x1549) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x583) (>= x1070 0) (= x1257 (x782 x699)) (= (x577 (x1321 x1099) (x450 6) 0) x79) (or (and (or (and (= x665 x1173) x1098 (= x665 (x1207 (- x861 x1124))) (not (< x861 x1124)) (= x1124 (x38 x642))) (and (not (< x861 x583)) (not x1098) (= x15 (x1207 (- x861 x583))) (= x688 (ite (> 604800 x15) x15 604800)) (= x285 604800) (= x1173 x688))) (= (< x446 x1404) x1471) (= x446 (x38 x112)) (= x1098 (= x583 0)) (or (and (= x861 x1404) (not x1471)) (and (= x861 x729) (= (x38 x112) x729) x1471)) x1549) (and (not x1549) (= x1173 0))) (= (x577 (x1321 x1450) x418 0) x170) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x835) (<= 0 x1257) (= x432 (= 0 x1070)) (= (x1503 (+ 32 x642)) x112) (= (x1276 x699 1) x1417) (= x1070 (x833 x456)) (<= 0 x41) (= (x649 1461501637330902918203684832716283019655932542975 x724) x1450) (= x456 (x577 (x1321 x1501) x170 0)) (= x669 (= 0 x179)) (= (x577 (x1321 x1323) x1459 0) x1010) (not (= x1099 115792089237316195423570985008687907853269984665640564039457584007913129639935))) x515)))
(assert (x682 x592))
(assert (= (x358 x341) (ite (and x1292 (not x147) x1315 x307 x108 x759) (x1269 x341) (ite (and x307 x759 x1315 x108 (not x1292)) (x1515 x341) (ite (and x1315 x307 x759 (not x108)) (x1539 x341) (ite (and x759 (not x307) x1315) (x970 x341) (x1102 x341)))))))
(assert (x1043 x398))
(assert (= (x918 (x1321 x800)) x800))
(assert (x682 x212))
(assert (x682 x543))
(assert (x1043 x1551))
(assert (= (x1321 1517119036) (x450 1517119036)))
(assert (= (ite (and x985 x332) (x774 x1272) (x839 x1272)) (x406 x1272)))
(assert (x1043 x1407))
(assert (x1043 x609))
(assert (x682 x115))
(assert (= (x918 (x1321 x947)) x947))
(assert (x682 x1031))
(assert (= (x1321 76450787359836037641860180984291677749980919077056822294353438043884394381312) (x450 76450787359836037641860180984291677749980919077056822294353438043884394381312)))
(assert (= x568 (x918 (x1321 x568))))
(assert (x682 x502))
(assert (x1314 x1424))
(assert (=> (> (+ 10000 1) x437) (= (x450 x437) (x1321 x437))))
(assert (=> (< (- x414 1) 10000) (= (x1321 x414) (x450 x414))))
(assert (x682 x1517))
(assert (x682 x153))
(assert (=> (> (+ 10000 1) x730) (= (x1321 x730) (x450 x730))))
(assert (x682 x1092))
(assert (= (ite (= x1015 x617) x1461 (x38 x617)) (x535 x617)))
(assert (= (ite (and x1394 x1536) (x1294 x278) (x301 x278)) (x987 x278)))
(assert (x1043 274184521717934524641157099916833587214))
(assert (x1043 x592))
(assert (x1043 x1249))
(assert (=> (> (+ 10000 1) x722) (= (x450 x722) (x1321 x722))))
(assert (x682 x688))
(assert (= (x65 x1335) (ite (and x1198 x639 x689 (not x1036) x981 x673) (x1076 x1335) (ite (and (not x981) x689 x673 x639 x1198) (x869 x1335) (ite (and x1198 (not x689) x639 x673) (x1097 x1335) (ite (and x639 (not x1198) x673) (x218 x1335) (x978 x1335)))))))
(assert (=> (> (+ 10000 1) x1540) (= (x1321 x1540) (x450 x1540))))
(assert (= (ite (= x676 x1511) x967 (x1097 x1511)) (x869 x1511)))
(assert (x682 x1096))
(assert (=> (< (- x1457 1) 10000) (= (x1321 x1457) (x450 x1457))))
(assert (x682 x1099))
(assert (x682 x116))
(assert (= (ite (= x545 x11) x366 (x869 x11)) (x1076 x11)))
(assert (x682 x801))
(assert (= (ite (= x112 x219) x41 (x186 x219)) (x38 x219)))
(assert (x1043 x885))
(assert (= (x918 (x1321 x1501)) x1501))
(assert (x682 x1540))
(assert (= (x918 (x450 1461501637330902918203684832716283019655932542975)) 1461501637330902918203684832716283019655932542975))
(assert (x682 x1239))
(assert (x1043 x871))
(assert (x1043 x1088))
(assert (= x1530 (=> (and (or (not x1421) (and (not (or (and (< x1132 32) (= (<= x1132 57896044618658097711785492504343953926634992332820282019728792003956564819967) true)) (> x1132 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (= x273 (ite x941 1 0)) (= (not x1229) x941) (= (x374 x341) x1132) (> x641 0) (= x641 (x374 x1335)) x1421 (= x273 x641) (= (x1503 (+ x341 32)) x1335) (= (= 0 x641) x1229))) (or (and (= x341 96) x923) (and (= x131 (x1503 (+ 96 x1037))) (not x923) (= x883 x341))) (= (= x1301 0) x923) x270 (= x141 (x134 (x1321 x1367))) (= x630 (< 2 x893)) (= x1421 (> x1080 0)) (not x630) (= x270 (< (x620 (x1321 274184521717934524641157099916833587206)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= x1080 (x374 x341)) (not (= 0 x591))) x1532)))
(assert (= (and x1525 x426) x1526))
(assert (= (x1076 x617) (ite (= x545 x617) x366 (x869 x617))))
(assert (x1043 x280))
(assert (= (or (and x791 (not x982)) x1011) x97))
(assert (= (x1390 x311) (ite (and x160 x799) (x1210 x311) (ite (and x452 (not x160) x799) (x128 x311) (x1289 x311)))))
(assert (x1314 115792089237316195423570985008687907853269984665640564039457584007913129639904))
(assert (x682 x1071))
(assert (= true x1370))
(assert (x682 x1249))
(assert (= (ite (and x738 x799) (x996 x712) (x737 x712)) (x1186 x712)))
(assert (= (x1097 x341) (ite (= x341 x427) x585 (x218 x341))))
(assert (x682 x614))
(assert (=> (< (- x532 1) 10000) (= (x1321 x532) (x450 x532))))
(assert (x682 x1105))
(assert (x1043 x1215))
(assert (x682 x1067))
(assert (x682 x789))
(assert (x682 x694))
(assert (x1043 274184521717934524641157099916833587206))
(assert (= (x918 (x1321 x1507)) x1507))
(assert (x682 x247))
(assert (= 2293535753 (x918 (x450 2293535753))))
(assert (x682 x596))
(assert (x682 x73))
(assert (=> (> (+ 10000 1) x402) (= (x1321 x402) (x450 x402))))
(assert (x682 x468))
(assert (x682 x41))
(assert (=> (< (- x1018 1) 10000) (= (x450 x1018) (x1321 x1018))))
(assert (x682 x1310))
(assert (x682 x540))
(assert (x682 x149))
(assert (x1043 x58))
(assert (x682 x727))
(assert (x682 x568))
(assert (x1043 x437))
(assert (x682 x1509))
(assert (x682 x992))
(assert (= (x1442 x297) (ite (= x297 x794) x407 (x1177 x297))))
(assert (= x369 (x918 (x1321 x369))))
(assert (= x1446 (and (not x1226) x67)))
(assert (= (x918 (x1321 x555)) x555))
(assert (= x1423 (x918 (x1321 x1423))))
(assert (x682 x216))
(assert (= (ite (= x453 x794) x407 (x1177 x453)) (x1442 x453)))
(assert (=> (< (- x1160 1) 10000) (= (x1321 x1160) (x450 x1160))))
(assert (=> (> (+ 10000 1) x100) (= (x450 x100) (x1321 x100))))
(assert (=> (> (+ 10000 1) x773) (= (x1321 x773) (x450 x773))))
(assert (= 0 (x404 x1511)))
(assert (x682 x352))
(assert (= (or x1254 x2) x1011))
(assert (x682 x385))
(assert (= (ite (= x661 x794) x407 (x1177 x661)) (x1442 x661)))
(assert (x682 x1117))
(assert (= (ite (= x295 x510) x252 (x1539 x295)) (x1515 x295)))
(assert (x682 x1267))
(assert (x682 x506))
(assert (x1043 x897))
(assert (= (ite (= x617 x427) x585 (x218 x617)) (x1097 x617)))
(assert (= (ite (and (not x80) x1394 x973 (not x176)) (x1442 x1172) (ite (and x1394 (not x80) (not x973)) (x1177 x1172) (ite (and x1394 x80) (x1177 x1172) (x950 x1172)))) (x1478 x1172)))
(assert (x1043 x1213))
(assert (x682 x458))
(assert (= 2418364589 (x918 (x450 2418364589))))
(assert (= (ite (= x794 x219) x407 (x1177 x219)) (x1442 x219)))
(assert (x682 x1535))
(assert (x682 x646))
(assert (= x289 (or (and x473 x746) (and x1512 (not x748)) (and x1529 (not x744)))))
(assert (x682 x1277))
(assert (x682 x1002))
(assert (x682 x768))
(assert (x682 x855))
(assert (=> (> (+ 10000 1) x506) (= (x450 x506) (x1321 x506))))
(assert (= (ite (and x985 x332) (x774 x219) (x839 x219)) (x406 x219)))
(assert (x682 x735))
(assert (=> (< (- x1193 1) 10000) (= (x450 x1193) (x1321 x1193))))
(assert (x682 x1041))
(assert (x1043 x653))
(assert (= (or x736 x1494) x1024))
(assert (x682 x573))
(assert (x1043 x402))
(assert (x682 x696))
(assert (x682 x1402))
(assert (=> (< (- x1422 1) 10000) (= (x1321 x1422) (x450 x1422))))
(assert (x1043 x206))
(assert (=> (< (- x645 1) 10000) (= (x450 x645) (x1321 x645))))
(assert (=> (> (+ 10000 1) x614) (= (x450 x614) (x1321 x614))))
(assert (= (x406 x462) (ite (and x332 x985) (x774 x462) (x839 x462))))
(assert (= (x918 (x1321 x1017)) x1017))
(assert (= (ite (= x11 x453) x893 (x1019 x453)) (x774 x453)))
(assert (=> (> (+ 10000 1) x589) (= (x450 x589) (x1321 x589))))
(assert (= (x1539 x1272) (ite (= x1166 x1272) x826 (x970 x1272))))
(assert (= (x38 x1335) (ite (= x112 x1335) x41 (x186 x1335))))
(assert (x682 x1088))
(assert (= (x1076 x1335) (ite (= x545 x1335) x366 (x869 x1335))))
(assert (= true x486))
(assert (x682 x228))
(assert (x682 x1333))
(assert (= (or (and (not x53) x1433) (and x726 (not x1280))) x1438))
(assert (x1043 x947))
(assert (x682 x1107))
(assert (=> (> (+ 10000 1) x331) (= (x450 x331) (x1321 x331))))
(assert (= (x774 x546) (ite (= x546 x11) x893 (x1019 x546))))
(assert (x682 x1420))
(assert (x1043 x678))
(assert (= (=> (and (<= x1161 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x577 (x1321 x495) x373 0) x1175) (< 0 x302) (> 2690754053 x240) (not (= x240 2293535753)) (= 2532887486 x240) (= x302 (x1498 (x1321 274184521717934524641157099916833587206))) (= (x577 (x1321 x1535) x1175 0) x1359) (= x373 (x577 (x1321 x999) (x450 4) 0)) (= (x571 x1194) x1161) (<= x402 1461501637330902918203684832716283019655932542975) (< x240 2960351575) (not (= x240 2512682246)) (not (= 2418364589 x240)) (>= x1161 0) (<= x495 1461501637330902918203684832716283019655932542975) (= x1194 (x577 (x1321 x402) x1359 0)) (>= 1461501637330902918203684832716283019655932542975 x1535) (= x976 x1161) (not (> 2293535753 x240))) (=> (and (not (= x98 2690754053)) (= x1233 0) (<= x724 1461501637330902918203684832716283019655932542975) (= (x1503 (+ x11 x346)) x599) (not (> x893 18446744073709551615)) (< x98 2960351575) (= x1404 x517) (not (= x98 2868243304)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1120) (= x525 (x1503 (+ x1058 160))) (= (= x1398 0) x1377) (= x572 x1499) (not (< 18446744073709551615 x1458)) (not (> x1127 x1516)) (= x1096 x1374) (= x798 x1499) (= x1089 (<= x1066 x517)) (= x459 x724) (<= x1238 1461501637330902918203684832716283019655932542975) (= 0 x910) (= x11 (x1503 (+ x472 160))) (= (uninterp_mod (* x893 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x650) (= (and x756 x1164) x890) (<= 0 x541) (= x103 x836) (= x1058 (uninterp_mod (* x893 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= true (<= x1516 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (= x940 x1504) x1139 (= x1238 x720) (= x921 (x1503 (+ x416 4))) (<= 0 x162) (not (= 2743102681 x98)) (= (and x1377 x221) x756) (= x1404 x257) (= x984 x1066) (= x701 (x1207 (- x1516 4))) (= x789 x269) (not (= 2798343961 x98)) (>= x572 0) (= 0 x277) (= x1238 x1375) (>= 1461501637330902918203684832716283019655932542975 x162) (> x16 0) (or (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1516) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x534)) (< x534 x1516)) (and (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x534) (<= x1516 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (= x394 x162) (= x221 (= x1504 0)) (> x1516 163) (= x16 (x1498 (x1321 274184521717934524641157099916833587206))) (= x762 0) (not (> 1 x1134)) (= x416 x1458) (not (= 2764855426 x98)) (= x410 x1096) (= x901 x1398) (= (= 0 x269) x1164) (= (< 0 x936) x734) (= x534 (x1503 (+ x416 35))) (or x332 (and (= (x1503 (+ 160 x961)) x375) (= (uninterp_mod (* x893 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x1333) (not x332))) (= x724 x1119) (= x472 (uninterp_mod (* x893 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= x961 (x1503 (+ x472 32))) (= (x1019 128) x1134) (not (> x103 x1096)) (= x893 (x660 x921)) (or (not x734) (and (not (> x780 1)) (= (x1207 (- x1134 1)) x780) (not (< x1134 1)) (= x250 (> x1134 1)) x734 (or (and (< 1 x1107) (or (and (= x1311 (x1019 128)) (= x272 (x1019 160)) (= x415 (x649 1461501637330902918203684832716283019655932542975 x272)) (> x548 2) (= x63 (x1019 224)) (= (> x1134 3) x905) (> x1311 0) (not (= x977 x415)) (= (x649 1461501637330902918203684832716283019655932542975 x63) x977) x509 (not x905) (= x548 (x1019 128))) (not x509)) x250 (= x867 (x649 1461501637330902918203684832716283019655932542975 x1424)) (= x1424 (x1019 160)) (= x490 (x1019 128)) (< 0 x490) (not (= x867 x1262)) (= (> x1134 2) x509) (= (x649 1461501637330902918203684832716283019655932542975 x48) x1262) (= (x1019 128) x1107) (= (x1019 192) x48)) (not x250)))) (= x332 (= x893 0)) (= x1139 (or (not x758) x890)) (= x1152 x1042) (not (> 4 x1516)) (>= 1461501637330902918203684832716283019655932542975 x541) (= x789 x976) (not (< x98 2690754053)) (= x758 (= x880 0)) (= x984 x880) (>= x1120 0) (= x936 (x1207 (- x1134 1))) (= (x1503 (+ 36 x416)) x1310) (= x949 x103) (= (x1503 (+ 32 x1058)) x346) (not (or (and (< x701 160) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x701))) (> x701 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (= x664 128) (= 0 x1152) (> x1120 x1096) x1089 (= x98 2939843472) (>= 1461501637330902918203684832716283019655932542975 x572) (= x1127 (x1503 (+ x1310 x650))) (not (< x98 2293535753))) x1284)) x1185))
(assert (= 0 (x404 x453)))
(assert (x682 x809))
(assert (= (ite (= x219 x11) x893 (x1019 x219)) (x774 x219)))
(assert (= (ite (= x219 x372) x667 (x1355 x219)) (x1177 x219)))
(assert (= x519 (and x1385 (not x376))))
(assert (= x103 (x918 (x1321 x103))))
(assert (x682 x931))
(assert (x1043 x156))
(assert (=> (< (- x1420 1) 10000) (= (x450 x1420) (x1321 x1420))))
(assert (x1043 x1428))
(assert (= (ite (and x332 x985) (x774 x297) (x839 x297)) (x406 x297)))
(assert (x1043 x814))
(assert (x682 x780))
(assert (= (x918 (x1321 x133)) x133))
(assert (= (x404 x219) 0))
(assert (x682 x1389))
(assert (x682 x862))
(assert (=> (< (- x1507 1) 10000) (= (x450 x1507) (x1321 x1507))))
(assert (= (x918 (x1321 x1141)) x1141))
(assert (x682 x770))
(assert (x682 x427))
(assert (x682 x1516))
(assert (x682 x34))
(assert (= (x918 (x1321 x1550)) x1550))
(assert (= (ite (= x1015 x219) x1461 (x38 x219)) (x535 x219)))
(assert (x682 x178))
(assert (= x1064 (x918 (x1321 x1064))))
(assert (= (ite (and x639 x673 (not x26)) (x65 x341) (x979 x341)) (x365 x341)))
(assert (x682 x880))
(assert (x682 x1293))
(assert (x1043 x495))
(assert (=> (< (- x675 1) 10000) (= (x1321 x675) (x450 x675))))
(assert (x682 x589))
(assert (x682 x965))
(assert (= (x918 (x1321 x1373)) x1373))
(assert (x1043 x1344))
(assert (x1043 x419))
(assert (x682 x14))
(assert (x682 x868))
(assert (x682 x1307))
(assert (x682 x161))
(assert (= (x869 x1335) (ite (= x676 x1335) x967 (x1097 x1335))))
(assert (= (ite (= x545 x661) x366 (x869 x661)) (x1076 x661)))
(assert (x682 x1440))
(assert (x682 x1018))
(assert (= (or (and x1342 x1334) (and x1265 x21) x97) x639))
(assert (= 0 (x404 x851)))
(assert (= x1518 (x918 (x1321 x1518))))
(assert (= (x970 x341) (ite (= x1022 x341) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x36 x341))))
(assert (x682 x1434))
(assert (x682 x39))
(assert (= (x987 x198) (ite (and x1536 x1394) (x1294 x198) (x301 x198))))
(assert (= (ite (= x427 x11) x585 (x218 x11)) (x1097 x11)))
(assert (x682 x1312))
(assert (x682 x545))
(assert (x682 x1332))
(assert (= (ite (= x427 x1335) x585 (x218 x1335)) (x1097 x1335)))
(assert (= (x450 26959946667150639794667015087019630673637144422540572481103610249215) (x1321 26959946667150639794667015087019630673637144422540572481103610249215)))
(assert (= (ite (and x673 x689 x1198 x639 (not x1036) x981) (x1076 x661) (ite (and x689 x1198 (not x981) x673 x639) (x869 x661) (ite (and x639 x1198 (not x689) x673) (x1097 x661) (ite (and (not x1198) x673 x639) (x218 x661) (x978 x661))))) (x65 x661)))
(assert (x682 x1423))
(assert (=> (< (- x1518 1) 10000) (= (x1321 x1518) (x450 x1518))))
(assert (x682 x675))
(assert (x1043 x1141))
(assert (x682 x1439))
(assert (x682 x593))
(assert (x682 x815))
(assert (=> (> (+ 10000 1) x834) (= (x450 x834) (x1321 x834))))
(assert (= (x1478 x1511) (ite (and (not x176) x973 x1394 (not x80)) (x1442 x1511) (ite (and (not x80) (not x973) x1394) (x1177 x1511) (ite (and x1394 x80) (x1177 x1511) (x950 x1511))))))
(assert (x682 x1026))
(assert (x682 x497))
(assert (x682 x947))
(assert (= (ite (and x1198 x689 x981 x673 (not x1036) x639) (x1076 x1511) (ite (and x689 x639 x1198 (not x981) x673) (x869 x1511) (ite (and x639 (not x689) x1198 x673) (x1097 x1511) (ite (and x673 x639 (not x1198)) (x218 x1511) (x978 x1511))))) (x65 x1511)))
(assert (x682 x100))
(assert (= (x970 x295) (ite (= x295 x1022) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x36 x295))))
(assert (x682 x829))
(assert (x682 x196))
(assert (= (x918 (x1321 x1053)) x1053))
(assert (x682 x939))
(assert (x682 x949))
(assert (x682 x565))
(assert (x682 x607))
(assert (x682 x1148))
(assert (= x57 (=> (and (= (< 0 x1245) x122) (= x1245 (x1207 (- x103 1)))) (and (=> (not x122) x544) (=> x122 x560)))))
(assert (= x750 (x918 (x1321 x750))))
(assert (x682 x599))
(assert (= (x774 x1012) (ite (= x1012 x11) x893 (x1019 x1012))))
(assert (= (x918 (x1321 x678)) x678))
(assert (=> (> (+ 10000 1) x1501) (= (x1321 x1501) (x450 x1501))))
(assert (= x377 (=> (= x1031 x215) x1224)))
(assert (x682 x1534))
(assert (= (x918 (x1321 x644)) x644))
(assert (= (x1097 x1272) (ite (= x427 x1272) x585 (x218 x1272))))
(assert (x682 x1286))
(assert (x1043 x212))
(assert (x682 x640))
(assert (= (ite (and (not x26) x639 x673) (x65 x546) (x979 x546)) (x365 x546)))
(assert (x682 x705))
(assert (x682 x516))
(assert (=> (< (- x611 1) 10000) (= (x1321 x611) (x450 x611))))
(assert (=> (< (- x917 1) 10000) (= (x1321 x917) (x450 x917))))
(assert (x682 x863))
(assert (x682 x1174))
(assert (x682 x1552))
(assert (= (x918 (x1321 x1422)) x1422))
(assert (x682 x755))
(assert (x1043 x105))
(assert (x682 x1065))
(assert (= x414 (x918 (x1321 x414))))
(assert (= (ite (= x11 x462) x893 (x1019 x462)) (x774 x462)))
(assert (x1043 x1282))
(assert (x682 x1411))
(assert (= (x918 (x450 826074471)) 826074471))
(assert (x682 x1150))
(assert (x1043 x1017))
(assert (= (ite (and (not x80) x1394 (not x176) x973) (x1442 x219) (ite (and (not x973) x1394 (not x80)) (x1177 x219) (ite (and x80 x1394) (x1177 x219) (x950 x219)))) (x1478 x219)))
(assert (x682 x1142))
(assert (= (x450 1986467848) (x1321 1986467848)))
(assert (=> (> (+ 10000 1) x460) (= (x1321 x460) (x450 x460))))
(assert (= (ite (and x799 x160) (x411 x692) (ite (and x452 x799 (not x160)) (x411 x692) (x95 x692))) (x927 x692)))
(assert (= (ite (and x985 x332) (x774 x617) (x839 x617)) (x406 x617)))
(assert (x1043 x1475))
(assert (=> (> (+ 10000 1) x568) (= (x1321 x568) (x450 x568))))
(assert (= (x918 (x1321 x156)) x156))
(assert (x682 x1042))
(assert (x1043 x933))
(assert (x1043 x1274))
(assert (= (ite (= x11 x1092) x893 (x1019 x1092)) (x774 x1092)))
(assert (= x1479 (=> (and (= x181 (x577 (x1321 x731) x1149 0)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1120) (= x264 (> x1026 0)) (= (x577 (x1321 x645) x943 0) x1149) (= (x577 (x1321 x103) (x450 7) 0) x943) (= (x329 x181) x1026) (<= x1026 115792089237316195423570985008687907853269984665640564039457584007913129639935) (not (> x949 x1120)) (= x731 (x649 1461501637330902918203684832716283019655932542975 x1238)) (>= x1120 0) (= (x649 1461501637330902918203684832716283019655932542975 x724) x645) (<= 0 x1026)) (and (=> (and (= x829 x797) x264 (>= x829 0) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x829) (= x727 (x649 1461501637330902918203684832716283019655932542975 x1238)) (= x1439 (x649 1461501637330902918203684832716283019655932542975 x724)) (= (x577 (x1321 x1439) x431 0) x408) (= x431 (x577 (x1321 x103) (x450 9) 0)) (= x593 0) (= (x577 (x1321 x727) x408 0) x357) (= x829 (x996 x357))) x321) (=> (not x264) x1246)))))
(assert (x682 x1373))
(assert (x682 x83))
(assert (x682 x953))
(assert (x682 x714))
(assert (=> (< (- x627 1) 10000) (= (x1321 x627) (x450 x627))))
(assert (= (x450 2798343961) (x1321 2798343961)))
(assert (x682 x1030))
(assert (x682 x842))
(assert (x682 x1374))
(assert (x682 x505))
(assert (x682 x32))
(assert (=> (< (- x58 1) 10000) (= (x1321 x58) (x450 x58))))
(assert (= (x406 x1511) (ite (and x332 x985) (x774 x1511) (x839 x1511))))
(assert (x1043 x1048))
(assert (= (x1177 x546) (ite (= x372 x546) x667 (x1355 x546))))
(assert (= (x918 (x1276 x236 1)) (+ 1 (x918 x236))))
(assert (= (=> (and (= (x577 (x1321 x354) x1091 0) x467) (= (x329 x1361) x1384) (<= 0 x1384) (= x1336 x1384) (>= 1461501637330902918203684832716283019655932542975 x730) (> 911411945 x899) (> 2293535753 x899) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1384) (not (= 635128645 x899)) (not (= x899 468353030)) (> x4 0) (= x1091 (x577 (x1321 x1485) (x450 7) 0)) (not (> 468353030 x899)) (= (x1498 (x1321 274184521717934524641157099916833587206)) x4) (= 759532456 x899) (>= 1461501637330902918203684832716283019655932542975 x354) (= (x577 (x1321 x730) x467 0) x1361)) (=> (and (= x848 x1428) (= x855 x73) (= x984 x1336) (= x242 x39)) x464)) x412))
(assert (= x52 (or x1432 x289)))
(assert (= (x404 x462) 0))
(assert (x682 x1245))
(assert (= (x1177 x1092) (ite (= x372 x1092) x667 (x1355 x1092))))
(assert (= (x450 37714057306076988483118529490347679105585116642029194716945419020321082336612) (x1321 37714057306076988483118529490347679105585116642029194716945419020321082336612)))
(assert (x682 x1551))
(assert (= (ite (= x794 x1335) x407 (x1177 x1335)) (x1442 x1335)))
(assert (x682 x960))
(assert (= (x1321 1000000000000000000) (x450 1000000000000000000)))
(assert (=> (> (+ 10000 1) x40) (= (x450 x40) (x1321 x40))))
(assert (x682 x1188))
(assert (x1043 x184))
(assert (x682 x495))
(assert (x1043 x1252))
(assert (x682 x904))
(assert (x1043 x230))
(assert (x682 x823))
(assert (= (ite (= x297 x878) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x776 x297)) (x218 x297)))
(assert (= x532 (x918 (x1321 x532))))
(assert (x1043 x537))
(assert (x682 x849))
(assert (=> (< (- x731 1) 10000) (= (x1321 x731) (x450 x731))))
(assert (= (ite (= x1092 x794) x407 (x1177 x1092)) (x1442 x1092)))
(assert (x1043 x178))
(assert (= (ite (and (not x176) (not x80) x973 x1394) (x1442 x546) (ite (and (not x80) (not x973) x1394) (x1177 x546) (ite (and x80 x1394) (x1177 x546) (x950 x546)))) (x1478 x546)))
(assert (= 0 (x404 192)))
(assert (= (=> (and (>= x262 0) (not (> 2293535753 x942)) (<= x262 115792089237316195423570985008687907853269984665640564039457584007913129639935) (> x565 0) (>= 1461501637330902918203684832716283019655932542975 x212) (= (x577 (x1321 x644) x326 0) x1331) (>= 1461501637330902918203684832716283019655932542975 x644) (= x326 (x577 (x1321 x1475) (x450 3) 0)) (< x942 2960351575) (= (x1448 x1542) x262) (= x1397 x262) (not (> 2690754053 x942)) (= x565 (x1498 (x1321 274184521717934524641157099916833587206))) (= x942 2743102681) (not (= 2690754053 x942)) (= (x577 (x1321 x212) x1331 0) x1542)) (=> (and (= x848 x1064) (= x39 x1137) (= x123 x414) (= x73 x1423) (= x494 x1397)) x547)) x1157))
(assert (x682 x753))
(assert (= (=> (and (= x1399 (x577 (x1321 x917) (x450 5) 0)) (not (< x224 2690754053)) (<= x621 1461501637330902918203684832716283019655932542975) (not (> 2293535753 x224)) (not (= 2690754053 x224)) (= x1362 (x1405 x553)) (= x553 (x577 (x1321 x621) x1399 0)) (= x1362 x30) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1362) (> 2960351575 x224) (not (= x224 2764855426)) (= x466 (x1498 (x1321 274184521717934524641157099916833587206))) (< 0 x466) (= 2798343961 x224) (not (= x224 2743102681)) (>= x1362 0)) (=> (and (= x30 x1506) (= x1029 x848) (= x933 x73)) x143)) x213))
(assert (= (x1321 2514000705) (x450 2514000705)))
(assert (x682 x396))
(assert (x1314 x48))
(assert (x1043 x1053))
(assert (x682 x44))
(assert (x1043 x730))
(assert (= (x1478 x297) (ite (and (not x80) x973 (not x176) x1394) (x1442 x297) (ite (and (not x80) x1394 (not x973)) (x1177 x297) (ite (and x1394 x80) (x1177 x297) (x950 x297))))))
(assert (x682 x532))
(assert (= x1274 (x918 (x1321 x1274))))
(assert (= (=> (and (= (x1207 (- x1099 1)) x975) (= x718 (< 0 x975))) (and (=> x718 x201) (=> (not x718) x733))) x518))
(assert (x682 x627))
(assert (= (x918 (x450 87118632)) 87118632))
(assert (x682 x678))
(assert (= (ite (= x462 x878) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x776 x462)) (x218 x462)))
(assert (=> (< (- x800 1) 10000) (= (x1321 x800) (x450 x800))))
(assert (x682 x659))
(assert (= (ite (= x341 x11) x893 (x1019 x341)) (x774 x341)))
(assert (x682 x1156))
(assert (= (x1097 x1511) (ite (= x427 x1511) x585 (x218 x1511))))
(assert (= 2835717307 (x918 (x450 2835717307))))
(assert (= (x406 x661) (ite (and x332 x985) (x774 x661) (x839 x661))))
(assert (= (ite (and x673 (not x1036) x1198 x689 x639 x981) (x1076 x341) (ite (and (not x981) x1198 x639 x689 x673) (x869 x341) (ite (and x639 (not x689) x673 x1198) (x1097 x341) (ite (and (not x1198) x673 x639) (x218 x341) (x978 x341))))) (x65 x341)))
(assert (= (x918 (x1321 x58)) x58))
(assert (= (x1478 x1378) (ite (and (not x176) x973 x1394 (not x80)) (x1442 x1378) (ite (and (not x973) (not x80) x1394) (x1177 x1378) (ite (and x1394 x80) (x1177 x1378) (x950 x1378))))))
(assert (x1043 x1099))
(assert (x682 x208))
(assert (x682 x99))
(assert (= (x918 (x1321 x40)) x40))
(assert (= (x774 x225) (ite (= x11 x225) x893 (x1019 x225))))
(assert (= (ite (and x160 x799) (x1210 x1487) (ite (and x452 x799 (not x160)) (x128 x1487) (x1289 x1487))) (x1390 x1487)))
(assert (= (x218 x1335) (ite (= x878 x1335) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x776 x1335))))
(assert (=> (< (- x609 1) 10000) (= (x1321 x609) (x450 x609))))
(assert (= (x450 468353030) (x1321 468353030)))
(assert (=> (< (- x1307 1) 10000) (= (x1321 x1307) (x450 x1307))))
(assert (= x1088 (x918 (x1321 x1088))))
(assert (x682 x16))
(assert (x682 x976))
(assert (x682 x853))
(assert (x682 x1378))
(assert (x682 x857))
(assert (= (ite (= x295 x545) x366 (x869 x295)) (x1076 x295)))
(assert (x682 x1505))
(assert (x1314 x1451))
(assert (x682 x1136))
(assert (x682 x650))
(assert (= (x450 274184521717934524641157099916833587206) (x1321 274184521717934524641157099916833587206)))
(assert (x1043 x1193))
(assert (= (ite (= x1272 x794) x407 (x1177 x1272)) (x1442 x1272)))
(assert (x682 x769))
(assert (x1043 x627))
(assert (= (x918 (x1321 x773)) x773))
(assert (x1043 x1439))
(assert (x682 x725))
(assert (x1043 x749))
(assert (= (=> (and (not (= 87118632 x624)) (= x1543 (x577 (x1321 x1048) x223 0)) (= x1041 (x900 x1543)) (= (x577 (x1321 x419) (x450 9) 0) x1382) (<= x1048 1461501637330902918203684832716283019655932542975) (> x319 0) (>= x1041 0) (= x624 142201243) (<= x1041 115792089237316195423570985008687907853269984665640564039457584007913129639935) (not (= 69947311 x624)) (< x624 468353030) (<= x1215 1461501637330902918203684832716283019655932542975) (> 911411945 x624) (= x1041 x931) (= (x1498 (x1321 274184521717934524641157099916833587206)) x319) (= x223 (x577 (x1321 x1215) x1382 0)) (> 2293535753 x624)) (=> (and (= x644 x73) (= x931 x1299) (= x212 x39) (= x848 x1475)) x1157)) x1348))
(assert (= (ite (and x1394 x973 (not x176) (not x80)) (x1388 x1430) (ite (and (not x80) (not x973) x1394) (x571 x1430) (ite (and x1394 x80) (x571 x1430) (x1110 x1430)))) (x1054 x1430)))
(assert (x682 x1158))
(assert (= x201 (=> (and (<= x966 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= 0 x966) (= x398 (x649 1461501637330902918203684832716283019655932542975 x724)) (= x311 (x577 (x1321 x1431) x465 0)) (= (x649 1461501637330902918203684832716283019655932542975 x1238) x1431) (= (x577 (x1321 x975) (x450 7) 0) x1123) (= (= 0 x966) x1280) (= x465 (x577 (x1321 x398) x1123 0)) (= x966 (x1390 x311))) (and (=> (and (= x975 x619) (not x1280)) x1465) (=> (and (not x1308) (= x271 (x1207 (- x975 1))) (= x1308 (< 0 x271)) x1280) x733)))))
(assert (x682 x552))
(assert (x682 x514))
(assert (x682 x743))
(assert (= (x535 x341) (ite (= x341 x1015) x1461 (x38 x341))))
(assert (x1043 x1550))
(assert (= (x1177 x617) (ite (= x372 x617) x667 (x1355 x617))))
(assert (= (x406 x1378) (ite (and x332 x985) (x774 x1378) (x839 x1378))))
(assert (x682 x111))
(assert (x682 x542))
(assert (x682 x525))
(assert (=> (< (- x280 1) 10000) (= (x1321 x280) (x450 x280))))
(assert (x682 x1506))
(assert (x1043 x414))
(assert (= (x404 x1015) 0))
(assert (x682 x1329))
(assert (= (or x391 x1438) x512))
(assert (x682 x1247))
(assert (=> (> (+ 10000 1) x178) (= (x450 x178) (x1321 x178))))
(assert (= (ite (and x639 x1198 x689 x981 x673 (not x1036)) (x1076 x1172) (ite (and x689 x1198 x673 (not x981) x639) (x869 x1172) (ite (and x673 x639 (not x689) x1198) (x1097 x1172) (ite (and x639 (not x1198) x673) (x218 x1172) (x978 x1172))))) (x65 x1172)))
(assert (x682 x1275))
(assert (x1043 x930))
(assert (= 1517119036 (x918 (x450 1517119036))))
(assert (= (ite (and x788 x1171) (x687 x661) (x1369 x661)) (x913 x661)))
(assert (x682 x400))
(assert (= x266 x423))
(assert (= (x535 x225) (ite (= x1015 x225) x1461 (x38 x225))))
(assert (x682 x441))
(assert (= x1201 x92))
(assert (x1043 x1518))
(assert (x682 x579))
(assert (= (and x1529 x744) x1047))
(assert (= 2690754053 (x918 (x450 2690754053))))
(assert (x682 x286))
(assert (x1043 x1457))
(assert (= (x918 (x450 274184521717934524641157099916833587206)) 274184521717934524641157099916833587206))
(assert (= (x918 (x1321 x814)) x814))
(assert (=> (< (- x1407 1) 10000) (= (x1321 x1407) (x450 x1407))))
(assert (x682 x1144))
(assert (x682 x851))
(assert (x682 x1213))
(assert (x682 x1165))
(assert (= (ite (= x1272 x112) x41 (x186 x1272)) (x38 x1272)))
(assert (= (x404 x1092) 0))
(assert (x682 x999))
(assert (not x841))
(assert (x1043 x1535))
(assert (= (x918 (x1321 x540)) x540))
(assert (x682 x702))
(assert (x682 x936))
(assert (= (x918 (x1321 x645)) x645))
(assert (= x1160 (x918 (x1321 x1160))))
(assert (= (+ 1 (x918 x699)) (x918 (x1276 x699 1))))
(assert (x1043 x1006))
(assert (= true x562))
(assert (= x1239 (x918 (x1321 x1239))))
(assert (= x1481 x68))
(assert (x682 x824))
(assert (x682 x882))
(assert (= (ite (= x878 x1172) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x776 x1172)) (x218 x1172)))
(assert (= (x1478 x225) (ite (and x1394 (not x80) x973 (not x176)) (x1442 x225) (ite (and (not x973) x1394 (not x80)) (x1177 x225) (ite (and x1394 x80) (x1177 x225) (x950 x225))))))
(assert (x682 x415))
(assert (x682 x33))
(assert (=> (< (- x1242 1) 10000) (= (x450 x1242) (x1321 x1242))))
(assert (= (x1380 x1430) (ite (= x1430 x909) x1070 (x1054 x1430))))
(assert (=> (> (+ 10000 1) x1274) (= (x1321 x1274) (x450 x1274))))
(assert (x682 x448))
(assert (= x1457 (x918 (x1321 x1457))))
(assert (= (ite (and (not x1036) x639 x673 x1198 x689 x981) (x1076 x295) (ite (and x673 x639 x689 (not x981) x1198) (x869 x295) (ite (and x639 x673 x1198 (not x689)) (x1097 x295) (ite (and x639 (not x1198) x673) (x218 x295) (x978 x295))))) (x65 x295)))
(assert (x682 x655))
(assert (x682 x243))
(assert (=> (> (+ 10000 1) x727) (= (x450 x727) (x1321 x727))))
(assert (x1043 x118))
(assert (x682 x835))
(assert (x682 x619))
(assert (= (x918 (x1321 x855)) x855))
(assert (= (x1076 x1511) (ite (= x1511 x545) x366 (x869 x1511))))
(assert (= x1431 (x918 (x1321 x1431))))
(assert (x682 x1490))
(assert (= (x1478 x661) (ite (and (not x176) x973 x1394 (not x80)) (x1442 x661) (ite (and x1394 (not x80) (not x973)) (x1177 x661) (ite (and x80 x1394) (x1177 x661) (x950 x661))))))
(assert (=> (> (+ 10000 1) x1245) (= (x450 x1245) (x1321 x1245))))
(assert (x682 x124))
(assert (x1043 x875))
(assert (= (x1177 x1335) (ite (= x1335 x372) x667 (x1355 x1335))))
(assert (x1043 x1146))
(assert (x1043 x29))
(assert (=> (> (+ 10000 1) x1088) (= (x450 x1088) (x1321 x1088))))
(assert (x1314 x63))
(assert (= x309 (and x759 x1315)))
(assert (= (x38 x617) (ite (= x617 x112) x41 (x186 x617))))
(assert (x682 x541))
(assert (= (ite (= x1172 x794) x407 (x1177 x1172)) (x1442 x1172)))
(assert (= (x913 x295) (ite (and x1171 x788) (x687 x295) (x1369 x295))))
(assert (x1043 x1245))
(assert (=> (< (- x533 1) 10000) (= (x1321 x533) (x450 x533))))
(assert (= x653 (x918 (x1321 x653))))
(assert (x682 x546))
(assert (x682 x459))
(assert (= (=> (and (= x748 (< 0 x592)) (= (x1207 (- x103 1)) x592)) (and (=> x748 x765) (=> (not x748) x570))) x1519))
(assert (= (x450 18446744073709551615) (x1321 18446744073709551615)))
(assert (= x318 (x918 (x1321 x318))))
(assert (= 0 (x404 x546)))
(assert (= x1213 (x918 (x1321 x1213))))
(assert (x682 x645))
(assert (= (ite (= x676 x297) x967 (x1097 x297)) (x869 x297)))
(assert (=> (< (- x621 1) 10000) (= (x450 x621) (x1321 x621))))
(assert (=> (< (- x933 1) 10000) (= (x450 x933) (x1321 x933))))
(assert (x1043 x992))
(assert (=> (> (+ 10000 1) x1367) (= (x450 x1367) (x1321 x1367))))
(assert (= (ite (and x639 (not x26) x673) (x65 x295) (x979 x295)) (x365 x295)))
(assert (x1043 x1144))
(assert (= (x470 x959) (ite (and x1394 x656) (x328 x959) (x207 x959))))
(assert (x682 x899))
(assert (= (=> (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x175) (= x175 (x1100 x93)) (not (= x1386 2690754053)) (= x61 (x577 (x1321 x514) (x450 5) 0)) (= x1293 x175) (not (= x1386 2764855426)) (< 0 x1105) (not (= 2743102681 x1386)) (>= 1461501637330902918203684832716283019655932542975 x184) (>= x175 0) (not (< x1386 2293535753)) (= (x577 (x1321 x184) x61 0) x93) (not (> 2690754053 x1386)) (= 2798343961 x1386) (< x1386 2960351575) (= (x1498 (x1321 274184521717934524641157099916833587206)) x1105)) (=> (and (= x1489 x1293) (= x863 x848) (= x1101 x73)) x383)) x986))
(assert (x682 x598))
(assert (x682 x319))
(assert (=> (< (- x1423 1) 10000) (= (x450 x1423) (x1321 x1423))))
(assert (= (x535 x1511) (ite (= x1015 x1511) x1461 (x38 x1511))))
(assert (x682 x118))
(assert (x682 x262))
(assert (x682 x1187))
(assert (= (ite (and x1171 x788) (x687 x297) (x1369 x297)) (x913 x297)))
(assert (x1043 x354))
(assert (= (x1321 115792089237316195423570985008687907853269984665640564039457584007913129639935) (x450 115792089237316195423570985008687907853269984665640564039457584007913129639935)))
(assert (= (x918 (x1321 x876)) x876))
(assert (x682 x611))
(assert (x682 x1486))
(assert (x1043 x948))
(assert (= (x218 x1272) (ite (= x878 x1272) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x776 x1272))))
(assert (x682 x1083))
(assert (x1043 x1379))
(assert (x682 x629))
(assert (x682 x1485))
(assert (= x515 (=> (= x673 (< 0 x893)) (and (=> (and (= (x649 26959946667150639794667015087019630673637144422540572481103610249215 x710) x124) (or (and (= x689 (> x960 32)) x1198 (or (and (not x689) (= x1296 32)) (and (= (x1503 (+ 96 x683)) x676) (= x981 (< 64 x960)) (= (x1097 x1092) x967) (or (and (= x1036 (> x960 96)) (or (and (= x1296 128) (= (x1503 (+ 160 x683)) x1244) (not x232) x1036 (= x334 (x1076 x462)) (= x462 (x1503 (+ 128 x823))) (= (< 128 x960) x232)) (and (not x1036) (= x1296 96))) (= (x1503 (+ x823 96)) x1378) x981 (= (x1503 (+ x683 128)) x545) (= x366 (x869 x1378))) (and (not x981) (= x1296 64))) (= x1092 (x1503 (+ x823 64))) x689)) (= x225 x851) (= x427 x146) (= x585 (x218 x225))) (and (not x1198) (= x1296 0))) (= x948 (x660 x1117)) (= x229 (x1503 (+ x124 76450787359836037641860180984291677749980919077056822294353438043884394381312))) (= (> x1296 x960) x26) (or (not x26) (and (= (x1503 (+ x960 x146)) x228) x26)) (= (x1503 (+ 68 x823)) x441) (= x612 0) x673 (= (x1207 (- x288 32)) x458) (> x1309 0) (= x286 (x649 1461501637330902918203684832716283019655932542975 x1238)) (<= x948 1461501637330902918203684832716283019655932542975) (= x1012 (x1503 (+ 160 x961))) x651 (> x893 0) (= (x1503 (+ x167 128)) x146) (= x1309 (x1046 x11)) (= x1200 (x1046 x1012)) (= (x24 x851) x710) (= x878 (x1503 (+ x167 96))) (= x1198 (> x960 0)) (= (x1498 (x1321 x948)) x1266) (= x851 (x1503 (+ 32 x823))) (= (< 0 x1266) x651) (= x960 (x218 x823)) (= (x1503 (+ 36 x823)) x167) (= x288 (x1207 (- x683 x823))) (= x683 (x1503 (+ x823 100))) (= x1117 x1310)) x527) (=> (not x673) x1532)))))
(assert (= (ite (= x1166 x295) x826 (x970 x295)) (x1539 x295)))
(assert (x682 x1167))
(assert (=> (< (- x897 1) 10000) (= (x1321 x897) (x450 x897))))
(assert (= (x1076 x1272) (ite (= x545 x1272) x366 (x869 x1272))))
(assert (= x760 (=> (and (or (not x151) (and (= x1469 x18) (= x397 (= 0 x18)) (= x1469 (ite x1429 1 0)) (= (x1503 (+ x1172 32)) x661) (< 0 x18) (= (x1413 x661) x18) (= (not x397) x1429) (= (x1413 x1172) x1318) x151 (not (or (> x1318 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (< x1318 32) (= (<= x1318 57896044618658097711785492504343953926634992332820282019728792003956564819967) true)))))) (= (x477 (x1321 x948)) x194) (or (and x1264 (= x1172 96) (= x1414 x146)) (and (= x925 x1414) (= (x1503 (+ x146 x454)) x925) (= x1013 (x1503 (+ x683 96))) (= (x649 115792089237316195423570985008687907853269984665640564039457584007913129639904 x457) x454) (not x1264) (= x146 x1172) (= (x1503 (+ 63 x352)) x457))) x401 (= x151 (< 0 x1416)) (not (= 0 x1445)) (= (< (x327 (x1321 274184521717934524641157099916833587206)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x401) (= (x327 (x1321 274184521717934524641157099916833587206)) x1548) (= x1264 (= 0 x352)) (= (x1413 x1172) x1416)) x1034)))
(assert (= (ite (= x225 x878) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x776 x225)) (x218 x225)))
(assert (= (ite (= x1015 x462) x1461 (x38 x462)) (x535 x462)))
(assert (= (ite (= x112 x851) x41 (x186 x851)) (x38 x851)))
(assert (= x1540 (x918 (x1321 x1540))))
(assert (= (x918 (x450 274184521717934524641157099916833587214)) 274184521717934524641157099916833587214))
(assert (= x564 x1496))
(assert (x1043 x1256))
(assert (= (ite (= x11 x794) x407 (x1177 x11)) (x1442 x11)))
(assert (= (x1177 x372) x667))
(assert (x682 x414))
(assert (= (x1097 x297) (ite (= x427 x297) x585 (x218 x297))))
(assert (x682 x910))
(assert (x682 x1124))
(assert (x682 x229))
(assert (x682 x1466))
(assert (= (x918 (x1321 x948)) x948))
(assert (x682 x318))
(assert (=> (< (- x514 1) 10000) (= (x1321 x514) (x450 x514))))
(assert (= (x406 x225) (ite (and x332 x985) (x774 x225) (x839 x225))))
(assert (x1043 x242))
(assert (x682 x1141))
(assert (x682 x807))
(assert (x898 x542 x1541))
(assert (x1043 x1025))
(assert (x682 x1475))
(assert (= x437 (x918 (x1321 x437))))
(assert (= (ite (= x11 x295) x893 (x1019 x295)) (x774 x295)))
(assert (x682 x1138))
(assert (x682 x893))
(assert (x1314 26959946667150639794667015087019630673637144422540572481103610249215))
(assert (x682 x528))
(assert (x682 x1078))
(assert (= 0 (x404 x661)))
(assert (x682 x394))
(assert (x1043 x589))
(assert (x682 x948))
(assert (= (x918 (x1321 x1428)) x1428))
(assert (x682 x975))
(assert (x1043 x800))
(assert (x682 x422))
(assert (=> (< (- x516 1) 10000) (= (x1321 x516) (x450 x516))))
(assert (x682 x1006))
(assert (x682 x361))
(check-sat)
