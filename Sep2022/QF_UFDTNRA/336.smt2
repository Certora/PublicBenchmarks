(set-option :print-success false)
(set-option :produce-models true)
(set-logic QF_UFDTNRA)
(declare-fun uninterp_frac (Real Real) Real)
(define-fun axiom_frac_bound ((d1 Real) (d2 Real)) Bool (and (=> (> d2 0) (and (<= 0.0 (uninterp_frac d1 d2)) (< (uninterp_frac d1 d2) 1.0))) (=> (< d2 0) (and (>= 0.0 (uninterp_frac d1 d2)) (> (uninterp_frac d1 d2) (- 1.0))))))
(define-fun axiom_frac_zero ((d1 Real) (d2 Real) (m1 Real) (m2 Real) (e Real)) Bool (=> (and (= d1 (* m1 m2)) (or (= d2 m1) (= d2 m2))) (= e 0)))
(define-fun uninterp_mod ((x Real) (m Real)) Real (ite (and (>= x 0) (< x m)) x (ite (and (>= x m) (< x (+ m m))) (- x m) (ite (and (>= x (- m)) (< x 0)) (+ x m) (* m (uninterp_frac x m))))))
(define-fun axiom_int_approximation ((x Real)) Bool (or (= x 0) (>= x 1) (<= x (- 1))))
(declare-datatypes ((x1026 0)) (((x462 (x1473 x1026) (x1456 x1026) (x867 Real)) (x413 (x511 x1026) (x1310 Real)) (x625 (x367 Real)))))
(declare-fun x377 () x1026)
(declare-fun x1097 () x1026)
(declare-fun x14 () Real)
(declare-fun x69 () Bool)
(declare-fun x1046 () Bool)
(declare-fun x1285 () Real)
(declare-fun x1134 () Real)
(declare-fun x565 () Bool)
(declare-fun x858 () Real)
(declare-fun x1476 () Real)
(declare-fun x292 () x1026)
(declare-fun x958 () Real)
(declare-fun x599 () Bool)
(declare-fun x861 () Bool)
(declare-fun x990 () Bool)
(declare-fun x74 () Bool)
(declare-fun x415 () Bool)
(declare-fun x743 () Real)
(declare-fun x1325 () Bool)
(declare-fun x986 () Bool)
(declare-fun x637 () Real)
(declare-fun x1145 () x1026)
(declare-fun x166 () Real)
(declare-fun x1357 () Bool)
(declare-fun x1574 () Bool)
(declare-fun x634 () x1026)
(declare-fun x491 () Bool)
(declare-fun x271 () Bool)
(declare-fun x421 () x1026)
(declare-fun x1017 () Bool)
(declare-fun x1483 () Bool)
(declare-fun x151 () Real)
(declare-fun x35 () Real)
(declare-fun x588 () Real)
(declare-fun x342 () x1026)
(declare-fun x1023 () x1026)
(declare-fun x224 (x1026) Real)
(declare-fun x1114 () Real)
(declare-fun x1396 () Real)
(declare-fun x888 () Bool)
(declare-fun x513 () Real)
(declare-fun x701 () Bool)
(declare-fun x132 () Real)
(declare-fun x237 () Real)
(declare-fun x1484 () Bool)
(declare-fun x1514 () x1026)
(declare-fun x555 (x1026) Real)
(declare-fun x1256 () Real)
(declare-fun x1116 () Real)
(declare-fun x1423 () Real)
(declare-fun x1308 () Real)
(declare-fun x208 () Real)
(declare-fun x997 () Real)
(declare-fun x401 (Real) Real)
(declare-fun x1196 () Real)
(declare-fun x774 () Bool)
(declare-fun x764 () Real)
(declare-fun x890 () Real)
(declare-fun x297 () x1026)
(declare-fun x119 () x1026)
(declare-fun x202 () x1026)
(declare-fun x40 () Bool)
(declare-fun x1135 (Real Real) Real)
(declare-fun x143 () Real)
(declare-fun x508 () Bool)
(declare-fun x666 () Bool)
(declare-fun x1449 () Real)
(declare-fun x350 () x1026)
(declare-fun x256 (Real) Real)
(declare-fun x686 () Real)
(declare-fun x1198 () Real)
(declare-fun x494 () x1026)
(declare-fun x1371 () x1026)
(declare-fun x1276 () Real)
(declare-fun x324 () Real)
(declare-fun x1572 () Real)
(declare-fun x1132 () Real)
(declare-fun x1327 () Real)
(declare-fun x1314 () Bool)
(declare-fun x747 () Real)
(declare-fun x1579 () x1026)
(declare-fun x183 () Real)
(declare-fun x885 () Real)
(declare-fun x793 () Real)
(declare-fun x16 () Bool)
(declare-fun x92 () Bool)
(declare-fun x806 () Real)
(declare-fun x1217 () Bool)
(declare-fun x348 () x1026)
(declare-fun x1289 () Real)
(declare-fun x807 () x1026)
(declare-fun x947 () Bool)
(declare-fun x1307 () Real)
(declare-fun x153 () Bool)
(declare-fun x335 () Bool)
(declare-fun x1336 () Real)
(declare-fun x941 () Real)
(declare-fun x1553 () x1026)
(declare-fun x205 () Real)
(declare-fun x485 () Real)
(declare-fun x668 () Bool)
(declare-fun x839 () Real)
(declare-fun x201 () Bool)
(declare-fun x1052 () Bool)
(declare-fun x926 () Real)
(declare-fun x81 () x1026)
(declare-fun x522 () x1026)
(declare-fun x848 () Real)
(declare-fun x1178 () Real)
(declare-fun x1128 () Real)
(declare-fun x985 () Real)
(declare-fun x1173 () x1026)
(declare-fun x1194 () Bool)
(declare-fun x1189 () Bool)
(declare-fun x736 () Real)
(declare-fun x1539 () Bool)
(declare-fun x139 () Real)
(declare-fun x750 () Real)
(declare-fun x155 () Bool)
(declare-fun x95 () x1026)
(declare-fun x700 () x1026)
(declare-fun x185 () Real)
(declare-fun x1064 () Real)
(declare-fun x1354 () Real)
(declare-fun x1365 () x1026)
(declare-fun x690 () x1026)
(declare-fun x305 () x1026)
(declare-fun x972 () x1026)
(declare-fun x1291 () Real)
(declare-fun x376 () Real)
(declare-fun x1585 () Real)
(declare-fun x1414 () Real)
(declare-fun x464 () x1026)
(declare-fun x29 () Real)
(declare-fun x1021 () Bool)
(declare-fun x141 () Real)
(declare-fun x178 () Real)
(declare-fun x1012 () x1026)
(declare-fun x784 () Real)
(declare-fun x358 () Bool)
(declare-fun x1226 () Bool)
(declare-fun x43 () x1026)
(declare-fun x865 () Real)
(declare-fun x759 () x1026)
(declare-fun x1203 () Bool)
(declare-fun x1081 () Real)
(declare-fun x760 () Real)
(declare-fun x88 () Bool)
(declare-fun x1361 () Bool)
(declare-fun x1304 () Real)
(declare-fun x351 () Real)
(declare-fun x545 () Bool)
(declare-fun x893 () x1026)
(declare-fun x1363 () x1026)
(declare-fun x77 () x1026)
(declare-fun x1512 () Real)
(declare-fun x1177 () x1026)
(declare-fun x1220 (x1026) Real)
(declare-fun x345 () Bool)
(declare-fun x472 () Bool)
(declare-fun x778 () Real)
(declare-fun x1296 () Real)
(declare-fun x412 () Bool)
(declare-fun x849 () Real)
(declare-fun x915 () Real)
(declare-fun x851 () Real)
(declare-fun x1532 () Real)
(declare-fun x737 () Real)
(declare-fun x678 () x1026)
(declare-fun x547 () Bool)
(declare-fun x114 () Bool)
(declare-fun x219 () Bool)
(declare-fun x1589 () Bool)
(declare-fun x714 () Real)
(declare-fun x1167 () Real)
(declare-fun x295 () Real)
(declare-fun x1115 () Bool)
(declare-fun x560 () Bool)
(declare-fun x1356 () Real)
(declare-fun x1497 () Bool)
(declare-fun x435 () Real)
(declare-fun x459 () Real)
(declare-fun x1201 () Bool)
(declare-fun x50 () Real)
(declare-fun x1225 () Bool)
(declare-fun x514 () Bool)
(declare-fun x1050 () Real)
(declare-fun x605 () x1026)
(declare-fun x25 () Real)
(declare-fun x1288 () Real)
(declare-fun x197 () x1026)
(declare-fun x156 () Real)
(declare-fun x135 () Real)
(declare-fun x532 () Real)
(declare-fun x1528 () Real)
(declare-fun x843 () Real)
(declare-fun x142 () x1026)
(declare-fun x739 () Real)
(declare-fun x390 () Real)
(declare-fun x846 () Real)
(declare-fun x154 () Real)
(declare-fun x62 () Real)
(declare-fun x519 () Real)
(declare-fun x1227 () Real)
(declare-fun x1345 () x1026)
(declare-fun x455 () Real)
(declare-fun x264 () Bool)
(declare-fun x159 () Bool)
(declare-fun x1377 () Bool)
(declare-fun x1027 () Bool)
(declare-fun x783 () Real)
(declare-fun x294 () Bool)
(declare-fun x544 () Bool)
(declare-fun x551 () Bool)
(declare-fun x420 () Bool)
(declare-fun x515 () Real)
(declare-fun x540 () x1026)
(declare-fun x820 () Bool)
(declare-fun x96 () Bool)
(declare-fun x1215 () Bool)
(declare-fun x676 () Bool)
(declare-fun x1502 () Bool)
(declare-fun x1213 () Real)
(declare-fun x424 () Real)
(declare-fun x593 () Real)
(declare-fun x1416 () x1026)
(declare-fun x914 () Real)
(declare-fun x777 () Real)
(declare-fun x731 () Bool)
(declare-fun x252 () Real)
(declare-fun x1259 () Real)
(declare-fun x905 () Real)
(declare-fun x187 () Real)
(declare-fun x1183 () Real)
(declare-fun x24 () Real)
(declare-fun x302 () Bool)
(declare-fun x1402 () Bool)
(declare-fun x426 () Real)
(declare-fun x996 () Bool)
(declare-fun x552 () Real)
(declare-fun x706 () Bool)
(declare-fun x422 () Real)
(declare-fun x321 () x1026)
(declare-fun x487 () Real)
(declare-fun x556 () Real)
(declare-fun x194 () Real)
(declare-fun x1334 () Real)
(declare-fun x1575 () Real)
(declare-fun x571 () Bool)
(declare-fun x623 () Real)
(declare-fun x1101 () Real)
(declare-fun x1060 () Real)
(declare-fun x642 () Real)
(declare-fun x375 () Real)
(declare-fun x561 () x1026)
(declare-fun x148 () Bool)
(declare-fun x1511 () Bool)
(declare-fun x1612 () Real)
(declare-fun x1099 () Bool)
(declare-fun x769 () Bool)
(declare-fun x699 () Bool)
(declare-fun x315 () Bool)
(declare-fun x578 () Real)
(declare-fun x284 () Real)
(declare-fun x1428 () Real)
(declare-fun x957 () Real)
(declare-fun x344 () Real)
(declare-fun x406 () Real)
(declare-fun x964 () Real)
(declare-fun x805 () Real)
(declare-fun x1185 () Real)
(declare-fun x325 () Bool)
(declare-fun x314 () Real)
(declare-fun x643 () Real)
(declare-fun x935 () Real)
(declare-fun x73 () Real)
(declare-fun x1151 () x1026)
(declare-fun x1407 () Bool)
(declare-fun x37 () Real)
(declare-fun x207 () Bool)
(declare-fun x780 () Bool)
(declare-fun x952 () Bool)
(declare-fun x1437 () Real)
(declare-fun x475 (Real) Real)
(declare-fun x1155 () Bool)
(declare-fun x471 (x1026) Real)
(declare-fun x337 () Real)
(declare-fun x1600 () Real)
(declare-fun x1250 () Real)
(declare-fun x1397 () Bool)
(declare-fun x680 () Real)
(declare-fun x1157 () Bool)
(declare-fun x500 () Real)
(declare-fun x1342 () Bool)
(declare-fun x579 () x1026)
(declare-fun x382 () Real)
(declare-fun x300 () Real)
(declare-fun x766 () Real)
(declare-fun x1057 () Bool)
(declare-fun x60 () Real)
(declare-fun x371 () Bool)
(declare-fun x613 () Bool)
(declare-fun x902 (Real) Real)
(declare-fun x59 () Real)
(declare-fun x317 () Bool)
(declare-fun x1047 () Bool)
(declare-fun x1290 () Bool)
(declare-fun x213 () Real)
(declare-fun x1072 () Real)
(declare-fun x457 () Real)
(declare-fun x618 () Real)
(declare-fun x639 () Bool)
(declare-fun x1435 () Bool)
(declare-fun x897 () Real)
(declare-fun x1268 () Real)
(declare-fun x845 () Real)
(declare-fun x1452 () Real)
(declare-fun x894 () Real)
(declare-fun x1387 () Bool)
(declare-fun x808 () Bool)
(declare-fun x629 () x1026)
(declare-fun x852 () Real)
(declare-fun x196 () Real)
(declare-fun x176 () Real)
(declare-fun x1294 () Real)
(declare-fun x776 () Bool)
(declare-fun x428 () Bool)
(declare-fun x1142 () Real)
(declare-fun x523 () Real)
(declare-fun x8 () Bool)
(declare-fun x669 () Real)
(declare-fun x71 () x1026)
(declare-fun x19 () Bool)
(declare-fun x1249 () Bool)
(declare-fun x863 () x1026)
(declare-fun x1562 () Real)
(declare-fun x484 () Real)
(declare-fun x44 () Bool)
(declare-fun x1329 () Bool)
(declare-fun x1303 () Real)
(declare-fun x1080 () x1026)
(declare-fun x817 () Bool)
(declare-fun x815 () Real)
(declare-fun x52 () Real)
(declare-fun x1231 () Bool)
(declare-fun x627 () x1026)
(declare-fun x1093 () Bool)
(declare-fun x1526 () x1026)
(declare-fun x652 () Bool)
(declare-fun x928 () Real)
(declare-fun x674 () x1026)
(declare-fun x810 () x1026)
(declare-fun x269 () Real)
(declare-fun x55 () x1026)
(declare-fun x276 () x1026)
(declare-fun x767 () Bool)
(declare-fun x550 () Real)
(declare-fun x56 () Bool)
(declare-fun x1204 () Real)
(declare-fun x763 () x1026)
(declare-fun x1381 () Real)
(declare-fun x277 () Real)
(declare-fun x1283 () Real)
(declare-fun x1245 () Real)
(declare-fun x1571 () Bool)
(declare-fun x771 () Bool)
(declare-fun x1561 () Real)
(declare-fun x1493 () Real)
(declare-fun x253 () Bool)
(declare-fun x621 () Real)
(declare-fun x649 () Bool)
(declare-fun x434 () Bool)
(declare-fun x48 () Real)
(declare-fun x1044 () x1026)
(declare-fun x825 () Real)
(declare-fun x582 () Bool)
(declare-fun x1324 () x1026)
(declare-fun x1475 () Bool)
(declare-fun x1244 () Bool)
(declare-fun x1110 (Real) Real)
(declare-fun x603 () Bool)
(declare-fun x968 () Bool)
(declare-fun x796 () Bool)
(declare-fun x486 (x1026) Real)
(declare-fun x1000 () Real)
(declare-fun x799 () Real)
(declare-fun x1208 () Real)
(declare-fun x1122 () Real)
(declare-fun x1087 () Bool)
(declare-fun x904 () Real)
(declare-fun x247 () Real)
(declare-fun x1339 (Real) x1026)
(declare-fun x594 () Bool)
(declare-fun x129 () Real)
(declare-fun x923 () x1026)
(declare-fun x386 () Real)
(declare-fun x1429 () x1026)
(declare-fun x66 () Bool)
(declare-fun x67 () Real)
(declare-fun x1229 () Real)
(declare-fun x1266 (Real) Real)
(declare-fun x1300 () Real)
(declare-fun x493 () Real)
(declare-fun x728 () Real)
(declare-fun x1301 () Real)
(declare-fun x285 () Real)
(declare-fun x2 () Bool)
(declare-fun x1051 () x1026)
(declare-fun x600 () Real)
(declare-fun x1002 () Bool)
(declare-fun x1139 () Real)
(declare-fun x602 () Bool)
(declare-fun x1082 () x1026)
(declare-fun x1599 () Real)
(declare-fun x290 () x1026)
(declare-fun x354 () Real)
(declare-fun x1255 () Bool)
(declare-fun x1597 () Bool)
(declare-fun x1118 () x1026)
(declare-fun x1583 () Bool)
(declare-fun x1482 () Bool)
(declare-fun x682 () Bool)
(declare-fun x1432 () x1026)
(declare-fun x275 () Real)
(declare-fun x546 () Bool)
(declare-fun x214 () Bool)
(declare-fun x1098 (Real) Real)
(declare-fun x1547 () Bool)
(declare-fun x992 () Bool)
(declare-fun x439 () Bool)
(declare-fun x775 () Real)
(declare-fun x374 () Real)
(declare-fun x430 () Real)
(declare-fun x307 () Bool)
(declare-fun x1086 () Real)
(declare-fun x1360 () x1026)
(declare-fun x1092 () Real)
(declare-fun x1352 () x1026)
(declare-fun x1028 () Real)
(declare-fun x1395 () x1026)
(declare-fun x1175 () x1026)
(declare-fun x1344 () Bool)
(declare-fun x241 () Real)
(declare-fun x1162 () x1026)
(declare-fun x754 () Bool)
(declare-fun x727 () Real)
(declare-fun x174 () Real)
(declare-fun x460 () Real)
(declare-fun x1170 () Real)
(declare-fun x1207 () Bool)
(declare-fun x1506 () Bool)
(declare-fun x278 () Bool)
(declare-fun x291 () Bool)
(declare-fun x583 () Bool)
(declare-fun x1510 () Real)
(declare-fun x1008 () Real)
(declare-fun x1237 () Bool)
(declare-fun x1239 () Real)
(declare-fun x171 () Real)
(declare-fun x34 () Bool)
(declare-fun x502 () Real)
(declare-fun x1180 () Real)
(declare-fun x1062 () x1026)
(declare-fun x1564 () Real)
(declare-fun x1541 () x1026)
(declare-fun x753 () x1026)
(declare-fun x1496 () x1026)
(declare-fun x1500 () Real)
(declare-fun x427 () Real)
(declare-fun x501 () Bool)
(declare-fun x862 () Real)
(declare-fun x1020 () Real)
(declare-fun x1560 () Bool)
(declare-fun x586 () Real)
(declare-fun x1464 () x1026)
(declare-fun x78 () Real)
(declare-fun x993 () Bool)
(declare-fun x733 () Real)
(declare-fun x1094 () Real)
(declare-fun x683 () Real)
(declare-fun x1230 () Bool)
(declare-fun x800 () Real)
(declare-fun x130 () Real)
(declare-fun x1594 () Real)
(declare-fun x948 () Real)
(declare-fun x391 () Real)
(declare-fun x834 () Bool)
(declare-fun x969 () Real)
(declare-fun x87 () Bool)
(declare-fun x1331 () Bool)
(declare-fun x433 () Real)
(declare-fun x762 () Bool)
(declare-fun x1200 () Real)
(declare-fun x1505 () Real)
(declare-fun x1479 (Real) Real)
(declare-fun x410 () Bool)
(declare-fun x970 () Real)
(declare-fun x399 () Real)
(declare-fun x1273 () Bool)
(declare-fun x1018 () Bool)
(declare-fun x726 () Bool)
(declare-fun x1065 () x1026)
(declare-fun x1179 () Real)
(declare-fun x869 () Real)
(declare-fun x28 () Real)
(declare-fun x218 () Real)
(declare-fun x236 () Bool)
(declare-fun x480 () Real)
(declare-fun x289 () Real)
(declare-fun x1280 () x1026)
(declare-fun x882 () Real)
(declare-fun x463 () Bool)
(declare-fun x1197 () x1026)
(declare-fun x1067 () Bool)
(declare-fun x1295 () Real)
(declare-fun x1469 () Bool)
(declare-fun x1010 () Bool)
(declare-fun x332 () Real)
(declare-fun x719 () Bool)
(declare-fun x1174 () Real)
(declare-fun x884 () Real)
(declare-fun x147 () Real)
(declare-fun x563 (Real) Real)
(declare-fun x1559 () Real)
(declare-fun x1601 () Real)
(declare-fun x242 () Real)
(declare-fun x91 () Real)
(declare-fun x1112 () Real)
(declare-fun x596 () Real)
(declare-fun x1013 () Real)
(declare-fun x18 () Real)
(declare-fun x1534 () Real)
(declare-fun x441 () Real)
(declare-fun x54 () x1026)
(declare-fun x1322 () Real)
(declare-fun x1019 () Real)
(declare-fun x938 () Bool)
(declare-fun x225 () Real)
(declare-fun x1053 () Bool)
(declare-fun x878 () Real)
(declare-fun x670 (Real) Real)
(declare-fun x1373 () Real)
(declare-fun x681 () Bool)
(declare-fun x333 () Real)
(declare-fun x1140 () Real)
(declare-fun x797 () Real)
(declare-fun x217 () Bool)
(declare-fun x323 () Real)
(declare-fun x1610 () x1026)
(declare-fun x1570 () x1026)
(declare-fun x872 () x1026)
(declare-fun x530 () Real)
(declare-fun x542 () Bool)
(declare-fun x118 () Real)
(declare-fun x1152 () Real)
(declare-fun x516 () Real)
(declare-fun x499 () x1026)
(declare-fun x517 () Real)
(declare-fun x102 () Bool)
(declare-fun x1184 () Real)
(declare-fun x866 () Real)
(declare-fun x10 () Real)
(declare-fun x1462 () Real)
(declare-fun x440 () Bool)
(declare-fun x1306 () Bool)
(declare-fun x164 () Real)
(declare-fun x20 () Bool)
(declare-fun x557 () Bool)
(declare-fun x567 () Bool)
(declare-fun x1058 () Real)
(declare-fun x26 () Bool)
(declare-fun x654 () Bool)
(declare-fun x604 () Real)
(declare-fun x380 () Real)
(declare-fun x1461 () Real)
(declare-fun x887 () Bool)
(declare-fun x495 () x1026)
(declare-fun x570 () Bool)
(declare-fun x918 () Real)
(declare-fun x1425 () x1026)
(declare-fun x1495 () Real)
(declare-fun x1328 () x1026)
(declare-fun x1330 () Real)
(declare-fun x901 () x1026)
(declare-fun x343 () Real)
(declare-fun x1090 () Bool)
(declare-fun x1165 () Bool)
(declare-fun x414 (Real) Real)
(declare-fun x860 () Real)
(declare-fun x698 () Bool)
(declare-fun x1422 () x1026)
(declare-fun x1434 () x1026)
(declare-fun x1131 () Bool)
(declare-fun x661 () Real)
(declare-fun x1504 () x1026)
(declare-fun x103 () Real)
(declare-fun x1279 () Real)
(declare-fun x1 () x1026)
(declare-fun x688 () Real)
(declare-fun x405 () Bool)
(declare-fun x789 () Real)
(declare-fun x1254 () Real)
(declare-fun x1582 () x1026)
(declare-fun x1605 () x1026)
(declare-fun x355 () Bool)
(declare-fun x365 () x1026)
(declare-fun x853 () Real)
(declare-fun x1480 () x1026)
(declare-fun x362 () Bool)
(declare-fun x46 () Real)
(declare-fun x1341 () Bool)
(declare-fun x458 () Bool)
(declare-fun x1556 () Real)
(declare-fun x270 () Bool)
(declare-fun x1041 () Real)
(declare-fun x76 () x1026)
(declare-fun x1523 (Real) Real)
(declare-fun x994 () Real)
(declare-fun x1385 () Real)
(declare-fun x287 () Bool)
(declare-fun x1558 () Real)
(declare-fun x617 () Real)
(declare-fun x265 () Bool)
(declare-fun x883 () Bool)
(declare-fun x638 () Bool)
(declare-fun x82 () x1026)
(declare-fun x693 () Bool)
(declare-fun x1003 () x1026)
(declare-fun x541 () Real)
(declare-fun x191 () Bool)
(declare-fun x1379 () Real)
(declare-fun x548 () Real)
(declare-fun x630 () Bool)
(declare-fun x876 () Bool)
(declare-fun x922 (x1026) Real)
(declare-fun x899 () Real)
(declare-fun x444 () x1026)
(declare-fun x944 () Bool)
(declare-fun x1427 () Real)
(declare-fun x1535 () Real)
(declare-fun x1557 (x1026) Real)
(declare-fun x393 () Real)
(declare-fun x1238 () x1026)
(declare-fun x258 () x1026)
(declare-fun x1520 () Real)
(declare-fun x1269 () Bool)
(declare-fun x1316 () Real)
(declare-fun x6 () Bool)
(declare-fun x1415 () Bool)
(declare-fun x446 () x1026)
(declare-fun x1084 (Real) Real)
(declare-fun x1158 () Real)
(declare-fun x1358 () Real)
(declare-fun x1611 () Real)
(declare-fun x173 () Real)
(declare-fun x1359 () Real)
(declare-fun x1251 () Bool)
(declare-fun x235 () Bool)
(declare-fun x137 () Bool)
(declare-fun x1443 () Real)
(declare-fun x877 () Bool)
(declare-fun x945 () Real)
(declare-fun x591 () Bool)
(declare-fun x856 () Real)
(declare-fun x1149 () Real)
(declare-fun x316 () Real)
(declare-fun x1530 () x1026)
(declare-fun x871 () Real)
(declare-fun x732 () Real)
(declare-fun x1404 () Bool)
(declare-fun x1548 () Real)
(declare-fun x1063 () Bool)
(declare-fun x1049 () Bool)
(declare-fun x667 () Real)
(declare-fun x251 () Real)
(declare-fun x734 () Real)
(declare-fun x1338 () Bool)
(declare-fun x407 () Bool)
(declare-fun x301 () Bool)
(declare-fun x244 (x1026) Real)
(declare-fun x816 () x1026)
(declare-fun x320 () x1026)
(declare-fun x559 () Bool)
(declare-fun x973 () Bool)
(declare-fun x163 () Real)
(declare-fun x186 () Bool)
(declare-fun x659 () Real)
(declare-fun x1608 () Bool)
(declare-fun x959 () Real)
(declare-fun x1284 () Bool)
(declare-fun x568 () Bool)
(declare-fun x761 () Real)
(declare-fun x1016 () Real)
(declare-fun x145 () Real)
(declare-fun x529 () Real)
(declare-fun x919 () Bool)
(declare-fun x1332 () Bool)
(declare-fun x1095 () Real)
(declare-fun x1573 () Real)
(declare-fun x1346 (x1026) Real)
(declare-fun x635 () Real)
(declare-fun x356 () Real)
(declare-fun x266 () Bool)
(declare-fun x1096 () Real)
(declare-fun x121 () Real)
(declare-fun x976 () x1026)
(declare-fun x239 () x1026)
(declare-fun x751 () Real)
(declare-fun x953 () Real)
(declare-fun x308 () Real)
(declare-fun x1492 () Bool)
(declare-fun x1232 () x1026)
(declare-fun x1468 () Bool)
(declare-fun x656 () Real)
(declare-fun x123 () Bool)
(declare-fun x108 () Real)
(declare-fun x790 () Real)
(declare-fun x963 () Bool)
(declare-fun x1466 () Real)
(declare-fun x51 () Real)
(declare-fun x1176 () Real)
(declare-fun x672 () Real)
(declare-fun x313 () Real)
(declare-fun x1138 () Bool)
(declare-fun x930 () Bool)
(declare-fun x162 () x1026)
(declare-fun x675 () Real)
(declare-fun x1440 () Real)
(declare-fun x228 () Bool)
(declare-fun x1265 () x1026)
(declare-fun x157 () Bool)
(declare-fun x394 () x1026)
(declare-fun x1009 () Real)
(declare-fun x1202 () Real)
(declare-fun x1033 () Bool)
(declare-fun x1187 () Real)
(declare-fun x1409 () Real)
(declare-fun x984 () Real)
(declare-fun x1411 () Real)
(declare-fun x1430 () Real)
(declare-fun x824 () Real)
(declare-fun x1275 () Real)
(declare-fun x97 () Real)
(declare-fun x1287 () Bool)
(declare-fun x991 () Bool)
(declare-fun x622 () Real)
(declare-fun x281 () Real)
(declare-fun x366 (x1026) Real)
(declare-fun x647 () Real)
(declare-fun x1068 () x1026)
(declare-fun x589 () Real)
(declare-fun x658 () x1026)
(declare-fun x267 () Real)
(declare-fun x722 () Bool)
(declare-fun x836 () Real)
(declare-fun x1519 () Bool)
(declare-fun x1596 () x1026)
(declare-fun x99 () Real)
(declare-fun x204 () Real)
(declare-fun x1593 () x1026)
(declare-fun x452 () Bool)
(declare-fun x1613 () Real)
(declare-fun x909 () Real)
(declare-fun x854 () Bool)
(declare-fun x911 () Real)
(declare-fun x1015 () Real)
(declare-fun x364 (Real) Real)
(declare-fun x812 () Real)
(declare-fun x1011 () Bool)
(declare-fun x1076 () Real)
(declare-fun x1233 () Real)
(declare-fun x1258 () Real)
(declare-fun x1257 () Bool)
(declare-fun x1160 () x1026)
(declare-fun x1455 () Real)
(declare-fun x1350 () Bool)
(declare-fun x1522 () Real)
(declare-fun x1418 (Real) Real)
(declare-fun x711 () Real)
(declare-fun x512 () Real)
(declare-fun x841 () Bool)
(declare-fun x45 () x1026)
(declare-fun x385 () Real)
(declare-fun x903 () Real)
(declare-fun x1460 () Real)
(declare-fun x742 () Real)
(declare-fun x795 () Bool)
(declare-fun x650 () Real)
(declare-fun x1563 () Bool)
(declare-fun x533 () Real)
(declare-fun x665 () x1026)
(declare-fun x1312 () Real)
(declare-fun x626 () Bool)
(declare-fun x595 () Bool)
(declare-fun x1436 () x1026)
(declare-fun x298 () Real)
(declare-fun x697 () Real)
(declare-fun x94 () Bool)
(declare-fun x15 () Real)
(declare-fun x679 () Bool)
(declare-fun x1604 () Real)
(declare-fun x1488 () Real)
(declare-fun x234 () Bool)
(declare-fun x768 () Real)
(declare-fun x900 () Bool)
(declare-fun x1188 () Bool)
(declare-fun x1066 () Bool)
(declare-fun x309 () Real)
(declare-fun x819 () Bool)
(declare-fun x98 () Real)
(declare-fun x1609 () Real)
(declare-fun x798 () Real)
(declare-fun x1042 (x1026) Real)
(declare-fun x190 () Real)
(declare-fun x106 () Bool)
(declare-fun x702 (Real) Real)
(declare-fun x370 () x1026)
(declare-fun x891 () Bool)
(declare-fun x1384 () Bool)
(declare-fun x338 () Bool)
(declare-fun x1039 () Real)
(declare-fun x1374 () Real)
(declare-fun x274 () Real)
(declare-fun x520 () Real)
(declare-fun x149 () Real)
(declare-fun x785 () Bool)
(declare-fun x396 () Bool)
(declare-fun x1580 () Real)
(declare-fun x590 () Bool)
(declare-fun x1542 () Bool)
(declare-fun x379 () Real)
(declare-fun x822 () Real)
(declare-fun x539 () x1026)
(declare-fun x1209 () Real)
(declare-fun x70 () Real)
(declare-fun x1398 () Real)
(declare-fun x509 () Real)
(declare-fun x1598 () Real)
(declare-fun x347 (Real) Real)
(declare-fun x1144 () Real)
(declare-fun x895 () Real)
(declare-fun x384 () Real)
(declare-fun x580 () Real)
(declare-fun x339 () Bool)
(declare-fun x36 () Bool)
(declare-fun x39 () Bool)
(declare-fun x978 () x1026)
(declare-fun x1159 () Real)
(declare-fun x1261 () Real)
(declare-fun x528 () Real)
(declare-fun x481 () Real)
(declare-fun x1309 () Real)
(declare-fun x1340 () Bool)
(declare-fun x476 () Real)
(declare-fun x1450 () Real)
(declare-fun x787 () Real)
(declare-fun x1278 () x1026)
(declare-fun x1106 () Real)
(declare-fun x479 () Real)
(declare-fun x1014 () Real)
(declare-fun x349 () Real)
(declare-fun x389 () Real)
(declare-fun x467 () Bool)
(declare-fun x965 () Bool)
(declare-fun x326 () Real)
(declare-fun x1125 () Real)
(declare-fun x1382 () x1026)
(declare-fun x1234 () Real)
(declare-fun x525 () Bool)
(declare-fun x913 () Real)
(declare-fun x477 () Real)
(declare-fun x1109 () Bool)
(declare-fun x109 () Real)
(declare-fun x1222 () Real)
(declare-fun x93 () Bool)
(declare-fun x840 () Bool)
(declare-fun x442 () Real)
(declare-fun x1246 () Real)
(declare-fun x801 () Bool)
(declare-fun x470 () Real)
(declare-fun x299 () Real)
(declare-fun x608 () Real)
(declare-fun x423 () x1026)
(declare-fun x175 () Bool)
(declare-fun x1347 () Bool)
(declare-fun x387 () Bool)
(declare-fun x80 () x1026)
(declare-fun x746 () Bool)
(declare-fun x340 () x1026)
(declare-fun x231 () Bool)
(declare-fun x1441 () Real)
(declare-fun x272 () Bool)
(declare-fun x286 () Real)
(declare-fun x38 () Bool)
(declare-fun x282 (x1026) Real)
(declare-fun x1513 () Bool)
(declare-fun x1045 () Real)
(declare-fun x576 () Real)
(declare-fun x346 () Bool)
(declare-fun x765 () x1026)
(declare-fun x107 () Bool)
(declare-fun x641 () Bool)
(declare-fun x927 () Real)
(declare-fun x943 () x1026)
(declare-fun x240 () Real)
(declare-fun x179 () Real)
(declare-fun x575 () Real)
(declare-fun x90 (x1026) Real)
(declare-fun x755 () Real)
(declare-fun x564 () Real)
(declare-fun x1267 () Bool)
(declare-fun x838 () Real)
(declare-fun x609 () x1026)
(declare-fun x1349 () Real)
(declare-fun x721 () Bool)
(declare-fun x279 (Real) Real)
(declare-fun x1143 () Bool)
(declare-fun x117 () Real)
(declare-fun x84 () Real)
(declare-fun x200 () Real)
(declare-fun x752 () x1026)
(declare-fun x112 () Real)
(declare-fun x537 () Real)
(declare-fun x498 () x1026)
(declare-fun x283 () Real)
(declare-fun x1326 () Bool)
(declare-fun x671 () Bool)
(declare-fun x1190 (x1026) Real)
(declare-fun x182 () Real)
(declare-fun x879 () Real)
(declare-fun x889 () x1026)
(declare-fun x526 () Bool)
(declare-fun x361 () Real)
(declare-fun x988 () Bool)
(declare-fun x158 () Real)
(declare-fun x673 () Real)
(declare-fun x64 () Real)
(declare-fun x1056 () Bool)
(declare-fun x368 () Real)
(declare-fun x31 () Real)
(declare-fun x1368 () Bool)
(declare-fun x1313 () Bool)
(declare-fun x1193 (x1026) Real)
(declare-fun x1576 () Real)
(declare-fun x341 () Real)
(declare-fun x1319 () Real)
(declare-fun x227 () Bool)
(declare-fun x23 () Real)
(declare-fun x833 () Real)
(declare-fun x1420 () Real)
(declare-fun x632 () x1026)
(declare-fun x1074 () x1026)
(declare-fun x72 () x1026)
(declare-fun x802 () Bool)
(declare-fun x1163 () Real)
(declare-fun x592 () x1026)
(declare-fun x1079 () x1026)
(declare-fun x1034 () Real)
(declare-fun x1463 () Bool)
(declare-fun x133 () Bool)
(declare-fun x929 () x1026)
(declare-fun x1544 () Real)
(declare-fun x296 () x1026)
(declare-fun x86 () x1026)
(declare-fun x263 () x1026)
(declare-fun x934 () Bool)
(declare-fun x830 () Bool)
(declare-fun x1318 () Real)
(declare-fun x398 () Bool)
(declare-fun x125 () Bool)
(declare-fun x527 () Real)
(declare-fun x1274 () Real)
(declare-fun x438 () Real)
(declare-fun x949 () Bool)
(declare-fun x352 () Real)
(declare-fun x1323 () Real)
(declare-fun x837 () Bool)
(declare-fun x268 () Real)
(declare-fun x1410 () Real)
(declare-fun x454 () Bool)
(declare-fun x128 () Real)
(declare-fun x1117 () Real)
(declare-fun x293 () Real)
(declare-fun x1127 () Real)
(declare-fun x684 () Real)
(declare-fun x488 () x1026)
(declare-fun x864 () x1026)
(declare-fun x946 () Real)
(declare-fun x1272 () Real)
(declare-fun x1286 () Real)
(declare-fun x1494 () Bool)
(declare-fun x1448 () Real)
(declare-fun x1111 () Bool)
(declare-fun x1412 () Real)
(declare-fun x692 () x1026)
(declare-fun x448 () Real)
(declare-fun x1141 () Bool)
(declare-fun x921 () Real)
(declare-fun x100 () x1026)
(declare-fun x254 () Real)
(declare-fun x510 () x1026)
(declare-fun x1333 () x1026)
(declare-fun x908 () Real)
(declare-fun x977 () Bool)
(declare-fun x610 () x1026)
(declare-fun x828 () x1026)
(declare-fun x931 () Bool)
(declare-fun x832 () x1026)
(declare-fun x504 () x1026)
(declare-fun x89 () Bool)
(declare-fun x359 () x1026)
(declare-fun x645 () Bool)
(declare-fun x653 () Bool)
(declare-fun x1499 () Real)
(declare-fun x483 () Bool)
(declare-fun x1389 () Real)
(declare-fun x79 () Real)
(declare-fun x708 () Real)
(declare-fun x538 () Bool)
(declare-fun x1150 () Real)
(declare-fun x628 () Real)
(declare-fun x273 () Real)
(declare-fun x120 () Bool)
(declare-fun x1515 () Bool)
(declare-fun x1252 () Bool)
(declare-fun x1154 () Bool)
(declare-fun x437 (x1026) Real)
(declare-fun x1001 () Real)
(declare-fun x1442 () Real)
(declare-fun x587 () x1026)
(declare-fun x1569 () Real)
(declare-fun x1595 () Real)
(declare-fun x1546 () Real)
(declare-fun x1536 () Bool)
(declare-fun x1391 () Bool)
(declare-fun x646 () Real)
(declare-fun x716 () Real)
(declare-fun x1248 () Real)
(declare-fun x980 () Bool)
(declare-fun x1518 () Real)
(declare-fun x1235 () Bool)
(declare-fun x723 () Bool)
(declare-fun x1253 () Bool)
(declare-fun x226 () Real)
(declare-fun x1498 () x1026)
(declare-fun x177 () Bool)
(declare-fun x875 () Real)
(declare-fun x497 () Real)
(declare-fun x436 () Bool)
(declare-fun x1102 () Bool)
(declare-fun x124 () Real)
(declare-fun x823 () Real)
(declare-fun x782 () Bool)
(declare-fun x373 () Bool)
(declare-fun x41 () Real)
(declare-fun x644 () Real)
(declare-fun x280 () Real)
(declare-fun x1491 () Real)
(declare-fun x975 () Bool)
(declare-fun x531 () Real)
(declare-fun x1538 () Bool)
(declare-fun x1351 () x1026)
(declare-fun x1470 () Real)
(declare-fun x1242 () Real)
(declare-fun x974 () Bool)
(declare-fun x534 () Real)
(declare-fun x138 () Real)
(declare-fun x607 () Bool)
(declare-fun x1153 () Real)
(declare-fun x636 () x1026)
(declare-fun x83 () Real)
(declare-fun x740 () Bool)
(declare-fun x357 () Real)
(declare-fun x791 () Real)
(declare-fun x773 () Real)
(declare-fun x1487 () Bool)
(declare-fun x1195 () Bool)
(declare-fun x1525 () Real)
(declare-fun x1030 () Real)
(declare-fun x1337 () x1026)
(declare-fun x1588 () Bool)
(declare-fun x1388 () Bool)
(declare-fun x210 () Bool)
(declare-fun x648 () Bool)
(declare-fun x506 () Bool)
(declare-fun x1123 () Real)
(declare-fun x1317 () Bool)
(declare-fun x1433 () x1026)
(declare-fun x1241 () Real)
(declare-fun x1221 () Bool)
(declare-fun x1218 () x1026)
(declare-fun x1070 () x1026)
(declare-fun x1073 (Real) Real)
(declare-fun x169 () Real)
(declare-fun x223 () Real)
(declare-fun x1445 () Bool)
(declare-fun x1091 () Bool)
(declare-fun x1478 () x1026)
(declare-fun x404 () Real)
(declare-fun x581 () Real)
(declare-fun x687 () Bool)
(declare-fun x1025 () Bool)
(declare-fun x1508 () Real)
(declare-fun x7 () Real)
(declare-fun x1459 () Bool)
(declare-fun x705 () Real)
(declare-fun x1282 () x1026)
(declare-fun x1035 () Real)
(declare-fun x844 () Bool)
(declare-fun x961 (x1026) Real)
(declare-fun x465 () x1026)
(declare-fun x1545 () Bool)
(declare-fun x1431 () Real)
(declare-fun x215 () Real)
(declare-fun x319 () x1026)
(declare-fun x115 () x1026)
(declare-fun x1129 () x1026)
(declare-fun x146 () Bool)
(declare-fun x818 () x1026)
(declare-fun x1362 () Real)
(declare-fun x303 () Real)
(declare-fun x136 () Real)
(declare-fun x469 () Bool)
(declare-fun x150 () x1026)
(declare-fun x1489 () Real)
(declare-fun x180 () Bool)
(declare-fun x1133 () Real)
(declare-fun x27 () Bool)
(declare-fun x1471 () Real)
(declare-fun x906 () Real)
(declare-fun x569 () Bool)
(declare-fun x1243 () Real)
(declare-fun x113 () Real)
(declare-fun x160 () Real)
(declare-fun x1156 () Bool)
(declare-fun x1240 () x1026)
(declare-fun x1032 () Real)
(declare-fun x831 () x1026)
(declare-fun x1501 () x1026)
(declare-fun x1485 () Real)
(declare-fun x1113 () Real)
(declare-fun x695 () Real)
(declare-fun x104 () Real)
(declare-fun x979 () Real)
(declare-fun x971 () Real)
(declare-fun x606 () x1026)
(declare-fun x1401 () Real)
(declare-fun x1355 () x1026)
(declare-fun x770 () Real)
(declare-fun x1551 () Real)
(declare-fun x1161 () x1026)
(declare-fun x318 () Real)
(declare-fun x383 () Real)
(declare-fun x1457 () Bool)
(declare-fun x1216 () Bool)
(declare-fun x1148 () Real)
(declare-fun x562 () Real)
(declare-fun x566 () x1026)
(declare-fun x757 () Bool)
(declare-fun x1262 () Bool)
(declare-fun x955 () Real)
(declare-fun x1568 () Real)
(declare-fun x880 () x1026)
(declare-fun x411 () Bool)
(declare-fun x813 () x1026)
(declare-fun x874 () Bool)
(declare-fun x3 () Real)
(declare-fun x779 () Bool)
(declare-fun x1592 () Bool)
(declare-fun x1444 () Bool)
(declare-fun x689 () Bool)
(declare-fun x809 () Real)
(declare-fun x662 () x1026)
(declare-fun x730 () Bool)
(declare-fun x1602 () Real)
(declare-fun x951 () Real)
(declare-fun x989 () x1026)
(declare-fun x1120 () Real)
(declare-fun x1182 () Bool)
(declare-fun x1168 () Real)
(declare-fun x1426 () Real)
(declare-fun x1586 () Bool)
(declare-fun x260 () Real)
(declare-fun x601 () Real)
(declare-fun x1264 () x1026)
(declare-fun x1367 () Real)
(declare-fun x1166 () x1026)
(declare-fun x1590 () Real)
(declare-fun x677 () Bool)
(declare-fun x720 () Real)
(declare-fun x1343 () Real)
(declare-fun x725 () Real)
(declare-fun x1199 () Bool)
(declare-fun x1191 () x1026)
(declare-fun x1130 () Real)
(declare-fun x334 () x1026)
(declare-fun x116 () Bool)
(declare-fun x518 () Bool)
(declare-fun x1031 () x1026)
(declare-fun x772 () Real)
(declare-fun x1517 () Bool)
(declare-fun x954 () Real)
(declare-fun x651 () Bool)
(declare-fun x206 () Real)
(declare-fun x1083 (Real) Real)
(declare-fun x624 () Real)
(declare-fun x312 () Real)
(declare-fun x431 () Bool)
(declare-fun x1566 () x1026)
(declare-fun x478 () Bool)
(declare-fun x1446 () Bool)
(declare-fun x981 () Bool)
(declare-fun x1298 () Real)
(declare-fun x330 () Bool)
(declare-fun x1399 () Bool)
(declare-fun x327 () Real)
(declare-fun x1315 () Bool)
(declare-fun x1406 () Real)
(declare-fun x466 () Real)
(declare-fun x1509 () Real)
(declare-fun x400 () Real)
(declare-fun x660 () Real)
(declare-fun x221 () Real)
(declare-fun x212 () Real)
(declare-fun x1408 (Real) Real)
(declare-fun x1567 () Real)
(declare-fun x612 () Bool)
(declare-fun x1107 () Bool)
(declare-fun x1607 () Real)
(declare-fun x1486 () Bool)
(declare-fun x1038 () Real)
(declare-fun x717 () Real)
(declare-fun x521 () Real)
(declare-fun x144 () Real)
(declare-fun x1169 () Bool)
(declare-fun x238 (Real) Real)
(declare-fun x614 () Real)
(declare-fun x1587 () Bool)
(declare-fun x507 () Real)
(declare-fun x1007 () x1026)
(declare-fun x416 () Real)
(declare-fun x1293 () Bool)
(declare-fun x758 () x1026)
(declare-fun x811 () Real)
(declare-fun x1372 () x1026)
(declare-fun x1527 () Bool)
(declare-fun x449 () Real)
(declare-fun x503 () x1026)
(declare-fun x1108 () Bool)
(declare-fun x22 () Real)
(declare-fun x729 () Bool)
(declare-fun x735 () x1026)
(declare-fun x1075 () Bool)
(declare-fun x229 () x1026)
(declare-fun x248 () Real)
(declare-fun x855 () Real)
(declare-fun x741 () Real)
(declare-fun x781 () Real)
(declare-fun x445 () Real)
(declare-fun x917 () x1026)
(declare-fun x246 () x1026)
(declare-fun x1540 () Real)
(declare-fun x152 () Real)
(declare-fun x1302 () Real)
(declare-fun x372 () Real)
(declare-fun x577 () Bool)
(declare-fun x63 () Bool)
(declare-fun x353 () Real)
(declare-fun x535 () Real)
(declare-fun x1524 () Bool)
(declare-fun x826 () Bool)
(declare-fun x1552 () Bool)
(declare-fun x912 () Bool)
(declare-fun x1305 () Bool)
(declare-fun x1550 () Bool)
(declare-fun x1271 () Real)
(declare-fun x707 () x1026)
(declare-fun x233 (x1026) Real)
(declare-fun x1320 () x1026)
(declare-fun x1421 () x1026)
(declare-fun x792 () x1026)
(declare-fun x9 () Real)
(declare-fun x1281 () Real)
(declare-fun x1577 () Real)
(declare-fun x395 () Bool)
(declare-fun x1146 (Real) Real)
(declare-fun x920 () Real)
(declare-fun x1071 () Real)
(declare-fun x1393 () Bool)
(declare-fun x1376 () Real)
(declare-fun x925 () Bool)
(declare-fun x1353 () Real)
(declare-fun x1584 () Real)
(declare-fun x101 () x1026)
(declare-fun x640 () Real)
(declare-fun x1405 () Bool)
(declare-fun x408 () x1026)
(declare-fun x1104 () Bool)
(declare-fun x1147 () Bool)
(declare-fun x363 () x1026)
(declare-fun x17 () Bool)
(declare-fun x585 () x1026)
(declare-fun x461 () x1026)
(declare-fun x870 () Bool)
(declare-fun x1077 () Real)
(declare-fun x21 () Bool)
(declare-fun x936 () Real)
(declare-fun x468 () Bool)
(declare-fun x58 () Real)
(declare-fun x1228 () Real)
(declare-fun x631 () Real)
(declare-fun x896 () x1026)
(declare-fun x306 () Bool)
(declare-fun x1370 () Bool)
(declare-fun x1458 () Real)
(declare-fun x13 () Bool)
(declare-fun x572 () Bool)
(declare-fun x814 () Real)
(declare-fun x1164 () x1026)
(declare-fun x998 () Real)
(declare-fun x1247 () Bool)
(declare-fun x942 () Real)
(declare-fun x1186 (Real Real) Real)
(declare-fun x1136 () x1026)
(declare-fun x940 () Real)
(declare-fun x664 () Real)
(declare-fun x249 (x1026) Real)
(declare-fun x492 () Real)
(declare-fun x161 () Real)
(declare-fun x11 () Bool)
(declare-fun x328 () Bool)
(declare-fun x1069 () Real)
(declare-fun x1578 () Real)
(declare-fun x1603 () x1026)
(declare-fun x1085 () Real)
(declare-fun x243 () Real)
(declare-fun x657 () Bool)
(declare-fun x409 () Bool)
(declare-fun x388 () x1026)
(declare-fun x847 () Real)
(declare-fun x1088 () Real)
(declare-fun x924 () Bool)
(declare-fun x1378 () x1026)
(declare-fun x715 () Bool)
(declare-fun x1040 () Real)
(declare-fun x1549 () Real)
(declare-fun x222 () Real)
(declare-fun x1224 () x1026)
(declare-fun x738 () Real)
(declare-fun x597 () Real)
(declare-fun x709 () Real)
(declare-fun x419 () Real)
(declare-fun x1417 () x1026)
(declare-fun x898 () Real)
(declare-fun x983 () Real)
(declare-fun x995 () Real)
(declare-fun x1210 () Real)
(declare-fun x1292 () Real)
(declare-fun x496 () Real)
(declare-fun x126 (x1026) Real)
(declare-fun x1260 () Real)
(declare-fun x1451 () Real)
(declare-fun x1297 () Real)
(declare-fun x1606 () Bool)
(declare-fun x573 () x1026)
(declare-fun x1137 () Bool)
(declare-fun x1270 () x1026)
(declare-fun x1126 () Real)
(declare-fun x1507 () Bool)
(declare-fun x1490 () Real)
(declare-fun x1054 () Real)
(declare-fun x1321 () Real)
(declare-fun x1555 () Real)
(declare-fun x835 () Real)
(declare-fun x553 (Real) Real)
(declare-fun x786 () Real)
(declare-fun x473 () Bool)
(declare-fun x1236 () Real)
(declare-fun x886 () x1026)
(declare-fun x392 () Real)
(declare-fun x1364 () x1026)
(declare-fun x232 () x1026)
(declare-fun x188 () Bool)
(declare-fun x329 () Real)
(declare-fun x691 () Bool)
(declare-fun x788 () x1026)
(declare-fun x1419 () Real)
(declare-fun x987 () Bool)
(declare-fun x1100 () Real)
(declare-fun x1299 () Real)
(declare-fun x703 () Bool)
(declare-fun x704 (x1026) Real)
(declare-fun x1477 () x1026)
(declare-fun x1089 () Real)
(declare-fun x794 () Real)
(declare-fun x105 () Real)
(declare-fun x1029 () x1026)
(declare-fun x696 () Bool)
(declare-fun x1369 () Bool)
(declare-fun x910 () Bool)
(declare-fun x1581 () x1026)
(declare-fun x1263 () Real)
(declare-fun x451 () Real)
(declare-fun x336 () Real)
(declare-fun x932 () Bool)
(declare-fun x209 () Bool)
(declare-fun x615 () Bool)
(declare-fun x1467 () Bool)
(declare-fun x663 () Bool)
(declare-fun x245 () Bool)
(declare-fun x745 () Real)
(declare-fun x712 () x1026)
(declare-fun x255 () Real)
(declare-fun x619 () Real)
(declare-fun x1192 () Bool)
(declare-fun x842 () Real)
(declare-fun x960 () Bool)
(declare-fun x1024 () Real)
(declare-fun x203 () Real)
(declare-fun x443 () x1026)
(declare-fun x61 () Bool)
(declare-fun x956 () x1026)
(declare-fun x47 () x1026)
(declare-fun x181 () x1026)
(declare-fun x1103 () Real)
(declare-fun x110 () Real)
(declare-fun x432 (x1026) Real)
(declare-fun x1277 () Real)
(declare-fun x1439 () Real)
(declare-fun x172 () Bool)
(declare-fun x53 () Real)
(declare-fun x524 () Bool)
(declare-fun x616 () Real)
(declare-fun x1543 () x1026)
(declare-fun x1380 (Real) Real)
(declare-fun x304 () Real)
(declare-fun x558 () Real)
(declare-fun x331 () Bool)
(declare-fun x1172 () Bool)
(declare-fun x65 () Bool)
(declare-fun x1124 () Real)
(declare-fun x804 () Real)
(declare-fun x1533 () Bool)
(declare-fun x450 () Real)
(declare-fun x803 () Bool)
(declare-fun x1400 () Real)
(declare-fun x122 () Real)
(declare-fun x1472 () Real)
(declare-fun x1055 () Real)
(declare-fun x950 () Bool)
(declare-fun x756 () Real)
(declare-fun x1214 (Real) Real)
(declare-fun x1105 () Bool)
(declare-fun x1219 () x1026)
(declare-fun x827 () Real)
(declare-fun x1537 () Real)
(declare-fun x131 () x1026)
(declare-fun x1335 () x1026)
(declare-fun x543 () Real)
(declare-fun x111 () Real)
(declare-fun x933 () Bool)
(declare-fun x193 () Real)
(declare-fun x868 () Bool)
(declare-fun x1403 () Bool)
(declare-fun x962 () Real)
(declare-fun x505 () Real)
(declare-fun x12 () Real)
(declare-fun x1212 () Real)
(declare-fun x1043 () Bool)
(declare-fun x850 () x1026)
(declare-fun x230 () Real)
(declare-fun x288 () x1026)
(declare-fun x633 () Real)
(define-fun x257 ((x1026 x1026) (x378 Real)) x1026 (ite ((_ is x413) x1026) (x413 (x511 x1026) (+ (x1310 x1026) x378)) (ite ((_ is x462) x1026) (x462 (x1473 x1026) (x1456 x1026) (+ x378 (x867 x1026))) (x625 (+ x378 (x367 x1026))))))
(define-fun x1223 ((x718 Real)) Real (ite (and (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 x718) (<= 0 x718)) x718 (- x718 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(define-fun x574 ((x718 Real)) Real (ite (and (> 0 x718) (<= (- 115792089237316195423570985008687907853269984665640564039457584007913129639936) x718)) (+ x718 115792089237316195423570985008687907853269984665640564039457584007913129639936) x718))
(define-fun x549 ((x584 Real)) Bool (and (<= 0 x584) (< x584 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(define-fun x397 ((x584 Real)) Bool (and (= x584 (x1135 115792089237316195423570985008687907853269984665640564039457584007913129639935 x584)) (= x584 (x1135 x584 115792089237316195423570985008687907853269984665640564039457584007913129639935))))
(define-fun x1171 ((x584 Real)) Bool (and (= 0 (x1135 x584 0)) (= 0 (x1135 0 x584))))
(define-fun x127 ((x584 Real)) Bool (= x584 (x1135 x584 x584)))
(define-fun x195 ((x584 Real)) Bool (and (x1171 x584) (x127 x584) (x397 x584)))
(define-fun x620 ((x584 Real)) Bool (= (x1135 1461501637330902918203684832716283019655932542975 (x1135 1461501637330902918203684832716283019655932542975 x584)) (x1135 1461501637330902918203684832716283019655932542975 x584)))
(define-fun x724 ((x584 Real)) Bool (=> (and (< x584 1461501637330902918203684832716283019655932542976) (>= x584 0)) (= x584 (x1135 1461501637330902918203684832716283019655932542975 x584))))
(define-fun x360 ((x584 Real)) Bool (=> (= x584 (x1135 1461501637330902918203684832716283019655932542975 x584)) (and (>= x584 0) (> 1461501637330902918203684832716283019655932542976 x584))))
(define-fun x32 ((x584 Real)) Bool (=> (and (<= 1461501637330902918203684832716283019655932542976 x584) (> 2923003274661805836407369665432566039311865085952 x584)) (= (- x584 1461501637330902918203684832716283019655932542976) (x1135 1461501637330902918203684832716283019655932542975 x584))))
(define-fun x168 ((x584 Real) (x1554 Real)) Bool (and (= (+ (x1135 1461501637330902918203684832716283019655932542975 x584) (* x1554 1461501637330902918203684832716283019655932542976)) x584) (>= x1554 0)))
(define-fun x42 ((x584 Real) (x4 Real)) Bool (and (x168 x584 x4) (x360 x584) (x620 x584) (x724 x584) (x32 x584)))
(define-fun x748 ((x584 Real) (x1554 Real)) Bool (= (x1135 x1554 x584) (x1135 x584 x1554)))
(define-fun x1119 ((x584 Real) (x1554 Real)) Bool (and (<= 0 (x1135 x584 x1554)) (=> (<= 0 x584) (<= (x1135 x584 x1554) x584)) (=> (<= 0 x1554) (<= (x1135 x584 x1554) x1554))))
(define-fun x199 ((x584 Real) (x1554 Real)) Bool (and (x748 x584 x1554) (x1119 x584 x1554)))
(define-fun x1037 ((x584 Real) (x4 Real)) Bool (and (x42 x584 x4) (x199 x584 1461501637330902918203684832716283019655932542975)))
(define-fun x1390 ((x584 Real)) Bool (= (x1135 26959946667150639794667015087019630673637144422540572481103610249215 (x1135 26959946667150639794667015087019630673637144422540572481103610249215 x584)) (x1135 26959946667150639794667015087019630673637144422540572481103610249215 x584)))
(define-fun x418 ((x584 Real)) Bool (=> (and (> 26959946667150639794667015087019630673637144422540572481103610249216 x584) (<= 0 x584)) (= x584 (x1135 26959946667150639794667015087019630673637144422540572481103610249215 x584))))
(define-fun x1006 ((x584 Real)) Bool (=> (= x584 (x1135 26959946667150639794667015087019630673637144422540572481103610249215 x584)) (and (>= x584 0) (< x584 26959946667150639794667015087019630673637144422540572481103610249216))))
(define-fun x1424 ((x584 Real)) Bool (=> (and (> 53919893334301279589334030174039261347274288845081144962207220498432 x584) (>= x584 26959946667150639794667015087019630673637144422540572481103610249216)) (= (x1135 26959946667150639794667015087019630673637144422540572481103610249215 x584) (- x584 26959946667150639794667015087019630673637144422540572481103610249216))))
(define-fun x1591 ((x584 Real) (x1554 Real)) Bool (and (= (+ (* 26959946667150639794667015087019630673637144422540572481103610249216 x1554) (x1135 26959946667150639794667015087019630673637144422540572481103610249215 x584)) x584) (<= 0 x1554)))
(define-fun x489 ((x584 Real) (x4 Real)) Bool (and (x1591 x584 x4) (x1424 x584) (x1006 x584) (x1390 x584) (x418 x584)))
(define-fun x554 ((x584 Real) (x4 Real)) Bool (and (x489 x584 x4) (x199 x584 26959946667150639794667015087019630673637144422540572481103610249215)))
(define-fun x1036 ((x584 Real)) Bool (= (x1135 115792089237316195423570985008687907853269984665640564039457584007913129639904 x584) (x1135 115792089237316195423570985008687907853269984665640564039457584007913129639904 (x1135 115792089237316195423570985008687907853269984665640564039457584007913129639904 x584))))
(define-fun x220 ((x584 Real)) Bool (=> (and (>= x584 0) (> 32 x584)) (= (x1135 115792089237316195423570985008687907853269984665640564039457584007913129639904 x584) 0)))
(define-fun x165 ((x584 Real) (x1554 Real) (x189 Real) (x453 Real)) Bool (and (<= 0 x189) (= (+ x1554 (* x453 115792089237316195423570985008687907853269984665640564039457584007913129639936) (* 32 x189)) x584) (>= x453 0) (= (* 32 x189) (x1135 115792089237316195423570985008687907853269984665640564039457584007913129639904 x584)) (> 1 x453) (< x1554 32) (>= x1554 0) (> 3618502788666131106986593281521497120414687020801267626233049500247285301248 x189)))
(define-fun x140 ((x584 Real) (x1181 Real) (x857 Real) (x1529 Real)) Bool (and (x165 x584 x1181 x857 x1529) (x220 x584) (x1036 x584)))
(define-fun x198 ((x584 Real) (x1181 Real) (x857 Real) (x1529 Real)) Bool (and (x199 x584 115792089237316195423570985008687907853269984665640564039457584007913129639904) (x140 x584 x1181 x857 x1529)))
(define-fun x192 ((x1348 Real)) Real (x1110 x1348))
(define-fun x1022 ((x1348 Real)) Real (ite (= 128 x1348) x997 (x1073 x1348)))
(define-fun x1048 ((x1348 Real)) Real (ite (and (<= 160 x1348) (> (+ x353 160) x1348)) (x1110 (+ (- x1348 160) x1546)) (x1022 x1348)))
(define-fun x482 ((x1348 Real)) Real (ite (= x273 x1348) 0 (x1048 x1348)))
(define-fun x1311 ((x1348 Real)) Real (ite (and (>= x1348 x935) (> (+ x24 x935) x1348)) (x1110 (+ (- x1348 x935) x218)) (x1418 x1348)))
(define-fun x1206 ((x1348 x1026)) Real (ite (= x1348 x629) x793 (x486 x1348)))
(define-fun x1521 ((x1348 x1026)) Real (ite (= x1348 x115) x793 (x486 x1348)))
(define-fun x1121 ((x1348 x1026)) Real (ite (= x1348 x1161) x793 (x244 x1348)))
(define-fun x369 ((x1348 x1026)) Real (ite (= x810 x1348) x793 (x244 x1348)))
(define-fun x937 ((x1348 x1026)) Real (ite (and x638 x362) (x244 x1348) (ite (and x1502 x1155) (x486 x1348) (ite (and x102 (not x666)) (x1121 x1348) (x369 x1348)))))
(define-fun x1005 ((x1348 x1026)) Real (ite (= x1553 x1348) x793 (x961 x1348)))
(define-fun x49 ((x1348 x1026)) Real (ite (= x1348 x712) x793 (x961 x1348)))
(define-fun x982 ((x1348 x1026)) Real (ite (= x592 x1348) x793 (x961 x1348)))
(define-fun x1503 ((x1348 x1026)) Real (ite (= x1348 x1422) x793 (x1557 x1348)))
(define-fun x1394 ((x1348 x1026)) Real (ite (= x1348 x1282) x793 (x1557 x1348)))
(define-fun x1386 ((x1348 x1026)) Real (ite (= x1348 x1372) x793 (x1557 x1348)))
(define-fun x1392 ((x1348 x1026)) Real (ite (and x362 x638) (x1557 x1348) (ite (and x1155 x1502) (x961 x1348) (ite (and x594 (not x148) (not x545)) (x1503 x1348) (ite (and (not x545) x594 x148) (x1394 x1348) (x1386 x1348))))))
(define-fun x184 ((x1348 x1026)) Real (ite (= x1348 x1320) x520 (x282 x1348)))
(define-fun x68 ((x1348 x1026)) Real (ite (= x1570 x1348) x517 (x1190 x1348)))
(define-fun x456 ((x1348 x1026)) Real (ite (and x102 (not x666)) (x68 x1348) (x1190 x1348)))
(define-fun x1481 ((x1348 x1026)) Real (ite (and x638 x362) (x1190 x1348) (ite (and x1155 x1502) (x282 x1348) (x456 x1348))))
(define-fun x167 ((x1348 x1026)) Real (ite (= x1218 x1348) x496 (x555 x1348)))
(define-fun x1465 ((x1348 x1026)) Real (ite (= x1348 x499) x222 (x224 x1348)))
(define-fun x1438 ((x1348 x1026)) Real (ite (and (not x148) x594 (not x545)) (x1465 x1348) (x224 x1348)))
(define-fun x1078 ((x1348 x1026)) Real (ite (and x362 x638) (x224 x1348) (ite (and x1502 x1155) (x555 x1348) (x1438 x1348))))
(define-fun x710 ((x1348 x1026)) Real (ite (= x1348 x943) x851 (x366 x1348)))
(define-fun x829 ((x1348 x1026)) Real (ite (= x1348 x1429) x647 (x90 x1348)))
(define-fun x907 ((x1348 x1026)) Real (ite (and x362 x638) (x1346 x1348) (ite (and x1502 x1155) (x233 x1348) (ite (and (not x253) x102 x1533 (not x116)) (x90 x1348) (ite (and (not x116) x102 (not x1533)) (x1346 x1348) (ite (and x102 x116) (x1346 x1348) (x829 x1348)))))))
(define-fun x966 ((x1348 Real)) Real (ite (= x1348 x1229) x1443 (x902 x1348)))
(define-fun x1516 ((x1348 Real)) Real (ite (= x1116 x1348) x852 (x966 x1348)))
(define-fun x1453 ((x1348 Real)) Real (ite (and x1104 x1444) (x902 x1348) (x1516 x1348)))
(define-fun x134 ((x1348 Real)) Real (ite (= x1348 x1236) x527 (x1453 x1348)))
(define-fun x892 ((x1348 Real)) Real (ite (= x1348 x959) x497 (x702 x1348)))
(define-fun x967 ((x1348 Real)) Real (ite (= x1348 x1440) x1308 (x1084 x1348)))
(define-fun x1061 ((x1348 Real)) Real (ite (= x248 x1348) x824 (x967 x1348)))
(define-fun x694 ((x1348 Real)) Real (ite (and (not x545) x594 (not x148)) (x1061 x1348) (ite (and x148 (not x545) x594) (x1061 x1348) (x1084 x1348))))
(define-fun x1205 ((x1348 x1026)) Real (ite (= x340 x1348) x805 (x704 x1348)))
(define-fun x1531 ((x1348 x1026)) Real (ite (and x1563 x900) (x704 x1348) (x1205 x1348)))
(define-fun x402 ((x1348 x1026)) Real (ite (= x1136 x1348) x1312 (x1220 x1348)))
(define-fun x490 ((x1348 x1026)) Real (ite (and x1147 x1104) (x1220 x1348) (x402 x1348)))
(define-fun x211 ((x1348 Real)) Real (ite (= x1348 x379) x624 (x694 x1348)))
(define-fun x403 ((x1348 Real)) Real (ite (= x1348 x756) x277 (x1380 x1348)))
(define-fun x447 ((x1348 Real)) Real (ite (and x638 x362) (x1084 x1348) (ite (and x1502 x1155) (x902 x1348) (ite (and (not x116) (not x253) x1533 x102) (x1380 x1348) (ite (and (not x116) x102 (not x1533)) (x401 x1348) (ite (and x116 x102) (x401 x1348) (x403 x1348)))))))
(define-fun x1447 ((x1348 Real)) Real (ite (= x1568 x1348) x1297 (x447 x1348)))
(define-fun x744 ((x1348 Real)) Real (ite (= x1348 x784) x1132 (x1447 x1348)))
(define-fun x33 ((x1348 Real)) Real (ite (= x764 x1348) x1113 (x744 x1348)))
(define-fun x713 ((x1348 Real)) Real (ite (= x1348 x1439) x717 (x33 x1348)))
(define-fun x1383 ((x1348 Real)) Real (ite (= x1077 x1348) 32 (x713 x1348)))
(define-fun x655 ((x1348 Real)) Real (ite (= x1348 x618) x942 (x364 x1348)))
(define-fun x749 ((x1348 Real)) Real (ite (= x212 x1348) 0 (x1523 x1348)))
(define-fun x57 ((x1348 Real)) Real (ite (= 0 x1348) 1 (x1146 x1348)))
(define-fun x1004 ((x1348 Real)) Real (ite (= x1348 0) 1 (x1146 x1348)))
(define-fun x1454 ((x1348 Real)) Real (ite (and x1608 x934) (x57 x1348) (x1004 x1348)))
(define-fun x873 ((x1348 Real)) Real (ite (= x1348 x732) x1248 (x1098 x1348)))
(define-fun x821 ((x1348 Real)) Real (ite (= x732 x1348) x1241 (x1098 x1348)))
(define-fun x685 ((x1348 Real)) Real (ite (= x732 x1348) x1015 (x475 x1348)))
(define-fun x474 ((x1348 Real)) Real (ite (and (>= x1348 x53) (< x1348 (+ x1015 x53))) (x1454 (+ 0 (- x1348 x53))) (x685 x1348)))
(define-fun x5 ((x1348 Real)) Real (ite (and (not x266) x201) (x474 x1348) (x475 x1348)))
(define-fun x1211 ((x1348 Real)) Real (ite (= x1348 x1041) x843 (x5 x1348)))
(define-fun x322 ((x1348 Real)) Real (ite (= x1348 x1050) x241 (x1211 x1348)))
(define-fun x598 ((x1348 Real)) Real (ite (= x1208 x1348) x110 (x322 x1348)))
(define-fun x1375 ((x1348 Real)) Real (ite (= x846 x1348) x664 (x598 x1348)))
(define-fun x30 ((x1348 Real)) Real (ite (= x761 x1348) 32 (x1375 x1348)))
(define-fun x262 ((x1348 Real)) Real (ite (= x98 x1348) x1301 (x1266 x1348)))
(define-fun x429 ((x1348 Real)) Real (ite (= x479 x1348) 0 (x1408 x1348)))
(define-fun x250 ((x1348 x1026)) Real (ite (= x1348 (x1339 274184521717934524641157099916833587206)) x1580 (x126 x1348)))
(define-fun x311 ((x1348 x1026)) Real (ite (= x1348 (x1339 x300)) x878 (x250 x1348)))
(define-fun x859 ((x1348 x1026)) Real (ite (= x1348 (x1339 x300)) x260 (x311 x1348)))
(define-fun x939 ((x1348 x1026)) Real (ite (= (x1339 274184521717934524641157099916833587206) x1348) x825 (x859 x1348)))
(define-fun x425 ((x1348 x1026)) Real (ite (= (x1339 274184521717934524641157099916833587206) x1348) x773 (x939 x1348)))
(define-fun x310 ((x1348 x1026)) Real (ite (= (x1339 x158) x1348) x532 (x425 x1348)))
(define-fun x611 ((x1348 x1026)) Real (ite (= x579 x1348) x1242 (x432 x1348)))
(define-fun x75 ((x1348 x1026)) Real (ite (= x95 x1348) x558 (x611 x1348)))
(define-fun x1059 ((x1348 x1026)) Real (ite (and x1608 x934) (x75 x1348) (x432 x1348)))
(define-fun x216 ((x1348 x1026)) Real (ite (= x1348 x886) x326 (x1059 x1348)))
(define-fun x1565 ((x1348 Real)) Real (ite (= 0 x1348) 1 (x1479 x1348)))
(define-fun x261 ((x1348 Real)) Real (ite (= x1348 x1431) x1367 (x347 x1348)))
(define-fun x1474 ((x1348 x1026)) Real (ite (= x1348 x1162) x755 (x471 x1348)))
(define-fun x1413 ((x1348 x1026)) Real (ite (= x752 x1348) x1000 (x1474 x1348)))
(define-fun x916 ((x1348 x1026)) Real (ite (and x934 x1608) (x471 x1348) (x1413 x1348)))
(define-fun x881 ((x1348 x1026)) Real (ite (= x956 x1348) x845 (x916 x1348)))
(define-fun x259 ((x1348 Real)) Real (ite (= 0 x1348) 1 (x1479 x1348)))
(define-fun x381 ((x1348 Real)) Real (ite (= x1431 x1348) x672 (x347 x1348)))
(define-fun x999 ((x1348 Real)) Real (ite (and x1138 x1046) (x1565 x1348) (x259 x1348)))
(define-fun x170 ((x1348 x1026)) Real (ite (= x1348 (x1339 x158)) x1045 (x310 x1348)))
(define-fun x536 ((x1348 Real)) Real (ite (= x1348 x1431) x223 (x670 x1348)))
(define-fun x1366 ((x1348 Real)) Real (ite (and (> (+ x1288 x223) x1348) (<= x1288 x1348)) (x999 (+ (- x1348 x1288) 0)) (x536 x1348)))
(define-fun x417 ((x1348 Real)) Real (ite (and x1483 x307) (x670 x1348) (x1366 x1348)))
(define-fun x85 ((x584 Real)) Bool (=> (and (not (= 2418364589 x584)) (not (= x584 2512682246)) (not (= x584 1461501637330902918203684832716283019655932542975)) (not (= 2690754053 x584)) (not (= 2532887486 x584)) (not (= x584 2764855426)) (not (= x584 2798343961)) (not (= 635128645 x584)) (not (= 274184521717934524641157099916833587214 x584)) (not (= x584 2258409472)) (not (= 1000000000000000000 x584)) (not (= x584 69947311)) (not (= 649617121 x584)) (not (= x584 2960351575)) (not (= 274184521717934524641157099916833587218 x584)) (not (= 2514000705 x584)) (not (= 911411945 x584)) (not (= x584 26959946667150639794667015087019630673637144422540572481103610249215)) (not (= x584 2743102681)) (not (= x584 468353030)) (not (= 2211524764 x584)) (not (= x584 87118632)) (not (= x584 2939843472)) (not (= 2868243304 x584)) (not (= 2835717307 x584)) (not (= 2061678023 x584)) (not (= 142201243 x584)) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x584)) (not (= 604800 x584)) (not (= 274184521717934524641157099916833587206 x584)) (not (= 2293535753 x584)) (not (= x584 1889567281)) (not (= 76450787359836037641860180984291677749980919077056822294353438043884394381312 x584)) (not (= x584 115792089237316195423570985008687907853269984665640564039457584007913129639904)) (not (= x584 37714057306076988483118529490347679105585116642029194716945419020321082336612)) (not (= x584 18446744073709551615)) (> x584 10000) (not (= 1986467848 x584)) (not (= 1968616202 x584)) (not (= x584 826074471)) (not (= x584 759532456)) (not (= 115792089237316195423570985008687907853269984665640564039457 x584))) (not ((_ is x625) (x1339 x584)))))
(assert (axiom_frac_bound (* 1000000000000000000 x50) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (* 1000000000000000000 x50) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x50 (uninterp_frac (* 1000000000000000000 x50) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x50) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x633 (uninterp_frac (* 1000000000000000000 x50) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x50) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x997 (uninterp_frac (* 1000000000000000000 x50) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x50) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1139 x885 (uninterp_frac (* 1000000000000000000 x50) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x50) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1304 x728 (uninterp_frac (* 1000000000000000000 x50) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x50) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1312 x995 (uninterp_frac (* 1000000000000000000 x50) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x50) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1349 x955 (uninterp_frac (* 1000000000000000000 x50) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x50) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x221 x955 (uninterp_frac (* 1000000000000000000 x50) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x50) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x400 x1289 (uninterp_frac (* 1000000000000000000 x50) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x50) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x622 x728 (uninterp_frac (* 1000000000000000000 x50) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x50) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x667 x805 (uninterp_frac (* 1000000000000000000 x50) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x50) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x728 x622 (uninterp_frac (* 1000000000000000000 x50) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x50) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x805 x667 (uninterp_frac (* 1000000000000000000 x50) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x50) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x955 x1349 (uninterp_frac (* 1000000000000000000 x50) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x50) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x997 32 (uninterp_frac (* 1000000000000000000 x50) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (* 1000000000000000000 x633) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (* 1000000000000000000 x633) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x50 (uninterp_frac (* 1000000000000000000 x633) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x633) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x633 (uninterp_frac (* 1000000000000000000 x633) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x633) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x997 (uninterp_frac (* 1000000000000000000 x633) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x633) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1139 x885 (uninterp_frac (* 1000000000000000000 x633) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x633) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1304 x728 (uninterp_frac (* 1000000000000000000 x633) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x633) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1312 x995 (uninterp_frac (* 1000000000000000000 x633) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x633) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1349 x955 (uninterp_frac (* 1000000000000000000 x633) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x633) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x221 x955 (uninterp_frac (* 1000000000000000000 x633) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x633) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x400 x1289 (uninterp_frac (* 1000000000000000000 x633) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x633) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x622 x728 (uninterp_frac (* 1000000000000000000 x633) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x633) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x667 x805 (uninterp_frac (* 1000000000000000000 x633) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x633) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x728 x622 (uninterp_frac (* 1000000000000000000 x633) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x633) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x805 x667 (uninterp_frac (* 1000000000000000000 x633) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x633) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x955 x1349 (uninterp_frac (* 1000000000000000000 x633) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 1000000000000000000 x633) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x997 32 (uninterp_frac (* 1000000000000000000 x633) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (* 32 x997) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (* 32 x997) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x50 (uninterp_frac (* 32 x997) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x997) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x633 (uninterp_frac (* 32 x997) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x997) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x997 (uninterp_frac (* 32 x997) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x997) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1139 x885 (uninterp_frac (* 32 x997) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x997) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1304 x728 (uninterp_frac (* 32 x997) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x997) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1312 x995 (uninterp_frac (* 32 x997) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x997) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1349 x955 (uninterp_frac (* 32 x997) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x997) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x221 x955 (uninterp_frac (* 32 x997) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x997) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x400 x1289 (uninterp_frac (* 32 x997) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x997) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x622 x728 (uninterp_frac (* 32 x997) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x997) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x667 x805 (uninterp_frac (* 32 x997) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x997) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x728 x622 (uninterp_frac (* 32 x997) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x997) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x805 x667 (uninterp_frac (* 32 x997) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x997) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x955 x1349 (uninterp_frac (* 32 x997) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* 32 x997) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x997 32 (uninterp_frac (* 32 x997) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound (* x997 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (axiom_frac_zero (* x997 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x50 (uninterp_frac (* x997 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x997 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 1000000000000000000 x633 (uninterp_frac (* x997 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x997 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 32 x997 (uninterp_frac (* x997 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x997 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1139 x885 (uninterp_frac (* x997 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x997 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1304 x728 (uninterp_frac (* x997 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x997 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1312 x995 (uninterp_frac (* x997 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x997 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1349 x955 (uninterp_frac (* x997 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x997 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x221 x955 (uninterp_frac (* x997 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x997 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x400 x1289 (uninterp_frac (* x997 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x997 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x622 x728 (uninterp_frac (* x997 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x997 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x667 x805 (uninterp_frac (* x997 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x997 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x728 x622 (uninterp_frac (* x997 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x997 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x805 x667 (uninterp_frac (* x997 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x997 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x955 x1349 (uninterp_frac (* x997 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_zero (* x997 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936 x997 32 (uninterp_frac (* x997 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (axiom_frac_bound x1250 1000000000000000000))
(assert (axiom_frac_zero x1250 1000000000000000000 1000000000000000000 x50 (uninterp_frac x1250 1000000000000000000)))
(assert (axiom_frac_zero x1250 1000000000000000000 1000000000000000000 x633 (uninterp_frac x1250 1000000000000000000)))
(assert (axiom_frac_zero x1250 1000000000000000000 32 x997 (uninterp_frac x1250 1000000000000000000)))
(assert (axiom_frac_zero x1250 1000000000000000000 x1139 x885 (uninterp_frac x1250 1000000000000000000)))
(assert (axiom_frac_zero x1250 1000000000000000000 x1304 x728 (uninterp_frac x1250 1000000000000000000)))
(assert (axiom_frac_zero x1250 1000000000000000000 x1312 x995 (uninterp_frac x1250 1000000000000000000)))
(assert (axiom_frac_zero x1250 1000000000000000000 x1349 x955 (uninterp_frac x1250 1000000000000000000)))
(assert (axiom_frac_zero x1250 1000000000000000000 x221 x955 (uninterp_frac x1250 1000000000000000000)))
(assert (axiom_frac_zero x1250 1000000000000000000 x400 x1289 (uninterp_frac x1250 1000000000000000000)))
(assert (axiom_frac_zero x1250 1000000000000000000 x622 x728 (uninterp_frac x1250 1000000000000000000)))
(assert (axiom_frac_zero x1250 1000000000000000000 x667 x805 (uninterp_frac x1250 1000000000000000000)))
(assert (axiom_frac_zero x1250 1000000000000000000 x728 x622 (uninterp_frac x1250 1000000000000000000)))
(assert (axiom_frac_zero x1250 1000000000000000000 x805 x667 (uninterp_frac x1250 1000000000000000000)))
(assert (axiom_frac_zero x1250 1000000000000000000 x955 x1349 (uninterp_frac x1250 1000000000000000000)))
(assert (axiom_frac_zero x1250 1000000000000000000 x997 32 (uninterp_frac x1250 1000000000000000000)))
(assert (axiom_frac_bound x1336 1000000000000000000))
(assert (axiom_frac_zero x1336 1000000000000000000 1000000000000000000 x50 (uninterp_frac x1336 1000000000000000000)))
(assert (axiom_frac_zero x1336 1000000000000000000 1000000000000000000 x633 (uninterp_frac x1336 1000000000000000000)))
(assert (axiom_frac_zero x1336 1000000000000000000 32 x997 (uninterp_frac x1336 1000000000000000000)))
(assert (axiom_frac_zero x1336 1000000000000000000 x1139 x885 (uninterp_frac x1336 1000000000000000000)))
(assert (axiom_frac_zero x1336 1000000000000000000 x1304 x728 (uninterp_frac x1336 1000000000000000000)))
(assert (axiom_frac_zero x1336 1000000000000000000 x1312 x995 (uninterp_frac x1336 1000000000000000000)))
(assert (axiom_frac_zero x1336 1000000000000000000 x1349 x955 (uninterp_frac x1336 1000000000000000000)))
(assert (axiom_frac_zero x1336 1000000000000000000 x221 x955 (uninterp_frac x1336 1000000000000000000)))
(assert (axiom_frac_zero x1336 1000000000000000000 x400 x1289 (uninterp_frac x1336 1000000000000000000)))
(assert (axiom_frac_zero x1336 1000000000000000000 x622 x728 (uninterp_frac x1336 1000000000000000000)))
(assert (axiom_frac_zero x1336 1000000000000000000 x667 x805 (uninterp_frac x1336 1000000000000000000)))
(assert (axiom_frac_zero x1336 1000000000000000000 x728 x622 (uninterp_frac x1336 1000000000000000000)))
(assert (axiom_frac_zero x1336 1000000000000000000 x805 x667 (uninterp_frac x1336 1000000000000000000)))
(assert (axiom_frac_zero x1336 1000000000000000000 x955 x1349 (uninterp_frac x1336 1000000000000000000)))
(assert (axiom_frac_zero x1336 1000000000000000000 x997 32 (uninterp_frac x1336 1000000000000000000)))
(assert (axiom_frac_bound x380 1000000000000000000))
(assert (axiom_frac_zero x380 1000000000000000000 1000000000000000000 x50 (uninterp_frac x380 1000000000000000000)))
(assert (axiom_frac_zero x380 1000000000000000000 1000000000000000000 x633 (uninterp_frac x380 1000000000000000000)))
(assert (axiom_frac_zero x380 1000000000000000000 32 x997 (uninterp_frac x380 1000000000000000000)))
(assert (axiom_frac_zero x380 1000000000000000000 x1139 x885 (uninterp_frac x380 1000000000000000000)))
(assert (axiom_frac_zero x380 1000000000000000000 x1304 x728 (uninterp_frac x380 1000000000000000000)))
(assert (axiom_frac_zero x380 1000000000000000000 x1312 x995 (uninterp_frac x380 1000000000000000000)))
(assert (axiom_frac_zero x380 1000000000000000000 x1349 x955 (uninterp_frac x380 1000000000000000000)))
(assert (axiom_frac_zero x380 1000000000000000000 x221 x955 (uninterp_frac x380 1000000000000000000)))
(assert (axiom_frac_zero x380 1000000000000000000 x400 x1289 (uninterp_frac x380 1000000000000000000)))
(assert (axiom_frac_zero x380 1000000000000000000 x622 x728 (uninterp_frac x380 1000000000000000000)))
(assert (axiom_frac_zero x380 1000000000000000000 x667 x805 (uninterp_frac x380 1000000000000000000)))
(assert (axiom_frac_zero x380 1000000000000000000 x728 x622 (uninterp_frac x380 1000000000000000000)))
(assert (axiom_frac_zero x380 1000000000000000000 x805 x667 (uninterp_frac x380 1000000000000000000)))
(assert (axiom_frac_zero x380 1000000000000000000 x955 x1349 (uninterp_frac x380 1000000000000000000)))
(assert (axiom_frac_zero x380 1000000000000000000 x997 32 (uninterp_frac x380 1000000000000000000)))
(assert (axiom_frac_bound x58 x614))
(assert (axiom_frac_zero x58 x614 1000000000000000000 x50 (uninterp_frac x58 x614)))
(assert (axiom_frac_zero x58 x614 1000000000000000000 x633 (uninterp_frac x58 x614)))
(assert (axiom_frac_zero x58 x614 32 x997 (uninterp_frac x58 x614)))
(assert (axiom_frac_zero x58 x614 x1139 x885 (uninterp_frac x58 x614)))
(assert (axiom_frac_zero x58 x614 x1304 x728 (uninterp_frac x58 x614)))
(assert (axiom_frac_zero x58 x614 x1312 x995 (uninterp_frac x58 x614)))
(assert (axiom_frac_zero x58 x614 x1349 x955 (uninterp_frac x58 x614)))
(assert (axiom_frac_zero x58 x614 x221 x955 (uninterp_frac x58 x614)))
(assert (axiom_frac_zero x58 x614 x400 x1289 (uninterp_frac x58 x614)))
(assert (axiom_frac_zero x58 x614 x622 x728 (uninterp_frac x58 x614)))
(assert (axiom_frac_zero x58 x614 x667 x805 (uninterp_frac x58 x614)))
(assert (axiom_frac_zero x58 x614 x728 x622 (uninterp_frac x58 x614)))
(assert (axiom_frac_zero x58 x614 x805 x667 (uninterp_frac x58 x614)))
(assert (axiom_frac_zero x58 x614 x955 x1349 (uninterp_frac x58 x614)))
(assert (axiom_frac_zero x58 x614 x997 32 (uninterp_frac x58 x614)))
(assert (axiom_frac_bound x640 1000000000000000000))
(assert (axiom_frac_zero x640 1000000000000000000 1000000000000000000 x50 (uninterp_frac x640 1000000000000000000)))
(assert (axiom_frac_zero x640 1000000000000000000 1000000000000000000 x633 (uninterp_frac x640 1000000000000000000)))
(assert (axiom_frac_zero x640 1000000000000000000 32 x997 (uninterp_frac x640 1000000000000000000)))
(assert (axiom_frac_zero x640 1000000000000000000 x1139 x885 (uninterp_frac x640 1000000000000000000)))
(assert (axiom_frac_zero x640 1000000000000000000 x1304 x728 (uninterp_frac x640 1000000000000000000)))
(assert (axiom_frac_zero x640 1000000000000000000 x1312 x995 (uninterp_frac x640 1000000000000000000)))
(assert (axiom_frac_zero x640 1000000000000000000 x1349 x955 (uninterp_frac x640 1000000000000000000)))
(assert (axiom_frac_zero x640 1000000000000000000 x221 x955 (uninterp_frac x640 1000000000000000000)))
(assert (axiom_frac_zero x640 1000000000000000000 x400 x1289 (uninterp_frac x640 1000000000000000000)))
(assert (axiom_frac_zero x640 1000000000000000000 x622 x728 (uninterp_frac x640 1000000000000000000)))
(assert (axiom_frac_zero x640 1000000000000000000 x667 x805 (uninterp_frac x640 1000000000000000000)))
(assert (axiom_frac_zero x640 1000000000000000000 x728 x622 (uninterp_frac x640 1000000000000000000)))
(assert (axiom_frac_zero x640 1000000000000000000 x805 x667 (uninterp_frac x640 1000000000000000000)))
(assert (axiom_frac_zero x640 1000000000000000000 x955 x1349 (uninterp_frac x640 1000000000000000000)))
(assert (axiom_frac_zero x640 1000000000000000000 x997 32 (uninterp_frac x640 1000000000000000000)))
(assert (axiom_frac_bound x705 x946))
(assert (axiom_frac_zero x705 x946 1000000000000000000 x50 (uninterp_frac x705 x946)))
(assert (axiom_frac_zero x705 x946 1000000000000000000 x633 (uninterp_frac x705 x946)))
(assert (axiom_frac_zero x705 x946 32 x997 (uninterp_frac x705 x946)))
(assert (axiom_frac_zero x705 x946 x1139 x885 (uninterp_frac x705 x946)))
(assert (axiom_frac_zero x705 x946 x1304 x728 (uninterp_frac x705 x946)))
(assert (axiom_frac_zero x705 x946 x1312 x995 (uninterp_frac x705 x946)))
(assert (axiom_frac_zero x705 x946 x1349 x955 (uninterp_frac x705 x946)))
(assert (axiom_frac_zero x705 x946 x221 x955 (uninterp_frac x705 x946)))
(assert (axiom_frac_zero x705 x946 x400 x1289 (uninterp_frac x705 x946)))
(assert (axiom_frac_zero x705 x946 x622 x728 (uninterp_frac x705 x946)))
(assert (axiom_frac_zero x705 x946 x667 x805 (uninterp_frac x705 x946)))
(assert (axiom_frac_zero x705 x946 x728 x622 (uninterp_frac x705 x946)))
(assert (axiom_frac_zero x705 x946 x805 x667 (uninterp_frac x705 x946)))
(assert (axiom_frac_zero x705 x946 x955 x1349 (uninterp_frac x705 x946)))
(assert (axiom_frac_zero x705 x946 x997 32 (uninterp_frac x705 x946)))
(assert (axiom_int_approximation x10))
(assert (axiom_int_approximation x1000))
(assert (axiom_int_approximation x1001))
(assert (axiom_int_approximation x1008))
(assert (axiom_int_approximation x1009))
(assert (axiom_int_approximation x1013))
(assert (axiom_int_approximation x1014))
(assert (axiom_int_approximation x1015))
(assert (axiom_int_approximation x1016))
(assert (axiom_int_approximation x1019))
(assert (axiom_int_approximation x1020))
(assert (axiom_int_approximation x1024))
(assert (axiom_int_approximation x1028))
(assert (axiom_int_approximation x103))
(assert (axiom_int_approximation x1030))
(assert (axiom_int_approximation x1032))
(assert (axiom_int_approximation x1034))
(assert (axiom_int_approximation x1035))
(assert (axiom_int_approximation x1038))
(assert (axiom_int_approximation x1039))
(assert (axiom_int_approximation x104))
(assert (axiom_int_approximation x1040))
(assert (axiom_int_approximation x1041))
(assert (axiom_int_approximation x1045))
(assert (axiom_int_approximation x105))
(assert (axiom_int_approximation x1050))
(assert (axiom_int_approximation x1054))
(assert (axiom_int_approximation x1055))
(assert (axiom_int_approximation x1058))
(assert (axiom_int_approximation x1060))
(assert (axiom_int_approximation x1064))
(assert (axiom_int_approximation x1069))
(assert (axiom_int_approximation x1071))
(assert (axiom_int_approximation x1072))
(assert (axiom_int_approximation x1076))
(assert (axiom_int_approximation x1077))
(assert (axiom_int_approximation x108))
(assert (axiom_int_approximation x1081))
(assert (axiom_int_approximation x1085))
(assert (axiom_int_approximation x1086))
(assert (axiom_int_approximation x1088))
(assert (axiom_int_approximation x1089))
(assert (axiom_int_approximation x109))
(assert (axiom_int_approximation x1092))
(assert (axiom_int_approximation x1094))
(assert (axiom_int_approximation x1095))
(assert (axiom_int_approximation x1096))
(assert (axiom_int_approximation x110))
(assert (axiom_int_approximation x1100))
(assert (axiom_int_approximation x1101))
(assert (axiom_int_approximation x1103))
(assert (axiom_int_approximation x1106))
(assert (axiom_int_approximation x111))
(assert (axiom_int_approximation x1112))
(assert (axiom_int_approximation x1113))
(assert (axiom_int_approximation x1114))
(assert (axiom_int_approximation x1116))
(assert (axiom_int_approximation x1117))
(assert (axiom_int_approximation x112))
(assert (axiom_int_approximation x1120))
(assert (axiom_int_approximation x1122))
(assert (axiom_int_approximation x1123))
(assert (axiom_int_approximation x1124))
(assert (axiom_int_approximation x1125))
(assert (axiom_int_approximation x1126))
(assert (axiom_int_approximation x1127))
(assert (axiom_int_approximation x1128))
(assert (axiom_int_approximation x113))
(assert (axiom_int_approximation x1130))
(assert (axiom_int_approximation x1132))
(assert (axiom_int_approximation x1133))
(assert (axiom_int_approximation x1134))
(assert (axiom_int_approximation x1139))
(assert (axiom_int_approximation x1140))
(assert (axiom_int_approximation x1142))
(assert (axiom_int_approximation x1144))
(assert (axiom_int_approximation x1148))
(assert (axiom_int_approximation x1149))
(assert (axiom_int_approximation x1150))
(assert (axiom_int_approximation x1152))
(assert (axiom_int_approximation x1153))
(assert (axiom_int_approximation x1158))
(assert (axiom_int_approximation x1159))
(assert (axiom_int_approximation x1163))
(assert (axiom_int_approximation x1167))
(assert (axiom_int_approximation x1168))
(assert (axiom_int_approximation x117))
(assert (axiom_int_approximation x1170))
(assert (axiom_int_approximation x1174))
(assert (axiom_int_approximation x1176))
(assert (axiom_int_approximation x1178))
(assert (axiom_int_approximation x1179))
(assert (axiom_int_approximation x118))
(assert (axiom_int_approximation x1180))
(assert (axiom_int_approximation x1183))
(assert (axiom_int_approximation x1184))
(assert (axiom_int_approximation x1185))
(assert (axiom_int_approximation x1187))
(assert (axiom_int_approximation x1196))
(assert (axiom_int_approximation x1198))
(assert (axiom_int_approximation x12))
(assert (axiom_int_approximation x1200))
(assert (axiom_int_approximation x1202))
(assert (axiom_int_approximation x1204))
(assert (axiom_int_approximation x1208))
(assert (axiom_int_approximation x1209))
(assert (axiom_int_approximation x121))
(assert (axiom_int_approximation x1210))
(assert (axiom_int_approximation x1212))
(assert (axiom_int_approximation x1213))
(assert (axiom_int_approximation x122))
(assert (axiom_int_approximation x1222))
(assert (axiom_int_approximation x1227))
(assert (axiom_int_approximation x1228))
(assert (axiom_int_approximation x1229))
(assert (axiom_int_approximation x1233))
(assert (axiom_int_approximation x1234))
(assert (axiom_int_approximation x1236))
(assert (axiom_int_approximation x1239))
(assert (axiom_int_approximation x124))
(assert (axiom_int_approximation x1241))
(assert (axiom_int_approximation x1242))
(assert (axiom_int_approximation x1243))
(assert (axiom_int_approximation x1245))
(assert (axiom_int_approximation x1246))
(assert (axiom_int_approximation x1248))
(assert (axiom_int_approximation x1250))
(assert (axiom_int_approximation x1254))
(assert (axiom_int_approximation x1256))
(assert (axiom_int_approximation x1258))
(assert (axiom_int_approximation x1259))
(assert (axiom_int_approximation x1260))
(assert (axiom_int_approximation x1261))
(assert (axiom_int_approximation x1263))
(assert (axiom_int_approximation x1268))
(assert (axiom_int_approximation x1271))
(assert (axiom_int_approximation x1272))
(assert (axiom_int_approximation x1274))
(assert (axiom_int_approximation x1275))
(assert (axiom_int_approximation x1276))
(assert (axiom_int_approximation x1277))
(assert (axiom_int_approximation x1279))
(assert (axiom_int_approximation x128))
(assert (axiom_int_approximation x1281))
(assert (axiom_int_approximation x1283))
(assert (axiom_int_approximation x1285))
(assert (axiom_int_approximation x1286))
(assert (axiom_int_approximation x1288))
(assert (axiom_int_approximation x1289))
(assert (axiom_int_approximation x129))
(assert (axiom_int_approximation x1291))
(assert (axiom_int_approximation x1292))
(assert (axiom_int_approximation x1294))
(assert (axiom_int_approximation x1295))
(assert (axiom_int_approximation x1296))
(assert (axiom_int_approximation x1297))
(assert (axiom_int_approximation x1298))
(assert (axiom_int_approximation x1299))
(assert (axiom_int_approximation x130))
(assert (axiom_int_approximation x1300))
(assert (axiom_int_approximation x1301))
(assert (axiom_int_approximation x1302))
(assert (axiom_int_approximation x1303))
(assert (axiom_int_approximation x1304))
(assert (axiom_int_approximation x1307))
(assert (axiom_int_approximation x1308))
(assert (axiom_int_approximation x1309))
(assert (axiom_int_approximation x1312))
(assert (axiom_int_approximation x1316))
(assert (axiom_int_approximation x1318))
(assert (axiom_int_approximation x1319))
(assert (axiom_int_approximation x132))
(assert (axiom_int_approximation x1321))
(assert (axiom_int_approximation x1322))
(assert (axiom_int_approximation x1323))
(assert (axiom_int_approximation x1327))
(assert (axiom_int_approximation x1330))
(assert (axiom_int_approximation x1334))
(assert (axiom_int_approximation x1336))
(assert (axiom_int_approximation x1343))
(assert (axiom_int_approximation x1349))
(assert (axiom_int_approximation x135))
(assert (axiom_int_approximation x1353))
(assert (axiom_int_approximation x1354))
(assert (axiom_int_approximation x1356))
(assert (axiom_int_approximation x1358))
(assert (axiom_int_approximation x1359))
(assert (axiom_int_approximation x136))
(assert (axiom_int_approximation x1362))
(assert (axiom_int_approximation x1367))
(assert (axiom_int_approximation x1373))
(assert (axiom_int_approximation x1374))
(assert (axiom_int_approximation x1376))
(assert (axiom_int_approximation x1379))
(assert (axiom_int_approximation x138))
(assert (axiom_int_approximation x1381))
(assert (axiom_int_approximation x1385))
(assert (axiom_int_approximation x1389))
(assert (axiom_int_approximation x139))
(assert (axiom_int_approximation x1396))
(assert (axiom_int_approximation x1398))
(assert (axiom_int_approximation x14))
(assert (axiom_int_approximation x1400))
(assert (axiom_int_approximation x1401))
(assert (axiom_int_approximation x1406))
(assert (axiom_int_approximation x1409))
(assert (axiom_int_approximation x141))
(assert (axiom_int_approximation x1410))
(assert (axiom_int_approximation x1411))
(assert (axiom_int_approximation x1412))
(assert (axiom_int_approximation x1414))
(assert (axiom_int_approximation x1419))
(assert (axiom_int_approximation x1420))
(assert (axiom_int_approximation x1423))
(assert (axiom_int_approximation x1426))
(assert (axiom_int_approximation x1427))
(assert (axiom_int_approximation x1428))
(assert (axiom_int_approximation x143))
(assert (axiom_int_approximation x1430))
(assert (axiom_int_approximation x1431))
(assert (axiom_int_approximation x1437))
(assert (axiom_int_approximation x1439))
(assert (axiom_int_approximation x144))
(assert (axiom_int_approximation x1440))
(assert (axiom_int_approximation x1441))
(assert (axiom_int_approximation x1442))
(assert (axiom_int_approximation x1443))
(assert (axiom_int_approximation x1448))
(assert (axiom_int_approximation x1449))
(assert (axiom_int_approximation x145))
(assert (axiom_int_approximation x1450))
(assert (axiom_int_approximation x1451))
(assert (axiom_int_approximation x1452))
(assert (axiom_int_approximation x1455))
(assert (axiom_int_approximation x1458))
(assert (axiom_int_approximation x1460))
(assert (axiom_int_approximation x1461))
(assert (axiom_int_approximation x1462))
(assert (axiom_int_approximation x1466))
(assert (axiom_int_approximation x147))
(assert (axiom_int_approximation x1470))
(assert (axiom_int_approximation x1471))
(assert (axiom_int_approximation x1472))
(assert (axiom_int_approximation x1476))
(assert (axiom_int_approximation x1485))
(assert (axiom_int_approximation x1488))
(assert (axiom_int_approximation x1489))
(assert (axiom_int_approximation x149))
(assert (axiom_int_approximation x1490))
(assert (axiom_int_approximation x1491))
(assert (axiom_int_approximation x1493))
(assert (axiom_int_approximation x1495))
(assert (axiom_int_approximation x1499))
(assert (axiom_int_approximation x15))
(assert (axiom_int_approximation x1500))
(assert (axiom_int_approximation x1505))
(assert (axiom_int_approximation x1508))
(assert (axiom_int_approximation x1509))
(assert (axiom_int_approximation x151))
(assert (axiom_int_approximation x1510))
(assert (axiom_int_approximation x1512))
(assert (axiom_int_approximation x1518))
(assert (axiom_int_approximation x152))
(assert (axiom_int_approximation x1520))
(assert (axiom_int_approximation x1522))
(assert (axiom_int_approximation x1525))
(assert (axiom_int_approximation x1528))
(assert (axiom_int_approximation x1532))
(assert (axiom_int_approximation x1534))
(assert (axiom_int_approximation x1535))
(assert (axiom_int_approximation x1537))
(assert (axiom_int_approximation x154))
(assert (axiom_int_approximation x1540))
(assert (axiom_int_approximation x1544))
(assert (axiom_int_approximation x1546))
(assert (axiom_int_approximation x1548))
(assert (axiom_int_approximation x1549))
(assert (axiom_int_approximation x1551))
(assert (axiom_int_approximation x1555))
(assert (axiom_int_approximation x1556))
(assert (axiom_int_approximation x1558))
(assert (axiom_int_approximation x1559))
(assert (axiom_int_approximation x156))
(assert (axiom_int_approximation x1561))
(assert (axiom_int_approximation x1562))
(assert (axiom_int_approximation x1564))
(assert (axiom_int_approximation x1567))
(assert (axiom_int_approximation x1568))
(assert (axiom_int_approximation x1569))
(assert (axiom_int_approximation x1572))
(assert (axiom_int_approximation x1573))
(assert (axiom_int_approximation x1575))
(assert (axiom_int_approximation x1576))
(assert (axiom_int_approximation x1577))
(assert (axiom_int_approximation x1578))
(assert (axiom_int_approximation x158))
(assert (axiom_int_approximation x1580))
(assert (axiom_int_approximation x1584))
(assert (axiom_int_approximation x1585))
(assert (axiom_int_approximation x1590))
(assert (axiom_int_approximation x1594))
(assert (axiom_int_approximation x1595))
(assert (axiom_int_approximation x1598))
(assert (axiom_int_approximation x1599))
(assert (axiom_int_approximation x160))
(assert (axiom_int_approximation x1600))
(assert (axiom_int_approximation x1601))
(assert (axiom_int_approximation x1602))
(assert (axiom_int_approximation x1604))
(assert (axiom_int_approximation x1607))
(assert (axiom_int_approximation x1609))
(assert (axiom_int_approximation x161))
(assert (axiom_int_approximation x1611))
(assert (axiom_int_approximation x1612))
(assert (axiom_int_approximation x1613))
(assert (axiom_int_approximation x163))
(assert (axiom_int_approximation x164))
(assert (axiom_int_approximation x166))
(assert (axiom_int_approximation x169))
(assert (axiom_int_approximation x171))
(assert (axiom_int_approximation x173))
(assert (axiom_int_approximation x174))
(assert (axiom_int_approximation x176))
(assert (axiom_int_approximation x178))
(assert (axiom_int_approximation x179))
(assert (axiom_int_approximation x18))
(assert (axiom_int_approximation x182))
(assert (axiom_int_approximation x183))
(assert (axiom_int_approximation x185))
(assert (axiom_int_approximation x187))
(assert (axiom_int_approximation x190))
(assert (axiom_int_approximation x193))
(assert (axiom_int_approximation x194))
(assert (axiom_int_approximation x196))
(assert (axiom_int_approximation x200))
(assert (axiom_int_approximation x203))
(assert (axiom_int_approximation x204))
(assert (axiom_int_approximation x205))
(assert (axiom_int_approximation x206))
(assert (axiom_int_approximation x208))
(assert (axiom_int_approximation x212))
(assert (axiom_int_approximation x213))
(assert (axiom_int_approximation x215))
(assert (axiom_int_approximation x218))
(assert (axiom_int_approximation x22))
(assert (axiom_int_approximation x221))
(assert (axiom_int_approximation x222))
(assert (axiom_int_approximation x223))
(assert (axiom_int_approximation x225))
(assert (axiom_int_approximation x226))
(assert (axiom_int_approximation x23))
(assert (axiom_int_approximation x230))
(assert (axiom_int_approximation x237))
(assert (axiom_int_approximation x24))
(assert (axiom_int_approximation x240))
(assert (axiom_int_approximation x241))
(assert (axiom_int_approximation x242))
(assert (axiom_int_approximation x243))
(assert (axiom_int_approximation x247))
(assert (axiom_int_approximation x248))
(assert (axiom_int_approximation x25))
(assert (axiom_int_approximation x251))
(assert (axiom_int_approximation x252))
(assert (axiom_int_approximation x254))
(assert (axiom_int_approximation x255))
(assert (axiom_int_approximation x260))
(assert (axiom_int_approximation x267))
(assert (axiom_int_approximation x268))
(assert (axiom_int_approximation x269))
(assert (axiom_int_approximation x273))
(assert (axiom_int_approximation x274))
(assert (axiom_int_approximation x275))
(assert (axiom_int_approximation x277))
(assert (axiom_int_approximation x28))
(assert (axiom_int_approximation x280))
(assert (axiom_int_approximation x281))
(assert (axiom_int_approximation x283))
(assert (axiom_int_approximation x284))
(assert (axiom_int_approximation x285))
(assert (axiom_int_approximation x286))
(assert (axiom_int_approximation x289))
(assert (axiom_int_approximation x29))
(assert (axiom_int_approximation x293))
(assert (axiom_int_approximation x295))
(assert (axiom_int_approximation x298))
(assert (axiom_int_approximation x299))
(assert (axiom_int_approximation x3))
(assert (axiom_int_approximation x300))
(assert (axiom_int_approximation x303))
(assert (axiom_int_approximation x304))
(assert (axiom_int_approximation x308))
(assert (axiom_int_approximation x309))
(assert (axiom_int_approximation x31))
(assert (axiom_int_approximation x312))
(assert (axiom_int_approximation x313))
(assert (axiom_int_approximation x314))
(assert (axiom_int_approximation x316))
(assert (axiom_int_approximation x318))
(assert (axiom_int_approximation x323))
(assert (axiom_int_approximation x324))
(assert (axiom_int_approximation x326))
(assert (axiom_int_approximation x327))
(assert (axiom_int_approximation x329))
(assert (axiom_int_approximation x332))
(assert (axiom_int_approximation x333))
(assert (axiom_int_approximation x336))
(assert (axiom_int_approximation x337))
(assert (axiom_int_approximation x341))
(assert (axiom_int_approximation x343))
(assert (axiom_int_approximation x344))
(assert (axiom_int_approximation x349))
(assert (axiom_int_approximation x35))
(assert (axiom_int_approximation x351))
(assert (axiom_int_approximation x352))
(assert (axiom_int_approximation x353))
(assert (axiom_int_approximation x354))
(assert (axiom_int_approximation x356))
(assert (axiom_int_approximation x357))
(assert (axiom_int_approximation x361))
(assert (axiom_int_approximation x368))
(assert (axiom_int_approximation x37))
(assert (axiom_int_approximation x372))
(assert (axiom_int_approximation x374))
(assert (axiom_int_approximation x375))
(assert (axiom_int_approximation x376))
(assert (axiom_int_approximation x379))
(assert (axiom_int_approximation x380))
(assert (axiom_int_approximation x382))
(assert (axiom_int_approximation x383))
(assert (axiom_int_approximation x384))
(assert (axiom_int_approximation x385))
(assert (axiom_int_approximation x386))
(assert (axiom_int_approximation x389))
(assert (axiom_int_approximation x390))
(assert (axiom_int_approximation x391))
(assert (axiom_int_approximation x392))
(assert (axiom_int_approximation x393))
(assert (axiom_int_approximation x399))
(assert (axiom_int_approximation x400))
(assert (axiom_int_approximation x404))
(assert (axiom_int_approximation x406))
(assert (axiom_int_approximation x41))
(assert (axiom_int_approximation x416))
(assert (axiom_int_approximation x419))
(assert (axiom_int_approximation x422))
(assert (axiom_int_approximation x424))
(assert (axiom_int_approximation x426))
(assert (axiom_int_approximation x427))
(assert (axiom_int_approximation x430))
(assert (axiom_int_approximation x433))
(assert (axiom_int_approximation x435))
(assert (axiom_int_approximation x438))
(assert (axiom_int_approximation x441))
(assert (axiom_int_approximation x442))
(assert (axiom_int_approximation x445))
(assert (axiom_int_approximation x448))
(assert (axiom_int_approximation x449))
(assert (axiom_int_approximation x450))
(assert (axiom_int_approximation x451))
(assert (axiom_int_approximation x455))
(assert (axiom_int_approximation x457))
(assert (axiom_int_approximation x459))
(assert (axiom_int_approximation x46))
(assert (axiom_int_approximation x460))
(assert (axiom_int_approximation x466))
(assert (axiom_int_approximation x470))
(assert (axiom_int_approximation x476))
(assert (axiom_int_approximation x477))
(assert (axiom_int_approximation x479))
(assert (axiom_int_approximation x48))
(assert (axiom_int_approximation x480))
(assert (axiom_int_approximation x481))
(assert (axiom_int_approximation x484))
(assert (axiom_int_approximation x485))
(assert (axiom_int_approximation x487))
(assert (axiom_int_approximation x492))
(assert (axiom_int_approximation x493))
(assert (axiom_int_approximation x496))
(assert (axiom_int_approximation x497))
(assert (axiom_int_approximation x50))
(assert (axiom_int_approximation x500))
(assert (axiom_int_approximation x502))
(assert (axiom_int_approximation x505))
(assert (axiom_int_approximation x507))
(assert (axiom_int_approximation x509))
(assert (axiom_int_approximation x51))
(assert (axiom_int_approximation x512))
(assert (axiom_int_approximation x513))
(assert (axiom_int_approximation x515))
(assert (axiom_int_approximation x516))
(assert (axiom_int_approximation x517))
(assert (axiom_int_approximation x519))
(assert (axiom_int_approximation x52))
(assert (axiom_int_approximation x520))
(assert (axiom_int_approximation x521))
(assert (axiom_int_approximation x523))
(assert (axiom_int_approximation x527))
(assert (axiom_int_approximation x528))
(assert (axiom_int_approximation x529))
(assert (axiom_int_approximation x53))
(assert (axiom_int_approximation x530))
(assert (axiom_int_approximation x531))
(assert (axiom_int_approximation x532))
(assert (axiom_int_approximation x533))
(assert (axiom_int_approximation x534))
(assert (axiom_int_approximation x535))
(assert (axiom_int_approximation x537))
(assert (axiom_int_approximation x541))
(assert (axiom_int_approximation x543))
(assert (axiom_int_approximation x548))
(assert (axiom_int_approximation x550))
(assert (axiom_int_approximation x552))
(assert (axiom_int_approximation x556))
(assert (axiom_int_approximation x558))
(assert (axiom_int_approximation x562))
(assert (axiom_int_approximation x564))
(assert (axiom_int_approximation x575))
(assert (axiom_int_approximation x576))
(assert (axiom_int_approximation x578))
(assert (axiom_int_approximation x58))
(assert (axiom_int_approximation x580))
(assert (axiom_int_approximation x581))
(assert (axiom_int_approximation x586))
(assert (axiom_int_approximation x588))
(assert (axiom_int_approximation x589))
(assert (axiom_int_approximation x59))
(assert (axiom_int_approximation x593))
(assert (axiom_int_approximation x596))
(assert (axiom_int_approximation x597))
(assert (axiom_int_approximation x60))
(assert (axiom_int_approximation x600))
(assert (axiom_int_approximation x601))
(assert (axiom_int_approximation x604))
(assert (axiom_int_approximation x608))
(assert (axiom_int_approximation x614))
(assert (axiom_int_approximation x616))
(assert (axiom_int_approximation x617))
(assert (axiom_int_approximation x618))
(assert (axiom_int_approximation x619))
(assert (axiom_int_approximation x62))
(assert (axiom_int_approximation x621))
(assert (axiom_int_approximation x622))
(assert (axiom_int_approximation x623))
(assert (axiom_int_approximation x624))
(assert (axiom_int_approximation x628))
(assert (axiom_int_approximation x631))
(assert (axiom_int_approximation x633))
(assert (axiom_int_approximation x635))
(assert (axiom_int_approximation x637))
(assert (axiom_int_approximation x64))
(assert (axiom_int_approximation x640))
(assert (axiom_int_approximation x642))
(assert (axiom_int_approximation x643))
(assert (axiom_int_approximation x644))
(assert (axiom_int_approximation x646))
(assert (axiom_int_approximation x647))
(assert (axiom_int_approximation x650))
(assert (axiom_int_approximation x656))
(assert (axiom_int_approximation x659))
(assert (axiom_int_approximation x660))
(assert (axiom_int_approximation x661))
(assert (axiom_int_approximation x664))
(assert (axiom_int_approximation x667))
(assert (axiom_int_approximation x669))
(assert (axiom_int_approximation x67))
(assert (axiom_int_approximation x672))
(assert (axiom_int_approximation x673))
(assert (axiom_int_approximation x675))
(assert (axiom_int_approximation x680))
(assert (axiom_int_approximation x683))
(assert (axiom_int_approximation x684))
(assert (axiom_int_approximation x686))
(assert (axiom_int_approximation x688))
(assert (axiom_int_approximation x695))
(assert (axiom_int_approximation x697))
(assert (axiom_int_approximation x7))
(assert (axiom_int_approximation x70))
(assert (axiom_int_approximation x705))
(assert (axiom_int_approximation x708))
(assert (axiom_int_approximation x709))
(assert (axiom_int_approximation x711))
(assert (axiom_int_approximation x714))
(assert (axiom_int_approximation x716))
(assert (axiom_int_approximation x717))
(assert (axiom_int_approximation x720))
(assert (axiom_int_approximation x725))
(assert (axiom_int_approximation x727))
(assert (axiom_int_approximation x728))
(assert (axiom_int_approximation x73))
(assert (axiom_int_approximation x732))
(assert (axiom_int_approximation x733))
(assert (axiom_int_approximation x734))
(assert (axiom_int_approximation x736))
(assert (axiom_int_approximation x737))
(assert (axiom_int_approximation x738))
(assert (axiom_int_approximation x739))
(assert (axiom_int_approximation x741))
(assert (axiom_int_approximation x742))
(assert (axiom_int_approximation x743))
(assert (axiom_int_approximation x745))
(assert (axiom_int_approximation x747))
(assert (axiom_int_approximation x750))
(assert (axiom_int_approximation x751))
(assert (axiom_int_approximation x755))
(assert (axiom_int_approximation x756))
(assert (axiom_int_approximation x760))
(assert (axiom_int_approximation x761))
(assert (axiom_int_approximation x764))
(assert (axiom_int_approximation x766))
(assert (axiom_int_approximation x768))
(assert (axiom_int_approximation x770))
(assert (axiom_int_approximation x772))
(assert (axiom_int_approximation x773))
(assert (axiom_int_approximation x775))
(assert (axiom_int_approximation x777))
(assert (axiom_int_approximation x778))
(assert (axiom_int_approximation x78))
(assert (axiom_int_approximation x781))
(assert (axiom_int_approximation x783))
(assert (axiom_int_approximation x784))
(assert (axiom_int_approximation x786))
(assert (axiom_int_approximation x787))
(assert (axiom_int_approximation x789))
(assert (axiom_int_approximation x79))
(assert (axiom_int_approximation x790))
(assert (axiom_int_approximation x791))
(assert (axiom_int_approximation x793))
(assert (axiom_int_approximation x794))
(assert (axiom_int_approximation x797))
(assert (axiom_int_approximation x798))
(assert (axiom_int_approximation x799))
(assert (axiom_int_approximation x800))
(assert (axiom_int_approximation x804))
(assert (axiom_int_approximation x805))
(assert (axiom_int_approximation x806))
(assert (axiom_int_approximation x809))
(assert (axiom_int_approximation x811))
(assert (axiom_int_approximation x812))
(assert (axiom_int_approximation x814))
(assert (axiom_int_approximation x815))
(assert (axiom_int_approximation x822))
(assert (axiom_int_approximation x823))
(assert (axiom_int_approximation x824))
(assert (axiom_int_approximation x825))
(assert (axiom_int_approximation x827))
(assert (axiom_int_approximation x83))
(assert (axiom_int_approximation x833))
(assert (axiom_int_approximation x835))
(assert (axiom_int_approximation x836))
(assert (axiom_int_approximation x838))
(assert (axiom_int_approximation x839))
(assert (axiom_int_approximation x84))
(assert (axiom_int_approximation x842))
(assert (axiom_int_approximation x843))
(assert (axiom_int_approximation x845))
(assert (axiom_int_approximation x846))
(assert (axiom_int_approximation x847))
(assert (axiom_int_approximation x848))
(assert (axiom_int_approximation x849))
(assert (axiom_int_approximation x851))
(assert (axiom_int_approximation x852))
(assert (axiom_int_approximation x853))
(assert (axiom_int_approximation x855))
(assert (axiom_int_approximation x856))
(assert (axiom_int_approximation x858))
(assert (axiom_int_approximation x860))
(assert (axiom_int_approximation x862))
(assert (axiom_int_approximation x865))
(assert (axiom_int_approximation x866))
(assert (axiom_int_approximation x869))
(assert (axiom_int_approximation x871))
(assert (axiom_int_approximation x875))
(assert (axiom_int_approximation x878))
(assert (axiom_int_approximation x879))
(assert (axiom_int_approximation x882))
(assert (axiom_int_approximation x884))
(assert (axiom_int_approximation x885))
(assert (axiom_int_approximation x890))
(assert (axiom_int_approximation x894))
(assert (axiom_int_approximation x895))
(assert (axiom_int_approximation x897))
(assert (axiom_int_approximation x898))
(assert (axiom_int_approximation x899))
(assert (axiom_int_approximation x9))
(assert (axiom_int_approximation x903))
(assert (axiom_int_approximation x904))
(assert (axiom_int_approximation x905))
(assert (axiom_int_approximation x906))
(assert (axiom_int_approximation x908))
(assert (axiom_int_approximation x909))
(assert (axiom_int_approximation x91))
(assert (axiom_int_approximation x911))
(assert (axiom_int_approximation x913))
(assert (axiom_int_approximation x914))
(assert (axiom_int_approximation x915))
(assert (axiom_int_approximation x918))
(assert (axiom_int_approximation x920))
(assert (axiom_int_approximation x921))
(assert (axiom_int_approximation x926))
(assert (axiom_int_approximation x927))
(assert (axiom_int_approximation x928))
(assert (axiom_int_approximation x935))
(assert (axiom_int_approximation x936))
(assert (axiom_int_approximation x940))
(assert (axiom_int_approximation x941))
(assert (axiom_int_approximation x942))
(assert (axiom_int_approximation x945))
(assert (axiom_int_approximation x946))
(assert (axiom_int_approximation x948))
(assert (axiom_int_approximation x951))
(assert (axiom_int_approximation x953))
(assert (axiom_int_approximation x954))
(assert (axiom_int_approximation x955))
(assert (axiom_int_approximation x957))
(assert (axiom_int_approximation x958))
(assert (axiom_int_approximation x959))
(assert (axiom_int_approximation x962))
(assert (axiom_int_approximation x964))
(assert (axiom_int_approximation x969))
(assert (axiom_int_approximation x97))
(assert (axiom_int_approximation x970))
(assert (axiom_int_approximation x971))
(assert (axiom_int_approximation x979))
(assert (axiom_int_approximation x98))
(assert (axiom_int_approximation x983))
(assert (axiom_int_approximation x984))
(assert (axiom_int_approximation x985))
(assert (axiom_int_approximation x99))
(assert (axiom_int_approximation x994))
(assert (axiom_int_approximation x995))
(assert (axiom_int_approximation x997))
(assert (axiom_int_approximation x998))
(assert (= (and x1010 x613) x1109))
(assert (x85 x1296))
(assert (x549 x1276))
(assert (= (x1380 x1439) (ite (= x1362 x1439) x1258 (x401 x1439))))
(assert (= x1357 (or (and (not x1047) x508) (and (not x1010) x613))))
(assert (= x1398 (x401 x1148)))
(assert (= (=> (and (= (x1135 1461501637330902918203684832716283019655932542975 x908) x1585) (= (x257 x1012 1) x1029) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x527) (= (= x390 0) x900) (= x609 (x462 (x1339 x1081) (x625 6) 0)) (or (and (= x232 (x462 (x1339 x1081) (x625 10) 0)) (not x900) (= (x1135 1461501637330902918203684832716283019655932542975 x1127) x286) (= (x462 (x1339 x286) x232 0) x340)) x900) (= x1065 (x462 (x1339 x747) x917 0)) (= x946 (x1190 x1065)) (>= x946 0) (= x1433 (x462 (x1339 x1437) x813 0)) (= (= x633 0) x1131) (= (x224 x72) x633) (>= x633 0) (= (x462 (x1339 x502) x609 0) x690) (= x527 (x437 x1012)) (= x502 (x1135 1461501637330902918203684832716283019655932542975 x1127)) (= x1440 (x1223 (+ 64 x1236))) (= x754 (= 0 x667)) (= x747 (x1135 1461501637330902918203684832716283019655932542975 x1127)) (= x1012 (x462 (x1339 x1081) (x625 1) 0)) (or (and (= (x1083 x1222) x1134) (= (= 0 x500) x1468) (or (and (not x657) (= x1058 x793)) (and x657 (= (x1083 x1222) x1613) (= x1613 x1058))) (= (< x1134 x793) x657) (or (and (= (ite (> 604800 x1406) x1406 604800) x1291) (not (> x500 x1058)) (= (x574 (- x1058 x500)) x1406) (= x667 x1291) (not x1468) (= x789 604800)) (and x1468 (= (x574 (- x1058 x791)) x596) (= x596 x667) (not (> x791 x1058)) (= x791 (x1083 x1236)))) x1237) (and (= 0 x667) (not x1237))) (>= x527 0) (= (x462 (x1339 x1585) x1433 0) x72) (>= x500 0) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x946) (= x52 (x1083 x1222)) (or (and (= x1596 (x462 (x1339 x1081) (x625 5) 0)) (= x1243 (x1135 1461501637330902918203684832716283019655932542975 x1127)) (= x1014 x470) (<= x1512 115792089237316195423570985008687907853269984665640564039457584007913129639935) (< (* x667 x805) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (not x754) (< (+ x470 x1512) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (>= x1512 0) (= x1512 x953) (= x470 x936) (= (x462 (x1339 x1243) x1596 0) x1320) (= x1512 (x282 x1320)) (= x520 (+ x953 x936)) (= x1014 (* x805 x667)) (= x115 (x462 (x1339 x3) x47 0)) (= (x462 (x1339 x1081) (x625 6) 0) x47) (= (x1135 1461501637330902918203684832716283019655932542975 x1127) x3)) (and x754 (= x152 (x1135 1461501637330902918203684832716283019655932542975 x1127)) (= x1145 (x462 (x1339 x1081) (x625 6) 0)) (= x629 (x462 (x1339 x152) x1145 0)))) (= x813 (x462 (x1339 x1081) (x625 3) 0)) (= (x486 x690) x500) (<= x500 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= x312 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x633) (= (x1193 x1029) x312) (or (and (or (not x803) (and (>= 1461501637330902918203684832716283019655932542975 x1268) (= x1336 (* x221 x955)) (= (x462 (x1339 x1281) x758 0) x662) (= x777 (x1110 x1535)) (> x733 0) (= (x1083 x985) x733) (< (+ x760 x633) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x1281 (x1135 1461501637330902918203684832716283019655932542975 x1127)) (= x352 (x1135 1461501637330902918203684832716283019655932542975 x1127)) (>= x221 0) (= x1095 (x1223 (+ 160 x608))) (>= 1461501637330902918203684832716283019655932542975 x777) (<= x37 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x1135 1461501637330902918203684832716283019655932542975 x1127) x1471) (= (x462 (x1339 x1268) x197 0) x1382) (> x997 0) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (* x221 x955)) (= x430 (x1135 1461501637330902918203684832716283019655932542975 x908)) (= x1321 (x1135 1461501637330902918203684832716283019655932542975 x908)) (< 0 x997) (= x46 (+ x143 x341)) (= x1535 x1546) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x221) (= (x462 (x1339 x352) x1238 0) x1355) (= (x922 x1382) x221) (= x37 (x233 x421)) (= x341 x385) (= (x1110 x1535) x1430) (= (x233 x1129) x760) (>= 1461501637330902918203684832716283019655932542975 x1430) (= x37 0) (= x122 (+ x1458 x1518)) (>= x760 0) (= (x462 (x1339 x1430) x1593 0) x421) (= x197 (x462 (x1339 x1471) x573 0)) (<= 0 x37) (= x760 x1518) x803 (= x1238 (x462 (x1339 x1081) (x625 4) 0)) (= (x462 (x1339 x777) x81 0) x1129) (= x573 (x462 (x1339 x1081) (x625 11) 0)) (= x143 x285) (= (x1083 x1095) x285) (< (+ x385 x285) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (> x997 0) (= (x462 (x1339 x1321) x662 0) x1593) (= x81 (x462 (x1339 x430) x1355 0)) (= x758 (x462 (x1339 x1081) (x625 4) 0)) (or (and (= x835 x633) (<= 0 x1349) (= x442 (x1110 x1584)) (= (< 2 x997) x542) (= (x702 x959) x1259) (= x1149 (x366 x765)) (= (x462 (x1339 x814) x1074 0) x503) (= x550 x169) (>= x1024 0) (= (x366 x943) x1024) (= 0 x1149) (> x997 1) (= x435 x1259) (>= 1461501637330902918203684832716283019655932542975 x521) (= (+ x435 x550) x497) (= (x1135 1461501637330902918203684832716283019655932542975 x908) x424) (= x1584 (x1223 (+ x1573 64))) x434 (= x1051 (x462 (x1339 x1133) x101 0)) (= (x462 (x1339 x1081) (x625 11) 0) x101) (< (* x955 x1349) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= (x702 x985) x1401) (= x1349 (x922 x1425)) (= x814 (x1135 1461501637330902918203684832716283019655932542975 x908)) (= (x1110 x1584) x1590) (= (x1135 1461501637330902918203684832716283019655932542975 x1127) x915) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1349) (= (x1223 (+ x608 192)) x959) (= x521 (x1110 x1584)) (= x765 (x462 (x1339 x1590) x503 0)) (= x169 (- (/ x640 1000000000000000000) (uninterp_frac x640 1000000000000000000))) (< 1 x997) (= x1024 x1183) (>= 1461501637330902918203684832716283019655932542975 x1590) (= (+ x835 x1183) x851) (= x370 (x462 (x1339 x1081) (x625 4) 0)) (= (x1135 1461501637330902918203684832716283019655932542975 x1127) x1163) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x1024 x633)) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x1259 x169)) (>= 1461501637330902918203684832716283019655932542975 x442) (= x1541 (x462 (x1339 x1081) (x625 4) 0)) (= x1160 (x462 (x1339 x915) x1541 0)) (= (x462 (x1339 x521) x1051 0) x1425) (= (x462 (x1339 x424) x1160 0) x1324) (= (* x1349 x955) x640) (> x997 1) (< 1 x1401) (= (x462 (x1339 x442) x1324 0) x943) (= x1074 (x462 (x1339 x1163) x370 0)) (= x1133 (x1135 1461501637330902918203684832716283019655932542975 x1127)) (not x542) (<= x1149 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= x1149 0) (<= x1024 115792089237316195423570985008687907853269984665640564039457584007913129639935)) (not x434)) (= x434 (< 1 x997)) (= x385 (- (/ x1336 1000000000000000000) (uninterp_frac x1336 1000000000000000000))) (<= x760 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x1458 x633) (= x1268 (x1110 x1535)))) (= x537 (ite (< 115792089237316195423570985008687907853269984665640564039457 x633) 1 0)) (= (uninterp_mod (* 1000000000000000000 x633) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x705) (not x1131) (= x803 (> x997 0)) (= 0 x1577) (= 1 x1170) (> x946 0) (= x1577 (x1135 x1170 x537)) (= x955 (- (/ x705 x946) (uninterp_frac x705 x946)))) x1131) (<= 0 x312) (= x917 (x462 (x1339 x1081) (x625 5) 0)) (= (x1223 (+ 32 x1236)) x1222) (= (x1135 1461501637330902918203684832716283019655932542975 x1127) x1437) (= x1237 (> x52 x500))) x412) x1494))
(assert (x549 x1471))
(assert (= (x364 x846) (ite (= x846 x274) x1283 (x256 x846))))
(assert (=> (< (- x745 1) 10000) (= (x1339 x745) (x625 x745))))
(assert (x85 x293))
(assert (x549 x750))
(assert (x85 x430))
(assert (x549 x426))
(assert (x85 x275))
(assert (x85 x617))
(assert (x85 274184521717934524641157099916833587206))
(assert (= (x563 x336) (ite (= x601 x336) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x1383 x336))))
(assert (= (x902 x985) (ite (and x607 x723) (x1418 x985) (x1311 x985))))
(assert (= (ite (= x1362 x756) x1258 (x401 x756)) (x1380 x756)))
(assert (= (x414 x775) (ite (= x775 x519) x1558 (x563 x775))))
(assert (= (x1073 x1472) 0))
(assert (=> (> (+ 10000 1) x1385) (= (x625 x1385) (x1339 x1385))))
(assert (x549 x295))
(assert (x549 x1406))
(assert (= (x1380 x775) (ite (= x1362 x775) x1258 (x401 x775))))
(assert (= 0 (x1073 x756)))
(assert (x549 x1409))
(assert (= (ite (= x349 x1362) x1258 (x401 x349)) (x1380 x349)))
(assert (x549 x385))
(assert (x549 x824))
(assert (= (=> (and (= x467 x782) (= (>= x815 x1410) x782) (= x1410 x1030)) x467) x687))
(assert (= (x1339 1889567281) (x625 1889567281)))
(assert (x85 x174))
(assert (= (ite (and x950 (not x591) x20) (x1523 x846) (x749 x846)) (x1098 x846)))
(assert (x549 x1323))
(assert (=> (< (- x243 1) 10000) (= (x1339 x243) (x625 x243))))
(assert (x85 x1585))
(assert (= (x1339 26959946667150639794667015087019630673637144422540572481103610249215) (x625 26959946667150639794667015087019630673637144422540572481103610249215)))
(assert (= 0 (x1073 x894)))
(assert (= (x1084 x1362) (ite (and x1563 (not x1131) (not x434) x803) (x702 x1362) (ite (and (not x803) x1563 (not x1131)) (x1083 x1362) (ite (and x1563 x1131) (x1083 x1362) (x892 x1362))))))
(assert (= x1569 (x249 (x1339 x1569))))
(assert (x85 x10))
(assert (x549 x327))
(assert (x549 x274))
(assert (x549 x619))
(assert (x549 x1470))
(assert (x549 x669))
(assert (x549 x111))
(assert (=> (< (- x457 1) 10000) (= (x1339 x457) (x625 x457))))
(assert (x549 x48))
(assert (= (x902 x673) (ite (and x723 x607) (x1418 x673) (x1311 x673))))
(assert (= 468353030 (x249 (x625 468353030))))
(assert (x549 x1035))
(assert (x549 x935))
(assert (= (ite (= x519 x1302) x1558 (x563 x1302)) (x414 x1302)))
(assert (x549 x1573))
(assert (x549 x842))
(assert (= x102 (or x668 (and (not x153) x837))))
(assert (x549 x1414))
(assert (x549 x517))
(assert (= (x249 (x1339 x1055)) x1055))
(assert (x549 x1374))
(assert (=> (> (+ 10000 1) x1322) (= (x1339 x1322) (x625 x1322))))
(assert (= (x249 (x1339 x442)) x442))
(assert (= 0 (x1073 x516)))
(assert (x85 x502))
(assert (x549 x979))
(assert (x549 x289))
(assert (= x328 (=> (and (= (< (x170 (x1339 274184521717934524641157099916833587206)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x188) (= (x310 (x1339 x158)) x1045) (not x1284) (= (> x714 0) x746) x188 (not (= x109 0)) (= (= x223 0) x1483) (= (< 2 x997) x1284) (or (and (= x1431 x448) (= (x1223 (+ 96 x761)) x1288) (not x1483)) (and x1483 (= x448 96))) (= x714 (x417 x448)) (or (not x746) (and x746 (< 0 x1032) (not (or (> x1499 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1499)) (< x1499 32)))) (= x1446 (= x1032 0)) (= x1499 (x417 x448)) (= x1300 x1032) (= x1032 (x417 x673)) (= (not x1446) x1251) (= x673 (x1223 (+ 32 x448))) (= x1300 (ite x1251 1 0))))) x63)))
(assert (x549 x226))
(assert (= (=> (and x877 (= x532 (x425 (x1339 x158))) x834 (= (x939 (x1339 274184521717934524641157099916833587206)) x773) (= (= x158 274184521717934524641157099916833587218) x1046) (= x877 (>= x1600 0)) x270 (= (x939 (x1339 274184521717934524641157099916833587206)) x1600) (= (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x425 (x1339 x158))) x834) (= x884 x564) (= x1209 (x939 (x1339 x158))) (= (< x1209 115792089237316195423570985008687907853269984665640564039457584007913129639936) x270)) (and (=> (not x1046) x546) (=> (and (< 0 x183) (= x89 (or (and (> 64 x970) (= true (<= x970 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x970))) (not x706) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x971) (= x886 (x462 (x1339 274184521717934524641157099916833587206) (x625 1) 0)) (not (= 649617121 x628)) (= x971 x734) (= x267 x983) (= 1 x109) (= x580 x1096) (= (x462 (x1339 274184521717934524641157099916833587206) (x625 1) 0) x850) (= x1464 (x462 (x1339 x1096) (x625 1) 0)) (not x89) (= x1096 x843) (<= 0 x476) (<= x476 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x574 (- x476 x1594)) x326) (= x1601 (+ x734 x267)) (= 32 x223) (= x354 68) x1046 (= (<= 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x971 x983)) x826) (= x1367 x138) (= (< x476 x983) x34) (= (< x476 x1594) x706) (= x971 (x216 x1464)) (not x826) (not (> 4 x354)) (= x983 x1594) (not (= x628 826074471)) (= 274184521717934524641157099916833587206 x1198) (>= 1461501637330902918203684832716283019655932542975 x1096) (= (x1042 (x1339 274184521717934524641157099916833587218)) x183) (= x354 x564) (>= x971 0) (= x1400 274184521717934524641157099916833587206) (= (x574 (- x354 4)) x970) (= x476 (x1059 x850)) (= x241 x1594) (not x34) (not (= 2514000705 x628)) (not (= 1889567281 x628)) (= x628 2835717307) (not (> 649617121 x628)) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x971 x983)) (= 76450787359836037641860180984291677749980919077056822294353438043884394381312 x800)) x328))) x317))
(assert (x549 x1285))
(assert (x549 x1028))
(assert (= (x366 x1280) (ite (= x1129 x1280) x122 (x233 x1280))))
(assert (=> (< (- x1437 1) 10000) (= (x1339 x1437) (x625 x1437))))
(assert (x549 x52))
(assert (x549 x800))
(assert (= (x563 x516) (ite (= x516 x601) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x1383 x516))))
(assert (x549 x811))
(assert (x549 x1134))
(assert (= (x553 x709) (ite (= x709 x1233) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x30 x709))))
(assert (x549 x275))
(assert (= x125 (=> (and (<= 0 x1094) (<= x1094 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x1042 (x1339 274184521717934524641157099916833587206)) x426) (= (x462 (x1339 x1441) (x625 10) 0) x863) (> x426 0) (= x1094 x129) (<= x799 1461501637330902918203684832716283019655932542975) (= (x704 x1264) x1094) (= x1264 (x462 (x1339 x799) x863 0)) (> 2293535753 x196) (> 911411945 x196) (> 468353030 x196) (= x196 69947311)) (=> (and (= x1260 x129) (= x914 x252) (= x1055 x1561) (= x1537 x998)) x1235))))
(assert (x85 x548))
(assert (x85 x879))
(assert (x549 x37))
(assert (x549 x593))
(assert (= (=> (and (= x652 (< 0 x1200)) (= (x574 (- x368 1)) x1200)) (and (=> x652 x701) (=> (not x652) x177))) x501))
(assert (= (ite (= x894 x1362) x1258 (x401 x894)) (x1380 x894)))
(assert (x549 x1081))
(assert (x549 x927))
(assert (x549 x1330))
(assert (=> (> (+ 10000 1) x252) (= (x1339 x252) (x625 x252))))
(assert (x549 x1158))
(assert (= (x1098 x349) (ite (and x20 (not x591) x950) (x1523 x349) (x749 x349))))
(assert (= (ite (= x1148 x379) x1398 (x211 x379)) (x401 x379)))
(assert (=> (< (- x1272 1) 10000) (= (x1339 x1272) (x625 x1272))))
(assert (x549 x147))
(assert (x549 x778))
(assert (x549 x1423))
(assert (=> (> (+ 10000 1) x399) (= (x1339 x399) (x625 x399))))
(assert (= (x249 (x1339 x1537)) x1537))
(assert (=> (> (+ 10000 1) x836) (= (x1339 x836) (x625 x836))))
(assert (x549 x1198))
(assert (=> (> (+ 10000 1) x386) (= (x1339 x386) (x625 x386))))
(assert (= (x1073 x661) 0))
(assert (x549 x1327))
(assert (x549 x138))
(assert (= x330 (=> (and (= x984 (x574 (- x1081 1))) (= x61 (< 0 x984))) (and (=> (not x61) x844) (=> x61 x572)))))
(assert (x549 x737))
(assert (= x1505 (x249 (x1339 x1505))))
(assert (= (x1339 2690754053) (x625 2690754053)))
(assert (=> (< (- x581 1) 10000) (= (x625 x581) (x1339 x581))))
(assert (= (ite (and x950 x20 (not x591)) (x1523 x673) (x749 x673)) (x1098 x673)))
(assert (x549 x855))
(assert (=> (> (+ 10000 1) x3) (= (x625 x3) (x1339 x3))))
(assert (= (x364 x1302) (ite (= x274 x1302) x1283 (x256 x1302))))
(assert (x549 x208))
(assert (x549 x313))
(assert (= (ite (and x934 x1608) (x873 x775) (x821 x775)) (x475 x775)))
(assert (x549 x427))
(assert (= x515 (x249 (x1339 x515))))
(assert (= x1033 (=> (= x1426 x600) x1435)))
(assert (x85 x523))
(assert (= x278 (and x837 x153)))
(assert (x85 x352))
(assert (x549 x786))
(assert (x85 x190))
(assert (= (x249 (x1339 x12)) x12))
(assert (= x1403 (and x1506 x358)))
(assert (x195 x1106))
(assert (=> (> (+ 10000 1) x1485) (= (x625 x1485) (x1339 x1485))))
(assert (=> (< (- x904 1) 10000) (= (x1339 x904) (x625 x904))))
(assert (x549 x268))
(assert (x549 x1309))
(assert (x549 x243))
(assert (x549 x1385))
(assert (x549 x709))
(assert (x549 x1086))
(assert (= (x249 (x1339 x777)) x777))
(assert (x549 x697))
(assert (= (x1098 x985) (ite (and x20 x950 (not x591)) (x1523 x985) (x749 x985))))
(assert (= x508 (and x61 x1109)))
(assert (x85 x1489))
(assert (= (ite (and (not x434) (not x1131) x1563 x803) (x702 x1462) (ite (and x1563 (not x1131) (not x803)) (x1083 x1462) (ite (and x1563 x1131) (x1083 x1462) (x892 x1462)))) (x1084 x1462)))
(assert (= (ite (= x1362 x1472) x1258 (x401 x1472)) (x1380 x1472)))
(assert (x85 x1227))
(assert (x549 x285))
(assert (= x991 (=> (and (= x205 2798343961) (<= x459 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= x836 1461501637330902918203684832716283019655932542975) (not (= x205 2764855426)) (not (= 2690754053 x205)) (= x332 x459) (not (< x205 2690754053)) (= x1436 (x462 (x1339 x124) (x625 5) 0)) (not (= x205 2743102681)) (not (> 2293535753 x205)) (> x289 0) (= x289 (x1042 (x1339 274184521717934524641157099916833587206))) (>= x459 0) (> 2960351575 x205) (= x459 (x1481 x1219)) (= (x462 (x1339 x836) x1436 0) x1219)) (=> (and (= x1561 x1294) (= x914 x643) (= x1072 x332) (= x998 x298)) x568))))
(assert (x85 x1196))
(assert (x549 x1001))
(assert (= (x414 x661) (ite (= x661 x519) x1558 (x563 x661))))
(assert (x549 x1490))
(assert (= (x401 x1362) (ite (= x1148 x1362) x1398 (x211 x1362))))
(assert (x549 x1569))
(assert (x549 x1291))
(assert (x549 x73))
(assert (= (ite (= x1222 x709) x312 (x134 x709)) (x1083 x709)))
(assert (x549 x1555))
(assert (= (x1083 x775) (ite (= x1222 x775) x312 (x134 x775))))
(assert (x549 x502))
(assert (x549 x1180))
(assert (=> (> (+ 10000 1) x1100) (= (x625 x1100) (x1339 x1100))))
(assert (x85 x1471))
(assert (= 2514000705 (x249 (x625 2514000705))))
(assert (= (x702 x985) (ite (= x1095 x985) x46 (x1083 x985))))
(assert (= x157 (=> (and (<= 0 x269) (= (x1135 1461501637330902918203684832716283019655932542975 x1127) x688) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1089) (not (< x269 x368)) (<= x269 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x462 (x1339 x688) x1371 0) x972) (>= x1089 0) (= (= x1089 0) x153) (= (x244 x972) x1089) (= x1371 (x462 (x1339 x368) (x625 6) 0))) (and (=> (and (>= x485 0) (= x1353 0) (= x1139 x485) (= (x462 (x1339 x1272) x1270 0) x350) (= x1270 (x462 (x1339 x368) (x625 10) 0)) (<= x485 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x1531 x350) x485) (= x1272 (x1135 1461501637330902918203684832716283019655932542975 x1127)) (not x153)) x346) (=> x153 x1536)))))
(assert (= x313 (x249 (x1339 x313))))
(assert (x549 x1450))
(assert (x549 x1184))
(assert (x85 x1117))
(assert (= (ite (= x1095 x985) x997 (x482 x1095)) (x1418 x1095)))
(assert (= x255 (x249 (x1339 x255))))
(assert (x549 x1292))
(assert (= x1081 (x249 (x1339 x1081))))
(assert (x549 x848))
(assert (x549 x997))
(assert (= (x625 635128645) (x1339 635128645)))
(assert (x549 x589))
(assert (= (x249 (x1339 x1196)) x1196))
(assert (x549 x193))
(assert (= (ite (= x1148 x985) x1398 (x211 x985)) (x401 x985)))
(assert (x549 x1152))
(assert (x85 x1544))
(assert (x549 x601))
(assert (x549 x586))
(assert (=> (> (+ 10000 1) x1274) (= (x625 x1274) (x1339 x1274))))
(assert (=> (< (- x684 1) 10000) (= (x625 x684) (x1339 x684))))
(assert (= (x249 (x1339 x552)) x552))
(assert (x549 x389))
(assert (= x1099 (or (and x1221 (not x1545)) (and x1606 x693) (and (not x652) x679))))
(assert (x549 x1489))
(assert (= (x1339 1986467848) (x625 1986467848)))
(assert (x549 x174))
(assert (x549 x1532))
(assert (x549 x1316))
(assert (= (x249 (x1339 x903)) x903))
(assert (x549 x556))
(assert (= x648 (and x569 x910)))
(assert (x549 x14))
(assert (=> (< (- x1060 1) 10000) (= (x1339 x1060) (x625 x1060))))
(assert (x549 x853))
(assert (= (x414 x846) (ite (= x846 x519) x1558 (x563 x846))))
(assert (x549 x836))
(assert (= x137 x526))
(assert (x549 x984))
(assert (x549 x312))
(assert (x549 x476))
(assert (= (ite (= x1095 x959) x46 (x1083 x959)) (x702 x959)))
(assert (x549 x1334))
(assert (x85 x1466))
(assert (= (x249 (x1339 x99)) x99))
(assert (x549 x386))
(assert (x549 x1568))
(assert (=> (< (- x79 1) 10000) (= (x625 x79) (x1339 x79))))
(assert (= (x249 (x1339 274184521717934524641157099916833587206)) 274184521717934524641157099916833587206))
(assert (x549 x918))
(assert (x85 x457))
(assert (x549 x15))
(assert (x549 x361))
(assert (x549 x1556))
(assert (x549 x959))
(assert (= (ite (= x1034 x1095) x46 (x1083 x1034)) (x702 x1034)))
(assert (= (x249 (x1339 x1200)) x1200))
(assert (x85 x268))
(assert (= (x401 x661) (ite (= x661 x1148) x1398 (x211 x661))))
(assert (x549 x1577))
(assert (x549 x576))
(assert (= (=> (= (< 0 x368) x2) (and (=> (not x2) x1387) (=> x2 x1090))) x1536))
(assert (x549 x1302))
(assert (= (=> (and (= x23 (x244 x1603)) (= x1603 (x462 (x1339 x1604) x82 0)) (= (x462 (x1339 x368) (x625 6) 0) x82) (<= x23 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x1135 1461501637330902918203684832716283019655932542975 x1127) x1604) (<= 0 x23) (= (= x23 0) x910)) (and (=> (and (not x910) (= x368 x913)) x663) (=> x910 x338))) x1090))
(assert (= (ite (= x230 x1362) x1258 (x401 x230)) (x1380 x230)))
(assert (= (x279 x673) (ite (= x673 x716) x1180 (x1214 x673))))
(assert (= (ite (and x1563 x754) (x282 x1579) (x184 x1579)) (x1190 x1579)))
(assert (x549 x1505))
(assert (x549 x852))
(assert (x1037 x839 x928))
(assert (x549 x806))
(assert (= x1207 x373))
(assert (= x280 (x249 (x1339 x280))))
(assert (=> (< (- x1281 1) 10000) (= (x625 x1281) (x1339 x1281))))
(assert (x549 x132))
(assert (= (x1339 2960351575) (x625 2960351575)))
(assert (= x1104 (or (and x1231 x1497) x933)))
(assert (= x1318 (x249 (x1339 x1318))))
(assert (x549 x1058))
(assert (x549 x1611))
(assert (x549 x158))
(assert (x549 x318))
(assert (x549 x903))
(assert (x549 x183))
(assert (=> (> (+ 10000 1) x747) (= (x1339 x747) (x625 x747))))
(assert (x549 x1071))
(assert (x549 x562))
(assert (=> (< (- x811 1) 10000) (= (x625 x811) (x1339 x811))))
(assert (= x146 x932))
(assert (= (x364 x448) (ite (= x448 x274) x1283 (x256 x448))))
(assert (x549 x1297))
(assert (= (x625 2532887486) (x1339 2532887486)))
(assert (= x960 x1484))
(assert (x549 x404))
(assert (=> (< (- x99 1) 10000) (= (x1339 x99) (x625 x99))))
(assert (x549 x1196))
(assert (= (=> (= x1142 0) x355) x177))
(assert (= 69947311 (x249 (x625 69947311))))
(assert (=> (> (+ 10000 1) x136) (= (x625 x136) (x1339 x136))))
(assert (= x683 (x249 (x1339 x683))))
(assert (=> (> (+ 10000 1) x1035) (= (x1339 x1035) (x625 x1035))))
(assert (x549 x1419))
(assert (x549 x717))
(assert (=> (> (+ 10000 1) x1508) (= (x625 x1508) (x1339 x1508))))
(assert (=> (< (- x1279 1) 10000) (= (x1339 x1279) (x625 x1279))))
(assert (x195 x1562))
(assert (= (x1346 x605) (ite (and (not x1131) x1563 (not x434) x803) (x366 x605) (ite (and (not x803) x1563 (not x1131)) (x233 x605) (ite (and x1563 x1131) (x233 x605) (x710 x605))))))
(assert (= x1397 true))
(assert (x549 x580))
(assert (= (ite (= x661 x1362) x1258 (x401 x661)) (x1380 x661)))
(assert (= (x401 x336) (ite (= x336 x1148) x1398 (x211 x336))))
(assert (=> (< (- x1544 1) 10000) (= (x1339 x1544) (x625 x1544))))
(assert (x549 x1476))
(assert (= x1117 (x249 (x1339 x1117))))
(assert (x549 x1008))
(assert (x549 x839))
(assert (=> (> (+ 10000 1) x442) (= (x1339 x442) (x625 x442))))
(assert (x549 x672))
(assert (= (ite (and x723 x607) (x1418 x516) (x1311 x516)) (x902 x516)))
(assert (x549 x59))
(assert (= (ite (= x1302 x1222) x312 (x134 x1302)) (x1083 x1302)))
(assert (= (x249 (x1339 x1585)) x1585))
(assert (x195 x798))
(assert (= (ite (= x985 x894) x997 (x482 x894)) (x1418 x894)))
(assert (= (x625 649617121) (x1339 649617121)))
(assert (x549 x424))
(assert (x549 x230))
(assert (x549 x1558))
(assert (= (ite (and x723 x607) (x1418 x959) (x1311 x959)) (x902 x959)))
(assert (=> (< (- x814 1) 10000) (= (x625 x814) (x1339 x814))))
(assert (x85 x903))
(assert (x85 x984))
(assert (x85 x552))
(assert (x549 x154))
(assert (= 0 (x1073 x846)))
(assert (= x79 (x249 (x1339 x79))))
(assert (x195 x60))
(assert (x549 x337))
(assert (= (x625 759532456) (x1339 759532456)))
(assert (= (x249 (x1339 x194)) x194))
(assert (=> (> (+ 10000 1) x502) (= (x1339 x502) (x625 x502))))
(assert (x549 x1544))
(assert (x85 x399))
(assert (= (x1339 37714057306076988483118529490347679105585116642029194716945419020321082336612) (x625 37714057306076988483118529490347679105585116642029194716945419020321082336612)))
(assert (x549 x1142))
(assert (= (ite (= x1222 x661) x312 (x134 x661)) (x1083 x661)))
(assert (=> (> (+ 10000 1) x1168) (= (x625 x1168) (x1339 x1168))))
(assert (= (ite (= x1095 x448) x46 (x1083 x448)) (x702 x448)))
(assert (= (x414 x448) (ite (= x448 x519) x1558 (x563 x448))))
(assert (x85 x1376))
(assert (=> (< (- x356 1) 10000) (= (x625 x356) (x1339 x356))))
(assert (= (x224 x1164) (ite (and x1444 x1104) (x555 x1164) (ite (and x439 x1104 (not x1444)) (x555 x1164) (x167 x1164)))))
(assert (x549 x336))
(assert (= (x902 x1439) (ite (and x607 x723) (x1418 x1439) (x1311 x1439))))
(assert (= x1104 x1597))
(assert (= (x249 (x625 87118632)) 87118632))
(assert (= (x1339 468353030) (x625 468353030)))
(assert (= (x1073 192) 0))
(assert (= (x249 (x1339 274184521717934524641157099916833587218)) 274184521717934524641157099916833587218))
(assert (= (x1190 x753) (ite (and x754 x1563) (x282 x753) (x184 x753))))
(assert (x549 x255))
(assert (x549 x1020))
(assert (=> (< (- x523 1) 10000) (= (x1339 x523) (x625 x523))))
(assert (= (x1084 x1472) (ite (and (not x434) (not x1131) x803 x1563) (x702 x1472) (ite (and (not x1131) x1563 (not x803)) (x1083 x1472) (ite (and x1563 x1131) (x1083 x1472) (x892 x1472))))))
(assert (= (ite (= x1095 x1462) x46 (x1083 x1462)) (x702 x1462)))
(assert (x85 x768))
(assert (= (x1523 x516) (ite (and x20 (not x1063) x87 x887 x950 x88) (x364 x516) (ite (and (not x87) x20 x950 x88 x887) (x256 x516) (ite (and x950 x20 x887 (not x88)) (x414 x516) (ite (and (not x887) x20 x950) (x563 x516) (x655 x516)))))))
(assert (=> (< (- x1096 1) 10000) (= (x625 x1096) (x1339 x1096))))
(assert (=> (> (+ 10000 1) x768) (= (x625 x768) (x1339 x768))))
(assert (x549 x1472))
(assert (=> (> (+ 10000 1) x1430) (= (x625 x1430) (x1339 x1430))))
(assert (= x607 x137))
(assert (x549 x1488))
(assert (x85 x1485))
(assert (x85 x1590))
(assert (x549 x46))
(assert (= (x475 x661) (ite (and x1608 x934) (x873 x661) (x821 x661))))
(assert (x549 x1437))
(assert (= (=> (and (= (> x1060 0) x1583) (= x1060 (x574 (- x1081 1)))) (and (=> x1583 x1052) (=> (not x1583) x398))) x325))
(assert (= x1373 (x249 (x1339 x1373))))
(assert (= (x625 87118632) (x1339 87118632)))
(assert (x549 x466))
(assert (x85 x280))
(assert (x85 x323))
(assert (= (ite (and x20 x950 (not x591)) (x1523 x230) (x749 x230)) (x1098 x230)))
(assert (= (x256 x846) (ite (= x1256 x846) x295 (x414 x846))))
(assert (x549 x865))
(assert (x549 x91))
(assert (x549 x1567))
(assert (= (x414 x230) (ite (= x519 x230) x1558 (x563 x230))))
(assert (x549 x237))
(assert (x549 x1296))
(assert (x549 x84))
(assert (x85 x1096))
(assert (x85 x811))
(assert (=> (< (- x1174 1) 10000) (= (x1339 x1174) (x625 x1174))))
(assert (= (x1084 x709) (ite (and x803 (not x1131) x1563 (not x434)) (x702 x709) (ite (and (not x803) (not x1131) x1563) (x1083 x709) (ite (and x1563 x1131) (x1083 x709) (x892 x709))))))
(assert (= (ite (and x1104 x1444) (x1005 x1417) (ite (and x439 (not x1444) x1104) (x49 x1417) (x982 x1417))) (x1557 x1417)))
(assert (x549 x1032))
(assert (= (x249 (x625 115792089237316195423570985008687907853269984665640564039457584007913129639904)) 115792089237316195423570985008687907853269984665640564039457584007913129639904))
(assert (x85 x1426))
(assert (x549 x1153))
(assert (= (x401 x349) (ite (= x1148 x349) x1398 (x211 x349))))
(assert (x549 x1389))
(assert (x549 x1268))
(assert (x549 x812))
(assert (= (ite (and x1608 x934) (x873 x709) (x821 x709)) (x475 x709)))
(assert (x549 x326))
(assert (x549 x885))
(assert (x554 x1562 x1101))
(assert (= x513 (x249 (x1339 x513))))
(assert (x549 x1204))
(assert (=> (> (+ 10000 1) x984) (= (x625 x984) (x1339 x984))))
(assert (= (x249 (x1339 x1020)) x1020))
(assert (x549 x391))
(assert (= x302 (=> (and (= x73 2743102681) (not (> 2690754053 x73)) (< x73 2960351575) (> x1130 0) (not (> 2293535753 x73)) (= x290 (x462 (x1339 x41) x229 0)) (= x623 x1409) (= (x555 x1378) x1409) (= (x462 (x1339 x1227) x290 0) x1378) (not (= 2690754053 x73)) (<= x1409 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x462 (x1339 x856) (x625 3) 0) x229) (= x1130 (x1042 (x1339 274184521717934524641157099916833587206))) (<= 0 x1409) (>= 1461501637330902918203684832716283019655932542975 x41) (>= 1461501637330902918203684832716283019655932542975 x1227)) (=> (and (= x998 x1441) (= x1561 x799) (= x623 x1549) (= (<= x1549 x361) x779)) x125))))
(assert (=> (< (- x438 1) 10000) (= (x1339 x438) (x625 x438))))
(assert (x549 x1585))
(assert (=> (> (+ 10000 1) x178) (= (x625 x178) (x1339 x178))))
(assert (x85 x118))
(assert (= (x1339 2514000705) (x625 2514000705)))
(assert (= (x249 (x1339 x836)) x836))
(assert (x85 x41))
(assert (x549 x470))
(assert (=> (> (+ 10000 1) x383) (= (x625 x383) (x1339 x383))))
(assert (=> (< (- x543 1) 10000) (= (x625 x543) (x1339 x543))))
(assert (x549 x303))
(assert (= x1281 (x249 (x1339 x1281))))
(assert (x549 x1039))
(assert (x85 x368))
(assert (= (=> (and (= (x401 x1148) x344) (= (x462 (x1339 x368) (x625 1) 0) x893) (>= x50 0) (= (x462 (x1339 x368) (x625 5) 0) x1434) (= x477 (x1135 1461501637330902918203684832716283019655932542975 x1127)) (= x1213 (x1135 1461501637330902918203684832716283019655932542975 x908)) (= (x462 (x1339 x745) x1434 0) x753) (= (x462 (x1339 x477) x495 0) x498) (<= 0 x614) (= x495 (x462 (x1339 x368) (x625 6) 0)) (= x666 (= 0 x885)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x614) (= (x1135 1461501637330902918203684832716283019655932542975 x1127) x745) (<= x1398 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x50) (= x964 (x1223 (+ x379 64))) (not (= x368 115792089237316195423570985008687907853269984665640564039457584007913129639935)) (= x324 (x1223 (+ 2 x1081))) (= (= x50 0) x116) (or (and (= (x462 (x1339 x368) (x625 6) 0) x1530) (= x810 (x462 (x1339 x1309) x1530 0)) (= (x1135 1461501637330902918203684832716283019655932542975 x1127) x1309) x666) (and (= (* x1139 x885) x1069) (= x258 (x462 (x1339 x368) (x625 6) 0)) (= (x1135 1461501637330902918203684832716283019655932542975 x1127) x323) (<= x1153 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x1570 (x462 (x1339 x323) x1496 0)) (= x635 x1069) (= x517 (+ x1359 x240)) (not x666) (= x293 (x1135 1461501637330902918203684832716283019655932542975 x1127)) (= x1153 x1359) (= x240 x635) (= x1496 (x462 (x1339 x368) (x625 5) 0)) (< (+ x1153 x635) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (< (* x1139 x885) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x1153 (x1190 x1570)) (<= 0 x1153) (= (x462 (x1339 x293) x258 0) x1161))) (= (x456 x753) x614) (>= x1398 0) (= x119 (x462 (x1339 x368) (x625 3) 0)) (or (and (not x868) (= 0 x885)) (and (or (and (not x988) (= 604800 x562) (= x1276 x885) (= x945 (x574 (- x15 x958))) (not (< x15 x958)) (= (ite (< x945 604800) x945 604800) x1276)) (and (= (x401 x379) x441) (= x727 x885) (= (x574 (- x15 x441)) x727) x988 (not (< x15 x441)))) x868 (or (and x264 (= x1611 x15) (= x1611 (x401 x1148))) (and (= x15 x793) (not x264))) (= (x401 x1148) x695) (= (= x958 0) x988) (= (< x695 x793) x264))) (= x964 x764) (<= 0 x624) (= (x1135 1461501637330902918203684832716283019655932542975 x1127) x1318) (= (x1223 (+ x379 32)) x1148) (= (x244 x498) x958) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x958) (= x510 (x257 x893 1)) (or (and (or (and (= (x462 (x1339 x1373) x408 0) x1477) (<= 0 x534) (= x1031 (x462 (x1339 x1100) x1166 0)) (< (+ x50 x534) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= (x462 (x1339 x103) x816 0) x976) (= x1298 (x1346 x276)) x1533 (<= 0 x1298) (= x408 (x462 (x1339 x686) x320 0)) (< 0 x997) (= (x462 (x1339 x581) x976 0) x276) (= x1373 (x1110 x376)) (or (and (< (+ x284 x50) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (> x997 1) (= (x462 (x1339 x368) (x625 4) 0) x1543) (<= 0 x284) (= x626 (< 2 x997)) (= x1442 x50) (= x1124 (x1110 x303)) (= x342 (x462 (x1339 x684) x978 0)) (>= 1461501637330902918203684832716283019655932542975 x751) (<= x622 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x1223 (+ 192 x608)) x756) (= x1117 (x1135 1461501637330902918203684832716283019655932542975 x908)) (= x1327 x128) (= x1429 (x462 (x1339 x1124) x342 0)) (= (x1135 1461501637330902918203684832716283019655932542975 x1127) x617) (= (+ x1449 x1442) x647) (= x1250 (* x728 x622)) (= x111 (x1135 1461501637330902918203684832716283019655932542975 x1127)) (= x1003 (x462 (x1339 x368) (x625 4) 0)) (= (x90 x1429) x284) (= x1335 (x462 (x1339 x111) x1543 0)) (= (x462 (x1339 x383) x1581 0) x321) (= x1327 (- (/ x1250 1000000000000000000) (uninterp_frac x1250 1000000000000000000))) (> x1120 1) x253 (= x622 (x922 x319)) (= x897 x200) (<= 0 x622) (< 1 x997) (= x277 (+ x128 x897)) (= x605 (x462 (x1339 x751) x1191 0)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x14) (<= x284 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x14 0) (= x1191 (x462 (x1339 x1117) x1335 0)) (>= 1461501637330902918203684832716283019655932542975 x343) (< (+ x1327 x200) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x751 (x1110 x303)) (= (x462 (x1339 x343) x321 0) x319) (>= 1461501637330902918203684832716283019655932542975 x1124) (not x626) (= x343 (x1110 x303)) (>= x14 0) (= x284 x1449) (= (x1380 x985) x1120) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (* x622 x728)) (= x978 (x462 (x1339 x617) x1003 0)) (> x997 1) (= x200 (x1380 x756)) (= (x1135 1461501637330902918203684832716283019655932542975 x908) x684) (= (x462 (x1339 x368) (x625 11) 0) x1581) (= x383 (x1135 1461501637330902918203684832716283019655932542975 x1127)) (= (x90 x605) x14) (= x303 (x1223 (+ x1573 64)))) (not x253)) (= (x462 (x1339 x1466) x1232 0) x1280) (< (* x1304 x728) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= (x462 (x1339 x368) (x625 4) 0) x1333) (= (x401 x1362) x1510) (= x182 (x1135 1461501637330902918203684832716283019655932542975 x1127)) (= x1271 x50) (= x1277 x1510) (= (< 1 x997) x253) (= x686 (x1135 1461501637330902918203684832716283019655932542975 x1127)) (= x534 x1185) (= (x1135 1461501637330902918203684832716283019655932542975 x908) x103) (< (+ x1510 x455) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (> x848 0) (<= x581 1461501637330902918203684832716283019655932542975) (>= 1461501637330902918203684832716283019655932542975 x1466) (= (x462 (x1339 x368) (x625 4) 0) x1166) (= x455 x909) (> x997 0) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1304) (= (x401 x985) x848) (= x455 (- (/ x380 1000000000000000000) (uninterp_frac x380 1000000000000000000))) (= x1298 0) (= (x1346 x1280) x534) (= (x1223 (+ 160 x608)) x1362) (= (x1110 x376) x1466) (= x1100 (x1135 1461501637330902918203684832716283019655932542975 x1127)) (= x1495 (+ x1185 x1271)) (< 0 x997) (= (x1135 1461501637330902918203684832716283019655932542975 x908) x389) (= (x922 x1477) x1304) (= x380 (* x1304 x728)) (= x1232 (x462 (x1339 x389) x1031 0)) (= x581 (x1110 x376)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1298) (= x1258 (+ x909 x1277)) (= x376 x1546) (>= 1461501637330902918203684832716283019655932542975 x1373) (= (x462 (x1339 x182) x1333 0) x816) (<= x534 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= 0 x1304) (= (x462 (x1339 x368) (x625 11) 0) x320)) (not x1533)) (= x1106 1) (= 0 x351) (= (ite (> x50 115792089237316195423570985008687907853269984665640564039457) 1 0) x798) (not x116) (< 0 x614) (= (< 0 x997) x1533) (= x351 (x1135 x1106 x798)) (= x58 (uninterp_mod (* 1000000000000000000 x50) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= x728 (- (/ x58 x614) (uninterp_frac x58 x614)))) x116) (= (= 0 x1353) x440) (= (x462 (x1339 x1213) x1504 0) x1514) (= x624 (x437 x893)) (or x440 (and (= x890 (x1135 1461501637330902918203684832716283019655932542975 x1127)) (not x440))) (= x868 (< x958 x344)) (= (x462 (x1339 x1318) x119 0) x1504) (= x1398 (x1193 x510)) (> x324 x375) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x624) (<= 0 x958) (= (x1438 x1514) x50)) x854) x346))
(assert (= (x244 x632) (ite (and x754 x1563) (x1206 x632) (x1521 x632))))
(assert (x85 x173))
(assert (= (x401 x1034) (ite (= x1034 x1148) x1398 (x211 x1034))))
(assert (x549 x761))
(assert (x549 x112))
(assert (x85 x164))
(assert (x549 x169))
(assert (= (ite (and x1563 x754) (x282 x1570) (x184 x1570)) (x1190 x1570)))
(assert (= (ite (= x1362 x709) x1258 (x401 x709)) (x1380 x709)))
(assert (= x849 (x249 (x1339 x849))))
(assert (x85 x1060))
(assert (= (x1073 x709) 0))
(assert (=> (> (+ 10000 1) x158) (= (x625 x158) (x1339 x158))))
(assert (x549 x1242))
(assert (= x373 x1314))
(assert (= 1968616202 (x249 (x625 1968616202))))
(assert (= (ite (= x1472 x601) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x1383 x1472)) (x563 x1472)))
(assert (x549 x622))
(assert (x549 x1400))
(assert (x549 x1092))
(assert (= (x1418 x959) (ite (= x985 x959) x997 (x482 x959))))
(assert (x549 x117))
(assert (= (x1339 2258409472) (x625 2258409472)))
(assert (= (x249 (x1339 x1321)) x1321))
(assert (= (ite (= x846 x1148) x1398 (x211 x846)) (x401 x846)))
(assert (x549 x79))
(assert (= (ite (= x1208 x1233) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x30 x1208)) (x553 x1208)))
(assert (x549 x1307))
(assert (x549 x964))
(assert (= x799 (x249 (x1339 x799))))
(assert (=> (< (- x255 1) 10000) (= (x625 x255) (x1339 x255))))
(assert (= (x902 x336) (ite (and x607 x723) (x1418 x336) (x1311 x336))))
(assert (x549 x915))
(assert (x549 x921))
(assert (=> (< (- x823 1) 10000) (= (x625 x823) (x1339 x823))))
(assert (x85 x182))
(assert (= (x1418 x1034) (ite (= x985 x1034) x997 (x482 x1034))))
(assert (= x1393 (=> (and (<= x927 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x112 x927) (< 0 x147) (<= 0 x927) (= 2743102681 x725) (>= 1461501637330902918203684832716283019655932542975 x1319) (= (x462 (x1339 x1319) x872 0) x363) (< x725 2960351575) (not (> 2690754053 x725)) (>= 1461501637330902918203684832716283019655932542975 x1489) (= x1566 (x462 (x1339 x1489) x363 0)) (= (x555 x1566) x927) (= x872 (x462 (x1339 x12) (x625 3) 0)) (not (= x725 2690754053)) (= x147 (x1042 (x1339 274184521717934524641157099916833587206))) (not (< x725 2293535753))) (=> (and (= x399 x1561) (= x1187 x451) (= x998 x304) (= x112 x433) (= x914 x393)) x1486))))
(assert (x549 x1561))
(assert (x195 x28))
(assert (x549 x624))
(assert (x85 x688))
(assert (= (x1557 x80) (ite (and x1104 x1444) (x1005 x80) (ite (and (not x1444) x439 x1104) (x49 x80) (x982 x80)))))
(assert (= x457 (x249 (x1339 x457))))
(assert (= (ite (= x709 x1095) x46 (x1083 x709)) (x702 x709)))
(assert (x549 x1528))
(assert (x549 x954))
(assert (x549 x708))
(assert (x85 x1187))
(assert (x85 x3))
(assert (x549 x1202))
(assert (=> (> (+ 10000 1) x215) (= (x1339 x215) (x625 x215))))
(assert (= x546 (=> (= x407 (= x158 274184521717934524641157099916833587214)) (and (=> (and (= x1323 x241) (= x962 (x574 (- x541 4))) (<= 0 x1396) (= (+ x1602 x203) x1013) (= x109 1) (= (x574 (- x113 x1323)) x845) (not (= x1555 2514000705)) (= x237 x515) (<= x1396 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x564 x541) (not x952) (not (< x1555 649617121)) (= x750 76450787359836037641860180984291677749980919077056822294353438043884394381312) (not (= x1555 826074471)) (= x113 (x916 x1364)) (= x541 68) (>= 1461501637330902918203684832716283019655932542975 x515) (= x13 (< x113 x1323)) (< 0 x941) (= (x881 x1395) x1396) (<= x113 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= 32 x223) x407 (= x18 274184521717934524641157099916833587206) (= x1555 2835717307) (<= 0 x113) (not x1469) (= x672 x809) (= (<= 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x1396 x597)) x472) (< (+ x1396 x597) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= (or (and (< x962 64) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x962) true)) (> x962 57896044618658097711785492504343953926634992332820282019728792003956564819967)) x1469) (= (< x113 x597) x952) (= x203 x1396) (= (x462 (x1339 274184521717934524641157099916833587206) (x625 1) 0) x1364) (not (= 649617121 x1555)) (not (> 4 x541)) (not (= 1889567281 x1555)) (= (x462 (x1339 274184521717934524641157099916833587206) (x625 1) 0) x956) (= x1323 x597) (not x13) (= x1395 (x462 (x1339 x515) (x625 1) 0)) (= x843 x515) (= x1602 x597) (not x472) (= 274184521717934524641157099916833587206 x64) (= (x1042 (x1339 274184521717934524641157099916833587214)) x941)) x328) (=> (not x407) x1397)))))
(assert (= x745 (x249 (x1339 x745))))
(assert (= (ite (and x723 x607) (x1418 x1472) (x1311 x1472)) (x902 x1472)))
(assert (= x186 (and x1403 x1583)))
(assert (= 2211524764 (x249 (x625 2211524764))))
(assert (=> (> (+ 10000 1) x1227) (= (x625 x1227) (x1339 x1227))))
(assert (= (ite (= x601 x764) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x1383 x764)) (x563 x764)))
(assert (=> (> (+ 10000 1) x1081) (= (x625 x1081) (x1339 x1081))))
(assert (x549 x1607))
(assert (x85 x659))
(assert (= x621 (x249 (x1339 x621))))
(assert (= (ite (= x985 x1439) x997 (x482 x1439)) (x1418 x1439)))
(assert (= 0 (x1073 224)))
(assert (x85 x1428))
(assert (= (=> (and (= (= 0 x179) x1203) (= (= 0 x400) x545) (or (and (= (x462 (x1339 x368) (x625 7) 0) x1173) (= x1440 x379) (= (x462 (x1339 x1196) x1173 0) x658) (= (x1135 1461501637330902918203684832716283019655932542975 x1127) x1196) (= (x462 (x1339 x644) x658 0) x1372) (= x644 (x1135 1461501637330902918203684832716283019655932542975 x908)) x545) (and (= x1016 (x1223 (+ x1236 128))) (= x457 (x1135 1461501637330902918203684832716283019655932542975 x1127)) (= x824 (x1193 x1360)) (= (> x833 x48) x645) (<= x1308 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= 0 x1308) (= x1360 (x257 x610 1)) (not x545) (= (x462 (x1339 x457) x634 0) x465) (<= x824 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x1061 x248) x833) (<= x48 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x148 (= 0 x1289)) (= (x1135 1461501637330902918203684832716283019655932542975 x908) x118) (or (and (not x645) (= x1289 0)) (and (= (x1061 x248) x1286) (or (and (= x793 x969) (not x1230)) (and (= (x1061 x248) x1532) x1230 (= x969 x1532))) (= x1230 (> x793 x1286)) x645 (= (= x48 0) x94) (or (and x94 (= x1202 (x574 (- x969 x144))) (not (> x144 x969)) (= (x1061 x1440) x144) (= x1289 x1202)) (and (not x94) (not (< x969 x48)) (= x1289 x528) (= x130 (x574 (- x969 x48))) (= 604800 x247) (= (ite (< x130 604800) x130 604800) x528))))) (or (and (= x1282 (x462 (x1339 x736) x296 0)) (= x736 (x1135 1461501637330902918203684832716283019655932542975 x908)) (= (x462 (x1339 x1020) x828 0) x296) (= (x1135 1461501637330902918203684832716283019655932542975 x1127) x1020) x148 (= x379 x1016) (= x828 (x462 (x1339 x368) (x625 7) 0))) (and (= x187 x374) (= x1559 (x224 x499)) (< (* x400 x1289) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (not x148) (= x1328 (x462 (x1339 x368) (x625 7) 0)) (= x811 (x1135 1461501637330902918203684832716283019655932542975 x1127)) (= x222 (+ x512 x866)) (= (* x400 x1289) x187) (= x379 x1016) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x374 x1559)) (= x1082 (x462 (x1339 x368) (x625 3) 0)) (= x499 (x462 (x1339 x161) x692 0)) (= x488 (x462 (x1339 x811) x1328 0)) (= x313 (x1135 1461501637330902918203684832716283019655932542975 x1127)) (= x1559 x512) (= (x462 (x1339 x313) x1082 0) x692) (= x161 (x1135 1461501637330902918203684832716283019655932542975 x908)) (<= x1559 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x462 (x1339 x67) x488 0) x1422) (= x866 x374) (= (x1135 1461501637330902918203684832716283019655932542975 x908) x67) (>= x1559 0))) (<= 0 x824) (= (x462 (x1339 x118) x465 0) x80) (= x248 (x1223 (+ x1236 96))) (= x610 (x462 (x1339 x368) (x625 1) 0)) (>= x48 0) (= (x1557 x80) x48) (= (x462 (x1339 x368) (x625 7) 0) x634) (= (x437 x610) x1308))) (or x1203 (and (= (x1135 1461501637330902918203684832716283019655932542975 x1127) x1612) (not x1203) (= x357 (x1135 1461501637330902918203684832716283019655932542975 x908))))) x157) x1547))
(assert (= (ite (and x723 x607) (x1418 x230) (x1311 x230)) (x902 x230)))
(assert (= (ite (and x723 x607) (x1418 x1302) (x1311 x1302)) (x902 x1302)))
(assert (x549 x383))
(assert (= (x249 (x1339 x747)) x747))
(assert (x549 x393))
(assert (x195 x908))
(assert (= (x702 x1472) (ite (= x1472 x1095) x46 (x1083 x1472))))
(assert (x549 x206))
(assert (= (ite (= x601 x709) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x1383 x709)) (x563 x709)))
(assert (= (x249 (x1339 x383)) x383))
(assert (= (=> (and (= (= x1427 0) x1047) (= (x486 x1605) x1427) (<= 0 x1427) (= x386 (x1135 1461501637330902918203684832716283019655932542975 x1127)) (= x1605 (x462 (x1339 x386) x989 0)) (= x989 (x462 (x1339 x984) (x625 6) 0)) (<= x1427 115792089237316195423570985008687907853269984665640564039457584007913129639935)) (and (=> (and (= x1455 (x574 (- x984 1))) (= x861 (< 0 x1455)) x1047 (not x861)) x844) (=> (and (not x1047) (= x631 x984)) x1025))) x572))
(assert (x549 x945))
(assert (x549 x283))
(assert (= x502 (x249 (x1339 x502))))
(assert (x549 x528))
(assert (x549 x1148))
(assert (= (x1083 x756) (ite (= x756 x1222) x312 (x134 x756))))
(assert (x549 x926))
(assert (x549 x1491))
(assert (x549 x1549))
(assert (x85 x683))
(assert (x85 x1163))
(assert (= x399 (x249 (x1339 x399))))
(assert (=> (> (+ 10000 1) x521) (= (x625 x521) (x1339 x521))))
(assert (x549 x179))
(assert (= (=> (= x1142 x530) x355) x1137))
(assert (x85 x158))
(assert (x549 x416))
(assert (x549 x1117))
(assert (= (x1098 x1462) (ite (and x20 (not x591) x950) (x1523 x1462) (x749 x1462))))
(assert (= (ite (and x1563 x754) (x1206 x498) (x1521 x498)) (x244 x498)))
(assert (x549 x815))
(assert (x549 x450))
(assert (= (x1084 x775) (ite (and (not x1131) x1563 x803 (not x434)) (x702 x775) (ite (and x1563 (not x1131) (not x803)) (x1083 x775) (ite (and x1131 x1563) (x1083 x775) (x892 x775))))))
(assert (x549 x920))
(assert (x549 x798))
(assert (x85 x1537))
(assert (x549 x1213))
(assert (x549 x58))
(assert (x549 x705))
(assert (= (ite (and x934 x1608) (x873 x985) (x821 x985)) (x475 x985)))
(assert (x549 x822))
(assert (x549 x1601))
(assert (x85 x1081))
(assert (x549 x1241))
(assert (x549 x329))
(assert (= (or (and x278 (not x2)) (and (not x287) x648) (and x1340 x1049)) x1527))
(assert (= (ite (= x661 x1233) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x30 x661)) (x553 x661)))
(assert (x549 x736))
(assert (= (x249 (x1339 x225)) x225))
(assert (x549 x1076))
(assert (= (x249 (x1339 x389)) x389))
(assert (= (x249 (x1339 x477)) x477))
(assert (= x1011 (=> (and (= (= x171 0) x1326) (or (and (or (and (= 1 x390) (not x1586) (= x805 x898)) (and x1586 (= x390 0) (= 0 x805))) (= (x704 x1068) x898) (= x1586 (= 0 x898)) (= (x462 (x1339 x171) (x625 10) 0) x263) (= x903 (x1135 1461501637330902918203684832716283019655932542975 x1127)) (<= 0 x898) (<= x898 115792089237316195423570985008687907853269984665640564039457584007913129639935) (not x1326) (= x1068 (x462 (x1339 x903) x263 0))) (and (= x805 0) (= x390 0) x1326))) x1494)))
(assert (= (x625 1968616202) (x1339 1968616202)))
(assert (x549 x160))
(assert (= (x563 x985) (ite (= x985 x601) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x1383 x985))))
(assert (x549 x51))
(assert (x549 x1055))
(assert (= x1156 (or (and x1047 x508) (and x1350 (not x1165)) (and x1109 (not x61)))))
(assert (x549 x1015))
(assert (x549 x97))
(assert (= (or (and (not x175) x715) (and x1606 (not x693))) x975))
(assert (x549 x1030))
(assert (x549 x1274))
(assert (= x1274 (x249 (x1339 x1274))))
(assert (=> (< (- x1020 1) 10000) (= (x625 x1020) (x1339 x1020))))
(assert (x549 x513))
(assert (=> (> (+ 10000 1) x1296) (= (x625 x1296) (x1339 x1296))))
(assert (x549 x139))
(assert (= x180 (=> (= x1545 (< 0 x368)) (and (=> (not x1545) x177) (=> x1545 x231)))))
(assert (x549 x1299))
(assert (x85 x1441))
(assert (x549 x879))
(assert (x85 x556))
(assert (= (=> (and (not (= 2061678023 x675)) (= x864 (x462 (x1339 x268) (x625 6) 0)) (= (x937 x1118) x812) (= x1118 (x462 (x1339 x768) x864 0)) (not (> 911411945 x675)) (= 2258409472 x675) (< x675 2293535753) (= x1210 x812) (<= x768 1461501637330902918203684832716283019655932542975) (not (> 1968616202 x675)) (>= x812 0) (= x391 (x1042 (x1339 274184521717934524641157099916833587206))) (not (= x675 2211524764)) (not (= 1968616202 x675)) (> x391 0) (not (= 1986467848 x675)) (<= x812 115792089237316195423570985008687907853269984665640564039457584007913129639935)) (=> (and (= x1561 x337) (= x1322 x998) (= x914 x99) (= x1210 x822)) x69)) x506))
(assert (= (x401 x709) (ite (= x1148 x709) x1398 (x211 x709))))
(assert (= (x1083 x673) (ite (= x1222 x673) x312 (x134 x673))))
(assert (x549 x898))
(assert (= (x1339 274184521717934524641157099916833587218) (x625 274184521717934524641157099916833587218)))
(assert (x549 x756))
(assert (x85 x1508))
(assert (= (x1083 x1222) x312))
(assert (x549 x564))
(assert (= (x563 x894) (ite (= x601 x894) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x1383 x894))))
(assert (x549 x845))
(assert (x85 x1274))
(assert (x549 x254))
(assert (x549 x23))
(assert (= (x902 x709) (ite (and x607 x723) (x1418 x709) (x1311 x709))))
(assert (x85 x1318))
(assert (= (x625 69947311) (x1339 69947311)))
(assert (x549 x1304))
(assert (x549 x797))
(assert (= x1563 (or (and (not x740) x1597) x1057)))
(assert (x85 x751))
(assert (= (x902 x1362) (ite (and x723 x607) (x1418 x1362) (x1311 x1362))))
(assert (= x1435 (=> (and (or (and (not x1415) (<= x160 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x1135 1461501637330902918203684832716283019655932542975 x1127) x1428) (= x1480 (x462 (x1339 x1426) (x625 9) 0)) (= 1 x533) (= x160 (x1220 x77)) (<= 0 x160) (= (x462 (x1339 x904) x1023 0) x77) (= x1023 (x462 (x1339 x1428) x1480 0)) (= x904 (x1135 1461501637330902918203684832716283019655932542975 x908)) (= x160 x1312)) (and x1415 (= 0 x1312) (= 0 x533))) (= x1415 (= 0 x1426))) x454)))
(assert (x549 x516))
(assert (=> (> (+ 10000 1) x1525) (= (x625 x1525) (x1339 x1525))))
(assert (= (x249 (x1339 x879)) x879))
(assert (= (x702 x673) (ite (= x1095 x673) x46 (x1083 x673))))
(assert (= (x249 (x1339 x323)) x323))
(assert (x549 x1064))
(assert (x549 x1430))
(assert (x549 x1298))
(assert (= (x1339 142201243) (x625 142201243)))
(assert (= (ite (= x985 x448) x997 (x482 x448)) (x1418 x448)))
(assert (x85 x836))
(assert (x549 x1289))
(assert (x549 x789))
(assert (= (x1083 x894) (ite (= x1222 x894) x312 (x134 x894))))
(assert (= x182 (x249 (x1339 x182))))
(assert (x549 x659))
(assert (= x1057 (or x1156 x1357)))
(assert (= x531 (x249 (x1339 x531))))
(assert (= x158 (x249 (x1339 x158))))
(assert (x85 x906))
(assert (x549 x890))
(assert (= x44 true))
(assert (x549 x1283))
(assert (x85 x477))
(assert (x85 x389))
(assert (x549 x1349))
(assert (= (x625 2418364589) (x1339 2418364589)))
(assert (x549 x751))
(assert (=> (> (+ 10000 1) x275) (= (x1339 x275) (x625 x275))))
(assert (x549 x1318))
(assert (= (x1214 x673) (ite (= x576 x673) x589 (x553 x673))))
(assert (x549 x1401))
(assert (x549 x597))
(assert (x549 x31))
(assert (= (=> (and (or (and (not x1444) (>= x31 0) (<= x31 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x462 (x1339 x1081) (x625 1) 0) x1044) (= x1168 (x1135 1461501637330902918203684832716283019655932542975 x908)) (>= x1443 0) (= x1345 (x257 x1044 1)) (<= x1443 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x1144 (x1223 (+ 64 x1229))) (= (x462 (x1339 x1607) x162 0) x818) (>= x852 0) (= x439 (= x995 0)) (= (x1135 1461501637330902918203684832716283019655932542975 x1127) x1607) (= x1399 (> x697 x31)) (or (and (= x461 (x462 (x1339 x1296) x1416 0)) x439 (= (x1135 1461501637330902918203684832716283019655932542975 x908) x1125) (= x1296 (x1135 1461501637330902918203684832716283019655932542975 x1127)) (= (x462 (x1339 x1125) x461 0) x712) (= x1144 x1236) (= x1416 (x462 (x1339 x1081) (x625 7) 0))) (and (< (* x1312 x995) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x281 x954) (= x443 (x462 (x1339 x1081) (x625 3) 0)) (= x1040 (x1135 1461501637330902918203684832716283019655932542975 x1127)) (= x164 (x1135 1461501637330902918203684832716283019655932542975 x1127)) (= (x462 (x1339 x178) x700 0) x1218) (= (x1135 1461501637330902918203684832716283019655932542975 x908) x178) (not x439) (= x592 (x462 (x1339 x1158) x1070 0)) (= x327 x384) (= (* x1312 x995) x384) (= x509 x327) (= x1236 x1144) (= x954 (x555 x1218)) (= x700 (x462 (x1339 x164) x443 0)) (= x1158 (x1135 1461501637330902918203684832716283019655932542975 x908)) (= (+ x281 x509) x496) (< (+ x327 x954) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= (x462 (x1339 x1040) x1478 0) x1070) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x954) (<= 0 x954) (= x1478 (x462 (x1339 x1081) (x625 7) 0)))) (= x1116 (x1223 (+ 32 x1229))) (= (x1193 x1345) x852) (= (x462 (x1339 x1168) x818 0) x494) (= x1443 (x437 x1044)) (<= x852 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x1516 x1116) x697) (= x31 (x961 x494)) (= x162 (x462 (x1339 x1081) (x625 7) 0)) (or (and (= x1140 (x1516 x1116)) (= (= x31 0) x651) (or (and (= 604800 x213) (= x382 (ite (> 604800 x1275) x1275 604800)) (= (x574 (- x646 x31)) x1275) (not (< x646 x31)) (not x651) (= x382 x995)) (and (= x1112 x995) (= (x574 (- x646 x1054)) x1112) x651 (= x1054 (x1516 x1229)) (not (< x646 x1054)))) (or (and x17 (= x1420 (x1516 x1116)) (= x1420 x646)) (and (= x793 x646) (not x17))) (= (> x793 x1140) x17) x1399) (and (not x1399) (= 0 x995)))) (and (= (x462 (x1339 x1376) x365 0) x1553) (= x243 (x1135 1461501637330902918203684832716283019655932542975 x1127)) (= x1236 x1229) x1444 (= x1376 (x1135 1461501637330902918203684832716283019655932542975 x908)) (= x43 (x462 (x1339 x1081) (x625 7) 0)) (= x365 (x462 (x1339 x243) x43 0)))) (= (= 0 x533) x1147) (= (= 0 x1312) x1444) (or (and (= x585 (x462 (x1339 x842) x142 0)) (not x1147) (= (x462 (x1339 x1081) (x625 9) 0) x142) (= (x1135 1461501637330902918203684832716283019655932542975 x1127) x842) (= (x1135 1461501637330902918203684832716283019655932542975 x908) x1085) (= x1136 (x462 (x1339 x1085) x585 0))) x1147)) x1018) x454))
(assert (x549 x743))
(assert (= (ite (= x1129 x202) x122 (x233 x202)) (x366 x202)))
(assert (=> (> (+ 10000 1) x799) (= (x1339 x799) (x625 x799))))
(assert (= (ite (= x349 x1222) x312 (x134 x349)) (x1083 x349)))
(assert (x85 x823))
(assert (= (x90 x1429) (ite (= x1280 x1429) x1495 (x1346 x1429))))
(assert (= 0 (x1073 x1302)))
(assert (x549 x1612))
(assert (= (ite (= x448 x716) x1180 (x1214 x448)) (x279 x448)))
(assert (= (ite (= x1256 x1462) x295 (x414 x1462)) (x256 x1462)))
(assert (x549 x913))
(assert (x549 x22))
(assert (= 2835717307 (x249 (x625 2835717307))))
(assert (x85 x1460))
(assert (x85 x124))
(assert (= (x414 x1462) (ite (= x1462 x519) x1558 (x563 x1462))))
(assert (= (ite (= x1462 x601) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x1383 x1462)) (x563 x1462)))
(assert (x549 x1112))
(assert (x549 x500))
(assert (x549 x481))
(assert (x549 x1208))
(assert (= x1513 true))
(assert (x549 x970))
(assert (x549 x1170))
(assert (= (ite (= x1256 x673) x295 (x414 x673)) (x256 x673)))
(assert (= (=> (and (= x1389 2743102681) (= x318 x1179) (not (> 2293535753 x1389)) (>= x1179 0) (not (< x1389 2690754053)) (= (x462 (x1339 x1294) x1175 0) x1351) (>= 1461501637330902918203684832716283019655932542975 x1294) (< x1389 2960351575) (= (x1042 (x1339 274184521717934524641157099916833587206)) x637) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1179) (= (x462 (x1339 x298) (x625 3) 0) x1175) (= (x462 (x1339 x643) x1351 0) x606) (not (= 2690754053 x1389)) (> x637 0) (>= 1461501637330902918203684832716283019655932542975 x643) (= (x1078 x606) x1179)) (=> (and (= x998 x1114) (= (<= x1595 x1072) x236) (= x543 x1561) (= x1595 x318)) x820)) x568))
(assert (x85 x136))
(assert (= x286 (x249 (x1339 x286))))
(assert (=> (> (+ 10000 1) x430) (= (x1339 x430) (x625 x430))))
(assert (x549 x1575))
(assert (=> (< (- x1556 1) 10000) (= (x625 x1556) (x1339 x1556))))
(assert (= 0 (x1073 x673)))
(assert (=> (> (+ 10000 1) x152) (= (x1339 x152) (x625 x152))))
(assert (x549 x185))
(assert (x549 x998))
(assert (x549 x161))
(assert (x549 x323))
(assert (x549 x356))
(assert (= (x364 x775) (ite (= x274 x775) x1283 (x256 x775))))
(assert (x549 x1096))
(assert (x549 x215))
(assert (= (x1083 x1439) (ite (= x1222 x1439) x312 (x134 x1439))))
(assert (x549 x1114))
(assert (x549 x969))
(assert (x549 x205))
(assert (x549 x847))
(assert (=> (> (+ 10000 1) x161) (= (x625 x161) (x1339 x161))))
(assert (= (ite (= x1302 x1362) x1258 (x401 x1302)) (x1380 x1302)))
(assert (=> (< (- x111 1) 10000) (= (x625 x111) (x1339 x111))))
(assert (= (x902 x1462) (ite (and x723 x607) (x1418 x1462) (x1311 x1462))))
(assert (x549 x1455))
(assert (= x215 (x249 (x1339 x215))))
(assert (x549 x375))
(assert (= (x249 (x1339 x915)) x915))
(assert (x1037 x1127 x680))
(assert (x549 x1133))
(assert (=> (< (- x194 1) 10000) (= (x1339 x194) (x625 x194))))
(assert (= (and x577 x1384) x1506))
(assert (= (and x715 x175) x679))
(assert (x549 x212))
(assert (= (ite (= x230 x601) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x1383 x230)) (x563 x230)))
(assert (x195 x537))
(assert (= (x256 x448) (ite (= x448 x1256) x295 (x414 x448))))
(assert (x549 x99))
(assert (x549 x286))
(assert (x549 x298))
(assert (= (ite (= x1095 x336) x46 (x1083 x336)) (x702 x336)))
(assert (= x1450 (x249 (x1339 x1450))))
(assert (=> (< (- x10 1) 10000) (= (x1339 x10) (x625 x10))))
(assert (= x984 (x249 (x1339 x984))))
(assert (x549 x1258))
(assert (x85 x386))
(assert (= x1452 (x249 (x1339 x1452))))
(assert (x549 x942))
(assert (= x1272 (x249 (x1339 x1272))))
(assert (= (ite (= x1095 x1362) x46 (x1083 x1362)) (x702 x1362)))
(assert (x85 x79))
(assert (= (ite (= x756 x985) x997 (x482 x756)) (x1418 x756)))
(assert (= (=> (= x1056 (> x997 1)) (and (=> (not x1056) x63) (=> (and (= x1431 (x1223 (+ x1041 128))) (= x241 (x5 x1462)) (= x968 (< 0 x884)) (= x1233 (x1223 (+ x1041 96))) (or (and (or (and (= x593 32) (not x1407)) (and x1407 (= x709 (x1223 (+ x1208 64))) (= x1515 (< 64 x884)) (= x716 (x1223 (+ 96 x761))) (or (and (not x1515) (= x593 64)) (and (= (x1223 (+ 128 x761)) x994) (or (and (= 128 x593) (= x1301 (x1266 x516)) (= (x1223 (+ 160 x761)) x98) (= (x1223 (+ 128 x1208)) x516) (= x11 (> x884 128)) (not x11) x335) (and (not x335) (= 96 x593))) (= (< 96 x884) x335) (= x661 (x1223 (+ 96 x1208))) x1515 (= x427 (x279 x661)))) (= x1180 (x1214 x709)))) (= (> x884 32) x1407) (= x846 x349) (= x589 (x553 x349)) (= x1431 x576) x968) (and (not x968) (= x593 0))) (= x1050 (x1223 (+ 68 x1208))) x1056 x785 (= (x1223 (+ x608 192)) x1462) (= x843 (x1135 1461501637330902918203684832716283019655932542975 x908)) (= x392 (x1135 26959946667150639794667015087019630673637144422540572481103610249215 x1562)) (or (not x291) (and (= (x1223 (+ x1431 x884)) x479) x291)) (> x997 1) (= x291 (> x593 x884)) (= (x1223 (+ x392 76450787359836037641860180984291677749980919077056822294353438043884394381312)) x664) (= x158 (x1110 x1019)) (= 0 x29) (< 1 x105) (= x846 (x1223 (+ x1208 32))) (= x895 (x1042 (x1339 x158))) (= x206 (x574 (- x761 x1208))) (<= x158 1461501637330902918203684832716283019655932542975) (= x1019 (x1223 (+ x1573 64))) (= (x1223 (+ 36 x1208)) x1041) (= (x5 x985) x105) (= (x574 (- x206 32)) x110) (= x1562 (x598 x846)) (= (< 0 x895) x785) (= x761 (x1223 (+ x1208 100))) (= x884 (x553 x1208))) x317))) x602))
(assert (= (x1523 x1462) (ite (and x887 x950 x88 x87 x20 (not x1063)) (x364 x1462) (ite (and x887 x950 x20 x88 (not x87)) (x256 x1462) (ite (and x20 x950 x887 (not x88)) (x414 x1462) (ite (and x20 (not x887) x950) (x563 x1462) (x655 x1462)))))))
(assert (=> (> (+ 10000 1) x751) (= (x1339 x751) (x625 x751))))
(assert (= (ite (and (not x434) (not x1131) x1563 x803) (x702 x230) (ite (and (not x1131) x1563 (not x803)) (x1083 x230) (ite (and x1131 x1563) (x1083 x230) (x892 x230)))) (x1084 x230)))
(assert (= (x1190 x1065) (ite (and x1563 x754) (x282 x1065) (x184 x1065))))
(assert (= 1000000000000000000 (x249 (x625 1000000000000000000))))
(assert (x549 x1562))
(assert (= (x1214 x661) (ite (= x576 x661) x589 (x553 x661))))
(assert (=> (< (- x12 1) 10000) (= (x625 x12) (x1339 x12))))
(assert (= (ite (and x803 (not x1131) x1563 (not x434)) (x702 x516) (ite (and (not x803) x1563 (not x1131)) (x1083 x516) (ite (and x1563 x1131) (x1083 x516) (x892 x516)))) (x1084 x516)))
(assert (x85 x1319))
(assert (x549 x277))
(assert (= x1463 x762))
(assert (= x604 (x249 (x1339 x604))))
(assert (= (x563 x846) (ite (= x846 x601) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x1383 x846))))
(assert (x549 x1168))
(assert (x549 x247))
(assert (x549 x537))
(assert (= (x401 x775) (ite (= x1148 x775) x1398 (x211 x775))))
(assert (x549 x628))
(assert (=> (< (- x906 1) 10000) (= (x625 x906) (x1339 x906))))
(assert (x549 x823))
(assert (x85 x1100))
(assert (= x1244 x1066))
(assert (= x1279 (x249 (x1339 x1279))))
(assert (x549 x1495))
(assert (x549 x1590))
(assert (= (x1339 18446744073709551615) (x625 18446744073709551615)))
(assert (x549 x520))
(assert (x549 x171))
(assert (x549 x1132))
(assert (x549 x728))
(assert (= (x1084 x661) (ite (and (not x434) x1563 x803 (not x1131)) (x702 x661) (ite (and (not x1131) x1563 (not x803)) (x1083 x661) (ite (and x1131 x1563) (x1083 x661) (x892 x661))))))
(assert (= (x1339 911411945) (x625 911411945)))
(assert (x85 x1035))
(assert (=> (< (- x1243 1) 10000) (= (x1339 x1243) (x625 x1243))))
(assert (x549 x1077))
(assert (x549 x173))
(assert (= (ite (and x1608 x934) (x873 x516) (x821 x516)) (x475 x516)))
(assert (= x1471 (x249 (x1339 x1471))))
(assert (x549 x368))
(assert (=> (> (+ 10000 1) x1158) (= (x625 x1158) (x1339 x1158))))
(assert (x549 x523))
(assert (= x136 (x249 (x1339 x136))))
(assert (=> (< (- x1428 1) 10000) (= (x1339 x1428) (x625 x1428))))
(assert (x85 x300))
(assert (= (=> (and (= (= x905 0) x175) (= x135 (x1135 1461501637330902918203684832716283019655932542975 x1127)) (= x905 (x1557 x292)) (>= x905 0) (<= x905 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x462 (x1339 x548) x807 0) x292) (= (x462 (x1339 x368) (x625 7) 0) x444) (= x807 (x462 (x1339 x135) x444 0)) (= (x1135 1461501637330902918203684832716283019655932542975 x908) x548)) (and (=> x175 x501) (=> (and (= x368 x530) (not x175)) x1137))) x231))
(assert (=> (> (+ 10000 1) x1578) (= (x1339 x1578) (x625 x1578))))
(assert (=> (> (+ 10000 1) x293) (= (x625 x293) (x1339 x293))))
(assert (= (=> (and (= x208 2743102681) (not (< x208 2293535753)) (= (x1042 (x1339 274184521717934524641157099916833587206)) x1490) (< 0 x1490) (not (< x208 2690754053)) (>= 1461501637330902918203684832716283019655932542975 x1103) (<= x215 1461501637330902918203684832716283019655932542975) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1551) (>= x1551 0) (not (= x208 2690754053)) (= x1551 (x1078 x1164)) (= (x462 (x1339 x1103) x1080 0) x832) (< x208 2960351575) (= x1092 x1551) (= (x462 (x1339 x215) x832 0) x1164) (= x1080 (x462 (x1339 x531) (x625 3) 0))) (=> (and (= x194 x451) (= x275 x998) (= x914 x552) (= x1561 x1460) (= x1092 x815)) x245)) x682))
(assert (x549 x799))
(assert (= (x249 (x1339 x521)) x521))
(assert (x549 x955))
(assert (= (ite (= x576 x448) x589 (x553 x448)) (x1214 x448)))
(assert (x549 x1286))
(assert (= x1296 (x249 (x1339 x1296))))
(assert (= (=> (and (= (x462 (x1339 x1274) x334 0) x1526) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x35) (= x334 (x462 (x1339 x1081) (x625 7) 0)) (= x136 (x1135 1461501637330902918203684832716283019655932542975 x908)) (= x35 (x961 x446)) (= (x462 (x1339 x136) x1526 0) x446) (>= x35 0) (= x358 (= 0 x35)) (= (x1135 1461501637330902918203684832716283019655932542975 x1127) x1274)) (and (=> x358 x325) (=> (and (= x1081 x600) (not x358)) x1033))) x491))
(assert (= x352 (x249 (x1339 x352))))
(assert (x549 x616))
(assert (=> (< (- x552 1) 10000) (= (x625 x552) (x1339 x552))))
(assert (x85 x814))
(assert (x549 x530))
(assert (x549 x711))
(assert (= (=> (and (= (x462 (x1339 x1081) (x625 7) 0) x678) (= x299 (x1135 1461501637330902918203684832716283019655932542975 x1127)) (= x1231 (< 0 x1381)) (= x79 (x1135 1461501637330902918203684832716283019655932542975 x908)) (= (x462 (x1339 x299) x678 0) x522) (>= x1381 0) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1381) (= x1432 (x462 (x1339 x79) x522 0)) (<= x269 115792089237316195423570985008687907853269984665640564039457584007913129639935) (not (> x309 x269)) (>= x269 0) (= (x961 x1432) x1381)) (and (=> (not x1231) x217) (=> (and (<= 0 x466) (= x54 (x462 (x1339 x1544) x636 0)) (= x86 (x462 (x1339 x823) x54 0)) (= x1312 x466) (= (x462 (x1339 x1081) (x625 9) 0) x636) (= (x1135 1461501637330902918203684832716283019655932542975 x908) x823) (= x1544 (x1135 1461501637330902918203684832716283019655932542975 x1127)) (= x466 (x1220 x86)) x1231 (= x533 0) (<= x466 115792089237316195423570985008687907853269984665640564039457584007913129639935)) x454))) x1511))
(assert (x549 x1103))
(assert (x549 x221))
(assert (x549 x1024))
(assert (=> (> (+ 10000 1) x135) (= (x1339 x135) (x625 x135))))
(assert (= 759532456 (x249 (x625 759532456))))
(assert (x549 x392))
(assert (= x146 x468))
(assert (=> (> (+ 10000 1) x300) (= (x625 x300) (x1339 x300))))
(assert (x85 x1292))
(assert (x549 x399))
(assert (= (ite (= x985 x1462) x997 (x482 x1462)) (x1418 x1462)))
(assert (x549 x1322))
(assert (=> (< (- x1187 1) 10000) (= (x625 x1187) (x1339 x1187))))
(assert (= (=> (= x20 (< 0 x997)) (and (=> (not x20) x63) (=> (and (= (< x481 x739) x591) (= (x1223 (+ 76450787359836037641860180984291677749980919077056822294353438043884394381312 x770)) x717) (= x1546 x1500) (= (x1042 (x1339 x300)) x1001) (= (x1223 (+ 128 x1568)) x732) (= x300 (x1110 x1500)) (= x410 (> x1001 0)) x410 (= x1077 (x1223 (+ 100 x764))) (= (x1223 (+ x764 68)) x784) (= x1491 0) (= x481 (x563 x764)) (= x1439 (x1223 (+ x764 32))) (= x1113 (x574 (- x445 32))) (<= x300 1461501637330902918203684832716283019655932542975) (= (< 0 x481) x887) (= (x33 x1439) x1354) (< 0 x997) (= (x1135 1461501637330902918203684832716283019655932542975 x908) x1297) (= (x1223 (+ x1568 96)) x601) (= x770 (x1135 26959946667150639794667015087019630673637144422540572481103610249215 x1354)) (= x1034 (x1223 (+ x608 160))) (= (x447 x985) x1122) (or (not x591) (and x591 (= (x1223 (+ x481 x732)) x212))) (= (x1223 (+ 36 x764)) x1568) (> x1122 0) (= x445 (x574 (- x1077 x764))) (or (and (not x887) (= 0 x739)) (and (= (> x481 32) x88) (= x519 x732) (= x1439 x894) (= x1558 (x563 x894)) x887 (or (and (not x88) (= 32 x739)) (and (= (x1223 (+ 64 x764)) x1472) (= x295 (x414 x1472)) (= x87 (< 64 x481)) x88 (= (x1223 (+ 96 x1077)) x1256) (or (and (= x336 (x1223 (+ 96 x764))) (= (< 96 x481) x1063) (or (and (= 96 x739) (not x1063)) (and (= x1302 (x1223 (+ x764 128))) (= x618 (x1223 (+ 160 x1077))) (= 128 x739) (= (x364 x1302) x942) (= (> x481 128) x1253) x1063 (not x1253))) (= (x256 x336) x1283) (= x274 (x1223 (+ x1077 128))) x87) (and (not x87) (= 64 x739))))))) x20 (= x1132 (x447 x1034))) x819))) x854))
(assert (x549 x485))
(assert (x85 x1281))
(assert (=> (< (- x304 1) 10000) (= (x625 x304) (x1339 x304))))
(assert (= (x249 (x1339 x1441)) x1441))
(assert (= x299 (x249 (x1339 x299))))
(assert (x549 x113))
(assert (x549 x1187))
(assert (x85 x849))
(assert (x85 x67))
(assert (x549 x200))
(assert (= x762 (or (and (not x1056) x840) x307 (and (not x20) x950))))
(assert (= x1484 x1314))
(assert (= (ite (= x1233 x349) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x30 x349)) (x553 x349)))
(assert (= (=> (and (= x287 (> x650 0)) (= (x574 (- x368 1)) x650)) (and (=> (not x287) x1387) (=> x287 x66))) x338))
(assert (x549 x1564))
(assert (= (ite (= x601 x775) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x1383 x775)) (x563 x775)))
(assert (= (x249 (x1339 x617)) x617))
(assert (= (x1084 x756) (ite (and (not x434) x803 (not x1131) x1563) (x702 x756) (ite (and x1563 (not x1131) (not x803)) (x1083 x756) (ite (and x1563 x1131) (x1083 x756) (x892 x756))))))
(assert (x549 x1576))
(assert (= x1049 (and x648 x287)))
(assert (= x298 (x249 (x1339 x298))))
(assert (x549 x1508))
(assert (=> (> (+ 10000 1) x686) (= (x625 x686) (x1339 x686))))
(assert (x549 x1259))
(assert (x549 x3))
(assert (x549 x1367))
(assert (x549 x1312))
(assert (= (ite (and x723 x607) (x1418 x846) (x1311 x846)) (x902 x846)))
(assert (= (ite (and x1563 x803 (not x434) (not x1131)) (x366 x1280) (ite (and (not x803) x1563 (not x1131)) (x233 x1280) (ite (and x1563 x1131) (x233 x1280) (x710 x1280)))) (x1346 x1280)))
(assert (= x1485 (x249 (x1339 x1485))))
(assert (= (=> (= x171 x631) x1011) x1025))
(assert (x195 26959946667150639794667015087019630673637144422540572481103610249215))
(assert (x85 x424))
(assert (x549 x1127))
(assert (x85 x111))
(assert (x549 x442))
(assert (x549 x1275))
(assert (x85 x298))
(assert (x85 x356))
(assert (x549 x882))
(assert (= (ite (= x1280 x1498) x1495 (x1346 x1498)) (x90 x1498)))
(assert (= (x249 (x1339 x548)) x548))
(assert (x549 x118))
(assert (x549 x1420))
(assert (x549 x884))
(assert (= x559 (and (not x1027) x722)))
(assert (= (ite (and x1056 x1515 x840 x1407 (not x335) x968) (x1266 x673) (ite (and x840 x1407 (not x1515) x968 x1056) (x279 x673) (ite (and x1056 x968 x840 (not x1407)) (x1214 x673) (ite (and (not x968) x840 x1056) (x553 x673) (x262 x673))))) (x1408 x673)))
(assert (=> (> (+ 10000 1) x1292) (= (x625 x1292) (x1339 x1292))))
(assert (= 635128645 (x249 (x625 635128645))))
(assert (x549 x791))
(assert (x549 x600))
(assert (= (x625 2512682246) (x1339 2512682246)))
(assert (= (x249 (x1339 x686)) x686))
(assert (= (x1073 x1362) 0))
(assert (= x1213 (x249 (x1339 x1213))))
(assert (= (ite (and x803 (not x1131) (not x434) x1563) (x702 x349) (ite (and (not x1131) (not x803) x1563) (x1083 x349) (ite (and x1563 x1131) (x1083 x349) (x892 x349)))) (x1084 x349)))
(assert (x549 x1128))
(assert (x549 x204))
(assert (x549 x190))
(assert (x549 x1426))
(assert (x549 x1599))
(assert (x549 x747))
(assert (= (x249 (x1339 x67)) x67))
(assert (x549 x479))
(assert (x85 x286))
(assert (= (x1339 2293535753) (x625 2293535753)))
(assert (x549 x357))
(assert (x549 x985))
(assert (= (x249 (x1339 x1508)) x1508))
(assert (x85 274184521717934524641157099916833587214))
(assert (= (=> (and (= (> x368 x1086) x362) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x309)) (= (x1223 (+ 1 x1081)) x368)) (and (=> (not x362) x16) (=> (and (= x1440 x764) x362) x854))) x412))
(assert (x549 x496))
(assert (x549 x354))
(assert (x549 x783))
(assert (x549 x459))
(assert (= (x366 x276) (ite (= x276 x1129) x122 (x233 x276))))
(assert (= (x249 (x625 18446744073709551615)) 18446744073709551615))
(assert (= (=> (= x1165 (> x1081 0)) (and (=> (not x1165) x844) (=> x1165 x780))) x1249))
(assert (x549 x1013))
(assert (= (ite (= x519 x985) x1558 (x563 x985)) (x414 x985)))
(assert (x549 x1116))
(assert (= (x1418 x775) (ite (= x775 x985) x997 (x482 x775))))
(assert (x549 x793))
(assert (=> (< (- x484 1) 10000) (= (x625 x484) (x1339 x484))))
(assert (x549 x1095))
(assert (x85 x1020))
(assert (x549 x727))
(assert (x549 x223))
(assert (=> (> (+ 10000 1) x842) (= (x1339 x842) (x625 x842))))
(assert (=> (< (- x513 1) 10000) (= (x1339 x513) (x625 x513))))
(assert (= (x1380 x846) (ite (= x1362 x846) x1258 (x401 x846))))
(assert (x549 x448))
(assert (x549 x1139))
(assert (x85 x1055))
(assert (x549 x860))
(assert (= (ite (= x1148 x230) x1398 (x211 x230)) (x401 x230)))
(assert (x85 x171))
(assert (= (ite (= x1095 x1302) x46 (x1083 x1302)) (x702 x1302)))
(assert (= x1052 (=> (and (= x1087 (= 0 x781)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x781) (= (x1135 1461501637330902918203684832716283019655932542975 x908) x280) (>= x781 0) (= x1197 (x462 (x1339 x1060) (x625 7) 0)) (= x484 (x1135 1461501637330902918203684832716283019655932542975 x1127)) (= (x462 (x1339 x280) x674 0) x923) (= x781 (x961 x923)) (= x674 (x462 (x1339 x484) x1197 0))) (and (=> (and (= x600 x1060) (not x1087)) x1033) (=> (and (= x301 (> x1239 0)) x1087 (not x301) (= (x574 (- x1060 1)) x1239)) x398)))))
(assert (x549 x83))
(assert (= (ite (and x1046 x1138) (x261 x448) (x381 x448)) (x670 x448)))
(assert (x85 x1607))
(assert (= (x249 (x1339 x1466)) x1466))
(assert (=> (< (- x643 1) 10000) (= (x1339 x643) (x625 x643))))
(assert (x549 x1572))
(assert (= (ite (= x756 x1148) x1398 (x211 x756)) (x401 x756)))
(assert (x549 x1094))
(assert (= (x625 2868243304) (x1339 2868243304)))
(assert (x549 x1546))
(assert (x549 x152))
(assert (x549 x814))
(assert (x85 x337))
(assert (= (x364 x661) (ite (= x274 x661) x1283 (x256 x661))))
(assert (= (x902 x1095) (ite (and x607 x723) (x1418 x1095) (x1311 x1095))))
(assert (= x161 (x249 (x1339 x161))))
(assert (= 0 (x1073 x1095)))
(assert (= 0 (x1073 x959)))
(assert (= (x249 (x1339 x650)) x650))
(assert (x549 x809))
(assert (= x688 (x249 (x1339 x688))))
(assert (x549 x1123))
(assert (x85 x225))
(assert (x199 x1170 x537))
(assert (= x1513 x107))
(assert (= (x1418 x1362) (ite (= x1362 x985) x997 (x482 x1362))))
(assert (= (x249 (x1339 x1085)) x1085))
(assert (= (=> (and (not (= 2418364589 x492)) (>= 1461501637330902918203684832716283019655932542975 x552) (> 2960351575 x492) (= (x462 (x1339 x1460) x348 0) x540) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1028) (= x1330 (x1042 (x1339 274184521717934524641157099916833587206))) (= (x462 (x1339 x194) x1363 0) x1498) (= 2532887486 x492) (not (= x492 2512682246)) (>= x1028 0) (not (= x492 2293535753)) (not (> 2293535753 x492)) (= x1028 x1030) (> x1330 0) (< x492 2690754053) (<= x194 1461501637330902918203684832716283019655932542975) (= x1028 (x907 x1498)) (= (x462 (x1339 x275) (x625 4) 0) x348) (= (x462 (x1339 x552) x540 0) x1363) (>= 1461501637330902918203684832716283019655932542975 x1460)) x687) x245))
(assert (= 115792089237316195423570985008687907853269984665640564039457 (x249 (x625 115792089237316195423570985008687907853269984665640564039457))))
(assert (=> (> (+ 10000 1) x1585) (= (x1339 x1585) (x625 x1585))))
(assert (x85 x152))
(assert (x549 x1462))
(assert (x549 x406))
(assert (= 2939843472 (x249 (x625 2939843472))))
(assert (= (=> (= x1155 (< x1086 x1081)) (and (=> (not x1155) x1511) (=> (and (= x764 x1229) x1155) x854))) x949))
(assert (x554 x1354 x62))
(assert (= x1590 (x249 (x1339 x1590))))
(assert (= (ite (and (not x1131) (not x434) x803 x1563) (x702 x1439) (ite (and (not x803) x1563 (not x1131)) (x1083 x1439) (ite (and x1563 x1131) (x1083 x1439) (x892 x1439)))) (x1084 x1439)))
(assert (= (and x679 x652) x1606))
(assert (x549 x856))
(assert (x85 x12))
(assert (x549 x745))
(assert (=> (< (- x1085 1) 10000) (= (x625 x1085) (x1339 x1085))))
(assert (x85 x1213))
(assert (x549 x480))
(assert (x549 x9))
(assert (=> (> (+ 10000 1) x515) (= (x625 x515) (x1339 x515))))
(assert (= x1243 (x249 (x1339 x1243))))
(assert (= (x553 x673) (ite (= x1233 x673) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x30 x673))))
(assert (x549 x449))
(assert (= x997 (x1418 x985)))
(assert (x549 x241))
(assert (x549 x849))
(assert (= (x1214 x709) (ite (= x576 x709) x589 (x553 x709))))
(assert (= (x401 x1439) (ite (= x1439 x1148) x1398 (x211 x1439))))
(assert (x549 x768))
(assert (x549 x248))
(assert (x549 x1281))
(assert (x549 x1548))
(assert (x549 x1072))
(assert (x549 x940))
(assert (x549 x1279))
(assert (x549 x213))
(assert (=> (< (- x368 1) 10000) (= (x1339 x368) (x625 x368))))
(assert (x549 x1085))
(assert (= x996 (or x1099 x975)))
(assert (= (x249 (x1339 x1125)) x1125))
(assert (=> (< (- x1213 1) 10000) (= (x625 x1213) (x1339 x1213))))
(assert (= (ite (and (not x591) x950 x20) (x1523 x775) (x749 x775)) (x1098 x775)))
(assert (= (x249 (x1339 x368)) x368))
(assert (= (ite (and x1608 x934) (x873 x846) (x821 x846)) (x475 x846)))
(assert (= (x249 (x1339 x1292)) x1292))
(assert (= (x249 (x625 2764855426)) 2764855426))
(assert (= x736 (x249 (x1339 x736))))
(assert (x85 x1279))
(assert (x549 x644))
(assert (= (ite (and x1104 x1444) (x555 x72) (ite (and x439 (not x1444) x1104) (x555 x72) (x167 x72))) (x224 x72)))
(assert (= (x249 (x1339 x906)) x906))
(assert (= (and x1405 (not x1067)) x1221))
(assert (= (and (not x1155) x1502) x1497))
(assert (x549 x1233))
(assert (= x174 (x249 (x1339 x174))))
(assert (x549 x333))
(assert (= x607 x1502))
(assert (=> (> (+ 10000 1) x1040) (= (x1339 x1040) (x625 x1040))))
(assert (x549 x908))
(assert (x549 x353))
(assert (= (=> (and (= (x907 x202) x920) (not (= x1451 2418364589)) (not (< x1451 2293535753)) (= x920 x1150) (< 0 x871) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x920) (= (x462 (x1339 x906) x45 0) x297) (< x1451 2690754053) (<= x906 1461501637330902918203684832716283019655932542975) (not (= 2512682246 x1451)) (= x1 (x462 (x1339 x174) x297 0)) (= (x462 (x1339 x121) (x625 4) 0) x45) (= x871 (x1042 (x1339 274184521717934524641157099916833587206))) (< x1451 2960351575) (>= x920 0) (<= x174 1461501637330902918203684832716283019655932542975) (not (= 2293535753 x1451)) (= 2532887486 x1451) (>= 1461501637330902918203684832716283019655932542975 x70) (= (x462 (x1339 x70) x1 0) x202)) x599) x590))
(assert (x549 x766))
(assert (x549 x182))
(assert (= (x1083 x1236) (ite (= x1222 x1236) x312 (x134 x1236))))
(assert (x85 x745))
(assert (= (ite (= x1129 x605) x122 (x233 x605)) (x366 x605)))
(assert (= (x1098 x448) (ite (and x20 (not x591) x950) (x1523 x448) (x749 x448))))
(assert (=> (< (- x903 1) 10000) (= (x625 x903) (x1339 x903))))
(assert (= (x1339 1461501637330902918203684832716283019655932542975) (x625 1461501637330902918203684832716283019655932542975)))
(assert (x85 x135))
(assert (= (x256 x1302) (ite (= x1256 x1302) x295 (x414 x1302))))
(assert (= (x401 x448) (ite (= x448 x1148) x1398 (x211 x448))))
(assert (= (=> (and (> 911411945 x790) (= (x1042 (x1339 274184521717934524641157099916833587206)) x419) (>= 1461501637330902918203684832716283019655932542975 x337) (= x1152 (x1392 x665)) (<= x1152 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= x99 1461501637330902918203684832716283019655932542975) (< x790 2293535753) (= x790 759532456) (not (= x790 468353030)) (>= x1152 0) (= x759 (x462 (x1339 x337) x1177 0)) (not (> 468353030 x790)) (> x419 0) (= x665 (x462 (x1339 x99) x759 0)) (not (= 635128645 x790)) (= x1152 x1212) (= (x462 (x1339 x1322) (x625 7) 0) x1177)) (=> (and (= x1561 x836) (= x124 x998) (= (<= x1071 x822) x603) (= x1212 x1071)) x991)) x69))
(assert (x85 x1103))
(assert (= x108 (x249 (x1339 x108))))
(assert (= x699 x463))
(assert (x549 x309))
(assert (x549 x273))
(assert (x549 x906))
(assert (= (ite (and x1563 (not x1131) x803 (not x434)) (x366 x1498) (ite (and (not x803) (not x1131) x1563) (x233 x1498) (ite (and x1563 x1131) (x233 x1498) (x710 x1498)))) (x1346 x1498)))
(assert (x549 x581))
(assert (x549 x382))
(assert (=> (< (- x108 1) 10000) (= (x1339 x108) (x625 x108))))
(assert (= (x475 x230) (ite (and x934 x1608) (x873 x230) (x821 x230))))
(assert (= x1267 x1102))
(assert (=> (> (+ 10000 1) x548) (= (x1339 x548) (x625 x548))))
(assert (= (x625 826074471) (x1339 826074471)))
(assert (x549 x621))
(assert (=> (< (- x1452 1) 10000) (= (x625 x1452) (x1339 x1452))))
(assert (= (x249 (x625 649617121)) 649617121))
(assert (x549 x684))
(assert (=> (< (- x777 1) 10000) (= (x625 x777) (x1339 x777))))
(assert (x85 x904))
(assert (= (x279 x516) (ite (= x516 x716) x1180 (x1214 x516))))
(assert (x549 x1537))
(assert (= (ite (and x803 (not x1131) (not x434) x1563) (x702 x336) (ite (and (not x803) x1563 (not x1131)) (x1083 x336) (ite (and x1131 x1563) (x1083 x336) (x892 x336)))) (x1084 x336)))
(assert (= (x249 (x1339 x70)) x70))
(assert (=> (> (+ 10000 1) x659) (= (x1339 x659) (x625 x659))))
(assert (= (or (and (not x1583) x1403) (and x577 (not x1384)) (and x186 x1087)) x1368))
(assert (= x934 (and x950 x20)))
(assert (= x577 (and x1497 (not x1231))))
(assert (= (ite (and x1104 x1444) (x555 x499) (ite (and x439 x1104 (not x1444)) (x555 x499) (x167 x499))) (x224 x499)))
(assert (x549 x833))
(assert (= (x249 (x1339 x1035)) x1035))
(assert (x85 x1142))
(assert (= (and (not x1046) x1138) x96))
(assert (= 0 (x1073 x1034)))
(assert (x549 x484))
(assert (= (ite (and x1563 x754) (x1206 x1603) (x1521 x1603)) (x244 x1603)))
(assert (= (x1339 2798343961) (x625 2798343961)))
(assert (= (=> (and (> 468353030 x1184) (< x1184 911411945) (>= x7 0) (= x1534 (x1042 (x1339 274184521717934524641157099916833587206))) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x7) (> 2293535753 x1184) (< 0 x1534) (not (= 87118632 x1184)) (= (x462 (x1339 x523) (x625 9) 0) x896) (= (x462 (x1339 x225) x788 0) x1337) (>= 1461501637330902918203684832716283019655932542975 x1569) (= 142201243 x1184) (= (x1220 x1337) x7) (<= x225 1461501637330902918203684832716283019655932542975) (= x794 x7) (not (= 69947311 x1184)) (= x788 (x462 (x1339 x1569) x896 0))) (=> (and (= (> x1609 0) x1388) (= x242 0) (= x998 x1508) (= x396 (and x1325 x1388)) (= x1561 x356) (= x794 x1609)) x1571)) x557))
(assert (=> (> (+ 10000 1) x124) (= (x1339 x124) (x625 x124))))
(assert (x549 x1261))
(assert (= (ite (and x1563 x754) (x1206 x972) (x1521 x972)) (x244 x972)))
(assert (= (x1083 x230) (ite (= x1222 x230) x312 (x134 x230))))
(assert (x549 x941))
(assert (x85 x194))
(assert (x85 x1437))
(assert (=> (> (+ 10000 1) x617) (= (x625 x617) (x1339 x617))))
(assert (x549 x1120))
(assert (= 0 (x1073 x448)))
(assert (= (ite (and x1563 (not x1131) (not x434) x803) (x366 x1429) (ite (and (not x1131) x1563 (not x803)) (x233 x1429) (ite (and x1131 x1563) (x233 x1429) (x710 x1429)))) (x1346 x1429)))
(assert (x549 x1263))
(assert (x549 x895))
(assert (x549 x1149))
(assert (= (x256 x985) (ite (= x985 x1256) x295 (x414 x985))))
(assert (= x615 x1247))
(assert (=> (> (+ 10000 1) x650) (= (x1339 x650) (x625 x650))))
(assert (=> (> (+ 10000 1) x1103) (= (x625 x1103) (x1339 x1103))))
(assert (= (ite (and x723 x607) (x1418 x894) (x1311 x894)) (x902 x894)))
(assert (x549 x1124))
(assert (x549 x438))
(assert (=> (< (- x1569 1) 10000) (= (x1339 x1569) (x625 x1569))))
(assert (= (x1339 76450787359836037641860180984291677749980919077056822294353438043884394381312) (x625 76450787359836037641860180984291677749980919077056822294353438043884394381312)))
(assert (x549 x686))
(assert (x549 x194))
(assert (= (x249 (x1339 x543)) x543))
(assert (x549 x1256))
(assert (= 274184521717934524641157099916833587214 (x249 (x1339 274184521717934524641157099916833587214))))
(assert (= (+ 1 (x249 x893)) (x249 (x257 x893 1))))
(assert (= x468 x1244))
(assert (x198 x60 x1509 x1379 x1412))
(assert (x549 x825))
(assert (= (x1083 x1095) (ite (= x1222 x1095) x312 (x134 x1095))))
(assert (x85 x1476))
(assert (= x659 (x249 (x1339 x659))))
(assert (x85 x531))
(assert (x85 x215))
(assert (= (x249 (x1339 x103)) x103))
(assert (= (x249 (x625 2743102681)) 2743102681))
(assert (= (x625 2939843472) (x1339 2939843472)))
(assert (= (ite (= x994 x516) x427 (x279 x516)) (x1266 x516)))
(assert (= (x1557 x1265) (ite (and x1444 x1104) (x1005 x1265) (ite (and (not x1444) x439 x1104) (x49 x1265) (x982 x1265)))))
(assert (= (=> (= 0 x1426) x1435) x398))
(assert (= (=> (= x913 x1385) x1517) x663))
(assert (= (ite (and x1563 x754) (x1206 x1118) (x1521 x1118)) (x244 x1118)))
(assert (x549 x1595))
(assert (x549 x1427))
(assert (x85 x103))
(assert (x549 x222))
(assert (=> (< (- x1124 1) 10000) (= (x625 x1124) (x1339 x1124))))
(assert (= (x249 (x1339 x842)) x842))
(assert (x549 x1452))
(assert (x85 x161))
(assert (x1037 x316 x1234))
(assert (x549 x688))
(assert (x549 x1559))
(assert (x549 x1520))
(assert (= (x249 (x1339 x1142)) x1142))
(assert (= (x1418 x709) (ite (= x985 x709) x997 (x482 x709))))
(assert (x549 x904))
(assert (= (x256 x230) (ite (= x230 x1256) x295 (x414 x230))))
(assert (= x1539 x960))
(assert (= x252 (x249 (x1339 x252))))
(assert (= (x249 (x625 142201243)) 142201243))
(assert (= (x249 (x1339 x1309)) x1309))
(assert (x549 x98))
(assert (x549 x994))
(assert (x549 x851))
(assert (x85 x1272))
(assert (= (x1266 x448) (ite (= x994 x448) x427 (x279 x448))))
(assert (= (ite (and x1056 (not x291) x840) (x1408 x448) (x429 x448)) (x347 x448)))
(assert (x195 1461501637330902918203684832716283019655932542975))
(assert (=> (< (- x1294 1) 10000) (= (x1339 x1294) (x625 x1294))))
(assert (x549 x460))
(assert (x85 x521))
(assert (x549 x646))
(assert (x85 x1578))
(assert (x549 x1200))
(assert (x85 x1124))
(assert (= (x90 x605) (ite (= x605 x1280) x1495 (x1346 x605))))
(assert (= x1143 (and x96 (not x407))))
(assert (= (or (and (not x1087) x186) (and x1506 (not x358))) x395))
(assert (x549 x878))
(assert (x85 x777))
(assert (x549 x1440))
(assert (= x16 (=> (and (= x766 (x1557 x1417)) (= x513 (x1135 1461501637330902918203684832716283019655932542975 x1127)) (not (< x269 x368)) (>= x766 0) (= x1417 (x462 (x1339 x117) x1240 0)) (= (x462 (x1339 x368) (x625 7) 0) x288) (<= x766 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x462 (x1339 x513) x288 0) x1240) (= x117 (x1135 1461501637330902918203684832716283019655932542975 x908)) (<= 0 x269) (= (> x766 0) x1067) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x269)) (and (=> (and (= (x1135 1461501637330902918203684832716283019655932542975 x908) x1525) (= x1079 (x462 (x1339 x368) (x625 9) 0)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1123) (= (x490 x763) x1123) (= x1352 (x462 (x1339 x1476) x1079 0)) (= x763 (x462 (x1339 x1525) x1352 0)) (= (x1135 1461501637330902918203684832716283019655932542975 x1127) x1476) (>= x1123 0) (= x1123 x400) (= 0 x179) x1067) x1547) (=> (not x1067) x180)))))
(assert (= (x224 x606) (ite (and x1444 x1104) (x555 x606) (ite (and x1104 x439 (not x1444)) (x555 x606) (x167 x606)))))
(assert (=> (< (- x1319 1) 10000) (= (x1339 x1319) (x625 x1319))))
(assert (= (x401 x516) (ite (= x516 x1148) x1398 (x211 x516))))
(assert (= (ite (and x950 (not x1063) x20 x87 x88 x887) (x364 x709) (ite (and x950 (not x87) x88 x887 x20) (x256 x709) (ite (and x20 (not x88) x887 x950) (x414 x709) (ite (and x20 x950 (not x887)) (x563 x709) (x655 x709))))) (x1523 x709)))
(assert (x549 x664))
(assert (x549 x1222))
(assert (= (x249 (x1339 x814)) x814))
(assert (=> (> (+ 10000 1) x915) (= (x625 x915) (x1339 x915))))
(assert (x549 x1038))
(assert (= (x249 (x1339 x1100)) x1100))
(assert (=> (> (+ 10000 1) x337) (= (x1339 x337) (x625 x337))))
(assert (= (ite (and x607 x723) (x1418 x1034) (x1311 x1034)) (x902 x1034)))
(assert (=> (< (- x736 1) 10000) (= (x1339 x736) (x625 x736))))
(assert (x549 x1525))
(assert (= x1124 (x249 (x1339 x1124))))
(assert (=> (> (+ 10000 1) x286) (= (x625 x286) (x1339 x286))))
(assert (= x856 (x249 (x1339 x856))))
(assert (x85 x1430))
(assert (= (ite (= x1148 x894) x1398 (x211 x894)) (x401 x894)))
(assert (x85 x243))
(assert (x549 x400))
(assert (= (=> (and (= x998 x268) (= x1561 x768)) x506) x63))
(assert (x549 x738))
(assert (= (x256 x516) (ite (= x516 x1256) x295 (x414 x516))))
(assert (= x118 (x249 (x1339 x118))))
(assert (x549 x656))
(assert (x549 x252))
(assert (= x173 (x249 (x1339 x173))))
(assert (x549 x376))
(assert (x549 x695))
(assert (x549 x422))
(assert (= 2293535753 (x249 (x625 2293535753))))
(assert (=> (< (- x280 1) 10000) (= (x625 x280) (x1339 x280))))
(assert (= (ite (= x894 x1095) x46 (x1083 x894)) (x702 x894)))
(assert (x549 x1295))
(assert (= x1294 (x249 (x1339 x1294))))
(assert (x549 x614))
(assert (= (ite (= x985 x673) x997 (x482 x673)) (x1418 x673)))
(assert (= (ite (= x765 x1129) x122 (x233 x765)) (x366 x765)))
(assert (x549 x1174))
(assert (x85 x313))
(assert (x549 x962))
(assert (x549 x1303))
(assert (= (ite (= x985 x1222) x312 (x134 x985)) (x1083 x985)))
(assert (= (x249 (x1339 x484)) x484))
(assert (x549 x957))
(assert (= (x902 x775) (ite (and x607 x723) (x1418 x775) (x1311 x775))))
(assert (x549 x1598))
(assert (= (ite (and x20 x88 (not x1063) x87 x950 x887) (x364 x448) (ite (and x88 x887 (not x87) x20 x950) (x256 x448) (ite (and x950 (not x88) x887 x20) (x414 x448) (ite (and x20 x950 (not x887)) (x563 x448) (x655 x448))))) (x1523 x448)))
(assert (= (ite (= x994 x673) x427 (x279 x673)) (x1266 x673)))
(assert (= x751 (x249 (x1339 x751))))
(assert (x549 x772))
(assert (x549 x122))
(assert (= (ite (= x1302 x985) x997 (x482 x1302)) (x1418 x1302)))
(assert (not x544))
(assert (= (x670 x673) (ite (and x1138 x1046) (x261 x673) (x381 x673))))
(assert (x549 x527))
(assert (x549 x430))
(assert (=> (< (- x1200 1) 10000) (= (x625 x1200) (x1339 x1200))))
(assert (= (=> (and (= x740 (= x1316 0)) (= (x486 x1062) x1316) (= x1151 (x462 (x1339 x1081) (x625 6) 0)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1316) (>= x1316 0) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x269) (= (x462 (x1339 x1505) x1151 0) x1062) (not (< x269 x309)) (= (x1135 1461501637330902918203684832716283019655932542975 x1127) x1505) (<= 0 x269)) (and (=> x740 x1249) (=> (and (>= x899 0) (= x805 x899) (= x1292 (x1135 1461501637330902918203684832716283019655932542975 x1127)) (= x390 0) (= x1365 (x462 (x1339 x1292) x1421 0)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x899) (= (x462 (x1339 x1081) (x625 10) 0) x1421) (= (x704 x1365) x899) (not x740)) x1494))) x1018))
(assert (= x1486 (=> (and (< x1572 2960351575) (= x246 (x462 (x1339 x1187) x394 0)) (>= 1461501637330902918203684832716283019655932542975 x1187) (= x1572 2532887486) (not (= x1572 2418364589)) (= x163 (x1042 (x1339 274184521717934524641157099916833587206))) (= (x233 x246) x911) (<= x393 1461501637330902918203684832716283019655932542975) (= x911 x1299) (>= x911 0) (<= x911 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x394 (x462 (x1339 x393) x100 0)) (not (= 2293535753 x1572)) (= x100 (x462 (x1339 x399) x377 0)) (not (= x1572 2512682246)) (> 2690754053 x1572) (not (> 2293535753 x1572)) (>= 1461501637330902918203684832716283019655932542975 x399) (= x377 (x462 (x1339 x304) (x625 4) 0)) (> x163 0)) (=> (and (not (< x926 2293535753)) (= x333 x1299) (> x269 x1086) (or (and (= x1159 (x574 (- x1008 1))) (or (and (= x1548 (x1135 1461501637330902918203684832716283019655932542975 x316)) (or (and (= (x482 128) x9) (= (x482 128) x708) (not (= x875 x1076)) (= x28 (x482 224)) (= (> x1008 3) x977) (> x708 0) x120 (< 2 x9) (= (x1135 1461501637330902918203684832716283019655932542975 x839) x1076) (= x839 (x482 160)) (= x875 (x1135 1461501637330902918203684832716283019655932542975 x28)) (not x977)) (not x120)) (= (x482 128) x1419) (= x316 (x482 192)) (= x1009 (x1135 1461501637330902918203684832716283019655932542975 x505)) (> x1419 1) (not (= x1548 x1009)) (> x1448 0) (= (< 2 x1008) x120) x560 (= (x482 128) x1448) (= x505 (x482 160))) (not x560)) (not (> x1159 1)) (not (> 1 x1008)) x912 (= x560 (> x1008 1))) (not x912)) (= x535 x83) (= x1127 x1528) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x218)) (= (x1042 (x1339 274184521717934524641157099916833587206)) x1411) (<= x908 1461501637330902918203684832716283019655932542975) (= (x1223 (+ 160 x353)) x273) (= x1564 x908) (= x1008 (x482 128)) (= x926 2939843472) (not (< x1008 1)) (= x608 (x1223 (+ x1246 32))) (= x870 (and x331 x1141)) (not (< x218 4)) (>= x269 0) (not (or (> x787 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (< x787 160) (= true (<= x787 57896044618658097711785492504343953926634992332820282019728792003956564819967))))) (= (= x997 0) x723) (= x375 x1086) (= (uninterp_mod (* x997 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x353) (= x251 x806) (= x742 (uninterp_mod (* 32 x997) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= (>= x433 x333) x331) (not (= x926 2743102681)) (>= x83 0) (not (= x926 2690754053)) (= x254 x793) (= x1295 x1128) (not (> 2690754053 x926)) (= x656 (x574 (- x1008 1))) (= x1081 x480) (not (= 2764855426 x926)) (= (x1223 (+ x985 x711)) x1229) (= x1573 (x1223 (+ 4 x1295))) (= x204 x908) (>= 1461501637330902918203684832716283019655932542975 x1204) (= 128 x957) (= x1204 x772) (not (> x1128 18446744073709551615)) x870 (>= x1039 0) (< 163 x218) (not (= x926 2868243304)) (not (> x997 18446744073709551615)) (= 0 x251) (<= 0 x1204) (= x787 (x574 (- x218 4))) (or x723 (and (not x723) (= x935 (x1223 (+ x608 160))) (= x24 (uninterp_mod (* 32 x997) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (= (x1223 (+ x1246 160)) x985) (= x711 (x1223 (+ 32 x353))) (= x1493 x535) (not (= x926 2798343961)) (>= 1461501637330902918203684832716283019655932542975 x1039) (<= x1127 1461501637330902918203684832716283019655932542975) (= (x1223 (+ x1295 36)) x1546) (= (x1223 (+ x742 x1546)) x149) (= x1127 x786) (not (> x1081 x1086)) (or (and (> x218 x1126) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x218) (<= x1126 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (and (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x218) (> x1126 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (<= x83 1461501637330902918203684832716283019655932542975) (= x1246 (uninterp_mod (* x997 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= x997 (x1110 x1573)) (not (< x218 x149)) (> 2960351575 x926) (= x1081 x309) (= (> x656 0) x912) (= x1126 (x1223 (+ x1295 35))) (= x951 x1086) (> x1411 0) (<= x269 115792089237316195423570985008687907853269984665640564039457584007913129639935)) x949))))
(assert (= (ite (= x1095 x516) x46 (x1083 x516)) (x702 x516)))
(assert (x549 x1534))
(assert (x549 x64))
(assert (x549 x790))
(assert (= (ite (= x601 x673) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x1383 x673)) (x563 x673)))
(assert (=> (< (- x1489 1) 10000) (= (x625 x1489) (x1339 x1489))))
(assert (x549 x805))
(assert (x85 x70))
(assert (x85 x383))
(assert (= x1174 (x249 (x1339 x1174))))
(assert (= (x249 (x1339 x393)) x393))
(assert (= (=> (and (= x1195 (or (not x603) x306)) (= x306 (and x924 x236)) (= x924 (<= x853 x979)) (= x853 x1150)) (and x1195 (=> (and (= x914 x215) (= 87118632 x616) (= 2939843472 x642) (= x1103 x1561) (= x531 x998) (= x795 true)) x682))) x599))
(assert (x549 x716))
(assert (x549 x1460))
(assert (= (x249 (x1339 x121)) x121))
(assert (x549 x121))
(assert (x85 x842))
(assert (x549 x775))
(assert (= (ite (= x756 x1095) x46 (x1083 x756)) (x702 x756)))
(assert (= (x249 (x625 1889567281)) 1889567281))
(assert (= (x1346 x276) (ite (and (not x1131) x1563 (not x434) x803) (x366 x276) (ite (and x1563 (not x1131) (not x803)) (x233 x276) (ite (and x1563 x1131) (x233 x276) (x710 x276))))))
(assert (x85 x178))
(assert (=> (< (- x1142 1) 10000) (= (x1339 x1142) (x625 x1142))))
(assert (= x612 (=> (and (= x1088 x1488) (> 2293535753 x422) (not (= 1968616202 x422)) (= x566 (x462 (x1339 x1578) (x625 6) 0)) (not (= x422 2211524764)) (<= 0 x1488) (<= x1488 115792089237316195423570985008687907853269984665640564039457584007913129639935) (not (= x422 1986467848)) (< 0 x283) (= x1488 (x486 x587)) (not (< x422 1968616202)) (not (= 2061678023 x422)) (<= x1485 1461501637330902918203684832716283019655932542975) (= x587 (x462 (x1339 x1485) x566 0)) (= x283 (x1042 (x1339 274184521717934524641157099916833587206))) (not (< x422 911411945)) (= x422 2258409472)) (=> (and (= x1279 x914) (= x529 x1088) (= x659 x998) (= x1561 x858)) x1157))))
(assert (=> (> (+ 10000 1) x621) (= (x625 x621) (x1339 x621))))
(assert (x85 x1373))
(assert (x549 x1019))
(assert (x85 x604))
(assert (= x111 (x249 (x1339 x111))))
(assert (x549 x144))
(assert (= (x249 (x1339 x424)) x424))
(assert (x549 x28))
(assert (x549 x164))
(assert (x549 x487))
(assert (= (ite (= x1302 x601) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x1383 x1302)) (x563 x1302)))
(assert (x549 x492))
(assert (= 0 (x1073 x775)))
(assert (x549 x683))
(assert (=> (> (+ 10000 1) x1117) (= (x1339 x1117) (x625 x1117))))
(assert (= x171 (x249 (x1339 x171))))
(assert (x549 x1441))
(assert (x549 x1176))
(assert (x549 x343))
(assert (x85 x304))
(assert (= x1322 (x249 (x1339 x1322))))
(assert (x549 x1060))
(assert (x549 x349))
(assert (= x715 (and x1545 x1221)))
(assert (x549 x1448))
(assert (= (x1380 x448) (ite (= x1362 x448) x1258 (x401 x448))))
(assert (x195 x1170))
(assert (x85 x643))
(assert (= x698 (=> (and (= x880 (x462 (x1339 x621) (x625 4) 0)) (>= 1461501637330902918203684832716283019655932542975 x879) (< x1461 2960351575) (not (= 2512682246 x1461)) (< 0 x104) (= x76 (x462 (x1339 x1035) x359 0)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1064) (<= x1035 1461501637330902918203684832716283019655932542975) (= 2532887486 x1461) (= x1610 (x462 (x1339 x879) x76 0)) (= (x462 (x1339 x438) x880 0) x359) (<= 0 x1064) (= (x1042 (x1339 274184521717934524641157099916833587206)) x104) (not (= 2418364589 x1461)) (not (< x1461 2293535753)) (< x1461 2690754053) (= (x233 x1610) x1064) (not (= x1461 2293535753)) (>= 1461501637330902918203684832716283019655932542975 x438) (= x1064 x449)) (=> (and (= x1561 x1319) (= x914 x1489) (= x998 x12) (= x891 (<= x1228 x154)) (= x449 x1228) (= (and x396 x891) x1141)) x1393))))
(assert (x549 x1428))
(assert (x549 x1500))
(assert (= (ite (= x1095 x661) x46 (x1083 x661)) (x702 x661)))
(assert (x549 x70))
(assert (= (ite (= x336 x985) x997 (x482 x336)) (x1418 x336)))
(assert (x549 x951))
(assert (x549 x1150))
(assert (= (x625 115792089237316195423570985008687907853269984665640564039457584007913129639904) (x1339 115792089237316195423570985008687907853269984665640564039457584007913129639904)))
(assert (x549 x948))
(assert (x85 x108))
(assert (x549 x804))
(assert (x549 x1376))
(assert (= x1571 (=> (and (= x185 x1245) (not (> 2293535753 x1567)) (= (x1042 (x1339 274184521717934524641157099916833587206)) x586) (< x1567 2960351575) (not (= 2764855426 x1567)) (= (x462 (x1339 x1508) (x625 5) 0) x55) (not (= x1567 2743102681)) (<= 0 x1245) (= x539 (x462 (x1339 x356) x55 0)) (>= 1461501637330902918203684832716283019655932542975 x356) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1245) (> x586 0) (not (= 2690754053 x1567)) (= x1245 (x282 x539)) (= x1567 2798343961) (not (> 2690754053 x1567))) (=> (and (= x154 x185) (= x621 x998) (= x1035 x914) (= x451 x879) (= x1561 x438)) x698))))
(assert (x85 x1525))
(assert (= (ite (= x519 x673) x1558 (x563 x673)) (x414 x673)))
(assert (x549 x604))
(assert (= (=> (= (> x1081 0) x1384) (and (=> (not x1384) x398) (=> x1384 x491))) x217))
(assert (= (=> (and x271 (= (= x1015 0) x266) (= (> x778 0) x1313) (= x271 (< (x859 (x1339 274184521717934524641157099916833587206)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (or (and (= x1208 x732) (= x775 96) x266) (and (= x775 x732) (= x1208 x741) (not x266) (= (x1223 (+ x732 x97)) x741) (= x97 (x1135 115792089237316195423570985008687907853269984665640564039457584007913129639904 x60)) (= x60 (x1223 (+ x1015 63))) (= (x1223 (+ 96 x1077)) x53))) (= (x311 (x1339 x300)) x260) (not (= x1254 0)) (or (not x1313) (and x1313 (not (or (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x804) true) (> 32 x804)) (> x804 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (= x720 x1599) (= (ite x1552 1 0) x720) (= (= x1599 0) x696) (< 0 x1599) (= (x5 x230) x1599) (= x804 (x5 x775)) (= (not x696) x1552) (= (x1223 (+ 32 x775)) x230))) (= (x859 (x1339 274184521717934524641157099916833587206)) x825) (= (x5 x775) x778)) x602) x1199))
(assert (= (ite (and (not x1063) x88 x887 x20 x950 x87) (x364 x349) (ite (and x88 x950 x20 x887 (not x87)) (x256 x349) (ite (and (not x88) x950 x20 x887) (x414 x349) (ite (and x950 (not x887) x20) (x563 x349) (x655 x349))))) (x1523 x349)))
(assert (x549 x1443))
(assert (x85 x1200))
(assert (= (ite (= x1362 x985) x1258 (x401 x985)) (x1380 x985)))
(assert (= 274184521717934524641157099916833587218 (x249 (x625 274184521717934524641157099916833587218))))
(assert (x85 x1569))
(assert (= 826074471 (x249 (x625 826074471))))
(assert (x549 x1179))
(assert (x85 x650))
(assert (x549 x1354))
(assert (x549 x1439))
(assert (= x544 (=> (and (= x827 (x126 (x1339 274184521717934524641157099916833587214))) (= (< 0 (x1042 (x1339 274184521717934524641157099916833587214))) x473) (= false x1402) (= false x524) (= x862 5) (<= 0 x1561) (= x669 2939843472) (= x1575 (x126 (x1339 274184521717934524641157099916833587206))) (>= x451 0) (= x1414 x772) (= x1561 x1485) x938 (>= 1461501637330902918203684832716283019655932542975 x1414) x473 (>= 1461501637330902918203684832716283019655932542975 x51) (>= 1461501637330902918203684832716283019655932542975 x1561) (= (x126 (x1339 274184521717934524641157099916833587218)) x578) (<= 0 x1575) (= x817 false) (= x998 x1578) (= (> (x1042 (x1339 274184521717934524641157099916833587218)) 0) x938) (>= 1461501637330902918203684832716283019655932542975 x451) (<= 0 x914) (= x420 (< 0 (x1042 (x1339 274184521717934524641157099916833587206)))) (<= x914 1461501637330902918203684832716283019655932542975) (= x1217 false) x420 (<= 0 x1414) (>= x51 0) (<= 0 x827) (= x1522 x51) (>= x578 0)) x612)))
(assert (x549 x1410))
(assert (= (x1523 x775) (ite (and x20 (not x1063) x88 x887 x950 x87) (x364 x775) (ite (and x887 x88 x950 x20 (not x87)) (x256 x775) (ite (and x20 x950 x887 (not x88)) (x414 x775) (ite (and x20 x950 (not x887)) (x563 x775) (x655 x775)))))))
(assert (= x304 (x249 (x1339 x304))))
(assert (x549 x1510))
(assert (= (ite (= x1233 x448) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x30 x448)) (x553 x448)))
(assert (x549 x419))
(assert (x549 x725))
(assert (= x1463 x1267))
(assert (= (ite (= x1222 x959) x312 (x134 x959)) (x1083 x959)))
(assert (= (x1339 2211524764) (x625 2211524764)))
(assert (x85 x1085))
(assert (x85 x1125))
(assert (x195 x839))
(assert (x549 x1431))
(assert (=> (> (+ 10000 1) x1426) (= (x625 x1426) (x1339 x1426))))
(assert (x549 x534))
(assert (x549 x103))
(assert (= 1461501637330902918203684832716283019655932542975 (x249 (x625 1461501637330902918203684832716283019655932542975))))
(assert (x549 x1054))
(assert (= (x249 (x625 115792089237316195423570985008687907853269984665640564039457584007913129639935)) 115792089237316195423570985008687907853269984665640564039457584007913129639935))
(assert (x549 x623))
(assert (x549 x53))
(assert (x549 x10))
(assert (= (+ (x249 x1044) 1) (x249 (x257 x1044 1))))
(assert (=> (> (+ 10000 1) x1604) (= (x1339 x1604) (x625 x1604))))
(assert (= (ite (= x1222 x516) x312 (x134 x516)) (x1083 x516)))
(assert (= (ite (and x1104 x1444) (x1005 x292) (ite (and (not x1444) x1104 x439) (x49 x292) (x982 x292))) (x1557 x292)))
(assert (= x10 (x249 (x1339 x10))))
(assert (x85 x1321))
(assert (x549 x578))
(assert (= (x249 (x1339 x1096)) x1096))
(assert (= (x249 (x625 2960351575)) 2960351575))
(assert (x549 x869))
(assert (= (ite (= x1129 x1429) x122 (x233 x1429)) (x366 x1429)))
(assert (= (x1339 2764855426) (x625 2764855426)))
(assert (= x615 x526))
(assert (x549 x1584))
(assert (= x643 (x249 (x1339 x643))))
(assert (x549 x787))
(assert (= x933 (or x1368 x395)))
(assert (x549 x1294))
(assert (= (x249 (x1339 x858)) x858))
(assert (= (x347 x673) (ite (and (not x291) x840 x1056) (x1408 x673) (x429 x673))))
(assert (=> (> (+ 10000 1) x531) (= (x625 x531) (x1339 x531))))
(assert (x549 x324))
(assert (= x65 (=> (and (< 0 x193) (= x1278 (x462 (x1339 x108) (x625 6) 0)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x493) (= x193 (x1042 (x1339 274184521717934524641157099916833587206))) (not (< x308 911411945)) (<= x1174 1461501637330902918203684832716283019655932542975) (= x493 x450) (not (= 2211524764 x308)) (not (= x308 2061678023)) (not (< x308 1968616202)) (not (= x308 1986467848)) (< x308 2293535753) (= x150 (x462 (x1339 x1174) x1278 0)) (= x493 (x486 x150)) (not (= 1968616202 x308)) (<= 0 x493) (= 2258409472 x308)) (=> (and (= (not (= x416 0)) x671) (= 0 x460) (= x416 x450) (= x998 x604) (= x1561 x190) x671) x691))))
(assert (= 0 (x1073 x336)))
(assert (x549 x1229))
(assert (x85 x99))
(assert (= (x249 (x257 x610 1)) (+ (x249 x610) 1)))
(assert (= x1539 x1247))
(assert (x549 x1178))
(assert (x549 x742))
(assert (=> (< (- x343 1) 10000) (= (x1339 x343) (x625 x343))))
(assert (=> (> (+ 10000 1) x644) (= (x1339 x644) (x625 x644))))
(assert (x549 x858))
(assert (= (x625 1000000000000000000) (x1339 1000000000000000000)))
(assert (= (x364 x985) (ite (= x274 x985) x1283 (x256 x985))))
(assert (x549 x1512))
(assert (= (=> (and (= (= 0 x1142) x26) (or (and (= 0 x400) (= 0 x179) x26) (and (= (x462 (x1339 x556) x1097 0) x464) (= x1307 x400) (not x26) (= 1 x179) (<= 0 x1307) (= (x462 (x1339 x1142) (x625 9) 0) x901) (<= x1307 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x1135 1461501637330902918203684832716283019655932542975 x908) x556) (= (x462 (x1339 x173) x901 0) x1097) (= (x490 x464) x1307) (= (x1135 1461501637330902918203684832716283019655932542975 x1127) x173)))) x1547) x355))
(assert (x549 x136))
(assert (x549 x299))
(assert (x195 x1354))
(assert (=> (< (- x424 1) 10000) (= (x1339 x424) (x625 x424))))
(assert (x549 x129))
(assert (x549 x1041))
(assert (x549 x1300))
(assert (x549 x308))
(assert (= (x702 x846) (ite (= x1095 x846) x46 (x1083 x846))))
(assert (= 911411945 (x249 (x625 911411945))))
(assert (x549 x1535))
(assert (=> (> (+ 10000 1) x389) (= (x625 x389) (x1339 x389))))
(assert (=> (> (+ 10000 1) x393) (= (x1339 x393) (x625 x393))))
(assert (= (ite (= x349 x601) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x1383 x349)) (x563 x349)))
(assert (x549 x304))
(assert (=> (> (+ 10000 1) x298) (= (x625 x298) (x1339 x298))))
(assert (x549 x1016))
(assert (= (ite (= x1472 x985) x997 (x482 x1472)) (x1418 x1472)))
(assert (= (ite (= x274 x516) x1283 (x256 x516)) (x364 x516)))
(assert (=> (> (+ 10000 1) x173) (= (x1339 x173) (x625 x173))))
(assert (=> (< (- x858 1) 10000) (= (x625 x858) (x1339 x858))))
(assert (= 2532887486 (x249 (x625 2532887486))))
(assert (= (x249 (x1339 x768)) x768))
(assert (x549 x899))
(assert (x549 x300))
(assert (= (x249 (x625 76450787359836037641860180984291677749980919077056822294353438043884394381312)) 76450787359836037641860180984291677749980919077056822294353438043884394381312))
(assert (= (=> (and (= (= 0 x1385) x74) (or (and x74 (= x1139 0) (= 0 x1353)) (and (>= x882 0) (= (x1531 x131) x882) (or (and (= 0 x1139) (= x1353 0) x458) (and (= x1353 1) (= x882 x1139) (not x458))) (= (x462 (x1339 x1556) x181 0) x131) (not x74) (= x1556 (x1135 1461501637330902918203684832716283019655932542975 x1127)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x882) (= (x462 (x1339 x1385) (x625 10) 0) x181) (= x458 (= 0 x882))))) x346) x1517))
(assert (= (and (not x362) x638) x1405))
(assert (= (x366 x1498) (ite (= x1498 x1129) x122 (x233 x1498))))
(assert (x549 x29))
(assert (=> (< (- x41 1) 10000) (= (x625 x41) (x1339 x41))))
(assert (= (x366 x943) (ite (= x1129 x943) x122 (x233 x943))))
(assert (= (ite (= x336 x1222) x312 (x134 x336)) (x1083 x336)))
(assert (x549 x631))
(assert (x85 x684))
(assert (x549 x1130))
(assert (x549 x541))
(assert (x549 x650))
(assert (x549 x105))
(assert (= (x1073 x230) 0))
(assert (= (x249 (x625 37714057306076988483118529490347679105585116642029194716945419020321082336612)) 37714057306076988483118529490347679105585116642029194716945419020321082336612))
(assert (= (x249 (x1339 x1060)) x1060))
(assert (x549 x1288))
(assert (= (ite (and x1608 x934) (x873 x448) (x821 x448)) (x475 x448)))
(assert (x549 x1144))
(assert (x549 x1243))
(assert (x549 x781))
(assert (= (=> (and (= x305 (x462 (x1339 x255) x792 0)) (= (= 0 x487) x1010) (= x255 (x1135 1461501637330902918203684832716283019655932542975 x1127)) (= x792 (x462 (x1339 x1081) (x625 6) 0)) (>= x487 0) (= x487 (x486 x305)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x487)) (and (=> x1010 x330) (=> (and (= x631 x1081) (not x1010)) x1025))) x780))
(assert (= (ite (= x846 x1222) x312 (x134 x846)) (x1083 x846)))
(assert (= (x249 (x1339 x41)) x41))
(assert (x549 x1301))
(assert (x549 x1609))
(assert (=> (< (- x1373 1) 10000) (= (x625 x1373) (x1339 x1373))))
(assert (= x1157 (=> (and (< 0 x743) (not (> 468353030 x865)) (>= 1461501637330902918203684832716283019655932542975 x858) (>= x738 0) (= x738 (x961 x1501)) (> 2293535753 x865) (= x388 (x462 (x1339 x858) x504 0)) (= x504 (x462 (x1339 x659) (x625 7) 0)) (= (x1042 (x1339 274184521717934524641157099916833587206)) x743) (<= x1279 1461501637330902918203684832716283019655932542975) (= (x462 (x1339 x1279) x388 0) x1501) (not (= 468353030 x865)) (not (= x865 635128645)) (= 759532456 x865) (< x865 911411945) (= x738 x1263) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x738)) (=> (and (= x108 x998) (= x965 (<= x529 x314)) (= x1561 x1174) x965 (= x1263 x314)) x65))))
(assert (= x117 (x249 (x1339 x117))))
(assert (x549 x390))
(assert (= (ite (= x1362 x516) x1258 (x401 x516)) (x1380 x516)))
(assert (x549 x497))
(assert (= x201 (or (and x722 x1027) (and x1608 x934))))
(assert (x85 x438))
(assert (x549 x441))
(assert (x549 x732))
(assert (= (x1084 x1034) (ite (and (not x1131) x803 x1563 (not x434)) (x702 x1034) (ite (and (not x803) x1563 (not x1131)) (x1083 x1034) (ite (and x1563 x1131) (x1083 x1034) (x892 x1034))))))
(assert (x85 x255))
(assert (x549 x1362))
(assert (= x569 (and x2 x278)))
(assert (x85 x856))
(assert (=> (> (+ 10000 1) x849) (= (x625 x849) (x1339 x849))))
(assert (x85 x1294))
(assert (= x275 (x249 (x1339 x275))))
(assert (= 0 (x1073 x349)))
(assert (x549 x1034))
(assert (x549 x760))
(assert (= (x249 (x1339 x811)) x811))
(assert (= (ite (and x607 x723) (x1418 x661) (x1311 x661)) (x902 x661)))
(assert (x549 x1113))
(assert (= x107 x1207))
(assert (x85 x299))
(assert (= (x256 x775) (ite (= x1256 x775) x295 (x414 x775))))
(assert (x549 x109))
(assert (= (or (and (not x910) x569) (and (not x1340) x1049)) x830))
(assert (x85 x1385))
(assert (x85 x621))
(assert (x85 x1322))
(assert (= (x279 x661) (ite (= x716 x661) x1180 (x1214 x661))))
(assert (= (x249 (x1339 x124)) x124))
(assert (= (x249 (x625 274184521717934524641157099916833587214)) 274184521717934524641157099916833587214))
(assert (x85 x442))
(assert (= (x249 (x1339 x1268)) x1268))
(assert (= x1578 (x249 (x1339 x1578))))
(assert (= (x625 274184521717934524641157099916833587214) (x1339 274184521717934524641157099916833587214)))
(assert (= (x249 (x625 2512682246)) 2512682246))
(assert (= (ite (= x1222 x1472) x312 (x134 x1472)) (x1083 x1472)))
(assert (=> (< (- x174 1) 10000) (= (x625 x174) (x1339 x174))))
(assert (x549 x596))
(assert (x549 x141))
(assert (= x1604 (x249 (x1339 x1604))))
(assert (= (=> (and (= (x462 (x1339 x1452) x1224 0) x632) (= x940 (x244 x632)) (= x1224 (x462 (x1339 x650) (x625 6) 0)) (= (= x940 0) x1340) (= (x1135 1461501637330902918203684832716283019655932542975 x1127) x1452) (<= x940 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= 0 x940)) (and (=> (and (not x1361) (= (> x860 0) x1361) x1340 (= (x574 (- x650 1)) x860)) x1387) (=> (and (not x1340) (= x913 x650)) x663))) x66))
(assert (x549 x314))
(assert (= (x249 (x625 26959946667150639794667015087019630673637144422540572481103610249215)) 26959946667150639794667015087019630673637144422540572481103610249215))
(assert (x549 x1248))
(assert (= (x249 (x1339 x1430)) x1430))
(assert (= (x249 (x1339 x1163)) x1163))
(assert (x549 x163))
(assert (= (ite (and x950 x20 (not x591)) (x1523 x516) (x749 x516)) (x1098 x516)))
(assert (x85 x1505))
(assert (=> (> (+ 10000 1) x1309) (= (x625 x1309) (x1339 x1309))))
(assert (= x594 (or x996 (and x1067 x1405))))
(assert (= (x249 (x1339 x300)) x300))
(assert (x549 x1000))
(assert (x549 x505))
(assert (=> (> (+ 10000 1) x268) (= (x625 x268) (x1339 x268))))
(assert (x549 x455))
(assert (=> (< (- x1318 1) 10000) (= (x625 x1318) (x1339 x1318))))
(assert (= (x249 (x1339 x386)) x386))
(assert (x195 x505))
(assert (x549 x1260))
(assert (= (x249 (x1339 x356)) x356))
(assert (= (x249 (x625 274184521717934524641157099916833587206)) 274184521717934524641157099916833587206))
(assert (x549 x633))
(assert (x85 x1309))
(assert (=> (> (+ 10000 1) x67) (= (x625 x67) (x1339 x67))))
(assert (= (x1339 274184521717934524641157099916833587206) (x625 274184521717934524641157099916833587206)))
(assert (= (x249 (x1339 x1103)) x1103))
(assert (x549 x1040))
(assert (= (x249 (x1339 x135)) x135))
(assert (x199 x1106 x798))
(assert (x549 x451))
(assert (x549 x372))
(assert (= (x401 x1462) (ite (= x1462 x1148) x1398 (x211 x1462))))
(assert (x85 x393))
(assert (x549 x543))
(assert (= (x414 x349) (ite (= x519 x349) x1558 (x563 x349))))
(assert (x85 x1268))
(assert (x549 x60))
(assert (x549 x176))
(assert (= x337 (x249 (x1339 x337))))
(assert (x549 x958))
(assert (= (and (not x1608) x934) x722))
(assert (x85 x484))
(assert (x549 x1466))
(assert (x549 x78))
(assert (= (x1083 x1462) (ite (= x1222 x1462) x312 (x134 x1462))))
(assert (= (x1408 x448) (ite (and x1056 x968 x840 (not x335) x1515 x1407) (x1266 x448) (ite (and (not x1515) x1407 x840 x968 x1056) (x279 x448) (ite (and (not x1407) x968 x840 x1056) (x1214 x448) (ite (and x1056 x840 (not x968)) (x553 x448) (x262 x448)))))))
(assert (= (ite (and x950 (not x591) x20) (x1523 x661) (x749 x661)) (x1098 x661)))
(assert (= (=> (and (= x1265 (x462 (x1339 x683) x423 0)) (= (x1135 1461501637330902918203684832716283019655932542975 x908) x683) (= x423 (x462 (x1339 x1450) x707 0)) (= (x1135 1461501637330902918203684832716283019655932542975 x1127) x1450) (= (= x139 0) x693) (<= x139 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x707 (x462 (x1339 x1200) (x625 7) 0)) (>= x139 0) (= x139 (x1557 x1265))) (and (=> (and (= (x574 (- x1200 1)) x151) (not x93) x693 (= (> x151 0) x93)) x177) (=> (and (not x693) (= x530 x1200)) x1137))) x701))
(assert (x549 x894))
(assert (x549 x558))
(assert (x85 x1450))
(assert (= x837 x594))
(assert (x549 x130))
(assert (x549 x995))
(assert (x549 x316))
(assert (= (x414 x336) (ite (= x519 x336) x1558 (x563 x336))))
(assert (= x201 x840))
(assert (= (or x830 x1527) x668))
(assert (= (ite (= x516 x519) x1558 (x563 x516)) (x414 x516)))
(assert (= x1102 x1066))
(assert (= (x364 x349) (ite (= x274 x349) x1283 (x256 x349))))
(assert (x549 x1100))
(assert (=> (> (+ 10000 1) x352) (= (x625 x352) (x1339 x352))))
(assert (x549 x1578))
(assert (x549 x124))
(assert (=> (> (+ 10000 1) x118) (= (x625 x118) (x1339 x118))))
(assert (x549 x911))
(assert (= x581 (x249 (x1339 x581))))
(assert (x549 x178))
(assert (= x556 (x249 (x1339 x556))))
(assert (=> (< (- x1268 1) 10000) (= (x1339 x1268) (x625 x1268))))
(assert (= (ite (and (not x434) (not x1131) x1563 x803) (x702 x448) (ite (and (not x803) (not x1131) x1563) (x1083 x448) (ite (and x1563 x1131) (x1083 x448) (x892 x448)))) (x1084 x448)))
(assert (= (ite (= x516 x985) x997 (x482 x516)) (x1418 x516)))
(assert (x549 x1411))
(assert (x549 x242))
(assert (= x190 (x249 (x1339 x190))))
(assert (x549 x862))
(assert (=> (< (- x1163 1) 10000) (= (x1339 x1163) (x625 x1163))))
(assert (x85 x513))
(assert (x85 x1040))
(assert (= (ite (= x673 x274) x1283 (x256 x673)) (x364 x673)))
(assert (x549 x1613))
(assert (= (x249 (x1339 x644)) x644))
(assert (x85 x686))
(assert (=> (< (- x1471 1) 10000) (= (x625 x1471) (x1339 x1471))))
(assert (x85 x915))
(assert (= x438 (x249 (x1339 x438))))
(assert (= (x702 x1439) (ite (= x1439 x1095) x46 (x1083 x1439))))
(assert (x549 x1396))
(assert (= (x1084 x985) (ite (and (not x434) (not x1131) x1563 x803) (x702 x985) (ite (and (not x803) (not x1131) x1563) (x1083 x985) (ite (and x1131 x1563) (x1083 x985) (x892 x985))))))
(assert (= x293 (x249 (x1339 x293))))
(assert (x549 x24))
(assert (x85 x121))
(assert (x549 x675))
(assert (x85 x1174))
(assert (=> (< (- x1055 1) 10000) (= (x1339 x1055) (x625 x1055))))
(assert (= (x256 x349) (ite (= x349 x1256) x295 (x414 x349))))
(assert (= (and x840 x1056) x1138))
(assert (x549 x1228))
(assert (=> (> (+ 10000 1) x1476) (= (x625 x1476) (x1339 x1476))))
(assert (= (or (and x1046 x1138) (and x96 x407)) x307))
(assert (= (=> (= (= 274184521717934524641157099916833587214 x300) x1027) (and (=> (not x1027) x44) (=> (and (>= 1461501637330902918203684832716283019655932542975 x849) (not (= x575 826074471)) (= x1162 (x462 (x1339 274184521717934524641157099916833587206) (x625 1) 0)) (<= 0 x918) (= x1297 x849) (= x575 2835717307) (= x948 274184521717934524641157099916833587206) (not x676) x1027 (= (or (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1470) true) (< x1470 64)) (> x1470 57896044618658097711785492504343953926634992332820282019728792003956564819967)) x1115) (= x1038 x921) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x921 x918)) (not x802) (= x735 (x462 (x1339 x849) (x625 1) 0)) (= x1261 x132) (= (x1042 (x1339 274184521717934524641157099916833587214)) x25) (= x737 (x471 x831)) (not (= 1889567281 x575)) (> x25 0) (= x1000 (+ x1540 x660)) (= x1038 x1132) (= (> x921 x737) x676) (>= x737 0) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x918) (= x918 (x1474 x735)) (= (x574 (- x737 x1038)) x755) (= x1369 (<= 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x921 x918))) (= x752 (x462 (x1339 x849) (x625 1) 0)) (= x802 (> x1038 x737)) (not x1115) (not (= 2514000705 x575)) (= (x462 (x1339 274184521717934524641157099916833587206) (x625 1) 0) x831) (= x1241 x1598) (not (> 4 x132)) (= x1540 x918) (= 68 x132) (= 76450787359836037641860180984291677749980919077056822294353438043884394381312 x145) (= 32 x1015) (= x1334 x849) (= x1470 (x574 (- x132 4))) (not (> 649617121 x575)) (= x660 x921) (not (= x575 649617121)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x737) (= 274184521717934524641157099916833587206 x91) (= 1 x1254) (not x1369)) x1199))) x39))
(assert (x549 x477))
(assert (= (x1073 x1462) 0))
(assert (x549 x875))
(assert (= (x249 (x1339 x1556)) x1556))
(assert (= (x249 (x257 x1012 1)) (+ (x249 x1012) 1)))
(assert (= x950 (or (and x1155 x1502) x102 (and x362 x638))))
(assert (x85 x343))
(assert (x549 x1604))
(assert (x85 x736))
(assert (= (x902 x448) (ite (and x607 x723) (x1418 x448) (x1311 x448))))
(assert (x549 x18))
(assert (= (ite (= x846 x985) x997 (x482 x846)) (x1418 x846)))
(assert (x549 x1106))
(assert (= (ite (= x1462 x1362) x1258 (x401 x1462)) (x1380 x1462)))
(assert (=> (< (- x1125 1) 10000) (= (x1339 x1125) (x625 x1125))))
(assert (x549 x1353))
(assert (= (x1098 x709) (ite (and (not x591) x950 x20) (x1523 x709) (x749 x709))))
(assert (x549 x617))
(assert (= (x625 115792089237316195423570985008687907853269984665640564039457) (x1339 115792089237316195423570985008687907853269984665640564039457)))
(assert (x549 x284))
(assert (= (x90 x202) (ite (= x1280 x202) x1495 (x1346 x202))))
(assert (x549 x1163))
(assert (x549 x784))
(assert (= 604800 (x249 (x625 604800))))
(assert (=> (< (- x1376 1) 10000) (= (x625 x1376) (x1339 x1376))))
(assert (x549 x521))
(assert (x549 x515))
(assert (x549 x1321))
(assert (= (x1523 x230) (ite (and x887 x950 x88 (not x1063) x87 x20) (x364 x230) (ite (and x20 x88 x887 x950 (not x87)) (x256 x230) (ite (and (not x88) x20 x887 x950) (x414 x230) (ite (and x950 (not x887) x20) (x563 x230) (x655 x230)))))))
(assert (x549 x741))
(assert (= x1187 (x249 (x1339 x1187))))
(assert (x549 x1125))
(assert (=> (> (+ 10000 1) x1505) (= (x1339 x1505) (x625 x1505))))
(assert (x549 x608))
(assert (x549 x445))
(assert (x85 274184521717934524641157099916833587218))
(assert (= (ite (= x274 x230) x1283 (x256 x230)) (x364 x230)))
(assert (x549 x827))
(assert (x549 x104))
(assert (x549 x25))
(assert (= (ite (= x1472 x519) x1558 (x563 x1472)) (x414 x1472)))
(assert (=> (< (- x683 1) 10000) (= (x1339 x683) (x625 x683))))
(assert (=> (> (+ 10000 1) x1537) (= (x625 x1537) (x1339 x1537))))
(assert (x549 x871))
(assert (x549 x905))
(assert (= (x1380 x673) (ite (= x1362 x673) x1258 (x401 x673))))
(assert (x549 x739))
(assert (= (ite (and (not x1063) x88 x20 x950 x87 x887) (x364 x673) (ite (and (not x87) x88 x20 x887 x950) (x256 x673) (ite (and x20 x887 (not x88) x950) (x414 x673) (ite (and x950 (not x887) x20) (x563 x673) (x655 x673))))) (x1523 x673)))
(assert (x549 x519))
(assert (= (ite (and x1608 x934) (x873 x673) (x821 x673)) (x475 x673)))
(assert (x549 x1272))
(assert (= (x249 (x1339 x1376)) x1376))
(assert (=> (> (+ 10000 1) x299) (= (x625 x299) (x1339 x299))))
(assert (x549 x531))
(assert (= (ite (= x274 x709) x1283 (x256 x709)) (x364 x709)))
(assert (x549 x1089))
(assert (= (x414 x709) (ite (= x709 x519) x1558 (x563 x709))))
(assert (x85 x1133))
(assert (= (ite (and x723 x607) (x1418 x756) (x1311 x756)) (x902 x756)))
(assert (=> (> (+ 10000 1) x1196) (= (x625 x1196) (x1339 x1196))))
(assert (= (x702 x349) (ite (= x349 x1095) x46 (x1083 x349))))
(assert (x549 x983))
(assert (x85 x1168))
(assert (x85 x515))
(assert (= (ite (= x601 x661) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x1383 x661)) (x563 x661)))
(assert (=> (< (- x323 1) 10000) (= (x625 x323) (x1339 x323))))
(assert (= (x553 x516) (ite (= x516 x1233) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x30 x516))))
(assert (= (x1084 x1302) (ite (and x1563 (not x434) (not x1131) x803) (x702 x1302) (ite (and x1563 (not x803) (not x1131)) (x1083 x1302) (ite (and x1563 x1131) (x1083 x1302) (x892 x1302))))))
(assert (x195 x316))
(assert (=> (> (+ 10000 1) x1441) (= (x625 x1441) (x1339 x1441))))
(assert (= (x1073 160) 0))
(assert (= (x1084 x673) (ite (and (not x434) x803 (not x1131) x1563) (x702 x673) (ite (and x1563 (not x1131) (not x803)) (x1083 x673) (ite (and x1563 x1131) (x1083 x673) (x892 x673))))))
(assert (x85 x252))
(assert (x549 x673))
(assert (= (ite (= x349 x985) x997 (x482 x349)) (x1418 x349)))
(assert (= x691 (=> (and (>= 1461501637330902918203684832716283019655932542975 x190) (not (= x797 2743102681)) (= x1576 (x282 x929)) (= x1576 x166) (not (> 2690754053 x797)) (not (= x797 2764855426)) (= (x462 (x1339 x604) (x625 5) 0) x71) (>= x1576 0) (= x929 (x462 (x1339 x190) x71 0)) (not (> 2293535753 x797)) (= x797 2798343961) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1576) (= x1423 (x1042 (x1339 274184521717934524641157099916833587206))) (> 2960351575 x797) (not (= 2690754053 x797)) (< 0 x1423)) (=> (and (= x1227 x914) (= x361 x166) (= x998 x856) (= x41 x1561)) x302))))
(assert (x549 x457))
(assert (= (=> (= 0 x1385) x1517) x1387))
(assert (= (ite (= x1148 x673) x1398 (x211 x673)) (x401 x673)))
(assert (= (x1523 x661) (ite (and x20 (not x1063) x88 x887 x950 x87) (x364 x661) (ite (and x887 x88 (not x87) x20 x950) (x256 x661) (ite (and (not x88) x20 x887 x950) (x414 x661) (ite (and x20 (not x887) x950) (x563 x661) (x655 x661)))))))
(assert (x549 x149))
(assert (= 2798343961 (x249 (x625 2798343961))))
(assert (= x1426 (x249 (x1339 x1426))))
(assert (x549 x166))
(assert (= (x249 (x1339 x904)) x904))
(assert (x549 x1600))
(assert (x549 x618))
(assert (x549 x344))
(assert (x549 x1245))
(assert (= 2868243304 (x249 (x625 2868243304))))
(assert (= (x249 (x1339 x1133)) x1133))
(assert (x549 x714))
(assert (x85 x1604))
(assert (x549 x1398))
(assert (= (x249 (x1339 x268)) x268))
(assert (x549 x532))
(assert (x549 x1159))
(assert (x549 x379))
(assert (= 1986467848 (x249 (x625 1986467848))))
(assert (= (ite (= x1362 x336) x1258 (x401 x336)) (x1380 x336)))
(assert (x549 x575))
(assert (x549 x1319))
(assert (= (x249 (x1339 x178)) x178))
(assert (= (x249 (x1339 x152)) x152))
(assert (= (x249 (x1339 x1489)) x1489))
(assert (x549 x251))
(assert (= (x1214 x516) (ite (= x516 x576) x589 (x553 x516))))
(assert (= (x625 2743102681) (x1339 2743102681)))
(assert (= x684 (x249 (x1339 x684))))
(assert (x85 x117))
(assert (= x1525 (x249 (x1339 x1525))))
(assert (x549 x67))
(assert (= x243 (x249 (x1339 x243))))
(assert (x549 x1212))
(assert (x85 x1243))
(assert (= x1350 (and x740 x1597)))
(assert (x549 x661))
(assert (= (x249 (x1339 x1437)) x1437))
(assert (x549 x151))
(assert (= (ite (= x1034 x1222) x312 (x134 x1034)) (x1083 x1034)))
(assert (= (x1418 x230) (ite (= x230 x985) x997 (x482 x230))))
(assert (x549 x225))
(assert (x549 x41))
(assert (= (x1418 x661) (ite (= x661 x985) x997 (x482 x661))))
(assert (x549 x7))
(assert (=> (> (+ 10000 1) x879) (= (x625 x879) (x1339 x879))))
(assert (x549 x642))
(assert (=> (< (- x688 1) 10000) (= (x1339 x688) (x625 x688))))
(assert (x549 x1088))
(assert (= (ite (and (not x434) x1563 x803 (not x1131)) (x702 x894) (ite (and (not x1131) x1563 (not x803)) (x1083 x894) (ite (and x1131 x1563) (x1083 x894) (x892 x894)))) (x1084 x894)))
(assert (=> (> (+ 10000 1) x1321) (= (x1339 x1321) (x625 x1321))))
(assert (= (ite (= x230 x1095) x46 (x1083 x230)) (x702 x230)))
(assert (x85 x1158))
(assert (x85 x858))
(assert (x549 x374))
(assert true)
(assert (=> (< (- x70 1) 10000) (= (x1339 x70) (x625 x70))))
(assert (x549 x548))
(assert (=> (> (+ 10000 1) x1607) (= (x1339 x1607) (x625 x1607))))
(assert (= (x256 x336) (ite (= x1256 x336) x295 (x414 x336))))
(assert (x549 x1209))
(assert (x549 x108))
(assert (=> (> (+ 10000 1) x225) (= (x1339 x225) (x625 x225))))
(assert (= (x249 (x1339 x1544)) x1544))
(assert (x549 x533))
(assert (= (x256 x661) (ite (= x1256 x661) x295 (x414 x661))))
(assert (x549 x971))
(assert (=> (< (- x1133 1) 10000) (= (x625 x1133) (x1339 x1133))))
(assert (x549 x733))
(assert (x549 x352))
(assert (=> (> (+ 10000 1) x604) (= (x625 x604) (x1339 x604))))
(assert (= (x249 (x625 2258409472)) 2258409472))
(assert (= (ite (= x1222 x1362) x312 (x134 x1362)) (x1083 x1362)))
(assert (x549 x1227))
(assert (= (x1339 604800) (x625 604800)))
(assert (= (x1190 x1219) (ite (and x1563 x754) (x282 x1219) (x184 x1219))))
(assert (x549 x1381))
(assert (x549 x914))
(assert (x549 x846))
(assert (x549 x1551))
(assert (x549 x777))
(assert (x549 x493))
(assert (x549 x1167))
(assert (x549 x12))
(assert (x549 x35))
(assert (= x1168 (x249 (x1339 x1168))))
(assert (x549 x552))
(assert (= x819 (=> (and (= x481 x1261) (= x406 (x126 (x1339 274184521717934524641157099916833587206))) (= (>= x406 0) x210) x210 (= x1580 (x126 (x1339 274184521717934524641157099916833587206))) x1492 x431 (= x431 (< (x250 (x1339 x300)) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= x1608 (= x300 274184521717934524641157099916833587218)) (= (x126 (x1339 x300)) x1176) (= (x250 (x1339 x300)) x878) (= x1492 (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1176))) (and (=> (not x1608) x39) (=> (and (<= x869 115792089237316195423570985008687907853269984665640564039457584007913129639935) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x869 x329)) (= x558 (+ x156 x1356)) (not (< x847 649617121)) (= x1285 x329) (= 274184521717934524641157099916833587206 x507) (= x730 (< x855 x1285)) (>= x855 0) (= x767 (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1520) (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1520)) (< x1520 64)))) (= x372 x10) (= x1248 x619) (= x95 (x462 (x1339 x10) (x625 1) 0)) x1608 (not (< x22 4)) (= x847 2835717307) (not x730) (= (x432 x561) x855) (= x329 x1356) (= 1 x1254) (= x1261 x22) (= x1242 (x574 (- x855 x1285))) (= x627 (x462 (x1339 x10) (x625 1) 0)) (= (x462 (x1339 274184521717934524641157099916833587206) (x625 1) 0) x561) (= x1343 76450787359836037641860180984291677749980919077056822294353438043884394381312) (= x10 x1297) (not (= x847 1889567281)) (= x1285 x1132) (not (= x847 2514000705)) (= x1560 (> x329 x855)) (< 0 x59) (not x1589) (= 32 x1015) (= x869 (x611 x627)) (<= 0 x869) (= x156 x869) (= x1589 (<= 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x329 x869))) (not x767) (= x59 (x1042 (x1339 274184521717934524641157099916833587218))) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x855) (= x1520 (x574 (- x22 4))) (= x579 (x462 (x1339 274184521717934524641157099916833587206) (x625 1) 0)) (>= 1461501637330902918203684832716283019655932542975 x10) (not x1560) (= x22 68) (not (= x847 826074471)) (= 274184521717934524641157099916833587206 x226) (not (= 649617121 x847))) x1199)))))
(assert (x549 x720))
(assert (=> (< (- x164 1) 10000) (= (x1339 x164) (x625 x164))))
(assert (x549 x1594))
(assert (x85 x1556))
(assert (x549 x433))
(assert (= x523 (x249 (x1339 x523))))
(assert (=> (> (+ 10000 1) x117) (= (x625 x117) (x1339 x117))))
(assert (=> (< (- x556 1) 10000) (= (x625 x556) (x1339 x556))))
(assert (x549 x1493))
(assert (= x3 (x249 (x1339 x3))))
(assert (=> (< (- x1466 1) 10000) (= (x1339 x1466) (x625 x1466))))
(assert (x549 x1122))
(assert (= (x1346 x202) (ite (and x803 (not x434) x1563 (not x1131)) (x366 x202) (ite (and x1563 (not x803) (not x1131)) (x233 x202) (ite (and x1131 x1563) (x233 x202) (x710 x202))))))
(assert (= (ite (= x1222 x448) x312 (x134 x448)) (x1083 x448)))
(assert (= (x625 2835717307) (x1339 2835717307)))
(assert (x85 x581))
(assert (= 2418364589 (x249 (x625 2418364589))))
(assert (= x1319 (x249 (x1339 x1319))))
(assert (x85 x1114))
(assert (=> (< (- x121 1) 10000) (= (x1339 x121) (x625 x121))))
(assert (= (ite (and x20 x950 x87 (not x1063) x88 x887) (x364 x985) (ite (and x20 x887 (not x87) x88 x950) (x256 x985) (ite (and x950 x20 (not x88) x887) (x414 x985) (ite (and x20 x950 (not x887)) (x563 x985) (x655 x985))))) (x1523 x985)))
(assert (x549 x635))
(assert (= (ite (and (not x434) (not x1131) x1563 x803) (x702 x846) (ite (and (not x1131) x1563 (not x803)) (x1083 x846) (ite (and x1131 x1563) (x1083 x846) (x892 x846)))) (x1084 x846)))
(assert (x549 x1210))
(assert (x549 x280))
(assert (x549 x110))
(assert (=> (< (- x171 1) 10000) (= (x625 x171) (x1339 x171))))
(assert (x549 x1050))
(assert (= (x249 (x1339 x1385)) x1385))
(assert (= (x249 (x1339 x1476)) x1476))
(assert (x549 x643))
(assert (= (ite (and x1104 x1444) (x555 x1514) (ite (and x439 (not x1444) x1104) (x555 x1514) (x167 x1514))) (x224 x1514)))
(assert (= x463 x932))
(assert (= 0 (x1073 x1439)))
(assert (x549 x529))
(assert (x195 115792089237316195423570985008687907853269984665640564039457584007913129639904))
(assert (x549 x843))
(assert (x549 x1308))
(assert (= (x249 (x625 2061678023)) 2061678023))
(assert (x549 x755))
(assert (x85 x644))
(assert (x549 x1522))
(assert (x549 x1343))
(assert (= x1227 (x249 (x1339 x1227))))
(assert (= (and x1165 x1350) x613))
(assert (x549 x1461))
(assert (x549 x1254))
(assert (= x1040 (x249 (x1339 x1040))))
(assert (x85 x1452))
(assert (x549 x218))
(assert (= (ite (= x274 x1462) x1283 (x256 x1462)) (x364 x1462)))
(assert (x549 x351))
(assert (x549 x507))
(assert (= (x401 x1472) (ite (= x1472 x1148) x1398 (x211 x1472))))
(assert (x549 x1239))
(assert (x549 x50))
(assert (=> (< (- x182 1) 10000) (= (x1339 x182) (x625 x182))))
(assert (= (x1339 115792089237316195423570985008687907853269984665640564039457584007913129639935) (x625 115792089237316195423570985008687907853269984665640564039457584007913129639935)))
(assert (x549 x135))
(assert (x549 x1140))
(assert (= x820 (=> (and (<= x141 115792089237316195423570985008687907853269984665640564039457584007913129639935) (not (= x1167 2764855426)) (<= 0 x141) (< x1167 2960351575) (= x141 x404) (= (x1042 (x1339 274184521717934524641157099916833587206)) x783) (not (= x1167 2743102681)) (>= 1461501637330902918203684832716283019655932542975 x543) (not (= x1167 2690754053)) (not (< x1167 2690754053)) (= x1167 2798343961) (> x783 0) (= x141 (x1481 x1579)) (= (x462 (x1339 x543) x239 0) x1579) (= (x462 (x1339 x1114) (x625 5) 0) x239) (not (< x1167 2293535753))) (=> (and (= x906 x1561) (= x174 x914) (= x998 x121) (= x979 x404) (= x70 x451)) x590))))
(assert (= (x249 (x625 2690754053)) 2690754053))
(assert (x549 x946))
(assert (=> (< (- x190 1) 10000) (= (x625 x190) (x1339 x190))))
(assert (x549 x269))
(assert (=> (< (- x1590 1) 10000) (= (x625 x1590) (x1339 x1590))))
(assert (x85 x543))
(assert (x549 x764))
(assert (x549 x667))
(assert (= (x249 (x1339 x823)) x823))
(assert (= (x1523 x846) (ite (and x87 (not x1063) x88 x20 x887 x950) (x364 x846) (ite (and (not x87) x20 x887 x950 x88) (x256 x846) (ite (and x950 (not x88) x887 x20) (x414 x846) (ite (and x20 x950 (not x887)) (x563 x846) (x655 x846)))))))
(assert (x1037 x505 x588))
(assert (= x1114 (x249 (x1339 x1114))))
(assert (x195 x1127))
(assert (= (x475 x349) (ite (and x934 x1608) (x873 x349) (x821 x349))))
(assert (=> (< (- x103 1) 10000) (= (x1339 x103) (x625 x103))))
(assert (=> (< (- x1114 1) 10000) (= (x625 x1114) (x1339 x1114))))
(assert (x1037 x28 x838))
(assert (x549 x637))
(assert (x85 x799))
(assert (= (x625 2061678023) (x1339 2061678023)))
(assert (x549 x196))
(assert (x549 x1451))
(assert (= (ite (and x723 x607) (x1418 x349) (x1311 x349)) (x902 x349)))
(assert (= (x249 (x1339 x1428)) x1428))
(assert (x549 x293))
(assert (x549 x1246))
(assert (= (ite (and x1444 x1104) (x1005 x665) (ite (and (not x1444) x1104 x439) (x49 x665) (x982 x665))) (x1557 x665)))
(assert (= (=> (= x171 0) x1011) x844))
(assert (x549 x1126))
(assert (= (x249 (x1339 x343)) x343))
(assert (x549 x1236))
(assert (= (x475 x1462) (ite (and x1608 x934) (x873 x1462) (x821 x1462))))
(assert (= x1158 (x249 (x1339 x1158))))
(assert (= (x249 (x1339 x430)) x430))
(assert (x549 x1009))
(assert (= (ite (= x601 x448) 37714057306076988483118529490347679105585116642029194716945419020321082336612 (x1383 x448)) (x563 x448)))
(assert (=> (> (+ 10000 1) x477) (= (x625 x477) (x1339 x477))))
(assert (x549 x145))
(assert (x1037 x908 x1358))
(assert (x85 x747))
(assert (x549 x1499))
(assert (x549 x647))
(assert (= x1607 (x249 (x1339 x1607))))
(assert (x549 x770))
(assert (x549 x1373))
(assert (= x1460 (x249 (x1339 x1460))))
(assert (=> (> (+ 10000 1) x856) (= (x1339 x856) (x625 x856))))
(assert (= (ite (= x1302 x1148) x1398 (x211 x1302)) (x401 x1302)))
(assert (x549 x1485))
(assert (x549 x535))
(assert (= (x702 x775) (ite (= x1095 x775) x46 (x1083 x775))))
(assert (= x1235 (=> (and (= 142201243 x1178) (not (= 87118632 x1178)) (> 468353030 x1178) (<= x252 1461501637330902918203684832716283019655932542975) (= (x462 (x1339 x1055) x1582 0) x889) (= (x1042 (x1339 274184521717934524641157099916833587206)) x78) (= x1007 (x462 (x1339 x252) x889 0)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x176) (<= 0 x176) (> x78 0) (= x1582 (x462 (x1339 x1537) (x625 9) 0)) (= x176 (x1220 x1007)) (>= 1461501637330902918203684832716283019655932542975 x1055) (> 2293535753 x1178) (> 911411945 x1178) (= x176 x1374) (not (= x1178 69947311))) (=> (and (= x998 x523) (= x1303 x1374) (= x1569 x1561) (= x914 x225) (= x1325 (and x779 x796)) (= (<= x1303 x1260) x796)) x557))))
(assert (= (ite (= x1034 x1362) x1258 (x401 x1034)) (x1380 x1034)))
(assert (x549 x794))
(assert (= x638 x1563))
(assert (x549 x332))
(assert (= (ite (= x1256 x709) x295 (x414 x709)) (x256 x709)))
(assert (=> (< (- x1450 1) 10000) (= (x625 x1450) (x1339 x1450))))
(assert (=> (> (+ 10000 1) x1460) (= (x625 x1460) (x1339 x1460))))
(assert (= (x249 (x1339 x164)) x164))
(assert (=> (> (+ 10000 1) x313) (= (x625 x313) (x1339 x313))))
(check-sat)
