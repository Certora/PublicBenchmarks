(set-option :print-success false)
(set-option :produce-models true)
(set-logic QF_UFNIA)
(declare-fun x41 () Int)
(declare-fun x31 () Int)
(declare-fun x126 () Int)
(declare-fun x339 () Int)
(declare-fun x6 () Int)
(declare-fun x263 () Int)
(declare-fun x133 () Int)
(declare-fun x124 () Int)
(declare-fun x127 () Bool)
(declare-fun x311 () Bool)
(declare-fun x351 () Int)
(declare-fun x5 () Int)
(declare-fun x241 () Int)
(declare-fun x384 () Int)
(declare-fun x337 () Int)
(declare-fun x29 () Int)
(declare-fun x82 () Int)
(declare-fun x367 () Bool)
(declare-fun x310 () Int)
(declare-fun x355 () Bool)
(declare-fun x143 () Int)
(declare-fun x161 () Int)
(declare-fun x160 () Int)
(declare-fun x402 () Int)
(declare-fun x321 () Int)
(declare-fun x294 () Int)
(declare-fun x327 () Int)
(declare-fun x70 () Bool)
(declare-fun x389 () Int)
(declare-fun x372 () Int)
(declare-fun x164 () Int)
(declare-fun x381 () Bool)
(declare-fun x368 () Int)
(declare-fun x216 () Int)
(declare-fun x69 () Int)
(declare-fun x214 () Int)
(declare-fun x352 () Int)
(declare-fun x97 () Int)
(declare-fun x45 () Bool)
(declare-fun x195 () Int)
(declare-fun x20 () Int)
(declare-fun x71 () Int)
(declare-fun x35 () Int)
(declare-fun x413 () Int)
(declare-fun x144 () Int)
(declare-fun x112 () Int)
(declare-fun x245 () Int)
(declare-fun x233 () Int)
(declare-fun x62 () Int)
(declare-fun x253 () Bool)
(declare-fun x380 () Int)
(declare-fun x77 () Bool)
(declare-fun x230 () Int)
(declare-fun x363 () Int)
(declare-fun x142 () Int)
(declare-fun x335 () Int)
(declare-fun x248 () Bool)
(declare-fun x89 () Int)
(declare-fun x81 () Int)
(declare-fun x284 () Int)
(declare-fun x42 () Bool)
(declare-fun x407 () Int)
(declare-fun x36 () Int)
(declare-fun x162 () Int)
(declare-fun x13 () Int)
(declare-fun x58 () Int)
(declare-fun x122 () Int)
(declare-fun x27 () Bool)
(declare-fun x315 () Int)
(declare-fun x139 () Int)
(declare-fun x196 () Int)
(declare-fun x43 () Int)
(declare-fun x73 () Bool)
(declare-fun x16 () Int)
(declare-fun x141 () Int)
(declare-fun x203 () Bool)
(declare-fun x193 () Int)
(declare-fun x167 () Int)
(declare-fun x295 () Int)
(declare-fun x54 () Int)
(declare-fun x228 () Bool)
(declare-fun x18 () Int)
(declare-fun x341 () Int)
(declare-fun x308 () Int)
(declare-fun x99 () Bool)
(declare-fun x30 () Bool)
(declare-fun x72 () Int)
(declare-fun x131 () Int)
(declare-fun x226 () Int)
(declare-fun x235 () Int)
(declare-fun x240 () Int)
(declare-fun x3 () Int)
(declare-fun x242 () Bool)
(declare-fun x199 () Int)
(declare-fun x145 () Int)
(declare-fun x346 (Int Int) Int)
(declare-fun x239 () Int)
(declare-fun x318 () Int)
(declare-fun x138 () Int)
(declare-fun x281 () Int)
(declare-fun x252 () Int)
(declare-fun x323 () Bool)
(declare-fun x4 () Int)
(declare-fun x190 () Int)
(declare-fun x366 () Int)
(declare-fun x336 () Int)
(declare-fun x86 () Int)
(declare-fun x64 () Int)
(declare-fun x101 () Int)
(declare-fun x176 () Bool)
(declare-fun x115 () Int)
(declare-fun x306 () Int)
(declare-fun x305 () Int)
(declare-fun x267 () Int)
(declare-fun x40 () Int)
(declare-fun x274 () Int)
(declare-fun x103 () Int)
(declare-fun x47 () Int)
(declare-fun x153 () Int)
(declare-fun x290 () Int)
(declare-fun x34 () Int)
(declare-fun x11 () Int)
(declare-fun x279 () Int)
(declare-fun x209 () Int)
(declare-fun x414 () Int)
(declare-fun x319 () Int)
(declare-fun x111 () Int)
(declare-fun x183 () Int)
(declare-fun x57 () Int)
(declare-fun x75 () Int)
(declare-fun x165 () Int)
(declare-fun x8 () Int)
(declare-fun x396 () Int)
(declare-fun x266 () Int)
(declare-fun x152 () Bool)
(declare-fun x211 () Int)
(declare-fun x173 () Int)
(declare-fun x325 () Int)
(declare-fun x377 () Int)
(declare-fun x171 () Int)
(declare-fun x121 () Int)
(declare-fun x293 () Int)
(declare-fun x2 () Int)
(declare-fun x288 () Int)
(declare-fun x296 () Int)
(declare-fun x217 () Int)
(declare-fun x12 () Int)
(declare-fun x186 () Int)
(declare-fun x63 () Int)
(declare-fun x410 () Bool)
(declare-fun x229 () Int)
(declare-fun x238 () Int)
(declare-fun x416 () Int)
(declare-fun x107 () Int)
(declare-fun x172 () Int)
(declare-fun x373 () Bool)
(declare-fun x78 () Int)
(declare-fun x370 () Int)
(declare-fun x194 () Int)
(declare-fun x55 () Int)
(declare-fun x137 () Int)
(declare-fun x175 () Bool)
(declare-fun x170 () Int)
(declare-fun x79 () Int)
(declare-fun x283 () Int)
(declare-fun x95 () Int)
(declare-fun x348 () Int)
(declare-fun x282 () Int)
(declare-fun x198 () Int)
(declare-fun x280 () Int)
(declare-fun x309 () Int)
(declare-fun x159 () Int)
(declare-fun x147 () Int)
(declare-fun x202 () Int)
(declare-fun x300 () Int)
(declare-fun x262 () Int)
(declare-fun x349 () Int)
(declare-fun x68 () Int)
(declare-fun x249 () Int)
(declare-fun x236 () Int)
(declare-fun x329 () Int)
(declare-fun x109 () Int)
(declare-fun x192 () Int)
(declare-fun x52 () Bool)
(declare-fun x316 () Bool)
(declare-fun x26 () Int)
(declare-fun x397 () Bool)
(declare-fun x66 () Int)
(declare-fun x169 () Bool)
(declare-fun x270 () Int)
(declare-fun x358 () Int)
(declare-fun x286 () Int)
(declare-fun x59 () Int)
(declare-fun x96 () Int)
(declare-fun x37 () Int)
(declare-fun x87 () Int)
(declare-fun x188 () Int)
(declare-fun x302 () Int)
(declare-fun x197 () Int)
(declare-fun x395 () Bool)
(declare-fun x388 () Bool)
(declare-fun x353 () Bool)
(declare-fun x257 () Bool)
(declare-fun x398 () Int)
(declare-fun x25 () Int)
(declare-fun x1 (Int) Int)
(declare-fun x48 () Bool)
(declare-fun x406 () Int)
(declare-fun x80 () Int)
(declare-fun x9 () Int)
(declare-fun x129 () Int)
(declare-fun x39 () Int)
(declare-fun x24 () Int)
(declare-fun x386 () Int)
(declare-fun x390 () Bool)
(declare-fun x53 () Int)
(declare-fun x23 () Bool)
(declare-fun x383 () Int)
(declare-fun x7 () Int)
(declare-fun x168 () Int)
(declare-fun x210 () Int)
(declare-fun x330 () Int)
(declare-fun x272 () Int)
(declare-fun x185 () Int)
(declare-fun x357 () Int)
(declare-fun x299 () Int)
(declare-fun x206 () Bool)
(declare-fun x285 () Int)
(declare-fun x260 () Int)
(declare-fun x84 () Int)
(declare-fun x22 () Int)
(declare-fun x157 () Int)
(declare-fun x93 () Bool)
(declare-fun x15 () Int)
(declare-fun x223 () Int)
(declare-fun x379 () Int)
(declare-fun x356 () Bool)
(declare-fun x359 () Int)
(declare-fun x237 () Int)
(declare-fun x227 (Int) Int)
(declare-fun x276 () Int)
(declare-fun x51 () Int)
(declare-fun x298 () Int)
(declare-fun x135 () Int)
(declare-fun x74 () Int)
(declare-fun x218 () Int)
(declare-fun x166 (Int) Int)
(declare-fun x132 () Int)
(declare-fun x213 () Int)
(declare-fun x83 () Int)
(declare-fun x17 () Bool)
(declare-fun x100 () Bool)
(declare-fun x140 () Int)
(declare-fun x148 () Int)
(declare-fun x408 () Bool)
(declare-fun x10 () Int)
(declare-fun x106 () Int)
(declare-fun x378 () Int)
(declare-fun x391 () Bool)
(declare-fun x187 () Int)
(declare-fun x278 () Bool)
(declare-fun x98 () Int)
(declare-fun x312 () Bool)
(declare-fun x247 () Int)
(declare-fun x376 () Int)
(declare-fun x369 () Int)
(declare-fun x365 () Int)
(declare-fun x225 () Bool)
(declare-fun x399 () Bool)
(declare-fun x221 () Int)
(declare-fun x256 () Int)
(declare-fun x46 (Int Int) Int)
(declare-fun x154 () Bool)
(declare-fun x371 () Int)
(declare-fun x136 () Bool)
(declare-fun x417 () Int)
(declare-fun x200 () Int)
(declare-fun x94 (Int) Int)
(declare-fun x375 () Int)
(declare-fun x105 (Int) Int)
(declare-fun x220 () Bool)
(declare-fun x88 () Int)
(declare-fun x65 () Int)
(declare-fun x251 () Int)
(declare-fun x334 () Bool)
(declare-fun x412 () Int)
(declare-fun x204 () Int)
(declare-fun x212 () Bool)
(declare-fun x117 () Int)
(declare-fun x146 () Bool)
(declare-fun x102 () Int)
(declare-fun x345 () Bool)
(declare-fun x222 () Int)
(declare-fun x273 () Int)
(declare-fun x178 () Int)
(declare-fun x297 () Int)
(declare-fun x44 () Bool)
(declare-fun x343 () Bool)
(declare-fun x360 () Int)
(declare-fun x224 () Int)
(declare-fun x114 () Int)
(declare-fun x277 () Bool)
(declare-fun x317 () Bool)
(declare-fun x328 () Int)
(declare-fun x49 () Bool)
(declare-fun x322 () Int)
(declare-fun x362 () Int)
(declare-fun x21 () Int)
(declare-fun x181 () Int)
(declare-fun x91 () Int)
(declare-fun x32 () Int)
(declare-fun x243 () Int)
(declare-fun x60 () Int)
(declare-fun x14 () Int)
(declare-fun x405 () Int)
(declare-fun x182 () Int)
(declare-fun x340 () Int)
(declare-fun x189 () Int)
(declare-fun x116 () Bool)
(declare-fun x313 () Int)
(declare-fun x291 () Int)
(declare-fun x258 () Int)
(declare-fun x104 () Int)
(declare-fun x361 () Int)
(declare-fun x120 (Int) Int)
(declare-fun x76 () Int)
(declare-fun x392 () Int)
(define-fun x304 ((x184 Int)) Int (ite (and (<= 0 x184) (< x184 115792089237316195423570985008687907853269984665640564039457584007913129639936)) x184 (- x184 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(define-fun x150 ((x184 Int)) Int (ite (and (> 0 x184) (<= (- 115792089237316195423570985008687907853269984665640564039457584007913129639936) x184)) (+ x184 115792089237316195423570985008687907853269984665640564039457584007913129639936) x184))
(define-fun x411 ((x61 Int)) Bool (and (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 x61) (<= 0 x61)))
(define-fun x401 ((x61 Int)) Bool (and (<= 0 x61) (< x61 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(define-fun x108 ((x61 Int)) Bool (and (= x61 (x346 x61 115792089237316195423570985008687907853269984665640564039457584007913129639935)) (= x61 (x346 115792089237316195423570985008687907853269984665640564039457584007913129639935 x61))))
(define-fun x219 ((x61 Int)) Bool (and (= (x346 x61 0) 0) (= 0 (x346 0 x61))))
(define-fun x19 ((x61 Int)) Bool (= (x346 x61 x61) x61))
(define-fun x163 ((x61 Int)) Bool (and (x19 x61) (x219 x61) (x108 x61)))
(define-fun x382 ((x61 Int)) Bool (= (x346 18446744073709551615 (x346 18446744073709551615 x61)) (x346 18446744073709551615 x61)))
(define-fun x331 ((x61 Int)) Bool (=> (and (> 18446744073709551616 x61) (>= x61 0)) (= x61 (x346 18446744073709551615 x61))))
(define-fun x151 ((x61 Int)) Bool (=> (= (x346 18446744073709551615 x61) x61) (and (<= 0 x61) (> 18446744073709551616 x61))))
(define-fun x125 ((x61 Int)) Bool (=> (and (>= x61 18446744073709551616) (< x61 36893488147419103232)) (= (x346 18446744073709551615 x61) (- x61 18446744073709551616))))
(define-fun x180 ((x61 Int) (x259 Int)) Bool (and (= x61 (+ (* x259 18446744073709551616) (x346 18446744073709551615 x61))) (<= 0 x259)))
(define-fun x244 ((x61 Int) (x320 Int)) Bool (and (x151 x61) (x331 x61) (x382 x61) (x125 x61) (x180 x61 x320)))
(define-fun x179 ((x61 Int) (x259 Int)) Bool (= (x346 x259 x61) (x346 x61 x259)))
(define-fun x261 ((x61 Int) (x259 Int)) Bool (and (<= 0 (x346 x61 x259)) (=> (>= x259 0) (<= (x346 x61 x259) x259)) (=> (>= x61 0) (>= x61 (x346 x61 x259)))))
(define-fun x338 ((x61 Int) (x259 Int)) Bool (and (x179 x61 x259) (x261 x61 x259)))
(define-fun x28 ((x61 Int) (x320 Int)) Bool (and (x244 x61 x320) (x338 x61 18446744073709551615)))
(define-fun x364 ((x61 Int)) Bool (= (x346 1099511627775 (x346 1099511627775 x61)) (x346 1099511627775 x61)))
(define-fun x246 ((x61 Int)) Bool (=> (and (>= x61 0) (< x61 1099511627776)) (= (x346 1099511627775 x61) x61)))
(define-fun x207 ((x61 Int)) Bool (=> (= x61 (x346 1099511627775 x61)) (and (> 1099511627776 x61) (>= x61 0))))
(define-fun x149 ((x61 Int)) Bool (=> (and (>= x61 1099511627776) (< x61 2199023255552)) (= (x346 1099511627775 x61) (- x61 1099511627776))))
(define-fun x326 ((x61 Int) (x259 Int)) Bool (and (>= x259 0) (= (+ (* x259 1099511627776) (x346 1099511627775 x61)) x61)))
(define-fun x394 ((x61 Int) (x320 Int)) Bool (and (x207 x61) (x246 x61) (x364 x61) (x149 x61) (x326 x61 x320)))
(define-fun x287 ((x61 Int) (x320 Int)) Bool (and (x338 x61 1099511627775) (x394 x61 x320)))
(define-fun x314 ((x61 Int)) Bool (= (x346 20282409603651670423947251286015 (x346 20282409603651670423947251286015 x61)) (x346 20282409603651670423947251286015 x61)))
(define-fun x134 ((x61 Int)) Bool (=> (and (<= 0 x61) (> 20282409603651670423947251286016 x61)) (= x61 (x346 20282409603651670423947251286015 x61))))
(define-fun x271 ((x61 Int)) Bool (=> (= x61 (x346 20282409603651670423947251286015 x61)) (and (<= 0 x61) (> 20282409603651670423947251286016 x61))))
(define-fun x191 ((x61 Int)) Bool (=> (and (> 40564819207303340847894502572032 x61) (>= x61 20282409603651670423947251286016)) (= (- x61 20282409603651670423947251286016) (x346 20282409603651670423947251286015 x61))))
(define-fun x232 ((x61 Int) (x259 Int)) Bool (and (= x61 (+ (x346 20282409603651670423947251286015 x61) (* x259 20282409603651670423947251286016))) (<= 0 x259)))
(define-fun x234 ((x61 Int) (x320 Int)) Bool (and (x271 x61) (x191 x61) (x314 x61) (x232 x61 x320) (x134 x61)))
(define-fun x90 ((x61 Int) (x320 Int)) Bool (and (x234 x61 x320) (x338 x61 20282409603651670423947251286015)))
(define-fun x177 ((x61 Int)) Bool (= (x346 115792089237316195423570985008687907853269984665640564039439137263839420088320 (x346 115792089237316195423570985008687907853269984665640564039439137263839420088320 x61)) (x346 115792089237316195423570985008687907853269984665640564039439137263839420088320 x61)))
(define-fun x158 ((x61 Int)) Bool (=> (and (< x61 18446744073709551616) (<= 0 x61)) (= (x346 115792089237316195423570985008687907853269984665640564039439137263839420088320 x61) 0)))
(define-fun x56 ((x61 Int) (x259 Int) (x393 Int) (x92 Int)) Bool (and (< x393 6277101735386680763835789423207666416102355444464034512896) (<= 0 x259) (= (+ x259 (* x92 115792089237316195423570985008687907853269984665640564039457584007913129639936) (* 18446744073709551616 x393)) x61) (> 1 x92) (<= 0 x92) (< x259 18446744073709551616) (= (x346 115792089237316195423570985008687907853269984665640564039439137263839420088320 x61) (* 18446744073709551616 x393)) (>= x393 0)))
(define-fun x387 ((x61 Int) (x113 Int) (x208 Int) (x118 Int)) Bool (and (x56 x61 x113 x208 x118) (x177 x61) (x158 x61)))
(define-fun x347 ((x61 Int) (x113 Int) (x208 Int) (x118 Int)) Bool (and (x338 x61 115792089237316195423570985008687907853269984665640564039439137263839420088320) (x387 x61 x113 x208 x118)))
(define-fun x155 ((x61 Int)) Bool (= (x346 115792089237316195423570985008687907852929702298719625576012656144555070980095 (x346 115792089237316195423570985008687907852929702298719625576012656144555070980095 x61)) (x346 115792089237316195423570985008687907852929702298719625576012656144555070980095 x61)))
(define-fun x254 ((x61 Int)) Bool (=> (and (>= x61 0) (< x61 18446744073709551616)) (= x61 (x346 115792089237316195423570985008687907852929702298719625576012656144555070980095 x61))))
(define-fun x292 ((x61 Int) (x259 Int) (x393 Int) (x92 Int)) Bool (and (= x61 (+ (* 18446744073709551616 x393) (* x92 340282366920938463463374607431768211456) x259)) (<= 0 x259) (> 18446744073709551616 x259) (< x92 340282366920938463463374607431768211456) (>= x393 0) (< x393 18446744073709551616) (= (+ x259 (* x92 340282366920938463463374607431768211456)) (x346 115792089237316195423570985008687907852929702298719625576012656144555070980095 x61)) (>= x92 0)))
(define-fun x415 ((x61 Int) (x113 Int) (x208 Int) (x118 Int)) Bool (and (x155 x61) (x254 x61) (x292 x61 x113 x208 x118)))
(define-fun x255 ((x61 Int) (x113 Int) (x208 Int) (x118 Int)) Bool (and (x338 x61 115792089237316195423570985008687907852929702298719625576012656144555070980095) (x415 x61 x113 x208 x118)))
(define-fun x67 ((x61 Int)) Bool (= (x346 340282366920938463444927863358058659840 x61) (x346 340282366920938463444927863358058659840 (x346 340282366920938463444927863358058659840 x61))))
(define-fun x215 ((x61 Int)) Bool (=> (and (>= x61 0) (> 18446744073709551616 x61)) (= 0 (x346 340282366920938463444927863358058659840 x61))))
(define-fun x123 ((x61 Int) (x259 Int) (x393 Int) (x92 Int)) Bool (and (> 18446744073709551616 x259) (= (x346 340282366920938463444927863358058659840 x61) (* 18446744073709551616 x393)) (<= 0 x92) (>= x393 0) (= x61 (+ (* x393 18446744073709551616) x259 (* 340282366920938463463374607431768211456 x92))) (< x92 340282366920938463463374607431768211456) (>= x259 0) (> 18446744073709551616 x393)))
(define-fun x250 ((x61 Int) (x113 Int) (x208 Int) (x118 Int)) Bool (and (x123 x61 x113 x208 x118) (x67 x61) (x215 x61)))
(define-fun x350 ((x61 Int) (x113 Int) (x208 Int) (x118 Int)) Bool (and (x338 x61 340282366920938463444927863358058659840) (x250 x61 x113 x208 x118)))
(define-fun x354 ((x61 Int)) Bool (= (x346 115792089237316195417293883273301227089774477609353836086818603170880863338495 (x346 115792089237316195417293883273301227089774477609353836086818603170880863338495 x61)) (x346 115792089237316195417293883273301227089774477609353836086818603170880863338495 x61)))
(define-fun x156 ((x61 Int)) Bool (=> (and (> 340282366920938463463374607431768211456 x61) (>= x61 0)) (= x61 (x346 115792089237316195417293883273301227089774477609353836086818603170880863338495 x61))))
(define-fun x231 ((x61 Int) (x259 Int) (x393 Int) (x92 Int)) Bool (and (< x259 340282366920938463463374607431768211456) (<= 0 x393) (> 18446744073709551616 x92) (= (+ (* x92 6277101735386680763835789423207666416102355444464034512896) x259 (* 340282366920938463463374607431768211456 x393)) x61) (< x393 18446744073709551616) (>= x259 0) (= (x346 115792089237316195417293883273301227089774477609353836086818603170880863338495 x61) (+ (* x92 6277101735386680763835789423207666416102355444464034512896) x259)) (>= x92 0)))
(define-fun x409 ((x61 Int) (x113 Int) (x208 Int) (x118 Int)) Bool (and (x231 x61 x113 x208 x118) (x156 x61) (x354 x61)))
(define-fun x119 ((x61 Int) (x113 Int) (x208 Int) (x118 Int)) Bool (and (x338 x61 115792089237316195417293883273301227089774477609353836086818603170880863338495) (x409 x61 x113 x208 x118)))
(define-fun x385 ((x61 Int)) Bool (= (x346 6277101735386680763495507056286727952638980837032266301440 x61) (x346 6277101735386680763495507056286727952638980837032266301440 (x346 6277101735386680763495507056286727952638980837032266301440 x61))))
(define-fun x332 ((x61 Int)) Bool (=> (and (<= 0 x61) (> 340282366920938463463374607431768211456 x61)) (= 0 (x346 6277101735386680763495507056286727952638980837032266301440 x61))))
(define-fun x400 ((x61 Int) (x259 Int) (x393 Int) (x92 Int)) Bool (and (= (+ x259 (* x393 340282366920938463463374607431768211456) (* x92 6277101735386680763835789423207666416102355444464034512896)) x61) (< x393 18446744073709551616) (<= 0 x393) (< x259 340282366920938463463374607431768211456) (= (x346 6277101735386680763495507056286727952638980837032266301440 x61) (* 340282366920938463463374607431768211456 x393)) (<= 0 x259) (<= 0 x92) (< x92 18446744073709551616)))
(define-fun x324 ((x61 Int) (x113 Int) (x208 Int) (x118 Int)) Bool (and (x400 x61 x113 x208 x118) (x332 x61) (x385 x61)))
(define-fun x303 ((x61 Int) (x113 Int) (x208 Int) (x118 Int)) Bool (and (x324 x61 x113 x208 x118) (x338 x61 6277101735386680763495507056286727952638980837032266301440)))
(define-fun x265 ((x61 Int)) Bool (= (x346 6277101735386680763835789423207666416102355444464034512895 (x346 6277101735386680763835789423207666416102355444464034512895 x61)) (x346 6277101735386680763835789423207666416102355444464034512895 x61)))
(define-fun x50 ((x61 Int)) Bool (=> (and (< x61 6277101735386680763835789423207666416102355444464034512896) (>= x61 0)) (= (x346 6277101735386680763835789423207666416102355444464034512895 x61) x61)))
(define-fun x174 ((x61 Int)) Bool (=> (= x61 (x346 6277101735386680763835789423207666416102355444464034512895 x61)) (and (> 6277101735386680763835789423207666416102355444464034512896 x61) (<= 0 x61))))
(define-fun x374 ((x61 Int)) Bool (=> (and (> 12554203470773361527671578846415332832204710888928069025792 x61) (<= 6277101735386680763835789423207666416102355444464034512896 x61)) (= (x346 6277101735386680763835789423207666416102355444464034512895 x61) (- x61 6277101735386680763835789423207666416102355444464034512896))))
(define-fun x128 ((x61 Int) (x259 Int)) Bool (and (>= x259 0) (= (+ (x346 6277101735386680763835789423207666416102355444464034512895 x61) (* 6277101735386680763835789423207666416102355444464034512896 x259)) x61)))
(define-fun x404 ((x61 Int) (x320 Int)) Bool (and (x128 x61 x320) (x50 x61) (x265 x61) (x174 x61) (x374 x61)))
(define-fun x403 ((x61 Int) (x320 Int)) Bool (and (x338 x61 6277101735386680763835789423207666416102355444464034512895) (x404 x61 x320)))
(define-fun x264 ((x61 Int)) Bool (= (x346 115339776388733340411336991150008259455513788125666651270144861215348056129535 (x346 115339776388733340411336991150008259455513788125666651270144861215348056129535 x61)) (x346 115339776388733340411336991150008259455513788125666651270144861215348056129535 x61)))
(define-fun x85 ((x61 Int)) Bool (=> (and (<= 0 x61) (< x61 411376139330301510538742295639337626245683966408394965837152256)) (= x61 (x346 115339776388733340411336991150008259455513788125666651270144861215348056129535 x61))))
(define-fun x344 ((x61 Int) (x259 Int) (x393 Int) (x92 Int)) Bool (and (>= x259 0) (< x92 256) (= x61 (+ (* x393 411376139330301510538742295639337626245683966408394965837152256) (* 452312848583266388373324160190187140051835877600158453279131187530910662656 x92) x259)) (>= x393 0) (< x393 1099511627776) (> 411376139330301510538742295639337626245683966408394965837152256 x259) (>= x92 0) (= (x346 115339776388733340411336991150008259455513788125666651270144861215348056129535 x61) (+ x259 (* 452312848583266388373324160190187140051835877600158453279131187530910662656 x92)))))
(define-fun x110 ((x61 Int) (x113 Int) (x208 Int) (x118 Int)) Bool (and (x344 x61 x113 x208 x118) (x264 x61) (x85 x61)))
(define-fun x333 ((x61 Int) (x113 Int) (x208 Int) (x118 Int)) Bool (and (x110 x61 x113 x208 x118) (x338 x61 115339776388733340411336991150008259455513788125666651270144861215348056129535)))
(define-fun x201 ((x61 Int)) Bool (= (x346 452312848582855012233993858679648397756196539973912769312722792565073510400 (x346 452312848582855012233993858679648397756196539973912769312722792565073510400 x61)) (x346 452312848582855012233993858679648397756196539973912769312722792565073510400 x61)))
(define-fun x275 ((x61 Int)) Bool (=> (and (< x61 411376139330301510538742295639337626245683966408394965837152256) (>= x61 0)) (= (x346 452312848582855012233993858679648397756196539973912769312722792565073510400 x61) 0)))
(define-fun x268 ((x61 Int) (x259 Int) (x393 Int) (x92 Int)) Bool (and (= x61 (+ x259 (* 452312848583266388373324160190187140051835877600158453279131187530910662656 x92) (* 411376139330301510538742295639337626245683966408394965837152256 x393))) (<= 0 x92) (<= 0 x393) (= (x346 452312848582855012233993858679648397756196539973912769312722792565073510400 x61) (* x393 411376139330301510538742295639337626245683966408394965837152256)) (> 1099511627776 x393) (> 256 x92) (<= 0 x259) (< x259 411376139330301510538742295639337626245683966408394965837152256)))
(define-fun x307 ((x61 Int) (x113 Int) (x208 Int) (x118 Int)) Bool (and (x275 x61) (x201 x61) (x268 x61 x113 x208 x118)))
(define-fun x342 ((x61 Int) (x113 Int) (x208 Int) (x118 Int)) Bool (and (x338 x61 452312848582855012233993858679648397756196539973912769312722792565073510400) (x307 x61 x113 x208 x118)))
(define-fun x33 ((x289 Int)) Int (ite (= 0 x289) x101 (x1 x289)))
(define-fun x38 ((x289 Int)) Int (ite (= 0 x289) x29 (x166 x289)))
(define-fun x130 ((x289 Int)) Int (ite (= 0 x289) x14 (x94 x289)))
(define-fun x301 ((x289 Int)) Int (ite (and x136 x17 x367) (x94 x289) (x130 x289)))
(define-fun x205 ((x289 Int)) Int (ite (= x289 1) x15 (x301 x289)))
(define-fun x269 ((x289 Int)) Int (ite (and x136 (not x367)) (x1 x289) (x205 x289)))
(assert (x401 x114))
(assert (x401 x361))
(assert (x401 x386))
(assert (= x242 (=> (and (= 3075265556 x339) (> 3122421376 x339) (> x406 0) (= x375 x51) (not (= x339 2879910238)) (not (= x339 2758797371)) (= x412 (x1 0)) (not (= x339 2799315671)) (not (< x339 2758797371)) (= (x346 18446744073709551615 x412) x375) (not (= x339 2867386960)) (not (< x339 2059964113)) (not (= 2834295333 x339)) (not (< x339 2531764673)) (= (x227 274184521717934524641157099916833587211) x406)) (=> (= x51 x22) x312))))
(assert (x401 x233))
(assert (x401 x341))
(assert (x401 x98))
(assert (x401 x230))
(assert (x28 x115 x196))
(assert (x401 x14))
(assert (x163 20282409603651670423947251286015))
(assert (x401 x263))
(assert (x401 x406))
(assert (x401 x351))
(assert (x401 x247))
(assert (x342 x55 x378 x82 x58))
(assert (x401 x124))
(assert (= x360 (x166 0)))
(assert (x401 x101))
(assert (x163 x229))
(assert (x163 x170))
(assert (= (x94 0) (ite (and x136 x311 x367) (x166 0) (x38 0))))
(assert (= x176 x154))
(assert (= x203 x70))
(assert (= x323 x176))
(assert (x90 x306 x282))
(assert (x401 x7))
(assert (x401 x60))
(assert (x401 x336))
(assert (x401 x16))
(assert (x401 x78))
(assert (x401 x36))
(assert (x401 x218))
(assert (x28 x412 x91))
(assert (x401 x71))
(assert (x401 x306))
(assert (x401 x41))
(assert (x28 x36 x37))
(assert (x401 x79))
(assert (= x203 x323))
(assert (x401 x216))
(assert (x401 x132))
(assert (x401 x369))
(assert (x287 x222 x249))
(assert (x163 x372))
(assert (x401 x107))
(assert (x401 x47))
(assert (x401 x235))
(assert (x163 x55))
(assert (= x343 (=> (and (not (= 1752364190 x47)) (= x139 (div x379 18446744073709551616)) (not (= 1736444767 x47)) (not (= 1490534272 x47)) (not (= x47 1507858365)) (not (< x47 1157571613)) (not (> 840395849 x47)) (= 2055092157 x47) (< x47 2059964113) (not (> 1490534272 x47)) (> x72 0) (= (x346 18446744073709551615 x139) x78) (= x78 x398) (= (x269 0) x379) (= x72 (x227 274184521717934524641157099916833587211))) (=> (= x398 x241) x253))))
(assert (x350 x361 x319 x43 x224))
(assert (x163 x68))
(assert (x163 18446744073709551615))
(assert (x401 x300))
(assert (x303 x68 x183 x258 x315))
(assert (x401 x202))
(assert (x401 x240))
(assert (x401 x243))
(assert (x401 x365))
(assert (x401 x138))
(assert (x401 x96))
(assert (x401 x181))
(assert (x401 x39))
(assert (x401 x6))
(assert (x401 x238))
(assert (x163 6277101735386680763835789423207666416102355444464034512895))
(assert (x401 x25))
(assert (x401 x29))
(assert (x401 x178))
(assert (x163 x236))
(assert (x401 x286))
(assert (x401 x2))
(assert (x401 x297))
(assert (x163 x306))
(assert (x401 x72))
(assert (x90 x372 x87))
(assert (x401 x288))
(assert (x401 x137))
(assert (x255 x361 x272 x198 x88))
(assert (x28 x218 x383))
(assert (x401 x358))
(assert (x401 x171))
(assert (= x136 x154))
(assert (x401 x31))
(assert (x401 x296))
(assert (x401 x15))
(assert (x401 x417))
(assert (x401 x335))
(assert (x401 x5))
(assert (x401 x18))
(assert (x401 x35))
(assert (x401 x270))
(assert (x401 x144))
(assert (x401 x189))
(assert (x401 x131))
(assert (x401 x371))
(assert (x163 x233))
(assert (x119 x68 x279 x211 x217))
(assert (= (ite (and x311 x136 x367) (x166 1) (x38 1)) (x94 1)))
(assert (x163 x98))
(assert (x163 x222))
(assert (x401 x213))
(assert (x163 115792089237316195423570985008687907853269984665640564039439137263839420088320))
(assert (x401 x12))
(assert (x401 x241))
(assert (= (x166 1) (x33 1)))
(assert (x401 x111))
(assert (x163 115792089237316195417293883273301227089774477609353836086818603170880863338495))
(assert (x90 x233 x187))
(assert (x163 x171))
(assert (x401 x147))
(assert (= x152 (=> (and (<= x192 255) (= (x120 274184521717934524641157099916833587221) x103) x388 (>= x107 0) (= (x120 274184521717934524641157099916833587223) x384) (= x278 (< 0 (x227 274184521717934524641157099916833587221))) (= x305 (x120 274184521717934524641157099916833587211)) (>= 1208925819614629174706175 x107) (<= 0 x384) (<= 0 x181) (>= x103 0) (<= x247 255) (<= x18 1208925819614629174706175) (<= x181 1461501637330902918203684832716283019655932542975) (>= x328 0) (>= 1461501637330902918203684832716283019655932542975 x328) (>= 1208925819614629174706175 x298) x278 (>= x298 0) (<= 0 x305) (>= x192 0) (= (> (x227 274184521717934524641157099916833587211) 0) x48) (>= x247 0) (>= x262 0) x48 (= (> (x227 274184521717934524641157099916833587223) 0) x388) (>= x18 0) (>= 1208925819614629174706175 x262)) x242)))
(assert (x401 x81))
(assert (x163 x202))
(assert (x163 x218))
(assert (= (=> (and (< 0 x57) (= (x269 1) x245) (< x295 3122421376) (= (x227 274184521717934524641157099916833587211) x57) (= x170 (div x245 411376139330301510538742295639337626245683966408394965837152256)) (= (x346 1099511627775 x170) x34) (= x34 x54) (not (> 2758797371 x295)) (= 2867386960 x295) (not (< x295 2059964113)) (not (> 2531764673 x295)) (not (= 2834295333 x295)) (not (= 2758797371 x295)) (not (= x295 2799315671))) x355) x397))
(assert (x163 x139))
(assert (x401 x199))
(assert (x401 x357))
(assert (x401 x54))
(assert (x163 x351))
(assert (x401 x195))
(assert (x401 x13))
(assert (x401 x117))
(assert (x28 x202 x226))
(assert (x401 x236))
(assert (= (=> (and (>= 1461501637330902918203684832716283019655932542975 x12) (>= x161 0) (= 719963584 x76) (<= x181 1461501637330902918203684832716283019655932542975) (< x76 840395849) (not (= 614716962 x76)) (not (= 641995544 x76)) (not (= x76 480214969)) (= (x227 274184521717934524641157099916833587211) x126) (>= x12 0) (= x313 x405) (> 731029629 x76) (>= 1461501637330902918203684832716283019655932542975 x161) (> 1099511627776 x313) (< x76 2059964113) (= x204 0) (> x126 0) (= x12 x240) (= x380 x313) (>= x181 0) (not (< x76 480214969)) (not (= x76 635583253))) (=> (= x313 x330) x397)) x253))
(assert (x163 x396))
(assert (x401 x321))
(assert (x401 x328))
(assert (x90 x132 x302))
(assert (x401 x142))
(assert (x403 x396 x95))
(assert (x401 x173))
(assert (x163 452312848582855012233993858679648397756196539973912769312722792565073510400))
(assert (x401 x192))
(assert (x401 x396))
(assert (x401 x329))
(assert (x401 x294))
(assert (x401 x405))
(assert (x163 x59))
(assert (x401 x325))
(assert (x401 x414))
(assert (x401 x160))
(assert (x28 x199 x349))
(assert (x90 x325 x167))
(assert (x401 x26))
(assert (x401 x188))
(assert (x401 x348))
(assert (x401 x368))
(assert (x163 340282366920938463444927863358058659840))
(assert (x163 x10))
(assert (x401 x112))
(assert (x401 x252))
(assert (x401 x84))
(assert (x347 x335 x74 x413 x362))
(assert (= true x334))
(assert (x287 x357 x274))
(assert (x401 x66))
(assert (x401 x102))
(assert (x333 x55 x256 x190 x8))
(assert (x163 x5))
(assert (x401 x339))
(assert (x401 x68))
(assert (x401 x89))
(assert (x401 x164))
(assert (x401 x57))
(assert (x401 x204))
(assert (x90 x229 x416))
(assert (x163 x115))
(assert (= x334 x399))
(assert (x401 x412))
(assert (x401 x407))
(assert (x401 x193))
(assert (x401 x327))
(assert (= x399 x136))
(assert (x401 x104))
(assert (x401 x366))
(assert (x28 x236 x69))
(assert (x401 x55))
(assert (x401 x165))
(assert (x401 x360))
(assert (not x152))
(assert (x90 x300 x83))
(assert (x163 x63))
(assert (x401 x322))
(assert (x401 x80))
(assert (x401 x140))
(assert (x401 x145))
(assert (x401 x237))
(assert (x163 x84))
(assert (x401 x318))
(assert (x28 x98 x310))
(assert (x401 x372))
(assert (x401 x194))
(assert (x401 x22))
(assert (x401 x280))
(assert (x90 x351 x389))
(assert (x28 x171 x285))
(assert (x401 x10))
(assert (x401 x162))
(assert (x401 x251))
(assert (x401 x330))
(assert (x28 x84 x168))
(assert (= (=> (and (= (or x356 (not x45)) x277) (= x241 x348) (= x54 x281) (= (> x330 x281) x45) (= x263 x189) (= x376 x270) (= (< x111 x263) x353) (= x111 x22) (= (< x270 x348) x100) (= (and x353 x100) x356)) x277) x355))
(assert (x401 x291))
(assert (x401 x377))
(assert (x163 115792089237316195423570985008687907852929702298719625576012656144555070980095))
(assert (x401 x32))
(assert (x28 x5 x109))
(assert (x401 x62))
(assert (x401 x260))
(assert (x401 x143))
(assert (x90 x59 x284))
(assert (x401 x245))
(assert (x163 x325))
(assert (x401 x148))
(assert (x401 x214))
(assert (x401 x170))
(assert (x401 x40))
(assert (x163 x300))
(assert (x401 x379))
(assert (x401 x380))
(assert (x401 x281))
(assert (x163 x132))
(assert (x401 x313))
(assert (x401 x121))
(assert (x401 x76))
(assert (x90 x10 x223))
(assert (x401 x122))
(assert (x401 x21))
(assert (x401 x229))
(assert (x28 x139 x210))
(assert (x28 x63 x267))
(assert (x401 x295))
(assert (x401 x352))
(assert (x401 x63))
(assert (x401 x161))
(assert (x401 x299))
(assert (x163 x36))
(assert (x401 x384))
(assert (x401 x133))
(assert (x401 x222))
(assert (x401 x34))
(assert (x401 x305))
(assert (x401 x185))
(assert (x401 x359))
(assert (x90 x60 x276))
(assert (x401 x298))
(assert (x163 6277101735386680763495507056286727952638980837032266301440))
(assert (x401 x375))
(assert (x163 115339776388733340411336991150008259455513788125666651270144861215348056129535))
(assert (x401 x376))
(assert (x401 x4))
(assert (x163 x361))
(assert (x401 x126))
(assert (x401 x398))
(assert (x401 x392))
(assert (x401 x200))
(assert (x401 x135))
(assert (x401 x129))
(assert (x401 x239))
(assert (x401 x51))
(assert (x401 x115))
(assert (x401 x97))
(assert (x401 x283))
(assert (x401 x262))
(assert (x163 x199))
(assert (x401 x139))
(assert (x163 x60))
(assert (x401 x59))
(assert (x401 x293))
(assert (x163 x143))
(assert (x401 x197))
(assert (x401 x103))
(assert (x163 x357))
(assert (x90 x143 x53))
(assert (x401 x64))
(assert (x401 x11))
(assert (x28 x7 x340))
(assert (= x316 (=> (and (not (< x243 2059964113)) (= x243 3075265556) (not (< x243 2531764673)) (not (= 2867386960 x243)) (= x121 (x346 18446744073709551615 x171)) (not (= 2834295333 x243)) (not (= 2758797371 x243)) (= x171 (x269 0)) (< x243 3122421376) (not (= 2799315671 x243)) (= x341 x121) (not (< x243 2758797371)) (> x327 0) (= (x227 274184521717934524641157099916833587211) x327) (not (= 2879910238 x243))) (=> (= x189 x341) x343))))
(assert (x401 x24))
(assert (x163 1099511627775))
(assert (x163 x412))
(assert (= x312 (=> (and (not (= 1490534272 x294)) (= (x1 0) x392) (= (div x392 18446744073709551616) x236) (< x294 2059964113) (= x294 2055092157) (= x283 x114) (= x148 (x227 274184521717934524641157099916833587211)) (not (= x294 1752364190)) (< 0 x148) (not (= 1507858365 x294)) (not (< x294 840395849)) (not (> 1490534272 x294)) (= (x346 18446744073709551615 x236) x114) (not (= 1736444767 x294)) (not (> 1157571613 x294))) (=> (and (= x80 x313) (= x357 (div x124 411376139330301510538742295639337626245683966408394965837152256)) (= x367 (> x117 0)) (= x222 (x150 (- x313 x135))) (not (> 3889878717 x336)) (not (> 3638949393 x336)) (= 4033150093 x336) (<= x193 1461501637330902918203684832716283019655932542975) (>= x181 0) (= 0 x204) (= x213 x240) (or (not x367) (and x367 (= x138 (x346 115339776388733340411336991150008259455513788125666651270144861215348056129535 x55)) (= (> x371 x318) x311) (= (* x117 x321) x221) (= (x346 18446744073709551615 x202) x297) (or (and (= 0 x200) x345) (and (not x345) (= x3 (* x417 1000000000000000000)) (< (* 1000000000000000000 x417) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x79 (div x3 x322)) (= x79 x200))) (= x345 (= 0 x322)) (or (and x212 (= x13 0)) (and (not x212) (= (div x20 x366) x75) (= x13 x75) (= x20 (* 1000000000000000000 x129)) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (* 1000000000000000000 x129)))) (= x199 (div x195 18446744073709551616)) (= x25 (x150 (- 1000000000000000000 x164))) (< (+ x6 x237) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x230 x4)) (= (x1 0) x115) (= x290 (* x102 x160)) (= x17 (< x369 x371)) (< (* x178 x251) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= (mod (* 18446744073709551616 x133) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x188) (= x101 (x304 (+ x216 x66))) (= (x346 18446744073709551615 x5) x230) (= (x346 18446744073709551615 x84) x299) (= (x346 18446744073709551615 x199) x237) (= (x346 18446744073709551615 x63) x293) (= x352 (mod (* x313 411376139330301510538742295639337626245683966408394965837152256) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= (x33 0) x361) (= x212 (= x366 0)) (= x160 (x346 18446744073709551615 x7)) (= (div x209 1000000000000000000) x6) (= x4 (div x308 1000000000000000000)) (= x228 (< x26 x200)) (= x32 (x1 1)) (= x60 (div x402 1000000000000000)) (= (* x97 x239) x370) (= (x346 20282409603651670423947251286015 x372) x178) (= x132 (div x182 1000000000000000)) (= (* x297 x89) x308) (= (x1 1) x351) (= x417 (x346 20282409603651670423947251286015 x132)) (= x112 (x33 0)) (>= 18446744073709551615 x133) (or (and (= x98 (div x165 6277101735386680763835789423207666416102355444464034512896)) (< (* x291 x117) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= (mod (* 6277101735386680763835789423207666416102355444464034512896 x64) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x145) (= (x346 18446744073709551615 x98) x173) (not (> x71 18446744073709551615)) (= x273 x365) (< (+ x173 x71) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= (x304 (+ x144 x145)) x14) (>= 18446744073709551615 x64) (= x396 (x94 0)) (= (+ x71 x173) x64) (= (x94 1) x359) (= x71 (div x186 x197)) (= x59 (div x359 20282409603651670423947251286016)) (= (* x414 x365) x186) (= (x94 0) x165) (not x17) (= (* x117 x291) x273) (> x197 0) (= (x346 20282409603651670423947251286015 x59) x197) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (* x414 x365)) (= (x346 6277101735386680763835789423207666416102355444464034512895 x396) x144)) x17) (= x66 (x346 115792089237316195423570985008687907853269984665640564039439137263839420088320 x335)) (= (+ x6 x237) x133) (= x182 (* x299 x81)) (= x97 (x346 20282409603651670423947251286015 x351)) (= x102 (x346 20282409603651670423947251286015 x10)) (not (> x164 1000000000000000000)) (= x7 (x1 0)) (= x129 (x346 20282409603651670423947251286015 x60)) (= x216 (+ x230 x4)) (= (x346 115792089237316195423570985008687907852929702298719625576012656144555070980095 x361) x96) (= x10 (x1 1)) (= (div x290 1000000000000000) x143) (= (x346 20282409603651670423947251286015 x300) x366) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (* x293 x252)) (= x209 (* x293 x252)) (= (x166 1) x325) (= (x1 0) x335) (= x21 (div x157 1000000000000000000)) (= (x1 1) x122) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (* x81 x299)) (= x195 (x33 0)) (not (< 18446744073709551615 x6)) (= (x1 0) x5) (= (x1 0) x202) (not (> x4 18446744073709551615)) (= x372 (div x122 20282409603651670423947251286016)) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (* x200 x25)) (< (* x117 x386) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (>= 18446744073709551615 x216) (= x15 (x304 (+ x352 x138))) (= (x301 1) x55) (= x368 (x1 0)) (= x360 (x304 (+ x96 x188))) (= (* x386 x117) x337) (or (and (= x286 (x346 115792089237316195417293883273301227089774477609353836086818603170880863338495 x68)) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (* x414 x11)) (= (div x40 340282366920938463463374607431768211456) x218) (not x311) (= (div x309 x238) x140) (< (* x117 x35) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= (x346 18446744073709551615 x218) x194) (<= x16 18446744073709551615) (= x11 x172) (= (x166 0) x68) (not (< 18446744073709551615 x140)) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x140 x194)) (< 0 x238) (= (x304 (+ x286 x147)) x29) (= x309 (* x414 x11)) (= x147 (mod (* x16 340282366920938463463374607431768211456) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= (x166 0) x40) (= x172 (* x117 x35)) (= x306 (x166 1)) (= (+ x140 x194) x16) (= (x346 20282409603651670423947251286015 x306) x238)) x311) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (* x117 x321)) (= x322 (x346 20282409603651670423947251286015 x143)) (or (and (< (* x41 x260) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (* x142 x26)) (= x321 x162) (= x162 (+ x185 x62)) (= x86 (* x26 x142)) (= x41 (x150 (- x13 x26))) (= x185 (div x65 1000000000000000000)) (< (+ x62 x185) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x65 (* x260 x41)) (= x288 (div x86 1000000000000000000)) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x2 x288)) (not (> x26 x13)) (= x62 (+ x2 x288)) (not (< 18446744073709551615 x162)) x99) (and (not x99) (= x280 x321) (not (> x280 18446744073709551615)) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (* x13 x142)) (= (+ x2 x31) x280) (< (+ x2 x31) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= (div x106 1000000000000000000) x31) (= x106 (* x142 x13)))) (= x36 (div x368 18446744073709551616)) (= x369 (x346 20282409603651670423947251286015 x233)) (= (div x370 1000000000000000) x300) (= x337 x89) (= x157 (* x200 x25)) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (* x239 x97)) (= x221 x252) (= (x346 20282409603651670423947251286015 x325) x318) (or (and (= (div x153 1000000000000000000) x214) (= x296 (+ x214 x2)) (not x228) (= x266 (* x296 x21)) (not (< 18446744073709551615 x24)) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (* x200 x142)) (= x153 (* x200 x142)) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x214 x2)) (= x24 x386) (= x24 (div x266 1000000000000000000)) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (* x21 x296))) (and (< (+ x358 x39) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x141 (* x21 x329)) (= x39 (+ x2 x407)) x228 (not (< x200 x26)) (= (div x141 1000000000000000000) x235) (= x358 (div x159 1000000000000000000)) (= (* x26 x142) x9) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (* x21 x329)) (= x235 x386) (= x329 (+ x358 x39)) (< (* x26 x142) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (* x131 x260)) (= x131 (x150 (- x200 x26))) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x2 x407)) (= x159 (* x131 x260)) (= x407 (div x9 1000000000000000000)) (not (> x235 18446744073709551615)))) (= x402 (* x251 x178)) (= (x346 18446744073709551615 x115) x239) (= (x94 1) x104) (= x99 (> x13 x26)) (= (x1 0) x377) (= (div x32 20282409603651670423947251286016) x229) (= (div x112 18446744073709551616) x63) (= (div x104 20282409603651670423947251286016) x233) (< (* x102 x160) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= (x346 20282409603651670423947251286015 x229) x81) (= (x346 18446744073709551615 x36) x251) (= x84 (div x377 18446744073709551616)) (< (* x297 x89) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (x227 274184521717934524641157099916833587211) x137) (not (< x313 x135)) (>= x193 0) (> x137 0) (= x135 (x346 1099511627775 x357)) (= (x1 1) x124) (= (x346 1099511627775 x222) x117) (not (< x336 3122421376)) (>= 1461501637330902918203684832716283019655932542975 x213) (not (< x336 2059964113)) (>= x213 0) (< x313 1099511627776) (<= x181 1461501637330902918203684832716283019655932542975) (= x376 x283) (not (= 3889878717 x336))) x316))))
(assert (x287 x170 x363))
(assert (x163 x335))
(assert (x163 x7))
(assert (x401 x75))
(check-sat)
