(set-option :print-success false)
(set-option :produce-models true)
(set-logic QF_UFNIA)
(declare-fun x9 () Int)
(declare-fun x179 () Int)
(declare-fun x187 () Int)
(declare-fun x114 () Int)
(declare-fun x264 () Int)
(declare-fun x189 () Int)
(declare-fun x129 () Int)
(declare-fun x221 () Int)
(declare-fun x337 () Int)
(declare-fun x300 () Int)
(declare-fun x175 () Bool)
(declare-fun x56 () Bool)
(declare-fun x347 () Int)
(declare-fun x273 () Int)
(declare-fun x254 () Int)
(declare-fun x84 () Int)
(declare-fun x137 () Int)
(declare-fun x140 () Bool)
(declare-fun x186 () Int)
(declare-fun x47 () Bool)
(declare-fun x204 () Int)
(declare-fun x382 () Int)
(declare-fun x124 (Int) Int)
(declare-fun x260 () Int)
(declare-fun x265 () Int)
(declare-fun x231 () Int)
(declare-fun x199 () Bool)
(declare-fun x285 () Int)
(declare-fun x78 () Int)
(declare-fun x207 () Int)
(declare-fun x99 () Int)
(declare-fun x97 () Int)
(declare-fun x235 () Int)
(declare-fun x370 () Int)
(declare-fun x291 () Int)
(declare-fun x167 () Int)
(declare-fun x59 () Int)
(declare-fun x31 () Int)
(declare-fun x46 () Int)
(declare-fun x18 () Int)
(declare-fun x363 () Int)
(declare-fun x171 () Bool)
(declare-fun x230 () Bool)
(declare-fun x287 () Int)
(declare-fun x173 () Int)
(declare-fun x192 () Int)
(declare-fun x128 () Bool)
(declare-fun x44 () Int)
(declare-fun x48 () Bool)
(declare-fun x227 () Bool)
(declare-fun x130 () Bool)
(declare-fun x182 () Int)
(declare-fun x261 () Int)
(declare-fun x280 () Int)
(declare-fun x302 () Int)
(declare-fun x39 () Int)
(declare-fun x2 () Int)
(declare-fun x168 () Int)
(declare-fun x147 () Int)
(declare-fun x268 () Int)
(declare-fun x344 () Int)
(declare-fun x77 () Int)
(declare-fun x106 () Int)
(declare-fun x76 () Int)
(declare-fun x11 () Int)
(declare-fun x210 () Int)
(declare-fun x226 () Int)
(declare-fun x95 () Int)
(declare-fun x212 () Int)
(declare-fun x185 () Int)
(declare-fun x374 () Int)
(declare-fun x117 () Int)
(declare-fun x21 () Bool)
(declare-fun x301 () Int)
(declare-fun x307 () Int)
(declare-fun x50 () Int)
(declare-fun x269 () Int)
(declare-fun x341 () Int)
(declare-fun x127 () Int)
(declare-fun x66 () Int)
(declare-fun x349 () Int)
(declare-fun x324 () Int)
(declare-fun x282 () Int)
(declare-fun x236 () Bool)
(declare-fun x143 () Int)
(declare-fun x321 () Bool)
(declare-fun x217 () Int)
(declare-fun x115 () Int)
(declare-fun x87 () Int)
(declare-fun x3 () Bool)
(declare-fun x263 () Int)
(declare-fun x368 () Int)
(declare-fun x121 () Int)
(declare-fun x219 () Int)
(declare-fun x132 (Int Int) Int)
(declare-fun x305 () Int)
(declare-fun x146 () Int)
(declare-fun x317 () Int)
(declare-fun x126 () Int)
(declare-fun x190 () Int)
(declare-fun x295 () Int)
(declare-fun x45 () Int)
(declare-fun x252 () Int)
(declare-fun x30 () Int)
(declare-fun x369 () Int)
(declare-fun x109 () Int)
(declare-fun x13 () Int)
(declare-fun x37 () Int)
(declare-fun x289 () Int)
(declare-fun x32 () Bool)
(declare-fun x233 () Int)
(declare-fun x310 () Int)
(declare-fun x23 () Int)
(declare-fun x376 (Int) Int)
(declare-fun x201 () Int)
(declare-fun x332 () Int)
(declare-fun x197 () Int)
(declare-fun x274 () Bool)
(declare-fun x206 () Int)
(declare-fun x177 () Int)
(declare-fun x314 () Int)
(declare-fun x318 () Int)
(declare-fun x348 () Int)
(declare-fun x170 () Int)
(declare-fun x152 () Int)
(declare-fun x180 () Int)
(declare-fun x209 () Int)
(declare-fun x165 () Int)
(declare-fun x354 () Int)
(declare-fun x246 () Int)
(declare-fun x203 () Bool)
(declare-fun x184 () Int)
(declare-fun x358 () Int)
(declare-fun x283 () Int)
(declare-fun x174 () Int)
(declare-fun x258 () Int)
(declare-fun x350 () Int)
(declare-fun x200 () Int)
(declare-fun x250 () Int)
(declare-fun x281 () Int)
(declare-fun x241 () Int)
(declare-fun x360 () Int)
(declare-fun x223 () Int)
(declare-fun x89 () Int)
(declare-fun x139 () Int)
(declare-fun x55 () Int)
(declare-fun x320 () Int)
(declare-fun x63 () Int)
(declare-fun x131 () Int)
(declare-fun x113 () Int)
(declare-fun x335 () Int)
(declare-fun x100 () Int)
(declare-fun x107 () Int)
(declare-fun x110 () Int)
(declare-fun x366 () Int)
(declare-fun x202 () Int)
(declare-fun x27 () Int)
(declare-fun x256 () Int)
(declare-fun x322 () Int)
(declare-fun x119 () Int)
(declare-fun x229 () Int)
(declare-fun x176 () Int)
(declare-fun x154 (Int) Int)
(declare-fun x293 () Int)
(declare-fun x105 () Int)
(declare-fun x356 () Int)
(declare-fun x14 () Int)
(declare-fun x159 () Bool)
(declare-fun x191 () Int)
(declare-fun x112 () Int)
(declare-fun x351 () Int)
(declare-fun x69 () Int)
(declare-fun x330 () Int)
(declare-fun x378 () Int)
(declare-fun x327 () Int)
(declare-fun x102 () Int)
(declare-fun x380 () Int)
(declare-fun x4 () Int)
(declare-fun x64 () Int)
(declare-fun x53 () Int)
(declare-fun x71 () Int)
(declare-fun x166 () Int)
(declare-fun x355 () Bool)
(declare-fun x17 () Int)
(declare-fun x28 () Int)
(declare-fun x42 () Int)
(declare-fun x211 () Int)
(declare-fun x148 () Int)
(declare-fun x85 () Int)
(declare-fun x125 () Int)
(declare-fun x239 () Int)
(declare-fun x96 () Int)
(declare-fun x22 () Int)
(declare-fun x157 () Int)
(declare-fun x188 () Int)
(declare-fun x25 () Bool)
(declare-fun x367 () Int)
(declare-fun x104 () Int)
(declare-fun x156 () Int)
(declare-fun x262 () Int)
(declare-fun x339 () Int)
(declare-fun x120 () Int)
(declare-fun x141 () Int)
(declare-fun x73 () Int)
(declare-fun x49 () Int)
(declare-fun x298 () Int)
(declare-fun x118 () Bool)
(declare-fun x163 (Int) Int)
(declare-fun x94 () Bool)
(declare-fun x299 () Int)
(declare-fun x145 () Int)
(declare-fun x225 () Bool)
(declare-fun x138 () Int)
(declare-fun x232 () Int)
(declare-fun x228 () Int)
(declare-fun x242 () Int)
(declare-fun x36 () Bool)
(declare-fun x284 () Int)
(declare-fun x334 () Int)
(declare-fun x384 () Bool)
(declare-fun x34 () Int)
(declare-fun x54 () Int)
(declare-fun x277 () Int)
(declare-fun x161 () Int)
(declare-fun x58 () Int)
(declare-fun x90 () Int)
(declare-fun x214 () Int)
(declare-fun x12 () Int)
(declare-fun x193 (Int) Int)
(declare-fun x153 () Bool)
(declare-fun x20 () Bool)
(declare-fun x343 () Int)
(declare-fun x122 () Int)
(declare-fun x288 () Int)
(declare-fun x160 () Int)
(declare-fun x19 () Bool)
(declare-fun x342 () Int)
(declare-fun x111 () Int)
(declare-fun x74 () Bool)
(declare-fun x169 () Int)
(declare-fun x309 () Int)
(declare-fun x361 () Bool)
(declare-fun x365 () Int)
(declare-fun x198 () Int)
(declare-fun x51 () Bool)
(declare-fun x79 () Bool)
(declare-fun x364 () Int)
(declare-fun x375 () Int)
(declare-fun x61 () Int)
(declare-fun x15 () Bool)
(declare-fun x234 () Bool)
(declare-fun x75 () Int)
(declare-fun x340 () Bool)
(declare-fun x5 () Int)
(declare-fun x83 () Int)
(declare-fun x218 () Int)
(declare-fun x155 () Int)
(declare-fun x303 () Bool)
(declare-fun x224 () Int)
(declare-fun x383 () Int)
(declare-fun x313 () Int)
(declare-fun x346 () Int)
(declare-fun x245 () Int)
(declare-fun x315 (Int Int) Int)
(declare-fun x292 () Int)
(declare-fun x6 () Bool)
(declare-fun x35 () Int)
(declare-fun x222 () Bool)
(declare-fun x158 () Int)
(declare-fun x296 () Int)
(declare-fun x215 () Bool)
(declare-fun x82 () Int)
(declare-fun x196 () Int)
(declare-fun x381 () Int)
(declare-fun x108 () Int)
(declare-fun x92 () Int)
(declare-fun x251 () Int)
(declare-fun x205 () Int)
(declare-fun x195 () Int)
(declare-fun x328 () Int)
(declare-fun x98 () Int)
(declare-fun x279 () Int)
(declare-fun x57 () Bool)
(declare-fun x164 () Bool)
(declare-fun x311 () Int)
(declare-fun x172 () Int)
(declare-fun x149 () Int)
(declare-fun x24 (Int) Int)
(declare-fun x371 () Int)
(declare-fun x70 () Int)
(declare-fun x103 () Int)
(declare-fun x133 () Int)
(declare-fun x65 () Int)
(declare-fun x136 () Int)
(define-fun x151 ((x372 Int)) Int (ite (and (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 x372) (<= 0 x372)) x372 (- x372 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(define-fun x359 ((x372 Int)) Int (ite (and (>= x372 (- 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (< x372 0)) (+ 115792089237316195423570985008687907853269984665640564039457584007913129639936 x372) x372))
(define-fun x276 ((x33 Int)) Bool (and (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 x33) (<= 0 x33)))
(define-fun x312 ((x33 Int)) Bool (and (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 x33) (<= 0 x33)))
(define-fun x272 ((x33 Int)) Bool (and (= (x132 x33 115792089237316195423570985008687907853269984665640564039457584007913129639935) x33) (= x33 (x132 115792089237316195423570985008687907853269984665640564039457584007913129639935 x33))))
(define-fun x38 ((x33 Int)) Bool (and (= 0 (x132 0 x33)) (= 0 (x132 x33 0))))
(define-fun x213 ((x33 Int)) Bool (= x33 (x132 x33 x33)))
(define-fun x297 ((x33 Int)) Bool (and (x213 x33) (x272 x33) (x38 x33)))
(define-fun x338 ((x33 Int)) Bool (= (x132 18446744073709551615 x33) (x132 18446744073709551615 (x132 18446744073709551615 x33))))
(define-fun x357 ((x33 Int)) Bool (=> (and (<= 0 x33) (> 18446744073709551616 x33)) (= (x132 18446744073709551615 x33) x33)))
(define-fun x286 ((x33 Int)) Bool (=> (= (x132 18446744073709551615 x33) x33) (and (> 18446744073709551616 x33) (>= x33 0))))
(define-fun x7 ((x33 Int)) Bool (=> (and (> 36893488147419103232 x33) (>= x33 18446744073709551616)) (= (- x33 18446744073709551616) (x132 18446744073709551615 x33))))
(define-fun x316 ((x33 Int) (x345 Int)) Bool (and (= x33 (+ (x132 18446744073709551615 x33) (* 18446744073709551616 x345))) (<= 0 x345)))
(define-fun x249 ((x33 Int) (x52 Int)) Bool (and (x338 x33) (x7 x33) (x286 x33) (x316 x33 x52) (x357 x33)))
(define-fun x331 ((x33 Int) (x345 Int)) Bool (= (x132 x33 x345) (x132 x345 x33)))
(define-fun x319 ((x33 Int) (x345 Int)) Bool (and (<= 0 (x132 x33 x345)) (=> (>= x33 0) (<= (x132 x33 x345) x33)) (=> (<= 0 x345) (<= (x132 x33 x345) x345))))
(define-fun x270 ((x33 Int) (x345 Int)) Bool (and (x319 x33 x345) (x331 x33 x345)))
(define-fun x259 ((x33 Int) (x52 Int)) Bool (and (x249 x33 x52) (x270 x33 18446744073709551615)))
(define-fun x60 ((x33 Int)) Bool (= (x132 1099511627775 x33) (x132 1099511627775 (x132 1099511627775 x33))))
(define-fun x294 ((x33 Int)) Bool (=> (and (>= x33 0) (> 1099511627776 x33)) (= (x132 1099511627775 x33) x33)))
(define-fun x1 ((x33 Int)) Bool (=> (= x33 (x132 1099511627775 x33)) (and (<= 0 x33) (< x33 1099511627776))))
(define-fun x144 ((x33 Int)) Bool (=> (and (<= 1099511627776 x33) (< x33 2199023255552)) (= (- x33 1099511627776) (x132 1099511627775 x33))))
(define-fun x178 ((x33 Int) (x345 Int)) Bool (and (= x33 (+ (x132 1099511627775 x33) (* 1099511627776 x345))) (<= 0 x345)))
(define-fun x220 ((x33 Int) (x52 Int)) Bool (and (x144 x33) (x294 x33) (x1 x33) (x60 x33) (x178 x33 x52)))
(define-fun x379 ((x33 Int) (x52 Int)) Bool (and (x220 x33 x52) (x270 x33 1099511627775)))
(define-fun x183 ((x33 Int)) Bool (= (x132 20282409603651670423947251286015 x33) (x132 20282409603651670423947251286015 (x132 20282409603651670423947251286015 x33))))
(define-fun x86 ((x33 Int)) Bool (=> (and (< x33 20282409603651670423947251286016) (<= 0 x33)) (= (x132 20282409603651670423947251286015 x33) x33)))
(define-fun x308 ((x33 Int)) Bool (=> (= (x132 20282409603651670423947251286015 x33) x33) (and (<= 0 x33) (< x33 20282409603651670423947251286016))))
(define-fun x266 ((x33 Int)) Bool (=> (and (<= 20282409603651670423947251286016 x33) (< x33 40564819207303340847894502572032)) (= (- x33 20282409603651670423947251286016) (x132 20282409603651670423947251286015 x33))))
(define-fun x181 ((x33 Int) (x345 Int)) Bool (and (= x33 (+ (* x345 20282409603651670423947251286016) (x132 20282409603651670423947251286015 x33))) (>= x345 0)))
(define-fun x93 ((x33 Int) (x52 Int)) Bool (and (x86 x33) (x308 x33) (x183 x33) (x181 x33 x52) (x266 x33)))
(define-fun x142 ((x33 Int) (x52 Int)) Bool (and (x93 x33 x52) (x270 x33 20282409603651670423947251286015)))
(define-fun x304 ((x33 Int)) Bool (= (x132 115792089237316195423570985008687907853269984665640564039439137263839420088320 (x132 115792089237316195423570985008687907853269984665640564039439137263839420088320 x33)) (x132 115792089237316195423570985008687907853269984665640564039439137263839420088320 x33)))
(define-fun x329 ((x33 Int)) Bool (=> (and (>= x33 0) (< x33 18446744073709551616)) (= 0 (x132 115792089237316195423570985008687907853269984665640564039439137263839420088320 x33))))
(define-fun x248 ((x33 Int) (x345 Int) (x29 Int) (x101 Int)) Bool (and (>= x29 0) (> 1 x101) (> 18446744073709551616 x345) (>= x345 0) (> 6277101735386680763835789423207666416102355444464034512896 x29) (>= x101 0) (= (x132 115792089237316195423570985008687907853269984665640564039439137263839420088320 x33) (* 18446744073709551616 x29)) (= (+ (* x29 18446744073709551616) x345 (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 x101)) x33)))
(define-fun x278 ((x33 Int) (x247 Int) (x244 Int) (x123 Int)) Bool (and (x329 x33) (x304 x33) (x248 x33 x247 x244 x123)))
(define-fun x81 ((x33 Int) (x247 Int) (x244 Int) (x123 Int)) Bool (and (x278 x33 x247 x244 x123) (x270 x33 115792089237316195423570985008687907853269984665640564039439137263839420088320)))
(define-fun x16 ((x33 Int)) Bool (= (x132 115792089237316195423570985008687907852929702298719625576012656144555070980095 (x132 115792089237316195423570985008687907852929702298719625576012656144555070980095 x33)) (x132 115792089237316195423570985008687907852929702298719625576012656144555070980095 x33)))
(define-fun x62 ((x33 Int)) Bool (=> (and (< x33 18446744073709551616) (>= x33 0)) (= (x132 115792089237316195423570985008687907852929702298719625576012656144555070980095 x33) x33)))
(define-fun x271 ((x33 Int) (x345 Int) (x29 Int) (x101 Int)) Bool (and (= (+ (* 18446744073709551616 x29) x345 (* x101 340282366920938463463374607431768211456)) x33) (= (+ x345 (* 340282366920938463463374607431768211456 x101)) (x132 115792089237316195423570985008687907852929702298719625576012656144555070980095 x33)) (> 18446744073709551616 x29) (<= 0 x345) (< x101 340282366920938463463374607431768211456) (<= 0 x101) (<= 0 x29) (< x345 18446744073709551616)))
(define-fun x238 ((x33 Int) (x247 Int) (x244 Int) (x123 Int)) Bool (and (x16 x33) (x271 x33 x247 x244 x123) (x62 x33)))
(define-fun x40 ((x33 Int) (x247 Int) (x244 Int) (x123 Int)) Bool (and (x270 x33 115792089237316195423570985008687907852929702298719625576012656144555070980095) (x238 x33 x247 x244 x123)))
(define-fun x68 ((x33 Int)) Bool (= (x132 340282366920938463444927863358058659840 (x132 340282366920938463444927863358058659840 x33)) (x132 340282366920938463444927863358058659840 x33)))
(define-fun x333 ((x33 Int)) Bool (=> (and (< x33 18446744073709551616) (<= 0 x33)) (= 0 (x132 340282366920938463444927863358058659840 x33))))
(define-fun x326 ((x33 Int) (x345 Int) (x29 Int) (x101 Int)) Bool (and (>= x101 0) (= (+ x345 (* 18446744073709551616 x29) (* x101 340282366920938463463374607431768211456)) x33) (= (* 18446744073709551616 x29) (x132 340282366920938463444927863358058659840 x33)) (< x29 18446744073709551616) (>= x29 0) (>= x345 0) (< x345 18446744073709551616) (> 340282366920938463463374607431768211456 x101)))
(define-fun x134 ((x33 Int) (x247 Int) (x244 Int) (x123 Int)) Bool (and (x68 x33) (x333 x33) (x326 x33 x247 x244 x123)))
(define-fun x240 ((x33 Int) (x247 Int) (x244 Int) (x123 Int)) Bool (and (x270 x33 340282366920938463444927863358058659840) (x134 x33 x247 x244 x123)))
(define-fun x135 ((x33 Int)) Bool (= (x132 115792089237316195417293883273301227089774477609353836086818603170880863338495 x33) (x132 115792089237316195417293883273301227089774477609353836086818603170880863338495 (x132 115792089237316195417293883273301227089774477609353836086818603170880863338495 x33))))
(define-fun x10 ((x33 Int)) Bool (=> (and (<= 0 x33) (> 340282366920938463463374607431768211456 x33)) (= (x132 115792089237316195417293883273301227089774477609353836086818603170880863338495 x33) x33)))
(define-fun x306 ((x33 Int) (x345 Int) (x29 Int) (x101 Int)) Bool (and (< x101 18446744073709551616) (<= 0 x29) (= (+ (* 6277101735386680763835789423207666416102355444464034512896 x101) x345) (x132 115792089237316195417293883273301227089774477609353836086818603170880863338495 x33)) (< x29 18446744073709551616) (>= x101 0) (<= 0 x345) (> 340282366920938463463374607431768211456 x345) (= x33 (+ x345 (* x101 6277101735386680763835789423207666416102355444464034512896) (* x29 340282366920938463463374607431768211456)))))
(define-fun x290 ((x33 Int) (x247 Int) (x244 Int) (x123 Int)) Bool (and (x10 x33) (x135 x33) (x306 x33 x247 x244 x123)))
(define-fun x150 ((x33 Int) (x247 Int) (x244 Int) (x123 Int)) Bool (and (x270 x33 115792089237316195417293883273301227089774477609353836086818603170880863338495) (x290 x33 x247 x244 x123)))
(define-fun x80 ((x33 Int)) Bool (= (x132 6277101735386680763495507056286727952638980837032266301440 x33) (x132 6277101735386680763495507056286727952638980837032266301440 (x132 6277101735386680763495507056286727952638980837032266301440 x33))))
(define-fun x88 ((x33 Int)) Bool (=> (and (>= x33 0) (< x33 340282366920938463463374607431768211456)) (= (x132 6277101735386680763495507056286727952638980837032266301440 x33) 0)))
(define-fun x325 ((x33 Int) (x345 Int) (x29 Int) (x101 Int)) Bool (and (= (* 340282366920938463463374607431768211456 x29) (x132 6277101735386680763495507056286727952638980837032266301440 x33)) (>= x345 0) (< x101 18446744073709551616) (< x29 18446744073709551616) (> 340282366920938463463374607431768211456 x345) (<= 0 x101) (= (+ x345 (* x29 340282366920938463463374607431768211456) (* 6277101735386680763835789423207666416102355444464034512896 x101)) x33) (<= 0 x29)))
(define-fun x116 ((x33 Int) (x247 Int) (x244 Int) (x123 Int)) Bool (and (x88 x33) (x80 x33) (x325 x33 x247 x244 x123)))
(define-fun x243 ((x33 Int) (x247 Int) (x244 Int) (x123 Int)) Bool (and (x116 x33 x247 x244 x123) (x270 x33 6277101735386680763495507056286727952638980837032266301440)))
(define-fun x377 ((x33 Int)) Bool (= (x132 6277101735386680763835789423207666416102355444464034512895 (x132 6277101735386680763835789423207666416102355444464034512895 x33)) (x132 6277101735386680763835789423207666416102355444464034512895 x33)))
(define-fun x72 ((x33 Int)) Bool (=> (and (>= x33 0) (< x33 6277101735386680763835789423207666416102355444464034512896)) (= x33 (x132 6277101735386680763835789423207666416102355444464034512895 x33))))
(define-fun x237 ((x33 Int)) Bool (=> (= (x132 6277101735386680763835789423207666416102355444464034512895 x33) x33) (and (< x33 6277101735386680763835789423207666416102355444464034512896) (<= 0 x33))))
(define-fun x26 ((x33 Int)) Bool (=> (and (< x33 12554203470773361527671578846415332832204710888928069025792) (<= 6277101735386680763835789423207666416102355444464034512896 x33)) (= (- x33 6277101735386680763835789423207666416102355444464034512896) (x132 6277101735386680763835789423207666416102355444464034512895 x33))))
(define-fun x194 ((x33 Int) (x345 Int)) Bool (and (= x33 (+ (x132 6277101735386680763835789423207666416102355444464034512895 x33) (* x345 6277101735386680763835789423207666416102355444464034512896))) (>= x345 0)))
(define-fun x216 ((x33 Int) (x52 Int)) Bool (and (x26 x33) (x377 x33) (x237 x33) (x194 x33 x52) (x72 x33)))
(define-fun x67 ((x33 Int) (x52 Int)) Bool (and (x270 x33 6277101735386680763835789423207666416102355444464034512895) (x216 x33 x52)))
(define-fun x162 ((x33 Int)) Bool (= (x132 115339776388733340411336991150008259455513788125666651270144861215348056129535 x33) (x132 115339776388733340411336991150008259455513788125666651270144861215348056129535 (x132 115339776388733340411336991150008259455513788125666651270144861215348056129535 x33))))
(define-fun x8 ((x33 Int)) Bool (=> (and (>= x33 0) (> 411376139330301510538742295639337626245683966408394965837152256 x33)) (= (x132 115339776388733340411336991150008259455513788125666651270144861215348056129535 x33) x33)))
(define-fun x43 ((x33 Int) (x345 Int) (x29 Int) (x101 Int)) Bool (and (= (+ x345 (* 452312848583266388373324160190187140051835877600158453279131187530910662656 x101)) (x132 115339776388733340411336991150008259455513788125666651270144861215348056129535 x33)) (= (+ x345 (* 452312848583266388373324160190187140051835877600158453279131187530910662656 x101) (* 411376139330301510538742295639337626245683966408394965837152256 x29)) x33) (<= 0 x29) (<= 0 x345) (> 411376139330301510538742295639337626245683966408394965837152256 x345) (>= x101 0) (< x101 256) (> 1099511627776 x29)))
(define-fun x373 ((x33 Int) (x247 Int) (x244 Int) (x123 Int)) Bool (and (x162 x33) (x8 x33) (x43 x33 x247 x244 x123)))
(define-fun x353 ((x33 Int) (x247 Int) (x244 Int) (x123 Int)) Bool (and (x270 x33 115339776388733340411336991150008259455513788125666651270144861215348056129535) (x373 x33 x247 x244 x123)))
(define-fun x323 ((x33 Int)) Bool (= (x132 452312848582855012233993858679648397756196539973912769312722792565073510400 x33) (x132 452312848582855012233993858679648397756196539973912769312722792565073510400 (x132 452312848582855012233993858679648397756196539973912769312722792565073510400 x33))))
(define-fun x41 ((x33 Int)) Bool (=> (and (>= x33 0) (> 411376139330301510538742295639337626245683966408394965837152256 x33)) (= 0 (x132 452312848582855012233993858679648397756196539973912769312722792565073510400 x33))))
(define-fun x352 ((x33 Int) (x345 Int) (x29 Int) (x101 Int)) Bool (and (<= 0 x29) (= x33 (+ (* 452312848583266388373324160190187140051835877600158453279131187530910662656 x101) x345 (* x29 411376139330301510538742295639337626245683966408394965837152256))) (= (x132 452312848582855012233993858679648397756196539973912769312722792565073510400 x33) (* x29 411376139330301510538742295639337626245683966408394965837152256)) (< x101 256) (>= x345 0) (<= 0 x101) (> 411376139330301510538742295639337626245683966408394965837152256 x345) (> 1099511627776 x29)))
(define-fun x275 ((x33 Int) (x247 Int) (x244 Int) (x123 Int)) Bool (and (x323 x33) (x41 x33) (x352 x33 x247 x244 x123)))
(define-fun x267 ((x33 Int) (x247 Int) (x244 Int) (x123 Int)) Bool (and (x275 x33 x247 x244 x123) (x270 x33 452312848582855012233993858679648397756196539973912769312722792565073510400)))
(define-fun x336 ((x208 Int)) Int (ite (= 0 x208) x126 (x24 x208)))
(define-fun x255 ((x208 Int)) Int (ite (= 0 x208) x209 (x154 x208)))
(define-fun x362 ((x208 Int)) Int (ite (= 0 x208) x202 (x124 x208)))
(define-fun x253 ((x208 Int)) Int (ite (and x340 x25 x199) (x124 x208) (x362 x208)))
(define-fun x91 ((x208 Int)) Int (ite (= 1 x208) x296 (x253 x208)))
(define-fun x257 ((x208 Int)) Int (ite (and x340 (not x199)) (x24 x208) (x91 x208)))
(assert (x297 x280))
(assert (x297 x110))
(assert (x297 x277))
(assert (x312 x291))
(assert (x312 x184))
(assert (x142 x343 x360))
(assert (x259 x76 x182))
(assert (x312 x317))
(assert (x312 x380))
(assert (x312 x125))
(assert (x312 x344))
(assert (x142 x381 x365))
(assert (x297 x141))
(assert (x297 x149))
(assert (x312 x12))
(assert (x312 x126))
(assert (x259 x277 x61))
(assert (x312 x105))
(assert (x259 x96 x35))
(assert (x312 x136))
(assert (x142 x235 x155))
(assert (x312 x293))
(assert (= (=> (and (not (= 1752364190 x354)) (= x172 (x24 0)) (not (= x354 1736444767)) (= x324 x112) (< 0 x369) (not (> 1507858365 x354)) (not (= 1507858365 x354)) (not (> 1168994686 x354)) (= x354 2055092157) (= (div x172 18446744073709551616) x285) (> 2068668150 x354) (= x369 (x193 274184521717934524641157099916833587211)) (not (< x354 950698303)) (= x112 (x132 18446744073709551615 x285))) (=> (and (not (< x18 3889878717)) (= x136 (x24 1)) (>= 1461501637330902918203684832716283019655932542975 x125) (<= 0 x168) (= (x193 274184521717934524641157099916833587211) x167) (= x204 x264) (<= x264 1461501637330902918203684832716283019655932542975) (= (> x49 0) x199) (not (< x258 x111)) (or (and (= x107 (x132 20282409603651670423947251286015 x110)) (= x44 (x336 0)) (= x317 x119) (= x180 (x132 115339776388733340411336991150008259455513788125666651270144861215348056129535 x114)) (= x348 (* x158 x113)) (= x351 x288) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (* x251 x49)) (= (x24 1) x17) (= x31 x277) (= x197 (x132 20282409603651670423947251286015 x235)) (= x219 (x24 0)) (= x283 (x336 0)) (= x332 (x124 1)) (= x185 (x336 0)) (= x383 (div x17 20282409603651670423947251286016)) (= x179 (x132 18446744073709551615 x277)) (= (+ x23 x87) x186) (= (x132 18446744073709551615 x260) x23) (= (x132 18446744073709551615 x293) x251) (= (x132 18446744073709551615 x149) x145) (= x280 (x24 0)) (= x156 (* x347 x11)) (= x343 (x24 1)) (= x140 (< x37 x291)) (= x173 x335) (or (and (< (* x288 x13) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (< (+ x77 x309) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= (+ x77 x309) x13) (< (* x192 x291) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (not x140) (= (* x291 x192) x196) (= x99 x256) (= x214 x256) (= x99 (* x13 x288)) (= x77 x196)) (and (= x195 (* x254 x346)) (= (+ x84 x349) x221) (= x84 x195) (= (+ x5 x309) x349) (= x214 x90) (< (* x288 x221) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (not (< x291 x37)) (< (* x37 x192) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= (* x221 x288) x341) (= (x359 (- x291 x37)) x346) x140 (= x161 x5) (< (+ x349 x84) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (< (* x346 x254) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (< (+ x309 x5) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= (* x192 x37) x161) (= x90 x341))) (or (and (= x106 (* x37 x192)) (< (* x254 x239) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x42 x106) (= x95 (+ x212 x233)) (= x293 x95) (= (x359 (- x265 x37)) x239) x118 (= x212 x207) (= (+ x309 x42) x233) (< (+ x233 x212) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (not (< x265 x37)) (= (* x254 x239) x207) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (* x192 x37)) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x42 x309))) (and (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x309 x174)) (= (+ x309 x174) x188) (= x174 x109) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (* x265 x192)) (= x188 x293) (= x109 (* x192 x265)) (not x118))) (= (x132 18446744073709551615 x76) x113) (< (+ x310 x179) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= (x132 20282409603651670423947251286015 x226) x158) (= (* x358 x378) x245) (= (x132 18446744073709551615 x252) x139) (= (x132 18446744073709551615 x219) x205) (or x25 (and (= x202 (x151 (+ x229 x330))) (= (x132 18446744073709551615 x59) x231) (= x129 (x132 20282409603651670423947251286015 x105)) (= (x132 18446744073709551615 x50) x206) (= x39 (x124 0)) (= x170 (x124 1)) (< (+ x231 x206) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x330 (x132 6277101735386680763835789423207666416102355444464034512895 x64)) (= x59 (div x39 6277101735386680763835789423207666416102355444464034512896)) (not x25) (= (mod (* 6277101735386680763835789423207666416102355444464034512896 x300) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x229) (= (div x170 20282409603651670423947251286016) x105) (= (+ x206 x231) x300) (>= 18446744073709551615 x300) (= (x124 0) x64) (< 0 x129) (= (div x49 x129) x50))) (= (x132 20282409603651670423947251286015 x383) x358) (= x269 (x359 (- 1 x337))) (< (* x378 x358) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (* x205 x66)) (= x25 (> x14 x197)) (= (x132 18446744073709551615 x363) x11) (= (div x185 18446744073709551616) x149) (<= x210 18446744073709551615) (= x228 (* x139 x173)) (= (div x311 18446744073709551616) x82) (= x152 x348) (= x289 (x24 0)) (= (* x66 x205) x2) (= (* x251 x49) x119) (= x368 (x132 115792089237316195423570985008687907853269984665640564039439137263839420088320 x280)) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (* x11 x347)) (= x252 (x24 0)) (= (div x289 18446744073709551616) x76) (= (x151 (+ x368 x186)) x126) (= (x132 18446744073709551615 x282) x87) (= x210 (+ x179 x310)) (= x118 (< x37 x265)) (= x282 (x24 0)) (= x2 x146) (= x69 (x132 20282409603651670423947251286015 x375)) (= x311 (x24 0)) (= x85 (x132 115792089237316195423570985008687907852929702298719625576012656144555070980095 x44)) (= (mod (* x258 411376139330301510538742295639337626245683966408394965837152256) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x46) (= (div x283 18446744073709551616) x141) (= x265 (ite (= x69 0) 0 (div x107 x69))) (= x45 (x151 (+ x370 x85))) (= (x132 20282409603651670423947251286015 x217) x347) (= x228 x260) (or x236 (and (< (+ x246 x224) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (not x236) (= x250 (+ x246 x224)) (= (x132 20282409603651670423947251286015 x281) x34) (= (x132 18446744073709551615 x184) x246) (= (div x218 340282366920938463463374607431768211456) x96) (= (x154 1) x281) (= (x154 0) x189) (= x218 (x154 0)) (= (x132 115792089237316195417293883273301227089774477609353836086818603170880863338495 x189) x65) (= x307 (mod (* x250 340282366920938463463374607431768211456) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (<= x250 18446744073709551615) (= x224 (x132 18446744073709551615 x96)) (< 0 x34) (= (x151 (+ x65 x307)) x209) (= x184 (div x49 x34)))) (= x114 (x253 1)) (< (+ x87 x23) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x363 (x24 0)) (= x310 (x132 18446744073709551615 x141)) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (* x158 x113)) (< (* x173 x139) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x370 (mod (* 18446744073709551616 x210) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= x201 (x24 1)) (= x235 (div x332 20282409603651670423947251286016)) (= x66 (x132 20282409603651670423947251286015 x343)) (= (div x201 20282409603651670423947251286016) x226) (= x351 (* x269 x291)) (= x217 (x24 1)) (< (* x145 x317) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x199 (= x110 x245) (= (< x334 x14) x236) (= x375 x156) (< (* x269 x291) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= (* x317 x145) x31) (= x381 (x154 1)) (= (x132 18446744073709551615 x82) x378) (= x380 (x132 20282409603651670423947251286015 x152)) (>= 18446744073709551615 x186) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (* x49 x364)) (not (> x337 1)) (= (x132 20282409603651670423947251286015 x381) x334) (= x335 (* x364 x49)) (= (x132 20282409603651670423947251286015 x146) x133) (= x291 (ite (= x133 0) 0 (div x380 x133))) (= (x132 18446744073709551615 x214) x364) (= (x151 (+ x46 x180)) x296)) (not x199)) (= x198 x258) (<= 0 x264) (= x324 x287) (= 4033150093 x18) (not (= x18 3889878717)) (<= x168 1461501637330902918203684832716283019655932542975) (= 0 x63) (= x301 (div x136 411376139330301510538742295639337626245683966408394965837152256)) (= x111 (x132 1099511627775 x301)) (not (> 3253611544 x18)) (< 0 x167) (= (x132 1099511627775 x89) x49) (<= 0 x125) (= x89 (x359 (- x258 x111))) (> 1099511627776 x258) (not (< x18 2068668150)) (not (> 3638949393 x18))) x48)) x164))
(assert (= (=> (and (= x203 (<= x313 x98)) (= x313 x165) (= x371 x120) (= x137 x98)) (and x203 (=> (and (= (>= x273 x4) x274) (= x120 x273) (= x4 x287)) x274))) x15))
(assert (x312 x218))
(assert (x297 x189))
(assert (x312 x288))
(assert (= x128 true))
(assert (x312 x58))
(assert (x297 115792089237316195423570985008687907853269984665640564039439137263839420088320))
(assert (x312 x167))
(assert (x312 x95))
(assert (x312 x260))
(assert (= x215 x340))
(assert (x312 x202))
(assert (x312 x174))
(assert (x297 x268))
(assert (x312 x371))
(assert (x297 x82))
(assert (x312 x354))
(assert (x312 x212))
(assert (x312 x111))
(assert (x312 x90))
(assert (x243 x189 x9 x102 x261))
(assert (x297 x76))
(assert (x312 x258))
(assert (= (=> (and (>= x166 0) (>= 255 x53) (= x30 (x163 274184521717934524641157099916833587211)) (>= x356 0) (<= 0 x191) (= x157 (x163 274184521717934524641157099916833587221)) (= x166 (x163 274184521717934524641157099916833587223)) (>= x190 0) (<= 0 x366) (>= x30 0) (>= 1208925819614629174706175 x190) x225 (>= x298 0) (<= x356 1461501637330902918203684832716283019655932542975) (<= 0 x284) (= (< 0 (x193 274184521717934524641157099916833587223)) x21) (<= x366 1208925819614629174706175) x6 (>= 1208925819614629174706175 x191) (= (> (x193 274184521717934524641157099916833587221) 0) x6) x21 (>= x53 0) (>= x157 0) (<= x284 1208925819614629174706175) (<= x298 255) (= (> (x193 274184521717934524641157099916833587211) 0) x225) (<= 0 x125) (<= x125 1461501637330902918203684832716283019655932542975)) x74) x384))
(assert (x312 x366))
(assert (= x230 x94))
(assert (x142 x110 x100))
(assert (x297 18446744073709551615))
(assert (x312 x120))
(assert (x312 x59))
(assert (x259 x285 x108))
(assert (x312 x39))
(assert (x312 x300))
(assert (x312 x201))
(assert (x312 x269))
(assert (x297 x89))
(assert (x312 x349))
(assert (x312 x149))
(assert (x142 x152 x263))
(assert (x312 x356))
(assert (x297 x96))
(assert (x312 x189))
(assert (x312 x98))
(assert (x81 x280 x70 x169 x73))
(assert (x312 x296))
(assert (x312 x264))
(assert (x297 x219))
(assert (x312 x166))
(assert (x312 x188))
(assert (x259 x59 x22))
(assert (x142 x281 x328))
(assert (x312 x66))
(assert (x312 x254))
(assert (x312 x262))
(assert (x297 x301))
(assert (x297 115792089237316195423570985008687907852929702298719625576012656144555070980095))
(assert (x312 x343))
(assert (x297 x293))
(assert (x297 452312848582855012233993858679648397756196539973912769312722792565073510400))
(assert (x312 x239))
(assert (x312 x289))
(assert (x312 x110))
(assert (x297 x146))
(assert (x259 x219 x200))
(assert (= (=> (and (not (< x305 950698303)) (= x242 (x193 274184521717934524641157099916833587211)) (= (x257 0) x314) (> 2068668150 x305) (not (= 1507858365 x305)) (not (< x305 1507858365)) (not (= 1736444767 x305)) (= 2055092157 x305) (< 0 x242) (= (div x314 18446744073709551616) x268) (= x148 x371) (= (x132 18446744073709551615 x268) x148) (not (> 1168994686 x305)) (not (= 1752364190 x305))) x15) x222))
(assert (x312 x235))
(assert (x312 x28))
(assert (x312 x180))
(assert (not x384))
(assert (x312 x165))
(assert (x312 x226))
(assert (x312 x251))
(assert (x297 x252))
(assert (x297 20282409603651670423947251286015))
(assert (x259 x149 x374))
(assert (x259 x97 x350))
(assert (x312 x69))
(assert (x142 x217 x232))
(assert (x312 x145))
(assert (x297 x226))
(assert (x312 x324))
(assert (x312 x42))
(assert (x312 x146))
(assert (x259 x58 x104))
(assert (x312 x141))
(assert (x312 x14))
(assert (x312 x383))
(assert (x312 x309))
(assert (x312 x53))
(assert (x297 6277101735386680763495507056286727952638980837032266301440))
(assert (x40 x44 x367 x103 x342))
(assert (x312 x368))
(assert (x312 x287))
(assert (x312 x170))
(assert (x312 x221))
(assert (= (x124 0) (ite (and x199 x236 x340) (x154 0) (x255 0))))
(assert (x67 x64 x322))
(assert (x312 x18))
(assert (x312 x246))
(assert (x312 x224))
(assert (x297 x97))
(assert (x312 x369))
(assert (x312 x49))
(assert (x312 x219))
(assert (x297 115339776388733340411336991150008259455513788125666651270144861215348056129535))
(assert (x259 x293 x176))
(assert (x312 x97))
(assert (x142 x146 x92))
(assert (x312 x198))
(assert (x297 x282))
(assert (x297 x184))
(assert (x312 x242))
(assert (x312 x82))
(assert (x312 x332))
(assert (x312 x129))
(assert (x259 x268 x241))
(assert (x312 x298))
(assert (x312 x37))
(assert (x312 x30))
(assert (x312 x179))
(assert (x312 x96))
(assert (x312 x113))
(assert (x312 x5))
(assert (x312 x45))
(assert (x297 x363))
(assert (x297 x58))
(assert (x312 x364))
(assert (x312 x217))
(assert (x312 x50))
(assert (x312 x173))
(assert (x312 x375))
(assert (x312 x311))
(assert (x297 340282366920938463444927863358058659840))
(assert (x312 x231))
(assert (x312 x205))
(assert (x240 x44 x143 x320 x327))
(assert (x312 x305))
(assert (x312 x229))
(assert (= (x336 1) (x154 1)))
(assert (x312 x186))
(assert (x312 x347))
(assert (x312 x346))
(assert (x379 x301 x115))
(assert (x312 x280))
(assert (x312 x337))
(assert (x312 x192))
(assert (x142 x383 x54))
(assert (x150 x189 x127 x78 x295))
(assert (x312 x172))
(assert (x259 x252 x223))
(assert (x312 x160))
(assert (x259 x214 x177))
(assert (x312 x252))
(assert (= (x124 1) (ite (and x236 x340 x199) (x154 1) (x255 1))))
(assert (x259 x363 x147))
(assert (x297 x383))
(assert (x297 x105))
(assert (x312 x197))
(assert (x297 x214))
(assert (x312 x122))
(assert (x312 x268))
(assert (x312 x4))
(assert (x297 x44))
(assert (x297 x343))
(assert (x312 x233))
(assert (x312 x76))
(assert (x312 x285))
(assert (x312 x77))
(assert (x297 x375))
(assert (x312 x339))
(assert (x312 x23))
(assert (x312 x157))
(assert (x312 x11))
(assert (x297 6277101735386680763835789423207666416102355444464034512895))
(assert (x312 x139))
(assert (= (=> (and (= x122 (x132 18446744073709551615 x97)) (= x12 3075265556) (= (x193 274184521717934524641157099916833587211) x160) (not (= x12 2879910238)) (not (< x12 2068668150)) (= x122 x344) (not (= x12 2834295333)) (not (= x12 2867386960)) (not (= x12 2799315671)) (= (x257 0) x97) (not (< x12 2661915226)) (> x160 0) (not (< x12 2799315671)) (< x12 3253611544)) (=> (= x344 x137) x222)) x48))
(assert (x312 x210))
(assert (x312 x191))
(assert (x312 x265))
(assert (x312 x204))
(assert (x312 x330))
(assert (x312 x314))
(assert (x259 x184 x121))
(assert (x312 x214))
(assert (x312 x112))
(assert (x312 x185))
(assert (x312 x137))
(assert (x297 x285))
(assert (x312 x114))
(assert (x297 x260))
(assert (x312 x301))
(assert (x142 x375 x138))
(assert (= (x154 0) x45))
(assert (x312 x13))
(assert (x297 x59))
(assert (x312 x84))
(assert (x267 x114 x292 x131 x279))
(assert (x142 x105 x27))
(assert (x312 x310))
(assert (x259 x82 x382))
(assert (x259 x50 x117))
(assert (x297 x235))
(assert (x312 x46))
(assert (x259 x282 x71))
(assert (x312 x250))
(assert (x297 x281))
(assert (x312 x256))
(assert (x312 x334))
(assert (x312 x87))
(assert (x312 x209))
(assert (x312 x284))
(assert (x312 x363))
(assert (x312 x378))
(assert (= x128 x215))
(assert (x312 x63))
(assert (x312 x370))
(assert (x312 x133))
(assert (x297 x50))
(assert (x312 x152))
(assert (x312 x277))
(assert (= x74 (=> (and (= x58 (x24 0)) (= x339 x262) (not (< x28 2799315671)) (not (< x28 2661915226)) (not (= x28 2867386960)) (not (= 2799315671 x28)) (not (= x28 2879910238)) (> 3253611544 x28) (> x318 0) (not (< x28 2068668150)) (not (= 2834295333 x28)) (= (x193 274184521717934524641157099916833587211) x318) (= (x132 18446744073709551615 x58) x339) (= x28 3075265556)) (=> (= x262 x165) x164))))
(assert (x312 x358))
(assert (x312 x282))
(assert (x312 x64))
(assert (x297 x152))
(assert (x312 x107))
(assert (x142 x226 x187))
(assert (x259 x260 x299))
(assert (x312 x34))
(assert (x379 x89 x211))
(assert (x312 x17))
(assert (x312 x190))
(assert (x312 x44))
(assert (= x230 x340))
(assert (x312 x148))
(assert (x297 1099511627775))
(assert (x259 x141 x75))
(assert (x297 115792089237316195417293883273301227089774477609353836086818603170880863338495))
(assert (x312 x85))
(assert (x312 x281))
(assert (x312 x381))
(assert (x353 x114 x83 x55 x302))
(assert (x312 x318))
(assert (x297 x217))
(assert (x312 x89))
(assert (x297 x64))
(assert (x297 x114))
(assert (= x94 x56))
(assert (x312 x313))
(assert (x312 x283))
(assert (x312 x273))
(assert (x312 x158))
(assert (x312 x65))
(assert (x312 x307))
(assert (x312 x168))
(assert (x297 x381))
(assert (x312 x206))
(check-sat)
