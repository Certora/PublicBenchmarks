(set-option :print-success false)
(set-option :produce-models true)
(set-logic QF_UFNIA)
(declare-fun x340 () Int)
(declare-fun x395 () Int)
(declare-fun x214 () Int)
(declare-fun x191 () Int)
(declare-fun x109 () Int)
(declare-fun x267 () Int)
(declare-fun x240 () Bool)
(declare-fun x66 () Int)
(declare-fun x398 () Int)
(declare-fun x288 () Int)
(declare-fun x273 () Bool)
(declare-fun x123 () Int)
(declare-fun x313 () Int)
(declare-fun x195 () Bool)
(declare-fun x128 () Int)
(declare-fun x77 () Int)
(declare-fun x359 () Int)
(declare-fun x373 () Bool)
(declare-fun x84 () Int)
(declare-fun x156 () Int)
(declare-fun x280 () Int)
(declare-fun x389 () Int)
(declare-fun x285 () Int)
(declare-fun x30 () Int)
(declare-fun x111 (Int) Int)
(declare-fun x134 () Bool)
(declare-fun x321 () Int)
(declare-fun x405 () Bool)
(declare-fun x341 () Int)
(declare-fun x320 () Int)
(declare-fun x146 () Int)
(declare-fun x230 () Int)
(declare-fun x13 () Int)
(declare-fun x386 () Int)
(declare-fun x332 () Bool)
(declare-fun x27 () Int)
(declare-fun x251 () Int)
(declare-fun x346 () Int)
(declare-fun x21 () Int)
(declare-fun x5 () Int)
(declare-fun x181 () Bool)
(declare-fun x145 () Int)
(declare-fun x141 () Int)
(declare-fun x99 () Int)
(declare-fun x301 () Int)
(declare-fun x75 () Int)
(declare-fun x94 () Int)
(declare-fun x334 () Bool)
(declare-fun x174 () Int)
(declare-fun x316 () Int)
(declare-fun x318 () Bool)
(declare-fun x54 () Int)
(declare-fun x130 () Int)
(declare-fun x375 () Int)
(declare-fun x387 () Bool)
(declare-fun x261 () Int)
(declare-fun x205 () Int)
(declare-fun x36 () Int)
(declare-fun x23 () Int)
(declare-fun x274 () Int)
(declare-fun x185 () Bool)
(declare-fun x281 () Int)
(declare-fun x16 () Int)
(declare-fun x95 () Int)
(declare-fun x180 () Bool)
(declare-fun x204 () Int)
(declare-fun x40 () Int)
(declare-fun x286 () Int)
(declare-fun x272 (Int Int) Int)
(declare-fun x7 () Bool)
(declare-fun x374 () Bool)
(declare-fun x34 () Int)
(declare-fun x292 () Int)
(declare-fun x379 () Bool)
(declare-fun x239 () Int)
(declare-fun x310 () Int)
(declare-fun x192 () Int)
(declare-fun x170 () Bool)
(declare-fun x67 () Bool)
(declare-fun x98 () Int)
(declare-fun x275 () Int)
(declare-fun x228 () Bool)
(declare-fun x147 () Int)
(declare-fun x70 () Bool)
(declare-fun x238 () Int)
(declare-fun x110 () Int)
(declare-fun x237 () Int)
(declare-fun x367 () Int)
(declare-fun x368 () Int)
(declare-fun x262 () Int)
(declare-fun x393 () Int)
(declare-fun x163 () Bool)
(declare-fun x29 () Int)
(declare-fun x50 () Int)
(declare-fun x293 () Int)
(declare-fun x45 () Int)
(declare-fun x396 () Int)
(declare-fun x380 () Int)
(declare-fun x355 () Int)
(declare-fun x352 () Int)
(declare-fun x193 () Int)
(declare-fun x372 () Int)
(declare-fun x329 () Int)
(declare-fun x370 () Int)
(declare-fun x303 () Bool)
(declare-fun x384 () Int)
(declare-fun x227 () Int)
(declare-fun x158 () Bool)
(declare-fun x348 () Int)
(declare-fun x61 () Int)
(declare-fun x333 () Int)
(declare-fun x388 () Int)
(declare-fun x122 () Int)
(declare-fun x249 () Int)
(declare-fun x48 () Int)
(declare-fun x403 () Int)
(declare-fun x151 () Int)
(declare-fun x278 () Bool)
(declare-fun x269 () Int)
(declare-fun x83 () Int)
(declare-fun x241 () Int)
(declare-fun x283 () Int)
(declare-fun x207 () Bool)
(declare-fun x188 () Int)
(declare-fun x266 () Int)
(declare-fun x87 () Int)
(declare-fun x119 () Int)
(declare-fun x31 () Int)
(declare-fun x167 () Int)
(declare-fun x44 () Int)
(declare-fun x105 () Int)
(declare-fun x138 () Bool)
(declare-fun x324 () Bool)
(declare-fun x331 () Int)
(declare-fun x291 () Int)
(declare-fun x297 () Int)
(declare-fun x100 () Int)
(declare-fun x304 () Int)
(declare-fun x243 () Bool)
(declare-fun x358 () Int)
(declare-fun x229 () Int)
(declare-fun x203 () Int)
(declare-fun x312 () Int)
(declare-fun x72 () Int)
(declare-fun x406 () Int)
(declare-fun x325 () Int)
(declare-fun x366 () Int)
(declare-fun x343 (Int) Int)
(declare-fun x186 () Int)
(declare-fun x132 () Int)
(declare-fun x394 () Int)
(declare-fun x121 () Int)
(declare-fun x143 () Bool)
(declare-fun x124 () Bool)
(declare-fun x255 () Int)
(declare-fun x55 () Int)
(declare-fun x295 () Int)
(declare-fun x15 (Int) Int)
(declare-fun x289 () Int)
(declare-fun x80 () Int)
(declare-fun x49 () Int)
(declare-fun x187 () Int)
(declare-fun x142 () Int)
(declare-fun x178 () Int)
(declare-fun x294 () Int)
(declare-fun x120 () Int)
(declare-fun x197 () Bool)
(declare-fun x234 () Bool)
(declare-fun x225 () Int)
(declare-fun x63 () Int)
(declare-fun x259 () Bool)
(declare-fun x256 () Int)
(declare-fun x1 () Int)
(declare-fun x112 () Int)
(declare-fun x223 () Bool)
(declare-fun x162 () Bool)
(declare-fun x3 () Int)
(declare-fun x177 () Bool)
(declare-fun x157 () Int)
(declare-fun x300 () Int)
(declare-fun x347 () Int)
(declare-fun x57 () Int)
(declare-fun x136 () Int)
(declare-fun x265 () Int)
(declare-fun x10 (Int) Int)
(declare-fun x216 () Int)
(declare-fun x400 () Bool)
(declare-fun x2 () Int)
(declare-fun x164 () Int)
(declare-fun x245 () Int)
(declare-fun x391 () Int)
(declare-fun x159 () Int)
(declare-fun x338 () Int)
(declare-fun x248 (Int) Int)
(declare-fun x89 () Int)
(declare-fun x264 () Int)
(declare-fun x383 () Int)
(declare-fun x176 () Int)
(declare-fun x326 () Int)
(declare-fun x306 () Int)
(declare-fun x401 () Int)
(declare-fun x277 () Int)
(declare-fun x381 () Int)
(declare-fun x226 () Int)
(declare-fun x183 () Int)
(declare-fun x257 () Int)
(declare-fun x46 () Int)
(declare-fun x190 () Int)
(declare-fun x33 () Int)
(declare-fun x307 () Int)
(declare-fun x356 () Int)
(declare-fun x155 () Int)
(declare-fun x32 () Int)
(declare-fun x150 () Int)
(declare-fun x76 () Int)
(declare-fun x308 () Int)
(declare-fun x317 () Int)
(declare-fun x253 () Int)
(declare-fun x117 () Bool)
(declare-fun x135 () Int)
(declare-fun x12 () Int)
(declare-fun x52 () Int)
(declare-fun x125 () Int)
(declare-fun x354 () Int)
(declare-fun x64 () Int)
(declare-fun x118 () Int)
(declare-fun x254 () Int)
(declare-fun x328 () Int)
(declare-fun x199 () Int)
(declare-fun x127 () Int)
(declare-fun x337 () Int)
(declare-fun x361 () Int)
(declare-fun x35 () Int)
(declare-fun x90 () Int)
(declare-fun x41 () Int)
(declare-fun x179 () Int)
(declare-fun x86 () Int)
(declare-fun x385 () Int)
(declare-fun x56 () Int)
(declare-fun x88 () Bool)
(declare-fun x168 () Bool)
(declare-fun x6 () Int)
(declare-fun x160 () Int)
(declare-fun x206 () Int)
(declare-fun x408 () Int)
(declare-fun x339 () Int)
(declare-fun x85 () Int)
(declare-fun x270 (Int Int) Int)
(declare-fun x244 () Int)
(declare-fun x232 () Int)
(declare-fun x107 () Int)
(declare-fun x131 () Int)
(declare-fun x284 () Int)
(declare-fun x113 () Int)
(declare-fun x250 () Int)
(declare-fun x299 () Bool)
(declare-fun x20 () Int)
(declare-fun x175 () Int)
(declare-fun x182 () Int)
(declare-fun x276 () Bool)
(declare-fun x315 () Int)
(declare-fun x22 () Int)
(declare-fun x39 () Int)
(declare-fun x17 () Int)
(declare-fun x404 () Int)
(declare-fun x82 () Int)
(declare-fun x353 () Int)
(declare-fun x129 () Bool)
(declare-fun x18 () Int)
(declare-fun x149 () Int)
(declare-fun x287 () Int)
(declare-fun x314 () Int)
(declare-fun x53 () Bool)
(declare-fun x233 () Int)
(declare-fun x296 () Int)
(declare-fun x201 () Int)
(declare-fun x213 () Int)
(declare-fun x93 () Int)
(declare-fun x73 () Int)
(declare-fun x92 () Bool)
(declare-fun x351 () Int)
(declare-fun x392 () Int)
(declare-fun x11 () Int)
(declare-fun x402 (Int) Int)
(declare-fun x350 () Int)
(declare-fun x140 () Int)
(declare-fun x319 () Int)
(declare-fun x377 () Int)
(declare-fun x196 () Int)
(declare-fun x137 () Int)
(declare-fun x345 () Bool)
(declare-fun x210 () Bool)
(declare-fun x221 () Int)
(declare-fun x298 () Int)
(declare-fun x148 () Int)
(declare-fun x60 () Int)
(declare-fun x37 () Int)
(declare-fun x279 () Int)
(declare-fun x209 () Bool)
(declare-fun x218 () Int)
(declare-fun x91 () Int)
(declare-fun x102 () Int)
(declare-fun x360 () Int)
(declare-fun x242 () Int)
(declare-fun x43 () Int)
(declare-fun x390 () Int)
(declare-fun x171 () Int)
(declare-fun x364 () Int)
(declare-fun x139 () Int)
(declare-fun x222 () Int)
(declare-fun x74 () Int)
(declare-fun x322 () Int)
(declare-fun x47 () Int)
(declare-fun x4 () Int)
(declare-fun x38 () Bool)
(declare-fun x369 () Bool)
(declare-fun x311 () Int)
(declare-fun x165 () Bool)
(define-fun x14 ((x305 Int)) Int (ite (and (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 x305) (>= x305 0)) x305 (- x305 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(define-fun x271 ((x305 Int)) Int (ite (and (< x305 0) (<= (- 115792089237316195423570985008687907853269984665640564039457584007913129639936) x305)) (+ x305 115792089237316195423570985008687907853269984665640564039457584007913129639936) x305))
(define-fun x184 ((x220 Int)) Bool (and (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 x220) (<= 0 x220)))
(define-fun x108 ((x220 Int)) Bool (and (>= x220 0) (< x220 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(define-fun x68 ((x220 Int)) Bool (and (= (x270 115792089237316195423570985008687907853269984665640564039457584007913129639935 x220) x220) (= x220 (x270 x220 115792089237316195423570985008687907853269984665640564039457584007913129639935))))
(define-fun x235 ((x220 Int)) Bool (and (= 0 (x270 x220 0)) (= 0 (x270 0 x220))))
(define-fun x252 ((x220 Int)) Bool (= x220 (x270 x220 x220)))
(define-fun x363 ((x220 Int)) Bool (and (x235 x220) (x68 x220) (x252 x220)))
(define-fun x19 ((x220 Int)) Bool (= (x270 18446744073709551615 x220) (x270 18446744073709551615 (x270 18446744073709551615 x220))))
(define-fun x169 ((x220 Int)) Bool (=> (and (<= 0 x220) (< x220 18446744073709551616)) (= x220 (x270 18446744073709551615 x220))))
(define-fun x116 ((x220 Int)) Bool (=> (= x220 (x270 18446744073709551615 x220)) (and (>= x220 0) (< x220 18446744073709551616))))
(define-fun x26 ((x220 Int)) Bool (=> (and (<= 18446744073709551616 x220) (< x220 36893488147419103232)) (= (x270 18446744073709551615 x220) (- x220 18446744073709551616))))
(define-fun x194 ((x220 Int) (x246 Int)) Bool (and (<= 0 x246) (= (+ (x270 18446744073709551615 x220) (* 18446744073709551616 x246)) x220)))
(define-fun x399 ((x220 Int) (x198 Int)) Bool (and (x116 x220) (x26 x220) (x169 x220) (x194 x220 x198) (x19 x220)))
(define-fun x58 ((x220 Int) (x246 Int)) Bool (= (x270 x220 x246) (x270 x246 x220)))
(define-fun x8 ((x220 Int) (x246 Int)) Bool (and (=> (>= x246 0) (<= (x270 x220 x246) x246)) (=> (>= x220 0) (<= (x270 x220 x246) x220)) (<= 0 (x270 x220 x246))))
(define-fun x382 ((x220 Int) (x246 Int)) Bool (and (x8 x220 x246) (x58 x220 x246)))
(define-fun x24 ((x220 Int) (x198 Int)) Bool (and (x399 x220 x198) (x382 x220 18446744073709551615)))
(define-fun x378 ((x220 Int)) Bool (= (x270 1099511627775 (x270 1099511627775 x220)) (x270 1099511627775 x220)))
(define-fun x154 ((x220 Int)) Bool (=> (and (< x220 1099511627776) (<= 0 x220)) (= x220 (x270 1099511627775 x220))))
(define-fun x78 ((x220 Int)) Bool (=> (= (x270 1099511627775 x220) x220) (and (>= x220 0) (< x220 1099511627776))))
(define-fun x224 ((x220 Int)) Bool (=> (and (< x220 2199023255552) (>= x220 1099511627776)) (= (- x220 1099511627776) (x270 1099511627775 x220))))
(define-fun x144 ((x220 Int) (x246 Int)) Bool (and (>= x246 0) (= x220 (+ (x270 1099511627775 x220) (* 1099511627776 x246)))))
(define-fun x51 ((x220 Int) (x198 Int)) Bool (and (x78 x220) (x224 x220) (x378 x220) (x144 x220 x198) (x154 x220)))
(define-fun x219 ((x220 Int) (x198 Int)) Bool (and (x51 x220 x198) (x382 x220 1099511627775)))
(define-fun x365 ((x220 Int)) Bool (= (x270 20282409603651670423947251286015 x220) (x270 20282409603651670423947251286015 (x270 20282409603651670423947251286015 x220))))
(define-fun x335 ((x220 Int)) Bool (=> (and (> 20282409603651670423947251286016 x220) (<= 0 x220)) (= (x270 20282409603651670423947251286015 x220) x220)))
(define-fun x330 ((x220 Int)) Bool (=> (= x220 (x270 20282409603651670423947251286015 x220)) (and (> 20282409603651670423947251286016 x220) (>= x220 0))))
(define-fun x81 ((x220 Int)) Bool (=> (and (<= 20282409603651670423947251286016 x220) (< x220 40564819207303340847894502572032)) (= (- x220 20282409603651670423947251286016) (x270 20282409603651670423947251286015 x220))))
(define-fun x327 ((x220 Int) (x246 Int)) Bool (and (= (+ (x270 20282409603651670423947251286015 x220) (* 20282409603651670423947251286016 x246)) x220) (>= x246 0)))
(define-fun x42 ((x220 Int) (x198 Int)) Bool (and (x81 x220) (x330 x220) (x365 x220) (x335 x220) (x327 x220 x198)))
(define-fun x106 ((x220 Int) (x198 Int)) Bool (and (x42 x220 x198) (x382 x220 20282409603651670423947251286015)))
(define-fun x217 ((x220 Int)) Bool (= (x270 115792089237316195423570985008687907853269984665640564039439137263839420088320 (x270 115792089237316195423570985008687907853269984665640564039439137263839420088320 x220)) (x270 115792089237316195423570985008687907853269984665640564039439137263839420088320 x220)))
(define-fun x309 ((x220 Int)) Bool (=> (and (< x220 18446744073709551616) (<= 0 x220)) (= (x270 115792089237316195423570985008687907853269984665640564039439137263839420088320 x220) 0)))
(define-fun x59 ((x220 Int) (x246 Int) (x96 Int) (x166 Int)) Bool (and (= (+ (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 x166) (* 18446744073709551616 x96) x246) x220) (> 6277101735386680763835789423207666416102355444464034512896 x96) (< x246 18446744073709551616) (>= x96 0) (= (x270 115792089237316195423570985008687907853269984665640564039439137263839420088320 x220) (* x96 18446744073709551616)) (<= 0 x246) (< x166 1) (>= x166 0)))
(define-fun x208 ((x220 Int) (x152 Int) (x189 Int) (x65 Int)) Bool (and (x59 x220 x152 x189 x65) (x217 x220) (x309 x220)))
(define-fun x247 ((x220 Int) (x152 Int) (x189 Int) (x65 Int)) Bool (and (x382 x220 115792089237316195423570985008687907853269984665640564039439137263839420088320) (x208 x220 x152 x189 x65)))
(define-fun x290 ((x220 Int)) Bool (= (x270 115792089237316195423570985008687907852929702298719625576012656144555070980095 x220) (x270 115792089237316195423570985008687907852929702298719625576012656144555070980095 (x270 115792089237316195423570985008687907852929702298719625576012656144555070980095 x220))))
(define-fun x25 ((x220 Int)) Bool (=> (and (>= x220 0) (> 18446744073709551616 x220)) (= (x270 115792089237316195423570985008687907852929702298719625576012656144555070980095 x220) x220)))
(define-fun x9 ((x220 Int) (x246 Int) (x96 Int) (x166 Int)) Bool (and (>= x166 0) (= x220 (+ (* x96 18446744073709551616) x246 (* 340282366920938463463374607431768211456 x166))) (> 18446744073709551616 x246) (> 340282366920938463463374607431768211456 x166) (< x96 18446744073709551616) (<= 0 x246) (<= 0 x96) (= (x270 115792089237316195423570985008687907852929702298719625576012656144555070980095 x220) (+ (* 340282366920938463463374607431768211456 x166) x246))))
(define-fun x263 ((x220 Int) (x152 Int) (x189 Int) (x65 Int)) Bool (and (x25 x220) (x290 x220) (x9 x220 x152 x189 x65)))
(define-fun x344 ((x220 Int) (x152 Int) (x189 Int) (x65 Int)) Bool (and (x382 x220 115792089237316195423570985008687907852929702298719625576012656144555070980095) (x263 x220 x152 x189 x65)))
(define-fun x342 ((x220 Int)) Bool (= (x270 340282366920938463444927863358058659840 x220) (x270 340282366920938463444927863358058659840 (x270 340282366920938463444927863358058659840 x220))))
(define-fun x268 ((x220 Int)) Bool (=> (and (> 18446744073709551616 x220) (>= x220 0)) (= 0 (x270 340282366920938463444927863358058659840 x220))))
(define-fun x336 ((x220 Int) (x246 Int) (x96 Int) (x166 Int)) Bool (and (<= 0 x96) (= (* x96 18446744073709551616) (x270 340282366920938463444927863358058659840 x220)) (<= 0 x246) (> 18446744073709551616 x96) (>= x166 0) (= (+ x246 (* x96 18446744073709551616) (* x166 340282366920938463463374607431768211456)) x220) (< x246 18446744073709551616) (< x166 340282366920938463463374607431768211456)))
(define-fun x376 ((x220 Int) (x152 Int) (x189 Int) (x65 Int)) Bool (and (x336 x220 x152 x189 x65) (x268 x220) (x342 x220)))
(define-fun x62 ((x220 Int) (x152 Int) (x189 Int) (x65 Int)) Bool (and (x376 x220 x152 x189 x65) (x382 x220 340282366920938463444927863358058659840)))
(define-fun x282 ((x220 Int)) Bool (= (x270 115792089237316195417293883273301227089774477609353836086818603170880863338495 x220) (x270 115792089237316195417293883273301227089774477609353836086818603170880863338495 (x270 115792089237316195417293883273301227089774477609353836086818603170880863338495 x220))))
(define-fun x357 ((x220 Int)) Bool (=> (and (> 340282366920938463463374607431768211456 x220) (>= x220 0)) (= x220 (x270 115792089237316195417293883273301227089774477609353836086818603170880863338495 x220))))
(define-fun x323 ((x220 Int) (x246 Int) (x96 Int) (x166 Int)) Bool (and (<= 0 x246) (<= 0 x96) (= x220 (+ (* x166 6277101735386680763835789423207666416102355444464034512896) x246 (* x96 340282366920938463463374607431768211456))) (> 340282366920938463463374607431768211456 x246) (>= x166 0) (= (+ (* 6277101735386680763835789423207666416102355444464034512896 x166) x246) (x270 115792089237316195417293883273301227089774477609353836086818603170880863338495 x220)) (< x166 18446744073709551616) (< x96 18446744073709551616)))
(define-fun x69 ((x220 Int) (x152 Int) (x189 Int) (x65 Int)) Bool (and (x282 x220) (x323 x220 x152 x189 x65) (x357 x220)))
(define-fun x231 ((x220 Int) (x152 Int) (x189 Int) (x65 Int)) Bool (and (x382 x220 115792089237316195417293883273301227089774477609353836086818603170880863338495) (x69 x220 x152 x189 x65)))
(define-fun x202 ((x220 Int)) Bool (= (x270 6277101735386680763495507056286727952638980837032266301440 (x270 6277101735386680763495507056286727952638980837032266301440 x220)) (x270 6277101735386680763495507056286727952638980837032266301440 x220)))
(define-fun x362 ((x220 Int)) Bool (=> (and (> 340282366920938463463374607431768211456 x220) (>= x220 0)) (= 0 (x270 6277101735386680763495507056286727952638980837032266301440 x220))))
(define-fun x211 ((x220 Int) (x246 Int) (x96 Int) (x166 Int)) Bool (and (= x220 (+ x246 (* x166 6277101735386680763835789423207666416102355444464034512896) (* x96 340282366920938463463374607431768211456))) (> 18446744073709551616 x166) (< x246 340282366920938463463374607431768211456) (= (* x96 340282366920938463463374607431768211456) (x270 6277101735386680763495507056286727952638980837032266301440 x220)) (<= 0 x166) (> 18446744073709551616 x96) (>= x96 0) (<= 0 x246)))
(define-fun x153 ((x220 Int) (x152 Int) (x189 Int) (x65 Int)) Bool (and (x211 x220 x152 x189 x65) (x362 x220) (x202 x220)))
(define-fun x133 ((x220 Int) (x152 Int) (x189 Int) (x65 Int)) Bool (and (x153 x220 x152 x189 x65) (x382 x220 6277101735386680763495507056286727952638980837032266301440)))
(define-fun x371 ((x220 Int)) Bool (= (x270 6277101735386680763835789423207666416102355444464034512895 (x270 6277101735386680763835789423207666416102355444464034512895 x220)) (x270 6277101735386680763835789423207666416102355444464034512895 x220)))
(define-fun x212 ((x220 Int)) Bool (=> (and (<= 0 x220) (< x220 6277101735386680763835789423207666416102355444464034512896)) (= x220 (x270 6277101735386680763835789423207666416102355444464034512895 x220))))
(define-fun x258 ((x220 Int)) Bool (=> (= (x270 6277101735386680763835789423207666416102355444464034512895 x220) x220) (and (<= 0 x220) (> 6277101735386680763835789423207666416102355444464034512896 x220))))
(define-fun x397 ((x220 Int)) Bool (=> (and (> 12554203470773361527671578846415332832204710888928069025792 x220) (<= 6277101735386680763835789423207666416102355444464034512896 x220)) (= (- x220 6277101735386680763835789423207666416102355444464034512896) (x270 6277101735386680763835789423207666416102355444464034512895 x220))))
(define-fun x115 ((x220 Int) (x246 Int)) Bool (and (= (+ (* 6277101735386680763835789423207666416102355444464034512896 x246) (x270 6277101735386680763835789423207666416102355444464034512895 x220)) x220) (<= 0 x246)))
(define-fun x114 ((x220 Int) (x198 Int)) Bool (and (x115 x220 x198) (x258 x220) (x371 x220) (x212 x220) (x397 x220)))
(define-fun x236 ((x220 Int) (x198 Int)) Bool (and (x382 x220 6277101735386680763835789423207666416102355444464034512895) (x114 x220 x198)))
(define-fun x101 ((x220 Int)) Bool (= (x270 115339776388733340411336991150008259455513788125666651270144861215348056129535 (x270 115339776388733340411336991150008259455513788125666651270144861215348056129535 x220)) (x270 115339776388733340411336991150008259455513788125666651270144861215348056129535 x220)))
(define-fun x97 ((x220 Int)) Bool (=> (and (> 411376139330301510538742295639337626245683966408394965837152256 x220) (>= x220 0)) (= (x270 115339776388733340411336991150008259455513788125666651270144861215348056129535 x220) x220)))
(define-fun x28 ((x220 Int) (x246 Int) (x96 Int) (x166 Int)) Bool (and (<= 0 x166) (<= 0 x246) (= x220 (+ (* 411376139330301510538742295639337626245683966408394965837152256 x96) x246 (* x166 452312848583266388373324160190187140051835877600158453279131187530910662656))) (>= x96 0) (< x246 411376139330301510538742295639337626245683966408394965837152256) (> 1099511627776 x96) (> 256 x166) (= (x270 115339776388733340411336991150008259455513788125666651270144861215348056129535 x220) (+ (* 452312848583266388373324160190187140051835877600158453279131187530910662656 x166) x246))))
(define-fun x104 ((x220 Int) (x152 Int) (x189 Int) (x65 Int)) Bool (and (x101 x220) (x28 x220 x152 x189 x65) (x97 x220)))
(define-fun x407 ((x220 Int) (x152 Int) (x189 Int) (x65 Int)) Bool (and (x104 x220 x152 x189 x65) (x382 x220 115339776388733340411336991150008259455513788125666651270144861215348056129535)))
(define-fun x172 ((x220 Int)) Bool (= (x270 452312848582855012233993858679648397756196539973912769312722792565073510400 (x270 452312848582855012233993858679648397756196539973912769312722792565073510400 x220)) (x270 452312848582855012233993858679648397756196539973912769312722792565073510400 x220)))
(define-fun x79 ((x220 Int)) Bool (=> (and (< x220 411376139330301510538742295639337626245683966408394965837152256) (>= x220 0)) (= 0 (x270 452312848582855012233993858679648397756196539973912769312722792565073510400 x220))))
(define-fun x173 ((x220 Int) (x246 Int) (x96 Int) (x166 Int)) Bool (and (> 256 x166) (< x246 411376139330301510538742295639337626245683966408394965837152256) (< x96 1099511627776) (= (x270 452312848582855012233993858679648397756196539973912769312722792565073510400 x220) (* 411376139330301510538742295639337626245683966408394965837152256 x96)) (>= x246 0) (>= x96 0) (= (+ x246 (* 452312848583266388373324160190187140051835877600158453279131187530910662656 x166) (* 411376139330301510538742295639337626245683966408394965837152256 x96)) x220) (<= 0 x166)))
(define-fun x161 ((x220 Int) (x152 Int) (x189 Int) (x65 Int)) Bool (and (x172 x220) (x173 x220 x152 x189 x65) (x79 x220)))
(define-fun x215 ((x220 Int) (x152 Int) (x189 Int) (x65 Int)) Bool (and (x382 x220 452312848582855012233993858679648397756196539973912769312722792565073510400) (x161 x220 x152 x189 x65)))
(define-fun x71 ((x260 Int)) Int (ite (= x260 0) x395 (x402 x260)))
(define-fun x103 ((x260 Int)) Int (ite (= x260 0) x214 (x343 x260)))
(define-fun x200 ((x260 Int)) Int (ite (= x260 0) x193 (x15 x260)))
(define-fun x302 ((x260 Int)) Int (ite (and x209 x210 x259) (x15 x260) (x200 x260)))
(define-fun x349 ((x260 Int)) Int (ite (= x260 1) x406 (x302 x260)))
(define-fun x126 ((x260 Int)) Int (ite (and x209 (not x210)) (x402 x260) (x349 x260)))
(assert (x363 x32))
(assert (x108 x60))
(assert (x108 x386))
(assert (x108 x297))
(assert (x363 x132))
(assert (x108 x121))
(assert (x108 x4))
(assert (x108 x392))
(assert (x108 x381))
(assert (x108 x102))
(assert (x363 x261))
(assert (x108 x294))
(assert (x108 x203))
(assert (= x332 (=> (and (not (= x141 2799315671)) (not (> 2799315671 x141)) (< 0 x306) (not (< x141 2068668150)) (= x44 (x126 0)) (= x319 x52) (= 3075265556 x141) (= (x10 274184521717934524641157099916833587211) x306) (not (= x141 2834295333)) (not (= x141 2867386960)) (= (x270 18446744073709551615 x44) x319) (not (= 2879910238 x141)) (not (< x141 2661915226)) (< x141 3253611544)) (=> (= x127 x52) x129))))
(assert (x108 x364))
(assert (x108 x196))
(assert (x108 x131))
(assert (x363 452312848582855012233993858679648397756196539973912769312722792565073510400))
(assert (x108 x404))
(assert (x108 x372))
(assert (x363 x190))
(assert (x363 x206))
(assert (x108 x311))
(assert (x231 x128 x310 x150 x191))
(assert (x108 x279))
(assert (x108 x239))
(assert (x108 x352))
(assert (x106 x329 x218))
(assert (x108 x50))
(assert (= x180 x162))
(assert (x363 x321))
(assert (x108 x35))
(assert (x108 x48))
(assert (x108 x339))
(assert (x108 x283))
(assert (x108 x94))
(assert (x108 x325))
(assert (x108 x206))
(assert (x363 x36))
(assert (x108 x61))
(assert (x24 x341 x178))
(assert (x24 x321 x354))
(assert (x108 x193))
(assert (x108 x127))
(assert (x108 x120))
(assert (x363 x47))
(assert (x363 x174))
(assert (x108 x12))
(assert (x108 x319))
(assert (x24 x36 x308))
(assert (x108 x93))
(assert (x108 x298))
(assert (x24 x16 x232))
(assert (x108 x141))
(assert (x108 x267))
(assert (x108 x226))
(assert (x363 115792089237316195417293883273301227089774477609353836086818603170880863338495))
(assert (x108 x287))
(assert (x108 x214))
(assert (x108 x128))
(assert (x108 x256))
(assert (x106 x269 x142))
(assert (x108 x389))
(assert (x106 x284 x262))
(assert (x108 x359))
(assert (x108 x274))
(assert (x106 x190 x353))
(assert (x24 x112 x119))
(assert (x363 x285))
(assert (x108 x36))
(assert (x108 x255))
(assert (x108 x64))
(assert (x108 x17))
(assert (x108 x132))
(assert (x363 x226))
(assert (x108 x3))
(assert (x108 x34))
(assert (x24 x261 x347))
(assert (x108 x280))
(assert (x108 x55))
(assert (x363 6277101735386680763835789423207666416102355444464034512895))
(assert (x108 x291))
(assert (x344 x226 x167 x204 x331))
(assert (x108 x109))
(assert (x108 x370))
(assert (x108 x304))
(assert (x108 x2))
(assert (x106 x47 x377))
(assert (x108 x390))
(assert (x363 x230))
(assert (x108 x13))
(assert (x108 x313))
(assert (x108 x47))
(assert (x108 x295))
(assert (x363 x341))
(assert (x108 x135))
(assert (x108 x329))
(assert (x24 x285 x403))
(assert (x24 x375 x356))
(assert (x24 x121 x89))
(assert (x363 x121))
(assert (x363 x295))
(assert (x363 x44))
(assert (x108 x286))
(assert (x108 x301))
(assert (x108 x175))
(assert (x108 x401))
(assert (x108 x237))
(assert (x108 x395))
(assert (x106 x389 x289))
(assert (x108 x317))
(assert (x363 x93))
(assert (x108 x107))
(assert (= x185 (=> (and (<= 0 x1) (>= 1208925819614629174706175 x216) (<= 0 x149) (= (< 0 (x10 274184521717934524641157099916833587211)) x373) (<= 0 x48) (>= 1461501637330902918203684832716283019655932542975 x265) (<= 0 x339) (>= x216 0) (>= x316 0) (<= x367 1208925819614629174706175) (>= 1461501637330902918203684832716283019655932542975 x251) (>= x346 0) (= x387 (< 0 (x10 274184521717934524641157099916833587221))) (>= x265 0) x373 (<= x1 255) (= (x248 274184521717934524641157099916833587211) x149) (= (x248 274184521717934524641157099916833587223) x316) (>= x251 0) (= x170 (< 0 (x10 274184521717934524641157099916833587223))) (= x151 (x248 274184521717934524641157099916833587221)) (>= 1208925819614629174706175 x339) (>= x367 0) (>= x151 0) (<= x346 255) x170 (<= x48 1208925819614629174706175) x387) x92)))
(assert (x108 x151))
(assert (x108 x360))
(assert (x108 x105))
(assert (x363 x389))
(assert (x108 x125))
(assert (x363 x139))
(assert (x108 x82))
(assert (= x134 x165))
(assert (x363 x64))
(assert (x108 x110))
(assert (x363 x23))
(assert (x363 x135))
(assert (x363 x390))
(assert (x108 x56))
(assert (x108 x98))
(assert (x363 x274))
(assert (= x228 x209))
(assert (x108 x254))
(assert (x24 x23 x348))
(assert (x363 x22))
(assert (x108 x328))
(assert (x108 x46))
(assert (x108 x244))
(assert (x106 x32 x40))
(assert (x108 x269))
(assert (x108 x358))
(assert (= (=> (and (= (x10 274184521717934524641157099916833587211) x326) (= x188 0) (not (= x396 614716962)) (< 0 x326) (= x300 x110) (= x352 x110) (< x110 1099511627776) (>= 1461501637330902918203684832716283019655932542975 x265) (< x396 2068668150) (>= x56 0) (< x396 754029363) (>= x281 0) (<= x281 1461501637330902918203684832716283019655932542975) (= 719963584 x396) (= x56 x125) (> 950698303 x396) (>= 1461501637330902918203684832716283019655932542975 x56) (not (= x396 480214969)) (not (> 480214969 x396)) (<= 0 x265) (not (= x396 641995544))) (=> (= x85 x110) x240)) x117))
(assert (x363 x16))
(assert (x363 x284))
(assert (x108 x222))
(assert (x108 x44))
(assert (x363 x55))
(assert (x363 115792089237316195423570985008687907852929702298719625576012656144555070980095))
(assert (x363 x128))
(assert (x108 x188))
(assert (x106 x206 x266))
(assert (x108 x176))
(assert (x108 x316))
(assert (x108 x54))
(assert (x108 x251))
(assert (x108 x337))
(assert (x24 x274 x57))
(assert (x108 x277))
(assert (x108 x249))
(assert (= x278 x134))
(assert (x108 x6))
(assert (x108 x321))
(assert (x108 x221))
(assert (x108 x355))
(assert (= x137 (x343 0)))
(assert (x363 x360))
(assert (x108 x74))
(assert (x108 x171))
(assert (x108 x45))
(assert (x363 x112))
(assert (x108 x375))
(assert (= (=> (and (not (< x392 2068668150)) (not (= 2834295333 x392)) (= x72 x401) (not (> 2661915226 x392)) (not (< x392 2799315671)) (not (= x392 2799315671)) (< 0 x313) (= (x10 274184521717934524641157099916833587211) x313) (< x392 3253611544) (= (x270 1099511627775 x135) x401) (= x392 2867386960) (= (div x33 411376139330301510538742295639337626245683966408394965837152256) x135) (= (x126 1) x33)) x168) x240))
(assert (x108 x155))
(assert (x108 x346))
(assert (x108 x216))
(assert (x363 6277101735386680763495507056286727952638980837032266301440))
(assert (x108 x341))
(assert (x133 x128 x80 x100 x41))
(assert (x106 x118 x160))
(assert (x108 x288))
(assert (x108 x383))
(assert (x363 x329))
(assert (x108 x285))
(assert (= x92 (=> (and (= x237 x249) (not (< x54 2661915226)) (< 0 x256) (= (x270 18446744073709551615 x139) x237) (not (> 2068668150 x54)) (not (= x54 2867386960)) (= (x10 274184521717934524641157099916833587211) x256) (not (= 2834295333 x54)) (= x54 3075265556) (not (= 2799315671 x54)) (= x139 (x402 0)) (< x54 3253611544) (not (< x54 2799315671)) (not (= 2879910238 x54))) (=> (= x249 x255) x276))))
(assert (x247 x359 x157 x233 x130))
(assert (x108 x380))
(assert (x108 x30))
(assert (x108 x156))
(assert (x108 x306))
(assert (x363 x269))
(assert (x363 x325))
(assert (x108 x33))
(assert (x108 x147))
(assert (x24 x295 x91))
(assert (x108 x366))
(assert (x363 1099511627775))
(assert (x108 x95))
(assert (x108 x186))
(assert (x108 x5))
(assert (x24 x139 x90))
(assert (x24 x64 x75))
(assert (x108 x32))
(assert (x108 x398))
(assert (x24 x230 x314))
(assert (x108 x238))
(assert (x108 x52))
(assert (x108 x122))
(assert (= (=> (and (= x109 (x402 0)) (= x94 (x270 18446744073709551615 x341)) (not (< x267 1168994686)) (= (div x109 18446744073709551616) x341) (not (= 1752364190 x267)) (= x221 x94) (not (> 1507858365 x267)) (= x238 (x10 274184521717934524641157099916833587211)) (not (= 1507858365 x267)) (> 2068668150 x267) (not (> 950698303 x267)) (= x267 2055092157) (not (= x267 1736444767)) (> x238 0)) (=> (and (<= 0 x46) (> 1099511627776 x110) (not (> 3253611544 x312)) (>= x95 0) (< 0 x227) (= (x270 1099511627775 x55) x105) (>= 1461501637330902918203684832716283019655932542975 x95) (= x221 x275) (not (> 3638949393 x312)) (not (= x312 3889878717)) (= x227 (x10 274184521717934524641157099916833587211)) (= x380 (x270 1099511627775 x174)) (not (> 3889878717 x312)) (= x110 x20) (<= 0 x265) (= x95 x125) (<= x265 1461501637330902918203684832716283019655932542975) (= (div x82 411376139330301510538742295639337626245683966408394965837152256) x55) (not (> x105 x110)) (<= x46 1461501637330902918203684832716283019655932542975) (not (< x312 2068668150)) (= x210 (< 0 x380)) (= x82 (x402 1)) (= x188 0) (or (and (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x98 x311)) (= x146 (* x5 x175)) (= (x270 20282409603651670423947251286015 x329) x6) (= x383 x73) (= x123 (* x6 x364)) (= (* x383 x408) x315) (= x147 (x270 115792089237316195423570985008687907853269984665640564039439137263839420088320 x359)) (= (x270 18446744073709551615 x230) x98) (= x192 x274) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x35 x113)) (= x84 (x270 18446744073709551615 x112)) (= (x402 0) x359) (= x408 (x270 18446744073709551615 x36)) (= x381 (x270 115339776388733340411336991150008259455513788125666651270144861215348056129535 x294)) (= x206 (div x31 20282409603651670423947251286016)) (not (> x307 1)) (= (div x145 20282409603651670423947251286016) x360) (= x337 (mod (* x171 18446744073709551616) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (* x6 x364)) (= (* x84 x179) x39) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (* x368 x264)) (= (x402 0) x277) (= x364 (x270 18446744073709551615 x23)) (= (x270 20282409603651670423947251286015 x389) x368) (or (and (= x193 (x14 (+ x186 x27))) (< (+ x283 x13) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= (div x244 6277101735386680763835789423207666416102355444464034512896) x253) (= (div x280 20282409603651670423947251286016) x32) (= x390 (x15 0)) (= (x270 20282409603651670423947251286015 x32) x43) (> x43 0) (= (+ x13 x283) x155) (= (mod (* x155 6277101735386680763835789423207666416102355444464034512896) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x27) (= (x15 0) x244) (= (x270 18446744073709551615 x261) x13) (not x259) (= x261 (div x380 x43)) (<= x155 18446744073709551615) (= x280 (x15 1)) (= x186 (x270 6277101735386680763835789423207666416102355444464034512895 x390)) (= (x270 18446744073709551615 x253) x283)) x259) (= x183 (x270 20282409603651670423947251286015 x269)) (= x112 (div x277 18446744073709551616)) (= (div x254 20282409603651670423947251286016) x47) (= x285 (div x291 18446744073709551616)) (= x5 (x271 (- 1 x307))) (< (* x84 x179) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x77 (x270 20282409603651670423947251286015 x206)) (= x22 (x402 0)) (< (* x5 x175) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= (< x239 x2) x143) (= x4 (x71 0)) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (* x287 x241)) (= (x270 20282409603651670423947251286015 x284) x370) (= x345 (< x239 x175)) (= (x402 1) x329) (= (x402 0) x291) (= x388 x340) (or (and (< (* x328 x156) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x328 (+ x322 x372)) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (* x239 x30)) (< (+ x86 x355) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x213 x355) (= (+ x86 x355) x322) (< (+ x322 x372) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x345 (= x394 x372) (= (x271 (- x175 x239)) x404) (= (* x30 x239) x213) (= x74 x187) (= (* x404 x358) x394) (< (* x404 x358) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (not (< x175 x239)) (= x187 (* x156 x328)) (= x121 x74)) (and (= x121 x297) (< (* x175 x30) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= (+ x86 x242) x296) (= x49 (* x296 x156)) (< (+ x242 x86) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x205 x242) (= x205 (* x175 x30)) (= x297 x49) (not x345) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (* x296 x156)))) (= (x270 18446744073709551615 x121) x176) (= (mod (* x110 411376139330301510538742295639337626245683966408394965837152256) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x3) (= x132 (x402 0)) (= x257 (x270 20282409603651670423947251286015 x340)) (= (* x176 x380) x292) (= x361 (* x264 x368)) (= (x402 1) x254) (= (* x66 x288) x192) (= (x14 (+ x337 x279)) x137) (<= x286 18446744073709551615) (= x311 (x270 18446744073709551615 x325)) (= (+ x113 x35) x286) (= x190 (x343 1)) (= x179 (x270 20282409603651670423947251286015 x47)) (= x259 (< x77 x45)) (= x113 (x270 18446744073709551615 x274)) (= (x14 (+ x381 x3)) x406) (= x36 (div x4 18446744073709551616)) (= x171 (+ x98 x311)) (= x324 (< x320 x45)) (= (x270 115792089237316195423570985008687907852929702298719625576012656144555070980095 x226) x279) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (* x17 x380)) (or (and (= x301 x29) (= (* x30 x239) x393) x143 (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x86 x61)) (= (x271 (- x2 x239)) x122) (< (* x358 x122) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (* x30 x239)) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x102 x301)) (= x61 x393) (= x375 x298) (= x29 (* x122 x358)) (not (< x2 x239)) (= x102 (+ x86 x61)) (= x298 (+ x301 x102))) (and (= x225 x375) (not x143) (= x76 (* x2 x30)) (= (+ x386 x86) x225) (< (* x30 x2) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x86 x386)) (= x76 x386))) (= (x270 18446744073709551615 x375) x17) (= (x270 18446744073709551615 x16) x35) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (* x66 x288)) (= (x402 1) x389) (= x284 x123) (or (and (= x118 (x343 1)) (= x222 (+ x384 x50)) (= x196 (mod (* 340282366920938463463374607431768211456 x222) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= x214 (x14 (+ x107 x196))) (= x12 (x343 0)) (= (x343 0) x128) (not x324) (= x321 (div x380 x317)) (= (x270 115792089237316195417293883273301227089774477609353836086818603170880863338495 x128) x107) (<= x222 18446744073709551615) (= (div x12 340282366920938463463374607431768211456) x64) (= (x270 18446744073709551615 x321) x384) (= x50 (x270 18446744073709551615 x64)) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x50 x384)) (= x317 (x270 20282409603651670423947251286015 x118)) (> x317 0)) x324) (= (x71 0) x226) (= (div x293 18446744073709551616) x325) (= x2 (ite (= x60 0) 0 (div x257 x60))) (= x293 (x71 0)) (= (* x241 x287) x388) (= x60 (x270 20282409603651670423947251286015 x93)) (= x156 x146) x210 (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (* x380 x176)) (= (x270 20282409603651670423947251286015 x360) x287) (= x175 (ite (= x370 0) 0 (div x183 x370))) (= x395 (x14 (+ x286 x147))) (= (x402 1) x145) (< (* x408 x383) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (>= 18446744073709551615 x171) (= x23 (x402 0)) (= (x402 0) x16) (= x292 x288) (= (x270 18446744073709551615 x285) x241) (= x269 x39) (= x361 x93) (= x264 (x270 18446744073709551615 x132)) (= x66 (x270 18446744073709551615 x22)) (= (x15 1) x31) (= (x270 20282409603651670423947251286015 x190) x320) (= (x302 1) x294) (= x315 x230) (= (* x380 x17) x73)) (not x210)) (= 4033150093 x312) (= x174 (x271 (- x110 x105)))) x332)) x276))
(assert (x24 x253 x37))
(assert (x108 x149))
(assert (x108 x84))
(assert (x108 x16))
(assert (x108 x118))
(assert (x108 x23))
(assert (x108 x27))
(assert (x24 x22 x148))
(assert (x108 x145))
(assert (x108 x112))
(assert (x106 x340 x164))
(assert (x108 x322))
(assert (x108 x312))
(assert (x108 x227))
(assert (x108 x406))
(assert (x108 x225))
(assert (= x53 x228))
(assert (= (x343 1) (x71 1)))
(assert (x108 x293))
(assert (x108 x253))
(assert (x363 x359))
(assert (x24 x132 x182))
(assert (= (=> (and (not (< x304 1507858365)) (not (> 1168994686 x304)) (= x338 x398) (not (= 1736444767 x304)) (not (= 1752364190 x304)) (= x338 (x270 18446744073709551615 x295)) (< x304 2068668150) (= x304 2055092157) (not (< x304 950698303)) (= x351 (x126 0)) (< 0 x203) (not (= 1507858365 x304)) (= (div x351 18446744073709551616) x295) (= (x10 274184521717934524641157099916833587211) x203)) (=> (= x398 x199) x117)) x129))
(assert (not x185))
(assert (x363 18446744073709551615))
(assert (= x165 x162))
(assert (x108 x20))
(assert (x108 x296))
(assert (x108 x1))
(assert (x108 x261))
(assert (x108 x230))
(assert (x219 x55 x11))
(assert (x108 x307))
(assert (x363 340282366920938463444927863358058659840))
(assert (= (=> (and (= x366 x255) (= x34 x199) (= x369 (> x34 x131)) (= (or x181 (not x163)) x177) (= x131 x275) (= x70 (> x350 x366)) (= x350 x127) (= x181 (and x369 x70)) (= x163 (< x120 x85)) (= x72 x120)) x177) x168))
(assert (x62 x226 x201 x63 x250))
(assert (x108 x113))
(assert (x106 x360 x99))
(assert (x363 x294))
(assert (x106 x93 x385))
(assert (x108 x264))
(assert (x108 x31))
(assert (x108 x368))
(assert (x236 x390 x333))
(assert (x24 x44 x18))
(assert (x108 x326))
(assert (x363 x118))
(assert (x407 x294 x136 x245 x87))
(assert (x108 x66))
(assert (x108 x396))
(assert (x363 x340))
(assert (x219 x174 x21))
(assert (= x209 x278))
(assert (x108 x242))
(assert (x108 x284))
(assert (x108 x77))
(assert (x108 x350))
(assert (= (ite (and x209 x324 x210) (x343 0) (x103 0)) (x15 0)))
(assert (x108 x300))
(assert (x363 x253))
(assert (= true x53))
(assert (x108 x183))
(assert (x108 x281))
(assert (x108 x275))
(assert (x108 x320))
(assert (x108 x72))
(assert (x108 x43))
(assert (x363 115792089237316195423570985008687907853269984665640564039439137263839420088320))
(assert (x24 x325 x140))
(assert (x108 x241))
(assert (x215 x294 x159 x391 x229))
(assert (x108 x367))
(assert (x108 x338))
(assert (x108 x85))
(assert (x108 x351))
(assert (x108 x265))
(assert (x108 x179))
(assert (= (x15 1) (ite (and x324 x209 x210) (x343 1) (x103 1))))
(assert (x363 x375))
(assert (x108 x139))
(assert (x219 x135 x83))
(assert (x108 x340))
(assert (x108 x199))
(assert (x108 x137))
(assert (x108 x86))
(assert (x108 x257))
(assert (x108 x22))
(assert (x363 115339776388733340411336991150008259455513788125666651270144861215348056129535))
(assert (x108 x174))
(assert (x108 x408))
(assert (x108 x384))
(assert (x363 20282409603651670423947251286015))
(assert (x108 x190))
(check-sat)
