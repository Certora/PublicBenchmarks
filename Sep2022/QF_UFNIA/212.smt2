(set-option :print-success false)
(set-option :produce-models true)
(set-logic QF_UFNIA)
(declare-fun x139 () Int)
(declare-fun x376 () Int)
(declare-fun x231 () Int)
(declare-fun x96 () Bool)
(declare-fun x175 () Int)
(declare-fun x228 () Int)
(declare-fun x141 () Int)
(declare-fun x367 () Int)
(declare-fun x188 () Int)
(declare-fun x286 () Int)
(declare-fun x311 () Int)
(declare-fun x163 () Bool)
(declare-fun x261 () Int)
(declare-fun x136 () Int)
(declare-fun x369 () Int)
(declare-fun x356 () Int)
(declare-fun x270 () Int)
(declare-fun x135 () Int)
(declare-fun x290 () Int)
(declare-fun x59 () Int)
(declare-fun x158 () Bool)
(declare-fun x204 () Int)
(declare-fun x344 () Int)
(declare-fun x114 (Int) Int)
(declare-fun x170 () Int)
(declare-fun x323 () Int)
(declare-fun x312 () Int)
(declare-fun x11 () Int)
(declare-fun x46 (Int) Int)
(declare-fun x239 () Bool)
(declare-fun x202 () Int)
(declare-fun x218 () Int)
(declare-fun x298 () Int)
(declare-fun x74 () Int)
(declare-fun x186 () Int)
(declare-fun x201 () Int)
(declare-fun x10 () Int)
(declare-fun x384 () Int)
(declare-fun x260 () Int)
(declare-fun x372 () Int)
(declare-fun x182 () Int)
(declare-fun x13 () Bool)
(declare-fun x9 () Bool)
(declare-fun x42 () Int)
(declare-fun x268 () Int)
(declare-fun x89 () Int)
(declare-fun x124 () Int)
(declare-fun x250 () Bool)
(declare-fun x105 () Int)
(declare-fun x339 () Int)
(declare-fun x55 () Int)
(declare-fun x148 () Bool)
(declare-fun x146 () Int)
(declare-fun x166 () Int)
(declare-fun x38 () Bool)
(declare-fun x213 () Int)
(declare-fun x183 () Int)
(declare-fun x374 () Bool)
(declare-fun x304 () Int)
(declare-fun x179 () Int)
(declare-fun x156 () Bool)
(declare-fun x370 () Int)
(declare-fun x350 () Int)
(declare-fun x275 () Int)
(declare-fun x102 () Int)
(declare-fun x129 () Int)
(declare-fun x340 () Int)
(declare-fun x94 () Int)
(declare-fun x335 () Int)
(declare-fun x65 () Int)
(declare-fun x79 () Bool)
(declare-fun x77 () Int)
(declare-fun x154 () Int)
(declare-fun x349 (Int) Int)
(declare-fun x361 () Int)
(declare-fun x251 () Bool)
(declare-fun x21 () Int)
(declare-fun x23 () Int)
(declare-fun x221 () Int)
(declare-fun x86 () Int)
(declare-fun x341 () Int)
(declare-fun x306 () Int)
(declare-fun x32 () Bool)
(declare-fun x150 () Int)
(declare-fun x258 () Int)
(declare-fun x266 () Int)
(declare-fun x245 () Int)
(declare-fun x302 () Int)
(declare-fun x288 () Int)
(declare-fun x34 () Int)
(declare-fun x84 () Int)
(declare-fun x58 () Int)
(declare-fun x252 () Int)
(declare-fun x358 () Int)
(declare-fun x331 (Int) Int)
(declare-fun x142 () Int)
(declare-fun x219 () Int)
(declare-fun x165 () Int)
(declare-fun x287 () Int)
(declare-fun x51 () Int)
(declare-fun x171 () Int)
(declare-fun x262 () Bool)
(declare-fun x229 () Int)
(declare-fun x134 () Int)
(declare-fun x87 () Int)
(declare-fun x36 () Int)
(declare-fun x44 (Int) Int)
(declare-fun x233 () Int)
(declare-fun x1 () Int)
(declare-fun x67 () Int)
(declare-fun x118 () Int)
(declare-fun x238 () Bool)
(declare-fun x195 () Int)
(declare-fun x328 () Int)
(declare-fun x17 () Int)
(declare-fun x40 () Int)
(declare-fun x303 () Int)
(declare-fun x368 () Int)
(declare-fun x212 () Bool)
(declare-fun x244 () Int)
(declare-fun x373 () Int)
(declare-fun x187 () Int)
(declare-fun x217 () Int)
(declare-fun x113 () Bool)
(declare-fun x5 () Int)
(declare-fun x8 () Int)
(declare-fun x269 () Int)
(declare-fun x391 () Int)
(declare-fun x30 () Int)
(declare-fun x185 () Bool)
(declare-fun x24 () Int)
(declare-fun x122 () Int)
(declare-fun x224 () Int)
(declare-fun x54 () Int)
(declare-fun x342 () Bool)
(declare-fun x192 () Int)
(declare-fun x20 () Int)
(declare-fun x132 () Int)
(declare-fun x180 () Int)
(declare-fun x25 () Int)
(declare-fun x310 () Int)
(declare-fun x33 () Bool)
(declare-fun x133 () Int)
(declare-fun x249 () Int)
(declare-fun x35 () Int)
(declare-fun x63 () Int)
(declare-fun x109 () Int)
(declare-fun x190 () Int)
(declare-fun x31 () Bool)
(declare-fun x57 () Int)
(declare-fun x338 () Bool)
(declare-fun x207 () Int)
(declare-fun x325 () Bool)
(declare-fun x37 () Int)
(declare-fun x345 () Int)
(declare-fun x363 () Int)
(declare-fun x18 () Int)
(declare-fun x39 () Int)
(declare-fun x277 () Int)
(declare-fun x110 () Int)
(declare-fun x297 () Bool)
(declare-fun x278 () Int)
(declare-fun x271 () Int)
(declare-fun x355 () Int)
(declare-fun x241 () Int)
(declare-fun x316 () Int)
(declare-fun x64 () Int)
(declare-fun x61 () Int)
(declare-fun x62 () Int)
(declare-fun x191 () Bool)
(declare-fun x193 () Bool)
(declare-fun x78 () Int)
(declare-fun x385 () Bool)
(declare-fun x155 () Int)
(declare-fun x276 () Int)
(declare-fun x127 () Int)
(declare-fun x256 () Int)
(declare-fun x301 () Int)
(declare-fun x123 () Int)
(declare-fun x329 () Int)
(declare-fun x160 () Bool)
(declare-fun x29 () Int)
(declare-fun x295 (Int Int) Int)
(declare-fun x352 () Int)
(declare-fun x223 () Int)
(declare-fun x265 () Int)
(declare-fun x283 () Int)
(declare-fun x354 () Int)
(declare-fun x149 () Int)
(declare-fun x14 () Int)
(declare-fun x7 () Int)
(declare-fun x111 () Bool)
(declare-fun x292 () Int)
(declare-fun x138 () Bool)
(declare-fun x330 () Int)
(declare-fun x227 () Int)
(declare-fun x47 () Int)
(declare-fun x189 () Int)
(declare-fun x93 () Int)
(declare-fun x76 () Int)
(declare-fun x360 () Int)
(declare-fun x181 () Int)
(declare-fun x49 () Int)
(declare-fun x299 () Int)
(declare-fun x324 () Int)
(declare-fun x246 () Int)
(declare-fun x387 () Int)
(declare-fun x284 () Int)
(declare-fun x257 () Int)
(declare-fun x144 () Int)
(declare-fun x95 () Bool)
(declare-fun x131 () Bool)
(declare-fun x66 () Int)
(declare-fun x120 () Int)
(declare-fun x314 () Int)
(declare-fun x168 () Int)
(declare-fun x357 () Int)
(declare-fun x198 (Int) Int)
(declare-fun x209 () Int)
(declare-fun x56 () Bool)
(declare-fun x196 () Int)
(declare-fun x390 () Bool)
(declare-fun x43 () Int)
(declare-fun x378 () Int)
(declare-fun x3 () Bool)
(declare-fun x377 () Int)
(declare-fun x172 () Int)
(declare-fun x28 () Int)
(declare-fun x203 () Int)
(declare-fun x255 () Int)
(declare-fun x317 () Bool)
(declare-fun x81 () Int)
(declare-fun x214 () Int)
(declare-fun x366 () Int)
(declare-fun x205 () Int)
(declare-fun x2 () Int)
(declare-fun x104 () Int)
(declare-fun x359 () Int)
(declare-fun x282 () Int)
(declare-fun x137 () Int)
(declare-fun x259 () Int)
(declare-fun x347 () Int)
(declare-fun x173 () Int)
(declare-fun x305 () Bool)
(declare-fun x157 () Bool)
(declare-fun x230 () Int)
(declare-fun x281 () Bool)
(declare-fun x197 (Int Int) Int)
(declare-fun x83 () Int)
(declare-fun x12 () Int)
(declare-fun x71 () Int)
(declare-fun x112 () Bool)
(declare-fun x130 () Int)
(declare-fun x392 () Int)
(declare-fun x272 () Int)
(declare-fun x98 () Int)
(declare-fun x90 () Int)
(declare-fun x226 () Int)
(declare-fun x320 () Int)
(declare-fun x319 () Bool)
(declare-fun x322 () Int)
(declare-fun x315 () Bool)
(declare-fun x162 () Int)
(declare-fun x393 () Int)
(declare-fun x291 () Int)
(declare-fun x332 () Bool)
(declare-fun x235 () Int)
(declare-fun x247 () Int)
(declare-fun x145 () Int)
(declare-fun x52 () Int)
(declare-fun x121 () Int)
(declare-fun x294 () Bool)
(declare-fun x161 () Int)
(declare-fun x75 () Int)
(declare-fun x48 () Int)
(declare-fun x337 () Int)
(declare-fun x100 () Int)
(declare-fun x151 () Int)
(declare-fun x336 () Bool)
(declare-fun x236 () Int)
(declare-fun x240 () Int)
(declare-fun x60 () Int)
(declare-fun x184 () Int)
(declare-fun x386 () Int)
(declare-fun x333 () Int)
(declare-fun x159 () Int)
(declare-fun x279 () Int)
(declare-fun x242 () Int)
(declare-fun x280 () Bool)
(declare-fun x210 () Int)
(declare-fun x50 () Int)
(declare-fun x16 () Int)
(declare-fun x264 () Int)
(declare-fun x309 () Int)
(declare-fun x334 () Int)
(declare-fun x106 () Bool)
(declare-fun x70 () Int)
(declare-fun x232 () Int)
(declare-fun x164 () Int)
(declare-fun x152 () Int)
(declare-fun x220 () Bool)
(declare-fun x346 () Int)
(declare-fun x343 () Bool)
(define-fun x72 ((x99 Int)) Int (ite (and (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 x99) (<= 0 x99)) x99 (- x99 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(define-fun x348 ((x99 Int)) Int (ite (and (< x99 0) (<= (- 115792089237316195423570985008687907853269984665640564039457584007913129639936) x99)) (+ 115792089237316195423570985008687907853269984665640564039457584007913129639936 x99) x99))
(define-fun x178 ((x68 Int)) Bool (and (< x68 115792089237316195423570985008687907853269984665640564039457584007913129639936) (>= x68 0)))
(define-fun x107 ((x68 Int)) Bool (and (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 x68) (<= 0 x68)))
(define-fun x73 ((x68 Int)) Bool (and (= (x197 x68 115792089237316195423570985008687907853269984665640564039457584007913129639935) x68) (= (x197 115792089237316195423570985008687907853269984665640564039457584007913129639935 x68) x68)))
(define-fun x318 ((x68 Int)) Bool (and (= (x197 0 x68) 0) (= (x197 x68 0) 0)))
(define-fun x321 ((x68 Int)) Bool (= (x197 x68 x68) x68))
(define-fun x208 ((x68 Int)) Bool (and (x321 x68) (x73 x68) (x318 x68)))
(define-fun x143 ((x68 Int)) Bool (= (x197 18446744073709551615 (x197 18446744073709551615 x68)) (x197 18446744073709551615 x68)))
(define-fun x174 ((x68 Int)) Bool (=> (and (> 18446744073709551616 x68) (<= 0 x68)) (= (x197 18446744073709551615 x68) x68)))
(define-fun x253 ((x68 Int)) Bool (=> (= (x197 18446744073709551615 x68) x68) (and (>= x68 0) (> 18446744073709551616 x68))))
(define-fun x117 ((x68 Int)) Bool (=> (and (>= x68 18446744073709551616) (< x68 36893488147419103232)) (= (- x68 18446744073709551616) (x197 18446744073709551615 x68))))
(define-fun x267 ((x68 Int) (x140 Int)) Bool (and (= x68 (+ (* x140 18446744073709551616) (x197 18446744073709551615 x68))) (<= 0 x140)))
(define-fun x147 ((x68 Int) (x15 Int)) Bool (and (x253 x68) (x143 x68) (x174 x68) (x267 x68 x15) (x117 x68)))
(define-fun x364 ((x68 Int) (x140 Int)) Bool (= (x197 x140 x68) (x197 x68 x140)))
(define-fun x82 ((x68 Int) (x140 Int)) Bool (and (=> (<= 0 x68) (>= x68 (x197 x68 x140))) (>= (x197 x68 x140) 0) (=> (>= x140 0) (>= x140 (x197 x68 x140)))))
(define-fun x92 ((x68 Int) (x140 Int)) Bool (and (x82 x68 x140) (x364 x68 x140)))
(define-fun x200 ((x68 Int) (x15 Int)) Bool (and (x147 x68 x15) (x92 x68 18446744073709551615)))
(define-fun x85 ((x68 Int)) Bool (= (x197 1099511627775 x68) (x197 1099511627775 (x197 1099511627775 x68))))
(define-fun x248 ((x68 Int)) Bool (=> (and (<= 0 x68) (> 1099511627776 x68)) (= (x197 1099511627775 x68) x68)))
(define-fun x19 ((x68 Int)) Bool (=> (= x68 (x197 1099511627775 x68)) (and (> 1099511627776 x68) (>= x68 0))))
(define-fun x215 ((x68 Int)) Bool (=> (and (< x68 2199023255552) (<= 1099511627776 x68)) (= (- x68 1099511627776) (x197 1099511627775 x68))))
(define-fun x362 ((x68 Int) (x140 Int)) Bool (and (>= x140 0) (= (+ (x197 1099511627775 x68) (* 1099511627776 x140)) x68)))
(define-fun x254 ((x68 Int) (x15 Int)) Bool (and (x85 x68) (x19 x68) (x215 x68) (x248 x68) (x362 x68 x15)))
(define-fun x296 ((x68 Int) (x15 Int)) Bool (and (x92 x68 1099511627775) (x254 x68 x15)))
(define-fun x274 ((x68 Int)) Bool (= (x197 20282409603651670423947251286015 x68) (x197 20282409603651670423947251286015 (x197 20282409603651670423947251286015 x68))))
(define-fun x285 ((x68 Int)) Bool (=> (and (<= 0 x68) (> 20282409603651670423947251286016 x68)) (= x68 (x197 20282409603651670423947251286015 x68))))
(define-fun x379 ((x68 Int)) Bool (=> (= x68 (x197 20282409603651670423947251286015 x68)) (and (>= x68 0) (< x68 20282409603651670423947251286016))))
(define-fun x27 ((x68 Int)) Bool (=> (and (>= x68 20282409603651670423947251286016) (> 40564819207303340847894502572032 x68)) (= (- x68 20282409603651670423947251286016) (x197 20282409603651670423947251286015 x68))))
(define-fun x167 ((x68 Int) (x140 Int)) Bool (and (= x68 (+ (* 20282409603651670423947251286016 x140) (x197 20282409603651670423947251286015 x68))) (>= x140 0)))
(define-fun x53 ((x68 Int) (x15 Int)) Bool (and (x379 x68) (x167 x68 x15) (x274 x68) (x285 x68) (x27 x68)))
(define-fun x375 ((x68 Int) (x15 Int)) Bool (and (x92 x68 20282409603651670423947251286015) (x53 x68 x15)))
(define-fun x108 ((x68 Int)) Bool (= (x197 115792089237316195423570985008687907853269984665640564039439137263839420088320 x68) (x197 115792089237316195423570985008687907853269984665640564039439137263839420088320 (x197 115792089237316195423570985008687907853269984665640564039439137263839420088320 x68))))
(define-fun x263 ((x68 Int)) Bool (=> (and (<= 0 x68) (< x68 18446744073709551616)) (= 0 (x197 115792089237316195423570985008687907853269984665640564039439137263839420088320 x68))))
(define-fun x389 ((x68 Int) (x140 Int) (x225 Int) (x119 Int)) Bool (and (= (* x225 18446744073709551616) (x197 115792089237316195423570985008687907853269984665640564039439137263839420088320 x68)) (<= 0 x140) (< x119 1) (< x140 18446744073709551616) (<= 0 x119) (>= x225 0) (= x68 (+ x140 (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 x119) (* 18446744073709551616 x225))) (< x225 6277101735386680763835789423207666416102355444464034512896)))
(define-fun x351 ((x68 Int) (x126 Int) (x300 Int) (x153 Int)) Bool (and (x263 x68) (x108 x68) (x389 x68 x126 x300 x153)))
(define-fun x381 ((x68 Int) (x126 Int) (x300 Int) (x153 Int)) Bool (and (x92 x68 115792089237316195423570985008687907853269984665640564039439137263839420088320) (x351 x68 x126 x300 x153)))
(define-fun x91 ((x68 Int)) Bool (= (x197 115792089237316195423570985008687907852929702298719625576012656144555070980095 x68) (x197 115792089237316195423570985008687907852929702298719625576012656144555070980095 (x197 115792089237316195423570985008687907852929702298719625576012656144555070980095 x68))))
(define-fun x222 ((x68 Int)) Bool (=> (and (<= 0 x68) (< x68 18446744073709551616)) (= (x197 115792089237316195423570985008687907852929702298719625576012656144555070980095 x68) x68)))
(define-fun x41 ((x68 Int) (x140 Int) (x225 Int) (x119 Int)) Bool (and (= (x197 115792089237316195423570985008687907852929702298719625576012656144555070980095 x68) (+ x140 (* x119 340282366920938463463374607431768211456))) (<= 0 x119) (< x140 18446744073709551616) (= (+ (* 340282366920938463463374607431768211456 x119) (* x225 18446744073709551616) x140) x68) (>= x140 0) (> 18446744073709551616 x225) (<= 0 x225) (< x119 340282366920938463463374607431768211456)))
(define-fun x69 ((x68 Int) (x126 Int) (x300 Int) (x153 Int)) Bool (and (x91 x68) (x41 x68 x126 x300 x153) (x222 x68)))
(define-fun x88 ((x68 Int) (x126 Int) (x300 Int) (x153 Int)) Bool (and (x92 x68 115792089237316195423570985008687907852929702298719625576012656144555070980095) (x69 x68 x126 x300 x153)))
(define-fun x169 ((x68 Int)) Bool (= (x197 340282366920938463444927863358058659840 (x197 340282366920938463444927863358058659840 x68)) (x197 340282366920938463444927863358058659840 x68)))
(define-fun x211 ((x68 Int)) Bool (=> (and (< x68 18446744073709551616) (<= 0 x68)) (= (x197 340282366920938463444927863358058659840 x68) 0)))
(define-fun x176 ((x68 Int) (x140 Int) (x225 Int) (x119 Int)) Bool (and (<= 0 x119) (> 340282366920938463463374607431768211456 x119) (<= 0 x140) (= (+ x140 (* 340282366920938463463374607431768211456 x119) (* 18446744073709551616 x225)) x68) (= (x197 340282366920938463444927863358058659840 x68) (* x225 18446744073709551616)) (< x225 18446744073709551616) (< x140 18446744073709551616) (>= x225 0)))
(define-fun x199 ((x68 Int) (x126 Int) (x300 Int) (x153 Int)) Bool (and (x169 x68) (x211 x68) (x176 x68 x126 x300 x153)))
(define-fun x45 ((x68 Int) (x126 Int) (x300 Int) (x153 Int)) Bool (and (x92 x68 340282366920938463444927863358058659840) (x199 x68 x126 x300 x153)))
(define-fun x101 ((x68 Int)) Bool (= (x197 115792089237316195417293883273301227089774477609353836086818603170880863338495 (x197 115792089237316195417293883273301227089774477609353836086818603170880863338495 x68)) (x197 115792089237316195417293883273301227089774477609353836086818603170880863338495 x68)))
(define-fun x177 ((x68 Int)) Bool (=> (and (< x68 340282366920938463463374607431768211456) (<= 0 x68)) (= x68 (x197 115792089237316195417293883273301227089774477609353836086818603170880863338495 x68))))
(define-fun x125 ((x68 Int) (x140 Int) (x225 Int) (x119 Int)) Bool (and (= (+ (* x225 340282366920938463463374607431768211456) x140 (* x119 6277101735386680763835789423207666416102355444464034512896)) x68) (> 340282366920938463463374607431768211456 x140) (>= x225 0) (<= 0 x119) (<= 0 x140) (= (+ (* 6277101735386680763835789423207666416102355444464034512896 x119) x140) (x197 115792089237316195417293883273301227089774477609353836086818603170880863338495 x68)) (< x119 18446744073709551616) (< x225 18446744073709551616)))
(define-fun x371 ((x68 Int) (x126 Int) (x300 Int) (x153 Int)) Bool (and (x101 x68) (x125 x68 x126 x300 x153) (x177 x68)))
(define-fun x103 ((x68 Int) (x126 Int) (x300 Int) (x153 Int)) Bool (and (x371 x68 x126 x300 x153) (x92 x68 115792089237316195417293883273301227089774477609353836086818603170880863338495)))
(define-fun x308 ((x68 Int)) Bool (= (x197 6277101735386680763495507056286727952638980837032266301440 x68) (x197 6277101735386680763495507056286727952638980837032266301440 (x197 6277101735386680763495507056286727952638980837032266301440 x68))))
(define-fun x273 ((x68 Int)) Bool (=> (and (> 340282366920938463463374607431768211456 x68) (<= 0 x68)) (= (x197 6277101735386680763495507056286727952638980837032266301440 x68) 0)))
(define-fun x293 ((x68 Int) (x140 Int) (x225 Int) (x119 Int)) Bool (and (= x68 (+ (* 340282366920938463463374607431768211456 x225) x140 (* x119 6277101735386680763835789423207666416102355444464034512896))) (>= x140 0) (= (* x225 340282366920938463463374607431768211456) (x197 6277101735386680763495507056286727952638980837032266301440 x68)) (> 18446744073709551616 x119) (>= x225 0) (<= 0 x119) (< x225 18446744073709551616) (> 340282366920938463463374607431768211456 x140)))
(define-fun x365 ((x68 Int) (x126 Int) (x300 Int) (x153 Int)) Bool (and (x273 x68) (x308 x68) (x293 x68 x126 x300 x153)))
(define-fun x97 ((x68 Int) (x126 Int) (x300 Int) (x153 Int)) Bool (and (x365 x68 x126 x300 x153) (x92 x68 6277101735386680763495507056286727952638980837032266301440)))
(define-fun x237 ((x68 Int)) Bool (= (x197 6277101735386680763835789423207666416102355444464034512895 (x197 6277101735386680763835789423207666416102355444464034512895 x68)) (x197 6277101735386680763835789423207666416102355444464034512895 x68)))
(define-fun x194 ((x68 Int)) Bool (=> (and (<= 0 x68) (< x68 6277101735386680763835789423207666416102355444464034512896)) (= (x197 6277101735386680763835789423207666416102355444464034512895 x68) x68)))
(define-fun x4 ((x68 Int)) Bool (=> (= (x197 6277101735386680763835789423207666416102355444464034512895 x68) x68) (and (>= x68 0) (< x68 6277101735386680763835789423207666416102355444464034512896))))
(define-fun x313 ((x68 Int)) Bool (=> (and (<= 6277101735386680763835789423207666416102355444464034512896 x68) (< x68 12554203470773361527671578846415332832204710888928069025792)) (= (- x68 6277101735386680763835789423207666416102355444464034512896) (x197 6277101735386680763835789423207666416102355444464034512895 x68))))
(define-fun x216 ((x68 Int) (x140 Int)) Bool (and (= x68 (+ (* 6277101735386680763835789423207666416102355444464034512896 x140) (x197 6277101735386680763835789423207666416102355444464034512895 x68))) (>= x140 0)))
(define-fun x116 ((x68 Int) (x15 Int)) Bool (and (x237 x68) (x194 x68) (x313 x68) (x216 x68 x15) (x4 x68)))
(define-fun x80 ((x68 Int) (x15 Int)) Bool (and (x92 x68 6277101735386680763835789423207666416102355444464034512895) (x116 x68 x15)))
(define-fun x383 ((x68 Int)) Bool (= (x197 115339776388733340411336991150008259455513788125666651270144861215348056129535 (x197 115339776388733340411336991150008259455513788125666651270144861215348056129535 x68)) (x197 115339776388733340411336991150008259455513788125666651270144861215348056129535 x68)))
(define-fun x115 ((x68 Int)) Bool (=> (and (>= x68 0) (> 411376139330301510538742295639337626245683966408394965837152256 x68)) (= x68 (x197 115339776388733340411336991150008259455513788125666651270144861215348056129535 x68))))
(define-fun x380 ((x68 Int) (x140 Int) (x225 Int) (x119 Int)) Bool (and (= x68 (+ (* x119 452312848583266388373324160190187140051835877600158453279131187530910662656) x140 (* x225 411376139330301510538742295639337626245683966408394965837152256))) (= (x197 115339776388733340411336991150008259455513788125666651270144861215348056129535 x68) (+ (* 452312848583266388373324160190187140051835877600158453279131187530910662656 x119) x140)) (> 256 x119) (<= 0 x225) (<= 0 x119) (> 1099511627776 x225) (>= x140 0) (> 411376139330301510538742295639337626245683966408394965837152256 x140)))
(define-fun x22 ((x68 Int) (x126 Int) (x300 Int) (x153 Int)) Bool (and (x115 x68) (x380 x68 x126 x300 x153) (x383 x68)))
(define-fun x327 ((x68 Int) (x126 Int) (x300 Int) (x153 Int)) Bool (and (x92 x68 115339776388733340411336991150008259455513788125666651270144861215348056129535) (x22 x68 x126 x300 x153)))
(define-fun x289 ((x68 Int)) Bool (= (x197 452312848582855012233993858679648397756196539973912769312722792565073510400 x68) (x197 452312848582855012233993858679648397756196539973912769312722792565073510400 (x197 452312848582855012233993858679648397756196539973912769312722792565073510400 x68))))
(define-fun x382 ((x68 Int)) Bool (=> (and (< x68 411376139330301510538742295639337626245683966408394965837152256) (>= x68 0)) (= (x197 452312848582855012233993858679648397756196539973912769312722792565073510400 x68) 0)))
(define-fun x128 ((x68 Int) (x140 Int) (x225 Int) (x119 Int)) Bool (and (> 256 x119) (= (+ (* 411376139330301510538742295639337626245683966408394965837152256 x225) x140 (* 452312848583266388373324160190187140051835877600158453279131187530910662656 x119)) x68) (= (x197 452312848582855012233993858679648397756196539973912769312722792565073510400 x68) (* x225 411376139330301510538742295639337626245683966408394965837152256)) (>= x119 0) (>= x140 0) (>= x225 0) (> 411376139330301510538742295639337626245683966408394965837152256 x140) (< x225 1099511627776)))
(define-fun x353 ((x68 Int) (x126 Int) (x300 Int) (x153 Int)) Bool (and (x289 x68) (x382 x68) (x128 x68 x126 x300 x153)))
(define-fun x388 ((x68 Int) (x126 Int) (x300 Int) (x153 Int)) Bool (and (x353 x68 x126 x300 x153) (x92 x68 452312848582855012233993858679648397756196539973912769312722792565073510400)))
(define-fun x243 ((x326 Int)) Int (ite (= x326 0) x59 (x198 x326)))
(define-fun x307 ((x326 Int)) Int (ite (= 0 x326) x124 (x114 x326)))
(define-fun x26 ((x326 Int)) Int (ite (= x326 0) x25 (x349 x326)))
(define-fun x206 ((x326 Int)) Int (ite (and x79 x262 x319) (x349 x326) (x26 x326)))
(define-fun x234 ((x326 Int)) Int (ite (= 1 x326) x245 (x206 x326)))
(define-fun x6 ((x326 Int)) Int (ite (and x319 (not x262)) (x198 x326) (x234 x326)))
(assert (x107 x302))
(assert (= x112 x325))
(assert (x80 x207 x139))
(assert (x107 x161))
(assert (x208 x334))
(assert (x107 x275))
(assert (x107 x159))
(assert (x296 x36 x10))
(assert (x200 x51 x184))
(assert (x107 x180))
(assert (x107 x74))
(assert (x208 x260))
(assert (x107 x186))
(assert (x208 18446744073709551615))
(assert (= (=> (and (= (x197 18446744073709551615 x244) x195) (= x228 (x6 0)) (< x144 2059964113) (= x144 2055092157) (= x339 x195) (not (> 1157571613 x144)) (not (= 1507858365 x144)) (= x57 (x44 274184521717934524641157099916833587211)) (not (= x144 1752364190)) (not (< x144 1490534272)) (not (= 1736444767 x144)) (not (= x144 1490534272)) (not (> 840395849 x144)) (= x244 (div x228 18446744073709551616)) (> x57 0)) x106) x138))
(assert (x107 x366))
(assert (x107 x227))
(assert (x107 x7))
(assert (x107 x210))
(assert (x107 x335))
(assert (x107 x124))
(assert (x200 x168 x78))
(assert (x208 20282409603651670423947251286015))
(assert (x107 x16))
(assert (x107 x145))
(assert (x208 x223))
(assert (x107 x276))
(assert (= x319 x325))
(assert (x200 x247 x345))
(assert (x107 x372))
(assert (= x251 true))
(assert (x107 x77))
(assert (x107 x291))
(assert (x107 x188))
(assert (x107 x392))
(assert (x107 x257))
(assert (x107 x333))
(assert (x107 x226))
(assert (x107 x35))
(assert (x200 x129 x93))
(assert (x107 x59))
(assert (x107 x341))
(assert (x200 x121 x344))
(assert (x107 x154))
(assert (x107 x309))
(assert (= x111 (=> (and (not (= x358 1752364190)) (= (x44 274184521717934524641157099916833587211) x312) (= x290 x14) (not (> 840395849 x358)) (not (= x358 1507858365)) (not (= 1490534272 x358)) (= x358 2055092157) (= (x197 18446744073709551615 x346) x14) (not (> 1157571613 x358)) (= x52 (x198 0)) (> 2059964113 x358) (< 0 x312) (= (div x52 18446744073709551616) x346) (not (> 1490534272 x358)) (not (= x358 1736444767))) (=> (and (= x260 (div x282 411376139330301510538742295639337626245683966408394965837152256)) (<= 0 x58) (= 4033150093 x49) (<= x214 1461501637330902918203684832716283019655932542975) (= x159 (x44 274184521717934524641157099916833587211)) (> 1099511627776 x83) (not (< x49 3889878717)) (not (> x356 x83)) (>= 1461501637330902918203684832716283019655932542975 x58) (= x74 x290) (not (< x49 3122421376)) (>= x214 0) (= x17 0) (not (= 3889878717 x49)) (= x262 (> x37 0)) (= x356 (x197 1099511627775 x260)) (= (x197 1099511627775 x36) x37) (= x214 x387) (not (> 3638949393 x49)) (>= x258 0) (or (and (= (x206 1) x7) (= x191 (> x259 x203)) (= x334 (div x75 20282409603651670423947251286016)) (= (div x224 18446744073709551616) x314) (= (x197 18446744073709551615 x129) x302) (= (div x386 18446744073709551616) x333) (not (> x43 18446744073709551615)) (= (x197 115339776388733340411336991150008259455513788125666651270144861215348056129535 x7) x86) (= x50 (+ x43 x257)) (= (* x316 x368) x34) (= x51 (x198 0)) (= (mod (* x18 18446744073709551616) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x227) (= (div x354 1000000000000000) x84) (= x137 (x197 20282409603651670423947251286015 x223)) (= x393 x136) (= x347 (x197 20282409603651670423947251286015 x334)) (= x330 (x197 20282409603651670423947251286015 x335)) (= x393 (* x161 x37)) (= x187 (x198 0)) (= x43 (div x171 1000000000000000000)) (not (< 1000000000000000000 x350)) (= x386 (x198 0)) (< (* x235 x37) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (or (and (= 0 x363) x148) (and (= x66 (div x164 x231)) (not x148) (= x164 (* 1000000000000000000 x330)) (= x66 x363) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (* 1000000000000000000 x330)))) (= x76 (div x63 1000000000000000)) (= x166 (x197 20282409603651670423947251286015 x76)) (= x361 x12) (= (x198 0) x310) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (* x37 x161)) (= (x198 1) x223) (= (div x65 18446744073709551616) x104) (or (and (= x270 (x197 20282409603651670423947251286015 x384)) (< (* x276 x123) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= (x114 0) x35) (= x384 (x114 1)) (< (* x154 x37) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (not x191) (= x173 (x114 0)) (>= 18446744073709551615 x70) (= x130 (div x132 x270)) (= x124 (x72 (+ x265 x229))) (= (div x173 340282366920938463463374607431768211456) x121) (= (mod (* x70 340282366920938463463374607431768211456) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x265) (= (* x123 x276) x132) (= x276 x21) (= x21 (* x154 x37)) (< (+ x210 x130) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (not (> x130 18446744073709551615)) (= x70 (+ x210 x130)) (= x210 (x197 18446744073709551615 x121)) (= x229 (x197 115792089237316195417293883273301227089774477609353836086818603170880863338495 x35)) (< 0 x270)) x191) (= x391 (x197 20282409603651670423947251286015 x277)) (< (* x376 x391) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (* x361 x378)) (< (+ x299 x230) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x162 (div x34 1000000000000000000)) (= (x72 (+ x227 x42)) x352) (= (x197 115792089237316195423570985008687907853269984665640564039439137263839420088320 x310) x268) (= x299 (x197 18446744073709551615 x314)) (= (* x376 x391) x354) (>= 18446744073709551615 x18) (= x110 (* x361 x378)) (= x213 (x198 0)) (= x376 (x197 18446744073709551615 x20)) (= (x197 20282409603651670423947251286015 x279) x67) (= x12 (* x235 x37)) (= x378 (x197 18446744073709551615 x104)) (= (mod (* x83 411376139330301510538742295639337626245683966408394965837152256) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x152) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (* x347 x302)) (= (x198 1) x242) (= x89 (* x302 x347)) (= x203 (x197 20282409603651670423947251286015 x202)) (= (> x363 x175) x281) (not (> x230 18446744073709551615)) (= x65 (x243 0)) (= x196 (div x155 1000000000000000)) (or (and (not x38) (= x100 (div x283 x232)) (< (* x166 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= (* x166 1000000000000000000) x283) (= x100 x368)) (and x38 (= 0 x368))) (< (* x252 x137) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x79 (< x11 x259)) (= (x243 0) x224) (= (x348 (- 1000000000000000000 x350)) x316) (= (= x232 0) x38) (= (x349 1) x337) (= x42 (x197 115792089237316195423570985008687907852929702298719625576012656144555070980095 x311)) x262 (= (div x110 1000000000000000000) x230) (< (* x316 x368) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x11 (x197 20282409603651670423947251286015 x55)) (or (and (= x235 x170) (= (+ x71 x240) x30) (not (< 18446744073709551615 x170)) (= (x348 (- x363 x175)) x340) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (* x340 x81)) (= x24 (* x340 x81)) (= x219 (* x109 x175)) x281 (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x30 x165)) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x71 x240)) (not (< x363 x175)) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (* x175 x109)) (= x165 (div x24 1000000000000000000)) (= x71 (div x219 1000000000000000000)) (= x170 (+ x165 x30))) (and (not (> x172 18446744073709551615)) (= (div x40 1000000000000000000) x255) (= (* x109 x363) x40) (not x281) (= x172 x235) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (* x363 x109)) (= (+ x240 x255) x172) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x240 x255)))) (= x59 (x72 (+ x50 x268))) (= (* x252 x137) x155) (= (= x231 0) x148) (= x202 (x114 1)) (= x232 (x197 20282409603651670423947251286015 x196)) (= (div x242 20282409603651670423947251286016) x279) (= x171 (* x271 x136)) (or x79 (and (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x304 x357)) (= x25 (x72 (+ x249 x135))) (= (x349 0) x320) (= (x349 1) x328) (= x205 (x197 20282409603651670423947251286015 x236)) (< (* x284 x123) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (>= 18446744073709551615 x151) (= x369 (div x320 6277101735386680763835789423207666416102355444464034512896)) (= (x197 6277101735386680763835789423207666416102355444464034512895 x207) x135) (not x79) (not (< 18446744073709551615 x304)) (= (x197 18446744073709551615 x369) x357) (= (mod (* 6277101735386680763835789423207666416102355444464034512896 x151) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x249) (< (* x141 x37) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x54 (* x284 x123)) (= (div x328 20282409603651670423947251286016) x236) (= x60 x284) (= x304 (div x54 x205)) (= (* x141 x37) x60) (= x151 (+ x304 x357)) (= (x349 0) x207) (< 0 x205))) (<= x50 18446744073709551615) (= x245 (x72 (+ x152 x86))) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x43 x257)) (or (and (= x94 (+ x240 x233)) (= x204 (* x368 x109)) (< (+ x233 x240) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x161 x226) (= x226 (div x149 1000000000000000000)) (not (< 18446744073709551615 x226)) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (* x109 x368)) (< (* x94 x162) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (not x160) (= x149 (* x162 x94)) (= x233 (div x204 1000000000000000000))) (and (= x291 x161) (< (* x81 x5) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (< (* x162 x180) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x5 (x348 (- x368 x175))) (= x261 (div x189 1000000000000000000)) (= (* x162 x180) x28) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x48 x261)) (= (+ x261 x48) x180) (< (+ x240 x39) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (not (> x291 18446744073709551615)) (= x301 (* x109 x175)) (not (> x175 x368)) (= x39 (div x301 1000000000000000000)) (= (div x28 1000000000000000000) x291) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (* x175 x109)) (= (* x81 x5) x189) x160 (= (+ x39 x240) x48))) (= x20 (x198 0)) (= x335 (div x89 1000000000000000)) (= (x197 18446744073709551615 x333) x16) (= x311 (x243 0)) (= x129 (div x187 18446744073709551616)) (< (* x271 x136) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= (x197 20282409603651670423947251286015 x84) x231) (= (x197 18446744073709551615 x247) x257) (= x18 (+ x299 x230)) (= x55 (div x337 20282409603651670423947251286016)) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (* x67 x16)) (= (* x16 x67) x63) (= (x198 1) x75) (= x160 (< x175 x368)) (= x277 (x198 1)) (= x247 (x198 0)) (= x271 (x197 18446744073709551615 x213)) (= (x197 18446744073709551615 x51) x252)) (not x262)) (= x36 (x348 (- x83 x356))) (= (x198 1) x282) (= x192 x83) (< 0 x159) (not (> 2059964113 x49)) (>= 1461501637330902918203684832716283019655932542975 x258)) x332))))
(assert (x107 x244))
(assert (x107 x17))
(assert (x107 x369))
(assert (x107 x277))
(assert (x107 x299))
(assert (x107 x67))
(assert (x107 x151))
(assert (x208 x51))
(assert (x107 x172))
(assert (x107 x232))
(assert (x107 x207))
(assert (x107 x51))
(assert (x208 340282366920938463444927863358058659840))
(assert (= (x114 0) x352))
(assert (x107 x259))
(assert (x107 x104))
(assert (x107 x363))
(assert (x208 x207))
(assert (x208 6277101735386680763835789423207666416102355444464034512895))
(assert (x375 x223 x133))
(assert (x381 x310 x201 x367 x287))
(assert (x375 x84 x1))
(assert (x107 x36))
(assert (x200 x346 x306))
(assert (x107 x339))
(assert (x107 x83))
(assert (x208 x7))
(assert (x107 x350))
(assert (x107 x252))
(assert (x107 x311))
(assert (x208 115792089237316195423570985008687907853269984665640564039439137263839420088320))
(assert (x375 x196 x118))
(assert (x107 x284))
(assert (x107 x94))
(assert (x107 x71))
(assert (x208 452312848582855012233993858679648397756196539973912769312722792565073510400))
(assert (x200 x20 x181))
(assert (x107 x136))
(assert (x107 x49))
(assert (x375 x277 x102))
(assert (x327 x7 x373 x324 x190))
(assert (x107 x328))
(assert (x208 x244))
(assert (not x31))
(assert (x107 x228))
(assert (x200 x244 x8))
(assert (x208 x20))
(assert (x107 x223))
(assert (= (x349 0) (ite (and x191 x319 x262) (x114 0) (x307 0))))
(assert (= (=> (and (>= x264 0) (<= 0 x142) (= x134 (x46 274184521717934524641157099916833587223)) (>= 255 x372) (>= 1208925819614629174706175 x355) (>= 255 x366) x113 (>= x366 0) (<= 0 x372) (>= x134 0) (= (x46 274184521717934524641157099916833587211) x209) (>= 1208925819614629174706175 x188) (= x374 (< 0 (x44 274184521717934524641157099916833587211))) x390 (= (> (x44 274184521717934524641157099916833587221) 0) x113) (>= x58 0) (<= 0 x209) (>= x188 0) (= (< 0 (x44 274184521717934524641157099916833587223)) x390) (>= x150 0) (>= 1208925819614629174706175 x150) x374 (<= 0 x309) (>= x355 0) (<= x142 1208925819614629174706175) (= (x46 274184521717934524641157099916833587221) x264) (>= 1461501637330902918203684832716283019655932542975 x309) (<= x58 1461501637330902918203684832716283019655932542975)) x294) x31))
(assert (x208 x84))
(assert (x208 x104))
(assert (x208 x246))
(assert (x107 x187))
(assert (x107 x42))
(assert (= x319 x385))
(assert (x107 x39))
(assert (x107 x255))
(assert (x208 x202))
(assert (x208 x168))
(assert (x107 x260))
(assert (x107 x268))
(assert (x107 x316))
(assert (x107 x358))
(assert (x208 x121))
(assert (x200 x213 x23))
(assert (x107 x279))
(assert (x208 x346))
(assert (x107 x43))
(assert (x107 x30))
(assert (x107 x361))
(assert (x107 x387))
(assert (x107 x50))
(assert (x107 x391))
(assert (x375 x279 x105))
(assert (x107 x265))
(assert (x107 x346))
(assert (x208 115792089237316195423570985008687907852929702298719625576012656144555070980095))
(assert (x97 x35 x47 x62 x64))
(assert (x107 x247))
(assert (x208 115792089237316195417293883273301227089774477609353836086818603170880863338495))
(assert (= (ite (and x191 x262 x319) (x114 1) (x307 1)) (x349 1)))
(assert (x107 x242))
(assert (x107 x270))
(assert (= (=> (and (not (< x266 2531764673)) (not (= x266 2834295333)) (not (> 2059964113 x266)) (> x179 0) (not (= x266 2879910238)) (= (x197 18446744073709551615 x246) x61) (not (= 2799315671 x266)) (not (= 2758797371 x266)) (= x266 3075265556) (= x246 (x198 0)) (> 3122421376 x266) (not (= 2867386960 x266)) (= x145 x61) (= (x44 274184521717934524641157099916833587211) x179) (not (< x266 2758797371))) (=> (= x145 x127) x111)) x294))
(assert (x107 x127))
(assert (x208 6277101735386680763495507056286727952638980837032266301440))
(assert (x107 x230))
(assert (x107 x48))
(assert (x107 x98))
(assert (x107 x168))
(assert (x107 x355))
(assert (x208 x369))
(assert (x107 x282))
(assert (x208 x314))
(assert (x107 x249))
(assert (x107 x57))
(assert (x107 x213))
(assert (x107 x322))
(assert (x107 x205))
(assert (x107 x258))
(assert (x107 x340))
(assert (x107 x66))
(assert (x208 115339776388733340411336991150008259455513788125666651270144861215348056129535))
(assert (x107 x86))
(assert (x107 x240))
(assert (x107 x261))
(assert (x107 x376))
(assert (x107 x229))
(assert (x107 x320))
(assert (x107 x25))
(assert (x107 x5))
(assert (x107 x195))
(assert (x200 x314 x218))
(assert (x107 x37))
(assert (x107 x266))
(assert (x107 x123))
(assert (x107 x386))
(assert (x107 x192))
(assert (x375 x334 x303))
(assert (x388 x7 x269 x221 x286))
(assert (x375 x384 x370))
(assert (x375 x236 x256))
(assert (x208 x129))
(assert (x107 x14))
(assert (x107 x352))
(assert (x107 x209))
(assert (x208 x311))
(assert (= (=> (and (= x339 x392) (= x341 x322) (= x77 x127) (= (<= x77 x341) x280)) (and (=> (and (= x74 x87) (= x95 (>= x186 x87)) (= x186 x392)) x95) x280)) x106))
(assert (x107 x165))
(assert (x107 x20))
(assert (x107 x109))
(assert (x208 x279))
(assert (x200 x369 x360))
(assert (x208 x384))
(assert (x208 1099511627775))
(assert (x107 x121))
(assert (x107 x52))
(assert (x107 x271))
(assert (x208 x213))
(assert (x107 x330))
(assert (x107 x75))
(assert (x208 x76))
(assert (x107 x246))
(assert (x107 x141))
(assert (x107 x142))
(assert (x107 x202))
(assert (x107 x337))
(assert (x107 x384))
(assert (x107 x203))
(assert (= (=> (and (not (= x2 2799315671)) (< 0 x275) (not (< x2 2531764673)) (> 3122421376 x2) (= x2 3075265556) (= (x6 0) x168) (= x122 x98) (not (< x2 2059964113)) (= (x197 18446744073709551615 x168) x122) (= (x44 274184521717934524641157099916833587211) x275) (not (= 2879910238 x2)) (not (< x2 2758797371)) (not (= 2834295333 x2)) (not (= 2867386960 x2)) (not (= x2 2758797371))) (=> (= x98 x322) x138)) x332))
(assert (x208 x277))
(assert (x107 x84))
(assert (x107 x134))
(assert (x107 x214))
(assert (x375 x335 x323))
(assert (x107 x122))
(assert (x107 x166))
(assert (x208 x196))
(assert (x107 x81))
(assert (x107 x235))
(assert (x107 x175))
(assert (x107 x264))
(assert (= x112 x336))
(assert (x45 x311 x146 x120 x241))
(assert (x107 x347))
(assert (x107 x65))
(assert (x107 x70))
(assert (= (x114 1) (x243 1)))
(assert (x200 x246 x292))
(assert (x107 x144))
(assert (x208 x310))
(assert (x107 x170))
(assert (x103 x35 x90 x183 x288))
(assert (x107 x87))
(assert (x200 x104 x278))
(assert (x107 x290))
(assert (x375 x202 x272))
(assert (x107 x231))
(assert (x107 x334))
(assert (x208 x236))
(assert (x107 x130))
(assert (x107 x310))
(assert (x88 x311 x217 x377 x359))
(assert (x107 x137))
(assert (x375 x55 x329))
(assert (x208 x36))
(assert (x107 x61))
(assert (x107 x179))
(assert (x107 x304))
(assert (x107 x18))
(assert (x107 x58))
(assert (x107 x173))
(assert (= x385 x251))
(assert (x107 x224))
(assert (x107 x55))
(assert (x107 x135))
(assert (x107 x368))
(assert (x107 x76))
(assert (x107 x236))
(assert (x208 x55))
(assert (x375 x76 x29))
(assert (x107 x357))
(assert (x107 x378))
(assert (x107 x11))
(assert (x107 x196))
(assert (x107 x314))
(assert (x208 x333))
(assert (x107 x150))
(assert (x296 x260 x298))
(assert (x208 x35))
(assert (x200 x333 x182))
(assert (x107 x356))
(assert (x208 x247))
(assert (x208 x335))
(assert (x107 x2))
(assert (x107 x129))
(assert (x107 x233))
(assert (x107 x152))
(assert (x107 x100))
(assert (x107 x245))
(assert (x107 x312))
(assert (x107 x162))
(check-sat)
